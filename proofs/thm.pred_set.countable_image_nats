Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.pred_set
% (76458)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 580
% Passive clauses: 8922
% Generated clauses: 17515
% Final active clauses: 577
% Final passive clauses: 7862
% Input formulas: 39
% Initial clauses: 157
% 
% Duplicate literals: 298
% Trivial inequalities: 61
% Fw subsumption resolutions: 1647
% Fw demodulations: 157
% Bw demodulations: 2
% 
% Simple tautologies: 187
% Equational tautologies: 56
% Forward subsumptions: 5697
% 
% Binary resolution: 9961
% Factoring: 1095
% Forward superposition: 1814
% Backward superposition: 2106
% Self superposition: 34
% Equality factoring: 34
% Equality resolution: 17
% 
% Split clauses: 551
% Split components: 1110
% SAT solver clauses: 832
% SAT solver unit clauses: 16
% SAT solver binary clauses: 148
% 
% Sat splits: 551
% 
% TWLsolver clauses: 832
% TWLsolver calls for satisfiability: 357
% 
% Memory used [KB]: 8955
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.pred_set
% (76477)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 368
% Passive clauses: 2414
% Generated clauses: 10166
% Final active clauses: 352
% Final passive clauses: 1772
% Input formulas: 39
% Initial clauses: 157
% 
% Duplicate literals: 171
% Trivial inequalities: 26
% Fw subsumption resolutions: 753
% Fw demodulations: 388
% Bw demodulations: 289
% Condensations: 233
% Global subsumptions: 14
% 
% Simple tautologies: 203
% Equational tautologies: 18
% Forward subsumptions: 3232
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 3473
% Factoring: 200
% Forward superposition: 754
% Backward superposition: 1193
% Self superposition: 24
% Equality factoring: 28
% Equality resolution: 5
% 
% Split clauses: 26
% Split components: 52
% SAT solver clauses: 2869
% SAT solver unit clauses: 174
% SAT solver binary clauses: 69
% SAT solver learnt clauses: 28
% SAT solver learnt literals: 12
% 
% Sat splits: 26
% 
% TWLsolver clauses: 2813
% TWLsolver calls for satisfiability: 1550
% 
% Memory used [KB]: 11385
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.pred_set
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pred_set
% SZS output start Proof for thm.pred_set
fof(f51585,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1413,f1418,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2139,f2146,f2063,f2148,f2067,f2150,f2070,f2152,f2073,f2154,f2076,f2156,f2079,f2158,f2082,f2160,f2085,f2162,f2088,f2164,f2091,f2166,f2094,f2168,f2097,f2170,f2100,f2172,f2103,f2174,f2106,f2178,f1887,f1781,f2180,f2140,f1675,f1597,f2181,f1416,f1415,f2340,f2341,f2349,f2351,f2353,f2355,f2357,f2359,f2361,f2363,f2365,f2367,f2369,f2371,f2373,f2375,f2377,f2379,f2381,f2387,f5338,f5341,f5339,f5352,f5353,f5354,f5355,f5356,f5357,f5358,f5359,f5360,f5361,f5362,f5363,f5364,f5365,f5366,f5367,f5368,f5369,f5370,f5371,f5372,f5373,f5374,f5375,f5376,f5377,f5378,f5379,f5380,f5381,f5382,f5383,f5384,f5385,f5386,f5387,f5388,f5389,f5390,f5391,f5392,f5393,f5394,f5395,f5396,f5397,f5398,f5399,f5400,f5401,f5402,f6357,f6360,f6362,f6365,f6369,f6373,f6643,f6644,f6649,f6650,f6651,f6652,f6653,f6654,f6655,f6656,f6657,f6658,f6659,f6660,f6661,f6662,f6663,f6664,f6665,f6666,f6667,f6668,f6670,f6672,f6673,f6674,f6675,f6676,f6677,f6678,f6679,f6680,f6681,f6682,f6683,f6684,f6685,f6686,f6687,f6688,f6689,f6690,f6691,f6692,f6693,f6694,f6695,f6696,f6697,f6698,f6699,f6700,f6701,f6702,f6703,f6704,f6705,f6706,f6707,f6708,f6709,f6710,f6714,f6716,f6718,f6720,f6722,f6724,f6726,f6728,f6730,f6732,f6734,f6736,f6738,f6740,f6742,f6744,f6746,f6752,f6754,f6757,f6769,f6772,f6775,f11490,f11491,f11492,f11493,f11501,f11503,f11505,f11511,f11513,f11515,f11517,f11519,f11521,f11525,f11527,f11529,f11531,f11533,f11535,f11537,f11539,f11551,f11553,f11565,f11567,f11574,f11581,f11585,f11587,f11591,f11593,f11604,f11626,f11662,f11664,f11717,f11719,f11721,f11724,f11726,f11731,f11733,f11738,f11740,f11750,f11752,f11756,f11758,f11777,f11780,f11782,f11785,f11787,f11791,f11793,f11809,f11811,f11813,f11818,f11820,f11822,f11867,f11877,f11890,f11900,f11902,f11915,f11925,f11938,f11948,f11950,f11952,f11954,f11956,f12742,f12743,f11978,f11980,f11982,f11984,f11987,f11989,f11991,f11993,f12015,f12017,f12019,f12021,f12023,f12025,f12037,f12049,f12069,f12071,f12094,f12096,f12098,f12109,f12111,f12113,f12122,f12124,f12133,f12135,f12144,f12146,f12155,f12157,f12171,f12184,f12200,f12202,f12215,f12217,f12219,f12250,f12252,f12254,f12256,f12258,f12279,f12282,f12303,f12306,f12323,f12325,f12341,f12343,f12345,f12357,f12368,f12379,f12381,f12392,f12394,f12407,f12420,f12435,f12448,f12459,f12461,f12463,f12465,f12467,f12477,f12479,f12481,f12483,f12485,f12488,f12491,f12497,f12500,f12506,f12509,f12517,f12520,f12524,f12531,f12538,f12540,f12542,f12548,f12550,f12556,f12558,f12563,f12565,f12570,f12572,f12574,f12576,f12581,f12583,f12585,f12588,f12590,f12594,f12596,f12598,f12601,f12606,f12611,f12620,f12622,f12627,f12629,f12634,f12636,f12648,f12656,f12659,f12667,f12670,f12688,f12691,f12744,f12745,f12746,f13104,f13105,f13106,f13112,f13113,f13137,f13145,f13146,f13147,f13148,f13149,f13150,f13151,f13153,f13154,f13155,f13156,f13157,f13158,f13159,f13161,f13162,f13163,f13164,f13165,f13166,f13167,f13168,f13169,f13170,f13171,f13172,f13173,f13174,f13175,f13176,f13177,f13178,f13179,f13180,f13181,f13182,f13183,f13184,f13185,f13186,f13187,f13188,f13189,f13190,f13191,f13192,f13193,f13194,f13195,f13196,f13197,f13198,f13199,f13200,f13201,f13202,f13203,f13204,f13205,f13206,f13207,f13208,f13209,f13210,f13211,f13212,f13213,f13214,f13215,f13216,f13217,f13218,f13219,f13220,f13221,f13222,f13223,f13224,f13225,f13226,f13227,f13228,f13229,f13230,f13231,f13232,f13233,f13234,f13235,f13236,f13237,f13238,f13239,f13240,f13241,f13242,f13243,f13244,f13245,f13246,f13247,f13248,f13249,f13250,f13251,f13252,f13253,f13254,f13255,f13256,f13257,f13258,f13259,f13260,f13261,f13262,f13263,f13264,f13265,f13266,f13267,f13268,f13269,f13270,f13271,f13272,f13273,f13274,f13275,f13292,f13294,f13296,f13300,f13302,f13304,f13305,f13306,f13307,f13308,f13309,f13310,f13311,f13312,f13313,f13314,f13315,f13316,f13317,f13318,f13319,f13320,f13321,f13322,f13323,f13324,f13325,f13326,f13327,f13328,f13329,f13330,f13331,f13332,f13335,f13336,f13337,f13338,f13339,f13340,f13341,f13342,f13343,f13344,f13345,f13346,f13347,f13349,f13350,f13351,f13352,f13353,f13354,f13355,f13356,f13357,f13358,f13359,f13361,f13362,f13363,f13364,f13365,f13366,f13367,f13368,f13369,f13370,f13371,f13372,f13373,f13374,f13375,f13376,f13377,f13378,f13379,f13380,f13383,f13384,f13385,f13386,f13387,f13388,f13389,f13390,f13391,f13392,f13393,f13394,f13395,f13396,f13397,f13398,f13399,f13400,f13401,f13402,f13403,f13404,f13405,f13406,f13407,f13408,f13409,f13410,f13411,f13412,f13413,f13414,f13415,f13416,f13417,f13418,f13419,f13420,f13421,f13422,f13423,f13424,f13425,f13426,f13427,f13428,f13429,f13430,f13431,f13432,f13433,f13434,f13435,f13436,f13437,f13438,f13439,f13440,f13441,f13442,f13443,f13444,f13445,f13446,f13447,f13448,f13449,f13450,f13451,f13452,f13453,f13454,f13455,f13456,f13457,f13465,f15637,f15638,f18697,f18730,f18728,f18783,f18784,f18785,f18786,f18798,f18787,f18797,f18799,f18807,f18808,f18817,f18822,f18823,f18824,f18825,f18826,f18827,f18828,f18829,f18830,f18831,f18832,f18833,f18834,f18835,f18836,f19074,f19349,f19348,f19075,f19351,f19350,f19084,f19353,f19352,f19089,f19355,f19090,f19356,f19091,f19357,f19092,f19358,f19093,f19359,f19094,f19360,f19095,f19361,f19096,f19362,f19097,f19363,f19098,f19364,f19099,f19365,f19100,f19366,f19101,f19367,f19102,f19368,f19103,f19354,f19369,f19429,f19430,f19431,f19432,f19433,f19563,f19439,f19447,f19571,f19448,f19574,f19449,f19575,f19450,f19576,f19451,f19577,f19452,f19578,f19453,f19579,f19454,f19580,f19455,f19581,f19456,f19582,f19457,f19583,f19458,f19584,f19459,f19585,f19460,f19586,f19461,f19587,f19462,f19588,f19463,f19589,f19464,f19465,f19466,f19562,f19467,f18796,f19470,f19593,f19471,f19595,f19472,f18794,f18795,f19474,f19597,f19475,f19572,f19598,f19647,f18792,f27473,f27474,f27475,f27477,f27479,f27481,f27484,f27485,f27490,f27491,f27492,f27493,f27494,f27496,f27497,f27506,f27508,f27509,f27531,f27533,f27534,f27673,f27476,f27674,f27478,f27675,f27480,f27676,f27482,f27685,f27495,f27695,f27507,f27718,f27532,f30873,f30878,f30874,f33147,f33148,f33149,f33150,f33151,f33152,f33153,f33154,f34176,f34197,f34154,f34198,f34199,f34200,f34201,f34202,f34207,f34133,f34210,f34212,f34213,f34214,f33605,f34215,f33606,f34216,f33607,f34217,f33608,f34218,f33609,f34219,f33610,f34220,f33611,f34221,f33612,f34222,f33613,f34223,f33614,f34224,f33615,f34225,f33616,f34226,f33617,f34227,f34228,f34229,f34111,f34106,f34231,f34105,f34232,f34104,f34233,f34103,f34234,f34102,f34235,f34101,f34236,f34100,f34237,f34099,f34238,f34098,f34239,f34097,f34240,f34094,f34241,f34093,f34242,f34090,f34243,f34089,f34244,f34086,f34245,f34085,f34246,f34082,f34247,f34081,f34248,f34080,f34249,f34079,f34250,f34078,f34251,f34077,f34252,f34076,f34253,f34075,f34254,f34074,f34255,f34073,f34256,f34072,f34257,f34071,f34258,f34070,f34259,f34069,f34260,f34068,f34261,f34067,f34262,f34066,f34263,f34065,f34264,f34266,f34062,f34061,f34268,f34060,f34269,f34059,f34270,f34058,f34057,f34056,f34054,f34275,f34053,f34276,f34052,f34277,f34051,f34278,f34050,f34279,f34049,f34280,f34048,f34281,f34282,f34283,f34047,f34046,f34285,f34045,f34286,f34044,f34287,f34043,f34288,f34042,f34289,f34041,f34290,f34040,f34291,f34039,f34292,f34038,f34037,f34036,f34296,f34294,f34297,f34295,f34300,f34301,f34208,f34303,f34304,f34305,f34272,f34306,f34271,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f34316,f34317,f34318,f34319,f34320,f34321,f33796,f33797,f33798,f34209,f34334,f34335,f34336,f34337,f34338,f34339,f34340,f34341,f34342,f34343,f34344,f34345,f34346,f34267,f34352,f34284,f34353,f34354,f34355,f34273,f34364,f34365,f34366,f34293,f34035,f34152,f34367,f28832,f34372,f28831,f34373,f28830,f34374,f34375,f18793,f28332,f34325,f28331,f34324,f28330,f34323,f28328,f34376,f28327,f34377,f28326,f34378,f28325,f34379,f28323,f34315,f28321,f34314,f28320,f34313,f28319,f34312,f28318,f34311,f28317,f34310,f28316,f34309,f28315,f19573,f34308,f34558,f34576,f34577,f34579,f34581,f34585,f34587,f34591,f34593,f35322,f35327,f35323,f36142,f36145,f37103,f37104,f37109,f37110,f37111,f37112,f37113,f37114,f37115,f37116,f37117,f37118,f37119,f37120,f37121,f37122,f37123,f37124,f37125,f37126,f37127,f37129,f37131,f37132,f37133,f37134,f37135,f37136,f37137,f37138,f37139,f37140,f37141,f37142,f37143,f37144,f37145,f37146,f37147,f37148,f37149,f37150,f37151,f37152,f37153,f37154,f37161,f37162,f37163,f37164,f37165,f37166,f37167,f37168,f37169,f37170,f37171,f37172,f37173,f37174,f37175,f37176,f37177,f37178,f37179,f37180,f37181,f37182,f37183,f37184,f37185,f37186,f37187,f37188,f37189,f37190,f37191,f37192,f37193,f37194,f37195,f37196,f37197,f37198,f37199,f37200,f37201,f37202,f37203,f37204,f37205,f37206,f37207,f37208,f37209,f37210,f37211,f37212,f37213,f37214,f37215,f37216,f37217,f37218,f37219,f37220,f37221,f37222,f37223,f37224,f37225,f37226,f37227,f37228,f37229,f37230,f37231,f37232,f37233,f37234,f37235,f37236,f37237,f37238,f37239,f37240,f37241,f37242,f37243,f37244,f37245,f37246,f37247,f37248,f37249,f37250,f37251,f37252,f37253,f37254,f37255,f37256,f37257,f37258,f37259,f37260,f37261,f37262,f37263,f37264,f37265,f37266,f37267,f37268,f37277,f37279,f37281,f37283,f37285,f37287,f37289,f37291,f37293,f37295,f37297,f37299,f37301,f37303,f37305,f37307,f37309,f37313,f37317,f37320,f47576,f47602,f46927,f46926,f46922,f46921,f46917,f47606,f47608,f46916,f46915,f47604,f48606,f48607,f48640,f48639,f48963,f48988,f49010,f49015,f49011,f49516,f49519,f49526,f49530,f49535,f49581,f49609,f49613,f49623,f49629,f49636,f50720,f50745,f50808,f2064,f50810,f47605,f49018,f49014,f50813,f47609,f49009,f49008,f50811,f50830,f48485,f48484,f50834,f50833,f50835,f50837,f50839,f36143,f50840,f36144,f50838,f43128,f5340,f34196,f51476,f51477,f51482,f51483,f51484,f51486,f51490,f51491,f51492,f51493,f51502,f51503,f51504,f51505,f51506,f51507,f51512,f51513,f51520,f51521,f51525,f51526,f51535,f51536,f51546,f51549,f51565,f51566,f51567,f51568,f51569])).
fof(f51569,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f50984,f46327])).
fof(f46327,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',X0),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))) )),
  inference(unit_resulting_resolution,[],[f5744,f261])).
fof(f261,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.pred_set.INJ_3'(s(fun(X0,'type.num.num'),X2),s(fun(X0,bool),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) | p(s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),X1)))) | p(s(bool,'const.pred_set.INJ_3'(s(fun(X0,'type.num.num'),sK13(X1,X0)),s(fun(X0,bool),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) & (! [X2] : ~p(s(bool,'const.pred_set.INJ_3'(s(fun(X0,'type.num.num'),X2),s(fun(X0,bool),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) | p(s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13])],[f162])).
fof(f162,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),X1)))) | ? [X3] : p(s(bool,'const.pred_set.INJ_3'(s(fun(X0,'type.num.num'),X3),s(fun(X0,bool),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) & (! [X2] : ~p(s(bool,'const.pred_set.INJ_3'(s(fun(X0,'type.num.num'),X2),s(fun(X0,bool),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) | p(s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),X1))))))),
  inference(rectify,[],[f161])).
fof(f161,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),X1)))) | ? [X2] : p(s(bool,'const.pred_set.INJ_3'(s(fun(X0,'type.num.num'),X2),s(fun(X0,bool),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) & (! [X2] : ~p(s(bool,'const.pred_set.INJ_3'(s(fun(X0,'type.num.num'),X2),s(fun(X0,bool),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) | p(s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),X1))))))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1] : (p(s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),X1)))) <=> ? [X2] : p(s(bool,'const.pred_set.INJ_3'(s(fun(X0,'type.num.num'),X2),s(fun(X0,bool),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),X1)))) <=> ? [X2] : p(s(bool,'const.pred_set.INJ_3'(s(fun(X0,'type.num.num'),X2),s(fun(X0,bool),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6] : ! [X17] : (p(s(bool,'const.pred_set.countable_1'(s(fun(X6,bool),X17)))) <=> ? [X7] : p(s(bool,'const.pred_set.INJ_3'(s(fun(X6,'type.num.num'),X7),s(fun(X6,bool),X17),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),
  file('thm.pred_set.countable_image_nats','thm.pred_set.countable_def')).
fof(f5744,plain,(
  ( ! [X6,X8,X7,X5] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(X6,X5),sK19(X7,X8,'const.pred_set.IMAGE_2'(s(fun(X5,X6),X7),s(fun(X5,bool),X8)),X6,X5)),s(fun(X6,bool),'const.pred_set.IMAGE_2'(s(fun(X5,X6),X7),s(fun(X5,bool),X8))),s(fun(X5,bool),X8))))) )),
  inference(subsumption_resolution,[],[f5667,f219])).
fof(f219,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f9])).
fof(f9,axiom,(
  p(s(bool,'T_0'))),
  file('thm.pred_set.countable_image_nats','thm.bool.TRUTH')).
fof(f5667,plain,(
  ( ! [X6,X8,X7,X5] : (~p(s(bool,'T_0')) | p(s(bool,'const.pred_set.INJ_3'(s(fun(X6,X5),sK19(X7,X8,'const.pred_set.IMAGE_2'(s(fun(X5,X6),X7),s(fun(X5,bool),X8)),X6,X5)),s(fun(X6,bool),'const.pred_set.IMAGE_2'(s(fun(X5,X6),X7),s(fun(X5,bool),X8))),s(fun(X5,bool),X8))))) )),
  inference(superposition,[],[f306,f1203])).
fof(f1203,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) )),
  inference(unit_resulting_resolution,[],[f219,f304,f276])).
fof(f276,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f112])).
fof(f112,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X10,X11] : ((p(s(bool,X10)) => p(s(bool,X11))) => ((p(s(bool,X11)) => p(s(bool,X10))) => s(bool,X10) = s(bool,X11)))),
  file('thm.pred_set.countable_image_nats','thm.bool.IMP_ANTISYM_AX')).
fof(f304,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.pred_set.SURJ_3'(s(fun(X1,X0),X3),s(fun(X1,bool),X2),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),X2))))))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2,X3] : p(s(bool,'const.pred_set.SURJ_3'(s(fun(X1,X0),X3),s(fun(X1,bool),X2),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),X2))))))),
  inference(flattening,[],[f88])).
fof(f88,plain,(
  ! [X0,X1] : ! [X2,X3] : p(s(bool,'const.pred_set.SURJ_3'(s(fun(X1,X0),X3),s(fun(X1,bool),X2),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),X2))))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X15,X6] : ! [X17,X7] : p(s(bool,'const.pred_set.SURJ_3'(s(fun(X6,X15),X7),s(fun(X6,bool),X17),s(fun(X15,bool),'const.pred_set.IMAGE_2'(s(fun(X6,X15),X7),s(fun(X6,bool),X17))))))),
  file('thm.pred_set.countable_image_nats','thm.pred_set.SURJ_IMAGE')).
fof(f306,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X4),s(fun(X0,bool),X3),s(fun(X1,bool),X2)))) | p(s(bool,'const.pred_set.INJ_3'(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(fun(X1,bool),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f184])).
fof(f184,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X4),s(fun(X0,bool),X3),s(fun(X1,bool),X2)))) | (p(s(bool,'const.pred_set.INJ_3'(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(fun(X1,bool),X2),s(fun(X0,bool),X3)))) & ! [X6] : (~p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),X2)))) | s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(X1,X6))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19])],[f123])).
fof(f123,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X4),s(fun(X0,bool),X3),s(fun(X1,bool),X2)))) | ? [X5] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(X1,X0),X5),s(fun(X1,bool),X2),s(fun(X0,bool),X3)))) & ! [X6] : (~p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),X2)))) | s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),X5),s(X1,X6))))))))),
  inference(ennf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X4),s(fun(X0,bool),X3),s(fun(X1,bool),X2)))) => ? [X5] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(X1,X0),X5),s(fun(X1,bool),X2),s(fun(X0,bool),X3)))) & ! [X6] : (p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),X2)))) => s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),X5),s(X1,X6))))))))),
  inference(flattening,[],[f92])).
fof(f92,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X4),s(fun(X0,bool),X3),s(fun(X1,bool),X2)))) => ? [X5] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(X1,X0),X5),s(fun(X1,bool),X2),s(fun(X0,bool),X3)))) & ! [X6] : (p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),X2)))) => s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),X5),s(X1,X6))))))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6,X15] : ! [X12,X17,X7] : (p(s(bool,'const.pred_set.SURJ_3'(s(fun(X6,X15),X7),s(fun(X6,bool),X17),s(fun(X15,bool),X12)))) => ? [X18] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(X15,X6),X18),s(fun(X15,bool),X12),s(fun(X6,bool),X17)))) & ! [X13] : (p(s(bool,'const.bool.IN_2'(s(X15,X13),s(fun(X15,bool),X12)))) => s(X15,X13) = s(X15,happ(s(fun(X6,X15),X7),s(X6,happ(s(fun(X15,X6),X18),s(X15,X13))))))))),
  file('thm.pred_set.countable_image_nats','thm.pred_set.SURJ_INJ_INV')).
fof(f50984,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f590,f219,f50267,f321])).
fof(f321,plain,(
  ( ! [X2,X0,X1] : (~sP6(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f192])).
fof(f192,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | (sP3(X2,X1,X0) & sP4(X1,X2,X0) & sP5(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP3(X2,X1,X0) | ~sP4(X1,X2,X0) | ~sP5(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(rectify,[],[f191])).
fof(f191,plain,(
  ! [X2,X1,X0] : ((~sP6(X2,X1,X0) | (sP3(X0,X1,X2) & sP4(X1,X0,X2) & sP5(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP3(X0,X1,X2) | ~sP4(X1,X0,X2) | ~sP5(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP6(X2,X1,X0)))),
  inference(flattening,[],[f190])).
fof(f190,plain,(
  ! [X2,X1,X0] : ((~sP6(X2,X1,X0) | (sP3(X0,X1,X2) & sP4(X1,X0,X2) & sP5(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP3(X0,X1,X2) | ~sP4(X1,X0,X2) | ~sP5(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP6(X2,X1,X0)))),
  inference(nnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X2,X1,X0] : (sP6(X2,X1,X0) <=> (sP3(X0,X1,X2) & sP4(X1,X0,X2) & sP5(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f50267,plain,(
  ~p(s(bool,'F_0')) | $spl40),
  inference(unit_resulting_resolution,[],[f455,f49865])).
fof(f49865,plain,(
  ( ! [X8,X7] : (sP2(X8,X7,f(s(bool,'F_0'))) | ~p(s(bool,X7))) ) | $spl40),
  inference(subsumption_resolution,[],[f49732,f219])).
fof(f49732,plain,(
  ( ! [X8,X7] : (~p(s(bool,'T_0')) | ~p(s(bool,X7)) | sP2(X8,X7,f(s(bool,'F_0')))) ) | $spl40),
  inference(superposition,[],[f310,f2179])).
fof(f2179,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'F_0'))) | $spl40),
  inference(cnf_transformation,[],[f2179_D])).
fof(f2179_D,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'F_0'))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f310,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | sP2(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f187])).
fof(f187,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | ((p(s(bool,X2)) | p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0))))) & ((~p(s(bool,X2)) & ~p(s(bool,X0))) | (~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(rectify,[],[f186])).
fof(f186,plain,(
  ! [X0,X2,X1] : ((~sP2(X0,X2,X1) | ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (~p(s(bool,X2)) & ~p(s(bool,X0))) | sP2(X0,X2,X1)))),
  inference(flattening,[],[f185])).
fof(f185,plain,(
  ! [X0,X2,X1] : ((~sP2(X0,X2,X1) | ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (~p(s(bool,X2)) & ~p(s(bool,X0)))) | sP2(X0,X2,X1)))),
  inference(nnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X2,X1] : (sP2(X0,X2,X1) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f455,plain,(
  ( ! [X0] : (~sP2('F_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f383,f383,f309])).
fof(f309,plain,(
  ( ! [X2,X0,X1] : (~sP2(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f187])).
fof(f383,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f222,f219])).
fof(f222,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f143])).
fof(f143,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f43])).
fof(f43,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f17])).
fof(f17,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.pred_set.countable_image_nats','thm.bool.NOT_CLAUSES|split|1')).
fof(f590,plain,(
  sP6('T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f219,f418,f338])).
fof(f338,plain,(
  ( ! [X2,X0,X1] : (sP6(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f201])).
fof(f201,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP6(X2,X1,X0)) & (~sP6(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP6(X2,X1,X0))),
  inference(definition_folding,[],[f96,f134,f133,f132,f131])).
fof(f131,plain,(
  ! [X0,X1,X2] : (sP3(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f132,plain,(
  ! [X1,X0,X2] : (sP4(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f133,plain,(
  ! [X2,X0,X1] : (sP5(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f96,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f95])).
fof(f95,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X19,X20,X21] : ((p(s(bool,X21)) <=> s(bool,X19) = s(bool,X20)) <=> ((p(s(bool,X21)) | p(s(bool,X20)) | p(s(bool,X19))) & (p(s(bool,X21)) | ~p(s(bool,X19)) | ~p(s(bool,X20))) & (p(s(bool,X20)) | ~p(s(bool,X19)) | ~p(s(bool,X21))) & (p(s(bool,X19)) | ~p(s(bool,X20)) | ~p(s(bool,X21)))))),
  file('thm.pred_set.countable_image_nats','thm.sat.sat_2|49|_prove_ltb')).
fof(f418,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),
  inference(unit_resulting_resolution,[],[f218,f237])).
fof(f237,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.pred_set.countable_image_nats','thm.bool.EQ_CLAUSES|split|2')).
fof(f218,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK11,sK12])],[f101])).
fof(f101,plain,(
  ? [X0,X1] : ~p(s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',X0),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),
  inference(ennf_transformation,[],[f42])).
fof(f42,plain,(
  ~! [X0,X1] : p(s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',X0),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ~! [X0] : ! [X1] : p(s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',X0),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : p(s(bool,'const.pred_set.countable_1'(s(fun(X6,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',X6),X7),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : p(s(bool,'const.pred_set.countable_1'(s(fun(X6,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',X6),X7),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),
  file('thm.pred_set.countable_image_nats','thm.pred_set.countable_image_nats')).
fof(f51568,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51073,f46327])).
fof(f51073,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f405,f219,f50267,f325])).
fof(f325,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f195])).
fof(f195,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f194])).
fof(f194,plain,(
  ! [X2,X0,X1] : ((~sP5(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP5(X2,X0,X1)))),
  inference(flattening,[],[f193])).
fof(f193,plain,(
  ! [X2,X0,X1] : ((~sP5(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP5(X2,X0,X1)))),
  inference(nnf_transformation,[],[f133])).
fof(f405,plain,(
  ( ! [X0,X1] : (sP5('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f218,f328])).
fof(f328,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f195])).
fof(f51567,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51075,f46327])).
fof(f51075,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f404,f219,f50267,f325])).
fof(f404,plain,(
  ( ! [X0,X1] : (sP5(X0,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),X1)) )),
  inference(unit_resulting_resolution,[],[f218,f327])).
fof(f327,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f195])).
fof(f51566,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51080,f46327])).
fof(f51080,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f407,f219,f50267,f329])).
fof(f329,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP4(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f198])).
fof(f198,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f197])).
fof(f197,plain,(
  ! [X1,X0,X2] : ((~sP4(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP4(X1,X0,X2)))),
  inference(flattening,[],[f196])).
fof(f196,plain,(
  ! [X1,X0,X2] : ((~sP4(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP4(X1,X0,X2)))),
  inference(nnf_transformation,[],[f132])).
fof(f407,plain,(
  ( ! [X0,X1] : (sP4('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f218,f332])).
fof(f332,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f198])).
fof(f51565,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51082,f46327])).
fof(f51082,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f406,f219,f50267,f329])).
fof(f406,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),X1)) )),
  inference(unit_resulting_resolution,[],[f218,f331])).
fof(f331,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f198])).
fof(f51549,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51167,f46327])).
fof(f51167,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f408,f50267,f50267,f348])).
fof(f348,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f207])).
fof(f207,plain,(
  ! [X0,X1,X2] : ((~sP7(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP7(X0,X1,X2)))),
  inference(rectify,[],[f206])).
fof(f206,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP7(X2,X0,X1)))),
  inference(flattening,[],[f205])).
fof(f205,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP7(X2,X0,X1)))),
  inference(nnf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X2,X0,X1] : (sP7(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f408,plain,(
  ( ! [X0,X1] : (sP7('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f218,f351])).
fof(f351,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f207])).
fof(f51546,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51174,f46327])).
fof(f51174,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f408,f50267,f50267,f348])).
fof(f51536,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51197,f46327])).
fof(f51197,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f691,f50267,f50267,f355])).
fof(f355,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)) | ~sP8(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f209])).
fof(f209,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP8(X2,X0,X1)) & (~sP8(X2,X0,X1) | ((~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f208])).
fof(f208,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP8(X2,X0,X1)) & (~sP8(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> sP8(X2,X0,X1))),
  inference(definition_folding,[],[f98,f137,f136])).
fof(f137,plain,(
  ! [X2,X0,X1] : (sP8(X2,X0,X1) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP7(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f98,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X19,X20,X21] : ((p(s(bool,X21)) <=> (p(s(bool,X20)) | p(s(bool,X19)))) <=> ((p(s(bool,X21)) | ~p(s(bool,X20))) & (p(s(bool,X21)) | ~p(s(bool,X19))) & (p(s(bool,X20)) | p(s(bool,X19)) | ~p(s(bool,X21)))))),
  file('thm.pred_set.countable_image_nats','thm.sat.sat_25_prove_ltb')).
fof(f691,plain,(
  sP8('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f408,f383,f383,f347])).
fof(f347,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~sP7(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f204])).
fof(f204,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | ((p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP7(X0,X1,X2))) & ((~p(s(bool,X0)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP7(X0,X1,X2) | sP8(X0,X1,X2)))),
  inference(rectify,[],[f203])).
fof(f203,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP7(X2,X0,X1))) & ((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP7(X2,X0,X1) | sP8(X2,X0,X1)))),
  inference(flattening,[],[f202])).
fof(f202,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP7(X2,X0,X1))) & (((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP7(X2,X0,X1)) | sP8(X2,X0,X1)))),
  inference(nnf_transformation,[],[f137])).
fof(f51535,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51200,f46327])).
fof(f51200,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f691,f50267,f50267,f355])).
fof(f51526,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51233,f46327])).
fof(f51233,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f409,f219,f50267,f365])).
fof(f365,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~sP9(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f215])).
fof(f215,plain,(
  ! [X0,X1,X2] : ((~sP9(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP9(X0,X1,X2)))),
  inference(rectify,[],[f214])).
fof(f214,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP9(X2,X0,X1)))),
  inference(flattening,[],[f213])).
fof(f213,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP9(X2,X0,X1)))),
  inference(nnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X2,X0,X1] : (sP9(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP9])])).
fof(f409,plain,(
  ( ! [X0,X1] : (sP9(X0,X1,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) )),
  inference(unit_resulting_resolution,[],[f218,f366])).
fof(f366,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f215])).
fof(f51525,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51235,f46327])).
fof(f51235,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f410,f219,f50267,f365])).
fof(f410,plain,(
  ( ! [X0,X1] : (sP9('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f218,f368])).
fof(f368,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f215])).
fof(f51521,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51253,f46327])).
fof(f51253,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f502,f219,f50267,f372])).
fof(f372,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~sP10(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f217])).
fof(f217,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP10(X2,X0,X1)) & (~sP10(X2,X0,X1) | ((~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f216])).
fof(f216,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP10(X2,X0,X1)) & (~sP10(X2,X0,X1) | ((~p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> sP10(X2,X0,X1))),
  inference(definition_folding,[],[f124,f140,f139])).
fof(f140,plain,(
  ! [X2,X0,X1] : (sP10(X2,X0,X1) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP9(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP10])])).
fof(f124,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X19,X20,X21] : ((p(s(bool,X21)) <=> (p(s(bool,X20)) => p(s(bool,X19)))) <=> ((p(s(bool,X21)) | p(s(bool,X20))) & (p(s(bool,X21)) | ~p(s(bool,X19))) & (~p(s(bool,X20)) | p(s(bool,X19)) | ~p(s(bool,X21)))))),
  file('thm.pred_set.countable_image_nats','thm.sat.sat_27_prove_ltb')).
fof(f502,plain,(
  ( ! [X0] : (sP10('T_0',X0,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) )),
  inference(unit_resulting_resolution,[],[f409,f219,f375])).
fof(f375,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP9(X0,X1,X2) | sP10(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f361])).
fof(f361,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | ~sP9(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f212])).
fof(f212,plain,(
  ! [X0,X1,X2] : ((~sP10(X0,X1,X2) | ((p(s(bool,X0)) | p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP9(X0,X1,X2))) & ((~p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP9(X0,X1,X2) | sP10(X0,X1,X2)))),
  inference(rectify,[],[f211])).
fof(f211,plain,(
  ! [X2,X0,X1] : ((~sP10(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP9(X2,X0,X1))) & ((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP9(X2,X0,X1) | sP10(X2,X0,X1)))),
  inference(flattening,[],[f210])).
fof(f210,plain,(
  ! [X2,X0,X1] : ((~sP10(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP9(X2,X0,X1))) & (((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP9(X2,X0,X1)) | sP10(X2,X0,X1)))),
  inference(nnf_transformation,[],[f140])).
fof(f51520,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51255,f46327])).
fof(f51255,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f736,f219,f50267,f372])).
fof(f736,plain,(
  sP10('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f410,f219,f383,f364])).
fof(f364,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | ~sP9(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f212])).
fof(f51513,plain,(
  $false | ($spl14 | $spl40)),
  inference(subsumption_resolution,[],[f51278,f46327])).
fof(f51278,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl14 | $spl40)),
  inference(unit_resulting_resolution,[],[f405,f50267,f2073])).
fof(f51512,plain,(
  $false | ($spl16 | $spl40)),
  inference(subsumption_resolution,[],[f51281,f46327])).
fof(f51281,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl16 | $spl40)),
  inference(unit_resulting_resolution,[],[f407,f50267,f2076])).
fof(f51507,plain,(
  $false | ($spl26 | $spl40)),
  inference(subsumption_resolution,[],[f51296,f46327])).
fof(f51296,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl26 | $spl40)),
  inference(unit_resulting_resolution,[],[f410,f50267,f2091])).
fof(f51506,plain,(
  $false | ($spl32 | $spl40)),
  inference(subsumption_resolution,[],[f51301,f46327])).
fof(f51301,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl32 | $spl40)),
  inference(unit_resulting_resolution,[],[f502,f50267,f2100])).
fof(f51505,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51317,f46327])).
fof(f51317,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f405,f411,f411,f50267,f2117])).
fof(f2117,plain,(
  ( ! [X37,X35,X38,X36] : (~sP5(X36,X35,X37) | p(s(bool,X37)) | ~p(s(bool,X36)) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f1735,f219])).
fof(f1735,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP5(X36,X35,X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f325,f518])).
fof(f518,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f226,f226])).
fof(f226,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.pred_set.countable_image_nats',aHL_BOOL_CASES)).
fof(f411,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f383,f232])).
fof(f232,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.pred_set.countable_image_nats','thm.bool.EQ_CLAUSES|split|0')).
fof(f51504,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51322,f46327])).
fof(f51322,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f405,f412,f412,f50267,f2117])).
fof(f412,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),
  inference(unit_resulting_resolution,[],[f218,f232])).
fof(f51503,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51329,f46327])).
fof(f51329,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f407,f411,f411,f50267,f2118])).
fof(f2118,plain,(
  ( ! [X39,X41,X42,X40] : (~sP4(X40,X39,X41) | p(s(bool,X41)) | ~p(s(bool,X40)) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(subsumption_resolution,[],[f1736,f219])).
fof(f1736,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X40)) | p(s(bool,X41)) | ~sP4(X40,X39,X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f329,f518])).
fof(f51502,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51334,f46327])).
fof(f51334,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f407,f412,f412,f50267,f2118])).
fof(f51493,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51390,f46327])).
fof(f51390,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f410,f411,f411,f50267,f2123])).
fof(f2123,plain,(
  ( ! [X61,X59,X62,X60] : (~sP9(X61,X60,X59) | ~p(s(bool,X61)) | p(s(bool,X60)) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(subsumption_resolution,[],[f1741,f219])).
fof(f1741,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'T_0')) | p(s(bool,X60)) | ~p(s(bool,X61)) | ~sP9(X61,X60,X59) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(superposition,[],[f365,f518])).
fof(f51492,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51395,f46327])).
fof(f51395,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f410,f412,f412,f50267,f2123])).
fof(f51491,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51410,f46327])).
fof(f51410,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f502,f411,f411,f50267,f2126])).
fof(f2126,plain,(
  ( ! [X74,X72,X71,X73] : (~sP10(X71,X73,X72) | p(s(bool,X73)) | ~p(s(bool,X72)) | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f1744,f219])).
fof(f1744,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X72)) | p(s(bool,X73)) | ~sP10(X71,X73,X72) | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f372,f518])).
fof(f51490,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51415,f46327])).
fof(f51415,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f502,f412,f412,f50267,f2126])).
fof(f51486,plain,(
  $false | ($spl0 | $spl40)),
  inference(subsumption_resolution,[],[f51428,f46327])).
fof(f51428,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl0 | $spl40)),
  inference(unit_resulting_resolution,[],[f405,f411,f50267,f4492])).
fof(f4492,plain,(
  ( ! [X2,X0,X1] : (~sP5(X1,g(s(bool,X0)),X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2655,f226])).
fof(f2655,plain,(
  ( ! [X10,X9] : (~sP5(X9,g(s(bool,'F_0')),X10) | p(s(bool,X10)) | ~p(s(bool,X9))) ) | $spl0),
  inference(subsumption_resolution,[],[f2622,f219])).
fof(f2622,plain,(
  ( ! [X10,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X9)) | p(s(bool,X10)) | ~sP5(X9,g(s(bool,'F_0')),X10)) ) | $spl0),
  inference(superposition,[],[f325,f1415])).
fof(f51484,plain,(
  $false | ($spl0 | $spl40)),
  inference(subsumption_resolution,[],[f51431,f46327])).
fof(f51431,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl0 | $spl40)),
  inference(unit_resulting_resolution,[],[f405,f412,f50267,f4492])).
fof(f51483,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51436,f46327])).
fof(f51436,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f405,f50267,f5753])).
fof(f5753,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~sP5(X74,'const.pred_set.SURJ_3'(s(fun(X70,X71),X72),s(fun(X70,bool),X73),s(fun(X71,bool),'const.pred_set.IMAGE_2'(s(fun(X70,X71),X72),s(fun(X70,bool),X73)))),X75) | p(s(bool,X75)) | ~p(s(bool,X74))) )),
  inference(subsumption_resolution,[],[f5681,f219])).
fof(f5681,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X74)) | p(s(bool,X75)) | ~sP5(X74,'const.pred_set.SURJ_3'(s(fun(X70,X71),X72),s(fun(X70,bool),X73),s(fun(X71,bool),'const.pred_set.IMAGE_2'(s(fun(X70,X71),X72),s(fun(X70,bool),X73)))),X75)) )),
  inference(superposition,[],[f325,f1203])).
fof(f51482,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51439,f46327])).
fof(f51439,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f407,f50267,f5754])).
fof(f5754,plain,(
  ( ! [X80,X78,X76,X81,X79,X77] : (~sP4(X80,'const.pred_set.SURJ_3'(s(fun(X76,X77),X78),s(fun(X76,bool),X79),s(fun(X77,bool),'const.pred_set.IMAGE_2'(s(fun(X76,X77),X78),s(fun(X76,bool),X79)))),X81) | p(s(bool,X81)) | ~p(s(bool,X80))) )),
  inference(subsumption_resolution,[],[f5682,f219])).
fof(f5682,plain,(
  ( ! [X80,X78,X76,X81,X79,X77] : (~p(s(bool,'T_0')) | ~p(s(bool,X80)) | p(s(bool,X81)) | ~sP4(X80,'const.pred_set.SURJ_3'(s(fun(X76,X77),X78),s(fun(X76,bool),X79),s(fun(X77,bool),'const.pred_set.IMAGE_2'(s(fun(X76,X77),X78),s(fun(X76,bool),X79)))),X81)) )),
  inference(superposition,[],[f329,f1203])).
fof(f51477,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51454,f46327])).
fof(f51454,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f410,f50267,f5759])).
fof(f5759,plain,(
  ( ! [X111,X109,X107,X110,X108,X106] : (~sP9(X111,X110,'const.pred_set.SURJ_3'(s(fun(X106,X107),X108),s(fun(X106,bool),X109),s(fun(X107,bool),'const.pred_set.IMAGE_2'(s(fun(X106,X107),X108),s(fun(X106,bool),X109))))) | ~p(s(bool,X111)) | p(s(bool,X110))) )),
  inference(subsumption_resolution,[],[f5687,f219])).
fof(f5687,plain,(
  ( ! [X111,X109,X107,X110,X108,X106] : (~p(s(bool,'T_0')) | p(s(bool,X110)) | ~p(s(bool,X111)) | ~sP9(X111,X110,'const.pred_set.SURJ_3'(s(fun(X106,X107),X108),s(fun(X106,bool),X109),s(fun(X107,bool),'const.pred_set.IMAGE_2'(s(fun(X106,X107),X108),s(fun(X106,bool),X109)))))) )),
  inference(superposition,[],[f365,f1203])).
fof(f51476,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f51457,f46327])).
fof(f51457,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl40),
  inference(unit_resulting_resolution,[],[f1320,f50267,f5762])).
fof(f5762,plain,(
  ( ! [X127,X125,X128,X126,X124,X129] : (~sP10('const.pred_set.SURJ_3'(s(fun(X124,X125),X126),s(fun(X124,bool),X127),s(fun(X125,bool),'const.pred_set.IMAGE_2'(s(fun(X124,X125),X126),s(fun(X124,bool),X127)))),X129,X128) | p(s(bool,X129)) | ~p(s(bool,X128))) )),
  inference(subsumption_resolution,[],[f5690,f219])).
fof(f5690,plain,(
  ( ! [X127,X125,X128,X126,X124,X129] : (~p(s(bool,'T_0')) | ~p(s(bool,X128)) | p(s(bool,X129)) | ~sP10('const.pred_set.SURJ_3'(s(fun(X124,X125),X126),s(fun(X124,bool),X127),s(fun(X125,bool),'const.pred_set.IMAGE_2'(s(fun(X124,X125),X126),s(fun(X124,bool),X127)))),X129,X128)) )),
  inference(superposition,[],[f372,f1203])).
fof(f1320,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) )),
  inference(unit_resulting_resolution,[],[f409,f304,f375])).
fof(f34196,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) = s(bool,happ(s(fun(bool,bool),X1),s(bool,'T_0')))) ) | $spl196),
  inference(cnf_transformation,[],[f34196_D])).
fof(f34196_D,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) = s(bool,happ(s(fun(bool,bool),X1),s(bool,'T_0')))) ) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f5340,plain,(
  ( ! [X5] : (p(s(bool,X5))) ) | $spl46),
  inference(cnf_transformation,[],[f5340_D])).
fof(f5340_D,plain,(
  ( ! [X5] : (p(s(bool,X5))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f43128,plain,(
  ( ! [X8,X9] : (p(s(bool,X9)) | s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X8))) = s(bool,happ(s(fun(bool,bool),X8),s(bool,'T_0')))) )),
  inference(subsumption_resolution,[],[f42847,f232])).
fof(f42847,plain,(
  ( ! [X8,X9] : (p(s(bool,X9)) | s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X8))) = s(bool,happ(s(fun(bool,bool),X8),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f237,f1782])).
fof(f1782,plain,(
  ( ! [X191,X192] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X191))) = s(bool,happ(s(fun(bool,bool),X191),s(bool,'T_0'))) | s(bool,X192) = s(bool,'const.min.@_1'(s(fun(bool,bool),X191))) | s(bool,'T_0') = s(bool,X192)) )),
  inference(superposition,[],[f259,f518])).
fof(f259,plain,(
  ( ! [X0,X1] : (s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) = s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1] : s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) = s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0] : ! [X1] : s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) = s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X5] : s(bool,'|dollar|exists_1'(s(fun(X6,bool),X5))) = s(bool,happ(s(fun(X6,bool),X5),s(X6,'const.min.@_1'(s(fun(X6,bool),X5)))))),
  file('thm.pred_set.countable_image_nats','thm.bool.EXISTS_DEF')).
fof(f50838,plain,(
  ( ! [X47,X46,X42] : (s(bool,X42) = s(bool,X46) | s(bool,'T_0') = s(bool,X47) | s(bool,X42) != s(bool,f(s(bool,'T_0'))) | s(bool,X46) = s(bool,X47)) ) | $spl440),
  inference(cnf_transformation,[],[f50838_D])).
fof(f50838_D,plain,(
  ( ! [X47,X46,X42] : (s(bool,X42) = s(bool,X46) | s(bool,'T_0') = s(bool,X47) | s(bool,X42) != s(bool,f(s(bool,'T_0'))) | s(bool,X46) = s(bool,X47)) ) <=> ~$spl440),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl440])])).
fof(f36144,plain,(
  ( ! [X50,X48,X49] : (s(fun(bool,bool),X48) = s(fun(bool,bool),X49) | s(bool,'T_0') = s(bool,X50) | s(bool,X50) = s(bool,sK18(X48,X49,bool,bool))) ) | $spl412),
  inference(cnf_transformation,[],[f36144_D])).
fof(f36144_D,plain,(
  ( ! [X50,X48,X49] : (s(fun(bool,bool),X48) = s(fun(bool,bool),X49) | s(bool,'T_0') = s(bool,X50) | s(bool,X50) = s(bool,sK18(X48,X49,bool,bool))) ) <=> ~$spl412),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl412])])).
fof(f50840,plain,(
  ( ! [X70,X68,X66,X71,X69,X67] : (s(fun(bool,bool),X67) = s(fun(bool,bool),X68) | s(bool,'T_0') = s(bool,X71) | s(bool,X70) = s(bool,X71) | s(bool,'T_0') = s(bool,X69) | s(bool,X69) = s(bool,sK18(X67,X68,bool,bool)) | s(bool,X66) != s(bool,f(s(bool,'T_0'))) | s(bool,X66) = s(bool,X70)) ) | ($spl57 | $spl64)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f383,f1521,f1520,f15634,f15637,f15642,f16475,f18152,f18311,f18775,f18774,f18773,f18772,f18776,f18783,f18784,f18785,f18786,f18787,f27085,f21682,f26901,f26887,f21786,f22244,f27469,f27473,f27479,f27481,f27531,f22874,f27533,f27590,f27591,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f23671,f27675,f27676,f27718,f27806,f24822,f30868,f30873,f30878,f33151,f33153,f34176,f34197,f34154,f34203,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f34334,f34340,f34342,f32738,f31647,f18796,f34559,f35322,f35327,f36092,f36142,f36145,f5743,f5744,f306,f2137,f307,f2136,f27663,f27664,f36003,f36002,f35990,f35984,f35973,f35967,f35829,f35766,f35765,f35753,f35747,f35736,f35730,f35592,f35541,f35526,f35520,f35511,f35432,f35417,f35411,f35402,f27662,f27661,f27660,f27659,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f23670,f23669,f23668,f23667,f23188,f23187,f23186,f23185,f22873,f22872,f22871,f22870,f22243,f22242,f22241,f22240,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f29573,f29260,f28877,f27897,f23666,f23665,f23664,f23663,f23651,f23650,f23649,f23648,f23184,f23183,f23182,f23181,f23169,f23168,f23167,f23166,f22869,f22868,f22867,f22866,f22854,f22853,f22852,f22851,f22239,f22238,f22237,f22236,f22224,f22223,f22222,f22221,f17990,f17989,f17914,f17913,f9105,f9104,f9004,f9003,f3339,f3337,f3311,f3309,f3286,f3284,f3259,f3257,f36010,f35915,f35773,f35678,f35509,f35400,f35212,f35137,f34329,f34307,f34096,f34092,f34088,f34084,f34016,f34015,f34013,f34012,f34010,f34009,f34008,f34007,f34006,f34005,f34004,f34003,f34002,f34001,f34000,f33999,f33998,f33997,f33996,f33995,f33994,f33993,f33992,f33827,f33826,f33825,f33824,f33823,f33822,f33821,f33819,f33818,f33817,f33816,f33815,f33814,f33813,f33812,f33811,f33810,f33809,f33808,f33807,f33806,f33801,f33498,f33495,f33492,f33489,f33477,f33476,f33475,f33471,f33454,f33453,f33452,f33449,f33448,f33445,f33444,f33443,f33437,f33435,f33432,f33431,f33373,f33368,f33367,f33366,f33341,f31081,f31080,f31079,f31077,f31072,f31071,f23662,f23661,f23660,f23659,f23658,f23657,f23656,f23655,f23654,f23653,f23652,f23647,f23180,f23179,f23178,f23177,f23176,f23175,f23174,f23173,f23172,f23171,f23170,f23165,f22865,f22864,f22863,f22862,f22861,f22860,f22859,f22858,f22857,f22856,f22855,f22850,f22235,f22234,f22233,f22232,f22231,f22230,f22229,f22228,f22227,f22226,f22225,f22220,f8542,f8541,f8489,f8488,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1782,f1347,f1340,f1088,f36012,f35914,f35775,f35677,f35540,f35508,f35431,f35399,f34371,f34368,f34170,f34156,f33372,f33363,f32959,f32945,f32124,f32123,f32122,f32121,f32120,f32119,f32118,f32117,f32116,f32115,f32114,f31895,f31322,f31298,f31076,f27658,f27657,f27656,f27655,f27654,f27653,f27652,f21823,f21784,f21750,f21247,f15630,f11482,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f35319,f30870,f27665,f27651,f2138,f2130,f261,f260,f33800,f32546,f31297,f23646,f23164,f22849,f22219,f1780,f1596,f33474,f33434,f33433,f32967,f32111,f17988,f17912,f11359,f9103,f9002,f8540,f8487,f3343,f3315,f3290,f3263,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f237,f236,f44348,f44457,f44466,f44519,f44610,f44619,f44655,f44740,f44749,f44818,f45680,f45689,f45756,f45847,f45856,f45897,f45986,f45995,f46036,f46280,f46289,f46774,f46770,f46769,f46762,f46537,f46536,f46535,f46534,f46533,f46532,f46531,f46529,f46528,f46521,f46509,f46459,f46452,f46445,f46444,f46420,f46419,f46416,f46415,f46414,f46411,f46409,f46408,f46405,f46403,f46402,f46401,f46400,f46399,f46382,f46365,f46364,f46363,f46362,f46349,f46348,f46339,f46338,f46336,f46335,f46334,f46327,f46963,f46964,f46965,f46966,f46971,f46973,f46974,f46975,f46979,f47048,f47049,f47050,f47051,f47056,f47058,f47059,f47060,f47064,f47105,f47106,f47107,f47108,f47113,f47115,f47116,f47117,f47121,f47164,f47165,f47166,f47167,f47172,f47174,f47175,f47176,f47180,f47219,f47220,f47221,f47222,f47227,f47229,f47230,f47231,f47235,f47320,f47321,f47322,f47323,f47328,f47330,f47331,f47332,f47336,f47410,f47411,f47412,f47514,f47515,f47516,f46926,f46922,f46921,f46917,f47608,f46916,f46915,f46342,f46446,f46453,f46514,f47836,f47884,f47840,f47885,f47886,f47893,f47959,f48007,f47963,f48008,f48009,f48016,f48065,f48081,f48114,f48115,f48116,f48168,f48184,f48217,f48218,f48219,f48264,f48280,f48313,f48314,f48321,f48361,f48377,f48410,f48411,f48418,f48475,f48540,f48551,f48606,f48607,f48634,f48632,f48693,f48694,f48695,f48696,f48701,f48703,f48704,f48705,f48709,f48748,f48749,f48750,f48751,f48756,f48758,f48759,f48760,f48764,f48834,f48832,f48825,f48820,f48904,f48902,f48895,f48890,f48612,f49010,f49015,f48608,f50179,f50246,f50245,f50244,f50238,f50234,f50311,f50379,f50378,f50377,f50371,f50367,f50501,f50502,f50503,f50508,f50510,f50511,f50512,f50516,f50517,f50519,f50521,f50529,f50532,f50561,f50562,f50569,f50652,f49018,f49014,f50813,f49009,f49008,f48611,f50831,f48489,f48485,f48484,f36118,f50835,f18730,f36109,f50836,f36117,f50837,f36119,f50839,f36121])).
fof(f36121,plain,(
  ( ! [X70,X68,X66,X71,X69,X67] : (s(bool,X66) != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X67) = s(fun(bool,bool),X68) | s(bool,X69) = s(bool,sK18(X67,X68,bool,bool)) | s(bool,'T_0') = s(bool,X69) | s(bool,X66) = s(bool,X70) | s(bool,X70) = s(bool,X71) | s(bool,'T_0') = s(bool,X71) | s(bool,'T_0') = s(bool,g(s(bool,'T_0')))) )),
  inference(superposition,[],[f1798,f1507])).
fof(f36119,plain,(
  ( ! [X59,X57,X54,X58,X56,X55] : (s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X54) = s(fun(bool,bool),X55) | s(bool,X56) = s(bool,sK18(X54,X55,bool,bool)) | s(bool,'T_0') = s(bool,X56) | s(bool,X57) = s(bool,X58) | s(bool,X58) = s(bool,X59) | s(bool,'T_0') = s(bool,X59) | s(bool,X57) = s(bool,g(s(bool,'T_0')))) )),
  inference(superposition,[],[f1798,f1507])).
fof(f36117,plain,(
  ( ! [X47,X45,X43,X46,X44,X42] : (s(bool,X42) != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X43) = s(fun(bool,bool),X44) | s(bool,X45) = s(bool,sK18(X43,X44,bool,bool)) | s(bool,'T_0') = s(bool,X45) | s(bool,X42) = s(bool,X46) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(bool,X46) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f1798,f1507])).
fof(f50836,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | ($spl57 | $spl64)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f383,f1521,f1520,f15634,f15637,f15642,f16475,f18152,f18311,f18775,f18774,f18773,f18772,f18776,f18783,f18784,f18785,f18786,f18787,f27085,f21682,f26901,f26887,f21786,f22244,f27469,f27473,f27479,f27481,f27531,f22874,f27533,f27590,f27591,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f23671,f27675,f27676,f27718,f27806,f24822,f30868,f30873,f30878,f33151,f33153,f34176,f34197,f34154,f34203,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f34334,f34340,f34342,f32738,f31647,f18796,f34559,f35322,f35327,f36092,f36142,f36145,f36121,f5743,f5744,f306,f2137,f307,f2136,f27663,f27664,f36003,f36002,f35990,f35984,f35973,f35967,f35829,f35766,f35765,f35753,f35747,f35736,f35730,f35592,f35541,f35526,f35520,f35511,f35432,f35417,f35411,f35402,f27662,f27661,f27660,f27659,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f23670,f23669,f23668,f23667,f23188,f23187,f23186,f23185,f22873,f22872,f22871,f22870,f22243,f22242,f22241,f22240,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f29573,f29260,f28877,f27897,f23666,f23665,f23664,f23663,f23651,f23650,f23649,f23648,f23184,f23183,f23182,f23181,f23169,f23168,f23167,f23166,f22869,f22868,f22867,f22866,f22854,f22853,f22852,f22851,f22239,f22238,f22237,f22236,f22224,f22223,f22222,f22221,f17990,f17989,f17914,f17913,f9105,f9104,f9004,f9003,f3339,f3337,f3311,f3309,f3286,f3284,f3259,f3257,f36010,f35915,f35773,f35678,f35509,f35400,f35212,f35137,f34329,f34307,f34096,f34092,f34088,f34084,f34016,f34015,f34013,f34012,f34010,f34009,f34008,f34007,f34006,f34005,f34004,f34003,f34002,f34001,f34000,f33999,f33998,f33997,f33996,f33995,f33994,f33993,f33992,f33827,f33826,f33825,f33824,f33823,f33822,f33821,f33819,f33818,f33817,f33816,f33815,f33814,f33813,f33812,f33811,f33810,f33809,f33808,f33807,f33806,f33801,f33498,f33495,f33492,f33489,f33477,f33476,f33475,f33471,f33454,f33453,f33452,f33449,f33448,f33445,f33444,f33443,f33437,f33435,f33432,f33431,f33373,f33368,f33367,f33366,f33341,f31081,f31080,f31079,f31077,f31072,f31071,f23662,f23661,f23660,f23659,f23658,f23657,f23656,f23655,f23654,f23653,f23652,f23647,f23180,f23179,f23178,f23177,f23176,f23175,f23174,f23173,f23172,f23171,f23170,f23165,f22865,f22864,f22863,f22862,f22861,f22860,f22859,f22858,f22857,f22856,f22855,f22850,f22235,f22234,f22233,f22232,f22231,f22230,f22229,f22228,f22227,f22226,f22225,f22220,f8542,f8541,f8489,f8488,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1782,f1347,f1340,f1088,f36012,f35914,f35775,f35677,f35540,f35508,f35431,f35399,f34371,f34368,f34170,f34156,f33372,f33363,f32959,f32945,f32124,f32123,f32122,f32121,f32120,f32119,f32118,f32117,f32116,f32115,f32114,f31895,f31322,f31298,f31076,f27658,f27657,f27656,f27655,f27654,f27653,f27652,f21823,f21784,f21750,f21247,f15630,f11482,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f35319,f30870,f27665,f27651,f2138,f2130,f261,f260,f33800,f32546,f31297,f23646,f23164,f22849,f22219,f1780,f1596,f33474,f33434,f33433,f32967,f32111,f17988,f17912,f11359,f9103,f9002,f8540,f8487,f3343,f3315,f3290,f3263,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f237,f236,f44348,f44457,f44466,f44519,f44610,f44619,f44655,f44740,f44749,f44818,f45680,f45689,f45756,f45847,f45856,f45897,f45986,f45995,f46036,f46280,f46289,f46774,f46770,f46769,f46762,f46537,f46536,f46535,f46534,f46533,f46532,f46531,f46529,f46528,f46521,f46509,f46459,f46452,f46445,f46444,f46420,f46419,f46416,f46415,f46414,f46411,f46409,f46408,f46405,f46403,f46402,f46401,f46400,f46399,f46382,f46365,f46364,f46363,f46362,f46349,f46348,f46339,f46338,f46336,f46335,f46334,f46327,f46963,f46964,f46965,f46966,f46971,f46973,f46974,f46975,f46979,f47048,f47049,f47050,f47051,f47056,f47058,f47059,f47060,f47064,f47105,f47106,f47107,f47108,f47113,f47115,f47116,f47117,f47121,f47164,f47165,f47166,f47167,f47172,f47174,f47175,f47176,f47180,f47219,f47220,f47221,f47222,f47227,f47229,f47230,f47231,f47235,f47320,f47321,f47322,f47323,f47328,f47330,f47331,f47332,f47336,f47410,f47411,f47412,f47514,f47515,f47516,f46926,f46922,f46921,f46917,f47608,f46916,f46915,f46342,f46446,f46453,f46514,f47836,f47884,f47840,f47885,f47886,f47893,f47959,f48007,f47963,f48008,f48009,f48016,f48065,f48081,f48114,f48115,f48116,f48168,f48184,f48217,f48218,f48219,f48264,f48280,f48313,f48314,f48321,f48361,f48377,f48410,f48411,f48418,f48475,f48540,f48551,f48606,f48607,f48634,f48632,f48693,f48694,f48695,f48696,f48701,f48703,f48704,f48705,f48709,f48748,f48749,f48750,f48751,f48756,f48758,f48759,f48760,f48764,f48834,f48832,f48825,f48820,f48904,f48902,f48895,f48890,f48612,f49010,f49015,f48608,f50179,f50246,f50245,f50244,f50238,f50234,f50311,f50379,f50378,f50377,f50371,f50367,f50501,f50502,f50503,f50508,f50510,f50511,f50512,f50516,f50517,f50519,f50521,f50529,f50532,f50561,f50562,f50569,f50652,f49018,f49014,f50813,f49009,f49008,f48611,f50831,f48489,f48485,f48484,f36118,f50835,f18730,f36109])).
fof(f36109,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,X5) = s(bool,sK18(X3,X4,bool,bool)) | s(bool,'T_0') = s(bool,X5) | s(bool,'T_0') = s(bool,g(s(bool,'T_0')))) )),
  inference(superposition,[],[f1798,f226])).
fof(f36118,plain,(
  ( ! [X52,X50,X48,X53,X51,X49] : (s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X48) = s(fun(bool,bool),X49) | s(bool,X50) = s(bool,sK18(X48,X49,bool,bool)) | s(bool,'T_0') = s(bool,X50) | s(bool,X51) = s(bool,X52) | s(bool,X52) = s(bool,g(s(bool,'T_0'))) | s(bool,X51) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f1798,f1507])).
fof(f48489,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (s(bool,X59) != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X57) = s(fun(bool,bool),X58) | s(bool,'T_0') = s(bool,X59) | s(bool,'T_0') = s(bool,g(s(bool,sK18(X57,X58,bool,bool)))) | s(bool,X60) = s(bool,X61) | s(bool,X61) = s(bool,X62) | s(bool,'T_0') = s(bool,X62) | s(bool,X60) = s(bool,sK18(X57,X58,bool,bool))) )),
  inference(superposition,[],[f1596,f1507])).
fof(f50831,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (s(bool,X60) = s(bool,sK18(X57,X58,bool,bool)) | s(bool,'T_0') = s(bool,X59) | s(bool,'T_0') = s(bool,X62) | s(bool,X59) = s(bool,g(s(bool,sK18(X57,X58,bool,bool)))) | s(bool,X60) = s(bool,X61) | s(bool,X61) = s(bool,X62) | s(fun(bool,bool),X57) = s(fun(bool,bool),X58)) ) | $spl64),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f383,f1521,f1520,f15634,f15637,f15642,f16475,f18152,f18311,f27085,f21682,f26901,f26887,f21786,f22244,f27469,f27473,f27479,f27481,f27531,f22874,f27533,f27590,f27591,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f23671,f27675,f27676,f27718,f27806,f24822,f30868,f30873,f30878,f33151,f33153,f34176,f34197,f34154,f34203,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f34334,f34340,f34342,f32738,f31647,f18796,f35322,f35327,f36092,f36142,f36145,f36121,f5743,f5744,f306,f2137,f307,f2136,f27663,f27664,f36003,f36002,f35990,f35984,f35973,f35967,f35829,f35766,f35765,f35753,f35747,f35736,f35730,f35592,f35541,f35526,f35520,f35511,f35432,f35417,f35411,f35402,f27662,f27661,f27660,f27659,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f23670,f23669,f23668,f23667,f23188,f23187,f23186,f23185,f22873,f22872,f22871,f22870,f22243,f22242,f22241,f22240,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f29573,f29260,f28877,f27897,f23666,f23665,f23664,f23663,f23651,f23650,f23649,f23648,f23184,f23183,f23182,f23181,f23169,f23168,f23167,f23166,f22869,f22868,f22867,f22866,f22854,f22853,f22852,f22851,f22239,f22238,f22237,f22236,f22224,f22223,f22222,f22221,f17990,f17989,f17914,f17913,f9105,f9104,f9004,f9003,f3339,f3337,f3311,f3309,f3286,f3284,f3259,f3257,f36010,f35915,f35773,f35678,f35509,f35400,f35212,f35137,f34329,f34307,f34096,f34092,f34088,f34084,f34016,f34015,f34013,f34012,f34010,f34009,f34008,f34007,f34006,f34005,f34004,f34003,f34002,f34001,f34000,f33999,f33998,f33997,f33996,f33995,f33994,f33993,f33992,f33827,f33826,f33825,f33824,f33823,f33822,f33821,f33819,f33818,f33817,f33816,f33815,f33814,f33813,f33812,f33811,f33810,f33809,f33808,f33807,f33806,f33801,f33498,f33495,f33492,f33489,f33477,f33476,f33475,f33471,f33454,f33453,f33452,f33449,f33448,f33445,f33444,f33443,f33437,f33435,f33432,f33431,f33373,f33368,f33367,f33366,f33341,f31081,f31080,f31079,f31077,f31072,f31071,f23662,f23661,f23660,f23659,f23658,f23657,f23656,f23655,f23654,f23653,f23652,f23647,f23180,f23179,f23178,f23177,f23176,f23175,f23174,f23173,f23172,f23171,f23170,f23165,f22865,f22864,f22863,f22862,f22861,f22860,f22859,f22858,f22857,f22856,f22855,f22850,f22235,f22234,f22233,f22232,f22231,f22230,f22229,f22228,f22227,f22226,f22225,f22220,f8542,f8541,f8489,f8488,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1782,f1347,f1340,f1088,f36012,f35914,f35775,f35677,f35540,f35508,f35431,f35399,f34371,f34368,f34170,f34156,f33372,f33363,f32959,f32945,f32124,f32123,f32122,f32121,f32120,f32119,f32118,f32117,f32116,f32115,f32114,f31895,f31322,f31298,f31076,f27658,f27657,f27656,f27655,f27654,f27653,f27652,f21823,f21784,f21750,f21247,f15630,f11482,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f35319,f30870,f27665,f27651,f2138,f2130,f261,f260,f33800,f32546,f31297,f23646,f23164,f22849,f22219,f1780,f1596,f33474,f33434,f33433,f32967,f32111,f17988,f17912,f11359,f9103,f9002,f8540,f8487,f3343,f3315,f3290,f3263,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f237,f236,f44348,f44457,f44466,f44519,f44610,f44619,f44655,f44740,f44749,f44818,f45680,f45689,f45756,f45847,f45856,f45897,f45986,f45995,f46036,f46280,f46289,f46774,f46770,f46769,f46762,f46537,f46536,f46535,f46534,f46533,f46532,f46531,f46529,f46528,f46521,f46509,f46459,f46452,f46445,f46444,f46420,f46419,f46416,f46415,f46414,f46411,f46409,f46408,f46405,f46403,f46402,f46401,f46400,f46399,f46382,f46365,f46364,f46363,f46362,f46349,f46348,f46339,f46338,f46336,f46335,f46334,f46327,f46963,f46964,f46965,f46966,f46971,f46973,f46974,f46975,f46979,f47048,f47049,f47050,f47051,f47056,f47058,f47059,f47060,f47064,f47105,f47106,f47107,f47108,f47113,f47115,f47116,f47117,f47121,f47164,f47165,f47166,f47167,f47172,f47174,f47175,f47176,f47180,f47219,f47220,f47221,f47222,f47227,f47229,f47230,f47231,f47235,f47320,f47321,f47322,f47323,f47328,f47330,f47331,f47332,f47336,f47410,f47411,f47412,f47514,f47515,f47516,f46926,f46922,f46921,f46917,f47608,f46916,f46915,f46342,f46446,f46453,f46514,f47836,f47884,f47840,f47885,f47886,f47893,f47959,f48007,f47963,f48008,f48009,f48016,f48065,f48081,f48114,f48115,f48116,f48168,f48184,f48217,f48218,f48219,f48264,f48280,f48313,f48314,f48321,f48361,f48377,f48410,f48411,f48418,f48475,f48540,f48551,f48606,f48607,f48634,f48632,f48693,f48694,f48695,f48696,f48701,f48703,f48704,f48705,f48709,f48748,f48749,f48750,f48751,f48756,f48758,f48759,f48760,f48764,f48834,f48832,f48825,f48820,f48904,f48902,f48895,f48890,f48612,f49010,f49015,f48608,f50179,f50246,f50245,f50244,f50238,f50234,f50311,f50379,f50378,f50377,f50371,f50367,f50501,f50502,f50503,f50508,f50510,f50511,f50512,f50516,f50517,f50519,f50521,f50529,f50532,f50561,f50562,f50569,f50652,f49018,f49014,f50813,f49009,f49008,f48611])).
fof(f48611,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X57) = s(fun(bool,bool),X58) | s(bool,X59) = s(bool,g(s(bool,sK18(X57,X58,bool,bool)))) | s(bool,'T_0') = s(bool,X59) | s(bool,X60) = s(bool,X61) | s(bool,X61) = s(bool,X62) | s(bool,'T_0') = s(bool,X62) | s(bool,X60) = s(bool,sK18(X57,X58,bool,bool))) )),
  inference(superposition,[],[f1780,f1507])).
fof(f50652,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (sP6('const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))),happ(s(fun(bool,bool),X5),s(bool,X0)),'|dollar|exists_1'(s(fun(bool,bool),X5))) | s(bool,X6) = s(bool,'const.min.@_1'(s(fun(bool,bool),X5))) | s(bool,'T_0') = s(bool,X6) | s(bool,X7) = s(bool,X8) | s(bool,X8) = s(bool,X9) | s(bool,'T_0') = s(bool,X9) | s(bool,X0) = s(bool,X7)) )),
  inference(superposition,[],[f9003,f1507])).
fof(f50569,plain,(
  ( ! [X80,X78,X76,X74,X79,X77,X75,X73] : (s(X73,X74) = s(X73,happ(s(fun(X75,X73),X76),s(X75,happ(s(fun(X73,X75),sK19(X76,X77,'const.pred_set.IMAGE_2'(s(fun(X75,X73),X76),s(fun(X75,bool),X77)),X73,X75)),s(X73,X74))))) | s(bool,X78) = s(bool,X79) | s(bool,X79) = s(bool,'const.bool.IN_2'(s(X73,X74),s(fun(X73,bool),'const.pred_set.IMAGE_2'(s(fun(X75,X73),X76),s(fun(X75,bool),X77))))) | s(bool,X78) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(subsumption_resolution,[],[f50545,f219])).
fof(f50545,plain,(
  ( ! [X80,X78,X76,X74,X79,X77,X75,X73] : (~p(s(bool,'T_0')) | s(X73,X74) = s(X73,happ(s(fun(X75,X73),X76),s(X75,happ(s(fun(X73,X75),sK19(X76,X77,'const.pred_set.IMAGE_2'(s(fun(X75,X73),X76),s(fun(X75,bool),X77)),X73,X75)),s(X73,X74))))) | s(bool,X78) = s(bool,X79) | s(bool,X79) = s(bool,'const.bool.IN_2'(s(X73,X74),s(fun(X73,bool),'const.pred_set.IMAGE_2'(s(fun(X75,X73),X76),s(fun(X75,bool),X77))))) | s(bool,X78) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f5743,f1507])).
fof(f50562,plain,(
  ( ! [X30,X33,X31,X29,X32] : (s(X29,X30) = s(X29,happ(s(fun(X31,X29),X32),s(X31,happ(s(fun(X29,X31),sK19(X32,X33,'const.pred_set.IMAGE_2'(s(fun(X31,X29),X32),s(fun(X31,bool),X33)),X29,X31)),s(X29,X30))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X29,X30),s(fun(X29,bool),'const.pred_set.IMAGE_2'(s(fun(X31,X29),X32),s(fun(X31,bool),X33)))))) )),
  inference(subsumption_resolution,[],[f50539,f46327])).
fof(f50539,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | s(X29,X30) = s(X29,happ(s(fun(X31,X29),X32),s(X31,happ(s(fun(X29,X31),sK19(X32,X33,'const.pred_set.IMAGE_2'(s(fun(X31,X29),X32),s(fun(X31,bool),X33)),X29,X31)),s(X29,X30))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X29,X30),s(fun(X29,bool),'const.pred_set.IMAGE_2'(s(fun(X31,X29),X32),s(fun(X31,bool),X33)))))) )),
  inference(superposition,[],[f5743,f785])).
fof(f50561,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (s(X5,X6) = s(X5,happ(s(fun(X7,X5),X8),s(X7,happ(s(fun(X5,X7),sK19(X8,X9,'const.pred_set.IMAGE_2'(s(fun(X7,X5),X8),s(fun(X7,bool),X9)),X5,X7)),s(X5,X6))))) | s(bool,X10) = s(bool,'const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X7,X5),X8),s(fun(X7,bool),X9))))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f50535,f219])).
fof(f50535,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (~p(s(bool,'T_0')) | s(X5,X6) = s(X5,happ(s(fun(X7,X5),X8),s(X7,happ(s(fun(X5,X7),sK19(X8,X9,'const.pred_set.IMAGE_2'(s(fun(X7,X5),X8),s(fun(X7,bool),X9)),X5,X7)),s(X5,X6))))) | s(bool,X10) = s(bool,'const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X7,X5),X8),s(fun(X7,bool),X9))))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f5743,f518])).
fof(f50532,plain,(
  ( ! [X167,X165,X169,X166,X168] : (~p(s(bool,'const.bool.IN_2'(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X165))),s(fun(bool,bool),'const.pred_set.IMAGE_2'(s(fun(X166,bool),X167),s(fun(X166,bool),X168)))))) | s(bool,happ(s(fun(bool,bool),X165),s(bool,'T_0'))) = s(bool,happ(s(fun(X166,bool),X167),s(X166,happ(s(fun(bool,X166),sK19(X167,X168,'const.pred_set.IMAGE_2'(s(fun(X166,bool),X167),s(fun(X166,bool),X168)),bool,X166)),s(bool,happ(s(fun(bool,bool),X165),s(bool,'T_0'))))))) | s(bool,X169) = s(bool,'const.min.@_1'(s(fun(bool,bool),X165))) | s(bool,'T_0') = s(bool,X169)) )),
  inference(superposition,[],[f5743,f1782])).
fof(f50529,plain,(
  ( ! [X152,X151,X149,X153,X150] : (~p(s(bool,'const.bool.IN_2'(s(bool,X150),s(fun(bool,bool),'const.pred_set.IMAGE_2'(s(fun(X151,bool),X152),s(fun(X151,bool),X153)))))) | s(bool,'const.min.@_1'(s(fun(bool,bool),X149))) = s(bool,happ(s(fun(X151,bool),X152),s(X151,happ(s(fun(bool,X151),sK19(X152,X153,'const.pred_set.IMAGE_2'(s(fun(X151,bool),X152),s(fun(X151,bool),X153)),bool,X151)),s(bool,'const.min.@_1'(s(fun(bool,bool),X149))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X149))) = s(bool,happ(s(fun(bool,bool),X149),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X150)) )),
  inference(superposition,[],[f5743,f1782])).
fof(f50521,plain,(
  ( ! [X121,X122,X120,X119] : (~p(s(bool,'const.bool.IN_2'(s(bool,X119),s(fun(bool,bool),'const.pred_set.IMAGE_2'(s(fun(X120,bool),X121),s(fun(X120,bool),X122)))))) | s(bool,'F_0') = s(bool,happ(s(fun(X120,bool),X121),s(X120,happ(s(fun(bool,X120),sK19(X121,X122,'const.pred_set.IMAGE_2'(s(fun(X120,bool),X121),s(fun(X120,bool),X122)),bool,X120)),s(bool,'F_0'))))) | s(bool,'T_0') = s(bool,X119)) )),
  inference(superposition,[],[f5743,f226])).
fof(f50519,plain,(
  ( ! [X111,X109,X112,X110,X113] : (~p(s(bool,'const.bool.IN_2'(s(bool,X109),s(fun(bool,bool),'const.pred_set.IMAGE_2'(s(fun(X110,bool),X111),s(fun(X110,bool),X112)))))) | s(bool,'T_0') = s(bool,happ(s(fun(X110,bool),X111),s(X110,happ(s(fun(bool,X110),sK19(X111,X112,'const.pred_set.IMAGE_2'(s(fun(X110,bool),X111),s(fun(X110,bool),X112)),bool,X110)),s(bool,'T_0'))))) | s(bool,X109) = s(bool,X113) | s(bool,'T_0') = s(bool,X113)) )),
  inference(superposition,[],[f5743,f518])).
fof(f50517,plain,(
  ( ! [X101,X99,X97,X95,X100,X98,X96] : (~p(s(bool,'const.bool.IN_2'(s(bool,X95),s(fun(bool,bool),'const.pred_set.IMAGE_2'(s(fun(X96,bool),X97),s(fun(X96,bool),X98)))))) | s(bool,'T_0') = s(bool,happ(s(fun(X96,bool),X97),s(X96,happ(s(fun(bool,X96),sK19(X97,X98,'const.pred_set.IMAGE_2'(s(fun(X96,bool),X97),s(fun(X96,bool),X98)),bool,X96)),s(bool,'T_0'))))) | s(bool,X99) = s(bool,X100) | s(bool,X100) = s(bool,X101) | s(bool,'T_0') = s(bool,X101) | s(bool,X95) = s(bool,X99)) )),
  inference(superposition,[],[f5743,f1507])).
fof(f50516,plain,(
  ( ! [X94,X92,X90,X93,X91] : (~p(s(bool,'const.bool.IN_2'(s(bool,'const.min.@_1'(s(fun(bool,bool),X91))),s(fun(bool,bool),'const.pred_set.IMAGE_2'(s(fun(X92,bool),X93),s(fun(X92,bool),X94)))))) | s(bool,X90) = s(bool,happ(s(fun(X92,bool),X93),s(X92,happ(s(fun(bool,X92),sK19(X93,X94,'const.pred_set.IMAGE_2'(s(fun(X92,bool),X93),s(fun(X92,bool),X94)),bool,X92)),s(bool,X90))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X91))) = s(bool,happ(s(fun(bool,bool),X91),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X90)) )),
  inference(superposition,[],[f5743,f1782])).
fof(f50512,plain,(
  ( ! [X68,X66,X64,X62,X67,X65,X63] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.IMAGE_2'(s(fun(X63,bool),X64),s(fun(X63,bool),X65)))))) | s(bool,X62) = s(bool,happ(s(fun(X63,bool),X64),s(X63,happ(s(fun(bool,X63),sK19(X64,X65,'const.pred_set.IMAGE_2'(s(fun(X63,bool),X64),s(fun(X63,bool),X65)),bool,X63)),s(bool,X62))))) | s(bool,X66) = s(bool,X67) | s(bool,X62) = s(bool,X67) | s(bool,X66) = s(bool,X68) | s(bool,'T_0') = s(bool,X68)) )),
  inference(superposition,[],[f5743,f1507])).
fof(f50511,plain,(
  ( ! [X61,X59,X57,X60,X58,X56,X55] : (~p(s(bool,'const.bool.IN_2'(s(bool,X56),s(fun(bool,bool),'const.pred_set.IMAGE_2'(s(fun(X57,bool),X58),s(fun(X57,bool),X59)))))) | s(bool,X55) = s(bool,happ(s(fun(X57,bool),X58),s(X57,happ(s(fun(bool,X57),sK19(X58,X59,'const.pred_set.IMAGE_2'(s(fun(X57,bool),X58),s(fun(X57,bool),X59)),bool,X57)),s(bool,X55))))) | s(bool,X56) = s(bool,X60) | s(bool,'T_0') = s(bool,X55) | s(bool,X60) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f5743,f1507])).
fof(f50510,plain,(
  ( ! [X54,X52,X50,X48,X53,X51,X49] : (~p(s(bool,'const.bool.IN_2'(s(bool,X49),s(fun(bool,bool),'const.pred_set.IMAGE_2'(s(fun(X50,bool),X51),s(fun(X50,bool),X52)))))) | s(bool,X48) = s(bool,happ(s(fun(X50,bool),X51),s(X50,happ(s(fun(bool,X50),sK19(X51,X52,'const.pred_set.IMAGE_2'(s(fun(X50,bool),X51),s(fun(X50,bool),X52)),bool,X50)),s(bool,X48))))) | s(bool,X48) = s(bool,X53) | s(bool,'T_0') = s(bool,X49) | s(bool,X53) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f5743,f1507])).
fof(f50508,plain,(
  ( ! [X39,X37,X35,X38,X36,X34,X40] : (~p(s(bool,'const.bool.IN_2'(s(bool,X35),s(fun(bool,bool),'const.pred_set.IMAGE_2'(s(fun(X36,bool),X37),s(fun(X36,bool),X38)))))) | s(bool,X34) = s(bool,happ(s(fun(X36,bool),X37),s(X36,happ(s(fun(bool,X36),sK19(X37,X38,'const.pred_set.IMAGE_2'(s(fun(X36,bool),X37),s(fun(X36,bool),X38)),bool,X36)),s(bool,X34))))) | s(bool,X35) = s(bool,X39) | s(bool,'T_0') = s(bool,X39) | s(bool,X34) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f5743,f1507])).
fof(f50503,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,'const.bool.IN_2'(s(bool,X10),s(fun(bool,bool),'const.pred_set.IMAGE_2'(s(fun(X11,bool),X12),s(fun(X11,bool),X13)))))) | s(bool,X9) = s(bool,happ(s(fun(X11,bool),X12),s(X11,happ(s(fun(bool,X11),sK19(X12,X13,'const.pred_set.IMAGE_2'(s(fun(X11,bool),X12),s(fun(X11,bool),X13)),bool,X11)),s(bool,X9))))) | s(bool,'T_0') = s(bool,X10) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f5743,f518])).
fof(f50502,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.IMAGE_2'(s(fun(X5,bool),X6),s(fun(X5,bool),X7)))))) | s(bool,X4) = s(bool,happ(s(fun(X5,bool),X6),s(X5,happ(s(fun(bool,X5),sK19(X6,X7,'const.pred_set.IMAGE_2'(s(fun(X5,bool),X6),s(fun(X5,bool),X7)),bool,X5)),s(bool,X4))))) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f5743,f518])).
fof(f50501,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.IMAGE_2'(s(fun(X1,bool),X2),s(fun(X1,bool),X3)))))) | s(bool,X0) = s(bool,happ(s(fun(X1,bool),X2),s(X1,happ(s(fun(bool,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,bool),X2),s(fun(X1,bool),X3)),bool,X1)),s(bool,X0))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f5743,f226])).
fof(f50367,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~sP7(happ(s(fun(bool,bool),X95),s(bool,'const.min.@_1'(s(fun(bool,bool),X96)))),X97,X98) | sP8(happ(s(fun(bool,bool),X95),s(bool,X99)),X97,X98) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X95)))) | s(bool,'T_0') = s(bool,X99) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X95))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X96))) = s(bool,happ(s(fun(bool,bool),X96),s(bool,'T_0')))) )),
  inference(duplicate_literal_removal,[],[f50366])).
fof(f50366,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~sP7(happ(s(fun(bool,bool),X95),s(bool,'const.min.@_1'(s(fun(bool,bool),X96)))),X97,X98) | sP8(happ(s(fun(bool,bool),X95),s(bool,X99)),X97,X98) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X95)))) | s(bool,'T_0') = s(bool,X99) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X95))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X96))) = s(bool,happ(s(fun(bool,bool),X96),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X95)))) )),
  inference(superposition,[],[f8542,f1782])).
fof(f50371,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (~sP7(happ(s(fun(bool,bool),X60),s(bool,X61)),X62,X63) | sP8(happ(s(fun(bool,bool),X60),s(bool,X64)),X62,X63) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X60)))) | s(bool,'T_0') = s(bool,X64) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X60))) | s(bool,X61) = s(bool,X65) | s(bool,X65) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(duplicate_literal_removal,[],[f50361])).
fof(f50361,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (~sP7(happ(s(fun(bool,bool),X60),s(bool,X61)),X62,X63) | sP8(happ(s(fun(bool,bool),X60),s(bool,X64)),X62,X63) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X60)))) | s(bool,'T_0') = s(bool,X64) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X60))) | s(bool,X61) = s(bool,X65) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X60))) | s(bool,X65) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f8542,f1507])).
fof(f50377,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~sP7(happ(s(fun(bool,bool),X14),s(bool,X15)),X16,X17) | sP8(happ(s(fun(bool,bool),X14),s(bool,X18)),X16,X17) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X14)))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X14))) | s(bool,'T_0') = s(bool,X15)) )),
  inference(duplicate_literal_removal,[],[f50353])).
fof(f50353,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~sP7(happ(s(fun(bool,bool),X14),s(bool,X15)),X16,X17) | sP8(happ(s(fun(bool,bool),X14),s(bool,X18)),X16,X17) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X14)))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X14))) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X14)))) )),
  inference(superposition,[],[f8542,f518])).
fof(f50378,plain,(
  ( ! [X6,X8,X7,X5] : (~sP7(happ(s(fun(bool,bool),X5),s(bool,'F_0')),X6,X7) | sP8(happ(s(fun(bool,bool),X5),s(bool,X8)),X6,X7) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5)))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) )),
  inference(duplicate_literal_removal,[],[f50351])).
fof(f50351,plain,(
  ( ! [X6,X8,X7,X5] : (~sP7(happ(s(fun(bool,bool),X5),s(bool,'F_0')),X6,X7) | sP8(happ(s(fun(bool,bool),X5),s(bool,X8)),X6,X7) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5)))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X5))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) )),
  inference(superposition,[],[f8542,f226])).
fof(f50379,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP7(happ(s(fun(bool,bool),X0),s(bool,X1)),X2,X3) | sP8(happ(s(fun(bool,bool),X0),s(bool,X4)),X2,X3) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,'T_0') = s(bool,X4) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(subsumption_resolution,[],[f50350,f34307])).
fof(f50350,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP7(happ(s(fun(bool,bool),X0),s(bool,X1)),X2,X3) | sP8(happ(s(fun(bool,bool),X0),s(bool,X4)),X2,X3) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f8542,f1782])).
fof(f50311,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,X0) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | ~sP7(happ(s(fun(bool,bool),X1),s(bool,X2)),X3,X4) | sP8(happ(s(fun(bool,bool),X1),s(bool,'T_0')),X3,X4) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,'T_0') = s(bool,X0) | s(bool,X2) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(duplicate_literal_removal,[],[f50310])).
fof(f50310,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,X0) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | ~sP7(happ(s(fun(bool,bool),X1),s(bool,X2)),X3,X4) | sP8(happ(s(fun(bool,bool),X1),s(bool,'T_0')),X3,X4) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,'T_0') = s(bool,X0) | s(bool,X2) = s(bool,X5) | s(bool,'T_0') = s(bool,X5) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f50291])).
fof(f50291,plain,(
  ( ! [X39,X45,X43,X41,X44,X42,X40] : (~sP7(happ(s(fun(bool,bool),X39),s(bool,X40)),X41,X42) | sP8(happ(s(fun(bool,bool),X39),s(bool,'T_0')),X41,X42) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X39)))) | s(bool,X43) = s(bool,'const.min.@_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X43) | s(bool,X40) = s(bool,X44) | s(bool,'T_0') = s(bool,X44) | s(bool,X45) = s(bool,'const.min.@_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f8541,f1507])).
fof(f50234,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~sP9(happ(s(fun(bool,bool),X95),s(bool,'const.min.@_1'(s(fun(bool,bool),X96)))),X97,X98) | sP10(happ(s(fun(bool,bool),X95),s(bool,X99)),X97,X98) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X95)))) | s(bool,'T_0') = s(bool,X99) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X95))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X96))) = s(bool,happ(s(fun(bool,bool),X96),s(bool,'T_0')))) )),
  inference(duplicate_literal_removal,[],[f50233])).
fof(f50233,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~sP9(happ(s(fun(bool,bool),X95),s(bool,'const.min.@_1'(s(fun(bool,bool),X96)))),X97,X98) | sP10(happ(s(fun(bool,bool),X95),s(bool,X99)),X97,X98) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X95)))) | s(bool,'T_0') = s(bool,X99) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X95))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X96))) = s(bool,happ(s(fun(bool,bool),X96),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X95)))) )),
  inference(superposition,[],[f8489,f1782])).
fof(f50238,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (~sP9(happ(s(fun(bool,bool),X60),s(bool,X61)),X62,X63) | sP10(happ(s(fun(bool,bool),X60),s(bool,X64)),X62,X63) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X60)))) | s(bool,'T_0') = s(bool,X64) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X60))) | s(bool,X61) = s(bool,X65) | s(bool,X65) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(duplicate_literal_removal,[],[f50228])).
fof(f50228,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (~sP9(happ(s(fun(bool,bool),X60),s(bool,X61)),X62,X63) | sP10(happ(s(fun(bool,bool),X60),s(bool,X64)),X62,X63) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X60)))) | s(bool,'T_0') = s(bool,X64) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X60))) | s(bool,X61) = s(bool,X65) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X60))) | s(bool,X65) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f8489,f1507])).
fof(f50244,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~sP9(happ(s(fun(bool,bool),X14),s(bool,X15)),X16,X17) | sP10(happ(s(fun(bool,bool),X14),s(bool,X18)),X16,X17) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X14)))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X14))) | s(bool,'T_0') = s(bool,X15)) )),
  inference(duplicate_literal_removal,[],[f50220])).
fof(f50220,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~sP9(happ(s(fun(bool,bool),X14),s(bool,X15)),X16,X17) | sP10(happ(s(fun(bool,bool),X14),s(bool,X18)),X16,X17) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X14)))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X14))) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X14)))) )),
  inference(superposition,[],[f8489,f518])).
fof(f50245,plain,(
  ( ! [X6,X8,X7,X5] : (~sP9(happ(s(fun(bool,bool),X5),s(bool,'F_0')),X6,X7) | sP10(happ(s(fun(bool,bool),X5),s(bool,X8)),X6,X7) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5)))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) )),
  inference(duplicate_literal_removal,[],[f50218])).
fof(f50218,plain,(
  ( ! [X6,X8,X7,X5] : (~sP9(happ(s(fun(bool,bool),X5),s(bool,'F_0')),X6,X7) | sP10(happ(s(fun(bool,bool),X5),s(bool,X8)),X6,X7) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5)))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X5))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) )),
  inference(superposition,[],[f8489,f226])).
fof(f50246,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP9(happ(s(fun(bool,bool),X0),s(bool,X1)),X2,X3) | sP10(happ(s(fun(bool,bool),X0),s(bool,X4)),X2,X3) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,'T_0') = s(bool,X4) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(subsumption_resolution,[],[f50217,f34307])).
fof(f50217,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP9(happ(s(fun(bool,bool),X0),s(bool,X1)),X2,X3) | sP10(happ(s(fun(bool,bool),X0),s(bool,X4)),X2,X3) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f8489,f1782])).
fof(f50179,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,X0) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | ~sP9(happ(s(fun(bool,bool),X1),s(bool,X2)),X3,X4) | sP10(happ(s(fun(bool,bool),X1),s(bool,'T_0')),X3,X4) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,'T_0') = s(bool,X0) | s(bool,X2) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(duplicate_literal_removal,[],[f50178])).
fof(f50178,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,X0) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | ~sP9(happ(s(fun(bool,bool),X1),s(bool,X2)),X3,X4) | sP10(happ(s(fun(bool,bool),X1),s(bool,'T_0')),X3,X4) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,'T_0') = s(bool,X0) | s(bool,X2) = s(bool,X5) | s(bool,'T_0') = s(bool,X5) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f50159])).
fof(f50159,plain,(
  ( ! [X39,X45,X43,X41,X44,X42,X40] : (~sP9(happ(s(fun(bool,bool),X39),s(bool,X40)),X41,X42) | sP10(happ(s(fun(bool,bool),X39),s(bool,'T_0')),X41,X42) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X39)))) | s(bool,X43) = s(bool,'const.min.@_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X43) | s(bool,X40) = s(bool,X44) | s(bool,'T_0') = s(bool,X44) | s(bool,X45) = s(bool,'const.min.@_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f8488,f1507])).
fof(f48608,plain,(
  ( ! [X39,X43,X41,X44,X42,X40] : (s(bool,'T_0') != s(bool,f(s(bool,X41))) | s(fun(bool,bool),X39) = s(fun(bool,bool),X40) | s(bool,X42) = s(bool,g(s(bool,sK18(X39,X40,bool,bool)))) | s(bool,'T_0') = s(bool,X42) | s(bool,X43) = s(bool,sK18(X39,X40,bool,bool)) | s(bool,'T_0') = s(bool,X41) | s(bool,X43) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f1780,f1507])).
fof(f48612,plain,(
  ( ! [X68,X66,X64,X67,X65,X63] : (s(bool,'T_0') != s(bool,f(s(bool,X65))) | s(fun(bool,bool),X63) = s(fun(bool,bool),X64) | s(bool,X66) = s(bool,g(s(bool,sK18(X63,X64,bool,bool)))) | s(bool,'T_0') = s(bool,X66) | s(bool,X67) = s(bool,sK18(X63,X64,bool,bool)) | s(bool,X67) = s(bool,X68) | s(bool,'T_0') = s(bool,X68) | s(bool,'T_0') = s(bool,X65)) )),
  inference(superposition,[],[f1780,f1507])).
fof(f48890,plain,(
  ( ! [X80,X81,X79,X82] : (~sP7(happ(s(fun(bool,bool),X79),s(bool,'const.min.@_1'(s(fun(bool,bool),X80)))),X81,X82) | sP8(happ(s(fun(bool,bool),X79),s(bool,'F_0')),X81,X82) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X79)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X79))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X80))) = s(bool,happ(s(fun(bool,bool),X80),s(bool,'T_0')))) )),
  inference(duplicate_literal_removal,[],[f48889])).
fof(f48889,plain,(
  ( ! [X80,X81,X79,X82] : (~sP7(happ(s(fun(bool,bool),X79),s(bool,'const.min.@_1'(s(fun(bool,bool),X80)))),X81,X82) | sP8(happ(s(fun(bool,bool),X79),s(bool,'F_0')),X81,X82) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X79)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X79))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X80))) = s(bool,happ(s(fun(bool,bool),X80),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X79)))) )),
  inference(superposition,[],[f8540,f1782])).
fof(f48895,plain,(
  ( ! [X54,X52,X50,X53,X51,X49] : (~sP7(happ(s(fun(bool,bool),X49),s(bool,X50)),X51,X52) | sP8(happ(s(fun(bool,bool),X49),s(bool,'F_0')),X51,X52) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X49)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X49))) | s(bool,X50) = s(bool,X53) | s(bool,X53) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(duplicate_literal_removal,[],[f48884])).
fof(f48884,plain,(
  ( ! [X54,X52,X50,X53,X51,X49] : (~sP7(happ(s(fun(bool,bool),X49),s(bool,X50)),X51,X52) | sP8(happ(s(fun(bool,bool),X49),s(bool,'F_0')),X51,X52) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X49)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X49))) | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X49))) | s(bool,X53) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f8540,f1507])).
fof(f48902,plain,(
  ( ! [X14,X12,X13,X11] : (~sP7(happ(s(fun(bool,bool),X11),s(bool,X12)),X13,X14) | sP8(happ(s(fun(bool,bool),X11),s(bool,'F_0')),X13,X14) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X11)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X11))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(duplicate_literal_removal,[],[f48876])).
fof(f48876,plain,(
  ( ! [X14,X12,X13,X11] : (~sP7(happ(s(fun(bool,bool),X11),s(bool,X12)),X13,X14) | sP8(happ(s(fun(bool,bool),X11),s(bool,'F_0')),X13,X14) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X11)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X11))) | s(bool,'T_0') = s(bool,X12) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X11)))) )),
  inference(superposition,[],[f8540,f518])).
fof(f48904,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7(happ(s(fun(bool,bool),X0),s(bool,X1)),X2,X3) | sP8(happ(s(fun(bool,bool),X0),s(bool,'F_0')),X2,X3) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(subsumption_resolution,[],[f48873,f34307])).
fof(f48873,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7(happ(s(fun(bool,bool),X0),s(bool,X1)),X2,X3) | sP8(happ(s(fun(bool,bool),X0),s(bool,'F_0')),X2,X3) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f8540,f1782])).
fof(f48820,plain,(
  ( ! [X80,X81,X79,X82] : (~sP9(happ(s(fun(bool,bool),X79),s(bool,'const.min.@_1'(s(fun(bool,bool),X80)))),X81,X82) | sP10(happ(s(fun(bool,bool),X79),s(bool,'F_0')),X81,X82) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X79)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X79))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X80))) = s(bool,happ(s(fun(bool,bool),X80),s(bool,'T_0')))) )),
  inference(duplicate_literal_removal,[],[f48819])).
fof(f48819,plain,(
  ( ! [X80,X81,X79,X82] : (~sP9(happ(s(fun(bool,bool),X79),s(bool,'const.min.@_1'(s(fun(bool,bool),X80)))),X81,X82) | sP10(happ(s(fun(bool,bool),X79),s(bool,'F_0')),X81,X82) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X79)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X79))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X80))) = s(bool,happ(s(fun(bool,bool),X80),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X79)))) )),
  inference(superposition,[],[f8487,f1782])).
fof(f48825,plain,(
  ( ! [X54,X52,X50,X53,X51,X49] : (~sP9(happ(s(fun(bool,bool),X49),s(bool,X50)),X51,X52) | sP10(happ(s(fun(bool,bool),X49),s(bool,'F_0')),X51,X52) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X49)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X49))) | s(bool,X50) = s(bool,X53) | s(bool,X53) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(duplicate_literal_removal,[],[f48814])).
fof(f48814,plain,(
  ( ! [X54,X52,X50,X53,X51,X49] : (~sP9(happ(s(fun(bool,bool),X49),s(bool,X50)),X51,X52) | sP10(happ(s(fun(bool,bool),X49),s(bool,'F_0')),X51,X52) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X49)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X49))) | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X49))) | s(bool,X53) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f8487,f1507])).
fof(f48832,plain,(
  ( ! [X14,X12,X13,X11] : (~sP9(happ(s(fun(bool,bool),X11),s(bool,X12)),X13,X14) | sP10(happ(s(fun(bool,bool),X11),s(bool,'F_0')),X13,X14) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X11)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X11))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(duplicate_literal_removal,[],[f48806])).
fof(f48806,plain,(
  ( ! [X14,X12,X13,X11] : (~sP9(happ(s(fun(bool,bool),X11),s(bool,X12)),X13,X14) | sP10(happ(s(fun(bool,bool),X11),s(bool,'F_0')),X13,X14) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X11)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X11))) | s(bool,'T_0') = s(bool,X12) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X11)))) )),
  inference(superposition,[],[f8487,f518])).
fof(f48834,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9(happ(s(fun(bool,bool),X0),s(bool,X1)),X2,X3) | sP10(happ(s(fun(bool,bool),X0),s(bool,'F_0')),X2,X3) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(subsumption_resolution,[],[f48803,f34307])).
fof(f48803,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9(happ(s(fun(bool,bool),X0),s(bool,X1)),X2,X3) | sP10(happ(s(fun(bool,bool),X0),s(bool,'F_0')),X2,X3) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f8487,f1782])).
fof(f48764,plain,(
  ( ! [X111,X116,X114,X112,X115,X113] : (sP5('const.pred_set.SURJ_3'(s(fun(X113,X114),X115),s(fun(X113,bool),X116),s(fun(X114,bool),'const.pred_set.IMAGE_2'(s(fun(X113,X114),X115),s(fun(X113,bool),X116)))),happ(s(fun(bool,bool),X111),s(bool,'const.min.@_1'(s(fun(bool,bool),X112)))),'|dollar|exists_1'(s(fun(bool,bool),X111))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X112))) = s(bool,happ(s(fun(bool,bool),X112),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X111)))) )),
  inference(superposition,[],[f9100,f1782])).
fof(f48760,plain,(
  ( ! [X80,X85,X83,X81,X79,X86,X84,X82] : (sP5('const.pred_set.SURJ_3'(s(fun(X80,X81),X82),s(fun(X80,bool),X83),s(fun(X81,bool),'const.pred_set.IMAGE_2'(s(fun(X80,X81),X82),s(fun(X80,bool),X83)))),happ(s(fun(bool,bool),X79),s(bool,'T_0')),'|dollar|exists_1'(s(fun(bool,bool),X79))) | s(bool,X84) = s(bool,X85) | s(bool,X85) = s(bool,'const.min.@_1'(s(fun(bool,bool),X79))) | s(bool,X84) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(superposition,[],[f9100,f1507])).
fof(f48759,plain,(
  ( ! [X78,X76,X74,X72,X71,X77,X75,X73] : (sP5('const.pred_set.SURJ_3'(s(fun(X73,X74),X75),s(fun(X73,bool),X76),s(fun(X74,bool),'const.pred_set.IMAGE_2'(s(fun(X73,X74),X75),s(fun(X73,bool),X76)))),happ(s(fun(bool,bool),X71),s(bool,X72)),'|dollar|exists_1'(s(fun(bool,bool),X71))) | s(bool,X72) = s(bool,X77) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X71))) | s(bool,X77) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f9100,f1507])).
fof(f48758,plain,(
  ( ! [X70,X68,X66,X64,X69,X67,X65,X63] : (sP5('const.pred_set.SURJ_3'(s(fun(X65,X66),X67),s(fun(X65,bool),X68),s(fun(X66,bool),'const.pred_set.IMAGE_2'(s(fun(X65,X66),X67),s(fun(X65,bool),X68)))),happ(s(fun(bool,bool),X63),s(bool,X64)),'|dollar|exists_1'(s(fun(bool,bool),X63))) | s(bool,X69) = s(bool,'const.min.@_1'(s(fun(bool,bool),X63))) | s(bool,'T_0') = s(bool,X64) | s(bool,X69) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f9100,f1507])).
fof(f48756,plain,(
  ( ! [X47,X54,X52,X50,X48,X53,X51,X49] : (sP5('const.pred_set.SURJ_3'(s(fun(X49,X50),X51),s(fun(X49,bool),X52),s(fun(X50,bool),'const.pred_set.IMAGE_2'(s(fun(X49,X50),X51),s(fun(X49,bool),X52)))),happ(s(fun(bool,bool),X47),s(bool,X48)),'|dollar|exists_1'(s(fun(bool,bool),X47))) | s(bool,X48) = s(bool,X53) | s(bool,'T_0') = s(bool,X53) | s(bool,X54) = s(bool,'const.min.@_1'(s(fun(bool,bool),X47))) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f9100,f1507])).
fof(f48751,plain,(
  ( ! [X21,X19,X17,X22,X20,X18] : (sP5('const.pred_set.SURJ_3'(s(fun(X19,X20),X21),s(fun(X19,bool),X22),s(fun(X20,bool),'const.pred_set.IMAGE_2'(s(fun(X19,X20),X21),s(fun(X19,bool),X22)))),happ(s(fun(bool,bool),X17),s(bool,X18)),'|dollar|exists_1'(s(fun(bool,bool),X17))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X17)))) )),
  inference(superposition,[],[f9100,f518])).
fof(f48750,plain,(
  ( ! [X14,X12,X15,X13,X11,X16] : (sP5('const.pred_set.SURJ_3'(s(fun(X12,X13),X14),s(fun(X12,bool),X15),s(fun(X13,bool),'const.pred_set.IMAGE_2'(s(fun(X12,X13),X14),s(fun(X12,bool),X15)))),happ(s(fun(bool,bool),X11),s(bool,'T_0')),'|dollar|exists_1'(s(fun(bool,bool),X11))) | s(bool,X16) = s(bool,'const.min.@_1'(s(fun(bool,bool),X11))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f9100,f518])).
fof(f48749,plain,(
  ( ! [X6,X10,X8,X7,X9] : (sP5('const.pred_set.SURJ_3'(s(fun(X7,X8),X9),s(fun(X7,bool),X10),s(fun(X8,bool),'const.pred_set.IMAGE_2'(s(fun(X7,X8),X9),s(fun(X7,bool),X10)))),happ(s(fun(bool,bool),X6),s(bool,'F_0')),'|dollar|exists_1'(s(fun(bool,bool),X6))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X6)))) )),
  inference(superposition,[],[f9100,f226])).
fof(f48748,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP5('const.pred_set.SURJ_3'(s(fun(X2,X3),X4),s(fun(X2,bool),X5),s(fun(X3,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X3),X4),s(fun(X2,bool),X5)))),happ(s(fun(bool,bool),X0),s(bool,X1)),'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f9100,f1782])).
fof(f48709,plain,(
  ( ! [X111,X116,X114,X112,X115,X113] : (sP5('const.pred_set.SURJ_3'(s(fun(X113,X114),X115),s(fun(X113,bool),X116),s(fun(X114,bool),'const.pred_set.IMAGE_2'(s(fun(X113,X114),X115),s(fun(X113,bool),X116)))),'|dollar|exists_1'(s(fun(bool,bool),X111)),happ(s(fun(bool,bool),X111),s(bool,'const.min.@_1'(s(fun(bool,bool),X112))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X112))) = s(bool,happ(s(fun(bool,bool),X112),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X111)))) )),
  inference(superposition,[],[f8999,f1782])).
fof(f48705,plain,(
  ( ! [X80,X85,X83,X81,X79,X86,X84,X82] : (sP5('const.pred_set.SURJ_3'(s(fun(X80,X81),X82),s(fun(X80,bool),X83),s(fun(X81,bool),'const.pred_set.IMAGE_2'(s(fun(X80,X81),X82),s(fun(X80,bool),X83)))),'|dollar|exists_1'(s(fun(bool,bool),X79)),happ(s(fun(bool,bool),X79),s(bool,'T_0'))) | s(bool,X84) = s(bool,X85) | s(bool,X85) = s(bool,'const.min.@_1'(s(fun(bool,bool),X79))) | s(bool,X84) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(superposition,[],[f8999,f1507])).
fof(f48704,plain,(
  ( ! [X78,X76,X74,X72,X71,X77,X75,X73] : (sP5('const.pred_set.SURJ_3'(s(fun(X73,X74),X75),s(fun(X73,bool),X76),s(fun(X74,bool),'const.pred_set.IMAGE_2'(s(fun(X73,X74),X75),s(fun(X73,bool),X76)))),'|dollar|exists_1'(s(fun(bool,bool),X71)),happ(s(fun(bool,bool),X71),s(bool,X72))) | s(bool,X72) = s(bool,X77) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X71))) | s(bool,X77) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f8999,f1507])).
fof(f48703,plain,(
  ( ! [X70,X68,X66,X64,X69,X67,X65,X63] : (sP5('const.pred_set.SURJ_3'(s(fun(X65,X66),X67),s(fun(X65,bool),X68),s(fun(X66,bool),'const.pred_set.IMAGE_2'(s(fun(X65,X66),X67),s(fun(X65,bool),X68)))),'|dollar|exists_1'(s(fun(bool,bool),X63)),happ(s(fun(bool,bool),X63),s(bool,X64))) | s(bool,X69) = s(bool,'const.min.@_1'(s(fun(bool,bool),X63))) | s(bool,'T_0') = s(bool,X64) | s(bool,X69) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f8999,f1507])).
fof(f48701,plain,(
  ( ! [X47,X54,X52,X50,X48,X53,X51,X49] : (sP5('const.pred_set.SURJ_3'(s(fun(X49,X50),X51),s(fun(X49,bool),X52),s(fun(X50,bool),'const.pred_set.IMAGE_2'(s(fun(X49,X50),X51),s(fun(X49,bool),X52)))),'|dollar|exists_1'(s(fun(bool,bool),X47)),happ(s(fun(bool,bool),X47),s(bool,X48))) | s(bool,X48) = s(bool,X53) | s(bool,'T_0') = s(bool,X53) | s(bool,X54) = s(bool,'const.min.@_1'(s(fun(bool,bool),X47))) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f8999,f1507])).
fof(f48696,plain,(
  ( ! [X21,X19,X17,X22,X20,X18] : (sP5('const.pred_set.SURJ_3'(s(fun(X19,X20),X21),s(fun(X19,bool),X22),s(fun(X20,bool),'const.pred_set.IMAGE_2'(s(fun(X19,X20),X21),s(fun(X19,bool),X22)))),'|dollar|exists_1'(s(fun(bool,bool),X17)),happ(s(fun(bool,bool),X17),s(bool,X18))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X17)))) )),
  inference(superposition,[],[f8999,f518])).
fof(f48695,plain,(
  ( ! [X14,X12,X15,X13,X11,X16] : (sP5('const.pred_set.SURJ_3'(s(fun(X12,X13),X14),s(fun(X12,bool),X15),s(fun(X13,bool),'const.pred_set.IMAGE_2'(s(fun(X12,X13),X14),s(fun(X12,bool),X15)))),'|dollar|exists_1'(s(fun(bool,bool),X11)),happ(s(fun(bool,bool),X11),s(bool,'T_0'))) | s(bool,X16) = s(bool,'const.min.@_1'(s(fun(bool,bool),X11))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f8999,f518])).
fof(f48694,plain,(
  ( ! [X6,X10,X8,X7,X9] : (sP5('const.pred_set.SURJ_3'(s(fun(X7,X8),X9),s(fun(X7,bool),X10),s(fun(X8,bool),'const.pred_set.IMAGE_2'(s(fun(X7,X8),X9),s(fun(X7,bool),X10)))),'|dollar|exists_1'(s(fun(bool,bool),X6)),happ(s(fun(bool,bool),X6),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X6)))) )),
  inference(superposition,[],[f8999,f226])).
fof(f48693,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP5('const.pred_set.SURJ_3'(s(fun(X2,X3),X4),s(fun(X2,bool),X5),s(fun(X3,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X3),X4),s(fun(X2,bool),X5)))),'|dollar|exists_1'(s(fun(bool,bool),X0)),happ(s(fun(bool,bool),X0),s(bool,X1))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f8999,f1782])).
fof(f48632,plain,(
  ( ! [X68,X66,X64,X62,X67,X65,X63] : (s(fun(X62,bool),X63) = s(fun(X62,bool),X64) | s(bool,X65) = s(bool,g(s(X62,sK18(X63,X64,bool,X62)))) | s(bool,'T_0') = s(bool,X65) | s(bool,X66) = s(bool,X67) | s(bool,X67) = s(bool,f(s(X62,sK18(X63,X64,bool,X62)))) | s(bool,X66) = s(bool,X68) | s(bool,'T_0') = s(bool,X68)) )),
  inference(trivial_inequality_removal,[],[f48626])).
fof(f48626,plain,(
  ( ! [X68,X66,X64,X62,X67,X65,X63] : (s(bool,'T_0') != s(bool,'T_0') | s(fun(X62,bool),X63) = s(fun(X62,bool),X64) | s(bool,X65) = s(bool,g(s(X62,sK18(X63,X64,bool,X62)))) | s(bool,'T_0') = s(bool,X65) | s(bool,X66) = s(bool,X67) | s(bool,X67) = s(bool,f(s(X62,sK18(X63,X64,bool,X62)))) | s(bool,X66) = s(bool,X68) | s(bool,'T_0') = s(bool,X68)) )),
  inference(superposition,[],[f1780,f1507])).
fof(f48634,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s(fun(X4,bool),X5) = s(fun(X4,bool),X6) | s(bool,X7) = s(bool,g(s(X4,sK18(X5,X6,bool,X4)))) | s(bool,'T_0') = s(bool,X7) | s(bool,X8) = s(bool,f(s(X4,sK18(X5,X6,bool,X4)))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(trivial_inequality_removal,[],[f48616])).
fof(f48616,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s(bool,'T_0') != s(bool,'T_0') | s(fun(X4,bool),X5) = s(fun(X4,bool),X6) | s(bool,X7) = s(bool,g(s(X4,sK18(X5,X6,bool,X4)))) | s(bool,'T_0') = s(bool,X7) | s(bool,X8) = s(bool,f(s(X4,sK18(X5,X6,bool,X4)))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1780,f518])).
fof(f48551,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK18(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,X3) = s(bool,f(s(X0,sK18(X1,X2,bool,X0)))) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(condensation,[],[f48550])).
fof(f48550,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK18(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,X3) = s(bool,f(s(X0,sK18(X1,X2,bool,X0)))) | s(bool,'T_0') = s(bool,X4) | s(bool,X3) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(condensation,[],[f48549])).
fof(f48549,plain,(
  ( ! [X54,X52,X50,X48,X53,X51,X49] : (s(fun(X48,bool),X49) = s(fun(X48,bool),X50) | s(bool,'T_0') = s(bool,X52) | s(bool,'T_0') = s(bool,g(s(X48,sK18(X49,X50,bool,X48)))) | s(bool,X53) = s(bool,f(s(X48,sK18(X49,X50,bool,X48)))) | s(bool,'T_0') = s(bool,X51) | s(bool,X53) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f48502,f518])).
fof(f48502,plain,(
  ( ! [X54,X52,X50,X48,X53,X51,X49] : (s(bool,X51) != s(bool,X52) | s(fun(X48,bool),X49) = s(fun(X48,bool),X50) | s(bool,'T_0') = s(bool,X52) | s(bool,'T_0') = s(bool,g(s(X48,sK18(X49,X50,bool,X48)))) | s(bool,X53) = s(bool,f(s(X48,sK18(X49,X50,bool,X48)))) | s(bool,'T_0') = s(bool,X51) | s(bool,X53) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f1596,f1507])).
fof(f48540,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK18(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,f(s(X0,sK18(X1,X2,bool,X0))))) )),
  inference(condensation,[],[f48539])).
fof(f48539,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,g(s(X0,sK18(X1,X2,bool,X0)))) | s(bool,'T_0') = s(bool,f(s(X0,sK18(X1,X2,bool,X0))))) )),
  inference(subsumption_resolution,[],[f48493,f226])).
fof(f48493,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,X3) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,g(s(X0,sK18(X1,X2,bool,X0)))) | s(bool,'T_0') = s(bool,f(s(X0,sK18(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f1596,f226])).
fof(f48475,plain,(
  ( ! [X158,X161,X159,X157,X160] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X157))) != s(bool,f(s(X158,sK18(X159,X160,bool,X158)))) | s(fun(X158,bool),X159) = s(fun(X158,bool),X160) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X157),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,g(s(X158,sK18(X159,X160,bool,X158)))) | s(bool,X161) = s(bool,'const.min.@_1'(s(fun(bool,bool),X157))) | s(bool,'T_0') = s(bool,X161)) )),
  inference(superposition,[],[f1596,f1782])).
fof(f48418,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (p(s(bool,happ(s(fun(bool,bool),X67),s(bool,X68)))) | p(s(bool,X69)) | s(bool,X70) = s(bool,sK17(X67,X69,bool)) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,happ(s(fun(bool,bool),X67),s(bool,'T_0'))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f48389,f219])).
fof(f48389,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X67),s(bool,X68)))) | p(s(bool,X69)) | s(bool,X70) = s(bool,sK17(X67,X69,bool)) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,happ(s(fun(bool,bool),X67),s(bool,'T_0'))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f1797,f1507])).
fof(f48411,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X30)))) | p(s(bool,X31)) | s(bool,X32) = s(bool,sK17(X29,X31,bool)) | s(bool,'T_0') = s(bool,X32) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X29),s(bool,'T_0')))) )),
  inference(subsumption_resolution,[],[f48383,f46327])).
fof(f48383,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X30)))) | p(s(bool,X31)) | s(bool,X32) = s(bool,sK17(X29,X31,bool)) | s(bool,'T_0') = s(bool,X32) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X29),s(bool,'T_0')))) )),
  inference(superposition,[],[f1797,f785])).
fof(f48410,plain,(
  ( ! [X12,X10,X13,X11,X9] : (p(s(bool,happ(s(fun(bool,bool),X9),s(bool,X10)))) | p(s(bool,X11)) | s(bool,X12) = s(bool,sK17(X9,X11,bool)) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,happ(s(fun(bool,bool),X9),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(subsumption_resolution,[],[f48379,f219])).
fof(f48379,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X9),s(bool,X10)))) | p(s(bool,X11)) | s(bool,X12) = s(bool,sK17(X9,X11,bool)) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,happ(s(fun(bool,bool),X9),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f1797,f518])).
fof(f48377,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X1)))) | p(s(bool,X2)) | s(bool,X3) = s(bool,sK17(X0,X2,bool)) | s(bool,'T_0') = s(bool,X3) | s(bool,X4) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1797,f1782])).
fof(f48361,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X0)))) | p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X2)))) | p(s(bool,X3)) | s(bool,X4) = s(bool,sK17(X1,X3,bool)) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X0) = s(bool,X5)) )),
  inference(superposition,[],[f1797,f1507])).
fof(f48321,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (p(s(bool,happ(s(fun(bool,bool),X67),s(bool,X68)))) | p(s(bool,X69)) | s(bool,X70) = s(bool,sK16(X67,X69,bool)) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,happ(s(fun(bool,bool),X67),s(bool,'T_0'))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f48292,f219])).
fof(f48292,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X67),s(bool,X68)))) | p(s(bool,X69)) | s(bool,X70) = s(bool,sK16(X67,X69,bool)) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,happ(s(fun(bool,bool),X67),s(bool,'T_0'))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f1796,f1507])).
fof(f48314,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X30)))) | p(s(bool,X31)) | s(bool,X32) = s(bool,sK16(X29,X31,bool)) | s(bool,'T_0') = s(bool,X32) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X29),s(bool,'T_0')))) )),
  inference(subsumption_resolution,[],[f48286,f46327])).
fof(f48286,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X30)))) | p(s(bool,X31)) | s(bool,X32) = s(bool,sK16(X29,X31,bool)) | s(bool,'T_0') = s(bool,X32) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X29),s(bool,'T_0')))) )),
  inference(superposition,[],[f1796,f785])).
fof(f48313,plain,(
  ( ! [X12,X10,X13,X11,X9] : (p(s(bool,happ(s(fun(bool,bool),X9),s(bool,X10)))) | p(s(bool,X11)) | s(bool,X12) = s(bool,sK16(X9,X11,bool)) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,happ(s(fun(bool,bool),X9),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(subsumption_resolution,[],[f48282,f219])).
fof(f48282,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X9),s(bool,X10)))) | p(s(bool,X11)) | s(bool,X12) = s(bool,sK16(X9,X11,bool)) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,happ(s(fun(bool,bool),X9),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f1796,f518])).
fof(f48280,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X1)))) | p(s(bool,X2)) | s(bool,X3) = s(bool,sK16(X0,X2,bool)) | s(bool,'T_0') = s(bool,X3) | s(bool,X4) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1796,f1782])).
fof(f48264,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X0)))) | p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X2)))) | p(s(bool,X3)) | s(bool,X4) = s(bool,sK16(X1,X3,bool)) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X0) = s(bool,X5)) )),
  inference(superposition,[],[f1796,f1507])).
fof(f48219,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (p(s(bool,happ(s(fun(bool,bool),X67),s(bool,X68)))) | ~p(s(bool,X69)) | s(bool,X70) = s(bool,sK15(X67,X69,bool)) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,happ(s(fun(bool,bool),X67),s(bool,'T_0'))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f48196,f219])).
fof(f48196,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X67),s(bool,X68)))) | ~p(s(bool,X69)) | s(bool,X70) = s(bool,sK15(X67,X69,bool)) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,happ(s(fun(bool,bool),X67),s(bool,'T_0'))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f1795,f1507])).
fof(f48218,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X30)))) | ~p(s(bool,X31)) | s(bool,X32) = s(bool,sK15(X29,X31,bool)) | s(bool,'T_0') = s(bool,X32) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X29),s(bool,'T_0')))) )),
  inference(subsumption_resolution,[],[f48190,f46327])).
fof(f48190,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X30)))) | ~p(s(bool,X31)) | s(bool,X32) = s(bool,sK15(X29,X31,bool)) | s(bool,'T_0') = s(bool,X32) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X29),s(bool,'T_0')))) )),
  inference(superposition,[],[f1795,f785])).
fof(f48217,plain,(
  ( ! [X12,X10,X13,X11,X9] : (p(s(bool,happ(s(fun(bool,bool),X9),s(bool,X10)))) | ~p(s(bool,X11)) | s(bool,X12) = s(bool,sK15(X9,X11,bool)) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,happ(s(fun(bool,bool),X9),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(subsumption_resolution,[],[f48186,f219])).
fof(f48186,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X9),s(bool,X10)))) | ~p(s(bool,X11)) | s(bool,X12) = s(bool,sK15(X9,X11,bool)) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,happ(s(fun(bool,bool),X9),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f1795,f518])).
fof(f48184,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X1)))) | ~p(s(bool,X2)) | s(bool,X3) = s(bool,sK15(X0,X2,bool)) | s(bool,'T_0') = s(bool,X3) | s(bool,X4) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1795,f1782])).
fof(f48168,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X0)))) | p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X2)))) | ~p(s(bool,X3)) | s(bool,X4) = s(bool,sK15(X1,X3,bool)) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X0) = s(bool,X5)) )),
  inference(superposition,[],[f1795,f1507])).
fof(f48116,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (p(s(bool,happ(s(fun(bool,bool),X67),s(bool,X68)))) | ~p(s(bool,X69)) | s(bool,X70) = s(bool,sK14(X67,X69,bool)) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,happ(s(fun(bool,bool),X67),s(bool,'T_0'))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f48093,f219])).
fof(f48093,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X67),s(bool,X68)))) | ~p(s(bool,X69)) | s(bool,X70) = s(bool,sK14(X67,X69,bool)) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,happ(s(fun(bool,bool),X67),s(bool,'T_0'))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f1794,f1507])).
fof(f48115,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X30)))) | ~p(s(bool,X31)) | s(bool,X32) = s(bool,sK14(X29,X31,bool)) | s(bool,'T_0') = s(bool,X32) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X29),s(bool,'T_0')))) )),
  inference(subsumption_resolution,[],[f48087,f46327])).
fof(f48087,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X30)))) | ~p(s(bool,X31)) | s(bool,X32) = s(bool,sK14(X29,X31,bool)) | s(bool,'T_0') = s(bool,X32) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X29),s(bool,'T_0')))) )),
  inference(superposition,[],[f1794,f785])).
fof(f48114,plain,(
  ( ! [X12,X10,X13,X11,X9] : (p(s(bool,happ(s(fun(bool,bool),X9),s(bool,X10)))) | ~p(s(bool,X11)) | s(bool,X12) = s(bool,sK14(X9,X11,bool)) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,happ(s(fun(bool,bool),X9),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(subsumption_resolution,[],[f48083,f219])).
fof(f48083,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X9),s(bool,X10)))) | ~p(s(bool,X11)) | s(bool,X12) = s(bool,sK14(X9,X11,bool)) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,happ(s(fun(bool,bool),X9),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f1794,f518])).
fof(f48081,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X1)))) | ~p(s(bool,X2)) | s(bool,X3) = s(bool,sK14(X0,X2,bool)) | s(bool,'T_0') = s(bool,X3) | s(bool,X4) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1794,f1782])).
fof(f48065,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X0)))) | p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X2)))) | ~p(s(bool,X3)) | s(bool,X4) = s(bool,sK14(X1,X3,bool)) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X0) = s(bool,X5)) )),
  inference(superposition,[],[f1794,f1507])).
fof(f48016,plain,(
  ( ! [X78,X76,X74,X72,X77,X75,X73] : (p(s(bool,happ(s(fun(bool,bool),X72),s(bool,X74)))) | p(s(bool,X75)) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,sK17(X72,X75,bool)) | s(bool,X76) = s(bool,X77) | s(bool,X77) = s(bool,happ(s(fun(bool,bool),X72),s(bool,X73))) | s(bool,X76) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(subsumption_resolution,[],[f47975,f219])).
fof(f47975,plain,(
  ( ! [X78,X76,X74,X72,X77,X75,X73] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X72),s(bool,X74)))) | p(s(bool,X75)) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,sK17(X72,X75,bool)) | s(bool,X76) = s(bool,X77) | s(bool,X77) = s(bool,happ(s(fun(bool,bool),X72),s(bool,X73))) | s(bool,X76) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f1613,f1507])).
fof(f48009,plain,(
  ( ! [X37,X35,X36,X34] : (p(s(bool,happ(s(fun(bool,bool),X34),s(bool,X36)))) | p(s(bool,X37)) | s(bool,'T_0') = s(bool,X35) | s(bool,'T_0') = s(bool,sK17(X34,X37,bool)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X34),s(bool,X35)))) )),
  inference(subsumption_resolution,[],[f47969,f46327])).
fof(f47969,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | p(s(bool,happ(s(fun(bool,bool),X34),s(bool,X36)))) | p(s(bool,X37)) | s(bool,'T_0') = s(bool,X35) | s(bool,'T_0') = s(bool,sK17(X34,X37,bool)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X34),s(bool,X35)))) )),
  inference(superposition,[],[f1613,f785])).
fof(f48008,plain,(
  ( ! [X14,X17,X15,X18,X16] : (p(s(bool,happ(s(fun(bool,bool),X14),s(bool,X16)))) | p(s(bool,X17)) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,sK17(X14,X17,bool)) | s(bool,X18) = s(bool,happ(s(fun(bool,bool),X14),s(bool,X15))) | s(bool,'T_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f47965,f219])).
fof(f47965,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X14),s(bool,X16)))) | p(s(bool,X17)) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,sK17(X14,X17,bool)) | s(bool,X18) = s(bool,happ(s(fun(bool,bool),X14),s(bool,X15))) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f1613,f518])).
fof(f47963,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X7)))) | p(s(bool,happ(s(fun(bool,bool),X7),s(bool,X8)))) | p(s(bool,X9)) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X7))) | s(bool,'T_0') = s(bool,sK17(X7,X9,bool))) )),
  inference(superposition,[],[f1613,f259])).
fof(f48007,plain,(
  ( ! [X6,X4,X5,X3] : (p(s(bool,happ(s(fun(bool,bool),X3),s(bool,X4)))) | p(s(bool,X5)) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X3))) | s(bool,'T_0') = s(bool,sK17(X3,X5,bool)) | s(bool,X6) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f47962,f219])).
fof(f47962,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X3),s(bool,X4)))) | p(s(bool,X5)) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X3))) | s(bool,'T_0') = s(bool,sK17(X3,X5,bool)) | s(bool,X6) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f1613,f1491])).
fof(f47959,plain,(
  ( ! [X158,X161,X159,X157,X160] : (~p(s(bool,happ(s(fun(bool,bool),X158),s(bool,'|dollar|exists_1'(s(fun(bool,bool),X157)))))) | p(s(bool,happ(s(fun(bool,bool),X158),s(bool,X159)))) | p(s(bool,X160)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X157),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,sK17(X158,X160,bool)) | s(bool,X161) = s(bool,'const.min.@_1'(s(fun(bool,bool),X157))) | s(bool,'T_0') = s(bool,X161)) )),
  inference(superposition,[],[f1613,f1782])).
fof(f47893,plain,(
  ( ! [X78,X76,X74,X72,X77,X75,X73] : (p(s(bool,happ(s(fun(bool,bool),X72),s(bool,X74)))) | p(s(bool,X75)) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,sK16(X72,X75,bool)) | s(bool,X76) = s(bool,X77) | s(bool,X77) = s(bool,happ(s(fun(bool,bool),X72),s(bool,X73))) | s(bool,X76) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(subsumption_resolution,[],[f47852,f219])).
fof(f47852,plain,(
  ( ! [X78,X76,X74,X72,X77,X75,X73] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X72),s(bool,X74)))) | p(s(bool,X75)) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,sK16(X72,X75,bool)) | s(bool,X76) = s(bool,X77) | s(bool,X77) = s(bool,happ(s(fun(bool,bool),X72),s(bool,X73))) | s(bool,X76) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f1612,f1507])).
fof(f47886,plain,(
  ( ! [X37,X35,X36,X34] : (p(s(bool,happ(s(fun(bool,bool),X34),s(bool,X36)))) | p(s(bool,X37)) | s(bool,'T_0') = s(bool,X35) | s(bool,'T_0') = s(bool,sK16(X34,X37,bool)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X34),s(bool,X35)))) )),
  inference(subsumption_resolution,[],[f47846,f46327])).
fof(f47846,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | p(s(bool,happ(s(fun(bool,bool),X34),s(bool,X36)))) | p(s(bool,X37)) | s(bool,'T_0') = s(bool,X35) | s(bool,'T_0') = s(bool,sK16(X34,X37,bool)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X34),s(bool,X35)))) )),
  inference(superposition,[],[f1612,f785])).
fof(f47885,plain,(
  ( ! [X14,X17,X15,X18,X16] : (p(s(bool,happ(s(fun(bool,bool),X14),s(bool,X16)))) | p(s(bool,X17)) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,sK16(X14,X17,bool)) | s(bool,X18) = s(bool,happ(s(fun(bool,bool),X14),s(bool,X15))) | s(bool,'T_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f47842,f219])).
fof(f47842,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X14),s(bool,X16)))) | p(s(bool,X17)) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,sK16(X14,X17,bool)) | s(bool,X18) = s(bool,happ(s(fun(bool,bool),X14),s(bool,X15))) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f1612,f518])).
fof(f47840,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X7)))) | p(s(bool,happ(s(fun(bool,bool),X7),s(bool,X8)))) | p(s(bool,X9)) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X7))) | s(bool,'T_0') = s(bool,sK16(X7,X9,bool))) )),
  inference(superposition,[],[f1612,f259])).
fof(f47884,plain,(
  ( ! [X6,X4,X5,X3] : (p(s(bool,happ(s(fun(bool,bool),X3),s(bool,X4)))) | p(s(bool,X5)) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X3))) | s(bool,'T_0') = s(bool,sK16(X3,X5,bool)) | s(bool,X6) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f47839,f219])).
fof(f47839,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X3),s(bool,X4)))) | p(s(bool,X5)) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X3))) | s(bool,'T_0') = s(bool,sK16(X3,X5,bool)) | s(bool,X6) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f1612,f1491])).
fof(f47836,plain,(
  ( ! [X158,X161,X159,X157,X160] : (~p(s(bool,happ(s(fun(bool,bool),X158),s(bool,'|dollar|exists_1'(s(fun(bool,bool),X157)))))) | p(s(bool,happ(s(fun(bool,bool),X158),s(bool,X159)))) | p(s(bool,X160)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X157),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,sK16(X158,X160,bool)) | s(bool,X161) = s(bool,'const.min.@_1'(s(fun(bool,bool),X157))) | s(bool,'T_0') = s(bool,X161)) )),
  inference(superposition,[],[f1612,f1782])).
fof(f46514,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10('T_0','const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),X4)) )),
  inference(unit_resulting_resolution,[],[f219,f5744,f371])).
fof(f46453,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8('T_0','const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),X4)) )),
  inference(unit_resulting_resolution,[],[f219,f5744,f354])).
fof(f46446,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8('T_0',X0,'const.pred_set.INJ_3'(s(fun(X1,X2),sK19(X3,X4,'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4)),X1,X2)),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4))),s(fun(X2,bool),X4)))) )),
  inference(unit_resulting_resolution,[],[f219,f5744,f353])).
fof(f46342,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP2(X0,'const.pred_set.INJ_3'(s(fun(X1,X2),sK19(X3,X4,'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4)),X1,X2)),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4))),s(fun(X2,bool),X4)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f5744,f310])).
fof(f47516,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun(bool,bool),X25),s(bool,X26)))) | ~p(s(bool,happ(s(fun(bool,bool),X25),s(bool,X27)))) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,sK15(X25,X24,bool))) )),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f383,f1521,f1520,f15634,f15637,f15642,f16475,f18152,f18311,f27085,f21682,f26901,f26887,f21786,f22244,f27469,f27473,f27479,f27481,f27531,f22874,f27533,f27590,f27591,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f23671,f27675,f27676,f27718,f27806,f24822,f30868,f30873,f30878,f33151,f33153,f34176,f34197,f34154,f34203,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f34334,f34340,f34342,f32738,f31647,f35322,f35327,f36092,f36121,f5743,f5744,f306,f2137,f307,f2136,f27663,f27664,f36003,f36002,f35990,f35984,f35973,f35967,f35829,f35766,f35765,f35753,f35747,f35736,f35730,f35592,f35541,f35526,f35520,f35511,f35432,f35417,f35411,f35402,f27662,f27661,f27660,f27659,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f23670,f23669,f23668,f23667,f23188,f23187,f23186,f23185,f22873,f22872,f22871,f22870,f22243,f22242,f22241,f22240,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f29573,f29260,f28877,f27897,f23666,f23665,f23664,f23663,f23651,f23650,f23649,f23648,f23184,f23183,f23182,f23181,f23169,f23168,f23167,f23166,f22869,f22868,f22867,f22866,f22854,f22853,f22852,f22851,f22239,f22238,f22237,f22236,f22224,f22223,f22222,f22221,f17990,f17989,f17914,f17913,f9105,f9104,f9004,f9003,f3339,f3337,f3311,f3309,f3286,f3284,f3259,f3257,f36010,f35915,f35773,f35678,f35509,f35400,f35212,f35137,f34329,f34307,f34096,f34092,f34088,f34084,f34016,f34015,f34013,f34012,f34010,f34009,f34008,f34007,f34006,f34005,f34004,f34003,f34002,f34001,f34000,f33999,f33998,f33997,f33996,f33995,f33994,f33993,f33992,f33827,f33826,f33825,f33824,f33823,f33822,f33821,f33819,f33818,f33817,f33816,f33815,f33814,f33813,f33812,f33811,f33810,f33809,f33808,f33807,f33806,f33801,f33498,f33495,f33492,f33489,f33477,f33476,f33475,f33471,f33454,f33453,f33452,f33449,f33448,f33445,f33444,f33443,f33437,f33435,f33432,f33431,f33373,f33368,f33367,f33366,f33341,f31081,f31080,f31079,f31077,f31072,f31071,f23662,f23661,f23660,f23659,f23658,f23657,f23656,f23655,f23654,f23653,f23652,f23647,f23180,f23179,f23178,f23177,f23176,f23175,f23174,f23173,f23172,f23171,f23170,f23165,f22865,f22864,f22863,f22862,f22861,f22860,f22859,f22858,f22857,f22856,f22855,f22850,f22235,f22234,f22233,f22232,f22231,f22230,f22229,f22228,f22227,f22226,f22225,f22220,f8542,f8541,f8489,f8488,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1782,f1347,f1340,f1088,f36012,f35914,f35775,f35677,f35540,f35508,f35431,f35399,f34371,f34368,f34170,f34156,f33372,f33363,f32959,f32945,f32124,f32123,f32122,f32121,f32120,f32119,f32118,f32117,f32116,f32115,f32114,f31895,f31322,f31298,f31076,f27658,f27657,f27656,f27655,f27654,f27653,f27652,f21823,f21784,f21750,f21247,f15630,f11482,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f35319,f30870,f27665,f27651,f2138,f2130,f261,f260,f33800,f32546,f31297,f23646,f23164,f22849,f22219,f1780,f1596,f33474,f33434,f33433,f32967,f32111,f17988,f17912,f11359,f9103,f9002,f8540,f8487,f3343,f3315,f3290,f3263,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f237,f236,f44348,f44457,f44466,f44519,f44610,f44619,f44655,f44740,f44749,f44818,f45680,f45689,f45756,f45847,f45856,f45897,f45986,f45995,f46036,f46280,f46289,f46774,f46770,f46769,f46762,f46537,f46536,f46535,f46534,f46533,f46532,f46531,f46529,f46528,f46521,f46509,f46459,f46452,f46445,f46444,f46420,f46419,f46416,f46415,f46414,f46411,f46409,f46408,f46405,f46403,f46402,f46401,f46400,f46399,f46382,f46365,f46364,f46363,f46362,f46349,f46348,f46339,f46338,f46336,f46335,f46334,f46327,f46963,f46964,f46965,f46966,f46971,f46973,f46974,f46975,f46979,f47048,f47049,f47050,f47051,f47056,f47058,f47059,f47060,f47064,f47105,f47106,f47107,f47108,f47113,f47115,f47116,f47117,f47121,f47164,f47165,f47166,f47167,f47172,f47174,f47175,f47176,f47180,f47219,f47220,f47221,f47222,f47227,f47229,f47230,f47231,f47235,f47320,f47321,f47322,f47323,f47328,f47330,f47331,f47332,f47336,f47410,f47411,f47412,f47514,f47515])).
fof(f47515,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun(bool,bool),X25),s(bool,X26)))) | ~p(s(bool,happ(s(fun(bool,bool),X25),s(bool,X27)))) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,sK15(X25,X24,bool)) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f47486,f46327])).
fof(f47486,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | p(s(bool,happ(s(fun(bool,bool),X25),s(bool,X26)))) | ~p(s(bool,happ(s(fun(bool,bool),X25),s(bool,X27)))) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,sK15(X25,X24,bool)) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f1611,f785])).
fof(f47514,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,happ(s(fun(bool,bool),X5),s(bool,X6)))) | ~p(s(bool,happ(s(fun(bool,bool),X5),s(bool,X7)))) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,sK15(X5,X4,bool)) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f47482,f219])).
fof(f47482,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X5),s(bool,X6)))) | ~p(s(bool,happ(s(fun(bool,bool),X5),s(bool,X7)))) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,sK15(X5,X4,bool)) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1611,f518])).
fof(f47412,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,happ(s(fun(bool,bool),X25),s(bool,X27)))) | s(bool,'T_0') = s(bool,sK14(X25,X24,bool)) | p(s(bool,happ(s(fun(bool,bool),X25),s(bool,X26)))) | s(bool,'T_0') = s(bool,X27)) )),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f383,f1521,f1520,f15634,f15637,f15642,f16475,f18152,f18311,f27085,f21682,f26901,f26887,f21786,f22244,f27469,f27473,f27479,f27481,f27531,f22874,f27533,f27590,f27591,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f23671,f27675,f27676,f27718,f27806,f24822,f30868,f30873,f30878,f33151,f33153,f34176,f34197,f34154,f34203,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f34334,f34340,f34342,f32738,f31647,f35322,f35327,f36092,f36121,f5743,f5744,f306,f2137,f307,f2136,f27663,f27664,f36003,f36002,f35990,f35984,f35973,f35967,f35829,f35766,f35765,f35753,f35747,f35736,f35730,f35592,f35541,f35526,f35520,f35511,f35432,f35417,f35411,f35402,f27662,f27661,f27660,f27659,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f23670,f23669,f23668,f23667,f23188,f23187,f23186,f23185,f22873,f22872,f22871,f22870,f22243,f22242,f22241,f22240,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f29573,f29260,f28877,f27897,f23666,f23665,f23664,f23663,f23651,f23650,f23649,f23648,f23184,f23183,f23182,f23181,f23169,f23168,f23167,f23166,f22869,f22868,f22867,f22866,f22854,f22853,f22852,f22851,f22239,f22238,f22237,f22236,f22224,f22223,f22222,f22221,f17990,f17989,f17914,f17913,f9105,f9104,f9004,f9003,f3339,f3337,f3311,f3309,f3286,f3284,f3259,f3257,f36010,f35915,f35773,f35678,f35509,f35400,f35212,f35137,f34329,f34307,f34096,f34092,f34088,f34084,f34016,f34015,f34013,f34012,f34010,f34009,f34008,f34007,f34006,f34005,f34004,f34003,f34002,f34001,f34000,f33999,f33998,f33997,f33996,f33995,f33994,f33993,f33992,f33827,f33826,f33825,f33824,f33823,f33822,f33821,f33819,f33818,f33817,f33816,f33815,f33814,f33813,f33812,f33811,f33810,f33809,f33808,f33807,f33806,f33801,f33498,f33495,f33492,f33489,f33477,f33476,f33475,f33471,f33454,f33453,f33452,f33449,f33448,f33445,f33444,f33443,f33437,f33435,f33432,f33431,f33373,f33368,f33367,f33366,f33341,f31081,f31080,f31079,f31077,f31072,f31071,f23662,f23661,f23660,f23659,f23658,f23657,f23656,f23655,f23654,f23653,f23652,f23647,f23180,f23179,f23178,f23177,f23176,f23175,f23174,f23173,f23172,f23171,f23170,f23165,f22865,f22864,f22863,f22862,f22861,f22860,f22859,f22858,f22857,f22856,f22855,f22850,f22235,f22234,f22233,f22232,f22231,f22230,f22229,f22228,f22227,f22226,f22225,f22220,f8542,f8541,f8489,f8488,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1782,f1347,f1340,f1088,f36012,f35914,f35775,f35677,f35540,f35508,f35431,f35399,f34371,f34368,f34170,f34156,f33372,f33363,f32959,f32945,f32124,f32123,f32122,f32121,f32120,f32119,f32118,f32117,f32116,f32115,f32114,f31895,f31322,f31298,f31076,f27658,f27657,f27656,f27655,f27654,f27653,f27652,f21823,f21784,f21750,f21247,f15630,f11482,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f35319,f30870,f27665,f27651,f2138,f2130,f261,f260,f33800,f32546,f31297,f23646,f23164,f22849,f22219,f1780,f1596,f33474,f33434,f33433,f32967,f32111,f17988,f17912,f11359,f9103,f9002,f8540,f8487,f3343,f3315,f3290,f3263,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f237,f236,f44348,f44457,f44466,f44519,f44610,f44619,f44655,f44740,f44749,f44818,f45680,f45689,f45756,f45847,f45856,f45897,f45986,f45995,f46036,f46280,f46289,f46774,f46770,f46769,f46762,f46537,f46536,f46535,f46534,f46533,f46532,f46531,f46529,f46528,f46521,f46509,f46459,f46452,f46445,f46444,f46420,f46419,f46416,f46415,f46414,f46411,f46409,f46408,f46405,f46403,f46402,f46401,f46400,f46399,f46382,f46365,f46364,f46363,f46362,f46349,f46348,f46339,f46338,f46336,f46335,f46334,f46327,f46963,f46964,f46965,f46966,f46971,f46973,f46974,f46975,f46979,f47048,f47049,f47050,f47051,f47056,f47058,f47059,f47060,f47064,f47105,f47106,f47107,f47108,f47113,f47115,f47116,f47117,f47121,f47164,f47165,f47166,f47167,f47172,f47174,f47175,f47176,f47180,f47219,f47220,f47221,f47222,f47227,f47229,f47230,f47231,f47235,f47320,f47321,f47322,f47323,f47328,f47330,f47331,f47332,f47336,f47410,f47411])).
fof(f47411,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun(bool,bool),X25),s(bool,X26)))) | ~p(s(bool,happ(s(fun(bool,bool),X25),s(bool,X27)))) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,sK14(X25,X24,bool)) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f47382,f46327])).
fof(f47382,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | p(s(bool,happ(s(fun(bool,bool),X25),s(bool,X26)))) | ~p(s(bool,happ(s(fun(bool,bool),X25),s(bool,X27)))) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,sK14(X25,X24,bool)) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f1610,f785])).
fof(f47410,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,happ(s(fun(bool,bool),X5),s(bool,X6)))) | ~p(s(bool,happ(s(fun(bool,bool),X5),s(bool,X7)))) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,sK14(X5,X4,bool)) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f47378,f219])).
fof(f47378,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X5),s(bool,X6)))) | ~p(s(bool,happ(s(fun(bool,bool),X5),s(bool,X7)))) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,sK14(X5,X4,bool)) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1610,f518])).
fof(f47336,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~sP10(happ(s(fun(bool,bool),X95),s(bool,'const.min.@_1'(s(fun(bool,bool),X96)))),X97,X98) | p(s(bool,X97)) | ~p(s(bool,X98)) | s(bool,X99) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X95))) | s(bool,'T_0') = s(bool,X99) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X96))) = s(bool,happ(s(fun(bool,bool),X96),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X95)))) )),
  inference(superposition,[],[f8463,f1782])).
fof(f47332,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~sP10(happ(s(fun(bool,bool),X67),s(bool,'T_0')),X68,X69) | p(s(bool,X68)) | ~p(s(bool,X69)) | s(bool,X70) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f8463,f1507])).
fof(f47331,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (~sP10(happ(s(fun(bool,bool),X60),s(bool,X61)),X62,X63) | p(s(bool,X62)) | ~p(s(bool,X63)) | s(bool,X64) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X60))) | s(bool,'T_0') = s(bool,X64) | s(bool,X61) = s(bool,X65) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X60))) | s(bool,X65) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f8463,f1507])).
fof(f47330,plain,(
  ( ! [X59,X57,X54,X58,X56,X55,X53] : (~sP10(happ(s(fun(bool,bool),X53),s(bool,X54)),X55,X56) | p(s(bool,X55)) | ~p(s(bool,X56)) | s(bool,X57) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X53))) | s(bool,'T_0') = s(bool,X57) | s(bool,X58) = s(bool,'const.min.@_1'(s(fun(bool,bool),X53))) | s(bool,'T_0') = s(bool,X54) | s(bool,X58) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) )),
  inference(superposition,[],[f8463,f1507])).
fof(f47328,plain,(
  ( ! [X39,X45,X43,X41,X44,X42,X40] : (~sP10(happ(s(fun(bool,bool),X39),s(bool,X40)),X41,X42) | p(s(bool,X41)) | ~p(s(bool,X42)) | s(bool,X43) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X43) | s(bool,X40) = s(bool,X44) | s(bool,'T_0') = s(bool,X44) | s(bool,X45) = s(bool,'const.min.@_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f8463,f1507])).
fof(f47323,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~sP10(happ(s(fun(bool,bool),X14),s(bool,X15)),X16,X17) | p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X18) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X14))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X14)))) )),
  inference(superposition,[],[f8463,f518])).
fof(f47322,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~sP10(happ(s(fun(bool,bool),X9),s(bool,'T_0')),X10,X11) | p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X12) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f8463,f518])).
fof(f47321,plain,(
  ( ! [X6,X8,X7,X5] : (~sP10(happ(s(fun(bool,bool),X5),s(bool,'F_0')),X6,X7) | p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X8) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) )),
  inference(superposition,[],[f8463,f226])).
fof(f47320,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP10(happ(s(fun(bool,bool),X0),s(bool,X1)),X2,X3) | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X4) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X4) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f8463,f1782])).
fof(f47235,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~sP9(X97,X98,happ(s(fun(bool,bool),X95),s(bool,'const.min.@_1'(s(fun(bool,bool),X96))))) | ~p(s(bool,X97)) | p(s(bool,X98)) | s(bool,X99) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X95))) | s(bool,'T_0') = s(bool,X99) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X96))) = s(bool,happ(s(fun(bool,bool),X96),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X95)))) )),
  inference(superposition,[],[f8429,f1782])).
fof(f47231,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~sP9(X68,X69,happ(s(fun(bool,bool),X67),s(bool,'T_0'))) | ~p(s(bool,X68)) | p(s(bool,X69)) | s(bool,X70) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f8429,f1507])).
fof(f47230,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (~sP9(X62,X63,happ(s(fun(bool,bool),X60),s(bool,X61))) | ~p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X64) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X60))) | s(bool,'T_0') = s(bool,X64) | s(bool,X61) = s(bool,X65) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X60))) | s(bool,X65) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f8429,f1507])).
fof(f47229,plain,(
  ( ! [X59,X57,X54,X58,X56,X55,X53] : (~sP9(X55,X56,happ(s(fun(bool,bool),X53),s(bool,X54))) | ~p(s(bool,X55)) | p(s(bool,X56)) | s(bool,X57) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X53))) | s(bool,'T_0') = s(bool,X57) | s(bool,X58) = s(bool,'const.min.@_1'(s(fun(bool,bool),X53))) | s(bool,'T_0') = s(bool,X54) | s(bool,X58) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) )),
  inference(superposition,[],[f8429,f1507])).
fof(f47227,plain,(
  ( ! [X39,X45,X43,X41,X44,X42,X40] : (~sP9(X41,X42,happ(s(fun(bool,bool),X39),s(bool,X40))) | ~p(s(bool,X41)) | p(s(bool,X42)) | s(bool,X43) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X43) | s(bool,X40) = s(bool,X44) | s(bool,'T_0') = s(bool,X44) | s(bool,X45) = s(bool,'const.min.@_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f8429,f1507])).
fof(f47222,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~sP9(X16,X17,happ(s(fun(bool,bool),X14),s(bool,X15))) | ~p(s(bool,X16)) | p(s(bool,X17)) | s(bool,X18) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X14))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X14)))) )),
  inference(superposition,[],[f8429,f518])).
fof(f47221,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~sP9(X10,X11,happ(s(fun(bool,bool),X9),s(bool,'T_0'))) | ~p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X12) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f8429,f518])).
fof(f47220,plain,(
  ( ! [X6,X8,X7,X5] : (~sP9(X6,X7,happ(s(fun(bool,bool),X5),s(bool,'F_0'))) | ~p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X8) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) )),
  inference(superposition,[],[f8429,f226])).
fof(f47219,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP9(X2,X3,happ(s(fun(bool,bool),X0),s(bool,X1))) | ~p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X4) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X4) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f8429,f1782])).
fof(f47180,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~sP8(happ(s(fun(bool,bool),X95),s(bool,'const.min.@_1'(s(fun(bool,bool),X96)))),X97,X98) | p(s(bool,X97)) | p(s(bool,X98)) | s(bool,X99) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X95))) | s(bool,'T_0') = s(bool,X99) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X96))) = s(bool,happ(s(fun(bool,bool),X96),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X95)))) )),
  inference(superposition,[],[f6027,f1782])).
fof(f47176,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~sP8(happ(s(fun(bool,bool),X67),s(bool,'T_0')),X68,X69) | p(s(bool,X68)) | p(s(bool,X69)) | s(bool,X70) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f6027,f1507])).
fof(f47175,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (~sP8(happ(s(fun(bool,bool),X60),s(bool,X61)),X62,X63) | p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X64) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X60))) | s(bool,'T_0') = s(bool,X64) | s(bool,X61) = s(bool,X65) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X60))) | s(bool,X65) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f6027,f1507])).
fof(f47174,plain,(
  ( ! [X59,X57,X54,X58,X56,X55,X53] : (~sP8(happ(s(fun(bool,bool),X53),s(bool,X54)),X55,X56) | p(s(bool,X55)) | p(s(bool,X56)) | s(bool,X57) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X53))) | s(bool,'T_0') = s(bool,X57) | s(bool,X58) = s(bool,'const.min.@_1'(s(fun(bool,bool),X53))) | s(bool,'T_0') = s(bool,X54) | s(bool,X58) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) )),
  inference(superposition,[],[f6027,f1507])).
fof(f47172,plain,(
  ( ! [X39,X45,X43,X41,X44,X42,X40] : (~sP8(happ(s(fun(bool,bool),X39),s(bool,X40)),X41,X42) | p(s(bool,X41)) | p(s(bool,X42)) | s(bool,X43) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X43) | s(bool,X40) = s(bool,X44) | s(bool,'T_0') = s(bool,X44) | s(bool,X45) = s(bool,'const.min.@_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f6027,f1507])).
fof(f47167,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~sP8(happ(s(fun(bool,bool),X14),s(bool,X15)),X16,X17) | p(s(bool,X16)) | p(s(bool,X17)) | s(bool,X18) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X14))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X14)))) )),
  inference(superposition,[],[f6027,f518])).
fof(f47166,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~sP8(happ(s(fun(bool,bool),X9),s(bool,'T_0')),X10,X11) | p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X12) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f6027,f518])).
fof(f47165,plain,(
  ( ! [X6,X8,X7,X5] : (~sP8(happ(s(fun(bool,bool),X5),s(bool,'F_0')),X6,X7) | p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X8) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) )),
  inference(superposition,[],[f6027,f226])).
fof(f47164,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP8(happ(s(fun(bool,bool),X0),s(bool,X1)),X2,X3) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X4) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X4) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f6027,f1782])).
fof(f47121,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~sP7(happ(s(fun(bool,bool),X95),s(bool,'const.min.@_1'(s(fun(bool,bool),X96)))),X97,X98) | p(s(bool,X98)) | p(s(bool,X97)) | s(bool,X99) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X95))) | s(bool,'T_0') = s(bool,X99) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X96))) = s(bool,happ(s(fun(bool,bool),X96),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X95)))) )),
  inference(superposition,[],[f5961,f1782])).
fof(f47117,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~sP7(happ(s(fun(bool,bool),X67),s(bool,'T_0')),X68,X69) | p(s(bool,X69)) | p(s(bool,X68)) | s(bool,X70) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f5961,f1507])).
fof(f47116,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (~sP7(happ(s(fun(bool,bool),X60),s(bool,X61)),X62,X63) | p(s(bool,X63)) | p(s(bool,X62)) | s(bool,X64) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X60))) | s(bool,'T_0') = s(bool,X64) | s(bool,X61) = s(bool,X65) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X60))) | s(bool,X65) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f5961,f1507])).
fof(f47115,plain,(
  ( ! [X59,X57,X54,X58,X56,X55,X53] : (~sP7(happ(s(fun(bool,bool),X53),s(bool,X54)),X55,X56) | p(s(bool,X56)) | p(s(bool,X55)) | s(bool,X57) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X53))) | s(bool,'T_0') = s(bool,X57) | s(bool,X58) = s(bool,'const.min.@_1'(s(fun(bool,bool),X53))) | s(bool,'T_0') = s(bool,X54) | s(bool,X58) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) )),
  inference(superposition,[],[f5961,f1507])).
fof(f47113,plain,(
  ( ! [X39,X45,X43,X41,X44,X42,X40] : (~sP7(happ(s(fun(bool,bool),X39),s(bool,X40)),X41,X42) | p(s(bool,X42)) | p(s(bool,X41)) | s(bool,X43) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X43) | s(bool,X40) = s(bool,X44) | s(bool,'T_0') = s(bool,X44) | s(bool,X45) = s(bool,'const.min.@_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f5961,f1507])).
fof(f47108,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~sP7(happ(s(fun(bool,bool),X14),s(bool,X15)),X16,X17) | p(s(bool,X17)) | p(s(bool,X16)) | s(bool,X18) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X14))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X14)))) )),
  inference(superposition,[],[f5961,f518])).
fof(f47107,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~sP7(happ(s(fun(bool,bool),X9),s(bool,'T_0')),X10,X11) | p(s(bool,X11)) | p(s(bool,X10)) | s(bool,X12) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f5961,f518])).
fof(f47106,plain,(
  ( ! [X6,X8,X7,X5] : (~sP7(happ(s(fun(bool,bool),X5),s(bool,'F_0')),X6,X7) | p(s(bool,X7)) | p(s(bool,X6)) | s(bool,X8) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) )),
  inference(superposition,[],[f5961,f226])).
fof(f47105,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP7(happ(s(fun(bool,bool),X0),s(bool,X1)),X2,X3) | p(s(bool,X3)) | p(s(bool,X2)) | s(bool,X4) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X4) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f5961,f1782])).
fof(f47064,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~sP4(X97,happ(s(fun(bool,bool),X95),s(bool,'const.min.@_1'(s(fun(bool,bool),X96)))),X98) | p(s(bool,X98)) | ~p(s(bool,X97)) | s(bool,X99) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X95))) | s(bool,'T_0') = s(bool,X99) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X96))) = s(bool,happ(s(fun(bool,bool),X96),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X95)))) )),
  inference(superposition,[],[f5895,f1782])).
fof(f47060,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~sP4(X68,happ(s(fun(bool,bool),X67),s(bool,'T_0')),X69) | p(s(bool,X69)) | ~p(s(bool,X68)) | s(bool,X70) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f5895,f1507])).
fof(f47059,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (~sP4(X62,happ(s(fun(bool,bool),X60),s(bool,X61)),X63) | p(s(bool,X63)) | ~p(s(bool,X62)) | s(bool,X64) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X60))) | s(bool,'T_0') = s(bool,X64) | s(bool,X61) = s(bool,X65) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X60))) | s(bool,X65) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f5895,f1507])).
fof(f47058,plain,(
  ( ! [X59,X57,X54,X58,X56,X55,X53] : (~sP4(X55,happ(s(fun(bool,bool),X53),s(bool,X54)),X56) | p(s(bool,X56)) | ~p(s(bool,X55)) | s(bool,X57) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X53))) | s(bool,'T_0') = s(bool,X57) | s(bool,X58) = s(bool,'const.min.@_1'(s(fun(bool,bool),X53))) | s(bool,'T_0') = s(bool,X54) | s(bool,X58) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) )),
  inference(superposition,[],[f5895,f1507])).
fof(f47056,plain,(
  ( ! [X39,X45,X43,X41,X44,X42,X40] : (~sP4(X41,happ(s(fun(bool,bool),X39),s(bool,X40)),X42) | p(s(bool,X42)) | ~p(s(bool,X41)) | s(bool,X43) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X43) | s(bool,X40) = s(bool,X44) | s(bool,'T_0') = s(bool,X44) | s(bool,X45) = s(bool,'const.min.@_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f5895,f1507])).
fof(f47051,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~sP4(X16,happ(s(fun(bool,bool),X14),s(bool,X15)),X17) | p(s(bool,X17)) | ~p(s(bool,X16)) | s(bool,X18) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X14))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X14)))) )),
  inference(superposition,[],[f5895,f518])).
fof(f47050,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~sP4(X10,happ(s(fun(bool,bool),X9),s(bool,'T_0')),X11) | p(s(bool,X11)) | ~p(s(bool,X10)) | s(bool,X12) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f5895,f518])).
fof(f47049,plain,(
  ( ! [X6,X8,X7,X5] : (~sP4(X6,happ(s(fun(bool,bool),X5),s(bool,'F_0')),X7) | p(s(bool,X7)) | ~p(s(bool,X6)) | s(bool,X8) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) )),
  inference(superposition,[],[f5895,f226])).
fof(f47048,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP4(X2,happ(s(fun(bool,bool),X0),s(bool,X1)),X3) | p(s(bool,X3)) | ~p(s(bool,X2)) | s(bool,X4) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X4) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f5895,f1782])).
fof(f46979,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~sP5(X97,happ(s(fun(bool,bool),X95),s(bool,'const.min.@_1'(s(fun(bool,bool),X96)))),X98) | p(s(bool,X98)) | ~p(s(bool,X97)) | s(bool,X99) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X95))) | s(bool,'T_0') = s(bool,X99) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X96))) = s(bool,happ(s(fun(bool,bool),X96),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X95)))) )),
  inference(superposition,[],[f5829,f1782])).
fof(f46975,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~sP5(X68,happ(s(fun(bool,bool),X67),s(bool,'T_0')),X69) | p(s(bool,X69)) | ~p(s(bool,X68)) | s(bool,X70) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f5829,f1507])).
fof(f46974,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (~sP5(X62,happ(s(fun(bool,bool),X60),s(bool,X61)),X63) | p(s(bool,X63)) | ~p(s(bool,X62)) | s(bool,X64) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X60))) | s(bool,'T_0') = s(bool,X64) | s(bool,X61) = s(bool,X65) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X60))) | s(bool,X65) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f5829,f1507])).
fof(f46973,plain,(
  ( ! [X59,X57,X54,X58,X56,X55,X53] : (~sP5(X55,happ(s(fun(bool,bool),X53),s(bool,X54)),X56) | p(s(bool,X56)) | ~p(s(bool,X55)) | s(bool,X57) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X53))) | s(bool,'T_0') = s(bool,X57) | s(bool,X58) = s(bool,'const.min.@_1'(s(fun(bool,bool),X53))) | s(bool,'T_0') = s(bool,X54) | s(bool,X58) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) )),
  inference(superposition,[],[f5829,f1507])).
fof(f46971,plain,(
  ( ! [X39,X45,X43,X41,X44,X42,X40] : (~sP5(X41,happ(s(fun(bool,bool),X39),s(bool,X40)),X42) | p(s(bool,X42)) | ~p(s(bool,X41)) | s(bool,X43) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X43) | s(bool,X40) = s(bool,X44) | s(bool,'T_0') = s(bool,X44) | s(bool,X45) = s(bool,'const.min.@_1'(s(fun(bool,bool),X39))) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f5829,f1507])).
fof(f46966,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~sP5(X16,happ(s(fun(bool,bool),X14),s(bool,X15)),X17) | p(s(bool,X17)) | ~p(s(bool,X16)) | s(bool,X18) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X14))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X14)))) )),
  inference(superposition,[],[f5829,f518])).
fof(f46965,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~sP5(X10,happ(s(fun(bool,bool),X9),s(bool,'T_0')),X11) | p(s(bool,X11)) | ~p(s(bool,X10)) | s(bool,X12) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f5829,f518])).
fof(f46964,plain,(
  ( ! [X6,X8,X7,X5] : (~sP5(X6,happ(s(fun(bool,bool),X5),s(bool,'F_0')),X7) | p(s(bool,X7)) | ~p(s(bool,X6)) | s(bool,X8) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) )),
  inference(superposition,[],[f5829,f226])).
fof(f46963,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP5(X2,happ(s(fun(bool,bool),X0),s(bool,X1)),X3) | p(s(bool,X3)) | ~p(s(bool,X2)) | s(bool,X4) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X4) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f5829,f1782])).
fof(f46334,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP0(X0,'const.pred_set.INJ_3'(s(fun(X1,X2),sK19(X3,X4,'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4)),X1,X2)),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4))),s(fun(X2,bool),X4)))) )),
  inference(unit_resulting_resolution,[],[f5744,f280])).
fof(f46335,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP0('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),X4)) )),
  inference(unit_resulting_resolution,[],[f5744,f281])).
fof(f46336,plain,(
  ( ! [X2,X0,X3,X1] : (~sP1('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f5744,f295])).
fof(f46338,plain,(
  ( ! [X2,X0,X3,X1] : (~sP1('T_0','const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)))) )),
  inference(unit_resulting_resolution,[],[f219,f5744,f295])).
fof(f46339,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP1('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'const.pred_set.INJ_3'(s(fun(X4,X5),sK19(X6,X7,'const.pred_set.IMAGE_2'(s(fun(X5,X4),X6),s(fun(X5,bool),X7)),X4,X5)),s(fun(X4,bool),'const.pred_set.IMAGE_2'(s(fun(X5,X4),X6),s(fun(X5,bool),X7))),s(fun(X5,bool),X7)))) )),
  inference(unit_resulting_resolution,[],[f5744,f5744,f295])).
fof(f46348,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP2(X0,'T_0','const.pred_set.INJ_3'(s(fun(X1,X2),sK19(X3,X4,'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4)),X1,X2)),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4))),s(fun(X2,bool),X4)))) )),
  inference(unit_resulting_resolution,[],[f219,f5744,f310])).
fof(f46349,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP2(X0,'const.pred_set.INJ_3'(s(fun(X1,X2),sK19(X3,X4,'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4)),X1,X2)),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4))),s(fun(X2,bool),X4)),'const.pred_set.INJ_3'(s(fun(X5,X6),sK19(X7,X8,'const.pred_set.IMAGE_2'(s(fun(X6,X5),X7),s(fun(X6,bool),X8)),X5,X6)),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X6,X5),X7),s(fun(X6,bool),X8))),s(fun(X6,bool),X8)))) )),
  inference(unit_resulting_resolution,[],[f5744,f5744,f310])).
fof(f46362,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('T_0','T_0','const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)))) )),
  inference(unit_resulting_resolution,[],[f391,f388,f395,f5744,f322])).
fof(f46363,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0','const.pred_set.INJ_3'(s(fun(X4,X5),sK19(X6,X7,'const.pred_set.IMAGE_2'(s(fun(X5,X4),X6),s(fun(X5,bool),X7)),X4,X5)),s(fun(X4,bool),'const.pred_set.IMAGE_2'(s(fun(X5,X4),X6),s(fun(X5,bool),X7))),s(fun(X5,bool),X7)))) )),
  inference(unit_resulting_resolution,[],[f1246,f388,f395,f5744,f322])).
fof(f46364,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (sP6('T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.INJ_3'(s(fun(X4,X5),sK19(X6,X7,'const.pred_set.IMAGE_2'(s(fun(X5,X4),X6),s(fun(X5,bool),X7)),X4,X5)),s(fun(X4,bool),'const.pred_set.IMAGE_2'(s(fun(X5,X4),X6),s(fun(X5,bool),X7))),s(fun(X5,bool),X7)))) )),
  inference(unit_resulting_resolution,[],[f391,f1235,f1248,f5744,f322])).
fof(f46365,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))),'const.pred_set.INJ_3'(s(fun(X8,X9),sK19(X10,X11,'const.pred_set.IMAGE_2'(s(fun(X9,X8),X10),s(fun(X9,bool),X11)),X8,X9)),s(fun(X8,bool),'const.pred_set.IMAGE_2'(s(fun(X9,X8),X10),s(fun(X9,bool),X11))),s(fun(X9,bool),X11)))) )),
  inference(unit_resulting_resolution,[],[f1246,f1235,f1248,f5744,f322])).
fof(f46382,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP5(X0,X1,'const.pred_set.INJ_3'(s(fun(X2,X3),sK19(X4,X5,'const.pred_set.IMAGE_2'(s(fun(X3,X2),X4),s(fun(X3,bool),X5)),X2,X3)),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X3,X2),X4),s(fun(X3,bool),X5))),s(fun(X3,bool),X5)))) )),
  inference(unit_resulting_resolution,[],[f5744,f326])).
fof(f46399,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP4(X0,X1,'const.pred_set.INJ_3'(s(fun(X2,X3),sK19(X4,X5,'const.pred_set.IMAGE_2'(s(fun(X3,X2),X4),s(fun(X3,bool),X5)),X2,X3)),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X3,X2),X4),s(fun(X3,bool),X5))),s(fun(X3,bool),X5)))) )),
  inference(unit_resulting_resolution,[],[f5744,f330])).
fof(f46400,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP3(X0,X1,'const.pred_set.INJ_3'(s(fun(X2,X3),sK19(X4,X5,'const.pred_set.IMAGE_2'(s(fun(X3,X2),X4),s(fun(X3,bool),X5)),X2,X3)),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X3,X2),X4),s(fun(X3,bool),X5))),s(fun(X3,bool),X5)))) )),
  inference(unit_resulting_resolution,[],[f5744,f334])).
fof(f46401,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP3(X0,'const.pred_set.INJ_3'(s(fun(X1,X2),sK19(X3,X4,'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4)),X1,X2)),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4))),s(fun(X2,bool),X4)),X5)) )),
  inference(unit_resulting_resolution,[],[f5744,f335])).
fof(f46402,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP3('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),X4,X5)) )),
  inference(unit_resulting_resolution,[],[f5744,f336])).
fof(f46403,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (sP6('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1203,f5744,f338])).
fof(f46405,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f418,f5744,f338])).
fof(f46408,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP6('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),happ(s(fun(X4,bool),X5),s(X4,'const.min.@_1'(s(fun(X4,bool),X5)))),'|dollar|exists_1'(s(fun(X4,bool),X5)))) )),
  inference(unit_resulting_resolution,[],[f259,f5744,f338])).
fof(f46409,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (sP6('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'T_0','const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) )),
  inference(unit_resulting_resolution,[],[f1203,f5744,f338])).
fof(f46411,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'F_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) )),
  inference(unit_resulting_resolution,[],[f418,f5744,f338])).
fof(f46414,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP6('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'|dollar|exists_1'(s(fun(X4,bool),X5)),happ(s(fun(X4,bool),X5),s(X4,'const.min.@_1'(s(fun(X4,bool),X5)))))) )),
  inference(unit_resulting_resolution,[],[f259,f5744,f338])).
fof(f46415,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f411,f5744,f339])).
fof(f46416,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) )),
  inference(unit_resulting_resolution,[],[f412,f5744,f339])).
fof(f46419,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f411,f5744,f339])).
fof(f46420,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f412,f5744,f339])).
fof(f46444,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP7(X0,X1,'const.pred_set.INJ_3'(s(fun(X2,X3),sK19(X4,X5,'const.pred_set.IMAGE_2'(s(fun(X3,X2),X4),s(fun(X3,bool),X5)),X2,X3)),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X3,X2),X4),s(fun(X3,bool),X5))),s(fun(X3,bool),X5)))) )),
  inference(unit_resulting_resolution,[],[f5744,f349])).
fof(f46445,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP7(X0,'const.pred_set.INJ_3'(s(fun(X1,X2),sK19(X3,X4,'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4)),X1,X2)),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4))),s(fun(X2,bool),X4)),X5)) )),
  inference(unit_resulting_resolution,[],[f5744,f350])).
fof(f46452,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP8('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),X4,'const.pred_set.INJ_3'(s(fun(X5,X6),sK19(X7,X8,'const.pred_set.IMAGE_2'(s(fun(X6,X5),X7),s(fun(X6,bool),X8)),X5,X6)),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X6,X5),X7),s(fun(X6,bool),X8))),s(fun(X6,bool),X8)))) )),
  inference(unit_resulting_resolution,[],[f5744,f5744,f353])).
fof(f46459,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP8('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'const.pred_set.INJ_3'(s(fun(X4,X5),sK19(X6,X7,'const.pred_set.IMAGE_2'(s(fun(X5,X4),X6),s(fun(X5,bool),X7)),X4,X5)),s(fun(X4,bool),'const.pred_set.IMAGE_2'(s(fun(X5,X4),X6),s(fun(X5,bool),X7))),s(fun(X5,bool),X7)),X8)) )),
  inference(unit_resulting_resolution,[],[f5744,f5744,f354])).
fof(f46509,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP9(X0,'const.pred_set.INJ_3'(s(fun(X1,X2),sK19(X3,X4,'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4)),X1,X2)),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4))),s(fun(X2,bool),X4)),X5)) )),
  inference(unit_resulting_resolution,[],[f5744,f367])).
fof(f46521,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP10('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'const.pred_set.INJ_3'(s(fun(X4,X5),sK19(X6,X7,'const.pred_set.IMAGE_2'(s(fun(X5,X4),X6),s(fun(X5,bool),X7)),X4,X5)),s(fun(X4,bool),'const.pred_set.IMAGE_2'(s(fun(X5,X4),X6),s(fun(X5,bool),X7))),s(fun(X5,bool),X7)),X8)) )),
  inference(unit_resulting_resolution,[],[f5744,f5744,f371])).
fof(f46528,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),X4,'F_0')) )),
  inference(unit_resulting_resolution,[],[f400,f5744,f375])).
fof(f46529,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),X4,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) )),
  inference(unit_resulting_resolution,[],[f409,f5744,f375])).
fof(f46531,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'T_0',X4)) )),
  inference(unit_resulting_resolution,[],[f401,f5744,f375])).
fof(f46532,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP10('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))),X8)) )),
  inference(unit_resulting_resolution,[],[f1305,f5744,f375])).
fof(f46533,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),X4,'T_0')) )),
  inference(unit_resulting_resolution,[],[f397,f5744,f376])).
fof(f46534,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP8('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),X4,'const.pred_set.SURJ_3'(s(fun(X5,X6),X7),s(fun(X5,bool),X8),s(fun(X6,bool),'const.pred_set.IMAGE_2'(s(fun(X5,X6),X7),s(fun(X5,bool),X8)))))) )),
  inference(unit_resulting_resolution,[],[f1267,f5744,f376])).
fof(f46535,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'T_0',X4)) )),
  inference(unit_resulting_resolution,[],[f398,f5744,f376])).
fof(f46536,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP8('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))),X8)) )),
  inference(unit_resulting_resolution,[],[f1268,f5744,f376])).
fof(f46537,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP2('const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)),X4,X5)) )),
  inference(unit_resulting_resolution,[],[f5744,f377])).
fof(f46762,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP2(X0,'const.pred_set.INJ_3'(s(fun(X1,X2),sK19(X3,X4,'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4)),X1,X2)),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X1),X3),s(fun(X2,bool),X4))),s(fun(X2,bool),X4)),'const.pred_set.SURJ_3'(s(fun(X5,X6),X7),s(fun(X5,bool),X8),s(fun(X6,bool),'const.pred_set.IMAGE_2'(s(fun(X5,X6),X7),s(fun(X5,bool),X8)))))) )),
  inference(unit_resulting_resolution,[],[f5744,f5752])).
fof(f46769,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP8('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4,'const.pred_set.INJ_3'(s(fun(X5,X6),sK19(X7,X8,'const.pred_set.IMAGE_2'(s(fun(X6,X5),X7),s(fun(X6,bool),X8)),X5,X6)),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X6,X5),X7),s(fun(X6,bool),X8))),s(fun(X6,bool),X8)))) )),
  inference(unit_resulting_resolution,[],[f5744,f5756])).
fof(f46770,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP8('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.INJ_3'(s(fun(X4,X5),sK19(X6,X7,'const.pred_set.IMAGE_2'(s(fun(X5,X4),X6),s(fun(X5,bool),X7)),X4,X5)),s(fun(X4,bool),'const.pred_set.IMAGE_2'(s(fun(X5,X4),X6),s(fun(X5,bool),X7))),s(fun(X5,bool),X7)),X8)) )),
  inference(unit_resulting_resolution,[],[f5744,f5757])).
fof(f46774,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP10('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.INJ_3'(s(fun(X4,X5),sK19(X6,X7,'const.pred_set.IMAGE_2'(s(fun(X5,X4),X6),s(fun(X5,bool),X7)),X4,X5)),s(fun(X4,bool),'const.pred_set.IMAGE_2'(s(fun(X5,X4),X6),s(fun(X5,bool),X7))),s(fun(X5,bool),X7)),X8)) )),
  inference(unit_resulting_resolution,[],[f5744,f5761])).
fof(f46289,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~p(s(bool,X68)) | sP10(happ(s(fun(bool,bool),X67),s(bool,X69)),X68,X70) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X69) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f46275,f219])).
fof(f46275,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X68)) | sP10(happ(s(fun(bool,bool),X67),s(bool,X69)),X68,X70) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X69) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f5632,f1507])).
fof(f46280,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,X10)) | sP10(happ(s(fun(bool,bool),X9),s(bool,X11)),X10,X12) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X11) | s(bool,X13) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(subsumption_resolution,[],[f46265,f219])).
fof(f46265,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X10)) | sP10(happ(s(fun(bool,bool),X9),s(bool,X11)),X10,X12) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X11) | s(bool,X13) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f5632,f518])).
fof(f46036,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (sP10(happ(s(fun(bool,bool),X1),s(bool,X0)),X2,X3) | ~p(s(bool,X2)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,X4) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X0) = s(bool,X5)) )),
  inference(superposition,[],[f5630,f1507])).
fof(f45995,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (p(s(bool,X68)) | sP10(happ(s(fun(bool,bool),X67),s(bool,X69)),X70,X68) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X69) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f45981,f219])).
fof(f45981,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~p(s(bool,'T_0')) | p(s(bool,X68)) | sP10(happ(s(fun(bool,bool),X67),s(bool,X69)),X70,X68) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X69) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f5603,f1507])).
fof(f45986,plain,(
  ( ! [X12,X10,X13,X11,X9] : (p(s(bool,X10)) | sP10(happ(s(fun(bool,bool),X9),s(bool,X11)),X12,X10) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X11) | s(bool,X13) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(subsumption_resolution,[],[f45971,f219])).
fof(f45971,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,X10)) | sP10(happ(s(fun(bool,bool),X9),s(bool,X11)),X12,X10) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X11) | s(bool,X13) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f5603,f518])).
fof(f45897,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (sP10(happ(s(fun(bool,bool),X1),s(bool,X0)),X2,X3) | p(s(bool,X3)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,X4) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X0) = s(bool,X5)) )),
  inference(superposition,[],[f5601,f1507])).
fof(f45856,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~p(s(bool,X68)) | sP8(happ(s(fun(bool,bool),X67),s(bool,X69)),X68,X70) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X69) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f45842,f219])).
fof(f45842,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X68)) | sP8(happ(s(fun(bool,bool),X67),s(bool,X69)),X68,X70) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X69) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f5573,f1507])).
fof(f45847,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,X10)) | sP8(happ(s(fun(bool,bool),X9),s(bool,X11)),X10,X12) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X11) | s(bool,X13) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(subsumption_resolution,[],[f45832,f219])).
fof(f45832,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X10)) | sP8(happ(s(fun(bool,bool),X9),s(bool,X11)),X10,X12) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X11) | s(bool,X13) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f5573,f518])).
fof(f45756,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (sP8(happ(s(fun(bool,bool),X1),s(bool,X0)),X2,X3) | ~p(s(bool,X2)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,X4) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X0) = s(bool,X5)) )),
  inference(superposition,[],[f5571,f1507])).
fof(f45689,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~p(s(bool,X68)) | sP8(happ(s(fun(bool,bool),X67),s(bool,X69)),X70,X68) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X69) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f45675,f219])).
fof(f45675,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X68)) | sP8(happ(s(fun(bool,bool),X67),s(bool,X69)),X70,X68) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X69) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f5549,f1507])).
fof(f45680,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,X10)) | sP8(happ(s(fun(bool,bool),X9),s(bool,X11)),X12,X10) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X11) | s(bool,X13) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(subsumption_resolution,[],[f45665,f219])).
fof(f45665,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X10)) | sP8(happ(s(fun(bool,bool),X9),s(bool,X11)),X12,X10) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X11) | s(bool,X13) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f5549,f518])).
fof(f44818,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (sP8(happ(s(fun(bool,bool),X1),s(bool,X0)),X2,X3) | ~p(s(bool,X3)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,X4) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X0) = s(bool,X5)) )),
  inference(superposition,[],[f5547,f1507])).
fof(f44749,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~p(s(bool,X68)) | sP2(X69,X68,happ(s(fun(bool,bool),X67),s(bool,X70))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f44735,f219])).
fof(f44735,plain,(
  ( ! [X70,X68,X72,X71,X69,X67,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X68)) | sP2(X69,X68,happ(s(fun(bool,bool),X67),s(bool,X70))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X67))) | s(bool,'T_0') = s(bool,X70) | s(bool,X71) = s(bool,X72) | s(bool,X72) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,X71) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f5444,f1507])).
fof(f44740,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,X10)) | sP2(X11,X10,happ(s(fun(bool,bool),X9),s(bool,X12))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(subsumption_resolution,[],[f44725,f219])).
fof(f44725,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X10)) | sP2(X11,X10,happ(s(fun(bool,bool),X9),s(bool,X12))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X12) | s(bool,X13) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X9))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f5444,f518])).
fof(f44655,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (sP2(X1,X2,happ(s(fun(bool,bool),X3),s(bool,X0))) | ~p(s(bool,X2)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3)))) | s(bool,X4) = s(bool,'const.min.@_1'(s(fun(bool,bool),X3))) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X0) = s(bool,X5)) )),
  inference(superposition,[],[f5442,f1507])).
fof(f44619,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (p(s(bool,X56)) | sP1(X56,happ(s(fun(bool,bool),X55),s(bool,X57))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X55))) | s(bool,'T_0') = s(bool,X57) | s(bool,X58) = s(bool,X59) | s(bool,X59) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X55))) | s(bool,X58) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(subsumption_resolution,[],[f44605,f219])).
fof(f44605,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (~p(s(bool,'T_0')) | p(s(bool,X56)) | sP1(X56,happ(s(fun(bool,bool),X55),s(bool,X57))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X55))) | s(bool,'T_0') = s(bool,X57) | s(bool,X58) = s(bool,X59) | s(bool,X59) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X55))) | s(bool,X58) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f3712,f1507])).
fof(f44610,plain,(
  ( ! [X10,X8,X7,X9] : (p(s(bool,X8)) | sP1(X8,happ(s(fun(bool,bool),X7),s(bool,X9))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X7))) | s(bool,'T_0') = s(bool,X9) | s(bool,X10) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X7))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f44595,f219])).
fof(f44595,plain,(
  ( ! [X10,X8,X7,X9] : (~p(s(bool,'T_0')) | p(s(bool,X8)) | sP1(X8,happ(s(fun(bool,bool),X7),s(bool,X9))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X7))) | s(bool,'T_0') = s(bool,X9) | s(bool,X10) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X7))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f3712,f518])).
fof(f44519,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP1(X1,happ(s(fun(bool,bool),X2),s(bool,X0))) | p(s(bool,X1)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X2)))) | s(bool,X3) = s(bool,'const.min.@_1'(s(fun(bool,bool),X2))) | s(bool,'T_0') = s(bool,X3) | s(bool,X4) = s(bool,X5) | s(bool,X5) = s(bool,X6) | s(bool,'T_0') = s(bool,X6) | s(bool,X0) = s(bool,X4)) )),
  inference(superposition,[],[f3710,f1507])).
fof(f44466,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (p(s(bool,X56)) | sP1(happ(s(fun(bool,bool),X55),s(bool,X57)),X56) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X55))) | s(bool,'T_0') = s(bool,X57) | s(bool,X58) = s(bool,X59) | s(bool,X59) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X55))) | s(bool,X58) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(subsumption_resolution,[],[f44452,f219])).
fof(f44452,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (~p(s(bool,'T_0')) | p(s(bool,X56)) | sP1(happ(s(fun(bool,bool),X55),s(bool,X57)),X56) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X55))) | s(bool,'T_0') = s(bool,X57) | s(bool,X58) = s(bool,X59) | s(bool,X59) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X55))) | s(bool,X58) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f3670,f1507])).
fof(f44457,plain,(
  ( ! [X10,X8,X7,X9] : (p(s(bool,X8)) | sP1(happ(s(fun(bool,bool),X7),s(bool,X9)),X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X7))) | s(bool,'T_0') = s(bool,X9) | s(bool,X10) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X7))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f44442,f219])).
fof(f44442,plain,(
  ( ! [X10,X8,X7,X9] : (~p(s(bool,'T_0')) | p(s(bool,X8)) | sP1(happ(s(fun(bool,bool),X7),s(bool,X9)),X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X7))) | s(bool,'T_0') = s(bool,X9) | s(bool,X10) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X7))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f3670,f518])).
fof(f44348,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP1(happ(s(fun(bool,bool),X1),s(bool,X0)),X2) | p(s(bool,X2)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,X3) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X3) | s(bool,X4) = s(bool,X5) | s(bool,X5) = s(bool,X6) | s(bool,'T_0') = s(bool,X6) | s(bool,X0) = s(bool,X4)) )),
  inference(superposition,[],[f3668,f1507])).
fof(f236,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f147])).
fof(f1077,plain,(
  ( ! [X0] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(forward_demodulation,[],[f1044,f418])).
fof(f1044,plain,(
  ( ! [X0] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f259,f785])).
fof(f1078,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,happ(s(fun(X2,bool),X3),s(X2,'const.min.@_1'(s(fun(X2,bool),X3))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X2,bool),X3)))) )),
  inference(forward_demodulation,[],[f1046,f418])).
fof(f1046,plain,(
  ( ! [X2,X3] : (s(bool,'|dollar|exists_1'(s(fun(X2,bool),X3))) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,'T_0') = s(bool,happ(s(fun(X2,bool),X3),s(X2,'const.min.@_1'(s(fun(X2,bool),X3)))))) )),
  inference(superposition,[],[f259,f785])).
fof(f1094,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,'|dollar|exists_1'(s(fun(bool,bool),X2))) | p(s(bool,happ(s(fun(bool,bool),X2),s(bool,'F_0')))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X2)))) )),
  inference(superposition,[],[f232,f1077])).
fof(f1095,plain,(
  ( ! [X3] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3)))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X3),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X3)))) )),
  inference(superposition,[],[f233,f1077])).
fof(f1096,plain,(
  ( ! [X4] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X4)))) | s(bool,'F_0') != s(bool,happ(s(fun(bool,bool),X4),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X4)))) )),
  inference(superposition,[],[f236,f1077])).
fof(f1097,plain,(
  ( ! [X5] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5)))) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),X5),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) )),
  inference(superposition,[],[f237,f1077])).
fof(f1098,plain,(
  ( ! [X6,X7] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X6)))) | p(s(bool,X7)) | s(bool,X7) = s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X6)))) )),
  inference(superposition,[],[f273,f1077])).
fof(f1100,plain,(
  ( ! [X10,X11] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X10)))) | ~p(s(bool,X11)) | s(bool,X11) = s(bool,happ(s(fun(bool,bool),X10),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X10)))) )),
  inference(superposition,[],[f276,f1077])).
fof(f1101,plain,(
  ( ! [X12,X13] : (sP0(X13,happ(s(fun(bool,bool),X12),s(bool,'F_0'))) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X12)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X12)))) )),
  inference(superposition,[],[f280,f1077])).
fof(f1102,plain,(
  ( ! [X14,X15] : (sP0(happ(s(fun(bool,bool),X14),s(bool,'F_0')),X15) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X14)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X14)))) )),
  inference(superposition,[],[f281,f1077])).
fof(f1103,plain,(
  ( ! [X17,X16] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X16)))) | p(s(bool,X17)) | sP1(happ(s(fun(bool,bool),X16),s(bool,'F_0')),X17) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X16)))) )),
  inference(superposition,[],[f296,f1077])).
fof(f1104,plain,(
  ( ! [X19,X18] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X18)))) | p(s(bool,X19)) | sP1(X19,happ(s(fun(bool,bool),X18),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X18)))) )),
  inference(superposition,[],[f299,f1077])).
fof(f1105,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X20)))) | ~p(s(bool,X21)) | sP2(X22,X21,happ(s(fun(bool,bool),X20),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X20)))) )),
  inference(superposition,[],[f310,f1077])).
fof(f1106,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X23)))) | ~p(s(bool,X24)) | p(s(bool,X25)) | ~sP5(X24,happ(s(fun(bool,bool),X23),s(bool,'F_0')),X25) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X23)))) )),
  inference(superposition,[],[f325,f1077])).
fof(f1107,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X26)))) | ~p(s(bool,X27)) | p(s(bool,X28)) | ~sP4(X27,happ(s(fun(bool,bool),X26),s(bool,'F_0')),X28) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X26)))) )),
  inference(superposition,[],[f329,f1077])).
fof(f1108,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X29)))) | p(s(bool,X30)) | p(s(bool,X31)) | ~sP7(happ(s(fun(bool,bool),X29),s(bool,'F_0')),X30,X31) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X29)))) )),
  inference(superposition,[],[f348,f1077])).
fof(f1109,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X32)))) | ~p(s(bool,X33)) | sP8(happ(s(fun(bool,bool),X32),s(bool,'F_0')),X34,X33) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X32)))) )),
  inference(superposition,[],[f353,f1077])).
fof(f1110,plain,(
  ( ! [X37,X35,X36] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X35)))) | ~p(s(bool,X36)) | sP8(happ(s(fun(bool,bool),X35),s(bool,'F_0')),X36,X37) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X35)))) )),
  inference(superposition,[],[f354,f1077])).
fof(f1111,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X38)))) | p(s(bool,X39)) | p(s(bool,X40)) | ~sP8(happ(s(fun(bool,bool),X38),s(bool,'F_0')),X40,X39) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X38)))) )),
  inference(superposition,[],[f355,f1077])).
fof(f1112,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X41)))) | p(s(bool,X42)) | ~p(s(bool,X43)) | ~sP9(X43,X42,happ(s(fun(bool,bool),X41),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X41)))) )),
  inference(superposition,[],[f365,f1077])).
fof(f1113,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X44)))) | p(s(bool,X45)) | sP10(happ(s(fun(bool,bool),X44),s(bool,'F_0')),X46,X45) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X44)))) )),
  inference(superposition,[],[f370,f1077])).
fof(f1114,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X47)))) | ~p(s(bool,X48)) | sP10(happ(s(fun(bool,bool),X47),s(bool,'F_0')),X48,X49) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X47)))) )),
  inference(superposition,[],[f371,f1077])).
fof(f1115,plain,(
  ( ! [X52,X50,X51] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X50)))) | ~p(s(bool,X51)) | p(s(bool,X52)) | ~sP10(happ(s(fun(bool,bool),X50),s(bool,'F_0')),X52,X51) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X50)))) )),
  inference(superposition,[],[f372,f1077])).
fof(f1116,plain,(
  ( ! [X54,X55,X53] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X53)))) | ~sP9(happ(s(fun(bool,bool),X53),s(bool,'F_0')),X54,X55) | sP10(happ(s(fun(bool,bool),X53),s(bool,'F_0')),X54,X55) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X53)))) )),
  inference(superposition,[],[f375,f1077])).
fof(f1117,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X56)))) | ~sP7(happ(s(fun(bool,bool),X56),s(bool,'F_0')),X57,X58) | sP8(happ(s(fun(bool,bool),X56),s(bool,'F_0')),X57,X58) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X56)))) )),
  inference(superposition,[],[f376,f1077])).
fof(f1121,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) )),
  inference(forward_demodulation,[],[f1090,f418])).
fof(f1090,plain,(
  ( ! [X1] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) )),
  inference(superposition,[],[f1077,f785])).
fof(f1161,plain,(
  ( ! [X10,X11] : (s(bool,'F_0') != s(bool,happ(s(fun(X10,bool),X11),s(X10,'const.min.@_1'(s(fun(X10,bool),X11))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X10,bool),X11)))) )),
  inference(subsumption_resolution,[],[f1133,f219])).
fof(f1133,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,happ(s(fun(X10,bool),X11),s(X10,'const.min.@_1'(s(fun(X10,bool),X11))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X10,bool),X11)))) )),
  inference(superposition,[],[f236,f1078])).
fof(f1163,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,X22)) | s(bool,X22) = s(bool,'|dollar|exists_1'(s(fun(X20,bool),X21))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X20,bool),X21)))) )),
  inference(forward_demodulation,[],[f1162,f259])).
fof(f1162,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,X22)) | s(bool,X22) = s(bool,happ(s(fun(X20,bool),X21),s(X20,'const.min.@_1'(s(fun(X20,bool),X21))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X20,bool),X21)))) )),
  inference(subsumption_resolution,[],[f1137,f219])).
fof(f1137,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X22)) | s(bool,X22) = s(bool,happ(s(fun(X20,bool),X21),s(X20,'const.min.@_1'(s(fun(X20,bool),X21))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X20,bool),X21)))) )),
  inference(superposition,[],[f276,f1078])).
fof(f1164,plain,(
  ( ! [X24,X23,X25] : (sP0(X25,happ(s(fun(X23,bool),X24),s(X23,'const.min.@_1'(s(fun(X23,bool),X24))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X23,bool),X24)))) )),
  inference(subsumption_resolution,[],[f1138,f219])).
fof(f1138,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'T_0')) | sP0(X25,happ(s(fun(X23,bool),X24),s(X23,'const.min.@_1'(s(fun(X23,bool),X24))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X23,bool),X24)))) )),
  inference(superposition,[],[f280,f1078])).
fof(f1165,plain,(
  ( ! [X28,X26,X27] : (sP0(happ(s(fun(X26,bool),X27),s(X26,'const.min.@_1'(s(fun(X26,bool),X27)))),X28) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X26,bool),X27)))) )),
  inference(subsumption_resolution,[],[f1139,f219])).
fof(f1139,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'T_0')) | sP0(happ(s(fun(X26,bool),X27),s(X26,'const.min.@_1'(s(fun(X26,bool),X27)))),X28) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X26,bool),X27)))) )),
  inference(superposition,[],[f281,f1078])).
fof(f1166,plain,(
  ( ! [X30,X31,X29] : (sP1(happ(s(fun(X29,bool),X30),s(X29,'const.min.@_1'(s(fun(X29,bool),X30)))),X31) | p(s(bool,X31)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X29,bool),X30)))) )),
  inference(subsumption_resolution,[],[f1140,f219])).
fof(f1140,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'T_0')) | p(s(bool,X31)) | sP1(happ(s(fun(X29,bool),X30),s(X29,'const.min.@_1'(s(fun(X29,bool),X30)))),X31) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X29,bool),X30)))) )),
  inference(superposition,[],[f296,f1078])).
fof(f1167,plain,(
  ( ! [X33,X34,X32] : (sP1(X34,happ(s(fun(X32,bool),X33),s(X32,'const.min.@_1'(s(fun(X32,bool),X33))))) | p(s(bool,X34)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X32,bool),X33)))) )),
  inference(subsumption_resolution,[],[f1141,f219])).
fof(f1141,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'T_0')) | p(s(bool,X34)) | sP1(X34,happ(s(fun(X32,bool),X33),s(X32,'const.min.@_1'(s(fun(X32,bool),X33))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X32,bool),X33)))) )),
  inference(superposition,[],[f299,f1078])).
fof(f1168,plain,(
  ( ! [X37,X35,X38,X36] : (sP2(X38,X37,happ(s(fun(X35,bool),X36),s(X35,'const.min.@_1'(s(fun(X35,bool),X36))))) | ~p(s(bool,X37)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X35,bool),X36)))) )),
  inference(subsumption_resolution,[],[f1142,f219])).
fof(f1142,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | sP2(X38,X37,happ(s(fun(X35,bool),X36),s(X35,'const.min.@_1'(s(fun(X35,bool),X36))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X35,bool),X36)))) )),
  inference(superposition,[],[f310,f1078])).
fof(f1169,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP5(X41,happ(s(fun(X39,bool),X40),s(X39,'const.min.@_1'(s(fun(X39,bool),X40)))),X42) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X39,bool),X40)))) )),
  inference(subsumption_resolution,[],[f1143,f219])).
fof(f1143,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP5(X41,happ(s(fun(X39,bool),X40),s(X39,'const.min.@_1'(s(fun(X39,bool),X40)))),X42) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X39,bool),X40)))) )),
  inference(superposition,[],[f325,f1078])).
fof(f1170,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X45)) | p(s(bool,X46)) | ~sP4(X45,happ(s(fun(X43,bool),X44),s(X43,'const.min.@_1'(s(fun(X43,bool),X44)))),X46) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X43,bool),X44)))) )),
  inference(subsumption_resolution,[],[f1144,f219])).
fof(f1144,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X45)) | p(s(bool,X46)) | ~sP4(X45,happ(s(fun(X43,bool),X44),s(X43,'const.min.@_1'(s(fun(X43,bool),X44)))),X46) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X43,bool),X44)))) )),
  inference(superposition,[],[f329,f1078])).
fof(f1171,plain,(
  ( ! [X47,X50,X48,X49] : (p(s(bool,X49)) | p(s(bool,X50)) | ~sP7(happ(s(fun(X47,bool),X48),s(X47,'const.min.@_1'(s(fun(X47,bool),X48)))),X49,X50) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X47,bool),X48)))) )),
  inference(subsumption_resolution,[],[f1145,f219])).
fof(f1145,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,'T_0')) | p(s(bool,X49)) | p(s(bool,X50)) | ~sP7(happ(s(fun(X47,bool),X48),s(X47,'const.min.@_1'(s(fun(X47,bool),X48)))),X49,X50) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X47,bool),X48)))) )),
  inference(superposition,[],[f348,f1078])).
fof(f1172,plain,(
  ( ! [X54,X52,X53,X51] : (sP8(happ(s(fun(X51,bool),X52),s(X51,'const.min.@_1'(s(fun(X51,bool),X52)))),X54,X53) | ~p(s(bool,X53)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X51,bool),X52)))) )),
  inference(subsumption_resolution,[],[f1146,f219])).
fof(f1146,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'T_0')) | ~p(s(bool,X53)) | sP8(happ(s(fun(X51,bool),X52),s(X51,'const.min.@_1'(s(fun(X51,bool),X52)))),X54,X53) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X51,bool),X52)))) )),
  inference(superposition,[],[f353,f1078])).
fof(f1173,plain,(
  ( ! [X57,X58,X56,X55] : (sP8(happ(s(fun(X55,bool),X56),s(X55,'const.min.@_1'(s(fun(X55,bool),X56)))),X57,X58) | ~p(s(bool,X57)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X55,bool),X56)))) )),
  inference(subsumption_resolution,[],[f1147,f219])).
fof(f1147,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | sP8(happ(s(fun(X55,bool),X56),s(X55,'const.min.@_1'(s(fun(X55,bool),X56)))),X57,X58) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X55,bool),X56)))) )),
  inference(superposition,[],[f354,f1078])).
fof(f1174,plain,(
  ( ! [X61,X59,X62,X60] : (p(s(bool,X61)) | p(s(bool,X62)) | ~sP8(happ(s(fun(X59,bool),X60),s(X59,'const.min.@_1'(s(fun(X59,bool),X60)))),X62,X61) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X59,bool),X60)))) )),
  inference(subsumption_resolution,[],[f1148,f219])).
fof(f1148,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'T_0')) | p(s(bool,X61)) | p(s(bool,X62)) | ~sP8(happ(s(fun(X59,bool),X60),s(X59,'const.min.@_1'(s(fun(X59,bool),X60)))),X62,X61) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X59,bool),X60)))) )),
  inference(superposition,[],[f355,f1078])).
fof(f1175,plain,(
  ( ! [X66,X64,X65,X63] : (p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP9(X66,X65,happ(s(fun(X63,bool),X64),s(X63,'const.min.@_1'(s(fun(X63,bool),X64))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X63,bool),X64)))) )),
  inference(subsumption_resolution,[],[f1149,f219])).
fof(f1149,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'T_0')) | p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP9(X66,X65,happ(s(fun(X63,bool),X64),s(X63,'const.min.@_1'(s(fun(X63,bool),X64))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X63,bool),X64)))) )),
  inference(superposition,[],[f365,f1078])).
fof(f1176,plain,(
  ( ! [X70,X68,X69,X67] : (sP10(happ(s(fun(X67,bool),X68),s(X67,'const.min.@_1'(s(fun(X67,bool),X68)))),X70,X69) | p(s(bool,X69)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X67,bool),X68)))) )),
  inference(subsumption_resolution,[],[f1150,f219])).
fof(f1150,plain,(
  ( ! [X70,X68,X69,X67] : (~p(s(bool,'T_0')) | p(s(bool,X69)) | sP10(happ(s(fun(X67,bool),X68),s(X67,'const.min.@_1'(s(fun(X67,bool),X68)))),X70,X69) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X67,bool),X68)))) )),
  inference(superposition,[],[f370,f1078])).
fof(f1177,plain,(
  ( ! [X74,X72,X71,X73] : (sP10(happ(s(fun(X71,bool),X72),s(X71,'const.min.@_1'(s(fun(X71,bool),X72)))),X73,X74) | ~p(s(bool,X73)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X71,bool),X72)))) )),
  inference(subsumption_resolution,[],[f1151,f219])).
fof(f1151,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X73)) | sP10(happ(s(fun(X71,bool),X72),s(X71,'const.min.@_1'(s(fun(X71,bool),X72)))),X73,X74) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X71,bool),X72)))) )),
  inference(superposition,[],[f371,f1078])).
fof(f1178,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,X77)) | p(s(bool,X78)) | ~sP10(happ(s(fun(X75,bool),X76),s(X75,'const.min.@_1'(s(fun(X75,bool),X76)))),X78,X77) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X75,bool),X76)))) )),
  inference(subsumption_resolution,[],[f1152,f219])).
fof(f1152,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,'T_0')) | ~p(s(bool,X77)) | p(s(bool,X78)) | ~sP10(happ(s(fun(X75,bool),X76),s(X75,'const.min.@_1'(s(fun(X75,bool),X76)))),X78,X77) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X75,bool),X76)))) )),
  inference(superposition,[],[f372,f1078])).
fof(f1179,plain,(
  ( ! [X80,X81,X79,X82] : (~sP9(happ(s(fun(X79,bool),X80),s(X79,'const.min.@_1'(s(fun(X79,bool),X80)))),X81,X82) | sP10(happ(s(fun(X79,bool),X80),s(X79,'const.min.@_1'(s(fun(X79,bool),X80)))),X81,X82) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X79,bool),X80)))) )),
  inference(subsumption_resolution,[],[f1153,f219])).
fof(f1153,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | ~sP9(happ(s(fun(X79,bool),X80),s(X79,'const.min.@_1'(s(fun(X79,bool),X80)))),X81,X82) | sP10(happ(s(fun(X79,bool),X80),s(X79,'const.min.@_1'(s(fun(X79,bool),X80)))),X81,X82) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X79,bool),X80)))) )),
  inference(superposition,[],[f375,f1078])).
fof(f1180,plain,(
  ( ! [X85,X83,X86,X84] : (~sP7(happ(s(fun(X83,bool),X84),s(X83,'const.min.@_1'(s(fun(X83,bool),X84)))),X85,X86) | sP8(happ(s(fun(X83,bool),X84),s(X83,'const.min.@_1'(s(fun(X83,bool),X84)))),X85,X86) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X83,bool),X84)))) )),
  inference(subsumption_resolution,[],[f1154,f219])).
fof(f1154,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,'T_0')) | ~sP7(happ(s(fun(X83,bool),X84),s(X83,'const.min.@_1'(s(fun(X83,bool),X84)))),X85,X86) | sP8(happ(s(fun(X83,bool),X84),s(X83,'const.min.@_1'(s(fun(X83,bool),X84)))),X85,X86) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X83,bool),X84)))) )),
  inference(superposition,[],[f376,f1078])).
fof(f1191,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X22)))) | s(bool,'|dollar|exists_1'(s(fun(X23,bool),X24))) = s(bool,happ(s(fun(bool,bool),X22),s(bool,'F_0'))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X23,bool),X24))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X22)))) )),
  inference(superposition,[],[f1163,f1077])).
fof(f1194,plain,(
  ( ! [X14,X17,X15,X16] : (s(bool,'|dollar|exists_1'(s(fun(X16,bool),X17))) = s(bool,happ(s(fun(X14,bool),X15),s(X14,'const.min.@_1'(s(fun(X14,bool),X15))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X16,bool),X17))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X14,bool),X15)))) )),
  inference(subsumption_resolution,[],[f1189,f219])).
fof(f1189,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'T_0')) | s(bool,'|dollar|exists_1'(s(fun(X16,bool),X17))) = s(bool,happ(s(fun(X14,bool),X15),s(X14,'const.min.@_1'(s(fun(X14,bool),X15))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X16,bool),X17))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X14,bool),X15)))) )),
  inference(superposition,[],[f1163,f1078])).
fof(f1198,plain,(
  ( ! [X0,X1] : (sP0(X1,happ(s(fun(bool,bool),X0),s(bool,'F_0'))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(forward_demodulation,[],[f1196,f418])).
fof(f1196,plain,(
  ( ! [X0,X1] : (sP0(X1,happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f1164,f785])).
fof(f1339,plain,(
  ( ! [X0,X1] : (sP0(happ(s(fun(bool,bool),X0),s(bool,'F_0')),X1) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(forward_demodulation,[],[f1337,f418])).
fof(f1337,plain,(
  ( ! [X0,X1] : (sP0(happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),X1) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f1165,f785])).
fof(f1357,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,happ(s(fun(bool,bool),X0),s(bool,'F_0'))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(forward_demodulation,[],[f1349,f418])).
fof(f1349,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f1161,f785])).
fof(f1362,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X2)))) | ~p(s(bool,X1)) | s(bool,'T_0') = s(bool,sK14(X0,X1,bool))) )),
  inference(forward_demodulation,[],[f1358,f418])).
fof(f1358,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))) | p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X2)))) | ~p(s(bool,X1)) | s(bool,'T_0') = s(bool,sK14(X0,X1,bool))) )),
  inference(superposition,[],[f266,f785])).
fof(f1366,plain,(
  ( ! [X0,X1] : (sP1(happ(s(fun(bool,bool),X0),s(bool,'F_0')),X1) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(forward_demodulation,[],[f1364,f418])).
fof(f1364,plain,(
  ( ! [X0,X1] : (sP1(happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),X1) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f1166,f785])).
fof(f1369,plain,(
  ( ! [X0,X1] : (sP1(X1,happ(s(fun(bool,bool),X0),s(bool,'F_0'))) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(forward_demodulation,[],[f1367,f418])).
fof(f1367,plain,(
  ( ! [X0,X1] : (sP1(X1,happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f1167,f785])).
fof(f1374,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X2)))) | ~p(s(bool,X1)) | s(bool,'T_0') = s(bool,sK15(X0,X1,bool))) )),
  inference(forward_demodulation,[],[f1370,f418])).
fof(f1370,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))) | p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X2)))) | ~p(s(bool,X1)) | s(bool,'T_0') = s(bool,sK15(X0,X1,bool))) )),
  inference(superposition,[],[f268,f785])).
fof(f1378,plain,(
  ( ! [X2,X0,X1] : (sP2(X1,X2,happ(s(fun(bool,bool),X0),s(bool,'F_0'))) | ~p(s(bool,X2)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(forward_demodulation,[],[f1376,f418])).
fof(f1376,plain,(
  ( ! [X2,X0,X1] : (sP2(X1,X2,happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))) | ~p(s(bool,X2)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f1168,f785])).
fof(f1381,plain,(
  ( ! [X2,X0,X1] : (sP8(happ(s(fun(bool,bool),X0),s(bool,'F_0')),X1,X2) | ~p(s(bool,X2)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(forward_demodulation,[],[f1379,f418])).
fof(f1379,plain,(
  ( ! [X2,X0,X1] : (sP8(happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),X1,X2) | ~p(s(bool,X2)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f1172,f785])).
fof(f1386,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X2)))) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,sK16(X0,X1,bool))) )),
  inference(forward_demodulation,[],[f1382,f418])).
fof(f1382,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))) | p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X2)))) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,sK16(X0,X1,bool))) )),
  inference(superposition,[],[f269,f785])).
fof(f1390,plain,(
  ( ! [X2,X0,X1] : (sP8(happ(s(fun(bool,bool),X0),s(bool,'F_0')),X1,X2) | ~p(s(bool,X1)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(forward_demodulation,[],[f1388,f418])).
fof(f1388,plain,(
  ( ! [X2,X0,X1] : (sP8(happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),X1,X2) | ~p(s(bool,X1)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f1173,f785])).
fof(f1393,plain,(
  ( ! [X2,X0,X1] : (sP10(happ(s(fun(bool,bool),X0),s(bool,'F_0')),X1,X2) | p(s(bool,X2)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(forward_demodulation,[],[f1391,f418])).
fof(f1391,plain,(
  ( ! [X2,X0,X1] : (sP10(happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),X1,X2) | p(s(bool,X2)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f1176,f785])).
fof(f1398,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X2)))) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,sK17(X0,X1,bool))) )),
  inference(forward_demodulation,[],[f1394,f418])).
fof(f1394,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))))) | p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X2)))) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,sK17(X0,X1,bool))) )),
  inference(superposition,[],[f271,f785])).
fof(f1402,plain,(
  ( ! [X2,X0,X1] : (sP10(happ(s(fun(bool,bool),X0),s(bool,'F_0')),X1,X2) | ~p(s(bool,X1)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(forward_demodulation,[],[f1400,f418])).
fof(f1400,plain,(
  ( ! [X2,X0,X1] : (sP10(happ(s(fun(bool,bool),X0),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),X1,X2) | ~p(s(bool,X1)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f1177,f785])).
fof(f1403,plain,(
  ( ! [X2,X0,X1] : (sP0(X1,happ(s(fun(bool,bool),X2),s(bool,X0))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X2))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1198,f226])).
fof(f1409,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK18(X0,X1,X2,bool))) )),
  inference(forward_demodulation,[],[f1405,f418])).
fof(f1405,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))) != s(X2,g(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK18(X0,X1,X2,bool))) )),
  inference(superposition,[],[f305,f785])).
fof(f1410,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK18(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK18(X1,X2,bool,X0))))) )),
  inference(forward_demodulation,[],[f1407,f418])).
fof(f1407,plain,(
  ( ! [X2,X0,X1] : (s(bool,f(s(X0,sK18(X1,X2,bool,X0)))) != s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK18(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f305,f785])).
fof(f1492,plain,(
  ( ! [X31,X32] : (s(bool,X32) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X31))) | s(bool,'T_0') = s(bool,X32) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X31),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X31)))) )),
  inference(superposition,[],[f518,f1077])).
fof(f1599,plain,(
  ( ! [X200,X199] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X199),s(bool,X200))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X199))) | s(bool,'T_0') = s(bool,X200) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X199)))) )),
  inference(superposition,[],[f1078,f518])).
fof(f1600,plain,(
  ( ! [X202,X201] : (s(bool,'F_0') != s(bool,happ(s(fun(bool,bool),X201),s(bool,X202))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X201))) | s(bool,'T_0') = s(bool,X202) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X201)))) )),
  inference(superposition,[],[f1161,f518])).
fof(f1602,plain,(
  ( ! [X208,X206,X207] : (sP0(happ(s(fun(bool,bool),X206),s(bool,X207)),X208) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X206))) | s(bool,'T_0') = s(bool,X207) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X206)))) )),
  inference(superposition,[],[f1165,f518])).
fof(f1603,plain,(
  ( ! [X210,X211,X209] : (sP1(happ(s(fun(bool,bool),X209),s(bool,X210)),X211) | p(s(bool,X211)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X209))) | s(bool,'T_0') = s(bool,X210) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X209)))) )),
  inference(superposition,[],[f1166,f518])).
fof(f1604,plain,(
  ( ! [X212,X213,X214] : (sP1(X214,happ(s(fun(bool,bool),X212),s(bool,X213))) | p(s(bool,X214)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X212))) | s(bool,'T_0') = s(bool,X213) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X212)))) )),
  inference(superposition,[],[f1167,f518])).
fof(f1605,plain,(
  ( ! [X218,X216,X215,X217] : (sP2(X217,X218,happ(s(fun(bool,bool),X215),s(bool,X216))) | ~p(s(bool,X218)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X215))) | s(bool,'T_0') = s(bool,X216) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X215)))) )),
  inference(superposition,[],[f1168,f518])).
fof(f1606,plain,(
  ( ! [X222,X220,X219,X221] : (sP8(happ(s(fun(bool,bool),X219),s(bool,X220)),X221,X222) | ~p(s(bool,X222)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X219))) | s(bool,'T_0') = s(bool,X220) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X219)))) )),
  inference(superposition,[],[f1172,f518])).
fof(f1607,plain,(
  ( ! [X225,X223,X226,X224] : (sP8(happ(s(fun(bool,bool),X223),s(bool,X224)),X225,X226) | ~p(s(bool,X225)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X223))) | s(bool,'T_0') = s(bool,X224) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X223)))) )),
  inference(superposition,[],[f1173,f518])).
fof(f1608,plain,(
  ( ! [X229,X227,X230,X228] : (sP10(happ(s(fun(bool,bool),X227),s(bool,X228)),X229,X230) | p(s(bool,X230)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X227))) | s(bool,'T_0') = s(bool,X228) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X227)))) )),
  inference(superposition,[],[f1176,f518])).
fof(f1609,plain,(
  ( ! [X231,X233,X234,X232] : (sP10(happ(s(fun(bool,bool),X231),s(bool,X232)),X233,X234) | ~p(s(bool,X233)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X231))) | s(bool,'T_0') = s(bool,X232) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X231)))) )),
  inference(superposition,[],[f1177,f518])).
fof(f1783,plain,(
  ( ! [X194,X193] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X193),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X193))) | s(bool,X194) = s(bool,'const.min.@_1'(s(fun(bool,bool),X193))) | s(bool,'T_0') = s(bool,X194)) )),
  inference(superposition,[],[f1078,f518])).
fof(f1784,plain,(
  ( ! [X196,X195] : (s(bool,'F_0') != s(bool,happ(s(fun(bool,bool),X195),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X195))) | s(bool,X196) = s(bool,'const.min.@_1'(s(fun(bool,bool),X195))) | s(bool,'T_0') = s(bool,X196)) )),
  inference(superposition,[],[f1161,f518])).
fof(f1785,plain,(
  ( ! [X198,X199,X197] : (sP0(X198,happ(s(fun(bool,bool),X197),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X197))) | s(bool,X199) = s(bool,'const.min.@_1'(s(fun(bool,bool),X197))) | s(bool,'T_0') = s(bool,X199)) )),
  inference(superposition,[],[f1164,f518])).
fof(f1786,plain,(
  ( ! [X202,X200,X201] : (sP0(happ(s(fun(bool,bool),X200),s(bool,'T_0')),X201) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X200))) | s(bool,X202) = s(bool,'const.min.@_1'(s(fun(bool,bool),X200))) | s(bool,'T_0') = s(bool,X202)) )),
  inference(superposition,[],[f1165,f518])).
fof(f1787,plain,(
  ( ! [X204,X205,X203] : (sP1(happ(s(fun(bool,bool),X203),s(bool,'T_0')),X204) | p(s(bool,X204)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X203))) | s(bool,X205) = s(bool,'const.min.@_1'(s(fun(bool,bool),X203))) | s(bool,'T_0') = s(bool,X205)) )),
  inference(superposition,[],[f1166,f518])).
fof(f1788,plain,(
  ( ! [X208,X206,X207] : (sP1(X207,happ(s(fun(bool,bool),X206),s(bool,'T_0'))) | p(s(bool,X207)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X206))) | s(bool,X208) = s(bool,'const.min.@_1'(s(fun(bool,bool),X206))) | s(bool,'T_0') = s(bool,X208)) )),
  inference(superposition,[],[f1167,f518])).
fof(f1789,plain,(
  ( ! [X212,X210,X211,X209] : (sP2(X210,X211,happ(s(fun(bool,bool),X209),s(bool,'T_0'))) | ~p(s(bool,X211)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X209))) | s(bool,X212) = s(bool,'const.min.@_1'(s(fun(bool,bool),X209))) | s(bool,'T_0') = s(bool,X212)) )),
  inference(superposition,[],[f1168,f518])).
fof(f1790,plain,(
  ( ! [X216,X215,X213,X214] : (sP8(happ(s(fun(bool,bool),X213),s(bool,'T_0')),X214,X215) | ~p(s(bool,X215)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X213))) | s(bool,X216) = s(bool,'const.min.@_1'(s(fun(bool,bool),X213))) | s(bool,'T_0') = s(bool,X216)) )),
  inference(superposition,[],[f1172,f518])).
fof(f1791,plain,(
  ( ! [X218,X220,X219,X217] : (sP8(happ(s(fun(bool,bool),X217),s(bool,'T_0')),X218,X219) | ~p(s(bool,X218)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X217))) | s(bool,X220) = s(bool,'const.min.@_1'(s(fun(bool,bool),X217))) | s(bool,'T_0') = s(bool,X220)) )),
  inference(superposition,[],[f1173,f518])).
fof(f1792,plain,(
  ( ! [X222,X223,X221,X224] : (sP10(happ(s(fun(bool,bool),X221),s(bool,'T_0')),X222,X223) | p(s(bool,X223)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X221))) | s(bool,X224) = s(bool,'const.min.@_1'(s(fun(bool,bool),X221))) | s(bool,'T_0') = s(bool,X224)) )),
  inference(superposition,[],[f1176,f518])).
fof(f1793,plain,(
  ( ! [X227,X225,X228,X226] : (sP10(happ(s(fun(bool,bool),X225),s(bool,'T_0')),X226,X227) | ~p(s(bool,X226)) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X225))) | s(bool,X228) = s(bool,'const.min.@_1'(s(fun(bool,bool),X225))) | s(bool,'T_0') = s(bool,X228)) )),
  inference(superposition,[],[f1177,f518])).
fof(f3263,plain,(
  ( ! [X8] : (~sP6('F_0',happ(s(fun(bool,bool),X8),s(bool,'F_0')),'|dollar|exists_1'(s(fun(bool,bool),X8))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8)))) )),
  inference(forward_demodulation,[],[f3261,f418])).
fof(f3261,plain,(
  ( ! [X8] : (~sP6('F_0',happ(s(fun(bool,bool),X8),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),'|dollar|exists_1'(s(fun(bool,bool),X8))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8)))) )),
  inference(superposition,[],[f1040,f785])).
fof(f3290,plain,(
  ( ! [X8] : (sP6('T_0',happ(s(fun(bool,bool),X8),s(bool,'F_0')),'|dollar|exists_1'(s(fun(bool,bool),X8))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8)))) )),
  inference(forward_demodulation,[],[f3288,f418])).
fof(f3288,plain,(
  ( ! [X8] : (sP6('T_0',happ(s(fun(bool,bool),X8),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),'|dollar|exists_1'(s(fun(bool,bool),X8))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8)))) )),
  inference(superposition,[],[f1041,f785])).
fof(f3315,plain,(
  ( ! [X8] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X8)),happ(s(fun(bool,bool),X8),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8)))) )),
  inference(forward_demodulation,[],[f3313,f418])).
fof(f3313,plain,(
  ( ! [X8] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X8)),happ(s(fun(bool,bool),X8),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8)))) )),
  inference(superposition,[],[f1042,f785])).
fof(f3343,plain,(
  ( ! [X8] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X8)),happ(s(fun(bool,bool),X8),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8)))) )),
  inference(forward_demodulation,[],[f3341,f418])).
fof(f3341,plain,(
  ( ! [X8] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X8)),happ(s(fun(bool,bool),X8),s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8)))) )),
  inference(superposition,[],[f1043,f785])).
fof(f8487,plain,(
  ( ! [X2,X0,X1] : (~sP9(happ(s(fun(bool,bool),X0),s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))),X1,X2) | sP10(happ(s(fun(bool,bool),X0),s(bool,'F_0')),X1,X2) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f1072,f226])).
fof(f8540,plain,(
  ( ! [X2,X0,X1] : (~sP7(happ(s(fun(bool,bool),X0),s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))),X1,X2) | sP8(happ(s(fun(bool,bool),X0),s(bool,'F_0')),X1,X2) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f1073,f226])).
fof(f9002,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))),happ(s(fun(bool,bool),X0),s(bool,'F_0')),'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f1251,f226])).
fof(f9103,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))),'|dollar|exists_1'(s(fun(bool,bool),X0)),happ(s(fun(bool,bool),X0),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f1253,f226])).
fof(f11359,plain,(
  ( ! [X39,X41,X40] : (s(bool,'F_0') != s(bool,'|dollar|exists_1'(s(fun(X39,bool),X40))) | s(bool,X41) = s(bool,happ(s(fun(X39,bool),X40),s(X39,'const.min.@_1'(s(fun(X39,bool),X40))))) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f2110,f259])).
fof(f17912,plain,(
  ( ! [X0] : (sP5('T_0','|dollar|exists_1'(s(fun(bool,bool),X0)),happ(s(fun(bool,bool),X0),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f3281,f226])).
fof(f17988,plain,(
  ( ! [X0] : (sP5('T_0',happ(s(fun(bool,bool),X0),s(bool,'F_0')),'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0)))) )),
  inference(superposition,[],[f3334,f226])).
fof(f32111,plain,(
  ( ! [X17,X15,X16] : (s(bool,'F_0') != s(bool,happ(s(fun(X15,bool),X16),s(X15,'const.min.@_1'(s(fun(X15,bool),X16))))) | s(bool,X17) = s(bool,'|dollar|exists_1'(s(fun(X15,bool),X16))) | s(bool,'T_0') = s(bool,X17)) )),
  inference(subsumption_resolution,[],[f31494,f219])).
fof(f31494,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,happ(s(fun(X15,bool),X16),s(X15,'const.min.@_1'(s(fun(X15,bool),X16))))) | s(bool,X17) = s(bool,'|dollar|exists_1'(s(fun(X15,bool),X16))) | s(bool,'T_0') = s(bool,X17)) )),
  inference(superposition,[],[f236,f1491])).
fof(f32967,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,'F_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) )),
  inference(condensation,[],[f32966])).
fof(f32966,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun(X1,bool),X2),s(X1,'const.min.@_1'(s(fun(X1,bool),X2))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X1,bool),X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f32276])).
fof(f32276,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun(X1,bool),X2),s(X1,'const.min.@_1'(s(fun(X1,bool),X2))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X1,bool),X2))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1520,f226])).
fof(f33433,plain,(
  ( ! [X8,X9] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X8)))) | s(bool,'F_0') != s(bool,happ(s(fun(bool,bool),X8),s(bool,'T_0'))) | s(bool,X9) = s(bool,'const.min.@_1'(s(fun(bool,bool),X8))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f236,f1782])).
fof(f33434,plain,(
  ( ! [X10,X11] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X10)))) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),X10),s(bool,'T_0'))) | s(bool,X11) = s(bool,'const.min.@_1'(s(fun(bool,bool),X10))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f237,f1782])).
fof(f33474,plain,(
  ( ! [X158,X159,X160] : (s(bool,'F_0') != s(bool,'|dollar|exists_1'(s(fun(bool,bool),X158))) | s(bool,X159) = s(bool,happ(s(fun(bool,bool),X158),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X159) | s(bool,X160) = s(bool,'const.min.@_1'(s(fun(bool,bool),X158))) | s(bool,'T_0') = s(bool,X160)) )),
  inference(superposition,[],[f2110,f1782])).
fof(f1596,plain,(
  ( ! [X191,X192,X190,X193] : (s(bool,X193) != s(bool,f(s(X190,sK18(X191,X192,bool,X190)))) | s(fun(X190,bool),X191) = s(fun(X190,bool),X192) | s(bool,'T_0') = s(bool,X193) | s(bool,'T_0') = s(bool,g(s(X190,sK18(X191,X192,bool,X190))))) )),
  inference(superposition,[],[f305,f518])).
fof(f1780,plain,(
  ( ! [X187,X185,X186,X184] : (s(bool,'T_0') != s(bool,f(s(X184,sK18(X185,X186,bool,X184)))) | s(fun(X184,bool),X185) = s(fun(X184,bool),X186) | s(bool,X187) = s(bool,g(s(X184,sK18(X185,X186,bool,X184)))) | s(bool,'T_0') = s(bool,X187)) )),
  inference(superposition,[],[f305,f518])).
fof(f22219,plain,(
  ( ! [X1262,X1260,X1264,X1259,X1263,X1261] : (s(bool,X1262) != s(bool,f(s(X1259,sK18(X1260,X1261,bool,X1259)))) | s(fun(X1259,bool),X1260) = s(fun(X1259,bool),X1261) | s(bool,X1262) = s(bool,X1263) | s(bool,'T_0') = s(bool,X1263) | s(bool,X1264) = s(bool,g(s(X1259,sK18(X1260,X1261,bool,X1259)))) | s(bool,'T_0') = s(bool,X1264)) )),
  inference(superposition,[],[f305,f1507])).
fof(f22849,plain,(
  ( ! [X1262,X1260,X1264,X1259,X1263,X1261] : (s(bool,X1262) != s(bool,f(s(X1259,sK18(X1260,X1261,bool,X1259)))) | s(fun(X1259,bool),X1260) = s(fun(X1259,bool),X1261) | s(bool,X1263) = s(bool,g(s(X1259,sK18(X1260,X1261,bool,X1259)))) | s(bool,'T_0') = s(bool,X1262) | s(bool,X1263) = s(bool,X1264) | s(bool,'T_0') = s(bool,X1264)) )),
  inference(superposition,[],[f305,f1507])).
fof(f23164,plain,(
  ( ! [X1203,X1207,X1205,X1202,X1206,X1204] : (s(bool,X1205) != s(bool,f(s(X1202,sK18(X1203,X1204,bool,X1202)))) | s(fun(X1202,bool),X1203) = s(fun(X1202,bool),X1204) | s(bool,X1205) = s(bool,X1206) | s(bool,'T_0') = s(bool,g(s(X1202,sK18(X1203,X1204,bool,X1202)))) | s(bool,X1206) = s(bool,X1207) | s(bool,'T_0') = s(bool,X1207)) )),
  inference(superposition,[],[f305,f1507])).
fof(f23646,plain,(
  ( ! [X1234,X1238,X1236,X1235,X1233,X1237] : (s(bool,'T_0') != s(bool,f(s(X1233,sK18(X1234,X1235,bool,X1233)))) | s(fun(X1233,bool),X1234) = s(fun(X1233,bool),X1235) | s(bool,X1236) = s(bool,X1237) | s(bool,X1237) = s(bool,g(s(X1233,sK18(X1234,X1235,bool,X1233)))) | s(bool,X1236) = s(bool,X1238) | s(bool,'T_0') = s(bool,X1238)) )),
  inference(superposition,[],[f305,f1507])).
fof(f31297,plain,(
  ( ! [X1091,X1095,X1093,X1094,X1092] : (s(bool,'|dollar|exists_1'(s(fun(X1094,bool),X1095))) != s(bool,f(s(X1091,sK18(X1092,X1093,bool,X1091)))) | s(fun(X1091,bool),X1092) = s(fun(X1091,bool),X1093) | s(bool,'T_0') = s(bool,happ(s(fun(X1094,bool),X1095),s(X1094,'const.min.@_1'(s(fun(X1094,bool),X1095))))) | s(bool,'T_0') = s(bool,g(s(X1091,sK18(X1092,X1093,bool,X1091))))) )),
  inference(superposition,[],[f305,f1491])).
fof(f32546,plain,(
  ( ! [X1118,X1116,X1115,X1119,X1117] : (s(bool,f(s(X1115,sK18(X1116,X1117,bool,X1115)))) != s(bool,happ(s(fun(X1118,bool),X1119),s(X1118,'const.min.@_1'(s(fun(X1118,bool),X1119))))) | s(fun(X1115,bool),X1116) = s(fun(X1115,bool),X1117) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X1118,bool),X1119))) | s(bool,'T_0') = s(bool,g(s(X1115,sK18(X1116,X1117,bool,X1115))))) )),
  inference(superposition,[],[f305,f1520])).
fof(f33800,plain,(
  ( ! [X779,X777,X778,X776] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X779))) != s(bool,f(s(X776,sK18(X777,X778,bool,X776)))) | s(fun(X776,bool),X777) = s(fun(X776,bool),X778) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X779))) = s(bool,happ(s(fun(bool,bool),X779),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,g(s(X776,sK18(X777,X778,bool,X776))))) )),
  inference(superposition,[],[f305,f1782])).
fof(f260,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),X1)))) | p(s(bool,'const.pred_set.INJ_3'(s(fun(X0,'type.num.num'),sK13(X1,X0)),s(fun(X0,bool),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) )),
  inference(cnf_transformation,[],[f163])).
fof(f2130,plain,(
  ( ! [X125,X126,X124] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(X124,'type.num.num'),sK13(X125,X124)),s(fun(X124,bool),X125),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) | s(bool,X126) = s(bool,'const.pred_set.countable_1'(s(fun(X124,bool),X125))) | s(bool,'T_0') = s(bool,X126)) )),
  inference(subsumption_resolution,[],[f1767,f219])).
fof(f1767,plain,(
  ( ! [X125,X126,X124] : (~p(s(bool,'T_0')) | p(s(bool,'const.pred_set.INJ_3'(s(fun(X124,'type.num.num'),sK13(X125,X124)),s(fun(X124,bool),X125),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) | s(bool,X126) = s(bool,'const.pred_set.countable_1'(s(fun(X124,bool),X125))) | s(bool,'T_0') = s(bool,X126)) )),
  inference(superposition,[],[f260,f518])).
fof(f2138,plain,(
  ( ! [X177,X175,X176,X174] : (p(s(bool,'const.pred_set.countable_1'(s(fun(X174,bool),X176)))) | s(bool,X177) = s(bool,'const.pred_set.INJ_3'(s(fun(X174,'type.num.num'),X175),s(fun(X174,bool),X176),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X177)) )),
  inference(subsumption_resolution,[],[f1778,f219])).
fof(f1778,plain,(
  ( ! [X177,X175,X176,X174] : (~p(s(bool,'T_0')) | p(s(bool,'const.pred_set.countable_1'(s(fun(X174,bool),X176)))) | s(bool,X177) = s(bool,'const.pred_set.INJ_3'(s(fun(X174,'type.num.num'),X175),s(fun(X174,bool),X176),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X177)) )),
  inference(superposition,[],[f261,f518])).
fof(f27651,plain,(
  ( ! [X1106,X1108,X1107,X1105,X1109] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(X1105,'type.num.num'),sK13(X1106,X1105)),s(fun(X1105,bool),X1106),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) | s(bool,X1107) = s(bool,X1108) | s(bool,X1108) = s(bool,'const.pred_set.countable_1'(s(fun(X1105,bool),X1106))) | s(bool,X1107) = s(bool,X1109) | s(bool,'T_0') = s(bool,X1109)) )),
  inference(subsumption_resolution,[],[f23628,f219])).
fof(f23628,plain,(
  ( ! [X1106,X1108,X1107,X1105,X1109] : (~p(s(bool,'T_0')) | p(s(bool,'const.pred_set.INJ_3'(s(fun(X1105,'type.num.num'),sK13(X1106,X1105)),s(fun(X1105,bool),X1106),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) | s(bool,X1107) = s(bool,X1108) | s(bool,X1108) = s(bool,'const.pred_set.countable_1'(s(fun(X1105,bool),X1106))) | s(bool,X1107) = s(bool,X1109) | s(bool,'T_0') = s(bool,X1109)) )),
  inference(superposition,[],[f260,f1507])).
fof(f27665,plain,(
  ( ! [X1220,X1219,X1223,X1221,X1224,X1222] : (p(s(bool,'const.pred_set.countable_1'(s(fun(X1219,bool),X1221)))) | s(bool,X1222) = s(bool,X1223) | s(bool,X1223) = s(bool,'const.pred_set.INJ_3'(s(fun(X1219,'type.num.num'),X1220),s(fun(X1219,bool),X1221),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,X1222) = s(bool,X1224) | s(bool,'T_0') = s(bool,X1224)) )),
  inference(subsumption_resolution,[],[f23644,f219])).
fof(f23644,plain,(
  ( ! [X1220,X1219,X1223,X1221,X1224,X1222] : (~p(s(bool,'T_0')) | p(s(bool,'const.pred_set.countable_1'(s(fun(X1219,bool),X1221)))) | s(bool,X1222) = s(bool,X1223) | s(bool,X1223) = s(bool,'const.pred_set.INJ_3'(s(fun(X1219,'type.num.num'),X1220),s(fun(X1219,bool),X1221),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,X1222) = s(bool,X1224) | s(bool,'T_0') = s(bool,X1224)) )),
  inference(superposition,[],[f261,f1507])).
fof(f30870,plain,(
  ( ! [X6,X8,X7,X5] : (s(bool,X7) = s(bool,'const.pred_set.INJ_3'(s(fun(X5,'type.num.num'),X8),s(fun(X5,bool),X6),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,'const.pred_set.countable_1'(s(fun(X5,bool),X6)))) )),
  inference(subsumption_resolution,[],[f30852,f383])).
fof(f30852,plain,(
  ( ! [X6,X8,X7,X5] : (p(s(bool,'F_0')) | s(bool,X7) = s(bool,'const.pred_set.INJ_3'(s(fun(X5,'type.num.num'),X8),s(fun(X5,bool),X6),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,'const.pred_set.countable_1'(s(fun(X5,bool),X6)))) )),
  inference(superposition,[],[f2138,f226])).
fof(f35319,plain,(
  ( ! [X2,X0,X1] : (s(bool,X2) = s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),X1))) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X0,'type.num.num'),sK13(X1,X0)),s(fun(X0,bool),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) )),
  inference(subsumption_resolution,[],[f35302,f383])).
fof(f35302,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | s(bool,X2) = s(bool,'const.pred_set.countable_1'(s(fun(X0,bool),X1))) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X0,'type.num.num'),sK13(X1,X0)),s(fun(X0,bool),X1),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) )),
  inference(superposition,[],[f2130,f226])).
fof(f384,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))))) )),
  inference(forward_demodulation,[],[f262,f259])).
fof(f262,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0,X1,X2] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X8,X9] : (p(s(bool,happ(s(fun(X6,bool),X8),s(X6,X9)))) => p(s(bool,happ(s(fun(X6,bool),X8),s(X6,'const.min.@_1'(s(fun(X6,bool),X8)))))))),
  file('thm.pred_set.countable_image_nats','thm.bool.SELECT_AX')).
fof(f1057,plain,(
  ( ! [X23,X21,X22] : (sP0(X23,happ(s(fun(X21,bool),X22),s(X21,'const.min.@_1'(s(fun(X21,bool),X22))))) | ~p(s(bool,'|dollar|exists_1'(s(fun(X21,bool),X22))))) )),
  inference(superposition,[],[f280,f259])).
fof(f1058,plain,(
  ( ! [X26,X24,X25] : (sP0(happ(s(fun(X24,bool),X25),s(X24,'const.min.@_1'(s(fun(X24,bool),X25)))),X26) | ~p(s(bool,'|dollar|exists_1'(s(fun(X24,bool),X25))))) )),
  inference(superposition,[],[f281,f259])).
fof(f1059,plain,(
  ( ! [X28,X29,X27] : (sP1(happ(s(fun(X27,bool),X28),s(X27,'const.min.@_1'(s(fun(X27,bool),X28)))),X29) | p(s(bool,X29)) | ~p(s(bool,'|dollar|exists_1'(s(fun(X27,bool),X28))))) )),
  inference(superposition,[],[f296,f259])).
fof(f1060,plain,(
  ( ! [X30,X31,X32] : (sP1(X32,happ(s(fun(X30,bool),X31),s(X30,'const.min.@_1'(s(fun(X30,bool),X31))))) | p(s(bool,X32)) | ~p(s(bool,'|dollar|exists_1'(s(fun(X30,bool),X31))))) )),
  inference(superposition,[],[f299,f259])).
fof(f1061,plain,(
  ( ! [X35,X33,X36,X34] : (sP2(X36,X35,happ(s(fun(X33,bool),X34),s(X33,'const.min.@_1'(s(fun(X33,bool),X34))))) | ~p(s(bool,X35)) | ~p(s(bool,'|dollar|exists_1'(s(fun(X33,bool),X34))))) )),
  inference(superposition,[],[f310,f259])).
fof(f1062,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'|dollar|exists_1'(s(fun(X37,bool),X38)))) | ~p(s(bool,X39)) | p(s(bool,X40)) | ~sP5(X39,happ(s(fun(X37,bool),X38),s(X37,'const.min.@_1'(s(fun(X37,bool),X38)))),X40)) )),
  inference(superposition,[],[f325,f259])).
fof(f1063,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'|dollar|exists_1'(s(fun(X41,bool),X42)))) | ~p(s(bool,X43)) | p(s(bool,X44)) | ~sP4(X43,happ(s(fun(X41,bool),X42),s(X41,'const.min.@_1'(s(fun(X41,bool),X42)))),X44)) )),
  inference(superposition,[],[f329,f259])).
fof(f1064,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'|dollar|exists_1'(s(fun(X45,bool),X46)))) | p(s(bool,X47)) | p(s(bool,X48)) | ~sP7(happ(s(fun(X45,bool),X46),s(X45,'const.min.@_1'(s(fun(X45,bool),X46)))),X47,X48)) )),
  inference(superposition,[],[f348,f259])).
fof(f1065,plain,(
  ( ! [X52,X50,X51,X49] : (sP8(happ(s(fun(X49,bool),X50),s(X49,'const.min.@_1'(s(fun(X49,bool),X50)))),X52,X51) | ~p(s(bool,X51)) | ~p(s(bool,'|dollar|exists_1'(s(fun(X49,bool),X50))))) )),
  inference(superposition,[],[f353,f259])).
fof(f1066,plain,(
  ( ! [X54,X56,X55,X53] : (sP8(happ(s(fun(X53,bool),X54),s(X53,'const.min.@_1'(s(fun(X53,bool),X54)))),X55,X56) | ~p(s(bool,X55)) | ~p(s(bool,'|dollar|exists_1'(s(fun(X53,bool),X54))))) )),
  inference(superposition,[],[f354,f259])).
fof(f1067,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'|dollar|exists_1'(s(fun(X57,bool),X58)))) | p(s(bool,X59)) | p(s(bool,X60)) | ~sP8(happ(s(fun(X57,bool),X58),s(X57,'const.min.@_1'(s(fun(X57,bool),X58)))),X60,X59)) )),
  inference(superposition,[],[f355,f259])).
fof(f1068,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,'|dollar|exists_1'(s(fun(X61,bool),X62)))) | p(s(bool,X63)) | ~p(s(bool,X64)) | ~sP9(X64,X63,happ(s(fun(X61,bool),X62),s(X61,'const.min.@_1'(s(fun(X61,bool),X62)))))) )),
  inference(superposition,[],[f365,f259])).
fof(f1069,plain,(
  ( ! [X68,X66,X67,X65] : (sP10(happ(s(fun(X65,bool),X66),s(X65,'const.min.@_1'(s(fun(X65,bool),X66)))),X68,X67) | p(s(bool,X67)) | ~p(s(bool,'|dollar|exists_1'(s(fun(X65,bool),X66))))) )),
  inference(superposition,[],[f370,f259])).
fof(f1070,plain,(
  ( ! [X70,X72,X71,X69] : (sP10(happ(s(fun(X69,bool),X70),s(X69,'const.min.@_1'(s(fun(X69,bool),X70)))),X71,X72) | ~p(s(bool,X71)) | ~p(s(bool,'|dollar|exists_1'(s(fun(X69,bool),X70))))) )),
  inference(superposition,[],[f371,f259])).
fof(f1071,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,'|dollar|exists_1'(s(fun(X73,bool),X74)))) | ~p(s(bool,X75)) | p(s(bool,X76)) | ~sP10(happ(s(fun(X73,bool),X74),s(X73,'const.min.@_1'(s(fun(X73,bool),X74)))),X76,X75)) )),
  inference(superposition,[],[f372,f259])).
fof(f1072,plain,(
  ( ! [X80,X78,X79,X77] : (sP10(happ(s(fun(X77,bool),X78),s(X77,'const.min.@_1'(s(fun(X77,bool),X78)))),X79,X80) | ~sP9(happ(s(fun(X77,bool),X78),s(X77,'const.min.@_1'(s(fun(X77,bool),X78)))),X79,X80) | ~p(s(bool,'|dollar|exists_1'(s(fun(X77,bool),X78))))) )),
  inference(superposition,[],[f375,f259])).
fof(f1073,plain,(
  ( ! [X83,X81,X84,X82] : (sP8(happ(s(fun(X81,bool),X82),s(X81,'const.min.@_1'(s(fun(X81,bool),X82)))),X83,X84) | ~sP7(happ(s(fun(X81,bool),X82),s(X81,'const.min.@_1'(s(fun(X81,bool),X82)))),X83,X84) | ~p(s(bool,'|dollar|exists_1'(s(fun(X81,bool),X82))))) )),
  inference(superposition,[],[f376,f259])).
fof(f1491,plain,(
  ( ! [X30,X28,X29] : (s(bool,X30) = s(bool,'|dollar|exists_1'(s(fun(X28,bool),X29))) | s(bool,'T_0') = s(bool,happ(s(fun(X28,bool),X29),s(X28,'const.min.@_1'(s(fun(X28,bool),X29))))) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f518,f259])).
fof(f2131,plain,(
  ( ! [X127,X130,X128,X129] : (p(s(bool,'|dollar|exists_1'(s(fun(X127,bool),X128)))) | s(bool,X130) = s(bool,happ(s(fun(X127,bool),X128),s(X127,X129))) | s(bool,'T_0') = s(bool,X130)) )),
  inference(subsumption_resolution,[],[f1768,f219])).
fof(f1768,plain,(
  ( ! [X127,X130,X128,X129] : (~p(s(bool,'T_0')) | p(s(bool,'|dollar|exists_1'(s(fun(X127,bool),X128)))) | s(bool,X130) = s(bool,happ(s(fun(X127,bool),X128),s(X127,X129))) | s(bool,'T_0') = s(bool,X130)) )),
  inference(superposition,[],[f384,f518])).
fof(f5829,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP5(X2,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X3) | p(s(bool,X3)) | ~p(s(bool,X2)) | s(bool,X4) = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5823,f219])).
fof(f5823,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | p(s(bool,X3)) | ~sP5(X2,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X3) | s(bool,X4) = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1062,f518])).
fof(f5895,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP4(X2,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X3) | p(s(bool,X3)) | ~p(s(bool,X2)) | s(bool,X4) = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5889,f219])).
fof(f5889,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | p(s(bool,X3)) | ~sP4(X2,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X3) | s(bool,X4) = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1063,f518])).
fof(f5961,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP7(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X2,X3) | p(s(bool,X3)) | p(s(bool,X2)) | s(bool,X4) = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5955,f219])).
fof(f5955,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X2)) | p(s(bool,X3)) | ~sP7(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X2,X3) | s(bool,X4) = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1064,f518])).
fof(f6027,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP8(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X3,X2) | p(s(bool,X3)) | p(s(bool,X2)) | s(bool,X4) = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6021,f219])).
fof(f6021,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X2)) | p(s(bool,X3)) | ~sP8(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X3,X2) | s(bool,X4) = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1067,f518])).
fof(f8429,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~sP9(X7,X6,happ(s(fun(X4,bool),X5),s(X4,'const.min.@_1'(s(fun(X4,bool),X5))))) | ~p(s(bool,X7)) | p(s(bool,X6)) | s(bool,X8) = s(bool,'|dollar|exists_1'(s(fun(X4,bool),X5))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f8424,f219])).
fof(f8424,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'T_0')) | p(s(bool,X6)) | ~p(s(bool,X7)) | ~sP9(X7,X6,happ(s(fun(X4,bool),X5),s(X4,'const.min.@_1'(s(fun(X4,bool),X5))))) | s(bool,X8) = s(bool,'|dollar|exists_1'(s(fun(X4,bool),X5))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1068,f518])).
fof(f8463,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~sP10(happ(s(fun(X4,bool),X5),s(X4,'const.min.@_1'(s(fun(X4,bool),X5)))),X7,X6) | p(s(bool,X7)) | ~p(s(bool,X6)) | s(bool,X8) = s(bool,'|dollar|exists_1'(s(fun(X4,bool),X5))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f8458,f219])).
fof(f8458,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'T_0')) | ~p(s(bool,X6)) | p(s(bool,X7)) | ~sP10(happ(s(fun(X4,bool),X5),s(X4,'const.min.@_1'(s(fun(X4,bool),X5)))),X7,X6) | s(bool,X8) = s(bool,'|dollar|exists_1'(s(fun(X4,bool),X5))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1071,f518])).
fof(f11482,plain,(
  ( ! [X66,X64,X65,X63] : (p(s(bool,'|dollar|exists_1'(s(fun(X63,bool),X64)))) | sP1(X65,happ(s(fun(X63,bool),X64),s(X63,'const.min.@_1'(s(fun(X63,bool),X64))))) | s(bool,X65) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f2114,f259])).
fof(f15630,plain,(
  ( ! [X54,X52,X53,X51] : (p(s(bool,'|dollar|exists_1'(s(fun(X51,bool),X52)))) | sP1(happ(s(fun(X51,bool),X52),s(X51,'const.min.@_1'(s(fun(X51,bool),X52)))),X53) | s(bool,X53) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f2115,f259])).
fof(f21247,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X2) = s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) )),
  inference(subsumption_resolution,[],[f21240,f383])).
fof(f21240,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'F_0')) | s(bool,X2) = s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) )),
  inference(superposition,[],[f2131,f226])).
fof(f21750,plain,(
  ( ! [X163,X161,X159,X162,X160] : (s(bool,X161) = s(bool,'|dollar|exists_1'(s(fun(X159,bool),X160))) | s(bool,X162) = s(bool,happ(s(fun(X159,bool),X160),s(X159,'const.min.@_1'(s(fun(X159,bool),X160))))) | s(bool,'T_0') = s(bool,X161) | s(bool,X162) = s(bool,X163) | s(bool,'T_0') = s(bool,X163)) )),
  inference(superposition,[],[f1507,f259])).
fof(f21784,plain,(
  ( ! [X151,X149,X147,X150,X148] : (s(bool,X149) = s(bool,'|dollar|exists_1'(s(fun(X147,bool),X148))) | s(bool,X149) = s(bool,X150) | s(bool,'T_0') = s(bool,happ(s(fun(X147,bool),X148),s(X147,'const.min.@_1'(s(fun(X147,bool),X148))))) | s(bool,X150) = s(bool,X151) | s(bool,'T_0') = s(bool,X151)) )),
  inference(superposition,[],[f1507,f259])).
fof(f21823,plain,(
  ( ! [X111,X114,X112,X110,X113] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X110,bool),X111))) | s(bool,X112) = s(bool,X113) | s(bool,X113) = s(bool,happ(s(fun(X110,bool),X111),s(X110,'const.min.@_1'(s(fun(X110,bool),X111))))) | s(bool,X112) = s(bool,X114) | s(bool,'T_0') = s(bool,X114)) )),
  inference(superposition,[],[f1507,f259])).
fof(f27652,plain,(
  ( ! [X1112,X1116,X1110,X1115,X1113,X1111,X1114] : (~p(s(bool,X1112)) | p(s(bool,X1113)) | ~sP5(X1112,happ(s(fun(X1110,bool),X1111),s(X1110,'const.min.@_1'(s(fun(X1110,bool),X1111)))),X1113) | s(bool,X1114) = s(bool,X1115) | s(bool,X1115) = s(bool,'|dollar|exists_1'(s(fun(X1110,bool),X1111))) | s(bool,X1114) = s(bool,X1116) | s(bool,'T_0') = s(bool,X1116)) )),
  inference(subsumption_resolution,[],[f23629,f219])).
fof(f23629,plain,(
  ( ! [X1112,X1116,X1110,X1115,X1113,X1111,X1114] : (~p(s(bool,'T_0')) | ~p(s(bool,X1112)) | p(s(bool,X1113)) | ~sP5(X1112,happ(s(fun(X1110,bool),X1111),s(X1110,'const.min.@_1'(s(fun(X1110,bool),X1111)))),X1113) | s(bool,X1114) = s(bool,X1115) | s(bool,X1115) = s(bool,'|dollar|exists_1'(s(fun(X1110,bool),X1111))) | s(bool,X1114) = s(bool,X1116) | s(bool,'T_0') = s(bool,X1116)) )),
  inference(superposition,[],[f1062,f1507])).
fof(f27653,plain,(
  ( ! [X1118,X1122,X1120,X1119,X1117,X1123,X1121] : (~p(s(bool,X1119)) | p(s(bool,X1120)) | ~sP4(X1119,happ(s(fun(X1117,bool),X1118),s(X1117,'const.min.@_1'(s(fun(X1117,bool),X1118)))),X1120) | s(bool,X1121) = s(bool,X1122) | s(bool,X1122) = s(bool,'|dollar|exists_1'(s(fun(X1117,bool),X1118))) | s(bool,X1121) = s(bool,X1123) | s(bool,'T_0') = s(bool,X1123)) )),
  inference(subsumption_resolution,[],[f23630,f219])).
fof(f23630,plain,(
  ( ! [X1118,X1122,X1120,X1119,X1117,X1123,X1121] : (~p(s(bool,'T_0')) | ~p(s(bool,X1119)) | p(s(bool,X1120)) | ~sP4(X1119,happ(s(fun(X1117,bool),X1118),s(X1117,'const.min.@_1'(s(fun(X1117,bool),X1118)))),X1120) | s(bool,X1121) = s(bool,X1122) | s(bool,X1122) = s(bool,'|dollar|exists_1'(s(fun(X1117,bool),X1118))) | s(bool,X1121) = s(bool,X1123) | s(bool,'T_0') = s(bool,X1123)) )),
  inference(superposition,[],[f1063,f1507])).
fof(f27654,plain,(
  ( ! [X1130,X1128,X1126,X1124,X1129,X1127,X1125] : (p(s(bool,X1126)) | p(s(bool,X1127)) | ~sP7(happ(s(fun(X1124,bool),X1125),s(X1124,'const.min.@_1'(s(fun(X1124,bool),X1125)))),X1126,X1127) | s(bool,X1128) = s(bool,X1129) | s(bool,X1129) = s(bool,'|dollar|exists_1'(s(fun(X1124,bool),X1125))) | s(bool,X1128) = s(bool,X1130) | s(bool,'T_0') = s(bool,X1130)) )),
  inference(subsumption_resolution,[],[f23631,f219])).
fof(f23631,plain,(
  ( ! [X1130,X1128,X1126,X1124,X1129,X1127,X1125] : (~p(s(bool,'T_0')) | p(s(bool,X1126)) | p(s(bool,X1127)) | ~sP7(happ(s(fun(X1124,bool),X1125),s(X1124,'const.min.@_1'(s(fun(X1124,bool),X1125)))),X1126,X1127) | s(bool,X1128) = s(bool,X1129) | s(bool,X1129) = s(bool,'|dollar|exists_1'(s(fun(X1124,bool),X1125))) | s(bool,X1128) = s(bool,X1130) | s(bool,'T_0') = s(bool,X1130)) )),
  inference(superposition,[],[f1064,f1507])).
fof(f27655,plain,(
  ( ! [X1137,X1134,X1132,X1136,X1131,X1135,X1133] : (p(s(bool,X1133)) | p(s(bool,X1134)) | ~sP8(happ(s(fun(X1131,bool),X1132),s(X1131,'const.min.@_1'(s(fun(X1131,bool),X1132)))),X1134,X1133) | s(bool,X1135) = s(bool,X1136) | s(bool,X1136) = s(bool,'|dollar|exists_1'(s(fun(X1131,bool),X1132))) | s(bool,X1135) = s(bool,X1137) | s(bool,'T_0') = s(bool,X1137)) )),
  inference(subsumption_resolution,[],[f23632,f219])).
fof(f23632,plain,(
  ( ! [X1137,X1134,X1132,X1136,X1131,X1135,X1133] : (~p(s(bool,'T_0')) | p(s(bool,X1133)) | p(s(bool,X1134)) | ~sP8(happ(s(fun(X1131,bool),X1132),s(X1131,'const.min.@_1'(s(fun(X1131,bool),X1132)))),X1134,X1133) | s(bool,X1135) = s(bool,X1136) | s(bool,X1136) = s(bool,'|dollar|exists_1'(s(fun(X1131,bool),X1132))) | s(bool,X1135) = s(bool,X1137) | s(bool,'T_0') = s(bool,X1137)) )),
  inference(superposition,[],[f1067,f1507])).
fof(f27656,plain,(
  ( ! [X1139,X1143,X1141,X1144,X1138,X1142,X1140] : (p(s(bool,X1140)) | ~p(s(bool,X1141)) | ~sP9(X1141,X1140,happ(s(fun(X1138,bool),X1139),s(X1138,'const.min.@_1'(s(fun(X1138,bool),X1139))))) | s(bool,X1142) = s(bool,X1143) | s(bool,X1143) = s(bool,'|dollar|exists_1'(s(fun(X1138,bool),X1139))) | s(bool,X1142) = s(bool,X1144) | s(bool,'T_0') = s(bool,X1144)) )),
  inference(subsumption_resolution,[],[f23633,f219])).
fof(f23633,plain,(
  ( ! [X1139,X1143,X1141,X1144,X1138,X1142,X1140] : (~p(s(bool,'T_0')) | p(s(bool,X1140)) | ~p(s(bool,X1141)) | ~sP9(X1141,X1140,happ(s(fun(X1138,bool),X1139),s(X1138,'const.min.@_1'(s(fun(X1138,bool),X1139))))) | s(bool,X1142) = s(bool,X1143) | s(bool,X1143) = s(bool,'|dollar|exists_1'(s(fun(X1138,bool),X1139))) | s(bool,X1142) = s(bool,X1144) | s(bool,'T_0') = s(bool,X1144)) )),
  inference(superposition,[],[f1068,f1507])).
fof(f27657,plain,(
  ( ! [X1151,X1149,X1146,X1150,X1148,X1147,X1145] : (~p(s(bool,X1147)) | p(s(bool,X1148)) | ~sP10(happ(s(fun(X1145,bool),X1146),s(X1145,'const.min.@_1'(s(fun(X1145,bool),X1146)))),X1148,X1147) | s(bool,X1149) = s(bool,X1150) | s(bool,X1150) = s(bool,'|dollar|exists_1'(s(fun(X1145,bool),X1146))) | s(bool,X1149) = s(bool,X1151) | s(bool,'T_0') = s(bool,X1151)) )),
  inference(subsumption_resolution,[],[f23634,f219])).
fof(f23634,plain,(
  ( ! [X1151,X1149,X1146,X1150,X1148,X1147,X1145] : (~p(s(bool,'T_0')) | ~p(s(bool,X1147)) | p(s(bool,X1148)) | ~sP10(happ(s(fun(X1145,bool),X1146),s(X1145,'const.min.@_1'(s(fun(X1145,bool),X1146)))),X1148,X1147) | s(bool,X1149) = s(bool,X1150) | s(bool,X1150) = s(bool,'|dollar|exists_1'(s(fun(X1145,bool),X1146))) | s(bool,X1149) = s(bool,X1151) | s(bool,'T_0') = s(bool,X1151)) )),
  inference(superposition,[],[f1071,f1507])).
fof(f27658,plain,(
  ( ! [X1163,X1161,X1159,X1162,X1160,X1164] : (p(s(bool,'|dollar|exists_1'(s(fun(X1159,bool),X1160)))) | s(bool,X1162) = s(bool,X1163) | s(bool,X1163) = s(bool,happ(s(fun(X1159,bool),X1160),s(X1159,X1161))) | s(bool,X1162) = s(bool,X1164) | s(bool,'T_0') = s(bool,X1164)) )),
  inference(subsumption_resolution,[],[f23636,f219])).
fof(f23636,plain,(
  ( ! [X1163,X1161,X1159,X1162,X1160,X1164] : (~p(s(bool,'T_0')) | p(s(bool,'|dollar|exists_1'(s(fun(X1159,bool),X1160)))) | s(bool,X1162) = s(bool,X1163) | s(bool,X1163) = s(bool,happ(s(fun(X1159,bool),X1160),s(X1159,X1161))) | s(bool,X1162) = s(bool,X1164) | s(bool,'T_0') = s(bool,X1164)) )),
  inference(superposition,[],[f384,f1507])).
fof(f31076,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X16),s(bool,'|dollar|exists_1'(s(fun(X17,bool),X18))))) | s(bool,X19) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X16))) | s(bool,'T_0') = s(bool,X19) | s(bool,'T_0') = s(bool,happ(s(fun(X17,bool),X18),s(X17,'const.min.@_1'(s(fun(X17,bool),X18))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X16)))) )),
  inference(superposition,[],[f1491,f1491])).
fof(f31298,plain,(
  ( ! [X1097,X1098,X1096] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1096))) = s(bool,happ(s(fun(bool,bool),X1096),s(bool,'|dollar|exists_1'(s(fun(X1097,bool),X1098))))) | s(bool,'T_0') = s(bool,happ(s(fun(X1097,bool),X1098),s(X1097,'const.min.@_1'(s(fun(X1097,bool),X1098))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1096)))) )),
  inference(superposition,[],[f259,f1491])).
fof(f31322,plain,(
  ( ! [X1203,X1205,X1202,X1206,X1204] : (s(X1204,f(s(bool,'|dollar|exists_1'(s(fun(X1205,bool),X1206))))) != s(X1204,g(s(bool,'|dollar|exists_1'(s(fun(X1205,bool),X1206))))) | s(fun(bool,X1204),X1202) = s(fun(bool,X1204),X1203) | s(bool,'T_0') = s(bool,happ(s(fun(X1205,bool),X1206),s(X1205,'const.min.@_1'(s(fun(X1205,bool),X1206))))) | s(bool,'T_0') = s(bool,sK18(X1202,X1203,X1204,bool))) )),
  inference(superposition,[],[f305,f1491])).
fof(f31895,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1))))) | s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) = s(bool,'|dollar|exists_1'(s(fun(X2,bool),X3))) | s(bool,'T_0') = s(bool,happ(s(fun(X2,bool),X3),s(X2,'const.min.@_1'(s(fun(X2,bool),X3)))))) )),
  inference(condensation,[],[f31894])).
fof(f31894,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s(bool,'|dollar|exists_1'(s(fun(X23,bool),X24))) = s(bool,'|dollar|exists_1'(s(fun(X25,bool),X26))) | s(bool,'T_0') = s(bool,happ(s(fun(X25,bool),X26),s(X25,'const.min.@_1'(s(fun(X25,bool),X26))))) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,happ(s(fun(X23,bool),X24),s(X23,'const.min.@_1'(s(fun(X23,bool),X24)))))) )),
  inference(duplicate_literal_removal,[],[f31030])).
fof(f31030,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s(bool,'|dollar|exists_1'(s(fun(X23,bool),X24))) = s(bool,'|dollar|exists_1'(s(fun(X25,bool),X26))) | s(bool,'T_0') = s(bool,happ(s(fun(X25,bool),X26),s(X25,'const.min.@_1'(s(fun(X25,bool),X26))))) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,happ(s(fun(X23,bool),X24),s(X23,'const.min.@_1'(s(fun(X23,bool),X24))))) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f1491,f1491])).
fof(f32114,plain,(
  ( ! [X35,X33,X36,X34] : (sP0(X35,happ(s(fun(X33,bool),X34),s(X33,'const.min.@_1'(s(fun(X33,bool),X34))))) | s(bool,X36) = s(bool,'|dollar|exists_1'(s(fun(X33,bool),X34))) | s(bool,'T_0') = s(bool,X36)) )),
  inference(subsumption_resolution,[],[f31499,f219])).
fof(f31499,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'T_0')) | sP0(X35,happ(s(fun(X33,bool),X34),s(X33,'const.min.@_1'(s(fun(X33,bool),X34))))) | s(bool,X36) = s(bool,'|dollar|exists_1'(s(fun(X33,bool),X34))) | s(bool,'T_0') = s(bool,X36)) )),
  inference(superposition,[],[f280,f1491])).
fof(f32115,plain,(
  ( ! [X39,X37,X38,X40] : (sP0(happ(s(fun(X37,bool),X38),s(X37,'const.min.@_1'(s(fun(X37,bool),X38)))),X39) | s(bool,X40) = s(bool,'|dollar|exists_1'(s(fun(X37,bool),X38))) | s(bool,'T_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f31500,f219])).
fof(f31500,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'T_0')) | sP0(happ(s(fun(X37,bool),X38),s(X37,'const.min.@_1'(s(fun(X37,bool),X38)))),X39) | s(bool,X40) = s(bool,'|dollar|exists_1'(s(fun(X37,bool),X38))) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f281,f1491])).
fof(f32116,plain,(
  ( ! [X43,X41,X44,X42] : (p(s(bool,X43)) | sP1(happ(s(fun(X41,bool),X42),s(X41,'const.min.@_1'(s(fun(X41,bool),X42)))),X43) | s(bool,X44) = s(bool,'|dollar|exists_1'(s(fun(X41,bool),X42))) | s(bool,'T_0') = s(bool,X44)) )),
  inference(subsumption_resolution,[],[f31501,f219])).
fof(f31501,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'T_0')) | p(s(bool,X43)) | sP1(happ(s(fun(X41,bool),X42),s(X41,'const.min.@_1'(s(fun(X41,bool),X42)))),X43) | s(bool,X44) = s(bool,'|dollar|exists_1'(s(fun(X41,bool),X42))) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f296,f1491])).
fof(f32117,plain,(
  ( ! [X47,X45,X48,X46] : (p(s(bool,X47)) | sP1(X47,happ(s(fun(X45,bool),X46),s(X45,'const.min.@_1'(s(fun(X45,bool),X46))))) | s(bool,X48) = s(bool,'|dollar|exists_1'(s(fun(X45,bool),X46))) | s(bool,'T_0') = s(bool,X48)) )),
  inference(subsumption_resolution,[],[f31502,f219])).
fof(f31502,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'T_0')) | p(s(bool,X47)) | sP1(X47,happ(s(fun(X45,bool),X46),s(X45,'const.min.@_1'(s(fun(X45,bool),X46))))) | s(bool,X48) = s(bool,'|dollar|exists_1'(s(fun(X45,bool),X46))) | s(bool,'T_0') = s(bool,X48)) )),
  inference(superposition,[],[f299,f1491])).
fof(f32118,plain,(
  ( ! [X52,X50,X53,X51,X49] : (~p(s(bool,X51)) | sP2(X52,X51,happ(s(fun(X49,bool),X50),s(X49,'const.min.@_1'(s(fun(X49,bool),X50))))) | s(bool,X53) = s(bool,'|dollar|exists_1'(s(fun(X49,bool),X50))) | s(bool,'T_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f31503,f219])).
fof(f31503,plain,(
  ( ! [X52,X50,X53,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X51)) | sP2(X52,X51,happ(s(fun(X49,bool),X50),s(X49,'const.min.@_1'(s(fun(X49,bool),X50))))) | s(bool,X53) = s(bool,'|dollar|exists_1'(s(fun(X49,bool),X50))) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f310,f1491])).
fof(f32119,plain,(
  ( ! [X70,X72,X71,X69,X73] : (~p(s(bool,X71)) | sP8(happ(s(fun(X69,bool),X70),s(X69,'const.min.@_1'(s(fun(X69,bool),X70)))),X72,X71) | s(bool,X73) = s(bool,'|dollar|exists_1'(s(fun(X69,bool),X70))) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f31507,f219])).
fof(f31507,plain,(
  ( ! [X70,X72,X71,X69,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X71)) | sP8(happ(s(fun(X69,bool),X70),s(X69,'const.min.@_1'(s(fun(X69,bool),X70)))),X72,X71) | s(bool,X73) = s(bool,'|dollar|exists_1'(s(fun(X69,bool),X70))) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f353,f1491])).
fof(f32120,plain,(
  ( ! [X78,X76,X74,X77,X75] : (~p(s(bool,X76)) | sP8(happ(s(fun(X74,bool),X75),s(X74,'const.min.@_1'(s(fun(X74,bool),X75)))),X76,X77) | s(bool,X78) = s(bool,'|dollar|exists_1'(s(fun(X74,bool),X75))) | s(bool,'T_0') = s(bool,X78)) )),
  inference(subsumption_resolution,[],[f31508,f219])).
fof(f31508,plain,(
  ( ! [X78,X76,X74,X77,X75] : (~p(s(bool,'T_0')) | ~p(s(bool,X76)) | sP8(happ(s(fun(X74,bool),X75),s(X74,'const.min.@_1'(s(fun(X74,bool),X75)))),X76,X77) | s(bool,X78) = s(bool,'|dollar|exists_1'(s(fun(X74,bool),X75))) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f354,f1491])).
fof(f32121,plain,(
  ( ! [X92,X90,X93,X91,X89] : (p(s(bool,X91)) | sP10(happ(s(fun(X89,bool),X90),s(X89,'const.min.@_1'(s(fun(X89,bool),X90)))),X92,X91) | s(bool,X93) = s(bool,'|dollar|exists_1'(s(fun(X89,bool),X90))) | s(bool,'T_0') = s(bool,X93)) )),
  inference(subsumption_resolution,[],[f31511,f219])).
fof(f31511,plain,(
  ( ! [X92,X90,X93,X91,X89] : (~p(s(bool,'T_0')) | p(s(bool,X91)) | sP10(happ(s(fun(X89,bool),X90),s(X89,'const.min.@_1'(s(fun(X89,bool),X90)))),X92,X91) | s(bool,X93) = s(bool,'|dollar|exists_1'(s(fun(X89,bool),X90))) | s(bool,'T_0') = s(bool,X93)) )),
  inference(superposition,[],[f370,f1491])).
fof(f32122,plain,(
  ( ! [X94,X97,X95,X98,X96] : (~p(s(bool,X96)) | sP10(happ(s(fun(X94,bool),X95),s(X94,'const.min.@_1'(s(fun(X94,bool),X95)))),X96,X97) | s(bool,X98) = s(bool,'|dollar|exists_1'(s(fun(X94,bool),X95))) | s(bool,'T_0') = s(bool,X98)) )),
  inference(subsumption_resolution,[],[f31512,f219])).
fof(f31512,plain,(
  ( ! [X94,X97,X95,X98,X96] : (~p(s(bool,'T_0')) | ~p(s(bool,X96)) | sP10(happ(s(fun(X94,bool),X95),s(X94,'const.min.@_1'(s(fun(X94,bool),X95)))),X96,X97) | s(bool,X98) = s(bool,'|dollar|exists_1'(s(fun(X94,bool),X95))) | s(bool,'T_0') = s(bool,X98)) )),
  inference(superposition,[],[f371,f1491])).
fof(f32123,plain,(
  ( ! [X107,X105,X108,X106,X104] : (~sP9(happ(s(fun(X104,bool),X105),s(X104,'const.min.@_1'(s(fun(X104,bool),X105)))),X106,X107) | sP10(happ(s(fun(X104,bool),X105),s(X104,'const.min.@_1'(s(fun(X104,bool),X105)))),X106,X107) | s(bool,X108) = s(bool,'|dollar|exists_1'(s(fun(X104,bool),X105))) | s(bool,'T_0') = s(bool,X108)) )),
  inference(subsumption_resolution,[],[f31514,f219])).
fof(f31514,plain,(
  ( ! [X107,X105,X108,X106,X104] : (~p(s(bool,'T_0')) | ~sP9(happ(s(fun(X104,bool),X105),s(X104,'const.min.@_1'(s(fun(X104,bool),X105)))),X106,X107) | sP10(happ(s(fun(X104,bool),X105),s(X104,'const.min.@_1'(s(fun(X104,bool),X105)))),X106,X107) | s(bool,X108) = s(bool,'|dollar|exists_1'(s(fun(X104,bool),X105))) | s(bool,'T_0') = s(bool,X108)) )),
  inference(superposition,[],[f375,f1491])).
fof(f32124,plain,(
  ( ! [X111,X109,X112,X110,X113] : (~sP7(happ(s(fun(X109,bool),X110),s(X109,'const.min.@_1'(s(fun(X109,bool),X110)))),X111,X112) | sP8(happ(s(fun(X109,bool),X110),s(X109,'const.min.@_1'(s(fun(X109,bool),X110)))),X111,X112) | s(bool,X113) = s(bool,'|dollar|exists_1'(s(fun(X109,bool),X110))) | s(bool,'T_0') = s(bool,X113)) )),
  inference(subsumption_resolution,[],[f31515,f219])).
fof(f31515,plain,(
  ( ! [X111,X109,X112,X110,X113] : (~p(s(bool,'T_0')) | ~sP7(happ(s(fun(X109,bool),X110),s(X109,'const.min.@_1'(s(fun(X109,bool),X110)))),X111,X112) | sP8(happ(s(fun(X109,bool),X110),s(X109,'const.min.@_1'(s(fun(X109,bool),X110)))),X111,X112) | s(bool,X113) = s(bool,'|dollar|exists_1'(s(fun(X109,bool),X110))) | s(bool,'T_0') = s(bool,X113)) )),
  inference(superposition,[],[f376,f1491])).
fof(f32945,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1))))) = s(bool,happ(s(fun(X2,bool),X3),s(X2,'const.min.@_1'(s(fun(X2,bool),X3))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X2,bool),X3)))) )),
  inference(condensation,[],[f32944])).
fof(f32944,plain,(
  ( ! [X78,X76,X79,X77,X75] : (s(bool,happ(s(fun(X76,bool),X77),s(X76,'const.min.@_1'(s(fun(X76,bool),X77))))) = s(bool,happ(s(fun(X78,bool),X79),s(X78,'const.min.@_1'(s(fun(X78,bool),X79))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X78,bool),X79))) | s(bool,'T_0') = s(bool,X75) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X76,bool),X77)))) )),
  inference(duplicate_literal_removal,[],[f32291])).
fof(f32291,plain,(
  ( ! [X78,X76,X79,X77,X75] : (s(bool,happ(s(fun(X76,bool),X77),s(X76,'const.min.@_1'(s(fun(X76,bool),X77))))) = s(bool,happ(s(fun(X78,bool),X79),s(X78,'const.min.@_1'(s(fun(X78,bool),X79))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X78,bool),X79))) | s(bool,'T_0') = s(bool,X75) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X76,bool),X77))) | s(bool,'T_0') = s(bool,X75)) )),
  inference(superposition,[],[f1520,f1520])).
fof(f32959,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,'|dollar|exists_1'(s(fun(X2,bool),X3))) = s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1))))) | s(bool,'T_0') = s(bool,happ(s(fun(X2,bool),X3),s(X2,'const.min.@_1'(s(fun(X2,bool),X3)))))) )),
  inference(condensation,[],[f32958])).
fof(f32958,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s(bool,'|dollar|exists_1'(s(fun(X23,bool),X24))) = s(bool,happ(s(fun(X25,bool),X26),s(X25,'const.min.@_1'(s(fun(X25,bool),X26))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X25,bool),X26))) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,happ(s(fun(X23,bool),X24),s(X23,'const.min.@_1'(s(fun(X23,bool),X24)))))) )),
  inference(duplicate_literal_removal,[],[f32282])).
fof(f32282,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s(bool,'|dollar|exists_1'(s(fun(X23,bool),X24))) = s(bool,happ(s(fun(X25,bool),X26),s(X25,'const.min.@_1'(s(fun(X25,bool),X26))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X25,bool),X26))) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,happ(s(fun(X23,bool),X24),s(X23,'const.min.@_1'(s(fun(X23,bool),X24))))) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f1520,f1491])).
fof(f33363,plain,(
  ( ! [X19,X17,X20,X18] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X17))) = s(bool,'|dollar|exists_1'(s(fun(X18,bool),X19))) | s(bool,X20) = s(bool,'const.min.@_1'(s(fun(bool,bool),X17))) | s(bool,'T_0') = s(bool,X20) | s(bool,'T_0') = s(bool,happ(s(fun(X18,bool),X19),s(X18,'const.min.@_1'(s(fun(X18,bool),X19))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X17),s(bool,'T_0')))) )),
  inference(superposition,[],[f1782,f1491])).
fof(f33372,plain,(
  ( ! [X61,X64,X62,X63] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X61))) = s(bool,happ(s(fun(X62,bool),X63),s(X62,'const.min.@_1'(s(fun(X62,bool),X63))))) | s(bool,X64) = s(bool,'const.min.@_1'(s(fun(bool,bool),X61))) | s(bool,'T_0') = s(bool,X64) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X62,bool),X63))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X61),s(bool,'T_0')))) )),
  inference(superposition,[],[f1782,f1520])).
fof(f34156,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,'const.min.@_1'(s(fun(bool,bool),X2))) = s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X2))) = s(bool,happ(s(fun(bool,bool),X2),s(bool,'T_0')))) )),
  inference(condensation,[],[f34155])).
fof(f34155,plain,(
  ( ! [X61,X62,X60,X63] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X63))) = s(bool,happ(s(fun(X61,bool),X62),s(X61,'const.min.@_1'(s(fun(X61,bool),X62))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X63))) = s(bool,happ(s(fun(bool,bool),X63),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X60) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X61,bool),X62)))) )),
  inference(duplicate_literal_removal,[],[f33391])).
fof(f33391,plain,(
  ( ! [X61,X62,X60,X63] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X63))) = s(bool,happ(s(fun(X61,bool),X62),s(X61,'const.min.@_1'(s(fun(X61,bool),X62))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X63))) = s(bool,happ(s(fun(bool,bool),X63),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X60) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X61,bool),X62))) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f1782,f1520])).
fof(f34170,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1))))) | s(bool,'const.min.@_1'(s(fun(bool,bool),X2))) = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X2))) = s(bool,happ(s(fun(bool,bool),X2),s(bool,'T_0')))) )),
  inference(condensation,[],[f34169])).
fof(f34169,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X19))) = s(bool,'|dollar|exists_1'(s(fun(X17,bool),X18))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X19))) = s(bool,happ(s(fun(bool,bool),X19),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X16) | s(bool,'T_0') = s(bool,happ(s(fun(X17,bool),X18),s(X17,'const.min.@_1'(s(fun(X17,bool),X18)))))) )),
  inference(duplicate_literal_removal,[],[f33382])).
fof(f33382,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X19))) = s(bool,'|dollar|exists_1'(s(fun(X17,bool),X18))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X19))) = s(bool,happ(s(fun(bool,bool),X19),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X16) | s(bool,'T_0') = s(bool,happ(s(fun(X17,bool),X18),s(X17,'const.min.@_1'(s(fun(X17,bool),X18))))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f1782,f1491])).
fof(f34368,plain,(
  ( ! [X984,X983] : (s(bool,'T_0') != s(bool,happ(s(fun(X983,bool),X984),s(X983,'const.min.@_1'(s(fun(X983,bool),X984))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X983,bool),X984)))) )),
  inference(subsumption_resolution,[],[f32523,f412])).
fof(f32523,plain,(
  ( ! [X984,X983] : (s(bool,'T_0') != s(bool,happ(s(fun(X983,bool),X984),s(X983,'const.min.@_1'(s(fun(X983,bool),X984))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X983,bool),X984))) | s(bool,'T_0') = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) )),
  inference(superposition,[],[f412,f1520])).
fof(f34371,plain,(
  ( ! [X969,X970] : (s(bool,'T_0') != s(bool,'|dollar|exists_1'(s(fun(X969,bool),X970))) | s(bool,'T_0') = s(bool,happ(s(fun(X969,bool),X970),s(X969,'const.min.@_1'(s(fun(X969,bool),X970)))))) )),
  inference(subsumption_resolution,[],[f31276,f412])).
fof(f31276,plain,(
  ( ! [X969,X970] : (s(bool,'T_0') != s(bool,'|dollar|exists_1'(s(fun(X969,bool),X970))) | s(bool,'T_0') = s(bool,happ(s(fun(X969,bool),X970),s(X969,'const.min.@_1'(s(fun(X969,bool),X970))))) | s(bool,'T_0') = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) )),
  inference(superposition,[],[f412,f1491])).
fof(f35399,plain,(
  ( ! [X198,X196,X200,X199,X197,X201] : (~p(s(bool,'|dollar|exists_1'(s(fun(X196,bool),X197)))) | p(s(bool,happ(s(fun(X198,bool),X199),s(X198,X200)))) | s(bool,X201) = s(bool,happ(s(fun(X198,bool),X199),s(X198,sK14(X199,happ(s(fun(X196,bool),X197),s(X196,'const.min.@_1'(s(fun(X196,bool),X197)))),X198)))) | s(bool,'T_0') = s(bool,X201)) )),
  inference(superposition,[],[f2132,f259])).
fof(f35431,plain,(
  ( ! [X191,X189,X194,X192,X190,X195,X193] : (p(s(bool,happ(s(fun(X191,bool),X192),s(X191,X193)))) | s(bool,X194) = s(bool,happ(s(fun(X191,bool),X192),s(X191,sK14(X192,happ(s(fun(X189,bool),X190),s(X189,'const.min.@_1'(s(fun(X189,bool),X190)))),X191)))) | s(bool,'T_0') = s(bool,X194) | s(bool,X195) = s(bool,'|dollar|exists_1'(s(fun(X189,bool),X190))) | s(bool,'T_0') = s(bool,X195)) )),
  inference(subsumption_resolution,[],[f35398,f219])).
fof(f35398,plain,(
  ( ! [X191,X189,X194,X192,X190,X195,X193] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X191,bool),X192),s(X191,X193)))) | s(bool,X194) = s(bool,happ(s(fun(X191,bool),X192),s(X191,sK14(X192,happ(s(fun(X189,bool),X190),s(X189,'const.min.@_1'(s(fun(X189,bool),X190)))),X191)))) | s(bool,'T_0') = s(bool,X194) | s(bool,X195) = s(bool,'|dollar|exists_1'(s(fun(X189,bool),X190))) | s(bool,'T_0') = s(bool,X195)) )),
  inference(superposition,[],[f2132,f1491])).
fof(f35508,plain,(
  ( ! [X198,X196,X200,X199,X197,X201] : (~p(s(bool,'|dollar|exists_1'(s(fun(X196,bool),X197)))) | p(s(bool,happ(s(fun(X198,bool),X199),s(X198,X200)))) | s(bool,X201) = s(bool,happ(s(fun(X198,bool),X199),s(X198,sK15(X199,happ(s(fun(X196,bool),X197),s(X196,'const.min.@_1'(s(fun(X196,bool),X197)))),X198)))) | s(bool,'T_0') = s(bool,X201)) )),
  inference(superposition,[],[f2133,f259])).
fof(f35540,plain,(
  ( ! [X191,X189,X194,X192,X190,X195,X193] : (p(s(bool,happ(s(fun(X191,bool),X192),s(X191,X193)))) | s(bool,X194) = s(bool,happ(s(fun(X191,bool),X192),s(X191,sK15(X192,happ(s(fun(X189,bool),X190),s(X189,'const.min.@_1'(s(fun(X189,bool),X190)))),X191)))) | s(bool,'T_0') = s(bool,X194) | s(bool,X195) = s(bool,'|dollar|exists_1'(s(fun(X189,bool),X190))) | s(bool,'T_0') = s(bool,X195)) )),
  inference(subsumption_resolution,[],[f35507,f219])).
fof(f35507,plain,(
  ( ! [X191,X189,X194,X192,X190,X195,X193] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X191,bool),X192),s(X191,X193)))) | s(bool,X194) = s(bool,happ(s(fun(X191,bool),X192),s(X191,sK15(X192,happ(s(fun(X189,bool),X190),s(X189,'const.min.@_1'(s(fun(X189,bool),X190)))),X191)))) | s(bool,'T_0') = s(bool,X194) | s(bool,X195) = s(bool,'|dollar|exists_1'(s(fun(X189,bool),X190))) | s(bool,'T_0') = s(bool,X195)) )),
  inference(superposition,[],[f2133,f1491])).
fof(f35677,plain,(
  ( ! [X198,X196,X200,X199,X197,X201] : (p(s(bool,'|dollar|exists_1'(s(fun(X196,bool),X197)))) | p(s(bool,happ(s(fun(X198,bool),X199),s(X198,X200)))) | s(bool,X201) = s(bool,happ(s(fun(X198,bool),X199),s(X198,sK16(X199,happ(s(fun(X196,bool),X197),s(X196,'const.min.@_1'(s(fun(X196,bool),X197)))),X198)))) | s(bool,'T_0') = s(bool,X201)) )),
  inference(superposition,[],[f2134,f259])).
fof(f35775,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK16(X1,happ(s(fun(X4,bool),X5),s(X4,'const.min.@_1'(s(fun(X4,bool),X5)))),X0)))) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X4,bool),X5)))) )),
  inference(condensation,[],[f35774])).
fof(f35774,plain,(
  ( ! [X187,X185,X182,X188,X186,X184,X183] : (p(s(bool,X184)) | p(s(bool,happ(s(fun(X185,bool),X186),s(X185,X187)))) | s(bool,X188) = s(bool,happ(s(fun(X185,bool),X186),s(X185,sK16(X186,happ(s(fun(X182,bool),X183),s(X182,'const.min.@_1'(s(fun(X182,bool),X183)))),X185)))) | s(bool,'T_0') = s(bool,X188) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X182,bool),X183)))) )),
  inference(subsumption_resolution,[],[f35675,f232])).
fof(f35675,plain,(
  ( ! [X187,X185,X182,X188,X186,X184,X183] : (p(s(bool,X184)) | p(s(bool,happ(s(fun(X185,bool),X186),s(X185,X187)))) | s(bool,X188) = s(bool,happ(s(fun(X185,bool),X186),s(X185,sK16(X186,happ(s(fun(X182,bool),X183),s(X182,'const.min.@_1'(s(fun(X182,bool),X183)))),X185)))) | s(bool,'T_0') = s(bool,X188) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X182,bool),X183))) | s(bool,'T_0') = s(bool,X184)) )),
  inference(superposition,[],[f2134,f1520])).
fof(f35914,plain,(
  ( ! [X198,X196,X200,X199,X197,X201] : (p(s(bool,'|dollar|exists_1'(s(fun(X196,bool),X197)))) | p(s(bool,happ(s(fun(X198,bool),X199),s(X198,X200)))) | s(bool,X201) = s(bool,happ(s(fun(X198,bool),X199),s(X198,sK17(X199,happ(s(fun(X196,bool),X197),s(X196,'const.min.@_1'(s(fun(X196,bool),X197)))),X198)))) | s(bool,'T_0') = s(bool,X201)) )),
  inference(superposition,[],[f2135,f259])).
fof(f36012,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK17(X1,happ(s(fun(X4,bool),X5),s(X4,'const.min.@_1'(s(fun(X4,bool),X5)))),X0)))) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X4,bool),X5)))) )),
  inference(condensation,[],[f36011])).
fof(f36011,plain,(
  ( ! [X187,X185,X182,X188,X186,X184,X183] : (p(s(bool,X184)) | p(s(bool,happ(s(fun(X185,bool),X186),s(X185,X187)))) | s(bool,X188) = s(bool,happ(s(fun(X185,bool),X186),s(X185,sK17(X186,happ(s(fun(X182,bool),X183),s(X182,'const.min.@_1'(s(fun(X182,bool),X183)))),X185)))) | s(bool,'T_0') = s(bool,X188) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X182,bool),X183)))) )),
  inference(subsumption_resolution,[],[f35912,f232])).
fof(f35912,plain,(
  ( ! [X187,X185,X182,X188,X186,X184,X183] : (p(s(bool,X184)) | p(s(bool,happ(s(fun(X185,bool),X186),s(X185,X187)))) | s(bool,X188) = s(bool,happ(s(fun(X185,bool),X186),s(X185,sK17(X186,happ(s(fun(X182,bool),X183),s(X182,'const.min.@_1'(s(fun(X182,bool),X183)))),X185)))) | s(bool,'T_0') = s(bool,X188) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X182,bool),X183))) | s(bool,'T_0') = s(bool,X184)) )),
  inference(superposition,[],[f2135,f1520])).
fof(f1088,plain,(
  ( ! [X0,X1] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) = s(bool,happ(s(fun(bool,bool),X1),s(bool,X0))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1077,f226])).
fof(f1340,plain,(
  ( ! [X2,X0,X1] : (sP0(X1,happ(s(fun(bool,bool),X2),s(bool,X0))) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X2)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1101,f226])).
fof(f1347,plain,(
  ( ! [X2,X0,X1] : (sP0(happ(s(fun(bool,bool),X1),s(bool,X0)),X2) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1102,f226])).
fof(f3362,plain,(
  ( ! [X2,X0,X1] : (sP0(X1,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,X2) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1057,f518])).
fof(f3387,plain,(
  ( ! [X2,X0,X1] : (sP0(happ(s(fun(bool,bool),X0),s(bool,'T_0')),X1) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,X2) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1058,f518])).
fof(f3668,plain,(
  ( ! [X2,X0,X1] : (sP1(happ(s(fun(bool,bool),X0),s(bool,'T_0')),X1) | p(s(bool,X1)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,X2) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1059,f518])).
fof(f3670,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X6)))) | p(s(bool,X8)) | sP1(happ(s(fun(bool,bool),X6),s(bool,X7)),X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X6))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f1059,f518])).
fof(f3710,plain,(
  ( ! [X2,X0,X1] : (sP1(X1,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | p(s(bool,X1)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,X2) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1060,f518])).
fof(f3712,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X6)))) | p(s(bool,X8)) | sP1(X8,happ(s(fun(bool,bool),X6),s(bool,X7))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X6))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f1060,f518])).
fof(f5442,plain,(
  ( ! [X2,X0,X3,X1] : (sP2(X1,X2,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | ~p(s(bool,X2)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,X3) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1061,f518])).
fof(f5444,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X8)))) | ~p(s(bool,X11)) | sP2(X10,X11,happ(s(fun(bool,bool),X8),s(bool,X9))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1061,f518])).
fof(f5547,plain,(
  ( ! [X2,X0,X3,X1] : (sP8(happ(s(fun(bool,bool),X0),s(bool,'T_0')),X1,X2) | ~p(s(bool,X2)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,X3) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1065,f518])).
fof(f5549,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X8)))) | ~p(s(bool,X11)) | sP8(happ(s(fun(bool,bool),X8),s(bool,X9)),X10,X11) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1065,f518])).
fof(f5571,plain,(
  ( ! [X2,X0,X3,X1] : (sP8(happ(s(fun(bool,bool),X0),s(bool,'T_0')),X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,X3) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1066,f518])).
fof(f5573,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X8)))) | ~p(s(bool,X10)) | sP8(happ(s(fun(bool,bool),X8),s(bool,X9)),X10,X11) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1066,f518])).
fof(f5601,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(happ(s(fun(bool,bool),X0),s(bool,'T_0')),X1,X2) | p(s(bool,X2)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,X3) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1069,f518])).
fof(f5603,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X8)))) | p(s(bool,X11)) | sP10(happ(s(fun(bool,bool),X8),s(bool,X9)),X10,X11) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1069,f518])).
fof(f5630,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(happ(s(fun(bool,bool),X0),s(bool,'T_0')),X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0)))) | s(bool,X3) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1070,f518])).
fof(f5632,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X8)))) | ~p(s(bool,X10)) | sP10(happ(s(fun(bool,bool),X8),s(bool,X9)),X10,X11) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X8))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1070,f518])).
fof(f8488,plain,(
  ( ! [X6,X4,X5,X3] : (~sP9(happ(s(fun(bool,bool),X3),s(bool,'const.min.@_1'(s(fun(bool,bool),X3)))),X4,X5) | sP10(happ(s(fun(bool,bool),X3),s(bool,'T_0')),X4,X5) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3)))) | s(bool,X6) = s(bool,'const.min.@_1'(s(fun(bool,bool),X3))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f1072,f518])).
fof(f8489,plain,(
  ( ! [X10,X8,X7,X9] : (~sP9(happ(s(fun(bool,bool),X7),s(bool,'const.min.@_1'(s(fun(bool,bool),X7)))),X9,X10) | sP10(happ(s(fun(bool,bool),X7),s(bool,X8)),X9,X10) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X7)))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X7)))) )),
  inference(superposition,[],[f1072,f518])).
fof(f8541,plain,(
  ( ! [X6,X4,X5,X3] : (~sP7(happ(s(fun(bool,bool),X3),s(bool,'const.min.@_1'(s(fun(bool,bool),X3)))),X4,X5) | sP8(happ(s(fun(bool,bool),X3),s(bool,'T_0')),X4,X5) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3)))) | s(bool,X6) = s(bool,'const.min.@_1'(s(fun(bool,bool),X3))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f1073,f518])).
fof(f8542,plain,(
  ( ! [X10,X8,X7,X9] : (~sP7(happ(s(fun(bool,bool),X7),s(bool,'const.min.@_1'(s(fun(bool,bool),X7)))),X9,X10) | sP8(happ(s(fun(bool,bool),X7),s(bool,X8)),X9,X10) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X7)))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X7)))) )),
  inference(superposition,[],[f1073,f518])).
fof(f22220,plain,(
  ( ! [X1267,X1265,X1266,X1268] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1265))) = s(bool,happ(s(fun(bool,bool),X1265),s(bool,X1266))) | s(bool,X1266) = s(bool,X1267) | s(bool,'T_0') = s(bool,X1267) | s(bool,X1268) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1265))) | s(bool,'T_0') = s(bool,X1268)) )),
  inference(superposition,[],[f259,f1507])).
fof(f22225,plain,(
  ( ! [X1288,X1286,X1289,X1285,X1287] : (sP0(X1287,happ(s(fun(bool,bool),X1285),s(bool,X1286))) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1285)))) | s(bool,X1286) = s(bool,X1288) | s(bool,'T_0') = s(bool,X1288) | s(bool,X1289) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1285))) | s(bool,'T_0') = s(bool,X1289)) )),
  inference(superposition,[],[f1057,f1507])).
fof(f22226,plain,(
  ( ! [X1290,X1292,X1294,X1291,X1293] : (sP0(happ(s(fun(bool,bool),X1290),s(bool,X1291)),X1292) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1290)))) | s(bool,X1291) = s(bool,X1293) | s(bool,'T_0') = s(bool,X1293) | s(bool,X1294) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1290))) | s(bool,'T_0') = s(bool,X1294)) )),
  inference(superposition,[],[f1058,f1507])).
fof(f22227,plain,(
  ( ! [X1296,X1298,X1297,X1299,X1295] : (sP1(happ(s(fun(bool,bool),X1295),s(bool,X1296)),X1297) | p(s(bool,X1297)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1295)))) | s(bool,X1296) = s(bool,X1298) | s(bool,'T_0') = s(bool,X1298) | s(bool,X1299) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1295))) | s(bool,'T_0') = s(bool,X1299)) )),
  inference(superposition,[],[f1059,f1507])).
fof(f22228,plain,(
  ( ! [X1300,X1302,X1301,X1303,X1304] : (sP1(X1302,happ(s(fun(bool,bool),X1300),s(bool,X1301))) | p(s(bool,X1302)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1300)))) | s(bool,X1301) = s(bool,X1303) | s(bool,'T_0') = s(bool,X1303) | s(bool,X1304) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1300))) | s(bool,'T_0') = s(bool,X1304)) )),
  inference(superposition,[],[f1060,f1507])).
fof(f22229,plain,(
  ( ! [X1310,X1305,X1307,X1309,X1306,X1308] : (sP2(X1307,X1308,happ(s(fun(bool,bool),X1305),s(bool,X1306))) | ~p(s(bool,X1308)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1305)))) | s(bool,X1306) = s(bool,X1309) | s(bool,'T_0') = s(bool,X1309) | s(bool,X1310) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1305))) | s(bool,'T_0') = s(bool,X1310)) )),
  inference(superposition,[],[f1061,f1507])).
fof(f22230,plain,(
  ( ! [X1313,X1315,X1311,X1312,X1314,X1316] : (sP8(happ(s(fun(bool,bool),X1311),s(bool,X1312)),X1313,X1314) | ~p(s(bool,X1314)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1311)))) | s(bool,X1312) = s(bool,X1315) | s(bool,'T_0') = s(bool,X1315) | s(bool,X1316) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1311))) | s(bool,'T_0') = s(bool,X1316)) )),
  inference(superposition,[],[f1065,f1507])).
fof(f22231,plain,(
  ( ! [X1321,X1317,X1319,X1320,X1322,X1318] : (sP8(happ(s(fun(bool,bool),X1317),s(bool,X1318)),X1319,X1320) | ~p(s(bool,X1319)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1317)))) | s(bool,X1318) = s(bool,X1321) | s(bool,'T_0') = s(bool,X1321) | s(bool,X1322) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1317))) | s(bool,'T_0') = s(bool,X1322)) )),
  inference(superposition,[],[f1066,f1507])).
fof(f22232,plain,(
  ( ! [X1323,X1325,X1327,X1328,X1324,X1326] : (sP10(happ(s(fun(bool,bool),X1323),s(bool,X1324)),X1325,X1326) | p(s(bool,X1326)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1323)))) | s(bool,X1324) = s(bool,X1327) | s(bool,'T_0') = s(bool,X1327) | s(bool,X1328) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1323))) | s(bool,'T_0') = s(bool,X1328)) )),
  inference(superposition,[],[f1069,f1507])).
fof(f22233,plain,(
  ( ! [X1329,X1331,X1333,X1330,X1332,X1334] : (sP10(happ(s(fun(bool,bool),X1329),s(bool,X1330)),X1331,X1332) | ~p(s(bool,X1331)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1329)))) | s(bool,X1330) = s(bool,X1333) | s(bool,'T_0') = s(bool,X1333) | s(bool,X1334) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1329))) | s(bool,'T_0') = s(bool,X1334)) )),
  inference(superposition,[],[f1070,f1507])).
fof(f22234,plain,(
  ( ! [X1335,X1336,X1338,X1340,X1337,X1339] : (sP10(happ(s(fun(bool,bool),X1335),s(bool,X1336)),X1337,X1338) | ~sP9(happ(s(fun(bool,bool),X1335),s(bool,'const.min.@_1'(s(fun(bool,bool),X1335)))),X1337,X1338) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1335)))) | s(bool,X1336) = s(bool,X1339) | s(bool,'T_0') = s(bool,X1339) | s(bool,X1340) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1335))) | s(bool,'T_0') = s(bool,X1340)) )),
  inference(superposition,[],[f1072,f1507])).
fof(f22235,plain,(
  ( ! [X1341,X1343,X1344,X1346,X1342,X1345] : (sP8(happ(s(fun(bool,bool),X1341),s(bool,X1342)),X1343,X1344) | ~sP7(happ(s(fun(bool,bool),X1341),s(bool,'const.min.@_1'(s(fun(bool,bool),X1341)))),X1343,X1344) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1341)))) | s(bool,X1342) = s(bool,X1345) | s(bool,'T_0') = s(bool,X1345) | s(bool,X1346) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1341))) | s(bool,'T_0') = s(bool,X1346)) )),
  inference(superposition,[],[f1073,f1507])).
fof(f22850,plain,(
  ( ! [X1267,X1265,X1266,X1268] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1265))) = s(bool,happ(s(fun(bool,bool),X1265),s(bool,X1266))) | s(bool,X1267) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1265))) | s(bool,'T_0') = s(bool,X1266) | s(bool,X1267) = s(bool,X1268) | s(bool,'T_0') = s(bool,X1268)) )),
  inference(superposition,[],[f259,f1507])).
fof(f22855,plain,(
  ( ! [X1288,X1286,X1289,X1285,X1287] : (sP0(X1287,happ(s(fun(bool,bool),X1285),s(bool,X1286))) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1285)))) | s(bool,X1288) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1285))) | s(bool,'T_0') = s(bool,X1286) | s(bool,X1288) = s(bool,X1289) | s(bool,'T_0') = s(bool,X1289)) )),
  inference(superposition,[],[f1057,f1507])).
fof(f22856,plain,(
  ( ! [X1290,X1292,X1294,X1291,X1293] : (sP0(happ(s(fun(bool,bool),X1290),s(bool,X1291)),X1292) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1290)))) | s(bool,X1293) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1290))) | s(bool,'T_0') = s(bool,X1291) | s(bool,X1293) = s(bool,X1294) | s(bool,'T_0') = s(bool,X1294)) )),
  inference(superposition,[],[f1058,f1507])).
fof(f22857,plain,(
  ( ! [X1296,X1298,X1297,X1299,X1295] : (sP1(happ(s(fun(bool,bool),X1295),s(bool,X1296)),X1297) | p(s(bool,X1297)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1295)))) | s(bool,X1298) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1295))) | s(bool,'T_0') = s(bool,X1296) | s(bool,X1298) = s(bool,X1299) | s(bool,'T_0') = s(bool,X1299)) )),
  inference(superposition,[],[f1059,f1507])).
fof(f22858,plain,(
  ( ! [X1300,X1302,X1301,X1303,X1304] : (sP1(X1302,happ(s(fun(bool,bool),X1300),s(bool,X1301))) | p(s(bool,X1302)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1300)))) | s(bool,X1303) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1300))) | s(bool,'T_0') = s(bool,X1301) | s(bool,X1303) = s(bool,X1304) | s(bool,'T_0') = s(bool,X1304)) )),
  inference(superposition,[],[f1060,f1507])).
fof(f22859,plain,(
  ( ! [X1310,X1305,X1307,X1309,X1306,X1308] : (sP2(X1307,X1308,happ(s(fun(bool,bool),X1305),s(bool,X1306))) | ~p(s(bool,X1308)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1305)))) | s(bool,X1309) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1305))) | s(bool,'T_0') = s(bool,X1306) | s(bool,X1309) = s(bool,X1310) | s(bool,'T_0') = s(bool,X1310)) )),
  inference(superposition,[],[f1061,f1507])).
fof(f22860,plain,(
  ( ! [X1313,X1315,X1311,X1312,X1314,X1316] : (sP8(happ(s(fun(bool,bool),X1311),s(bool,X1312)),X1313,X1314) | ~p(s(bool,X1314)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1311)))) | s(bool,X1315) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1311))) | s(bool,'T_0') = s(bool,X1312) | s(bool,X1315) = s(bool,X1316) | s(bool,'T_0') = s(bool,X1316)) )),
  inference(superposition,[],[f1065,f1507])).
fof(f22861,plain,(
  ( ! [X1321,X1317,X1319,X1320,X1322,X1318] : (sP8(happ(s(fun(bool,bool),X1317),s(bool,X1318)),X1319,X1320) | ~p(s(bool,X1319)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1317)))) | s(bool,X1321) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1317))) | s(bool,'T_0') = s(bool,X1318) | s(bool,X1321) = s(bool,X1322) | s(bool,'T_0') = s(bool,X1322)) )),
  inference(superposition,[],[f1066,f1507])).
fof(f22862,plain,(
  ( ! [X1323,X1325,X1327,X1328,X1324,X1326] : (sP10(happ(s(fun(bool,bool),X1323),s(bool,X1324)),X1325,X1326) | p(s(bool,X1326)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1323)))) | s(bool,X1327) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1323))) | s(bool,'T_0') = s(bool,X1324) | s(bool,X1327) = s(bool,X1328) | s(bool,'T_0') = s(bool,X1328)) )),
  inference(superposition,[],[f1069,f1507])).
fof(f22863,plain,(
  ( ! [X1329,X1331,X1333,X1330,X1332,X1334] : (sP10(happ(s(fun(bool,bool),X1329),s(bool,X1330)),X1331,X1332) | ~p(s(bool,X1331)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1329)))) | s(bool,X1333) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1329))) | s(bool,'T_0') = s(bool,X1330) | s(bool,X1333) = s(bool,X1334) | s(bool,'T_0') = s(bool,X1334)) )),
  inference(superposition,[],[f1070,f1507])).
fof(f22864,plain,(
  ( ! [X1335,X1336,X1338,X1340,X1337,X1339] : (sP10(happ(s(fun(bool,bool),X1335),s(bool,X1336)),X1337,X1338) | ~sP9(happ(s(fun(bool,bool),X1335),s(bool,'const.min.@_1'(s(fun(bool,bool),X1335)))),X1337,X1338) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1335)))) | s(bool,X1339) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1335))) | s(bool,'T_0') = s(bool,X1336) | s(bool,X1339) = s(bool,X1340) | s(bool,'T_0') = s(bool,X1340)) )),
  inference(superposition,[],[f1072,f1507])).
fof(f22865,plain,(
  ( ! [X1341,X1343,X1344,X1346,X1342,X1345] : (sP8(happ(s(fun(bool,bool),X1341),s(bool,X1342)),X1343,X1344) | ~sP7(happ(s(fun(bool,bool),X1341),s(bool,'const.min.@_1'(s(fun(bool,bool),X1341)))),X1343,X1344) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1341)))) | s(bool,X1345) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1341))) | s(bool,'T_0') = s(bool,X1342) | s(bool,X1345) = s(bool,X1346) | s(bool,'T_0') = s(bool,X1346)) )),
  inference(superposition,[],[f1073,f1507])).
fof(f23165,plain,(
  ( ! [X1210,X1208,X1211,X1209] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1208))) = s(bool,happ(s(fun(bool,bool),X1208),s(bool,X1209))) | s(bool,X1209) = s(bool,X1210) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1208))) | s(bool,X1210) = s(bool,X1211) | s(bool,'T_0') = s(bool,X1211)) )),
  inference(superposition,[],[f259,f1507])).
fof(f23170,plain,(
  ( ! [X1232,X1231,X1229,X1230,X1228] : (sP0(X1230,happ(s(fun(bool,bool),X1228),s(bool,X1229))) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1228)))) | s(bool,X1229) = s(bool,X1231) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1228))) | s(bool,X1231) = s(bool,X1232) | s(bool,'T_0') = s(bool,X1232)) )),
  inference(superposition,[],[f1057,f1507])).
fof(f23171,plain,(
  ( ! [X1234,X1236,X1235,X1233,X1237] : (sP0(happ(s(fun(bool,bool),X1233),s(bool,X1234)),X1235) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1233)))) | s(bool,X1234) = s(bool,X1236) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1233))) | s(bool,X1236) = s(bool,X1237) | s(bool,'T_0') = s(bool,X1237)) )),
  inference(superposition,[],[f1058,f1507])).
fof(f23172,plain,(
  ( ! [X1242,X1240,X1238,X1241,X1239] : (sP1(happ(s(fun(bool,bool),X1238),s(bool,X1239)),X1240) | p(s(bool,X1240)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1238)))) | s(bool,X1239) = s(bool,X1241) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1238))) | s(bool,X1241) = s(bool,X1242) | s(bool,'T_0') = s(bool,X1242)) )),
  inference(superposition,[],[f1059,f1507])).
fof(f23173,plain,(
  ( ! [X1246,X1244,X1243,X1247,X1245] : (sP1(X1245,happ(s(fun(bool,bool),X1243),s(bool,X1244))) | p(s(bool,X1245)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1243)))) | s(bool,X1244) = s(bool,X1246) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1243))) | s(bool,X1246) = s(bool,X1247) | s(bool,'T_0') = s(bool,X1247)) )),
  inference(superposition,[],[f1060,f1507])).
fof(f23174,plain,(
  ( ! [X1250,X1248,X1252,X1251,X1249,X1253] : (sP2(X1250,X1251,happ(s(fun(bool,bool),X1248),s(bool,X1249))) | ~p(s(bool,X1251)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1248)))) | s(bool,X1249) = s(bool,X1252) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1248))) | s(bool,X1252) = s(bool,X1253) | s(bool,'T_0') = s(bool,X1253)) )),
  inference(superposition,[],[f1061,f1507])).
fof(f23175,plain,(
  ( ! [X1258,X1256,X1254,X1259,X1257,X1255] : (sP8(happ(s(fun(bool,bool),X1254),s(bool,X1255)),X1256,X1257) | ~p(s(bool,X1257)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1254)))) | s(bool,X1255) = s(bool,X1258) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1254))) | s(bool,X1258) = s(bool,X1259) | s(bool,'T_0') = s(bool,X1259)) )),
  inference(superposition,[],[f1065,f1507])).
fof(f23176,plain,(
  ( ! [X1265,X1262,X1260,X1264,X1263,X1261] : (sP8(happ(s(fun(bool,bool),X1260),s(bool,X1261)),X1262,X1263) | ~p(s(bool,X1262)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1260)))) | s(bool,X1261) = s(bool,X1264) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1260))) | s(bool,X1264) = s(bool,X1265) | s(bool,'T_0') = s(bool,X1265)) )),
  inference(superposition,[],[f1066,f1507])).
fof(f23177,plain,(
  ( ! [X1267,X1271,X1269,X1266,X1270,X1268] : (sP10(happ(s(fun(bool,bool),X1266),s(bool,X1267)),X1268,X1269) | p(s(bool,X1269)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1266)))) | s(bool,X1267) = s(bool,X1270) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1266))) | s(bool,X1270) = s(bool,X1271) | s(bool,'T_0') = s(bool,X1271)) )),
  inference(superposition,[],[f1069,f1507])).
fof(f23178,plain,(
  ( ! [X1275,X1273,X1277,X1274,X1272,X1276] : (sP10(happ(s(fun(bool,bool),X1272),s(bool,X1273)),X1274,X1275) | ~p(s(bool,X1274)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1272)))) | s(bool,X1273) = s(bool,X1276) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1272))) | s(bool,X1276) = s(bool,X1277) | s(bool,'T_0') = s(bool,X1277)) )),
  inference(superposition,[],[f1070,f1507])).
fof(f23179,plain,(
  ( ! [X1279,X1280,X1282,X1278,X1281,X1283] : (sP10(happ(s(fun(bool,bool),X1278),s(bool,X1279)),X1280,X1281) | ~sP9(happ(s(fun(bool,bool),X1278),s(bool,'const.min.@_1'(s(fun(bool,bool),X1278)))),X1280,X1281) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1278)))) | s(bool,X1279) = s(bool,X1282) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1278))) | s(bool,X1282) = s(bool,X1283) | s(bool,'T_0') = s(bool,X1283)) )),
  inference(superposition,[],[f1072,f1507])).
fof(f23180,plain,(
  ( ! [X1288,X1284,X1286,X1289,X1285,X1287] : (sP8(happ(s(fun(bool,bool),X1284),s(bool,X1285)),X1286,X1287) | ~sP7(happ(s(fun(bool,bool),X1284),s(bool,'const.min.@_1'(s(fun(bool,bool),X1284)))),X1286,X1287) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1284)))) | s(bool,X1285) = s(bool,X1288) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1284))) | s(bool,X1288) = s(bool,X1289) | s(bool,'T_0') = s(bool,X1289)) )),
  inference(superposition,[],[f1073,f1507])).
fof(f23647,plain,(
  ( ! [X1242,X1240,X1241,X1239] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1239))) = s(bool,happ(s(fun(bool,bool),X1239),s(bool,'T_0'))) | s(bool,X1240) = s(bool,X1241) | s(bool,X1241) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1239))) | s(bool,X1240) = s(bool,X1242) | s(bool,'T_0') = s(bool,X1242)) )),
  inference(superposition,[],[f259,f1507])).
fof(f23652,plain,(
  ( ! [X1262,X1260,X1259,X1263,X1261] : (sP0(X1260,happ(s(fun(bool,bool),X1259),s(bool,'T_0'))) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1259)))) | s(bool,X1261) = s(bool,X1262) | s(bool,X1262) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1259))) | s(bool,X1261) = s(bool,X1263) | s(bool,'T_0') = s(bool,X1263)) )),
  inference(superposition,[],[f1057,f1507])).
fof(f23653,plain,(
  ( ! [X1267,X1265,X1266,X1264,X1268] : (sP0(happ(s(fun(bool,bool),X1264),s(bool,'T_0')),X1265) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1264)))) | s(bool,X1266) = s(bool,X1267) | s(bool,X1267) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1264))) | s(bool,X1266) = s(bool,X1268) | s(bool,'T_0') = s(bool,X1268)) )),
  inference(superposition,[],[f1058,f1507])).
fof(f23654,plain,(
  ( ! [X1273,X1271,X1269,X1272,X1270] : (sP1(happ(s(fun(bool,bool),X1269),s(bool,'T_0')),X1270) | p(s(bool,X1270)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1269)))) | s(bool,X1271) = s(bool,X1272) | s(bool,X1272) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1269))) | s(bool,X1271) = s(bool,X1273) | s(bool,'T_0') = s(bool,X1273)) )),
  inference(superposition,[],[f1059,f1507])).
fof(f23655,plain,(
  ( ! [X1275,X1277,X1274,X1278,X1276] : (sP1(X1275,happ(s(fun(bool,bool),X1274),s(bool,'T_0'))) | p(s(bool,X1275)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1274)))) | s(bool,X1276) = s(bool,X1277) | s(bool,X1277) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1274))) | s(bool,X1276) = s(bool,X1278) | s(bool,'T_0') = s(bool,X1278)) )),
  inference(superposition,[],[f1060,f1507])).
fof(f23656,plain,(
  ( ! [X1279,X1280,X1282,X1284,X1281,X1283] : (sP2(X1280,X1281,happ(s(fun(bool,bool),X1279),s(bool,'T_0'))) | ~p(s(bool,X1281)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1279)))) | s(bool,X1282) = s(bool,X1283) | s(bool,X1283) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1279))) | s(bool,X1282) = s(bool,X1284) | s(bool,'T_0') = s(bool,X1284)) )),
  inference(superposition,[],[f1061,f1507])).
fof(f23657,plain,(
  ( ! [X1288,X1290,X1286,X1289,X1285,X1287] : (sP8(happ(s(fun(bool,bool),X1285),s(bool,'T_0')),X1286,X1287) | ~p(s(bool,X1287)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1285)))) | s(bool,X1288) = s(bool,X1289) | s(bool,X1289) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1285))) | s(bool,X1288) = s(bool,X1290) | s(bool,'T_0') = s(bool,X1290)) )),
  inference(superposition,[],[f1065,f1507])).
fof(f23658,plain,(
  ( ! [X1296,X1292,X1294,X1291,X1293,X1295] : (sP8(happ(s(fun(bool,bool),X1291),s(bool,'T_0')),X1292,X1293) | ~p(s(bool,X1292)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1291)))) | s(bool,X1294) = s(bool,X1295) | s(bool,X1295) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1291))) | s(bool,X1294) = s(bool,X1296) | s(bool,'T_0') = s(bool,X1296)) )),
  inference(superposition,[],[f1066,f1507])).
fof(f23659,plain,(
  ( ! [X1298,X1300,X1302,X1297,X1299,X1301] : (sP10(happ(s(fun(bool,bool),X1297),s(bool,'T_0')),X1298,X1299) | p(s(bool,X1299)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1297)))) | s(bool,X1300) = s(bool,X1301) | s(bool,X1301) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1297))) | s(bool,X1300) = s(bool,X1302) | s(bool,'T_0') = s(bool,X1302)) )),
  inference(superposition,[],[f1069,f1507])).
fof(f23660,plain,(
  ( ! [X1305,X1307,X1303,X1304,X1306,X1308] : (sP10(happ(s(fun(bool,bool),X1303),s(bool,'T_0')),X1304,X1305) | ~p(s(bool,X1304)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1303)))) | s(bool,X1306) = s(bool,X1307) | s(bool,X1307) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1303))) | s(bool,X1306) = s(bool,X1308) | s(bool,'T_0') = s(bool,X1308)) )),
  inference(superposition,[],[f1070,f1507])).
fof(f23661,plain,(
  ( ! [X1310,X1313,X1309,X1311,X1312,X1314] : (sP10(happ(s(fun(bool,bool),X1309),s(bool,'T_0')),X1310,X1311) | ~sP9(happ(s(fun(bool,bool),X1309),s(bool,'const.min.@_1'(s(fun(bool,bool),X1309)))),X1310,X1311) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1309)))) | s(bool,X1312) = s(bool,X1313) | s(bool,X1313) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1309))) | s(bool,X1312) = s(bool,X1314) | s(bool,'T_0') = s(bool,X1314)) )),
  inference(superposition,[],[f1072,f1507])).
fof(f23662,plain,(
  ( ! [X1315,X1317,X1319,X1320,X1316,X1318] : (sP8(happ(s(fun(bool,bool),X1315),s(bool,'T_0')),X1316,X1317) | ~sP7(happ(s(fun(bool,bool),X1315),s(bool,'const.min.@_1'(s(fun(bool,bool),X1315)))),X1316,X1317) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1315)))) | s(bool,X1318) = s(bool,X1319) | s(bool,X1319) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1315))) | s(bool,X1318) = s(bool,X1320) | s(bool,'T_0') = s(bool,X1320)) )),
  inference(superposition,[],[f1073,f1507])).
fof(f31071,plain,(
  ( ! [X4,X2,X3] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X2),s(bool,'T_0'))) | s(bool,X3) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X2))) | s(bool,'T_0') = s(bool,X3) | s(bool,X4) = s(bool,'const.min.@_1'(s(fun(bool,bool),X2))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1491,f518])).
fof(f31072,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X5),s(bool,X6))) | s(bool,X7) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5))) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) )),
  inference(superposition,[],[f1491,f518])).
fof(f31077,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X20),s(bool,X21))) | s(bool,X22) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X20))) | s(bool,'T_0') = s(bool,X22) | s(bool,X21) = s(bool,X23) | s(bool,'T_0') = s(bool,X23) | s(bool,X24) = s(bool,'const.min.@_1'(s(fun(bool,bool),X20))) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f1491,f1507])).
fof(f31079,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X30),s(bool,X31))) | s(bool,X32) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X30))) | s(bool,'T_0') = s(bool,X32) | s(bool,X33) = s(bool,'const.min.@_1'(s(fun(bool,bool),X30))) | s(bool,'T_0') = s(bool,X31) | s(bool,X33) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f1491,f1507])).
fof(f31080,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X35),s(bool,X36))) | s(bool,X37) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X35))) | s(bool,'T_0') = s(bool,X37) | s(bool,X36) = s(bool,X38) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X35))) | s(bool,X38) = s(bool,X39) | s(bool,'T_0') = s(bool,X39)) )),
  inference(superposition,[],[f1491,f1507])).
fof(f31081,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X40),s(bool,'T_0'))) | s(bool,X41) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X40))) | s(bool,'T_0') = s(bool,X41) | s(bool,X42) = s(bool,X43) | s(bool,X43) = s(bool,'const.min.@_1'(s(fun(bool,bool),X40))) | s(bool,X42) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f1491,f1507])).
fof(f33341,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) = s(bool,happ(s(fun(bool,bool),X1),s(bool,X0))) | s(bool,X2) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X2) | s(bool,X3) = s(bool,X4) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X5) | s(bool,X0) = s(bool,X3)) )),
  inference(superposition,[],[f1782,f1507])).
fof(f33366,plain,(
  ( ! [X35,X33,X31,X34,X32] : (s(bool,X32) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X31))) | s(bool,X33) = s(bool,'const.min.@_1'(s(fun(bool,bool),X31))) | s(bool,'T_0') = s(bool,X33) | s(bool,X34) = s(bool,happ(s(fun(bool,bool),X31),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X32) | s(bool,X34) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f1782,f1507])).
fof(f33367,plain,(
  ( ! [X39,X37,X38,X36,X40] : (s(bool,X37) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X36))) | s(bool,X38) = s(bool,'const.min.@_1'(s(fun(bool,bool),X36))) | s(bool,'T_0') = s(bool,X38) | s(bool,X37) = s(bool,X39) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X36),s(bool,'T_0'))) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f1782,f1507])).
fof(f33368,plain,(
  ( ! [X45,X43,X41,X44,X42] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X41))) | s(bool,X42) = s(bool,'const.min.@_1'(s(fun(bool,bool),X41))) | s(bool,'T_0') = s(bool,X42) | s(bool,X43) = s(bool,X44) | s(bool,X44) = s(bool,happ(s(fun(bool,bool),X41),s(bool,'T_0'))) | s(bool,X43) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f1782,f1507])).
fof(f33373,plain,(
  ( ! [X66,X67,X65] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X65))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X66))) | s(bool,X67) = s(bool,'const.min.@_1'(s(fun(bool,bool),X65))) | s(bool,'T_0') = s(bool,X67) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X66))) = s(bool,happ(s(fun(bool,bool),X66),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X65),s(bool,'T_0')))) )),
  inference(superposition,[],[f1782,f1782])).
fof(f33431,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') != s(bool,'|dollar|exists_1'(s(fun(bool,bool),X4))) | p(s(bool,happ(s(fun(bool,bool),X4),s(bool,'T_0')))) | s(bool,X5) = s(bool,'const.min.@_1'(s(fun(bool,bool),X4))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f232,f1782])).
fof(f33432,plain,(
  ( ! [X6,X7] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X6)))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X6),s(bool,'T_0'))) | s(bool,X7) = s(bool,'const.min.@_1'(s(fun(bool,bool),X6))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f233,f1782])).
fof(f33435,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X12)))) | p(s(bool,X13)) | s(bool,X13) = s(bool,happ(s(fun(bool,bool),X12),s(bool,'T_0'))) | s(bool,X14) = s(bool,'const.min.@_1'(s(fun(bool,bool),X12))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f273,f1782])).
fof(f33437,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X18)))) | ~p(s(bool,X19)) | s(bool,X19) = s(bool,happ(s(fun(bool,bool),X18),s(bool,'T_0'))) | s(bool,X20) = s(bool,'const.min.@_1'(s(fun(bool,bool),X18))) | s(bool,'T_0') = s(bool,X20)) )),
  inference(superposition,[],[f276,f1782])).
fof(f33443,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X37)))) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,happ(s(fun(bool,bool),X37),s(bool,'T_0')),X39) | s(bool,X40) = s(bool,'const.min.@_1'(s(fun(bool,bool),X37))) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f325,f1782])).
fof(f33444,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X41)))) | ~p(s(bool,X42)) | p(s(bool,X43)) | ~sP4(X42,happ(s(fun(bool,bool),X41),s(bool,'T_0')),X43) | s(bool,X44) = s(bool,'const.min.@_1'(s(fun(bool,bool),X41))) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f329,f1782])).
fof(f33445,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X45)))) | p(s(bool,X46)) | p(s(bool,X47)) | ~sP7(happ(s(fun(bool,bool),X45),s(bool,'T_0')),X46,X47) | s(bool,X48) = s(bool,'const.min.@_1'(s(fun(bool,bool),X45))) | s(bool,'T_0') = s(bool,X48)) )),
  inference(superposition,[],[f348,f1782])).
fof(f33448,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X57)))) | p(s(bool,X58)) | p(s(bool,X59)) | ~sP8(happ(s(fun(bool,bool),X57),s(bool,'T_0')),X59,X58) | s(bool,X60) = s(bool,'const.min.@_1'(s(fun(bool,bool),X57))) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f355,f1782])).
fof(f33449,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X61)))) | p(s(bool,X62)) | ~p(s(bool,X63)) | ~sP9(X63,X62,happ(s(fun(bool,bool),X61),s(bool,'T_0'))) | s(bool,X64) = s(bool,'const.min.@_1'(s(fun(bool,bool),X61))) | s(bool,'T_0') = s(bool,X64)) )),
  inference(superposition,[],[f365,f1782])).
fof(f33452,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X73)))) | ~p(s(bool,X74)) | p(s(bool,X75)) | ~sP10(happ(s(fun(bool,bool),X73),s(bool,'T_0')),X75,X74) | s(bool,X76) = s(bool,'const.min.@_1'(s(fun(bool,bool),X73))) | s(bool,'T_0') = s(bool,X76)) )),
  inference(superposition,[],[f372,f1782])).
fof(f33453,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X77)))) | ~sP9(happ(s(fun(bool,bool),X77),s(bool,'T_0')),X78,X79) | sP10(happ(s(fun(bool,bool),X77),s(bool,'T_0')),X78,X79) | s(bool,X80) = s(bool,'const.min.@_1'(s(fun(bool,bool),X77))) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f375,f1782])).
fof(f33454,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X81)))) | ~sP7(happ(s(fun(bool,bool),X81),s(bool,'T_0')),X82,X83) | sP8(happ(s(fun(bool,bool),X81),s(bool,'T_0')),X82,X83) | s(bool,X84) = s(bool,'const.min.@_1'(s(fun(bool,bool),X81))) | s(bool,'T_0') = s(bool,X84)) )),
  inference(superposition,[],[f376,f1782])).
fof(f33471,plain,(
  ( ! [X152,X151,X153,X150] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X150)))) | s(bool,X151) != s(bool,happ(s(fun(bool,bool),X150),s(bool,'T_0'))) | s(bool,X151) = s(bool,X152) | s(bool,'T_0') = s(bool,X152) | s(bool,X153) = s(bool,'const.min.@_1'(s(fun(bool,bool),X150))) | s(bool,'T_0') = s(bool,X153)) )),
  inference(superposition,[],[f1693,f1782])).
fof(f33475,plain,(
  ( ! [X163,X161,X164,X162] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X161)))) | s(bool,X162) = s(bool,happ(s(fun(bool,bool),X161),s(bool,'T_0'))) | s(bool,X162) = s(bool,X163) | s(bool,'T_0') = s(bool,X163) | s(bool,X164) = s(bool,'const.min.@_1'(s(fun(bool,bool),X161))) | s(bool,'T_0') = s(bool,X164)) )),
  inference(superposition,[],[f2111,f1782])).
fof(f33476,plain,(
  ( ! [X167,X165,X166,X168] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X165)))) | sP1(X166,happ(s(fun(bool,bool),X165),s(bool,'T_0'))) | s(bool,X166) = s(bool,X167) | s(bool,'T_0') = s(bool,X167) | s(bool,X168) = s(bool,'const.min.@_1'(s(fun(bool,bool),X165))) | s(bool,'T_0') = s(bool,X168)) )),
  inference(superposition,[],[f2114,f1782])).
fof(f33477,plain,(
  ( ! [X171,X169,X172,X170] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X169)))) | sP1(happ(s(fun(bool,bool),X169),s(bool,'T_0')),X170) | s(bool,X170) = s(bool,X171) | s(bool,'T_0') = s(bool,X171) | s(bool,X172) = s(bool,'const.min.@_1'(s(fun(bool,bool),X169))) | s(bool,'T_0') = s(bool,X172)) )),
  inference(superposition,[],[f2115,f1782])).
fof(f33489,plain,(
  ( ! [X198,X200,X199] : (~sP6('F_0',happ(s(fun(bool,bool),X199),s(bool,'|dollar|exists_1'(s(fun(bool,bool),X198)))),'|dollar|exists_1'(s(fun(bool,bool),X199))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X199))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X198),s(bool,'T_0'))) | s(bool,X200) = s(bool,'const.min.@_1'(s(fun(bool,bool),X198))) | s(bool,'T_0') = s(bool,X200)) )),
  inference(superposition,[],[f3259,f1782])).
fof(f33492,plain,(
  ( ! [X208,X206,X207] : (sP6('T_0',happ(s(fun(bool,bool),X207),s(bool,'|dollar|exists_1'(s(fun(bool,bool),X206)))),'|dollar|exists_1'(s(fun(bool,bool),X207))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X207))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X206),s(bool,'T_0'))) | s(bool,X208) = s(bool,'const.min.@_1'(s(fun(bool,bool),X206))) | s(bool,'T_0') = s(bool,X208)) )),
  inference(superposition,[],[f3286,f1782])).
fof(f33495,plain,(
  ( ! [X216,X215,X217] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X216)),happ(s(fun(bool,bool),X216),s(bool,'|dollar|exists_1'(s(fun(bool,bool),X215))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X216))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X215),s(bool,'T_0'))) | s(bool,X217) = s(bool,'const.min.@_1'(s(fun(bool,bool),X215))) | s(bool,'T_0') = s(bool,X217)) )),
  inference(superposition,[],[f3311,f1782])).
fof(f33498,plain,(
  ( ! [X227,X225,X226] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X226)),happ(s(fun(bool,bool),X226),s(bool,'|dollar|exists_1'(s(fun(bool,bool),X225))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X226))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X225),s(bool,'T_0'))) | s(bool,X227) = s(bool,'const.min.@_1'(s(fun(bool,bool),X225))) | s(bool,'T_0') = s(bool,X227)) )),
  inference(superposition,[],[f3339,f1782])).
fof(f33801,plain,(
  ( ! [X781,X780] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X780))) = s(bool,happ(s(fun(bool,bool),X780),s(bool,'const.min.@_1'(s(fun(bool,bool),X781))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X781))) = s(bool,happ(s(fun(bool,bool),X781),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X780)))) )),
  inference(superposition,[],[f259,f1782])).
fof(f33806,plain,(
  ( ! [X790,X791,X792] : (sP0(X792,happ(s(fun(bool,bool),X790),s(bool,'const.min.@_1'(s(fun(bool,bool),X791))))) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X790)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X791))) = s(bool,happ(s(fun(bool,bool),X791),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X790)))) )),
  inference(superposition,[],[f1057,f1782])).
fof(f33807,plain,(
  ( ! [X795,X793,X794] : (sP0(happ(s(fun(bool,bool),X793),s(bool,'const.min.@_1'(s(fun(bool,bool),X794)))),X795) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X793)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X794))) = s(bool,happ(s(fun(bool,bool),X794),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X793)))) )),
  inference(superposition,[],[f1058,f1782])).
fof(f33808,plain,(
  ( ! [X798,X796,X797] : (sP1(happ(s(fun(bool,bool),X796),s(bool,'const.min.@_1'(s(fun(bool,bool),X797)))),X798) | p(s(bool,X798)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X796)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X797))) = s(bool,happ(s(fun(bool,bool),X797),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X796)))) )),
  inference(superposition,[],[f1059,f1782])).
fof(f33809,plain,(
  ( ! [X800,X799,X801] : (sP1(X801,happ(s(fun(bool,bool),X799),s(bool,'const.min.@_1'(s(fun(bool,bool),X800))))) | p(s(bool,X801)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X799)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X800))) = s(bool,happ(s(fun(bool,bool),X800),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X799)))) )),
  inference(superposition,[],[f1060,f1782])).
fof(f33810,plain,(
  ( ! [X802,X804,X803,X805] : (sP2(X804,X805,happ(s(fun(bool,bool),X802),s(bool,'const.min.@_1'(s(fun(bool,bool),X803))))) | ~p(s(bool,X805)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X802)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X803))) = s(bool,happ(s(fun(bool,bool),X803),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X802)))) )),
  inference(superposition,[],[f1061,f1782])).
fof(f33811,plain,(
  ( ! [X808,X806,X809,X807] : (sP8(happ(s(fun(bool,bool),X806),s(bool,'const.min.@_1'(s(fun(bool,bool),X807)))),X808,X809) | ~p(s(bool,X809)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X806)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X807))) = s(bool,happ(s(fun(bool,bool),X807),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X806)))) )),
  inference(superposition,[],[f1065,f1782])).
fof(f33812,plain,(
  ( ! [X810,X812,X811,X813] : (sP8(happ(s(fun(bool,bool),X810),s(bool,'const.min.@_1'(s(fun(bool,bool),X811)))),X812,X813) | ~p(s(bool,X812)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X810)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X811))) = s(bool,happ(s(fun(bool,bool),X811),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X810)))) )),
  inference(superposition,[],[f1066,f1782])).
fof(f33813,plain,(
  ( ! [X817,X814,X816,X815] : (sP10(happ(s(fun(bool,bool),X814),s(bool,'const.min.@_1'(s(fun(bool,bool),X815)))),X816,X817) | p(s(bool,X817)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X814)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X815))) = s(bool,happ(s(fun(bool,bool),X815),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X814)))) )),
  inference(superposition,[],[f1069,f1782])).
fof(f33814,plain,(
  ( ! [X819,X821,X818,X820] : (sP10(happ(s(fun(bool,bool),X818),s(bool,'const.min.@_1'(s(fun(bool,bool),X819)))),X820,X821) | ~p(s(bool,X820)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X818)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X819))) = s(bool,happ(s(fun(bool,bool),X819),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X818)))) )),
  inference(superposition,[],[f1070,f1782])).
fof(f33815,plain,(
  ( ! [X825,X823,X824,X822] : (sP10(happ(s(fun(bool,bool),X822),s(bool,'const.min.@_1'(s(fun(bool,bool),X823)))),X824,X825) | ~sP9(happ(s(fun(bool,bool),X822),s(bool,'const.min.@_1'(s(fun(bool,bool),X822)))),X824,X825) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X822)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X823))) = s(bool,happ(s(fun(bool,bool),X823),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X822)))) )),
  inference(superposition,[],[f1072,f1782])).
fof(f33816,plain,(
  ( ! [X829,X826,X828,X827] : (sP8(happ(s(fun(bool,bool),X826),s(bool,'const.min.@_1'(s(fun(bool,bool),X827)))),X828,X829) | ~sP7(happ(s(fun(bool,bool),X826),s(bool,'const.min.@_1'(s(fun(bool,bool),X826)))),X828,X829) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X826)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X827))) = s(bool,happ(s(fun(bool,bool),X827),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X826)))) )),
  inference(superposition,[],[f1073,f1782])).
fof(f33817,plain,(
  ( ! [X831,X835,X833,X830,X834,X832] : (sP6('const.pred_set.SURJ_3'(s(fun(X832,X833),X834),s(fun(X832,bool),X835),s(fun(X833,bool),'const.pred_set.IMAGE_2'(s(fun(X832,X833),X834),s(fun(X832,bool),X835)))),happ(s(fun(bool,bool),X830),s(bool,'const.min.@_1'(s(fun(bool,bool),X831)))),'|dollar|exists_1'(s(fun(bool,bool),X830))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X831))) = s(bool,happ(s(fun(bool,bool),X831),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X830)))) )),
  inference(superposition,[],[f1251,f1782])).
fof(f33818,plain,(
  ( ! [X841,X839,X837,X840,X838,X836] : (sP6('const.pred_set.SURJ_3'(s(fun(X838,X839),X840),s(fun(X838,bool),X841),s(fun(X839,bool),'const.pred_set.IMAGE_2'(s(fun(X838,X839),X840),s(fun(X838,bool),X841)))),'|dollar|exists_1'(s(fun(bool,bool),X836)),happ(s(fun(bool,bool),X836),s(bool,'const.min.@_1'(s(fun(bool,bool),X837))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X837))) = s(bool,happ(s(fun(bool,bool),X837),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X836)))) )),
  inference(superposition,[],[f1253,f1782])).
fof(f33819,plain,(
  ( ! [X843,X842,X844] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X842),s(bool,'const.min.@_1'(s(fun(bool,bool),X843))))) | s(bool,X844) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X842))) | s(bool,'T_0') = s(bool,X844) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X843))) = s(bool,happ(s(fun(bool,bool),X843),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X842)))) )),
  inference(superposition,[],[f1491,f1782])).
fof(f33821,plain,(
  ( ! [X848,X849] : (sP5('T_0','|dollar|exists_1'(s(fun(bool,bool),X848)),happ(s(fun(bool,bool),X848),s(bool,'const.min.@_1'(s(fun(bool,bool),X849))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X849))) = s(bool,happ(s(fun(bool,bool),X849),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X848)))) )),
  inference(superposition,[],[f3281,f1782])).
fof(f33822,plain,(
  ( ! [X850,X851] : (sP5('T_0',happ(s(fun(bool,bool),X850),s(bool,'const.min.@_1'(s(fun(bool,bool),X851)))),'|dollar|exists_1'(s(fun(bool,bool),X850))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X851))) = s(bool,happ(s(fun(bool,bool),X851),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X850)))) )),
  inference(superposition,[],[f3334,f1782])).
fof(f33823,plain,(
  ( ! [X854,X852,X855,X853] : (~p(s(bool,happ(s(fun(bool,bool),X852),s(bool,'const.min.@_1'(s(fun(bool,bool),X854)))))) | p(s(bool,happ(s(fun(bool,bool),X852),s(bool,X855)))) | ~p(s(bool,X853)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X854))) = s(bool,happ(s(fun(bool,bool),X854),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,sK14(X852,X853,bool))) )),
  inference(superposition,[],[f266,f1782])).
fof(f33824,plain,(
  ( ! [X859,X857,X858,X856] : (~p(s(bool,happ(s(fun(bool,bool),X856),s(bool,'const.min.@_1'(s(fun(bool,bool),X858)))))) | p(s(bool,happ(s(fun(bool,bool),X856),s(bool,X859)))) | ~p(s(bool,X857)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X858))) = s(bool,happ(s(fun(bool,bool),X858),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,sK15(X856,X857,bool))) )),
  inference(superposition,[],[f268,f1782])).
fof(f33825,plain,(
  ( ! [X860,X863,X861,X862] : (~p(s(bool,happ(s(fun(bool,bool),X860),s(bool,'const.min.@_1'(s(fun(bool,bool),X862)))))) | p(s(bool,happ(s(fun(bool,bool),X860),s(bool,X863)))) | p(s(bool,X861)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X862))) = s(bool,happ(s(fun(bool,bool),X862),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,sK16(X860,X861,bool))) )),
  inference(superposition,[],[f269,f1782])).
fof(f33826,plain,(
  ( ! [X866,X864,X867,X865] : (~p(s(bool,happ(s(fun(bool,bool),X864),s(bool,'const.min.@_1'(s(fun(bool,bool),X866)))))) | p(s(bool,happ(s(fun(bool,bool),X864),s(bool,X867)))) | p(s(bool,X865)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X866))) = s(bool,happ(s(fun(bool,bool),X866),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,sK17(X864,X865,bool))) )),
  inference(superposition,[],[f271,f1782])).
fof(f33827,plain,(
  ( ! [X870,X868,X871,X869] : (s(X870,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X871))))) != s(X870,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X871))))) | s(fun(bool,X870),X868) = s(fun(bool,X870),X869) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X871))) = s(bool,happ(s(fun(bool,bool),X871),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,sK18(X868,X869,X870,bool))) )),
  inference(superposition,[],[f305,f1782])).
fof(f33992,plain,(
  ( ! [X480,X481] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X480))) = s(bool,happ(s(fun(bool,bool),X480),s(bool,X481))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X480))) = s(bool,happ(s(fun(bool,bool),X480),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X481)) )),
  inference(superposition,[],[f259,f1782])).
fof(f33993,plain,(
  ( ! [X482,X483] : (~sP6('F_0',happ(s(fun(bool,bool),X482),s(bool,X483)),'|dollar|exists_1'(s(fun(bool,bool),X482))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X482))) = s(bool,happ(s(fun(bool,bool),X482),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X483)) )),
  inference(superposition,[],[f1040,f1782])).
fof(f33994,plain,(
  ( ! [X484,X485] : (sP6('T_0',happ(s(fun(bool,bool),X484),s(bool,X485)),'|dollar|exists_1'(s(fun(bool,bool),X484))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X484))) = s(bool,happ(s(fun(bool,bool),X484),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X485)) )),
  inference(superposition,[],[f1041,f1782])).
fof(f33995,plain,(
  ( ! [X486,X487] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X486)),happ(s(fun(bool,bool),X486),s(bool,X487))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X486))) = s(bool,happ(s(fun(bool,bool),X486),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X487)) )),
  inference(superposition,[],[f1042,f1782])).
fof(f33996,plain,(
  ( ! [X488,X489] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X488)),happ(s(fun(bool,bool),X488),s(bool,X489))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X488))) = s(bool,happ(s(fun(bool,bool),X488),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X489)) )),
  inference(superposition,[],[f1043,f1782])).
fof(f33997,plain,(
  ( ! [X492,X490,X491] : (sP0(X492,happ(s(fun(bool,bool),X490),s(bool,X491))) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X490)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X490))) = s(bool,happ(s(fun(bool,bool),X490),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X491)) )),
  inference(superposition,[],[f1057,f1782])).
fof(f33998,plain,(
  ( ! [X494,X493,X495] : (sP0(happ(s(fun(bool,bool),X493),s(bool,X494)),X495) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X493)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X493))) = s(bool,happ(s(fun(bool,bool),X493),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X494)) )),
  inference(superposition,[],[f1058,f1782])).
fof(f33999,plain,(
  ( ! [X496,X498,X497] : (sP1(happ(s(fun(bool,bool),X496),s(bool,X497)),X498) | p(s(bool,X498)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X496)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X496))) = s(bool,happ(s(fun(bool,bool),X496),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X497)) )),
  inference(superposition,[],[f1059,f1782])).
fof(f34000,plain,(
  ( ! [X499,X500,X501] : (sP1(X501,happ(s(fun(bool,bool),X499),s(bool,X500))) | p(s(bool,X501)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X499)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X499))) = s(bool,happ(s(fun(bool,bool),X499),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X500)) )),
  inference(superposition,[],[f1060,f1782])).
fof(f34001,plain,(
  ( ! [X505,X502,X504,X503] : (sP2(X504,X505,happ(s(fun(bool,bool),X502),s(bool,X503))) | ~p(s(bool,X505)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X502)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X502))) = s(bool,happ(s(fun(bool,bool),X502),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X503)) )),
  inference(superposition,[],[f1061,f1782])).
fof(f34002,plain,(
  ( ! [X509,X507,X508,X506] : (sP8(happ(s(fun(bool,bool),X506),s(bool,X507)),X508,X509) | ~p(s(bool,X509)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X506)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X506))) = s(bool,happ(s(fun(bool,bool),X506),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X507)) )),
  inference(superposition,[],[f1065,f1782])).
fof(f34003,plain,(
  ( ! [X511,X512,X510,X513] : (sP8(happ(s(fun(bool,bool),X510),s(bool,X511)),X512,X513) | ~p(s(bool,X512)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X510)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X510))) = s(bool,happ(s(fun(bool,bool),X510),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X511)) )),
  inference(superposition,[],[f1066,f1782])).
fof(f34004,plain,(
  ( ! [X516,X514,X517,X515] : (sP10(happ(s(fun(bool,bool),X514),s(bool,X515)),X516,X517) | p(s(bool,X517)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X514)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X514))) = s(bool,happ(s(fun(bool,bool),X514),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X515)) )),
  inference(superposition,[],[f1069,f1782])).
fof(f34005,plain,(
  ( ! [X520,X518,X521,X519] : (sP10(happ(s(fun(bool,bool),X518),s(bool,X519)),X520,X521) | ~p(s(bool,X520)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X518)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X518))) = s(bool,happ(s(fun(bool,bool),X518),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X519)) )),
  inference(superposition,[],[f1070,f1782])).
fof(f34006,plain,(
  ( ! [X524,X522,X525,X523] : (sP10(happ(s(fun(bool,bool),X522),s(bool,X523)),X524,X525) | ~sP9(happ(s(fun(bool,bool),X522),s(bool,'const.min.@_1'(s(fun(bool,bool),X522)))),X524,X525) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X522)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X522))) = s(bool,happ(s(fun(bool,bool),X522),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X523)) )),
  inference(superposition,[],[f1072,f1782])).
fof(f34007,plain,(
  ( ! [X528,X526,X529,X527] : (sP8(happ(s(fun(bool,bool),X526),s(bool,X527)),X528,X529) | ~sP7(happ(s(fun(bool,bool),X526),s(bool,'const.min.@_1'(s(fun(bool,bool),X526)))),X528,X529) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X526)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X526))) = s(bool,happ(s(fun(bool,bool),X526),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X527)) )),
  inference(superposition,[],[f1073,f1782])).
fof(f34008,plain,(
  ( ! [X532,X534,X530,X533,X535,X531] : (sP6('const.pred_set.SURJ_3'(s(fun(X532,X533),X534),s(fun(X532,bool),X535),s(fun(X533,bool),'const.pred_set.IMAGE_2'(s(fun(X532,X533),X534),s(fun(X532,bool),X535)))),happ(s(fun(bool,bool),X530),s(bool,X531)),'|dollar|exists_1'(s(fun(bool,bool),X530))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X530))) = s(bool,happ(s(fun(bool,bool),X530),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X531)) )),
  inference(superposition,[],[f1251,f1782])).
fof(f34009,plain,(
  ( ! [X540,X536,X538,X541,X537,X539] : (sP6('const.pred_set.SURJ_3'(s(fun(X538,X539),X540),s(fun(X538,bool),X541),s(fun(X539,bool),'const.pred_set.IMAGE_2'(s(fun(X538,X539),X540),s(fun(X538,bool),X541)))),'|dollar|exists_1'(s(fun(bool,bool),X536)),happ(s(fun(bool,bool),X536),s(bool,X537))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X536))) = s(bool,happ(s(fun(bool,bool),X536),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X537)) )),
  inference(superposition,[],[f1253,f1782])).
fof(f34010,plain,(
  ( ! [X542,X543,X544] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X542),s(bool,X543))) | s(bool,X544) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X542))) | s(bool,'T_0') = s(bool,X544) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X542))) = s(bool,happ(s(fun(bool,bool),X542),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X543)) )),
  inference(superposition,[],[f1491,f1782])).
fof(f34012,plain,(
  ( ! [X549,X548] : (sP5('T_0','|dollar|exists_1'(s(fun(bool,bool),X548)),happ(s(fun(bool,bool),X548),s(bool,X549))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X548))) = s(bool,happ(s(fun(bool,bool),X548),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X549)) )),
  inference(superposition,[],[f3281,f1782])).
fof(f34013,plain,(
  ( ! [X551,X550] : (sP5('T_0',happ(s(fun(bool,bool),X550),s(bool,X551)),'|dollar|exists_1'(s(fun(bool,bool),X550))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X550))) = s(bool,happ(s(fun(bool,bool),X550),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X551)) )),
  inference(superposition,[],[f3334,f1782])).
fof(f34015,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0')))) )),
  inference(equality_factoring,[],[f1782])).
fof(f34016,plain,(
  ( ! [X0] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) != s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0')))) )),
  inference(equality_factoring,[],[f1782])).
fof(f34084,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X0)),happ(s(fun(bool,bool),X0),s(bool,'const.min.@_1'(s(fun(bool,bool),X1))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) = s(bool,happ(s(fun(bool,bool),X1),s(bool,'T_0')))) )),
  inference(condensation,[],[f34083])).
fof(f34083,plain,(
  ( ! [X225,X223,X224] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X225)),happ(s(fun(bool,bool),X225),s(bool,'const.min.@_1'(s(fun(bool,bool),X224))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X225))) | s(bool,'T_0') = s(bool,X223) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X224))) = s(bool,happ(s(fun(bool,bool),X224),s(bool,'T_0')))) )),
  inference(duplicate_literal_removal,[],[f33663])).
fof(f33663,plain,(
  ( ! [X225,X223,X224] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X225)),happ(s(fun(bool,bool),X225),s(bool,'const.min.@_1'(s(fun(bool,bool),X224))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X225))) | s(bool,'T_0') = s(bool,X223) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X224))) = s(bool,happ(s(fun(bool,bool),X224),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X223)) )),
  inference(superposition,[],[f3339,f1782])).
fof(f34088,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | ~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X0)),happ(s(fun(bool,bool),X0),s(bool,'const.min.@_1'(s(fun(bool,bool),X1))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) = s(bool,happ(s(fun(bool,bool),X1),s(bool,'T_0')))) )),
  inference(condensation,[],[f34087])).
fof(f34087,plain,(
  ( ! [X215,X213,X214] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X215)),happ(s(fun(bool,bool),X215),s(bool,'const.min.@_1'(s(fun(bool,bool),X214))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X215))) | s(bool,'T_0') = s(bool,X213) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X214))) = s(bool,happ(s(fun(bool,bool),X214),s(bool,'T_0')))) )),
  inference(duplicate_literal_removal,[],[f33660])).
fof(f33660,plain,(
  ( ! [X215,X213,X214] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X215)),happ(s(fun(bool,bool),X215),s(bool,'const.min.@_1'(s(fun(bool,bool),X214))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X215))) | s(bool,'T_0') = s(bool,X213) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X214))) = s(bool,happ(s(fun(bool,bool),X214),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X213)) )),
  inference(superposition,[],[f3311,f1782])).
fof(f34092,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | sP6('T_0',happ(s(fun(bool,bool),X0),s(bool,'const.min.@_1'(s(fun(bool,bool),X1)))),'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) = s(bool,happ(s(fun(bool,bool),X1),s(bool,'T_0')))) )),
  inference(condensation,[],[f34091])).
fof(f34091,plain,(
  ( ! [X206,X204,X205] : (sP6('T_0',happ(s(fun(bool,bool),X206),s(bool,'const.min.@_1'(s(fun(bool,bool),X205)))),'|dollar|exists_1'(s(fun(bool,bool),X206))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X206))) | s(bool,'T_0') = s(bool,X204) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X205))) = s(bool,happ(s(fun(bool,bool),X205),s(bool,'T_0')))) )),
  inference(duplicate_literal_removal,[],[f33657])).
fof(f33657,plain,(
  ( ! [X206,X204,X205] : (sP6('T_0',happ(s(fun(bool,bool),X206),s(bool,'const.min.@_1'(s(fun(bool,bool),X205)))),'|dollar|exists_1'(s(fun(bool,bool),X206))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X206))) | s(bool,'T_0') = s(bool,X204) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X205))) = s(bool,happ(s(fun(bool,bool),X205),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X204)) )),
  inference(superposition,[],[f3286,f1782])).
fof(f34096,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | ~sP6('F_0',happ(s(fun(bool,bool),X0),s(bool,'const.min.@_1'(s(fun(bool,bool),X1)))),'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) = s(bool,happ(s(fun(bool,bool),X1),s(bool,'T_0')))) )),
  inference(condensation,[],[f34095])).
fof(f34095,plain,(
  ( ! [X198,X196,X197] : (~sP6('F_0',happ(s(fun(bool,bool),X198),s(bool,'const.min.@_1'(s(fun(bool,bool),X197)))),'|dollar|exists_1'(s(fun(bool,bool),X198))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X198))) | s(bool,'T_0') = s(bool,X196) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X197))) = s(bool,happ(s(fun(bool,bool),X197),s(bool,'T_0')))) )),
  inference(duplicate_literal_removal,[],[f33654])).
fof(f33654,plain,(
  ( ! [X198,X196,X197] : (~sP6('F_0',happ(s(fun(bool,bool),X198),s(bool,'const.min.@_1'(s(fun(bool,bool),X197)))),'|dollar|exists_1'(s(fun(bool,bool),X198))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X198))) | s(bool,'T_0') = s(bool,X196) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X197))) = s(bool,happ(s(fun(bool,bool),X197),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X196)) )),
  inference(superposition,[],[f3259,f1782])).
fof(f34307,plain,(
  ( ! [X664] : (s(bool,'T_0') != s(bool,'const.min.@_1'(s(fun(bool,bool),X664))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X664))) = s(bool,happ(s(fun(bool,bool),X664),s(bool,'T_0')))) )),
  inference(subsumption_resolution,[],[f33776,f412])).
fof(f33776,plain,(
  ( ! [X664] : (s(bool,'T_0') != s(bool,'const.min.@_1'(s(fun(bool,bool),X664))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X664))) = s(bool,happ(s(fun(bool,bool),X664),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) )),
  inference(superposition,[],[f412,f1782])).
fof(f34329,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | s(bool,X0) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) = s(bool,happ(s(fun(bool,bool),X1),s(bool,'T_0')))) )),
  inference(condensation,[],[f34328])).
fof(f34328,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X11)) | p(s(bool,X12)) | s(bool,X12) = s(bool,'const.min.@_1'(s(fun(bool,bool),X10))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X10))) = s(bool,happ(s(fun(bool,bool),X10),s(bool,'T_0')))) )),
  inference(subsumption_resolution,[],[f33833,f232])).
fof(f33833,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X11)) | p(s(bool,X12)) | s(bool,X12) = s(bool,'const.min.@_1'(s(fun(bool,bool),X10))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X10))) = s(bool,happ(s(fun(bool,bool),X10),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f273,f1782])).
fof(f35137,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP0(X1,happ(s(fun(bool,bool),X2),s(bool,X0))) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X2)))) | s(bool,X3) = s(bool,'const.min.@_1'(s(fun(bool,bool),X2))) | s(bool,'T_0') = s(bool,X3) | s(bool,X4) = s(bool,X5) | s(bool,X5) = s(bool,X6) | s(bool,'T_0') = s(bool,X6) | s(bool,X0) = s(bool,X4)) )),
  inference(superposition,[],[f3362,f1507])).
fof(f35212,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP0(happ(s(fun(bool,bool),X1),s(bool,X0)),X2) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,X3) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X3) | s(bool,X4) = s(bool,X5) | s(bool,X5) = s(bool,X6) | s(bool,'T_0') = s(bool,X6) | s(bool,X0) = s(bool,X4)) )),
  inference(superposition,[],[f3387,f1507])).
fof(f35400,plain,(
  ( ! [X206,X204,X202,X207,X205,X203] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X202)))) | p(s(bool,happ(s(fun(X203,bool),X204),s(X203,X205)))) | s(bool,X206) = s(bool,happ(s(fun(X203,bool),X204),s(X203,sK14(X204,happ(s(fun(bool,bool),X202),s(bool,'T_0')),X203)))) | s(bool,'T_0') = s(bool,X206) | s(bool,X207) = s(bool,'const.min.@_1'(s(fun(bool,bool),X202))) | s(bool,'T_0') = s(bool,X207)) )),
  inference(superposition,[],[f2132,f1782])).
fof(f35509,plain,(
  ( ! [X206,X204,X202,X207,X205,X203] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X202)))) | p(s(bool,happ(s(fun(X203,bool),X204),s(X203,X205)))) | s(bool,X206) = s(bool,happ(s(fun(X203,bool),X204),s(X203,sK15(X204,happ(s(fun(bool,bool),X202),s(bool,'T_0')),X203)))) | s(bool,'T_0') = s(bool,X206) | s(bool,X207) = s(bool,'const.min.@_1'(s(fun(bool,bool),X202))) | s(bool,'T_0') = s(bool,X207)) )),
  inference(superposition,[],[f2133,f1782])).
fof(f35678,plain,(
  ( ! [X206,X204,X202,X207,X205,X203] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X202)))) | p(s(bool,happ(s(fun(X203,bool),X204),s(X203,X205)))) | s(bool,X206) = s(bool,happ(s(fun(X203,bool),X204),s(X203,sK16(X204,happ(s(fun(bool,bool),X202),s(bool,'T_0')),X203)))) | s(bool,'T_0') = s(bool,X206) | s(bool,X207) = s(bool,'const.min.@_1'(s(fun(bool,bool),X202))) | s(bool,'T_0') = s(bool,X207)) )),
  inference(superposition,[],[f2134,f1782])).
fof(f35773,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK16(X1,'const.min.@_1'(s(fun(bool,bool),X4)),X0)))) | s(bool,'T_0') = s(bool,X3) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X4))) = s(bool,happ(s(fun(bool,bool),X4),s(bool,'T_0')))) )),
  inference(condensation,[],[f35772])).
fof(f35772,plain,(
  ( ! [X177,X180,X178,X176,X181,X179] : (p(s(bool,X177)) | p(s(bool,happ(s(fun(X178,bool),X179),s(X178,X180)))) | s(bool,X181) = s(bool,happ(s(fun(X178,bool),X179),s(X178,sK16(X179,'const.min.@_1'(s(fun(bool,bool),X176)),X178)))) | s(bool,'T_0') = s(bool,X181) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X176))) = s(bool,happ(s(fun(bool,bool),X176),s(bool,'T_0')))) )),
  inference(subsumption_resolution,[],[f35674,f232])).
fof(f35674,plain,(
  ( ! [X177,X180,X178,X176,X181,X179] : (p(s(bool,X177)) | p(s(bool,happ(s(fun(X178,bool),X179),s(X178,X180)))) | s(bool,X181) = s(bool,happ(s(fun(X178,bool),X179),s(X178,sK16(X179,'const.min.@_1'(s(fun(bool,bool),X176)),X178)))) | s(bool,'T_0') = s(bool,X181) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X176))) = s(bool,happ(s(fun(bool,bool),X176),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X177)) )),
  inference(superposition,[],[f2134,f1782])).
fof(f35915,plain,(
  ( ! [X206,X204,X202,X207,X205,X203] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X202)))) | p(s(bool,happ(s(fun(X203,bool),X204),s(X203,X205)))) | s(bool,X206) = s(bool,happ(s(fun(X203,bool),X204),s(X203,sK17(X204,happ(s(fun(bool,bool),X202),s(bool,'T_0')),X203)))) | s(bool,'T_0') = s(bool,X206) | s(bool,X207) = s(bool,'const.min.@_1'(s(fun(bool,bool),X202))) | s(bool,'T_0') = s(bool,X207)) )),
  inference(superposition,[],[f2135,f1782])).
fof(f36010,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK17(X1,'const.min.@_1'(s(fun(bool,bool),X4)),X0)))) | s(bool,'T_0') = s(bool,X3) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X4))) = s(bool,happ(s(fun(bool,bool),X4),s(bool,'T_0')))) )),
  inference(condensation,[],[f36009])).
fof(f36009,plain,(
  ( ! [X177,X180,X178,X176,X181,X179] : (p(s(bool,X177)) | p(s(bool,happ(s(fun(X178,bool),X179),s(X178,X180)))) | s(bool,X181) = s(bool,happ(s(fun(X178,bool),X179),s(X178,sK17(X179,'const.min.@_1'(s(fun(bool,bool),X176)),X178)))) | s(bool,'T_0') = s(bool,X181) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X176))) = s(bool,happ(s(fun(bool,bool),X176),s(bool,'T_0')))) )),
  inference(subsumption_resolution,[],[f35911,f232])).
fof(f35911,plain,(
  ( ! [X177,X180,X178,X176,X181,X179] : (p(s(bool,X177)) | p(s(bool,happ(s(fun(X178,bool),X179),s(X178,X180)))) | s(bool,X181) = s(bool,happ(s(fun(X178,bool),X179),s(X178,sK17(X179,'const.min.@_1'(s(fun(bool,bool),X176)),X178)))) | s(bool,'T_0') = s(bool,X181) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X176))) = s(bool,happ(s(fun(bool,bool),X176),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X177)) )),
  inference(superposition,[],[f2135,f1782])).
fof(f3257,plain,(
  ( ! [X0,X1] : (~sP6('F_0',happ(s(fun(bool,bool),X0),s(bool,'T_0')),'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,X1) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f1040,f518])).
fof(f3259,plain,(
  ( ! [X4,X5] : (~sP6('F_0',happ(s(fun(bool,bool),X4),s(bool,X5)),'|dollar|exists_1'(s(fun(bool,bool),X4))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X4))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1040,f518])).
fof(f3284,plain,(
  ( ! [X0,X1] : (sP6('T_0',happ(s(fun(bool,bool),X0),s(bool,'T_0')),'|dollar|exists_1'(s(fun(bool,bool),X0))) | s(bool,X1) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f1041,f518])).
fof(f3286,plain,(
  ( ! [X4,X5] : (sP6('T_0',happ(s(fun(bool,bool),X4),s(bool,X5)),'|dollar|exists_1'(s(fun(bool,bool),X4))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X4))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1041,f518])).
fof(f3309,plain,(
  ( ! [X0,X1] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X0)),happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,X1) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f1042,f518])).
fof(f3311,plain,(
  ( ! [X4,X5] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X4)),happ(s(fun(bool,bool),X4),s(bool,X5))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X4))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1042,f518])).
fof(f3337,plain,(
  ( ! [X0,X1] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X0)),happ(s(fun(bool,bool),X0),s(bool,'T_0'))) | s(bool,X1) = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f1043,f518])).
fof(f3339,plain,(
  ( ! [X4,X5] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X4)),happ(s(fun(bool,bool),X4),s(bool,X5))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X4))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1043,f518])).
fof(f9003,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (sP6('const.pred_set.SURJ_3'(s(fun(X6,X7),X8),s(fun(X6,bool),X9),s(fun(X7,bool),'const.pred_set.IMAGE_2'(s(fun(X6,X7),X8),s(fun(X6,bool),X9)))),happ(s(fun(bool,bool),X5),s(bool,'T_0')),'|dollar|exists_1'(s(fun(bool,bool),X5))) | s(bool,X10) = s(bool,'const.min.@_1'(s(fun(bool,bool),X5))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f1251,f518])).
fof(f9004,plain,(
  ( ! [X14,X12,X15,X13,X11,X16] : (sP6('const.pred_set.SURJ_3'(s(fun(X13,X14),X15),s(fun(X13,bool),X16),s(fun(X14,bool),'const.pred_set.IMAGE_2'(s(fun(X13,X14),X15),s(fun(X13,bool),X16)))),happ(s(fun(bool,bool),X11),s(bool,X12)),'|dollar|exists_1'(s(fun(bool,bool),X11))) | s(bool,'T_0') = s(bool,X12) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X11)))) )),
  inference(superposition,[],[f1251,f518])).
fof(f9104,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (sP6('const.pred_set.SURJ_3'(s(fun(X6,X7),X8),s(fun(X6,bool),X9),s(fun(X7,bool),'const.pred_set.IMAGE_2'(s(fun(X6,X7),X8),s(fun(X6,bool),X9)))),'|dollar|exists_1'(s(fun(bool,bool),X5)),happ(s(fun(bool,bool),X5),s(bool,'T_0'))) | s(bool,X10) = s(bool,'const.min.@_1'(s(fun(bool,bool),X5))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f1253,f518])).
fof(f9105,plain,(
  ( ! [X14,X12,X15,X13,X11,X16] : (sP6('const.pred_set.SURJ_3'(s(fun(X13,X14),X15),s(fun(X13,bool),X16),s(fun(X14,bool),'const.pred_set.IMAGE_2'(s(fun(X13,X14),X15),s(fun(X13,bool),X16)))),'|dollar|exists_1'(s(fun(bool,bool),X11)),happ(s(fun(bool,bool),X11),s(bool,X12))) | s(bool,'T_0') = s(bool,X12) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X11)))) )),
  inference(superposition,[],[f1253,f518])).
fof(f17913,plain,(
  ( ! [X2,X1] : (sP5('T_0','|dollar|exists_1'(s(fun(bool,bool),X1)),happ(s(fun(bool,bool),X1),s(bool,'T_0'))) | s(bool,X2) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f3281,f518])).
fof(f17914,plain,(
  ( ! [X4,X3] : (sP5('T_0','|dollar|exists_1'(s(fun(bool,bool),X3)),happ(s(fun(bool,bool),X3),s(bool,X4))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X3)))) )),
  inference(superposition,[],[f3281,f518])).
fof(f17989,plain,(
  ( ! [X2,X1] : (sP5('T_0',happ(s(fun(bool,bool),X1),s(bool,'T_0')),'|dollar|exists_1'(s(fun(bool,bool),X1))) | s(bool,X2) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f3334,f518])).
fof(f17990,plain,(
  ( ! [X4,X3] : (sP5('T_0',happ(s(fun(bool,bool),X3),s(bool,X4)),'|dollar|exists_1'(s(fun(bool,bool),X3))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X3)))) )),
  inference(superposition,[],[f3334,f518])).
fof(f22221,plain,(
  ( ! [X1271,X1269,X1272,X1270] : (~sP6('F_0',happ(s(fun(bool,bool),X1269),s(bool,X1270)),'|dollar|exists_1'(s(fun(bool,bool),X1269))) | s(bool,X1270) = s(bool,X1271) | s(bool,'T_0') = s(bool,X1271) | s(bool,X1272) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1269))) | s(bool,'T_0') = s(bool,X1272)) )),
  inference(superposition,[],[f1040,f1507])).
fof(f22222,plain,(
  ( ! [X1275,X1273,X1274,X1276] : (sP6('T_0',happ(s(fun(bool,bool),X1273),s(bool,X1274)),'|dollar|exists_1'(s(fun(bool,bool),X1273))) | s(bool,X1274) = s(bool,X1275) | s(bool,'T_0') = s(bool,X1275) | s(bool,X1276) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1273))) | s(bool,'T_0') = s(bool,X1276)) )),
  inference(superposition,[],[f1041,f1507])).
fof(f22223,plain,(
  ( ! [X1279,X1277,X1280,X1278] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X1277)),happ(s(fun(bool,bool),X1277),s(bool,X1278))) | s(bool,X1278) = s(bool,X1279) | s(bool,'T_0') = s(bool,X1279) | s(bool,X1280) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1277))) | s(bool,'T_0') = s(bool,X1280)) )),
  inference(superposition,[],[f1042,f1507])).
fof(f22224,plain,(
  ( ! [X1282,X1284,X1281,X1283] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X1281)),happ(s(fun(bool,bool),X1281),s(bool,X1282))) | s(bool,X1282) = s(bool,X1283) | s(bool,'T_0') = s(bool,X1283) | s(bool,X1284) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1281))) | s(bool,'T_0') = s(bool,X1284)) )),
  inference(superposition,[],[f1043,f1507])).
fof(f22236,plain,(
  ( ! [X1352,X1354,X1348,X1350,X1353,X1347,X1349,X1351] : (sP6('const.pred_set.SURJ_3'(s(fun(X1349,X1350),X1351),s(fun(X1349,bool),X1352),s(fun(X1350,bool),'const.pred_set.IMAGE_2'(s(fun(X1349,X1350),X1351),s(fun(X1349,bool),X1352)))),happ(s(fun(bool,bool),X1347),s(bool,X1348)),'|dollar|exists_1'(s(fun(bool,bool),X1347))) | s(bool,X1348) = s(bool,X1353) | s(bool,'T_0') = s(bool,X1353) | s(bool,X1354) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1347))) | s(bool,'T_0') = s(bool,X1354)) )),
  inference(superposition,[],[f1251,f1507])).
fof(f22237,plain,(
  ( ! [X1360,X1362,X1356,X1358,X1361,X1355,X1357,X1359] : (sP6('const.pred_set.SURJ_3'(s(fun(X1357,X1358),X1359),s(fun(X1357,bool),X1360),s(fun(X1358,bool),'const.pred_set.IMAGE_2'(s(fun(X1357,X1358),X1359),s(fun(X1357,bool),X1360)))),'|dollar|exists_1'(s(fun(bool,bool),X1355)),happ(s(fun(bool,bool),X1355),s(bool,X1356))) | s(bool,X1356) = s(bool,X1361) | s(bool,'T_0') = s(bool,X1361) | s(bool,X1362) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1355))) | s(bool,'T_0') = s(bool,X1362)) )),
  inference(superposition,[],[f1253,f1507])).
fof(f22238,plain,(
  ( ! [X1364,X1366,X1363,X1365] : (sP5('T_0','|dollar|exists_1'(s(fun(bool,bool),X1363)),happ(s(fun(bool,bool),X1363),s(bool,X1364))) | s(bool,X1364) = s(bool,X1365) | s(bool,'T_0') = s(bool,X1365) | s(bool,X1366) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1363))) | s(bool,'T_0') = s(bool,X1366)) )),
  inference(superposition,[],[f3281,f1507])).
fof(f22239,plain,(
  ( ! [X1369,X1367,X1368,X1370] : (sP5('T_0',happ(s(fun(bool,bool),X1367),s(bool,X1368)),'|dollar|exists_1'(s(fun(bool,bool),X1367))) | s(bool,X1368) = s(bool,X1369) | s(bool,'T_0') = s(bool,X1369) | s(bool,X1370) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1367))) | s(bool,'T_0') = s(bool,X1370)) )),
  inference(superposition,[],[f3334,f1507])).
fof(f22851,plain,(
  ( ! [X1271,X1269,X1272,X1270] : (~sP6('F_0',happ(s(fun(bool,bool),X1269),s(bool,X1270)),'|dollar|exists_1'(s(fun(bool,bool),X1269))) | s(bool,X1271) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1269))) | s(bool,'T_0') = s(bool,X1270) | s(bool,X1271) = s(bool,X1272) | s(bool,'T_0') = s(bool,X1272)) )),
  inference(superposition,[],[f1040,f1507])).
fof(f22852,plain,(
  ( ! [X1275,X1273,X1274,X1276] : (sP6('T_0',happ(s(fun(bool,bool),X1273),s(bool,X1274)),'|dollar|exists_1'(s(fun(bool,bool),X1273))) | s(bool,X1275) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1273))) | s(bool,'T_0') = s(bool,X1274) | s(bool,X1275) = s(bool,X1276) | s(bool,'T_0') = s(bool,X1276)) )),
  inference(superposition,[],[f1041,f1507])).
fof(f22853,plain,(
  ( ! [X1279,X1277,X1280,X1278] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X1277)),happ(s(fun(bool,bool),X1277),s(bool,X1278))) | s(bool,X1279) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1277))) | s(bool,'T_0') = s(bool,X1278) | s(bool,X1279) = s(bool,X1280) | s(bool,'T_0') = s(bool,X1280)) )),
  inference(superposition,[],[f1042,f1507])).
fof(f22854,plain,(
  ( ! [X1282,X1284,X1281,X1283] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X1281)),happ(s(fun(bool,bool),X1281),s(bool,X1282))) | s(bool,X1283) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1281))) | s(bool,'T_0') = s(bool,X1282) | s(bool,X1283) = s(bool,X1284) | s(bool,'T_0') = s(bool,X1284)) )),
  inference(superposition,[],[f1043,f1507])).
fof(f22866,plain,(
  ( ! [X1352,X1354,X1348,X1350,X1353,X1347,X1349,X1351] : (sP6('const.pred_set.SURJ_3'(s(fun(X1349,X1350),X1351),s(fun(X1349,bool),X1352),s(fun(X1350,bool),'const.pred_set.IMAGE_2'(s(fun(X1349,X1350),X1351),s(fun(X1349,bool),X1352)))),happ(s(fun(bool,bool),X1347),s(bool,X1348)),'|dollar|exists_1'(s(fun(bool,bool),X1347))) | s(bool,X1353) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1347))) | s(bool,'T_0') = s(bool,X1348) | s(bool,X1353) = s(bool,X1354) | s(bool,'T_0') = s(bool,X1354)) )),
  inference(superposition,[],[f1251,f1507])).
fof(f22867,plain,(
  ( ! [X1360,X1362,X1356,X1358,X1361,X1355,X1357,X1359] : (sP6('const.pred_set.SURJ_3'(s(fun(X1357,X1358),X1359),s(fun(X1357,bool),X1360),s(fun(X1358,bool),'const.pred_set.IMAGE_2'(s(fun(X1357,X1358),X1359),s(fun(X1357,bool),X1360)))),'|dollar|exists_1'(s(fun(bool,bool),X1355)),happ(s(fun(bool,bool),X1355),s(bool,X1356))) | s(bool,X1361) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1355))) | s(bool,'T_0') = s(bool,X1356) | s(bool,X1361) = s(bool,X1362) | s(bool,'T_0') = s(bool,X1362)) )),
  inference(superposition,[],[f1253,f1507])).
fof(f22868,plain,(
  ( ! [X1364,X1366,X1363,X1365] : (sP5('T_0','|dollar|exists_1'(s(fun(bool,bool),X1363)),happ(s(fun(bool,bool),X1363),s(bool,X1364))) | s(bool,X1365) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1363))) | s(bool,'T_0') = s(bool,X1364) | s(bool,X1365) = s(bool,X1366) | s(bool,'T_0') = s(bool,X1366)) )),
  inference(superposition,[],[f3281,f1507])).
fof(f22869,plain,(
  ( ! [X1369,X1367,X1368,X1370] : (sP5('T_0',happ(s(fun(bool,bool),X1367),s(bool,X1368)),'|dollar|exists_1'(s(fun(bool,bool),X1367))) | s(bool,X1369) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1367))) | s(bool,'T_0') = s(bool,X1368) | s(bool,X1369) = s(bool,X1370) | s(bool,'T_0') = s(bool,X1370)) )),
  inference(superposition,[],[f3334,f1507])).
fof(f23166,plain,(
  ( ! [X1213,X1214,X1212,X1215] : (~sP6('F_0',happ(s(fun(bool,bool),X1212),s(bool,X1213)),'|dollar|exists_1'(s(fun(bool,bool),X1212))) | s(bool,X1213) = s(bool,X1214) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1212))) | s(bool,X1214) = s(bool,X1215) | s(bool,'T_0') = s(bool,X1215)) )),
  inference(superposition,[],[f1040,f1507])).
fof(f23167,plain,(
  ( ! [X1219,X1217,X1218,X1216] : (sP6('T_0',happ(s(fun(bool,bool),X1216),s(bool,X1217)),'|dollar|exists_1'(s(fun(bool,bool),X1216))) | s(bool,X1217) = s(bool,X1218) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1216))) | s(bool,X1218) = s(bool,X1219) | s(bool,'T_0') = s(bool,X1219)) )),
  inference(superposition,[],[f1041,f1507])).
fof(f23168,plain,(
  ( ! [X1220,X1223,X1221,X1222] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X1220)),happ(s(fun(bool,bool),X1220),s(bool,X1221))) | s(bool,X1221) = s(bool,X1222) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1220))) | s(bool,X1222) = s(bool,X1223) | s(bool,'T_0') = s(bool,X1223)) )),
  inference(superposition,[],[f1042,f1507])).
fof(f23169,plain,(
  ( ! [X1227,X1225,X1226,X1224] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X1224)),happ(s(fun(bool,bool),X1224),s(bool,X1225))) | s(bool,X1225) = s(bool,X1226) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1224))) | s(bool,X1226) = s(bool,X1227) | s(bool,'T_0') = s(bool,X1227)) )),
  inference(superposition,[],[f1043,f1507])).
fof(f23181,plain,(
  ( ! [X1296,X1290,X1292,X1294,X1297,X1291,X1293,X1295] : (sP6('const.pred_set.SURJ_3'(s(fun(X1292,X1293),X1294),s(fun(X1292,bool),X1295),s(fun(X1293,bool),'const.pred_set.IMAGE_2'(s(fun(X1292,X1293),X1294),s(fun(X1292,bool),X1295)))),happ(s(fun(bool,bool),X1290),s(bool,X1291)),'|dollar|exists_1'(s(fun(bool,bool),X1290))) | s(bool,X1291) = s(bool,X1296) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1290))) | s(bool,X1296) = s(bool,X1297) | s(bool,'T_0') = s(bool,X1297)) )),
  inference(superposition,[],[f1251,f1507])).
fof(f23182,plain,(
  ( ! [X1298,X1300,X1302,X1305,X1299,X1301,X1303,X1304] : (sP6('const.pred_set.SURJ_3'(s(fun(X1300,X1301),X1302),s(fun(X1300,bool),X1303),s(fun(X1301,bool),'const.pred_set.IMAGE_2'(s(fun(X1300,X1301),X1302),s(fun(X1300,bool),X1303)))),'|dollar|exists_1'(s(fun(bool,bool),X1298)),happ(s(fun(bool,bool),X1298),s(bool,X1299))) | s(bool,X1299) = s(bool,X1304) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1298))) | s(bool,X1304) = s(bool,X1305) | s(bool,'T_0') = s(bool,X1305)) )),
  inference(superposition,[],[f1253,f1507])).
fof(f23183,plain,(
  ( ! [X1307,X1309,X1306,X1308] : (sP5('T_0','|dollar|exists_1'(s(fun(bool,bool),X1306)),happ(s(fun(bool,bool),X1306),s(bool,X1307))) | s(bool,X1307) = s(bool,X1308) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1306))) | s(bool,X1308) = s(bool,X1309) | s(bool,'T_0') = s(bool,X1309)) )),
  inference(superposition,[],[f3281,f1507])).
fof(f23184,plain,(
  ( ! [X1310,X1313,X1311,X1312] : (sP5('T_0',happ(s(fun(bool,bool),X1310),s(bool,X1311)),'|dollar|exists_1'(s(fun(bool,bool),X1310))) | s(bool,X1311) = s(bool,X1312) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1310))) | s(bool,X1312) = s(bool,X1313) | s(bool,'T_0') = s(bool,X1313)) )),
  inference(superposition,[],[f3334,f1507])).
fof(f23648,plain,(
  ( ! [X1246,X1244,X1243,X1245] : (~sP6('F_0',happ(s(fun(bool,bool),X1243),s(bool,'T_0')),'|dollar|exists_1'(s(fun(bool,bool),X1243))) | s(bool,X1244) = s(bool,X1245) | s(bool,X1245) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1243))) | s(bool,X1244) = s(bool,X1246) | s(bool,'T_0') = s(bool,X1246)) )),
  inference(superposition,[],[f1040,f1507])).
fof(f23649,plain,(
  ( ! [X1250,X1248,X1247,X1249] : (sP6('T_0',happ(s(fun(bool,bool),X1247),s(bool,'T_0')),'|dollar|exists_1'(s(fun(bool,bool),X1247))) | s(bool,X1248) = s(bool,X1249) | s(bool,X1249) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1247))) | s(bool,X1248) = s(bool,X1250) | s(bool,'T_0') = s(bool,X1250)) )),
  inference(superposition,[],[f1041,f1507])).
fof(f23650,plain,(
  ( ! [X1254,X1252,X1251,X1253] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X1251)),happ(s(fun(bool,bool),X1251),s(bool,'T_0'))) | s(bool,X1252) = s(bool,X1253) | s(bool,X1253) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1251))) | s(bool,X1252) = s(bool,X1254) | s(bool,'T_0') = s(bool,X1254)) )),
  inference(superposition,[],[f1042,f1507])).
fof(f23651,plain,(
  ( ! [X1258,X1256,X1257,X1255] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X1255)),happ(s(fun(bool,bool),X1255),s(bool,'T_0'))) | s(bool,X1256) = s(bool,X1257) | s(bool,X1257) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1255))) | s(bool,X1256) = s(bool,X1258) | s(bool,'T_0') = s(bool,X1258)) )),
  inference(superposition,[],[f1043,f1507])).
fof(f23663,plain,(
  ( ! [X1321,X1323,X1325,X1327,X1328,X1322,X1324,X1326] : (sP6('const.pred_set.SURJ_3'(s(fun(X1322,X1323),X1324),s(fun(X1322,bool),X1325),s(fun(X1323,bool),'const.pred_set.IMAGE_2'(s(fun(X1322,X1323),X1324),s(fun(X1322,bool),X1325)))),happ(s(fun(bool,bool),X1321),s(bool,'T_0')),'|dollar|exists_1'(s(fun(bool,bool),X1321))) | s(bool,X1326) = s(bool,X1327) | s(bool,X1327) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1321))) | s(bool,X1326) = s(bool,X1328) | s(bool,'T_0') = s(bool,X1328)) )),
  inference(superposition,[],[f1251,f1507])).
fof(f23664,plain,(
  ( ! [X1329,X1331,X1333,X1335,X1336,X1330,X1332,X1334] : (sP6('const.pred_set.SURJ_3'(s(fun(X1330,X1331),X1332),s(fun(X1330,bool),X1333),s(fun(X1331,bool),'const.pred_set.IMAGE_2'(s(fun(X1330,X1331),X1332),s(fun(X1330,bool),X1333)))),'|dollar|exists_1'(s(fun(bool,bool),X1329)),happ(s(fun(bool,bool),X1329),s(bool,'T_0'))) | s(bool,X1334) = s(bool,X1335) | s(bool,X1335) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1329))) | s(bool,X1334) = s(bool,X1336) | s(bool,'T_0') = s(bool,X1336)) )),
  inference(superposition,[],[f1253,f1507])).
fof(f23665,plain,(
  ( ! [X1338,X1340,X1337,X1339] : (sP5('T_0','|dollar|exists_1'(s(fun(bool,bool),X1337)),happ(s(fun(bool,bool),X1337),s(bool,'T_0'))) | s(bool,X1338) = s(bool,X1339) | s(bool,X1339) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1337))) | s(bool,X1338) = s(bool,X1340) | s(bool,'T_0') = s(bool,X1340)) )),
  inference(superposition,[],[f3281,f1507])).
fof(f23666,plain,(
  ( ! [X1341,X1343,X1344,X1342] : (sP5('T_0',happ(s(fun(bool,bool),X1341),s(bool,'T_0')),'|dollar|exists_1'(s(fun(bool,bool),X1341))) | s(bool,X1342) = s(bool,X1343) | s(bool,X1343) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1341))) | s(bool,X1342) = s(bool,X1344) | s(bool,'T_0') = s(bool,X1344)) )),
  inference(superposition,[],[f3334,f1507])).
fof(f27897,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~sP6('F_0',happ(s(fun(bool,bool),X1),s(bool,X0)),'|dollar|exists_1'(s(fun(bool,bool),X1))) | s(bool,X2) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X2) | s(bool,X3) = s(bool,X4) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X5) | s(bool,X0) = s(bool,X3)) )),
  inference(superposition,[],[f3257,f1507])).
fof(f28877,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP6('T_0',happ(s(fun(bool,bool),X1),s(bool,X0)),'|dollar|exists_1'(s(fun(bool,bool),X1))) | s(bool,X2) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X2) | s(bool,X3) = s(bool,X4) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X5) | s(bool,X0) = s(bool,X3)) )),
  inference(superposition,[],[f3284,f1507])).
fof(f29260,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X1)),happ(s(fun(bool,bool),X1),s(bool,X0))) | s(bool,X2) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X2) | s(bool,X3) = s(bool,X4) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X5) | s(bool,X0) = s(bool,X3)) )),
  inference(superposition,[],[f3309,f1507])).
fof(f29573,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X1)),happ(s(fun(bool,bool),X1),s(bool,X0))) | s(bool,X2) = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X2) | s(bool,X3) = s(bool,X4) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X5) | s(bool,X0) = s(bool,X3)) )),
  inference(superposition,[],[f3337,f1507])).
fof(f1610,plain,(
  ( ! [X237,X235,X238,X236] : (~p(s(bool,X236)) | p(s(bool,happ(s(fun(bool,bool),X235),s(bool,X238)))) | ~p(s(bool,happ(s(fun(bool,bool),X235),s(bool,X237)))) | s(bool,'T_0') = s(bool,X237) | s(bool,'T_0') = s(bool,sK14(X235,X236,bool))) )),
  inference(superposition,[],[f266,f518])).
fof(f1611,plain,(
  ( ! [X241,X239,X242,X240] : (~p(s(bool,X240)) | p(s(bool,happ(s(fun(bool,bool),X239),s(bool,X242)))) | ~p(s(bool,happ(s(fun(bool,bool),X239),s(bool,X241)))) | s(bool,'T_0') = s(bool,X241) | s(bool,'T_0') = s(bool,sK15(X239,X240,bool))) )),
  inference(superposition,[],[f268,f518])).
fof(f1612,plain,(
  ( ! [X243,X246,X244,X245] : (~p(s(bool,happ(s(fun(bool,bool),X243),s(bool,X245)))) | p(s(bool,happ(s(fun(bool,bool),X243),s(bool,X246)))) | p(s(bool,X244)) | s(bool,'T_0') = s(bool,X245) | s(bool,'T_0') = s(bool,sK16(X243,X244,bool))) )),
  inference(superposition,[],[f269,f518])).
fof(f1613,plain,(
  ( ! [X249,X250,X248,X247] : (~p(s(bool,happ(s(fun(bool,bool),X247),s(bool,X249)))) | p(s(bool,happ(s(fun(bool,bool),X247),s(bool,X250)))) | p(s(bool,X248)) | s(bool,'T_0') = s(bool,X249) | s(bool,'T_0') = s(bool,sK17(X247,X248,bool))) )),
  inference(superposition,[],[f271,f518])).
fof(f1794,plain,(
  ( ! [X231,X229,X230,X232] : (~p(s(bool,happ(s(fun(bool,bool),X229),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X229),s(bool,X231)))) | ~p(s(bool,X230)) | s(bool,X232) = s(bool,sK14(X229,X230,bool)) | s(bool,'T_0') = s(bool,X232)) )),
  inference(superposition,[],[f266,f518])).
fof(f1795,plain,(
  ( ! [X235,X233,X236,X234] : (~p(s(bool,happ(s(fun(bool,bool),X233),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X233),s(bool,X235)))) | ~p(s(bool,X234)) | s(bool,X236) = s(bool,sK15(X233,X234,bool)) | s(bool,'T_0') = s(bool,X236)) )),
  inference(superposition,[],[f268,f518])).
fof(f1796,plain,(
  ( ! [X239,X237,X240,X238] : (~p(s(bool,happ(s(fun(bool,bool),X237),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X237),s(bool,X239)))) | p(s(bool,X238)) | s(bool,X240) = s(bool,sK16(X237,X238,bool)) | s(bool,'T_0') = s(bool,X240)) )),
  inference(superposition,[],[f269,f518])).
fof(f1797,plain,(
  ( ! [X243,X241,X244,X242] : (~p(s(bool,happ(s(fun(bool,bool),X241),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X241),s(bool,X243)))) | p(s(bool,X242)) | s(bool,X244) = s(bool,sK17(X241,X242,bool)) | s(bool,'T_0') = s(bool,X244)) )),
  inference(superposition,[],[f271,f518])).
fof(f22240,plain,(
  ( ! [X1371,X1373,X1375,X1376,X1372,X1374] : (~p(s(bool,happ(s(fun(bool,bool),X1371),s(bool,X1373)))) | p(s(bool,happ(s(fun(bool,bool),X1371),s(bool,X1374)))) | ~p(s(bool,X1372)) | s(bool,X1373) = s(bool,X1375) | s(bool,'T_0') = s(bool,X1375) | s(bool,X1376) = s(bool,sK14(X1371,X1372,bool)) | s(bool,'T_0') = s(bool,X1376)) )),
  inference(superposition,[],[f266,f1507])).
fof(f22241,plain,(
  ( ! [X1377,X1379,X1381,X1378,X1380,X1382] : (~p(s(bool,happ(s(fun(bool,bool),X1377),s(bool,X1379)))) | p(s(bool,happ(s(fun(bool,bool),X1377),s(bool,X1380)))) | ~p(s(bool,X1378)) | s(bool,X1379) = s(bool,X1381) | s(bool,'T_0') = s(bool,X1381) | s(bool,X1382) = s(bool,sK15(X1377,X1378,bool)) | s(bool,'T_0') = s(bool,X1382)) )),
  inference(superposition,[],[f268,f1507])).
fof(f22242,plain,(
  ( ! [X1385,X1387,X1383,X1384,X1386,X1388] : (~p(s(bool,happ(s(fun(bool,bool),X1383),s(bool,X1385)))) | p(s(bool,happ(s(fun(bool,bool),X1383),s(bool,X1386)))) | p(s(bool,X1384)) | s(bool,X1385) = s(bool,X1387) | s(bool,'T_0') = s(bool,X1387) | s(bool,X1388) = s(bool,sK16(X1383,X1384,bool)) | s(bool,'T_0') = s(bool,X1388)) )),
  inference(superposition,[],[f269,f1507])).
fof(f22243,plain,(
  ( ! [X1393,X1389,X1391,X1392,X1394,X1390] : (~p(s(bool,happ(s(fun(bool,bool),X1389),s(bool,X1391)))) | p(s(bool,happ(s(fun(bool,bool),X1389),s(bool,X1392)))) | p(s(bool,X1390)) | s(bool,X1391) = s(bool,X1393) | s(bool,'T_0') = s(bool,X1393) | s(bool,X1394) = s(bool,sK17(X1389,X1390,bool)) | s(bool,'T_0') = s(bool,X1394)) )),
  inference(superposition,[],[f271,f1507])).
fof(f22870,plain,(
  ( ! [X1371,X1373,X1375,X1376,X1372,X1374] : (~p(s(bool,happ(s(fun(bool,bool),X1371),s(bool,X1373)))) | p(s(bool,happ(s(fun(bool,bool),X1371),s(bool,X1374)))) | ~p(s(bool,X1372)) | s(bool,X1375) = s(bool,sK14(X1371,X1372,bool)) | s(bool,'T_0') = s(bool,X1373) | s(bool,X1375) = s(bool,X1376) | s(bool,'T_0') = s(bool,X1376)) )),
  inference(superposition,[],[f266,f1507])).
fof(f22871,plain,(
  ( ! [X1377,X1379,X1381,X1378,X1380,X1382] : (~p(s(bool,happ(s(fun(bool,bool),X1377),s(bool,X1379)))) | p(s(bool,happ(s(fun(bool,bool),X1377),s(bool,X1380)))) | ~p(s(bool,X1378)) | s(bool,X1381) = s(bool,sK15(X1377,X1378,bool)) | s(bool,'T_0') = s(bool,X1379) | s(bool,X1381) = s(bool,X1382) | s(bool,'T_0') = s(bool,X1382)) )),
  inference(superposition,[],[f268,f1507])).
fof(f22872,plain,(
  ( ! [X1385,X1387,X1383,X1384,X1386,X1388] : (~p(s(bool,happ(s(fun(bool,bool),X1383),s(bool,X1385)))) | p(s(bool,happ(s(fun(bool,bool),X1383),s(bool,X1386)))) | p(s(bool,X1384)) | s(bool,X1387) = s(bool,sK16(X1383,X1384,bool)) | s(bool,'T_0') = s(bool,X1385) | s(bool,X1387) = s(bool,X1388) | s(bool,'T_0') = s(bool,X1388)) )),
  inference(superposition,[],[f269,f1507])).
fof(f22873,plain,(
  ( ! [X1393,X1389,X1391,X1392,X1394,X1390] : (~p(s(bool,happ(s(fun(bool,bool),X1389),s(bool,X1391)))) | p(s(bool,happ(s(fun(bool,bool),X1389),s(bool,X1392)))) | p(s(bool,X1390)) | s(bool,X1393) = s(bool,sK17(X1389,X1390,bool)) | s(bool,'T_0') = s(bool,X1391) | s(bool,X1393) = s(bool,X1394) | s(bool,'T_0') = s(bool,X1394)) )),
  inference(superposition,[],[f271,f1507])).
fof(f23185,plain,(
  ( ! [X1315,X1317,X1319,X1314,X1316,X1318] : (~p(s(bool,happ(s(fun(bool,bool),X1314),s(bool,X1316)))) | p(s(bool,happ(s(fun(bool,bool),X1314),s(bool,X1317)))) | ~p(s(bool,X1315)) | s(bool,X1316) = s(bool,X1318) | s(bool,'T_0') = s(bool,sK14(X1314,X1315,bool)) | s(bool,X1318) = s(bool,X1319) | s(bool,'T_0') = s(bool,X1319)) )),
  inference(superposition,[],[f266,f1507])).
fof(f23186,plain,(
  ( ! [X1321,X1323,X1325,X1320,X1322,X1324] : (~p(s(bool,happ(s(fun(bool,bool),X1320),s(bool,X1322)))) | p(s(bool,happ(s(fun(bool,bool),X1320),s(bool,X1323)))) | ~p(s(bool,X1321)) | s(bool,X1322) = s(bool,X1324) | s(bool,'T_0') = s(bool,sK15(X1320,X1321,bool)) | s(bool,X1324) = s(bool,X1325) | s(bool,'T_0') = s(bool,X1325)) )),
  inference(superposition,[],[f268,f1507])).
fof(f23187,plain,(
  ( ! [X1329,X1331,X1327,X1328,X1330,X1326] : (~p(s(bool,happ(s(fun(bool,bool),X1326),s(bool,X1328)))) | p(s(bool,happ(s(fun(bool,bool),X1326),s(bool,X1329)))) | p(s(bool,X1327)) | s(bool,X1328) = s(bool,X1330) | s(bool,'T_0') = s(bool,sK16(X1326,X1327,bool)) | s(bool,X1330) = s(bool,X1331) | s(bool,'T_0') = s(bool,X1331)) )),
  inference(superposition,[],[f269,f1507])).
fof(f23188,plain,(
  ( ! [X1333,X1335,X1336,X1332,X1334,X1337] : (~p(s(bool,happ(s(fun(bool,bool),X1332),s(bool,X1334)))) | p(s(bool,happ(s(fun(bool,bool),X1332),s(bool,X1335)))) | p(s(bool,X1333)) | s(bool,X1334) = s(bool,X1336) | s(bool,'T_0') = s(bool,sK17(X1332,X1333,bool)) | s(bool,X1336) = s(bool,X1337) | s(bool,'T_0') = s(bool,X1337)) )),
  inference(superposition,[],[f271,f1507])).
fof(f23667,plain,(
  ( ! [X1346,X1348,X1350,X1345,X1347,X1349] : (~p(s(bool,happ(s(fun(bool,bool),X1345),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X1345),s(bool,X1347)))) | ~p(s(bool,X1346)) | s(bool,X1348) = s(bool,X1349) | s(bool,X1349) = s(bool,sK14(X1345,X1346,bool)) | s(bool,X1348) = s(bool,X1350) | s(bool,'T_0') = s(bool,X1350)) )),
  inference(superposition,[],[f266,f1507])).
fof(f23668,plain,(
  ( ! [X1352,X1354,X1356,X1353,X1355,X1351] : (~p(s(bool,happ(s(fun(bool,bool),X1351),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X1351),s(bool,X1353)))) | ~p(s(bool,X1352)) | s(bool,X1354) = s(bool,X1355) | s(bool,X1355) = s(bool,sK15(X1351,X1352,bool)) | s(bool,X1354) = s(bool,X1356) | s(bool,'T_0') = s(bool,X1356)) )),
  inference(superposition,[],[f268,f1507])).
fof(f23669,plain,(
  ( ! [X1360,X1362,X1358,X1361,X1357,X1359] : (~p(s(bool,happ(s(fun(bool,bool),X1357),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X1357),s(bool,X1359)))) | p(s(bool,X1358)) | s(bool,X1360) = s(bool,X1361) | s(bool,X1361) = s(bool,sK16(X1357,X1358,bool)) | s(bool,X1360) = s(bool,X1362) | s(bool,'T_0') = s(bool,X1362)) )),
  inference(superposition,[],[f269,f1507])).
fof(f23670,plain,(
  ( ! [X1364,X1366,X1363,X1365,X1367,X1368] : (~p(s(bool,happ(s(fun(bool,bool),X1363),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X1363),s(bool,X1365)))) | p(s(bool,X1364)) | s(bool,X1366) = s(bool,X1367) | s(bool,X1367) = s(bool,sK17(X1363,X1364,bool)) | s(bool,X1366) = s(bool,X1368) | s(bool,'T_0') = s(bool,X1368)) )),
  inference(superposition,[],[f271,f1507])).
fof(f266,plain,(
  ( ! [X2,X0,X5,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK14(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK14(X2,X1,X0))))) | ! [X5] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))))) & ((~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK15(X2,X1,X0)))))) | (p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14,sK15])],[f167])).
fof(f167,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,X1)) | ? [X6] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6)))) | ! [X5] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))))) & (? [X4] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | (p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(rectify,[],[f166])).
fof(f166,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,X1)) | ? [X3] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ! [X4] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (? [X4] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | (p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(flattening,[],[f165])).
fof(f165,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X1)) | ? [X3] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | ! [X4] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (? [X4] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | (p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> ! [X4] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(flattening,[],[f74])).
fof(f74,plain,(
  ! [X0] : ! [X1,X2] : ((p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> ! [X4] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X8,X14] : ((p(s(bool,X8)) & ! [X9] : p(s(bool,happ(s(fun(X6,bool),X14),s(X6,X9))))) <=> ! [X9] : (p(s(bool,X8)) & p(s(bool,happ(s(fun(X6,bool),X14),s(X6,X9))))))),
  file('thm.pred_set.countable_image_nats','thm.bool.RIGHT_AND_FORALL_THM')).
fof(f268,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK15(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f168])).
fof(f269,plain,(
  ( ! [X2,X0,X5,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK16(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f172])).
fof(f172,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK16(X2,X1,X0))))) & ~p(s(bool,X1))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | p(s(bool,X1))) & ((~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK17(X2,X1,X0))))) & ~p(s(bool,X1))) | ! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,X1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16,sK17])],[f171])).
fof(f171,plain,(
  ! [X0,X1,X2] : ((? [X6] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6)))) & ~p(s(bool,X1))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | p(s(bool,X1))) & ((? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) & ~p(s(bool,X1))) | ! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,X1)))))),
  inference(rectify,[],[f170])).
fof(f170,plain,(
  ! [X0,X1,X2] : ((? [X3] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) & ~p(s(bool,X1))) | ! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,X1))) & ((? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) & ~p(s(bool,X1))) | ! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,X1)))))),
  inference(flattening,[],[f169])).
fof(f169,plain,(
  ! [X0,X1,X2] : ((? [X3] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) & ~p(s(bool,X1))) | (! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,X1)))) & ((? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) & ~p(s(bool,X1))) | ! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,X1)))))),
  inference(nnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0,X1,X2] : (! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,X1))) <=> (! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,X1))))),
  inference(flattening,[],[f76])).
fof(f76,plain,(
  ! [X0] : ! [X1,X2] : (! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,X1))) <=> (! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,X1))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6] : ! [X14,X8] : (! [X9] : (p(s(bool,happ(s(fun(X6,bool),X8),s(X6,X9)))) | p(s(bool,X14))) <=> (! [X9] : p(s(bool,happ(s(fun(X6,bool),X8),s(X6,X9)))) | p(s(bool,X14))))),
  file('thm.pred_set.countable_image_nats','thm.bool.LEFT_FORALL_OR_THM')).
fof(f271,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK17(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f172])).
fof(f2132,plain,(
  ( ! [X142,X140,X143,X141,X139] : (~p(s(bool,X141)) | p(s(bool,happ(s(fun(X139,bool),X140),s(X139,X142)))) | s(bool,X143) = s(bool,happ(s(fun(X139,bool),X140),s(X139,sK14(X140,X141,X139)))) | s(bool,'T_0') = s(bool,X143)) )),
  inference(subsumption_resolution,[],[f1771,f219])).
fof(f1771,plain,(
  ( ! [X142,X140,X143,X141,X139] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X139,bool),X140),s(X139,X142)))) | ~p(s(bool,X141)) | s(bool,X143) = s(bool,happ(s(fun(X139,bool),X140),s(X139,sK14(X140,X141,X139)))) | s(bool,'T_0') = s(bool,X143)) )),
  inference(superposition,[],[f266,f518])).
fof(f2133,plain,(
  ( ! [X146,X144,X147,X145,X148] : (~p(s(bool,X146)) | p(s(bool,happ(s(fun(X144,bool),X145),s(X144,X147)))) | s(bool,X148) = s(bool,happ(s(fun(X144,bool),X145),s(X144,sK15(X145,X146,X144)))) | s(bool,'T_0') = s(bool,X148)) )),
  inference(subsumption_resolution,[],[f1772,f219])).
fof(f1772,plain,(
  ( ! [X146,X144,X147,X145,X148] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X144,bool),X145),s(X144,X147)))) | ~p(s(bool,X146)) | s(bool,X148) = s(bool,happ(s(fun(X144,bool),X145),s(X144,sK15(X145,X146,X144)))) | s(bool,'T_0') = s(bool,X148)) )),
  inference(superposition,[],[f268,f518])).
fof(f2134,plain,(
  ( ! [X152,X151,X149,X153,X150] : (p(s(bool,happ(s(fun(X149,bool),X150),s(X149,X152)))) | p(s(bool,X151)) | s(bool,X153) = s(bool,happ(s(fun(X149,bool),X150),s(X149,sK16(X150,X151,X149)))) | s(bool,'T_0') = s(bool,X153)) )),
  inference(subsumption_resolution,[],[f1773,f219])).
fof(f1773,plain,(
  ( ! [X152,X151,X149,X153,X150] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X149,bool),X150),s(X149,X152)))) | p(s(bool,X151)) | s(bool,X153) = s(bool,happ(s(fun(X149,bool),X150),s(X149,sK16(X150,X151,X149)))) | s(bool,'T_0') = s(bool,X153)) )),
  inference(superposition,[],[f269,f518])).
fof(f2135,plain,(
  ( ! [X158,X156,X154,X157,X155] : (p(s(bool,happ(s(fun(X154,bool),X155),s(X154,X157)))) | p(s(bool,X156)) | s(bool,X158) = s(bool,happ(s(fun(X154,bool),X155),s(X154,sK17(X155,X156,X154)))) | s(bool,'T_0') = s(bool,X158)) )),
  inference(subsumption_resolution,[],[f1774,f219])).
fof(f1774,plain,(
  ( ! [X158,X156,X154,X157,X155] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X154,bool),X155),s(X154,X157)))) | p(s(bool,X156)) | s(bool,X158) = s(bool,happ(s(fun(X154,bool),X155),s(X154,sK17(X155,X156,X154)))) | s(bool,'T_0') = s(bool,X158)) )),
  inference(superposition,[],[f271,f518])).
fof(f27659,plain,(
  ( ! [X1170,X1174,X1172,X1171,X1175,X1173,X1176] : (p(s(bool,happ(s(fun(X1170,bool),X1171),s(X1170,X1173)))) | ~p(s(bool,X1172)) | s(bool,X1174) = s(bool,X1175) | s(bool,X1175) = s(bool,happ(s(fun(X1170,bool),X1171),s(X1170,sK14(X1171,X1172,X1170)))) | s(bool,X1174) = s(bool,X1176) | s(bool,'T_0') = s(bool,X1176)) )),
  inference(subsumption_resolution,[],[f23638,f219])).
fof(f23638,plain,(
  ( ! [X1170,X1174,X1172,X1171,X1175,X1173,X1176] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X1170,bool),X1171),s(X1170,X1173)))) | ~p(s(bool,X1172)) | s(bool,X1174) = s(bool,X1175) | s(bool,X1175) = s(bool,happ(s(fun(X1170,bool),X1171),s(X1170,sK14(X1171,X1172,X1170)))) | s(bool,X1174) = s(bool,X1176) | s(bool,'T_0') = s(bool,X1176)) )),
  inference(superposition,[],[f266,f1507])).
fof(f27660,plain,(
  ( ! [X1182,X1180,X1179,X1177,X1183,X1181,X1178] : (p(s(bool,happ(s(fun(X1177,bool),X1178),s(X1177,X1180)))) | ~p(s(bool,X1179)) | s(bool,X1181) = s(bool,X1182) | s(bool,X1182) = s(bool,happ(s(fun(X1177,bool),X1178),s(X1177,sK15(X1178,X1179,X1177)))) | s(bool,X1181) = s(bool,X1183) | s(bool,'T_0') = s(bool,X1183)) )),
  inference(subsumption_resolution,[],[f23639,f219])).
fof(f23639,plain,(
  ( ! [X1182,X1180,X1179,X1177,X1183,X1181,X1178] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X1177,bool),X1178),s(X1177,X1180)))) | ~p(s(bool,X1179)) | s(bool,X1181) = s(bool,X1182) | s(bool,X1182) = s(bool,happ(s(fun(X1177,bool),X1178),s(X1177,sK15(X1178,X1179,X1177)))) | s(bool,X1181) = s(bool,X1183) | s(bool,'T_0') = s(bool,X1183)) )),
  inference(superposition,[],[f268,f1507])).
fof(f27661,plain,(
  ( ! [X1186,X1184,X1190,X1188,X1187,X1185,X1189] : (p(s(bool,happ(s(fun(X1184,bool),X1185),s(X1184,X1187)))) | p(s(bool,X1186)) | s(bool,X1188) = s(bool,X1189) | s(bool,X1189) = s(bool,happ(s(fun(X1184,bool),X1185),s(X1184,sK16(X1185,X1186,X1184)))) | s(bool,X1188) = s(bool,X1190) | s(bool,'T_0') = s(bool,X1190)) )),
  inference(subsumption_resolution,[],[f23640,f219])).
fof(f23640,plain,(
  ( ! [X1186,X1184,X1190,X1188,X1187,X1185,X1189] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X1184,bool),X1185),s(X1184,X1187)))) | p(s(bool,X1186)) | s(bool,X1188) = s(bool,X1189) | s(bool,X1189) = s(bool,happ(s(fun(X1184,bool),X1185),s(X1184,sK16(X1185,X1186,X1184)))) | s(bool,X1188) = s(bool,X1190) | s(bool,'T_0') = s(bool,X1190)) )),
  inference(superposition,[],[f269,f1507])).
fof(f27662,plain,(
  ( ! [X1194,X1192,X1196,X1195,X1193,X1197,X1191] : (p(s(bool,happ(s(fun(X1191,bool),X1192),s(X1191,X1194)))) | p(s(bool,X1193)) | s(bool,X1195) = s(bool,X1196) | s(bool,X1196) = s(bool,happ(s(fun(X1191,bool),X1192),s(X1191,sK17(X1192,X1193,X1191)))) | s(bool,X1195) = s(bool,X1197) | s(bool,'T_0') = s(bool,X1197)) )),
  inference(subsumption_resolution,[],[f23641,f219])).
fof(f23641,plain,(
  ( ! [X1194,X1192,X1196,X1195,X1193,X1197,X1191] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X1191,bool),X1192),s(X1191,X1194)))) | p(s(bool,X1193)) | s(bool,X1195) = s(bool,X1196) | s(bool,X1196) = s(bool,happ(s(fun(X1191,bool),X1192),s(X1191,sK17(X1192,X1193,X1191)))) | s(bool,X1195) = s(bool,X1197) | s(bool,'T_0') = s(bool,X1197)) )),
  inference(superposition,[],[f271,f1507])).
fof(f35402,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) | s(bool,X9) = s(bool,happ(s(fun(X6,bool),X7),s(X6,sK14(X7,X5,X6)))) | s(bool,'T_0') = s(bool,X9) | s(bool,X5) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f35370,f219])).
fof(f35370,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) | s(bool,X9) = s(bool,happ(s(fun(X6,bool),X7),s(X6,sK14(X7,X5,X6)))) | s(bool,'T_0') = s(bool,X9) | s(bool,X5) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f2132,f518])).
fof(f35411,plain,(
  ( ! [X80,X78,X76,X74,X79,X77,X75,X73] : (p(s(bool,happ(s(fun(X74,bool),X75),s(X74,X76)))) | s(bool,X77) = s(bool,happ(s(fun(X74,bool),X75),s(X74,sK14(X75,X73,X74)))) | s(bool,'T_0') = s(bool,X77) | s(bool,X78) = s(bool,X79) | s(bool,X73) = s(bool,X79) | s(bool,X78) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(subsumption_resolution,[],[f35380,f219])).
fof(f35380,plain,(
  ( ! [X80,X78,X76,X74,X79,X77,X75,X73] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X74,bool),X75),s(X74,X76)))) | s(bool,X77) = s(bool,happ(s(fun(X74,bool),X75),s(X74,sK14(X75,X73,X74)))) | s(bool,'T_0') = s(bool,X77) | s(bool,X78) = s(bool,X79) | s(bool,X73) = s(bool,X79) | s(bool,X78) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f2132,f1507])).
fof(f35417,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,happ(s(fun(X1,bool),X2),s(X1,sK14(X2,'T_0',X1)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f35416])).
fof(f35416,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) = s(bool,happ(s(fun(X1,bool),X2),s(X1,sK14(X2,'T_0',X1)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X4)) )),
  inference(duplicate_literal_removal,[],[f35415])).
fof(f35415,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) = s(bool,happ(s(fun(X1,bool),X2),s(X1,sK14(X2,'T_0',X1)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X4)) )),
  inference(condensation,[],[f35414])).
fof(f35414,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,X0) = s(bool,happ(s(fun(X1,bool),X2),s(X1,sK14(X2,'T_0',X1)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,'T_0') = s(bool,X0) | s(bool,X4) = s(bool,happ(s(fun(X1,bool),X2),s(X1,sK14(X2,'T_0',X1)))) | s(bool,'T_0') = s(bool,X4) | s(bool,X0) = s(bool,X5)) )),
  inference(condensation,[],[f35413])).
fof(f35413,plain,(
  ( ! [X125,X123,X121,X118,X124,X122,X120,X119] : (p(s(bool,happ(s(fun(X119,bool),X120),s(X119,X121)))) | s(bool,X122) = s(bool,happ(s(fun(X119,bool),X120),s(X119,sK14(X120,'T_0',X119)))) | s(bool,'T_0') = s(bool,X122) | s(bool,X123) = s(bool,X124) | s(bool,X124) = s(bool,X125) | s(bool,'T_0') = s(bool,X125) | s(bool,X118) = s(bool,X123)) )),
  inference(subsumption_resolution,[],[f35386,f27469])).
fof(f35386,plain,(
  ( ! [X125,X123,X121,X118,X124,X122,X120,X119] : (~p(s(bool,X118)) | p(s(bool,happ(s(fun(X119,bool),X120),s(X119,X121)))) | s(bool,X122) = s(bool,happ(s(fun(X119,bool),X120),s(X119,sK14(X120,'T_0',X119)))) | s(bool,'T_0') = s(bool,X122) | s(bool,X123) = s(bool,X124) | s(bool,X124) = s(bool,X125) | s(bool,'T_0') = s(bool,X125) | s(bool,X118) = s(bool,X123)) )),
  inference(superposition,[],[f2132,f1507])).
fof(f35432,plain,(
  ( ! [X212,X210,X208,X215,X213,X211,X209,X214] : (p(s(bool,happ(s(fun(X212,bool),X213),s(X212,X214)))) | s(bool,X215) = s(bool,happ(s(fun(X212,bool),X213),s(X212,sK14(X213,'const.pred_set.SURJ_3'(s(fun(X208,X209),X210),s(fun(X208,bool),X211),s(fun(X209,bool),'const.pred_set.IMAGE_2'(s(fun(X208,X209),X210),s(fun(X208,bool),X211)))),X212)))) | s(bool,'T_0') = s(bool,X215)) )),
  inference(subsumption_resolution,[],[f35401,f219])).
fof(f35401,plain,(
  ( ! [X212,X210,X208,X215,X213,X211,X209,X214] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X212,bool),X213),s(X212,X214)))) | s(bool,X215) = s(bool,happ(s(fun(X212,bool),X213),s(X212,sK14(X213,'const.pred_set.SURJ_3'(s(fun(X208,X209),X210),s(fun(X208,bool),X211),s(fun(X209,bool),'const.pred_set.IMAGE_2'(s(fun(X208,X209),X210),s(fun(X208,bool),X211)))),X212)))) | s(bool,'T_0') = s(bool,X215)) )),
  inference(superposition,[],[f2132,f1203])).
fof(f35511,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) | s(bool,X9) = s(bool,happ(s(fun(X6,bool),X7),s(X6,sK15(X7,X5,X6)))) | s(bool,'T_0') = s(bool,X9) | s(bool,X5) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f35479,f219])).
fof(f35479,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) | s(bool,X9) = s(bool,happ(s(fun(X6,bool),X7),s(X6,sK15(X7,X5,X6)))) | s(bool,'T_0') = s(bool,X9) | s(bool,X5) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f2133,f518])).
fof(f35520,plain,(
  ( ! [X80,X78,X76,X74,X79,X77,X75,X73] : (p(s(bool,happ(s(fun(X74,bool),X75),s(X74,X76)))) | s(bool,X77) = s(bool,happ(s(fun(X74,bool),X75),s(X74,sK15(X75,X73,X74)))) | s(bool,'T_0') = s(bool,X77) | s(bool,X78) = s(bool,X79) | s(bool,X73) = s(bool,X79) | s(bool,X78) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(subsumption_resolution,[],[f35489,f219])).
fof(f35489,plain,(
  ( ! [X80,X78,X76,X74,X79,X77,X75,X73] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X74,bool),X75),s(X74,X76)))) | s(bool,X77) = s(bool,happ(s(fun(X74,bool),X75),s(X74,sK15(X75,X73,X74)))) | s(bool,'T_0') = s(bool,X77) | s(bool,X78) = s(bool,X79) | s(bool,X73) = s(bool,X79) | s(bool,X78) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f2133,f1507])).
fof(f35526,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,happ(s(fun(X1,bool),X2),s(X1,sK15(X2,'T_0',X1)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f35525])).
fof(f35525,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) = s(bool,happ(s(fun(X1,bool),X2),s(X1,sK15(X2,'T_0',X1)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X4)) )),
  inference(duplicate_literal_removal,[],[f35524])).
fof(f35524,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) = s(bool,happ(s(fun(X1,bool),X2),s(X1,sK15(X2,'T_0',X1)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X4)) )),
  inference(condensation,[],[f35523])).
fof(f35523,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,X0) = s(bool,happ(s(fun(X1,bool),X2),s(X1,sK15(X2,'T_0',X1)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,'T_0') = s(bool,X0) | s(bool,X4) = s(bool,happ(s(fun(X1,bool),X2),s(X1,sK15(X2,'T_0',X1)))) | s(bool,'T_0') = s(bool,X4) | s(bool,X0) = s(bool,X5)) )),
  inference(condensation,[],[f35522])).
fof(f35522,plain,(
  ( ! [X125,X123,X121,X118,X124,X122,X120,X119] : (p(s(bool,happ(s(fun(X119,bool),X120),s(X119,X121)))) | s(bool,X122) = s(bool,happ(s(fun(X119,bool),X120),s(X119,sK15(X120,'T_0',X119)))) | s(bool,'T_0') = s(bool,X122) | s(bool,X123) = s(bool,X124) | s(bool,X124) = s(bool,X125) | s(bool,'T_0') = s(bool,X125) | s(bool,X118) = s(bool,X123)) )),
  inference(subsumption_resolution,[],[f35495,f27469])).
fof(f35495,plain,(
  ( ! [X125,X123,X121,X118,X124,X122,X120,X119] : (~p(s(bool,X118)) | p(s(bool,happ(s(fun(X119,bool),X120),s(X119,X121)))) | s(bool,X122) = s(bool,happ(s(fun(X119,bool),X120),s(X119,sK15(X120,'T_0',X119)))) | s(bool,'T_0') = s(bool,X122) | s(bool,X123) = s(bool,X124) | s(bool,X124) = s(bool,X125) | s(bool,'T_0') = s(bool,X125) | s(bool,X118) = s(bool,X123)) )),
  inference(superposition,[],[f2133,f1507])).
fof(f35541,plain,(
  ( ! [X212,X210,X208,X215,X213,X211,X209,X214] : (p(s(bool,happ(s(fun(X212,bool),X213),s(X212,X214)))) | s(bool,X215) = s(bool,happ(s(fun(X212,bool),X213),s(X212,sK15(X213,'const.pred_set.SURJ_3'(s(fun(X208,X209),X210),s(fun(X208,bool),X211),s(fun(X209,bool),'const.pred_set.IMAGE_2'(s(fun(X208,X209),X210),s(fun(X208,bool),X211)))),X212)))) | s(bool,'T_0') = s(bool,X215)) )),
  inference(subsumption_resolution,[],[f35510,f219])).
fof(f35510,plain,(
  ( ! [X212,X210,X208,X215,X213,X211,X209,X214] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X212,bool),X213),s(X212,X214)))) | s(bool,X215) = s(bool,happ(s(fun(X212,bool),X213),s(X212,sK15(X213,'const.pred_set.SURJ_3'(s(fun(X208,X209),X210),s(fun(X208,bool),X211),s(fun(X209,bool),'const.pred_set.IMAGE_2'(s(fun(X208,X209),X210),s(fun(X208,bool),X211)))),X212)))) | s(bool,'T_0') = s(bool,X215)) )),
  inference(superposition,[],[f2133,f1203])).
fof(f35592,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK16(X1,happ(s(fun(X0,bool),X1),s(X0,X2)),X0)))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(factoring,[],[f2134])).
fof(f35730,plain,(
  ( ! [X21,X19,X22,X20,X18] : (p(s(bool,X21)) | s(bool,X22) = s(bool,happ(s(fun(X18,bool),X19),s(X18,sK16(X19,X21,X18)))) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,happ(s(fun(X18,bool),X19),s(X18,X20)))) )),
  inference(subsumption_resolution,[],[f35630,f383])).
fof(f35630,plain,(
  ( ! [X21,X19,X22,X20,X18] : (p(s(bool,'F_0')) | p(s(bool,X21)) | s(bool,X22) = s(bool,happ(s(fun(X18,bool),X19),s(X18,sK16(X19,X21,X18)))) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,happ(s(fun(X18,bool),X19),s(X18,X20)))) )),
  inference(superposition,[],[f2134,f226])).
fof(f35736,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,X0)) | s(bool,X1) = s(bool,happ(s(fun(X2,bool),X3),s(X2,sK16(X3,X0,X2)))) | s(bool,'T_0') = s(bool,X1) | s(bool,X4) = s(bool,happ(s(fun(X2,bool),X3),s(X2,X5))) | s(bool,X4) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(condensation,[],[f35735])).
fof(f35735,plain,(
  ( ! [X80,X78,X76,X81,X79,X77,X75,X82] : (p(s(bool,X78)) | p(s(bool,X79)) | s(bool,X80) = s(bool,happ(s(fun(X75,bool),X76),s(X75,sK16(X76,X79,X75)))) | s(bool,'T_0') = s(bool,X80) | s(bool,X81) = s(bool,happ(s(fun(X75,bool),X76),s(X75,X77))) | s(bool,X81) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(subsumption_resolution,[],[f35639,f232])).
fof(f35639,plain,(
  ( ! [X80,X78,X76,X81,X79,X77,X75,X82] : (p(s(bool,X78)) | p(s(bool,X79)) | s(bool,X80) = s(bool,happ(s(fun(X75,bool),X76),s(X75,sK16(X76,X79,X75)))) | s(bool,'T_0') = s(bool,X80) | s(bool,X81) = s(bool,happ(s(fun(X75,bool),X76),s(X75,X77))) | s(bool,'T_0') = s(bool,X78) | s(bool,X81) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(superposition,[],[f2134,f1507])).
fof(f35747,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,X4) = s(bool,happ(s(fun(X1,bool),X2),s(X1,sK16(X2,X0,X1)))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f35647,f383])).
fof(f35647,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,X4) = s(bool,happ(s(fun(X1,bool),X2),s(X1,sK16(X2,X0,X1)))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2134,f226])).
fof(f35753,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK16(X1,X4,X0)))) | s(bool,'T_0') = s(bool,X3) | s(bool,X4) = s(bool,X5) | s(bool,X5) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(condensation,[],[f35752])).
fof(f35752,plain,(
  ( ! [X61,X59,X57,X64,X62,X60,X58,X63] : (p(s(bool,X58)) | p(s(bool,happ(s(fun(X59,bool),X60),s(X59,X61)))) | s(bool,X62) = s(bool,happ(s(fun(X59,bool),X60),s(X59,sK16(X60,X57,X59)))) | s(bool,'T_0') = s(bool,X62) | s(bool,X57) = s(bool,X63) | s(bool,X63) = s(bool,X64) | s(bool,'T_0') = s(bool,X64)) )),
  inference(subsumption_resolution,[],[f35656,f232])).
fof(f35656,plain,(
  ( ! [X61,X59,X57,X64,X62,X60,X58,X63] : (p(s(bool,X58)) | p(s(bool,happ(s(fun(X59,bool),X60),s(X59,X61)))) | s(bool,X62) = s(bool,happ(s(fun(X59,bool),X60),s(X59,sK16(X60,X57,X59)))) | s(bool,'T_0') = s(bool,X62) | s(bool,X57) = s(bool,X63) | s(bool,'T_0') = s(bool,X58) | s(bool,X63) = s(bool,X64) | s(bool,'T_0') = s(bool,X64)) )),
  inference(superposition,[],[f2134,f1507])).
fof(f35765,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK16(X1,'F_0',X0)))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(condensation,[],[f35764])).
fof(f35764,plain,(
  ( ! [X146,X149,X147,X150,X148] : (p(s(bool,X146)) | p(s(bool,happ(s(fun(X147,bool),X148),s(X147,X149)))) | s(bool,X150) = s(bool,happ(s(fun(X147,bool),X148),s(X147,sK16(X148,'F_0',X147)))) | s(bool,'T_0') = s(bool,X150)) )),
  inference(subsumption_resolution,[],[f35668,f232])).
fof(f35668,plain,(
  ( ! [X146,X149,X147,X150,X148] : (p(s(bool,X146)) | p(s(bool,happ(s(fun(X147,bool),X148),s(X147,X149)))) | s(bool,X150) = s(bool,happ(s(fun(X147,bool),X148),s(X147,sK16(X148,'F_0',X147)))) | s(bool,'T_0') = s(bool,X150) | s(bool,'T_0') = s(bool,X146)) )),
  inference(superposition,[],[f2134,f226])).
fof(f35766,plain,(
  ( ! [X163,X161,X162,X160] : (p(s(bool,happ(s(fun(X160,bool),X161),s(X160,X162)))) | s(bool,X163) = s(bool,happ(s(fun(X160,bool),X161),s(X160,sK16(X161,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),X160)))) | s(bool,'T_0') = s(bool,X163)) )),
  inference(subsumption_resolution,[],[f35671,f383])).
fof(f35671,plain,(
  ( ! [X163,X161,X162,X160] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun(X160,bool),X161),s(X160,X162)))) | s(bool,X163) = s(bool,happ(s(fun(X160,bool),X161),s(X160,sK16(X161,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),X160)))) | s(bool,'T_0') = s(bool,X163)) )),
  inference(superposition,[],[f2134,f418])).
fof(f35829,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK17(X1,happ(s(fun(X0,bool),X1),s(X0,X2)),X0)))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(factoring,[],[f2135])).
fof(f35967,plain,(
  ( ! [X21,X19,X22,X20,X18] : (p(s(bool,X21)) | s(bool,X22) = s(bool,happ(s(fun(X18,bool),X19),s(X18,sK17(X19,X21,X18)))) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,happ(s(fun(X18,bool),X19),s(X18,X20)))) )),
  inference(subsumption_resolution,[],[f35867,f383])).
fof(f35867,plain,(
  ( ! [X21,X19,X22,X20,X18] : (p(s(bool,'F_0')) | p(s(bool,X21)) | s(bool,X22) = s(bool,happ(s(fun(X18,bool),X19),s(X18,sK17(X19,X21,X18)))) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,happ(s(fun(X18,bool),X19),s(X18,X20)))) )),
  inference(superposition,[],[f2135,f226])).
fof(f35973,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,X0)) | s(bool,X1) = s(bool,happ(s(fun(X2,bool),X3),s(X2,sK17(X3,X0,X2)))) | s(bool,'T_0') = s(bool,X1) | s(bool,X4) = s(bool,happ(s(fun(X2,bool),X3),s(X2,X5))) | s(bool,X4) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(condensation,[],[f35972])).
fof(f35972,plain,(
  ( ! [X80,X78,X76,X81,X79,X77,X75,X82] : (p(s(bool,X78)) | p(s(bool,X79)) | s(bool,X80) = s(bool,happ(s(fun(X75,bool),X76),s(X75,sK17(X76,X79,X75)))) | s(bool,'T_0') = s(bool,X80) | s(bool,X81) = s(bool,happ(s(fun(X75,bool),X76),s(X75,X77))) | s(bool,X81) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(subsumption_resolution,[],[f35876,f232])).
fof(f35876,plain,(
  ( ! [X80,X78,X76,X81,X79,X77,X75,X82] : (p(s(bool,X78)) | p(s(bool,X79)) | s(bool,X80) = s(bool,happ(s(fun(X75,bool),X76),s(X75,sK17(X76,X79,X75)))) | s(bool,'T_0') = s(bool,X80) | s(bool,X81) = s(bool,happ(s(fun(X75,bool),X76),s(X75,X77))) | s(bool,'T_0') = s(bool,X78) | s(bool,X81) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(superposition,[],[f2135,f1507])).
fof(f35984,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,X4) = s(bool,happ(s(fun(X1,bool),X2),s(X1,sK17(X2,X0,X1)))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f35884,f383])).
fof(f35884,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,X4) = s(bool,happ(s(fun(X1,bool),X2),s(X1,sK17(X2,X0,X1)))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2135,f226])).
fof(f35990,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK17(X1,X4,X0)))) | s(bool,'T_0') = s(bool,X3) | s(bool,X4) = s(bool,X5) | s(bool,X5) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(condensation,[],[f35989])).
fof(f35989,plain,(
  ( ! [X61,X59,X57,X64,X62,X60,X58,X63] : (p(s(bool,X58)) | p(s(bool,happ(s(fun(X59,bool),X60),s(X59,X61)))) | s(bool,X62) = s(bool,happ(s(fun(X59,bool),X60),s(X59,sK17(X60,X57,X59)))) | s(bool,'T_0') = s(bool,X62) | s(bool,X57) = s(bool,X63) | s(bool,X63) = s(bool,X64) | s(bool,'T_0') = s(bool,X64)) )),
  inference(subsumption_resolution,[],[f35893,f232])).
fof(f35893,plain,(
  ( ! [X61,X59,X57,X64,X62,X60,X58,X63] : (p(s(bool,X58)) | p(s(bool,happ(s(fun(X59,bool),X60),s(X59,X61)))) | s(bool,X62) = s(bool,happ(s(fun(X59,bool),X60),s(X59,sK17(X60,X57,X59)))) | s(bool,'T_0') = s(bool,X62) | s(bool,X57) = s(bool,X63) | s(bool,'T_0') = s(bool,X58) | s(bool,X63) = s(bool,X64) | s(bool,'T_0') = s(bool,X64)) )),
  inference(superposition,[],[f2135,f1507])).
fof(f36002,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK17(X1,'F_0',X0)))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(condensation,[],[f36001])).
fof(f36001,plain,(
  ( ! [X146,X149,X147,X150,X148] : (p(s(bool,X146)) | p(s(bool,happ(s(fun(X147,bool),X148),s(X147,X149)))) | s(bool,X150) = s(bool,happ(s(fun(X147,bool),X148),s(X147,sK17(X148,'F_0',X147)))) | s(bool,'T_0') = s(bool,X150)) )),
  inference(subsumption_resolution,[],[f35905,f232])).
fof(f35905,plain,(
  ( ! [X146,X149,X147,X150,X148] : (p(s(bool,X146)) | p(s(bool,happ(s(fun(X147,bool),X148),s(X147,X149)))) | s(bool,X150) = s(bool,happ(s(fun(X147,bool),X148),s(X147,sK17(X148,'F_0',X147)))) | s(bool,'T_0') = s(bool,X150) | s(bool,'T_0') = s(bool,X146)) )),
  inference(superposition,[],[f2135,f226])).
fof(f36003,plain,(
  ( ! [X163,X161,X162,X160] : (p(s(bool,happ(s(fun(X160,bool),X161),s(X160,X162)))) | s(bool,X163) = s(bool,happ(s(fun(X160,bool),X161),s(X160,sK17(X161,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),X160)))) | s(bool,'T_0') = s(bool,X163)) )),
  inference(subsumption_resolution,[],[f35908,f383])).
fof(f35908,plain,(
  ( ! [X163,X161,X162,X160] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun(X160,bool),X161),s(X160,X162)))) | s(bool,X163) = s(bool,happ(s(fun(X160,bool),X161),s(X160,sK17(X161,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),X160)))) | s(bool,'T_0') = s(bool,X163)) )),
  inference(superposition,[],[f2135,f418])).
fof(f27664,plain,(
  ( ! [X1213,X1218,X1217,X1214,X1212,X1211,X1216,X1215] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(X1212,X1211),sK19(X1213,X1214,X1215,X1212,X1211)),s(fun(X1212,bool),X1215),s(fun(X1211,bool),X1214)))) | s(bool,X1216) = s(bool,X1217) | s(bool,X1217) = s(bool,'const.pred_set.SURJ_3'(s(fun(X1211,X1212),X1213),s(fun(X1211,bool),X1214),s(fun(X1212,bool),X1215))) | s(bool,X1216) = s(bool,X1218) | s(bool,'T_0') = s(bool,X1218)) )),
  inference(subsumption_resolution,[],[f23643,f219])).
fof(f23643,plain,(
  ( ! [X1213,X1218,X1217,X1214,X1212,X1211,X1216,X1215] : (~p(s(bool,'T_0')) | p(s(bool,'const.pred_set.INJ_3'(s(fun(X1212,X1211),sK19(X1213,X1214,X1215,X1212,X1211)),s(fun(X1212,bool),X1215),s(fun(X1211,bool),X1214)))) | s(bool,X1216) = s(bool,X1217) | s(bool,X1217) = s(bool,'const.pred_set.SURJ_3'(s(fun(X1211,X1212),X1213),s(fun(X1211,bool),X1214),s(fun(X1212,bool),X1215))) | s(bool,X1216) = s(bool,X1218) | s(bool,'T_0') = s(bool,X1218)) )),
  inference(superposition,[],[f306,f1507])).
fof(f27663,plain,(
  ( ! [X1203,X1207,X1205,X1210,X1208,X1202,X1206,X1204,X1209] : (~p(s(bool,'const.bool.IN_2'(s(X1203,X1207),s(fun(X1203,bool),X1206)))) | s(X1203,X1207) = s(X1203,happ(s(fun(X1202,X1203),X1204),s(X1202,happ(s(fun(X1203,X1202),sK19(X1204,X1205,X1206,X1203,X1202)),s(X1203,X1207))))) | s(bool,X1208) = s(bool,X1209) | s(bool,X1209) = s(bool,'const.pred_set.SURJ_3'(s(fun(X1202,X1203),X1204),s(fun(X1202,bool),X1205),s(fun(X1203,bool),X1206))) | s(bool,X1208) = s(bool,X1210) | s(bool,'T_0') = s(bool,X1210)) )),
  inference(subsumption_resolution,[],[f23642,f219])).
fof(f23642,plain,(
  ( ! [X1203,X1207,X1205,X1210,X1208,X1202,X1206,X1204,X1209] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X1203,X1207),s(fun(X1203,bool),X1206)))) | s(X1203,X1207) = s(X1203,happ(s(fun(X1202,X1203),X1204),s(X1202,happ(s(fun(X1203,X1202),sK19(X1204,X1205,X1206,X1203,X1202)),s(X1203,X1207))))) | s(bool,X1208) = s(bool,X1209) | s(bool,X1209) = s(bool,'const.pred_set.SURJ_3'(s(fun(X1202,X1203),X1204),s(fun(X1202,bool),X1205),s(fun(X1203,bool),X1206))) | s(bool,X1208) = s(bool,X1210) | s(bool,'T_0') = s(bool,X1210)) )),
  inference(superposition,[],[f307,f1507])).
fof(f2136,plain,(
  ( ! [X167,X165,X163,X161,X166,X164,X162] : (~p(s(bool,'const.bool.IN_2'(s(X162,X166),s(fun(X162,bool),X165)))) | s(X162,X166) = s(X162,happ(s(fun(X161,X162),X163),s(X161,happ(s(fun(X162,X161),sK19(X163,X164,X165,X162,X161)),s(X162,X166))))) | s(bool,X167) = s(bool,'const.pred_set.SURJ_3'(s(fun(X161,X162),X163),s(fun(X161,bool),X164),s(fun(X162,bool),X165))) | s(bool,'T_0') = s(bool,X167)) )),
  inference(subsumption_resolution,[],[f1776,f219])).
fof(f1776,plain,(
  ( ! [X167,X165,X163,X161,X166,X164,X162] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X162,X166),s(fun(X162,bool),X165)))) | s(X162,X166) = s(X162,happ(s(fun(X161,X162),X163),s(X161,happ(s(fun(X162,X161),sK19(X163,X164,X165,X162,X161)),s(X162,X166))))) | s(bool,X167) = s(bool,'const.pred_set.SURJ_3'(s(fun(X161,X162),X163),s(fun(X161,bool),X164),s(fun(X162,bool),X165))) | s(bool,'T_0') = s(bool,X167)) )),
  inference(superposition,[],[f307,f518])).
fof(f307,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X4),s(fun(X0,bool),X3),s(fun(X1,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),X2)))) | s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(X1,X6)))))) )),
  inference(cnf_transformation,[],[f184])).
fof(f2137,plain,(
  ( ! [X173,X171,X169,X172,X170,X168] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(X169,X168),sK19(X170,X171,X172,X169,X168)),s(fun(X169,bool),X172),s(fun(X168,bool),X171)))) | s(bool,X173) = s(bool,'const.pred_set.SURJ_3'(s(fun(X168,X169),X170),s(fun(X168,bool),X171),s(fun(X169,bool),X172))) | s(bool,'T_0') = s(bool,X173)) )),
  inference(subsumption_resolution,[],[f1777,f219])).
fof(f1777,plain,(
  ( ! [X173,X171,X169,X172,X170,X168] : (~p(s(bool,'T_0')) | p(s(bool,'const.pred_set.INJ_3'(s(fun(X169,X168),sK19(X170,X171,X172,X169,X168)),s(fun(X169,bool),X172),s(fun(X168,bool),X171)))) | s(bool,X173) = s(bool,'const.pred_set.SURJ_3'(s(fun(X168,X169),X170),s(fun(X168,bool),X171),s(fun(X169,bool),X172))) | s(bool,'T_0') = s(bool,X173)) )),
  inference(superposition,[],[f306,f518])).
fof(f5743,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) | s(X1,X4) = s(X1,happ(s(fun(X0,X1),X2),s(X0,happ(s(fun(X1,X0),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)),X1,X0)),s(X1,X4)))))) )),
  inference(subsumption_resolution,[],[f5666,f219])).
fof(f5666,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) | s(X1,X4) = s(X1,happ(s(fun(X0,X1),X2),s(X0,happ(s(fun(X1,X0),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)),X1,X0)),s(X1,X4)))))) )),
  inference(superposition,[],[f307,f1203])).
fof(f36092,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X1,f(s(bool,X0))) != s(X1,g(s(bool,X0))) | s(fun(bool,X1),X2) = s(fun(bool,X1),X3) | s(bool,X4) = s(bool,sK18(X2,X3,X1,bool)) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X0) = s(bool,X5)) )),
  inference(superposition,[],[f1798,f1507])).
fof(f34559,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'T_0'))) | ($spl57 | $spl64)),
  inference(forward_demodulation,[],[f18730,f18796])).
fof(f31647,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'|dollar|exists_1'(s(fun(X1,bool),X2))) | s(bool,X0) = s(bool,'|dollar|exists_1'(s(fun(X1,bool),X2))) | s(bool,'T_0') = s(bool,happ(s(fun(X1,bool),X2),s(X1,'const.min.@_1'(s(fun(X1,bool),X2)))))) )),
  inference(equality_factoring,[],[f1491])).
fof(f32738,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,happ(s(fun(X1,bool),X2),s(X1,'const.min.@_1'(s(fun(X1,bool),X2))))) | s(bool,X0) = s(bool,happ(s(fun(X1,bool),X2),s(X1,'const.min.@_1'(s(fun(X1,bool),X2))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X1,bool),X2)))) )),
  inference(equality_factoring,[],[f1520])).
fof(f33794,plain,(
  ( ! [X745,X743,X744,X746,X742] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X745)))) | p(s(bool,happ(s(fun(X742,bool),X743),s(X742,X746)))) | p(s(bool,X744)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X745))) = s(bool,happ(s(fun(bool,bool),X745),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(X742,bool),X743),s(X742,sK17(X743,X744,X742))))) )),
  inference(superposition,[],[f271,f1782])).
fof(f33793,plain,(
  ( ! [X738,X741,X737,X739,X740] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X740)))) | p(s(bool,happ(s(fun(X737,bool),X738),s(X737,X741)))) | p(s(bool,X739)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X740))) = s(bool,happ(s(fun(bool,bool),X740),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(X737,bool),X738),s(X737,sK16(X738,X739,X737))))) )),
  inference(superposition,[],[f269,f1782])).
fof(f33792,plain,(
  ( ! [X736,X732,X734,X733,X735] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X735)))) | p(s(bool,happ(s(fun(X732,bool),X733),s(X732,X736)))) | ~p(s(bool,X734)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X735))) = s(bool,happ(s(fun(bool,bool),X735),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(X732,bool),X733),s(X732,sK15(X733,X734,X732))))) )),
  inference(superposition,[],[f268,f1782])).
fof(f33791,plain,(
  ( ! [X728,X730,X729,X731,X727] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X730)))) | p(s(bool,happ(s(fun(X727,bool),X728),s(X727,X731)))) | ~p(s(bool,X729)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X730))) = s(bool,happ(s(fun(bool,bool),X730),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(X727,bool),X728),s(X727,sK14(X728,X729,X727))))) )),
  inference(superposition,[],[f266,f1782])).
fof(f33619,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X80)))) | ~sP7(X79,X81,X82) | sP8(X79,X81,X82) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X80))) = s(bool,happ(s(fun(bool,bool),X80),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X79)) )),
  inference(superposition,[],[f376,f1782])).
fof(f33618,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X76)))) | ~sP9(X75,X77,X78) | sP10(X75,X77,X78) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X76))) = s(bool,happ(s(fun(bool,bool),X76),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X75)) )),
  inference(superposition,[],[f375,f1782])).
fof(f33604,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X23)))) | sP0(X22,X24) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X23))) = s(bool,happ(s(fun(bool,bool),X23),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f281,f1782])).
fof(f33603,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X20)))) | sP0(X21,X19) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X20))) = s(bool,happ(s(fun(bool,bool),X20),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X19)) )),
  inference(superposition,[],[f280,f1782])).
fof(f34203,plain,(
  ( ! [X99] : (s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X99))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X99))) = s(bool,happ(s(fun(bool,bool),X99),s(bool,'T_0')))) )),
  inference(subsumption_resolution,[],[f33400,f412])).
fof(f33400,plain,(
  ( ! [X99] : (s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X99))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X99))) = s(bool,happ(s(fun(bool,bool),X99),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) )),
  inference(superposition,[],[f1782,f418])).
fof(f30868,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,'const.pred_set.INJ_3'(s(fun(sK11,'type.num.num'),X1),s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f30850,f383])).
fof(f30850,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s(bool,X0) = s(bool,'const.pred_set.INJ_3'(s(fun(sK11,'type.num.num'),X1),s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2138,f418])).
fof(f24822,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X2) = s(bool,X3) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,X2)) )),
  inference(equality_factoring,[],[f1507])).
fof(f27806,plain,(
  ( ! [X2,X0,X1] : (s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f24815,f518])).
fof(f24815,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X2)) )),
  inference(equality_factoring,[],[f1507])).
fof(f23671,plain,(
  ( ! [X1369,X1371,X1373,X1370,X1372,X1374] : (s(X1371,f(s(bool,'T_0'))) != s(X1371,g(s(bool,'T_0'))) | s(fun(bool,X1371),X1369) = s(fun(bool,X1371),X1370) | s(bool,X1372) = s(bool,X1373) | s(bool,X1373) = s(bool,sK18(X1369,X1370,X1371,bool)) | s(bool,X1372) = s(bool,X1374) | s(bool,'T_0') = s(bool,X1374)) )),
  inference(superposition,[],[f305,f1507])).
fof(f27646,plain,(
  ( ! [X127,X132,X130,X128,X131,X129] : (~sP7(X127,X128,X129) | sP8(X127,X128,X129) | s(bool,X130) = s(bool,X131) | s(bool,X127) = s(bool,X131) | s(bool,X130) = s(bool,X132) | s(bool,'T_0') = s(bool,X132)) )),
  inference(subsumption_resolution,[],[f23387,f219])).
fof(f23387,plain,(
  ( ! [X127,X132,X130,X128,X131,X129] : (~p(s(bool,'T_0')) | ~sP7(X127,X128,X129) | sP8(X127,X128,X129) | s(bool,X130) = s(bool,X131) | s(bool,X127) = s(bool,X131) | s(bool,X130) = s(bool,X132) | s(bool,'T_0') = s(bool,X132)) )),
  inference(superposition,[],[f376,f1507])).
fof(f27645,plain,(
  ( ! [X125,X123,X121,X126,X124,X122] : (~sP9(X121,X122,X123) | sP10(X121,X122,X123) | s(bool,X124) = s(bool,X125) | s(bool,X121) = s(bool,X125) | s(bool,X124) = s(bool,X126) | s(bool,'T_0') = s(bool,X126)) )),
  inference(subsumption_resolution,[],[f23386,f219])).
fof(f23386,plain,(
  ( ! [X125,X123,X121,X126,X124,X122] : (~p(s(bool,'T_0')) | ~sP9(X121,X122,X123) | sP10(X121,X122,X123) | s(bool,X124) = s(bool,X125) | s(bool,X121) = s(bool,X125) | s(bool,X124) = s(bool,X126) | s(bool,'T_0') = s(bool,X126)) )),
  inference(superposition,[],[f375,f1507])).
fof(f27644,plain,(
  ( ! [X118,X116,X120,X119,X117,X115] : (~p(s(bool,X116)) | p(s(bool,X117)) | ~sP10(X115,X117,X116) | s(bool,X118) = s(bool,X119) | s(bool,X115) = s(bool,X119) | s(bool,X118) = s(bool,X120) | s(bool,'T_0') = s(bool,X120)) )),
  inference(subsumption_resolution,[],[f23385,f219])).
fof(f23385,plain,(
  ( ! [X118,X116,X120,X119,X117,X115] : (~p(s(bool,'T_0')) | ~p(s(bool,X116)) | p(s(bool,X117)) | ~sP10(X115,X117,X116) | s(bool,X118) = s(bool,X119) | s(bool,X115) = s(bool,X119) | s(bool,X118) = s(bool,X120) | s(bool,'T_0') = s(bool,X120)) )),
  inference(superposition,[],[f372,f1507])).
fof(f27643,plain,(
  ( ! [X111,X109,X114,X112,X110,X113] : (~p(s(bool,X110)) | sP10(X109,X110,X111) | s(bool,X112) = s(bool,X113) | s(bool,X109) = s(bool,X113) | s(bool,X112) = s(bool,X114) | s(bool,'T_0') = s(bool,X114)) )),
  inference(subsumption_resolution,[],[f23384,f219])).
fof(f23384,plain,(
  ( ! [X111,X109,X114,X112,X110,X113] : (~p(s(bool,'T_0')) | ~p(s(bool,X110)) | sP10(X109,X110,X111) | s(bool,X112) = s(bool,X113) | s(bool,X109) = s(bool,X113) | s(bool,X112) = s(bool,X114) | s(bool,'T_0') = s(bool,X114)) )),
  inference(superposition,[],[f371,f1507])).
fof(f27642,plain,(
  ( ! [X103,X107,X105,X108,X106,X104] : (p(s(bool,X104)) | sP10(X103,X105,X104) | s(bool,X106) = s(bool,X107) | s(bool,X103) = s(bool,X107) | s(bool,X106) = s(bool,X108) | s(bool,'T_0') = s(bool,X108)) )),
  inference(subsumption_resolution,[],[f23383,f219])).
fof(f23383,plain,(
  ( ! [X103,X107,X105,X108,X106,X104] : (~p(s(bool,'T_0')) | p(s(bool,X104)) | sP10(X103,X105,X104) | s(bool,X106) = s(bool,X107) | s(bool,X103) = s(bool,X107) | s(bool,X106) = s(bool,X108) | s(bool,'T_0') = s(bool,X108)) )),
  inference(superposition,[],[f370,f1507])).
fof(f27641,plain,(
  ( ! [X101,X99,X97,X102,X100,X98] : (p(s(bool,X98)) | ~p(s(bool,X99)) | ~sP9(X99,X98,X97) | s(bool,X100) = s(bool,X101) | s(bool,X97) = s(bool,X101) | s(bool,X100) = s(bool,X102) | s(bool,'T_0') = s(bool,X102)) )),
  inference(subsumption_resolution,[],[f23382,f219])).
fof(f23382,plain,(
  ( ! [X101,X99,X97,X102,X100,X98] : (~p(s(bool,'T_0')) | p(s(bool,X98)) | ~p(s(bool,X99)) | ~sP9(X99,X98,X97) | s(bool,X100) = s(bool,X101) | s(bool,X97) = s(bool,X101) | s(bool,X100) = s(bool,X102) | s(bool,'T_0') = s(bool,X102)) )),
  inference(superposition,[],[f365,f1507])).
fof(f27640,plain,(
  ( ! [X94,X92,X95,X93,X91,X96] : (p(s(bool,X92)) | p(s(bool,X93)) | ~sP8(X91,X93,X92) | s(bool,X94) = s(bool,X95) | s(bool,X91) = s(bool,X95) | s(bool,X94) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(subsumption_resolution,[],[f23381,f219])).
fof(f23381,plain,(
  ( ! [X94,X92,X95,X93,X91,X96] : (~p(s(bool,'T_0')) | p(s(bool,X92)) | p(s(bool,X93)) | ~sP8(X91,X93,X92) | s(bool,X94) = s(bool,X95) | s(bool,X91) = s(bool,X95) | s(bool,X94) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(superposition,[],[f355,f1507])).
fof(f27639,plain,(
  ( ! [X90,X88,X87,X85,X89,X86] : (~p(s(bool,X86)) | sP8(X85,X86,X87) | s(bool,X88) = s(bool,X89) | s(bool,X85) = s(bool,X89) | s(bool,X88) = s(bool,X90) | s(bool,'T_0') = s(bool,X90)) )),
  inference(subsumption_resolution,[],[f23380,f219])).
fof(f23380,plain,(
  ( ! [X90,X88,X87,X85,X89,X86] : (~p(s(bool,'T_0')) | ~p(s(bool,X86)) | sP8(X85,X86,X87) | s(bool,X88) = s(bool,X89) | s(bool,X85) = s(bool,X89) | s(bool,X88) = s(bool,X90) | s(bool,'T_0') = s(bool,X90)) )),
  inference(superposition,[],[f354,f1507])).
fof(f27638,plain,(
  ( ! [X80,X83,X81,X79,X84,X82] : (~p(s(bool,X80)) | sP8(X79,X81,X80) | s(bool,X82) = s(bool,X83) | s(bool,X79) = s(bool,X83) | s(bool,X82) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(subsumption_resolution,[],[f23379,f219])).
fof(f23379,plain,(
  ( ! [X80,X83,X81,X79,X84,X82] : (~p(s(bool,'T_0')) | ~p(s(bool,X80)) | sP8(X79,X81,X80) | s(bool,X82) = s(bool,X83) | s(bool,X79) = s(bool,X83) | s(bool,X82) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(superposition,[],[f353,f1507])).
fof(f27637,plain,(
  ( ! [X78,X76,X74,X77,X75,X73] : (p(s(bool,X74)) | p(s(bool,X75)) | ~sP7(X73,X74,X75) | s(bool,X76) = s(bool,X77) | s(bool,X73) = s(bool,X77) | s(bool,X76) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(subsumption_resolution,[],[f23378,f219])).
fof(f23378,plain,(
  ( ! [X78,X76,X74,X77,X75,X73] : (~p(s(bool,'T_0')) | p(s(bool,X74)) | p(s(bool,X75)) | ~sP7(X73,X74,X75) | s(bool,X76) = s(bool,X77) | s(bool,X73) = s(bool,X77) | s(bool,X76) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f348,f1507])).
fof(f27636,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X68)) | p(s(bool,X69)) | ~sP4(X68,X67,X69) | s(bool,X70) = s(bool,X71) | s(bool,X67) = s(bool,X71) | s(bool,X70) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(subsumption_resolution,[],[f23377,f219])).
fof(f23377,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,'T_0')) | ~p(s(bool,X68)) | p(s(bool,X69)) | ~sP4(X68,X67,X69) | s(bool,X70) = s(bool,X71) | s(bool,X67) = s(bool,X71) | s(bool,X70) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(superposition,[],[f329,f1507])).
fof(f27635,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (~p(s(bool,X62)) | p(s(bool,X63)) | ~sP5(X62,X61,X63) | s(bool,X64) = s(bool,X65) | s(bool,X61) = s(bool,X65) | s(bool,X64) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(subsumption_resolution,[],[f23376,f219])).
fof(f23376,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (~p(s(bool,'T_0')) | ~p(s(bool,X62)) | p(s(bool,X63)) | ~sP5(X62,X61,X63) | s(bool,X64) = s(bool,X65) | s(bool,X61) = s(bool,X65) | s(bool,X64) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f325,f1507])).
fof(f27634,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (~p(s(bool,X56)) | sP2(X57,X56,X55) | s(bool,X58) = s(bool,X59) | s(bool,X55) = s(bool,X59) | s(bool,X58) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(subsumption_resolution,[],[f23375,f219])).
fof(f23375,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X56)) | sP2(X57,X56,X55) | s(bool,X58) = s(bool,X59) | s(bool,X55) = s(bool,X59) | s(bool,X58) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f310,f1507])).
fof(f27633,plain,(
  ( ! [X54,X52,X50,X53,X51] : (p(s(bool,X51)) | sP1(X51,X50) | s(bool,X52) = s(bool,X53) | s(bool,X50) = s(bool,X53) | s(bool,X52) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f23374,f219])).
fof(f23374,plain,(
  ( ! [X54,X52,X50,X53,X51] : (~p(s(bool,'T_0')) | p(s(bool,X51)) | sP1(X51,X50) | s(bool,X52) = s(bool,X53) | s(bool,X50) = s(bool,X53) | s(bool,X52) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f299,f1507])).
fof(f27632,plain,(
  ( ! [X47,X45,X48,X46,X49] : (p(s(bool,X46)) | sP1(X45,X46) | s(bool,X47) = s(bool,X48) | s(bool,X45) = s(bool,X48) | s(bool,X47) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(subsumption_resolution,[],[f23373,f219])).
fof(f23373,plain,(
  ( ! [X47,X45,X48,X46,X49] : (~p(s(bool,'T_0')) | p(s(bool,X46)) | sP1(X45,X46) | s(bool,X47) = s(bool,X48) | s(bool,X45) = s(bool,X48) | s(bool,X47) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(superposition,[],[f296,f1507])).
fof(f27631,plain,(
  ( ! [X43,X41,X44,X42,X40] : (sP0(X40,X41) | s(bool,X42) = s(bool,X43) | s(bool,X40) = s(bool,X43) | s(bool,X42) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(subsumption_resolution,[],[f23372,f219])).
fof(f23372,plain,(
  ( ! [X43,X41,X44,X42,X40] : (~p(s(bool,'T_0')) | sP0(X40,X41) | s(bool,X42) = s(bool,X43) | s(bool,X40) = s(bool,X43) | s(bool,X42) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f281,f1507])).
fof(f27630,plain,(
  ( ! [X39,X37,X35,X38,X36] : (sP0(X36,X35) | s(bool,X37) = s(bool,X38) | s(bool,X35) = s(bool,X38) | s(bool,X37) = s(bool,X39) | s(bool,'T_0') = s(bool,X39)) )),
  inference(subsumption_resolution,[],[f23371,f219])).
fof(f23371,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'T_0')) | sP0(X36,X35) | s(bool,X37) = s(bool,X38) | s(bool,X35) = s(bool,X38) | s(bool,X37) = s(bool,X39) | s(bool,'T_0') = s(bool,X39)) )),
  inference(superposition,[],[f280,f1507])).
fof(f27629,plain,(
  ( ! [X30,X33,X31,X34,X32] : (~p(s(bool,X31)) | s(bool,X30) = s(bool,X31) | s(bool,X32) = s(bool,X33) | s(bool,X30) = s(bool,X33) | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f23370,f219])).
fof(f23370,plain,(
  ( ! [X30,X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X31)) | s(bool,X30) = s(bool,X31) | s(bool,X32) = s(bool,X33) | s(bool,X30) = s(bool,X33) | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f276,f1507])).
fof(f27628,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,X12) | s(bool,X13) = s(bool,X14) | s(bool,X12) = s(bool,X14) | s(bool,X13) = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) )),
  inference(subsumption_resolution,[],[f23366,f219])).
fof(f23366,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X12) | s(bool,X13) = s(bool,X14) | s(bool,X12) = s(bool,X14) | s(bool,X13) = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f236,f1507])).
fof(f23191,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s(bool,X4) != s(bool,X5) | p(s(bool,X5)) | s(bool,X6) = s(bool,X7) | s(bool,X4) = s(bool,X7) | s(bool,X6) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f232,f1507])).
fof(f23189,plain,(
  ( ! [X1341,X1343,X1338,X1340,X1342,X1339] : (s(X1340,f(s(bool,X1341))) != s(X1340,g(s(bool,X1341))) | s(fun(bool,X1340),X1338) = s(fun(bool,X1340),X1339) | s(bool,X1341) = s(bool,X1342) | s(bool,'T_0') = s(bool,sK18(X1338,X1339,X1340,bool)) | s(bool,X1342) = s(bool,X1343) | s(bool,'T_0') = s(bool,X1343)) )),
  inference(superposition,[],[f305,f1507])).
fof(f27591,plain,(
  ( ! [X741,X743,X739,X740,X742] : (s(bool,X739) != s(bool,X740) | s(bool,X740) = s(bool,X741) | s(bool,'T_0') = s(bool,X741) | s(bool,X739) = s(bool,X742) | s(bool,X742) = s(bool,X743) | s(bool,'T_0') = s(bool,X743)) )),
  inference(subsumption_resolution,[],[f23057,f411])).
fof(f23057,plain,(
  ( ! [X741,X743,X739,X740,X742] : (s(bool,X739) != s(bool,X740) | s(bool,X740) = s(bool,X741) | s(bool,'T_0') = s(bool,X741) | s(bool,X739) = s(bool,X742) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X742) = s(bool,X743) | s(bool,'T_0') = s(bool,X743)) )),
  inference(superposition,[],[f2110,f1507])).
fof(f27590,plain,(
  ( ! [X734,X733,X735] : (s(bool,'T_0') != s(bool,X733) | s(bool,X733) = s(bool,X734) | s(bool,X734) = s(bool,X735) | s(bool,'T_0') = s(bool,X735)) )),
  inference(subsumption_resolution,[],[f23055,f411])).
fof(f23055,plain,(
  ( ! [X734,X733,X735] : (s(bool,'T_0') != s(bool,X733) | s(bool,X733) = s(bool,X734) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X734) = s(bool,X735) | s(bool,'T_0') = s(bool,X735)) )),
  inference(superposition,[],[f411,f1507])).
fof(f22874,plain,(
  ( ! [X1395,X1397,X1399,X1400,X1396,X1398] : (s(X1397,f(s(bool,X1398))) != s(X1397,g(s(bool,X1398))) | s(fun(bool,X1397),X1395) = s(fun(bool,X1397),X1396) | s(bool,X1399) = s(bool,sK18(X1395,X1396,X1397,bool)) | s(bool,'T_0') = s(bool,X1398) | s(bool,X1399) = s(bool,X1400) | s(bool,'T_0') = s(bool,X1400)) )),
  inference(superposition,[],[f305,f1507])).
fof(f27469,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X0)) | s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(condensation,[],[f27468])).
fof(f27468,plain,(
  ( ! [X24,X23,X21,X22,X20] : (p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X20) = s(bool,X22) | s(bool,X20) = s(bool,X23) | s(bool,X23) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f22565,f232])).
fof(f22565,plain,(
  ( ! [X24,X23,X21,X22,X20] : (p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X20) = s(bool,X22) | s(bool,X20) = s(bool,X23) | s(bool,'T_0') = s(bool,X21) | s(bool,X23) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f273,f1507])).
fof(f22244,plain,(
  ( ! [X1395,X1397,X1399,X1400,X1396,X1398] : (s(X1397,f(s(bool,X1398))) != s(X1397,g(s(bool,X1398))) | s(fun(bool,X1397),X1395) = s(fun(bool,X1397),X1396) | s(bool,X1398) = s(bool,X1399) | s(bool,'T_0') = s(bool,X1399) | s(bool,X1400) = s(bool,sK18(X1395,X1396,X1397,bool)) | s(bool,'T_0') = s(bool,X1400)) )),
  inference(superposition,[],[f305,f1507])).
fof(f21786,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X2) = s(bool,X3) | s(bool,X1) = s(bool,X3) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X0) = s(bool,X5)) )),
  inference(superposition,[],[f1507,f1507])).
fof(f26887,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) )),
  inference(condensation,[],[f26886])).
fof(f26886,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,X25) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,X25) = s(bool,X26) | s(bool,'T_0') = s(bool,X24) | s(bool,X26) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(duplicate_literal_removal,[],[f21757])).
fof(f21757,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,X25) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,X25) = s(bool,X26) | s(bool,'T_0') = s(bool,X24) | s(bool,X26) = s(bool,X27) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f1507,f785])).
fof(f26901,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) )),
  inference(condensation,[],[f26900])).
fof(f26900,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X0) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(duplicate_literal_removal,[],[f21752])).
fof(f21752,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X0) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1507,f226])).
fof(f21682,plain,(
  ( ! [X163,X161,X159,X162,X160] : (s(bool,X161) = s(bool,'|dollar|exists_1'(s(fun(X159,bool),X160))) | s(bool,X161) = s(bool,X162) | s(bool,'T_0') = s(bool,X162) | s(bool,X163) = s(bool,happ(s(fun(X159,bool),X160),s(X159,'const.min.@_1'(s(fun(X159,bool),X160))))) | s(bool,'T_0') = s(bool,X163)) )),
  inference(superposition,[],[f1507,f259])).
fof(f27085,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2) | s(bool,X3) = s(bool,X4) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X5) | s(bool,X1) = s(bool,X3)) )),
  inference(condensation,[],[f27084])).
fof(f27084,plain,(
  ( ! [X94,X92,X90,X88,X93,X91,X89] : (s(bool,X88) = s(bool,X89) | s(bool,X89) = s(bool,X90) | s(bool,'T_0') = s(bool,X90) | s(bool,'T_0') = s(bool,X91) | s(bool,X92) = s(bool,X93) | s(bool,X93) = s(bool,X94) | s(bool,'T_0') = s(bool,X94) | s(bool,X88) = s(bool,X92)) )),
  inference(duplicate_literal_removal,[],[f21665])).
fof(f21665,plain,(
  ( ! [X94,X92,X90,X88,X93,X91,X89] : (s(bool,X88) = s(bool,X89) | s(bool,X89) = s(bool,X90) | s(bool,'T_0') = s(bool,X90) | s(bool,'T_0') = s(bool,X91) | s(bool,'T_0') = s(bool,X91) | s(bool,X92) = s(bool,X93) | s(bool,X93) = s(bool,X94) | s(bool,'T_0') = s(bool,X94) | s(bool,X88) = s(bool,X92)) )),
  inference(superposition,[],[f1507,f1507])).
fof(f18776,plain,(
  ( ! [X0,X1] : (s(bool,f(s(bool,X0))) != s(bool,g(s(bool,X0))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | $spl57),
  inference(superposition,[],[f18730,f518])).
fof(f18772,plain,(
  sP6('F_0',g(s(bool,'T_0')),f(s(bool,'T_0'))) | $spl57),
  inference(unit_resulting_resolution,[],[f383,f18730,f337])).
fof(f18773,plain,(
  ~sP6('T_0',g(s(bool,'T_0')),f(s(bool,'T_0'))) | $spl57),
  inference(unit_resulting_resolution,[],[f219,f18730,f339])).
fof(f18774,plain,(
  sP6('F_0',f(s(bool,'T_0')),g(s(bool,'T_0'))) | $spl57),
  inference(unit_resulting_resolution,[],[f383,f18730,f337])).
fof(f18775,plain,(
  ~sP6('T_0',f(s(bool,'T_0')),g(s(bool,'T_0'))) | $spl57),
  inference(unit_resulting_resolution,[],[f219,f18730,f339])).
fof(f18311,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (s(bool,X71) = s(bool,'const.pred_set.SURJ_3'(s(fun(X67,X68),X69),s(fun(X67,bool),X70),s(fun(X68,bool),'const.pred_set.IMAGE_2'(s(fun(X67,X68),X69),s(fun(X67,bool),X70))))) | s(bool,X71) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(subsumption_resolution,[],[f18281,f219])).
fof(f18281,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,'T_0')) | s(bool,X71) = s(bool,'const.pred_set.SURJ_3'(s(fun(X67,X68),X69),s(fun(X67,bool),X70),s(fun(X68,bool),'const.pred_set.IMAGE_2'(s(fun(X67,X68),X69),s(fun(X67,bool),X70))))) | s(bool,X71) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(superposition,[],[f2111,f1203])).
fof(f18152,plain,(
  ( ! [X59,X58] : (s(bool,X58) != s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,X58) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) )),
  inference(subsumption_resolution,[],[f18130,f383])).
fof(f18130,plain,(
  ( ! [X59,X58] : (p(s(bool,'F_0')) | s(bool,X58) != s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,X58) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) )),
  inference(superposition,[],[f1693,f418])).
fof(f16475,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) )),
  inference(unit_resulting_resolution,[],[f219,f1247,f1246,f1257,f322])).
fof(f15642,plain,(
  ( ! [X47,X46] : (sP1('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),X46) | s(bool,X46) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f15628,f383])).
fof(f15628,plain,(
  ( ! [X47,X46] : (p(s(bool,'F_0')) | sP1('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),X46) | s(bool,X46) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f2115,f418])).
fof(f15634,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f15614,f383])).
fof(f15614,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | sP1(X0,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2115,f226])).
fof(f1520,plain,(
  ( ! [X23,X21,X22] : (s(bool,X23) = s(bool,happ(s(fun(X21,bool),X22),s(X21,'const.min.@_1'(s(fun(X21,bool),X22))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X21,bool),X22))) | s(bool,'T_0') = s(bool,X23)) )),
  inference(superposition,[],[f518,f259])).
fof(f1521,plain,(
  ( ! [X24,X25] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X24))) | s(bool,X25) = s(bool,happ(s(fun(bool,bool),X24),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X24)))) )),
  inference(superposition,[],[f518,f1077])).
fof(f2129,plain,(
  ( ! [X90,X88,X91,X89] : (s(bool,X88) = s(bool,'|dollar|exists_1'(s(fun(X89,bool),X90))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X89,bool),X90))) | s(bool,X88) = s(bool,X91) | s(bool,'T_0') = s(bool,X91)) )),
  inference(subsumption_resolution,[],[f1749,f219])).
fof(f1749,plain,(
  ( ! [X90,X88,X91,X89] : (~p(s(bool,'T_0')) | s(bool,X88) = s(bool,'|dollar|exists_1'(s(fun(X89,bool),X90))) | s(bool,'F_0') = s(bool,'|dollar|exists_1'(s(fun(X89,bool),X90))) | s(bool,X88) = s(bool,X91) | s(bool,'T_0') = s(bool,X91)) )),
  inference(superposition,[],[f1163,f518])).
fof(f11499,plain,(
  ( ! [X59,X58] : (sP1(X58,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,X58) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) )),
  inference(subsumption_resolution,[],[f11480,f383])).
fof(f11480,plain,(
  ( ! [X59,X58] : (p(s(bool,'F_0')) | sP1(X58,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,X58) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) )),
  inference(superposition,[],[f2114,f418])).
fof(f11487,plain,(
  ( ! [X2,X0,X1] : (sP1(X1,X0) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f11462,f383])).
fof(f11462,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | sP1(X1,X0) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2114,f226])).
fof(f11335,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2110,f226])).
fof(f9671,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP6('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) )),
  inference(unit_resulting_resolution,[],[f1242,f319])).
fof(f9625,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) )),
  inference(unit_resulting_resolution,[],[f1231,f320])).
fof(f9100,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP5('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),happ(s(fun(X4,bool),X5),s(X4,'const.min.@_1'(s(fun(X4,bool),X5)))),'|dollar|exists_1'(s(fun(X4,bool),X5)))) )),
  inference(unit_resulting_resolution,[],[f1253,f320])).
fof(f8999,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP5('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'|dollar|exists_1'(s(fun(X4,bool),X5)),happ(s(fun(X4,bool),X5),s(X4,'const.min.@_1'(s(fun(X4,bool),X5)))))) )),
  inference(unit_resulting_resolution,[],[f1251,f320])).
fof(f5764,plain,(
  ( ! [X140,X138,X136,X141,X139,X137] : (sP8('const.pred_set.SURJ_3'(s(fun(X136,X137),X138),s(fun(X136,bool),X139),s(fun(X137,bool),'const.pred_set.IMAGE_2'(s(fun(X136,X137),X138),s(fun(X136,bool),X139)))),X140,X141) | ~sP7('const.pred_set.SURJ_3'(s(fun(X136,X137),X138),s(fun(X136,bool),X139),s(fun(X137,bool),'const.pred_set.IMAGE_2'(s(fun(X136,X137),X138),s(fun(X136,bool),X139)))),X140,X141)) )),
  inference(subsumption_resolution,[],[f5692,f219])).
fof(f5692,plain,(
  ( ! [X140,X138,X136,X141,X139,X137] : (~p(s(bool,'T_0')) | ~sP7('const.pred_set.SURJ_3'(s(fun(X136,X137),X138),s(fun(X136,bool),X139),s(fun(X137,bool),'const.pred_set.IMAGE_2'(s(fun(X136,X137),X138),s(fun(X136,bool),X139)))),X140,X141) | sP8('const.pred_set.SURJ_3'(s(fun(X136,X137),X138),s(fun(X136,bool),X139),s(fun(X137,bool),'const.pred_set.IMAGE_2'(s(fun(X136,X137),X138),s(fun(X136,bool),X139)))),X140,X141)) )),
  inference(superposition,[],[f376,f1203])).
fof(f5763,plain,(
  ( ! [X134,X132,X130,X135,X133,X131] : (sP10('const.pred_set.SURJ_3'(s(fun(X130,X131),X132),s(fun(X130,bool),X133),s(fun(X131,bool),'const.pred_set.IMAGE_2'(s(fun(X130,X131),X132),s(fun(X130,bool),X133)))),X134,X135) | ~sP9('const.pred_set.SURJ_3'(s(fun(X130,X131),X132),s(fun(X130,bool),X133),s(fun(X131,bool),'const.pred_set.IMAGE_2'(s(fun(X130,X131),X132),s(fun(X130,bool),X133)))),X134,X135)) )),
  inference(subsumption_resolution,[],[f5691,f219])).
fof(f5691,plain,(
  ( ! [X134,X132,X130,X135,X133,X131] : (~p(s(bool,'T_0')) | ~sP9('const.pred_set.SURJ_3'(s(fun(X130,X131),X132),s(fun(X130,bool),X133),s(fun(X131,bool),'const.pred_set.IMAGE_2'(s(fun(X130,X131),X132),s(fun(X130,bool),X133)))),X134,X135) | sP10('const.pred_set.SURJ_3'(s(fun(X130,X131),X132),s(fun(X130,bool),X133),s(fun(X131,bool),'const.pred_set.IMAGE_2'(s(fun(X130,X131),X132),s(fun(X130,bool),X133)))),X134,X135)) )),
  inference(superposition,[],[f375,f1203])).
fof(f5761,plain,(
  ( ! [X123,X121,X118,X122,X120,X119] : (sP10('const.pred_set.SURJ_3'(s(fun(X118,X119),X120),s(fun(X118,bool),X121),s(fun(X119,bool),'const.pred_set.IMAGE_2'(s(fun(X118,X119),X120),s(fun(X118,bool),X121)))),X122,X123) | ~p(s(bool,X122))) )),
  inference(subsumption_resolution,[],[f5689,f219])).
fof(f5689,plain,(
  ( ! [X123,X121,X118,X122,X120,X119] : (~p(s(bool,'T_0')) | ~p(s(bool,X122)) | sP10('const.pred_set.SURJ_3'(s(fun(X118,X119),X120),s(fun(X118,bool),X121),s(fun(X119,bool),'const.pred_set.IMAGE_2'(s(fun(X118,X119),X120),s(fun(X118,bool),X121)))),X122,X123)) )),
  inference(superposition,[],[f371,f1203])).
fof(f5760,plain,(
  ( ! [X116,X114,X112,X117,X115,X113] : (sP10('const.pred_set.SURJ_3'(s(fun(X112,X113),X114),s(fun(X112,bool),X115),s(fun(X113,bool),'const.pred_set.IMAGE_2'(s(fun(X112,X113),X114),s(fun(X112,bool),X115)))),X117,X116) | p(s(bool,X116))) )),
  inference(subsumption_resolution,[],[f5688,f219])).
fof(f5688,plain,(
  ( ! [X116,X114,X112,X117,X115,X113] : (~p(s(bool,'T_0')) | p(s(bool,X116)) | sP10('const.pred_set.SURJ_3'(s(fun(X112,X113),X114),s(fun(X112,bool),X115),s(fun(X113,bool),'const.pred_set.IMAGE_2'(s(fun(X112,X113),X114),s(fun(X112,bool),X115)))),X117,X116)) )),
  inference(superposition,[],[f370,f1203])).
fof(f5758,plain,(
  ( ! [X103,X101,X105,X102,X100,X104] : (~sP8('const.pred_set.SURJ_3'(s(fun(X100,X101),X102),s(fun(X100,bool),X103),s(fun(X101,bool),'const.pred_set.IMAGE_2'(s(fun(X100,X101),X102),s(fun(X100,bool),X103)))),X105,X104) | p(s(bool,X105)) | p(s(bool,X104))) )),
  inference(subsumption_resolution,[],[f5686,f219])).
fof(f5686,plain,(
  ( ! [X103,X101,X105,X102,X100,X104] : (~p(s(bool,'T_0')) | p(s(bool,X104)) | p(s(bool,X105)) | ~sP8('const.pred_set.SURJ_3'(s(fun(X100,X101),X102),s(fun(X100,bool),X103),s(fun(X101,bool),'const.pred_set.IMAGE_2'(s(fun(X100,X101),X102),s(fun(X100,bool),X103)))),X105,X104)) )),
  inference(superposition,[],[f355,f1203])).
fof(f5757,plain,(
  ( ! [X94,X99,X97,X95,X98,X96] : (sP8('const.pred_set.SURJ_3'(s(fun(X94,X95),X96),s(fun(X94,bool),X97),s(fun(X95,bool),'const.pred_set.IMAGE_2'(s(fun(X94,X95),X96),s(fun(X94,bool),X97)))),X98,X99) | ~p(s(bool,X98))) )),
  inference(subsumption_resolution,[],[f5685,f219])).
fof(f5685,plain,(
  ( ! [X94,X99,X97,X95,X98,X96] : (~p(s(bool,'T_0')) | ~p(s(bool,X98)) | sP8('const.pred_set.SURJ_3'(s(fun(X94,X95),X96),s(fun(X94,bool),X97),s(fun(X95,bool),'const.pred_set.IMAGE_2'(s(fun(X94,X95),X96),s(fun(X94,bool),X97)))),X98,X99)) )),
  inference(superposition,[],[f354,f1203])).
fof(f5756,plain,(
  ( ! [X92,X90,X88,X93,X91,X89] : (sP8('const.pred_set.SURJ_3'(s(fun(X88,X89),X90),s(fun(X88,bool),X91),s(fun(X89,bool),'const.pred_set.IMAGE_2'(s(fun(X88,X89),X90),s(fun(X88,bool),X91)))),X93,X92) | ~p(s(bool,X92))) )),
  inference(subsumption_resolution,[],[f5684,f219])).
fof(f5684,plain,(
  ( ! [X92,X90,X88,X93,X91,X89] : (~p(s(bool,'T_0')) | ~p(s(bool,X92)) | sP8('const.pred_set.SURJ_3'(s(fun(X88,X89),X90),s(fun(X88,bool),X91),s(fun(X89,bool),'const.pred_set.IMAGE_2'(s(fun(X88,X89),X90),s(fun(X88,bool),X91)))),X93,X92)) )),
  inference(superposition,[],[f353,f1203])).
fof(f5755,plain,(
  ( ! [X87,X85,X83,X86,X84,X82] : (~sP7('const.pred_set.SURJ_3'(s(fun(X82,X83),X84),s(fun(X82,bool),X85),s(fun(X83,bool),'const.pred_set.IMAGE_2'(s(fun(X82,X83),X84),s(fun(X82,bool),X85)))),X86,X87) | p(s(bool,X87)) | p(s(bool,X86))) )),
  inference(subsumption_resolution,[],[f5683,f219])).
fof(f5683,plain,(
  ( ! [X87,X85,X83,X86,X84,X82] : (~p(s(bool,'T_0')) | p(s(bool,X86)) | p(s(bool,X87)) | ~sP7('const.pred_set.SURJ_3'(s(fun(X82,X83),X84),s(fun(X82,bool),X85),s(fun(X83,bool),'const.pred_set.IMAGE_2'(s(fun(X82,X83),X84),s(fun(X82,bool),X85)))),X86,X87)) )),
  inference(superposition,[],[f348,f1203])).
fof(f5752,plain,(
  ( ! [X68,X66,X64,X69,X67,X65] : (sP2(X69,X68,'const.pred_set.SURJ_3'(s(fun(X64,X65),X66),s(fun(X64,bool),X67),s(fun(X65,bool),'const.pred_set.IMAGE_2'(s(fun(X64,X65),X66),s(fun(X64,bool),X67))))) | ~p(s(bool,X68))) )),
  inference(subsumption_resolution,[],[f5680,f219])).
fof(f5680,plain,(
  ( ! [X68,X66,X64,X69,X67,X65] : (~p(s(bool,'T_0')) | ~p(s(bool,X68)) | sP2(X69,X68,'const.pred_set.SURJ_3'(s(fun(X64,X65),X66),s(fun(X64,bool),X67),s(fun(X65,bool),'const.pred_set.IMAGE_2'(s(fun(X64,X65),X66),s(fun(X64,bool),X67)))))) )),
  inference(superposition,[],[f310,f1203])).
fof(f5751,plain,(
  ( ! [X61,X59,X62,X60,X63] : (sP1(X63,'const.pred_set.SURJ_3'(s(fun(X59,X60),X61),s(fun(X59,bool),X62),s(fun(X60,bool),'const.pred_set.IMAGE_2'(s(fun(X59,X60),X61),s(fun(X59,bool),X62))))) | p(s(bool,X63))) )),
  inference(subsumption_resolution,[],[f5679,f219])).
fof(f5679,plain,(
  ( ! [X61,X59,X62,X60,X63] : (~p(s(bool,'T_0')) | p(s(bool,X63)) | sP1(X63,'const.pred_set.SURJ_3'(s(fun(X59,X60),X61),s(fun(X59,bool),X62),s(fun(X60,bool),'const.pred_set.IMAGE_2'(s(fun(X59,X60),X61),s(fun(X59,bool),X62)))))) )),
  inference(superposition,[],[f299,f1203])).
fof(f5750,plain,(
  ( ! [X57,X54,X58,X56,X55] : (sP1('const.pred_set.SURJ_3'(s(fun(X54,X55),X56),s(fun(X54,bool),X57),s(fun(X55,bool),'const.pred_set.IMAGE_2'(s(fun(X54,X55),X56),s(fun(X54,bool),X57)))),X58) | p(s(bool,X58))) )),
  inference(subsumption_resolution,[],[f5678,f219])).
fof(f5678,plain,(
  ( ! [X57,X54,X58,X56,X55] : (~p(s(bool,'T_0')) | p(s(bool,X58)) | sP1('const.pred_set.SURJ_3'(s(fun(X54,X55),X56),s(fun(X54,bool),X57),s(fun(X55,bool),'const.pred_set.IMAGE_2'(s(fun(X54,X55),X56),s(fun(X54,bool),X57)))),X58)) )),
  inference(superposition,[],[f296,f1203])).
fof(f4455,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('F_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) )),
  inference(unit_resulting_resolution,[],[f383,f407,f390,f1249,f324])).
fof(f4456,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('F_0','F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) )),
  inference(unit_resulting_resolution,[],[f383,f393,f390,f1249,f323])).
fof(f4457,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) )),
  inference(unit_resulting_resolution,[],[f383,f393,f405,f1249,f323])).
fof(f4382,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f383,f392,f390,f1248,f324])).
fof(f4383,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) )),
  inference(unit_resulting_resolution,[],[f383,f406,f390,f1248,f324])).
fof(f4312,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f383,f393,f389,f1247,f323])).
fof(f4252,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f396,f388,f1246,f322])).
fof(f4253,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f396,f1235,f1246,f322])).
fof(f4195,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('F_0','T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) )),
  inference(unit_resulting_resolution,[],[f1241,f319])).
fof(f4136,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1236,f319])).
fof(f4074,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f391,f396,f1235,f322])).
fof(f4011,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('T_0','F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) )),
  inference(unit_resulting_resolution,[],[f1230,f320])).
fof(f3334,plain,(
  ( ! [X0,X1] : (sP5('T_0',happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),'|dollar|exists_1'(s(fun(X0,bool),X1)))) )),
  inference(unit_resulting_resolution,[],[f1043,f320])).
fof(f3281,plain,(
  ( ! [X0,X1] : (sP5('T_0','|dollar|exists_1'(s(fun(X0,bool),X1)),happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) )),
  inference(unit_resulting_resolution,[],[f1041,f320])).
fof(f1798,plain,(
  ( ! [X246,X248,X247,X245] : (s(X247,f(s(bool,'T_0'))) != s(X247,g(s(bool,'T_0'))) | s(fun(bool,X247),X245) = s(fun(bool,X247),X246) | s(bool,X248) = s(bool,sK18(X245,X246,X247,bool)) | s(bool,'T_0') = s(bool,X248)) )),
  inference(superposition,[],[f305,f518])).
fof(f2128,plain,(
  ( ! [X80,X81,X79,X82] : (~sP7(X79,X80,X81) | sP8(X79,X80,X81) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(subsumption_resolution,[],[f1746,f219])).
fof(f1746,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | ~sP7(X79,X80,X81) | sP8(X79,X80,X81) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(superposition,[],[f376,f518])).
fof(f2127,plain,(
  ( ! [X78,X76,X77,X75] : (~sP9(X75,X76,X77) | sP10(X75,X76,X77) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(subsumption_resolution,[],[f1745,f219])).
fof(f1745,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,'T_0')) | ~sP9(X75,X76,X77) | sP10(X75,X76,X77) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f375,f518])).
fof(f2125,plain,(
  ( ! [X70,X68,X69,X67] : (sP10(X67,X68,X69) | ~p(s(bool,X68)) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(subsumption_resolution,[],[f1743,f219])).
fof(f1743,plain,(
  ( ! [X70,X68,X69,X67] : (~p(s(bool,'T_0')) | ~p(s(bool,X68)) | sP10(X67,X68,X69) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f371,f518])).
fof(f2124,plain,(
  ( ! [X66,X64,X65,X63] : (sP10(X63,X65,X64) | p(s(bool,X64)) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(subsumption_resolution,[],[f1742,f219])).
fof(f1742,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'T_0')) | p(s(bool,X64)) | sP10(X63,X65,X64) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f370,f518])).
fof(f2122,plain,(
  ( ! [X57,X58,X56,X55] : (~sP8(X55,X57,X56) | p(s(bool,X57)) | p(s(bool,X56)) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(subsumption_resolution,[],[f1740,f219])).
fof(f1740,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'T_0')) | p(s(bool,X56)) | p(s(bool,X57)) | ~sP8(X55,X57,X56) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f355,f518])).
fof(f2121,plain,(
  ( ! [X54,X52,X53,X51] : (sP8(X51,X52,X53) | ~p(s(bool,X52)) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f1739,f219])).
fof(f1739,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'T_0')) | ~p(s(bool,X52)) | sP8(X51,X52,X53) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f354,f518])).
fof(f2120,plain,(
  ( ! [X47,X50,X48,X49] : (sP8(X47,X49,X48) | ~p(s(bool,X48)) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(subsumption_resolution,[],[f1738,f219])).
fof(f1738,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X48)) | sP8(X47,X49,X48) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f353,f518])).
fof(f2119,plain,(
  ( ! [X45,X43,X46,X44] : (~sP7(X43,X44,X45) | p(s(bool,X45)) | p(s(bool,X44)) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f1737,f219])).
fof(f1737,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'T_0')) | p(s(bool,X44)) | p(s(bool,X45)) | ~sP7(X43,X44,X45) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f348,f518])).
fof(f2116,plain,(
  ( ! [X33,X31,X34,X32] : (sP2(X33,X32,X31) | ~p(s(bool,X32)) | s(bool,X31) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f1734,f219])).
fof(f1734,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X32)) | sP2(X33,X32,X31) | s(bool,X31) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f310,f518])).
fof(f2115,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X29)) | sP1(X29,X28) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(subsumption_resolution,[],[f1733,f219])).
fof(f1733,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X29)) | sP1(X29,X28) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f299,f518])).
fof(f2114,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X26)) | sP1(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(subsumption_resolution,[],[f1732,f219])).
fof(f1732,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X26)) | sP1(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f296,f518])).
fof(f2113,plain,(
  ( ! [X24,X23,X22] : (sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f1731,f219])).
fof(f1731,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f281,f518])).
fof(f2112,plain,(
  ( ! [X21,X19,X20] : (sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f1730,f219])).
fof(f1730,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f280,f518])).
fof(f2111,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f1729,f219])).
fof(f1729,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f276,f518])).
fof(f2110,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f1725,f219])).
fof(f1725,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f236,f518])).
fof(f1693,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f232,f518])).
fof(f1507,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f518,f518])).
fof(f1411,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(bool,X0))) != s(X1,g(s(bool,X0))) | s(fun(bool,X1),X2) = s(fun(bool,X1),X3) | s(bool,'T_0') = s(bool,sK18(X2,X3,X1,bool)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1409,f226])).
fof(f1204,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3))))) = s(bool,'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) )),
  inference(unit_resulting_resolution,[],[f304,f304,f276])).
fof(f1205,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP0(X0,'const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))))) )),
  inference(unit_resulting_resolution,[],[f304,f280])).
fof(f1206,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP0('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) )),
  inference(unit_resulting_resolution,[],[f304,f281])).
fof(f1207,plain,(
  ( ! [X2,X0,X3,X1] : (~sP1('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f304,f295])).
fof(f1209,plain,(
  ( ! [X2,X0,X3,X1] : (~sP1('T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) )),
  inference(unit_resulting_resolution,[],[f219,f304,f295])).
fof(f1210,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP1('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) )),
  inference(unit_resulting_resolution,[],[f304,f304,f295])).
fof(f1211,plain,(
  ( ! [X2,X0,X3,X1] : (sP1('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f383,f304,f296])).
fof(f1212,plain,(
  ( ! [X2,X0,X3,X1] : (sP1('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) )),
  inference(unit_resulting_resolution,[],[f383,f304,f299])).
fof(f1213,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP2(X0,'const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f304,f310])).
fof(f1216,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP2(X0,'T_0','const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))))) )),
  inference(unit_resulting_resolution,[],[f219,f304,f310])).
fof(f1217,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP2(X0,'const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))),'const.pred_set.SURJ_3'(s(fun(X5,X6),X7),s(fun(X5,bool),X8),s(fun(X6,bool),'const.pred_set.IMAGE_2'(s(fun(X5,X6),X7),s(fun(X5,bool),X8)))))) )),
  inference(unit_resulting_resolution,[],[f304,f304,f310])).
fof(f1221,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f219,f383,f304,f321])).
fof(f1222,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f304,f383,f304,f321])).
fof(f1224,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('T_0','T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) )),
  inference(unit_resulting_resolution,[],[f391,f388,f395,f304,f322])).
fof(f1225,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f219,f383,f304,f325])).
fof(f1230,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f219,f383,f304,f325])).
fof(f1231,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP5('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f304,f383,f304,f325])).
fof(f1235,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP5(X0,X1,'const.pred_set.SURJ_3'(s(fun(X2,X3),X4),s(fun(X2,bool),X5),s(fun(X3,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X3),X4),s(fun(X2,bool),X5)))))) )),
  inference(unit_resulting_resolution,[],[f304,f326])).
fof(f1236,plain,(
  ( ! [X2,X0,X3,X1] : (~sP4('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f219,f383,f304,f329])).
fof(f1241,plain,(
  ( ! [X2,X0,X3,X1] : (~sP4('T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f219,f383,f304,f329])).
fof(f1242,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP4('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f304,f383,f304,f329])).
fof(f1246,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP4(X0,X1,'const.pred_set.SURJ_3'(s(fun(X2,X3),X4),s(fun(X2,bool),X5),s(fun(X3,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X3),X4),s(fun(X2,bool),X5)))))) )),
  inference(unit_resulting_resolution,[],[f304,f330])).
fof(f1247,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP3(X0,X1,'const.pred_set.SURJ_3'(s(fun(X2,X3),X4),s(fun(X2,bool),X5),s(fun(X3,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X3),X4),s(fun(X2,bool),X5)))))) )),
  inference(unit_resulting_resolution,[],[f304,f334])).
fof(f1248,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP3(X0,'const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))),X5)) )),
  inference(unit_resulting_resolution,[],[f304,f335])).
fof(f1249,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP3('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4,X5)) )),
  inference(unit_resulting_resolution,[],[f304,f336])).
fof(f1250,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f418,f304,f338])).
fof(f1251,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),happ(s(fun(X4,bool),X5),s(X4,'const.min.@_1'(s(fun(X4,bool),X5)))),'|dollar|exists_1'(s(fun(X4,bool),X5)))) )),
  inference(unit_resulting_resolution,[],[f259,f304,f338])).
fof(f1252,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) )),
  inference(unit_resulting_resolution,[],[f418,f304,f338])).
fof(f1253,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'|dollar|exists_1'(s(fun(X4,bool),X5)),happ(s(fun(X4,bool),X5),s(X4,'const.min.@_1'(s(fun(X4,bool),X5)))))) )),
  inference(unit_resulting_resolution,[],[f259,f304,f338])).
fof(f1254,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f411,f304,f339])).
fof(f1255,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) )),
  inference(unit_resulting_resolution,[],[f412,f304,f339])).
fof(f1256,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f411,f304,f339])).
fof(f1257,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f412,f304,f339])).
fof(f1258,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP8('F_0',X0,'const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))))) )),
  inference(unit_resulting_resolution,[],[f383,f304,f341])).
fof(f1260,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP8('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) )),
  inference(unit_resulting_resolution,[],[f383,f304,f342])).
fof(f1264,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f383,f383,f304,f348])).
fof(f1267,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP7(X0,X1,'const.pred_set.SURJ_3'(s(fun(X2,X3),X4),s(fun(X2,bool),X5),s(fun(X3,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X3),X4),s(fun(X2,bool),X5)))))) )),
  inference(unit_resulting_resolution,[],[f304,f349])).
fof(f1268,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP7(X0,'const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))),X5)) )),
  inference(unit_resulting_resolution,[],[f304,f350])).
fof(f1269,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8('T_0',X0,'const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))))) )),
  inference(unit_resulting_resolution,[],[f219,f304,f353])).
fof(f1273,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP8('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4,'const.pred_set.SURJ_3'(s(fun(X5,X6),X7),s(fun(X5,bool),X8),s(fun(X6,bool),'const.pred_set.IMAGE_2'(s(fun(X5,X6),X7),s(fun(X5,bool),X8)))))) )),
  inference(unit_resulting_resolution,[],[f304,f304,f353])).
fof(f1274,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8('T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) )),
  inference(unit_resulting_resolution,[],[f219,f304,f354])).
fof(f1278,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP8('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))),X8)) )),
  inference(unit_resulting_resolution,[],[f304,f304,f354])).
fof(f1279,plain,(
  ( ! [X2,X0,X3,X1] : (~sP8('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f383,f383,f304,f355])).
fof(f1280,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP10('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) )),
  inference(unit_resulting_resolution,[],[f383,f304,f359])).
fof(f1294,plain,(
  ( ! [X2,X0,X3,X1] : (sP10('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) )),
  inference(unit_resulting_resolution,[],[f383,f410,f304,f364])).
fof(f1295,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f383,f219,f304,f365])).
fof(f1300,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9('T_0','F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) )),
  inference(unit_resulting_resolution,[],[f383,f219,f304,f365])).
fof(f1301,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP9('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) )),
  inference(unit_resulting_resolution,[],[f383,f304,f304,f365])).
fof(f1305,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP9(X0,'const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))),X5)) )),
  inference(unit_resulting_resolution,[],[f304,f367])).
fof(f1306,plain,(
  ( ! [X2,X0,X3,X1] : (sP10('F_0','F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) )),
  inference(unit_resulting_resolution,[],[f383,f383,f304,f369])).
fof(f1309,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10('T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) )),
  inference(unit_resulting_resolution,[],[f219,f304,f371])).
fof(f1313,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP10('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))),X8)) )),
  inference(unit_resulting_resolution,[],[f304,f304,f371])).
fof(f1314,plain,(
  ( ! [X2,X0,X3,X1] : (~sP10('T_0','F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) )),
  inference(unit_resulting_resolution,[],[f219,f383,f304,f372])).
fof(f1317,plain,(
  ( ! [X2,X0,X3,X1] : (~sP10('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f383,f304,f372])).
fof(f1318,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP10('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) )),
  inference(unit_resulting_resolution,[],[f304,f383,f304,f372])).
fof(f1319,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4,'F_0')) )),
  inference(unit_resulting_resolution,[],[f400,f304,f375])).
fof(f1321,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0',X4)) )),
  inference(unit_resulting_resolution,[],[f401,f304,f375])).
fof(f1322,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4,'T_0')) )),
  inference(unit_resulting_resolution,[],[f397,f304,f376])).
fof(f1323,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0',X4)) )),
  inference(unit_resulting_resolution,[],[f398,f304,f376])).
fof(f1324,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP2('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4,X5)) )),
  inference(unit_resulting_resolution,[],[f304,f377])).
fof(f1118,plain,(
  ( ! [X59,X60] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X59)))) | s(bool,X60) = s(bool,happ(s(fun(bool,bool),X59),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X60) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X59)))) )),
  inference(superposition,[],[f571,f1077])).
fof(f1040,plain,(
  ( ! [X0,X1] : (~sP6('F_0',happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),'|dollar|exists_1'(s(fun(X0,bool),X1)))) )),
  inference(unit_resulting_resolution,[],[f383,f259,f340])).
fof(f1041,plain,(
  ( ! [X0,X1] : (sP6('T_0',happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),'|dollar|exists_1'(s(fun(X0,bool),X1)))) )),
  inference(unit_resulting_resolution,[],[f219,f259,f338])).
fof(f1042,plain,(
  ( ! [X0,X1] : (~sP6('F_0','|dollar|exists_1'(s(fun(X0,bool),X1)),happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) )),
  inference(unit_resulting_resolution,[],[f383,f259,f340])).
fof(f1043,plain,(
  ( ! [X0,X1] : (sP6('T_0','|dollar|exists_1'(s(fun(X0,bool),X1)),happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) )),
  inference(unit_resulting_resolution,[],[f219,f259,f338])).
fof(f903,plain,(
  ~sP3('F_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f610,f407,f389,f383,f324])).
fof(f861,plain,(
  ~sP3('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f611,f406,f390,f383,f323])).
fof(f864,plain,(
  sP6('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f393,f389,f394,f383,f323])).
fof(f812,plain,(
  sP6('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f393,f405,f396,f219,f322])).
fof(f813,plain,(
  sP6('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0')),
  inference(unit_resulting_resolution,[],[f407,f405,f396,f219,f322])).
fof(f817,plain,(
  ~sP5('T_0','T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),
  inference(unit_resulting_resolution,[],[f600,f407,f394,f219,f322])).
fof(f820,plain,(
  sP6('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f391,f388,f395,f219,f322])).
fof(f785,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f782,f383])).
fof(f782,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s(bool,X0) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f571,f418])).
fof(f755,plain,(
  ~sP10('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f746,f360])).
fof(f746,plain,(
  ~sP9('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f219,f383,f219,f365])).
fof(f735,plain,(
  sP10('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f402,f219,f383,f364])).
fof(f704,plain,(
  ~sP8('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f696,f343])).
fof(f696,plain,(
  ~sP7('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f383,f383,f219,f348])).
fof(f690,plain,(
  sP8('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f399,f383,f383,f347])).
fof(f676,plain,(
  ~sP6('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f671,f318])).
fof(f671,plain,(
  ~sP3('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f383,f383,f383,f333])).
fof(f667,plain,(
  ~sP6('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f658,f319])).
fof(f658,plain,(
  ~sP4('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f383,f219,f219,f329])).
fof(f641,plain,(
  ~sP5('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f383,f219,f219,f325])).
fof(f610,plain,(
  ~sP6('F_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f383,f418,f340])).
fof(f611,plain,(
  ~sP6('F_0','F_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),
  inference(unit_resulting_resolution,[],[f383,f418,f340])).
fof(f599,plain,(
  ~sP6('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f219,f411,f339])).
fof(f600,plain,(
  ~sP6('T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0')),
  inference(unit_resulting_resolution,[],[f219,f412,f339])).
fof(f602,plain,(
  ~sP6('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f219,f411,f339])).
fof(f603,plain,(
  ~sP6('T_0','T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),
  inference(unit_resulting_resolution,[],[f219,f412,f339])).
fof(f591,plain,(
  sP6('T_0','F_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),
  inference(unit_resulting_resolution,[],[f219,f418,f338])).
fof(f586,plain,(
  sP6('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f383,f411,f337])).
fof(f587,plain,(
  sP6('F_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0')),
  inference(unit_resulting_resolution,[],[f383,f412,f337])).
fof(f588,plain,(
  sP6('F_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f383,f411,f337])).
fof(f589,plain,(
  sP6('F_0','T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),
  inference(unit_resulting_resolution,[],[f383,f412,f337])).
fof(f571,plain,(
  ( ! [X4,X3] : (p(s(bool,X4)) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X3)) )),
  inference(subsumption_resolution,[],[f565,f383])).
fof(f565,plain,(
  ( ! [X4,X3] : (p(s(bool,'F_0')) | p(s(bool,X4)) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f273,f226])).
fof(f490,plain,(
  ( ! [X0] : (sP10('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f219,f219,f371])).
fof(f482,plain,(
  ( ! [X0] : (sP10('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f383,f219,f370])).
fof(f480,plain,(
  ( ! [X0] : (~sP10('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f219,f383,f359])).
fof(f479,plain,(
  ( ! [X0] : (~sP10('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f383,f383,f358])).
fof(f471,plain,(
  ( ! [X0] : (sP8('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f219,f219,f354])).
fof(f467,plain,(
  ( ! [X0] : (sP8('T_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f219,f353])).
fof(f464,plain,(
  ( ! [X0] : (~sP8('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f219,f383,f342])).
fof(f461,plain,(
  ( ! [X0] : (~sP8('F_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f383,f341])).
fof(f459,plain,(
  ( ! [X0] : (sP2(X0,'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f219,f310])).
fof(f441,plain,(
  ( ! [X0] : (~sP2('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f383,f383,f308])).
fof(f435,plain,(
  ~sP0('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f383,f383,f385])).
fof(f428,plain,(
  sP1('F_0','T_0')),
  inference(unit_resulting_resolution,[],[f383,f219,f299])).
fof(f425,plain,(
  sP1('T_0','F_0')),
  inference(unit_resulting_resolution,[],[f383,f219,f296])).
fof(f422,plain,(
  ~sP1('T_0','T_0')),
  inference(unit_resulting_resolution,[],[f219,f219,f295])).
fof(f421,plain,(
  ~sP1('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f383,f383,f294])).
fof(f403,plain,(
  ( ! [X0,X1] : (sP2('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f219,f377])).
fof(f402,plain,(
  ( ! [X0,X1] : (sP9('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f383,f368])).
fof(f401,plain,(
  ( ! [X0,X1] : (sP9(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f219,f367])).
fof(f400,plain,(
  ( ! [X0,X1] : (sP9(X0,X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f383,f366])).
fof(f399,plain,(
  ( ! [X0,X1] : (sP7('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f383,f351])).
fof(f398,plain,(
  ( ! [X0,X1] : (sP7(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f219,f350])).
fof(f397,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f349])).
fof(f396,plain,(
  ( ! [X0,X1] : (sP3('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f219,f336])).
fof(f395,plain,(
  ( ! [X0,X1] : (sP3(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f219,f335])).
fof(f394,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f334])).
fof(f393,plain,(
  ( ! [X0,X1] : (sP4('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f383,f332])).
fof(f392,plain,(
  ( ! [X0,X1] : (sP4(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f383,f331])).
fof(f391,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f330])).
fof(f390,plain,(
  ( ! [X0,X1] : (sP5('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f383,f328])).
fof(f389,plain,(
  ( ! [X0,X1] : (sP5(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f383,f327])).
fof(f388,plain,(
  ( ! [X0,X1] : (sP5(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f326])).
fof(f387,plain,(
  ( ! [X0] : (sP0('T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f219,f281])).
fof(f386,plain,(
  ( ! [X0] : (sP0(X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f219,f280])).
fof(f369,plain,(
  ( ! [X2,X0,X1] : (sP10(X2,X0,X1) | p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f217])).
fof(f370,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | sP10(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f217])).
fof(f371,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP10(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f217])).
fof(f367,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f215])).
fof(f358,plain,(
  ( ! [X2,X0,X1] : (~sP10(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f212])).
fof(f359,plain,(
  ( ! [X2,X0,X1] : (~sP10(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f212])).
fof(f360,plain,(
  ( ! [X2,X0,X1] : (~sP10(X0,X1,X2) | sP9(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f212])).
fof(f362,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | ~sP9(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f212])).
fof(f363,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | ~sP9(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f212])).
fof(f352,plain,(
  ( ! [X2,X0,X1] : (sP8(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f209])).
fof(f353,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | sP8(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f209])).
fof(f354,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP8(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f209])).
fof(f349,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f207])).
fof(f350,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f207])).
fof(f341,plain,(
  ( ! [X2,X0,X1] : (~sP8(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f204])).
fof(f342,plain,(
  ( ! [X2,X0,X1] : (~sP8(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f204])).
fof(f343,plain,(
  ( ! [X2,X0,X1] : (~sP8(X0,X1,X2) | sP7(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f204])).
fof(f376,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP7(X0,X1,X2) | sP8(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f344])).
fof(f344,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~sP7(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f204])).
fof(f345,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~sP7(X0,X1,X2) | ~p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f204])).
fof(f346,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~sP7(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f204])).
fof(f337,plain,(
  ( ! [X2,X0,X1] : (sP6(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f201])).
fof(f339,plain,(
  ( ! [X2,X0,X1] : (~sP6(X2,X1,X0) | ~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f201])).
fof(f340,plain,(
  ( ! [X2,X0,X1] : (~sP6(X2,X1,X0) | s(bool,X0) != s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f201])).
fof(f333,plain,(
  ( ! [X2,X0,X1] : (~sP3(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f200])).
fof(f200,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(flattening,[],[f199])).
fof(f199,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(nnf_transformation,[],[f131])).
fof(f334,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f200])).
fof(f335,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f200])).
fof(f336,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f200])).
fof(f330,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f198])).
fof(f326,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f195])).
fof(f318,plain,(
  ( ! [X2,X0,X1] : (~sP6(X0,X1,X2) | sP3(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f192])).
fof(f319,plain,(
  ( ! [X2,X0,X1] : (~sP6(X0,X1,X2) | sP4(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f192])).
fof(f320,plain,(
  ( ! [X2,X0,X1] : (~sP6(X0,X1,X2) | sP5(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f192])).
fof(f322,plain,(
  ( ! [X2,X0,X1] : (~sP3(X2,X1,X0) | ~p(s(bool,X2)) | ~sP5(X0,X2,X1) | ~sP4(X1,X2,X0) | sP6(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f192])).
fof(f323,plain,(
  ( ! [X2,X0,X1] : (~sP3(X2,X1,X0) | p(s(bool,X1)) | ~sP5(X0,X2,X1) | ~sP4(X1,X2,X0) | sP6(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f192])).
fof(f324,plain,(
  ( ! [X2,X0,X1] : (~sP3(X2,X1,X0) | p(s(bool,X0)) | ~sP5(X0,X2,X1) | ~sP4(X1,X2,X0) | sP6(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f192])).
fof(f308,plain,(
  ( ! [X2,X0,X1] : (~sP2(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f187])).
fof(f377,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(duplicate_literal_removal,[],[f313])).
fof(f313,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f187])).
fof(f305,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK18(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK18(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f183])).
fof(f183,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK18(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK18(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18])],[f122])).
fof(f122,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f90])).
fof(f90,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.pred_set.countable_image_nats',aHL_EXT)).
fof(f294,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f181])).
fof(f181,plain,(
  ! [X0,X1] : ((~sP1(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1)))),
  inference(rectify,[],[f180])).
fof(f180,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0)))),
  inference(flattening,[],[f179])).
fof(f179,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP1(X1,X0)))),
  inference(nnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X1,X0] : (sP1(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f295,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f181])).
fof(f296,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f181])).
fof(f299,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f181])).
fof(f385,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f279,f383])).
fof(f279,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f174])).
fof(f174,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(flattening,[],[f173])).
fof(f173,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f125])).
fof(f125,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f280,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f174])).
fof(f281,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f174])).
fof(f273,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f113])).
fof(f233,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f145])).
fof(f36143,plain,(
  ( ! [X52,X53,X51] : (s(bool,X51) = s(bool,X52) | s(bool,'T_0') = s(bool,X53) | s(bool,X51) = s(bool,X53) | s(bool,X52) = s(bool,g(s(bool,'T_0')))) ) | $spl410),
  inference(cnf_transformation,[],[f36143_D])).
fof(f36143_D,plain,(
  ( ! [X52,X53,X51] : (s(bool,X51) = s(bool,X52) | s(bool,'T_0') = s(bool,X53) | s(bool,X51) = s(bool,X53) | s(bool,X52) = s(bool,g(s(bool,'T_0')))) ) <=> ~$spl410),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl410])])).
fof(f50839,plain,(
  ( ! [X59,X57,X54,X58,X56,X55] : (s(bool,X58) = s(bool,X59) | s(bool,X57) = s(bool,X58) | s(bool,X57) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X59) | s(fun(bool,bool),X54) = s(fun(bool,bool),X55) | s(bool,'T_0') = s(bool,X56) | s(bool,X56) = s(bool,sK18(X54,X55,bool,bool))) ) | $spl64),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f383,f1521,f1520,f15634,f15637,f15642,f16475,f18152,f18311,f27085,f21682,f26901,f26887,f21786,f22244,f27469,f27473,f27479,f27481,f27531,f22874,f27533,f27590,f27591,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f23671,f27675,f27676,f27718,f27806,f24822,f30868,f30873,f30878,f33151,f33153,f34176,f34197,f34154,f34203,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f34334,f34340,f34342,f32738,f31647,f18796,f35322,f35327,f36092,f36142,f36145,f36121,f5743,f5744,f306,f2137,f307,f2136,f27663,f27664,f36003,f36002,f35990,f35984,f35973,f35967,f35829,f35766,f35765,f35753,f35747,f35736,f35730,f35592,f35541,f35526,f35520,f35511,f35432,f35417,f35411,f35402,f27662,f27661,f27660,f27659,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f23670,f23669,f23668,f23667,f23188,f23187,f23186,f23185,f22873,f22872,f22871,f22870,f22243,f22242,f22241,f22240,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f29573,f29260,f28877,f27897,f23666,f23665,f23664,f23663,f23651,f23650,f23649,f23648,f23184,f23183,f23182,f23181,f23169,f23168,f23167,f23166,f22869,f22868,f22867,f22866,f22854,f22853,f22852,f22851,f22239,f22238,f22237,f22236,f22224,f22223,f22222,f22221,f17990,f17989,f17914,f17913,f9105,f9104,f9004,f9003,f3339,f3337,f3311,f3309,f3286,f3284,f3259,f3257,f36010,f35915,f35773,f35678,f35509,f35400,f35212,f35137,f34329,f34307,f34096,f34092,f34088,f34084,f34016,f34015,f34013,f34012,f34010,f34009,f34008,f34007,f34006,f34005,f34004,f34003,f34002,f34001,f34000,f33999,f33998,f33997,f33996,f33995,f33994,f33993,f33992,f33827,f33826,f33825,f33824,f33823,f33822,f33821,f33819,f33818,f33817,f33816,f33815,f33814,f33813,f33812,f33811,f33810,f33809,f33808,f33807,f33806,f33801,f33498,f33495,f33492,f33489,f33477,f33476,f33475,f33471,f33454,f33453,f33452,f33449,f33448,f33445,f33444,f33443,f33437,f33435,f33432,f33431,f33373,f33368,f33367,f33366,f33341,f31081,f31080,f31079,f31077,f31072,f31071,f23662,f23661,f23660,f23659,f23658,f23657,f23656,f23655,f23654,f23653,f23652,f23647,f23180,f23179,f23178,f23177,f23176,f23175,f23174,f23173,f23172,f23171,f23170,f23165,f22865,f22864,f22863,f22862,f22861,f22860,f22859,f22858,f22857,f22856,f22855,f22850,f22235,f22234,f22233,f22232,f22231,f22230,f22229,f22228,f22227,f22226,f22225,f22220,f8542,f8541,f8489,f8488,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1782,f1347,f1340,f1088,f36012,f35914,f35775,f35677,f35540,f35508,f35431,f35399,f34371,f34368,f34170,f34156,f33372,f33363,f32959,f32945,f32124,f32123,f32122,f32121,f32120,f32119,f32118,f32117,f32116,f32115,f32114,f31895,f31322,f31298,f31076,f27658,f27657,f27656,f27655,f27654,f27653,f27652,f21823,f21784,f21750,f21247,f15630,f11482,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f35319,f30870,f27665,f27651,f2138,f2130,f261,f260,f33800,f32546,f31297,f23646,f23164,f22849,f22219,f1780,f1596,f33474,f33434,f33433,f32967,f32111,f17988,f17912,f11359,f9103,f9002,f8540,f8487,f3343,f3315,f3290,f3263,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f237,f236,f44348,f44457,f44466,f44519,f44610,f44619,f44655,f44740,f44749,f44818,f45680,f45689,f45756,f45847,f45856,f45897,f45986,f45995,f46036,f46280,f46289,f46774,f46770,f46769,f46762,f46537,f46536,f46535,f46534,f46533,f46532,f46531,f46529,f46528,f46521,f46509,f46459,f46452,f46445,f46444,f46420,f46419,f46416,f46415,f46414,f46411,f46409,f46408,f46405,f46403,f46402,f46401,f46400,f46399,f46382,f46365,f46364,f46363,f46362,f46349,f46348,f46339,f46338,f46336,f46335,f46334,f46327,f46963,f46964,f46965,f46966,f46971,f46973,f46974,f46975,f46979,f47048,f47049,f47050,f47051,f47056,f47058,f47059,f47060,f47064,f47105,f47106,f47107,f47108,f47113,f47115,f47116,f47117,f47121,f47164,f47165,f47166,f47167,f47172,f47174,f47175,f47176,f47180,f47219,f47220,f47221,f47222,f47227,f47229,f47230,f47231,f47235,f47320,f47321,f47322,f47323,f47328,f47330,f47331,f47332,f47336,f47410,f47411,f47412,f47514,f47515,f47516,f46926,f46922,f46921,f46917,f47608,f46916,f46915,f46342,f46446,f46453,f46514,f47836,f47884,f47840,f47885,f47886,f47893,f47959,f48007,f47963,f48008,f48009,f48016,f48065,f48081,f48114,f48115,f48116,f48168,f48184,f48217,f48218,f48219,f48264,f48280,f48313,f48314,f48321,f48361,f48377,f48410,f48411,f48418,f48475,f48540,f48551,f48606,f48607,f48634,f48632,f48693,f48694,f48695,f48696,f48701,f48703,f48704,f48705,f48709,f48748,f48749,f48750,f48751,f48756,f48758,f48759,f48760,f48764,f48834,f48832,f48825,f48820,f48904,f48902,f48895,f48890,f48612,f49010,f49015,f48608,f50179,f50246,f50245,f50244,f50238,f50234,f50311,f50379,f50378,f50377,f50371,f50367,f50501,f50502,f50503,f50508,f50510,f50511,f50512,f50516,f50517,f50519,f50521,f50529,f50532,f50561,f50562,f50569,f50652,f49018,f49014,f50813,f49009,f49008,f48611,f50831,f48489,f48485,f48484,f36118,f50835,f36109,f36117,f36119])).
fof(f50837,plain,(
  ( ! [X47,X45,X43,X46,X44,X42] : (s(bool,X45) = s(bool,sK18(X43,X44,bool,bool)) | s(bool,X42) = s(bool,X46) | s(bool,'T_0') = s(bool,X45) | s(bool,X46) = s(bool,X47) | s(bool,X42) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X47) | s(fun(bool,bool),X43) = s(fun(bool,bool),X44)) ) | ($spl57 | $spl64)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f383,f1521,f1520,f15634,f15637,f15642,f16475,f18152,f18311,f18775,f18774,f18773,f18772,f18776,f18783,f18784,f18785,f18786,f18787,f27085,f21682,f26901,f26887,f21786,f22244,f27469,f27473,f27479,f27481,f27531,f22874,f27533,f27590,f27591,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f23671,f27675,f27676,f27718,f27806,f24822,f30868,f30873,f30878,f33151,f33153,f34176,f34197,f34154,f34203,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f34334,f34340,f34342,f32738,f31647,f18796,f34559,f35322,f35327,f36092,f36142,f36145,f36121,f5743,f5744,f306,f2137,f307,f2136,f27663,f27664,f36003,f36002,f35990,f35984,f35973,f35967,f35829,f35766,f35765,f35753,f35747,f35736,f35730,f35592,f35541,f35526,f35520,f35511,f35432,f35417,f35411,f35402,f27662,f27661,f27660,f27659,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f23670,f23669,f23668,f23667,f23188,f23187,f23186,f23185,f22873,f22872,f22871,f22870,f22243,f22242,f22241,f22240,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f29573,f29260,f28877,f27897,f23666,f23665,f23664,f23663,f23651,f23650,f23649,f23648,f23184,f23183,f23182,f23181,f23169,f23168,f23167,f23166,f22869,f22868,f22867,f22866,f22854,f22853,f22852,f22851,f22239,f22238,f22237,f22236,f22224,f22223,f22222,f22221,f17990,f17989,f17914,f17913,f9105,f9104,f9004,f9003,f3339,f3337,f3311,f3309,f3286,f3284,f3259,f3257,f36010,f35915,f35773,f35678,f35509,f35400,f35212,f35137,f34329,f34307,f34096,f34092,f34088,f34084,f34016,f34015,f34013,f34012,f34010,f34009,f34008,f34007,f34006,f34005,f34004,f34003,f34002,f34001,f34000,f33999,f33998,f33997,f33996,f33995,f33994,f33993,f33992,f33827,f33826,f33825,f33824,f33823,f33822,f33821,f33819,f33818,f33817,f33816,f33815,f33814,f33813,f33812,f33811,f33810,f33809,f33808,f33807,f33806,f33801,f33498,f33495,f33492,f33489,f33477,f33476,f33475,f33471,f33454,f33453,f33452,f33449,f33448,f33445,f33444,f33443,f33437,f33435,f33432,f33431,f33373,f33368,f33367,f33366,f33341,f31081,f31080,f31079,f31077,f31072,f31071,f23662,f23661,f23660,f23659,f23658,f23657,f23656,f23655,f23654,f23653,f23652,f23647,f23180,f23179,f23178,f23177,f23176,f23175,f23174,f23173,f23172,f23171,f23170,f23165,f22865,f22864,f22863,f22862,f22861,f22860,f22859,f22858,f22857,f22856,f22855,f22850,f22235,f22234,f22233,f22232,f22231,f22230,f22229,f22228,f22227,f22226,f22225,f22220,f8542,f8541,f8489,f8488,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1782,f1347,f1340,f1088,f36012,f35914,f35775,f35677,f35540,f35508,f35431,f35399,f34371,f34368,f34170,f34156,f33372,f33363,f32959,f32945,f32124,f32123,f32122,f32121,f32120,f32119,f32118,f32117,f32116,f32115,f32114,f31895,f31322,f31298,f31076,f27658,f27657,f27656,f27655,f27654,f27653,f27652,f21823,f21784,f21750,f21247,f15630,f11482,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f35319,f30870,f27665,f27651,f2138,f2130,f261,f260,f33800,f32546,f31297,f23646,f23164,f22849,f22219,f1780,f1596,f33474,f33434,f33433,f32967,f32111,f17988,f17912,f11359,f9103,f9002,f8540,f8487,f3343,f3315,f3290,f3263,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f237,f236,f44348,f44457,f44466,f44519,f44610,f44619,f44655,f44740,f44749,f44818,f45680,f45689,f45756,f45847,f45856,f45897,f45986,f45995,f46036,f46280,f46289,f46774,f46770,f46769,f46762,f46537,f46536,f46535,f46534,f46533,f46532,f46531,f46529,f46528,f46521,f46509,f46459,f46452,f46445,f46444,f46420,f46419,f46416,f46415,f46414,f46411,f46409,f46408,f46405,f46403,f46402,f46401,f46400,f46399,f46382,f46365,f46364,f46363,f46362,f46349,f46348,f46339,f46338,f46336,f46335,f46334,f46327,f46963,f46964,f46965,f46966,f46971,f46973,f46974,f46975,f46979,f47048,f47049,f47050,f47051,f47056,f47058,f47059,f47060,f47064,f47105,f47106,f47107,f47108,f47113,f47115,f47116,f47117,f47121,f47164,f47165,f47166,f47167,f47172,f47174,f47175,f47176,f47180,f47219,f47220,f47221,f47222,f47227,f47229,f47230,f47231,f47235,f47320,f47321,f47322,f47323,f47328,f47330,f47331,f47332,f47336,f47410,f47411,f47412,f47514,f47515,f47516,f46926,f46922,f46921,f46917,f47608,f46916,f46915,f46342,f46446,f46453,f46514,f47836,f47884,f47840,f47885,f47886,f47893,f47959,f48007,f47963,f48008,f48009,f48016,f48065,f48081,f48114,f48115,f48116,f48168,f48184,f48217,f48218,f48219,f48264,f48280,f48313,f48314,f48321,f48361,f48377,f48410,f48411,f48418,f48475,f48540,f48551,f48606,f48607,f48634,f48632,f48693,f48694,f48695,f48696,f48701,f48703,f48704,f48705,f48709,f48748,f48749,f48750,f48751,f48756,f48758,f48759,f48760,f48764,f48834,f48832,f48825,f48820,f48904,f48902,f48895,f48890,f48612,f49010,f49015,f48608,f50179,f50246,f50245,f50244,f50238,f50234,f50311,f50379,f50378,f50377,f50371,f50367,f50501,f50502,f50503,f50508,f50510,f50511,f50512,f50516,f50517,f50519,f50521,f50529,f50532,f50561,f50562,f50569,f50652,f49018,f49014,f50813,f49009,f49008,f48611,f50831,f48489,f48485,f48484,f36118,f50835,f18730,f36109,f50836,f36117])).
fof(f50835,plain,(
  ( ! [X52,X50,X48,X53,X51,X49] : (s(bool,'T_0') = s(bool,X53) | s(bool,X51) = s(bool,X53) | s(bool,X52) = s(bool,g(s(bool,'T_0'))) | s(bool,X51) = s(bool,X52) | s(bool,'T_0') = s(bool,X50) | s(fun(bool,bool),X48) = s(fun(bool,bool),X49) | s(bool,X50) = s(bool,sK18(X48,X49,bool,bool))) ) | $spl64),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f383,f1521,f1520,f15634,f15637,f15642,f16475,f18152,f18311,f27085,f21682,f26901,f26887,f21786,f22244,f27469,f27473,f27479,f27481,f27531,f22874,f27533,f27590,f27591,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f23671,f27675,f27676,f27718,f27806,f24822,f30868,f30873,f30878,f33151,f33153,f34176,f34197,f34154,f34203,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f34334,f34340,f34342,f32738,f31647,f18796,f35322,f35327,f36092,f36142,f36145,f36121,f5743,f5744,f306,f2137,f307,f2136,f27663,f27664,f36003,f36002,f35990,f35984,f35973,f35967,f35829,f35766,f35765,f35753,f35747,f35736,f35730,f35592,f35541,f35526,f35520,f35511,f35432,f35417,f35411,f35402,f27662,f27661,f27660,f27659,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f23670,f23669,f23668,f23667,f23188,f23187,f23186,f23185,f22873,f22872,f22871,f22870,f22243,f22242,f22241,f22240,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f29573,f29260,f28877,f27897,f23666,f23665,f23664,f23663,f23651,f23650,f23649,f23648,f23184,f23183,f23182,f23181,f23169,f23168,f23167,f23166,f22869,f22868,f22867,f22866,f22854,f22853,f22852,f22851,f22239,f22238,f22237,f22236,f22224,f22223,f22222,f22221,f17990,f17989,f17914,f17913,f9105,f9104,f9004,f9003,f3339,f3337,f3311,f3309,f3286,f3284,f3259,f3257,f36010,f35915,f35773,f35678,f35509,f35400,f35212,f35137,f34329,f34307,f34096,f34092,f34088,f34084,f34016,f34015,f34013,f34012,f34010,f34009,f34008,f34007,f34006,f34005,f34004,f34003,f34002,f34001,f34000,f33999,f33998,f33997,f33996,f33995,f33994,f33993,f33992,f33827,f33826,f33825,f33824,f33823,f33822,f33821,f33819,f33818,f33817,f33816,f33815,f33814,f33813,f33812,f33811,f33810,f33809,f33808,f33807,f33806,f33801,f33498,f33495,f33492,f33489,f33477,f33476,f33475,f33471,f33454,f33453,f33452,f33449,f33448,f33445,f33444,f33443,f33437,f33435,f33432,f33431,f33373,f33368,f33367,f33366,f33341,f31081,f31080,f31079,f31077,f31072,f31071,f23662,f23661,f23660,f23659,f23658,f23657,f23656,f23655,f23654,f23653,f23652,f23647,f23180,f23179,f23178,f23177,f23176,f23175,f23174,f23173,f23172,f23171,f23170,f23165,f22865,f22864,f22863,f22862,f22861,f22860,f22859,f22858,f22857,f22856,f22855,f22850,f22235,f22234,f22233,f22232,f22231,f22230,f22229,f22228,f22227,f22226,f22225,f22220,f8542,f8541,f8489,f8488,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1782,f1347,f1340,f1088,f36012,f35914,f35775,f35677,f35540,f35508,f35431,f35399,f34371,f34368,f34170,f34156,f33372,f33363,f32959,f32945,f32124,f32123,f32122,f32121,f32120,f32119,f32118,f32117,f32116,f32115,f32114,f31895,f31322,f31298,f31076,f27658,f27657,f27656,f27655,f27654,f27653,f27652,f21823,f21784,f21750,f21247,f15630,f11482,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f35319,f30870,f27665,f27651,f2138,f2130,f261,f260,f33800,f32546,f31297,f23646,f23164,f22849,f22219,f1780,f1596,f33474,f33434,f33433,f32967,f32111,f17988,f17912,f11359,f9103,f9002,f8540,f8487,f3343,f3315,f3290,f3263,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f237,f236,f44348,f44457,f44466,f44519,f44610,f44619,f44655,f44740,f44749,f44818,f45680,f45689,f45756,f45847,f45856,f45897,f45986,f45995,f46036,f46280,f46289,f46774,f46770,f46769,f46762,f46537,f46536,f46535,f46534,f46533,f46532,f46531,f46529,f46528,f46521,f46509,f46459,f46452,f46445,f46444,f46420,f46419,f46416,f46415,f46414,f46411,f46409,f46408,f46405,f46403,f46402,f46401,f46400,f46399,f46382,f46365,f46364,f46363,f46362,f46349,f46348,f46339,f46338,f46336,f46335,f46334,f46327,f46963,f46964,f46965,f46966,f46971,f46973,f46974,f46975,f46979,f47048,f47049,f47050,f47051,f47056,f47058,f47059,f47060,f47064,f47105,f47106,f47107,f47108,f47113,f47115,f47116,f47117,f47121,f47164,f47165,f47166,f47167,f47172,f47174,f47175,f47176,f47180,f47219,f47220,f47221,f47222,f47227,f47229,f47230,f47231,f47235,f47320,f47321,f47322,f47323,f47328,f47330,f47331,f47332,f47336,f47410,f47411,f47412,f47514,f47515,f47516,f46926,f46922,f46921,f46917,f47608,f46916,f46915,f46342,f46446,f46453,f46514,f47836,f47884,f47840,f47885,f47886,f47893,f47959,f48007,f47963,f48008,f48009,f48016,f48065,f48081,f48114,f48115,f48116,f48168,f48184,f48217,f48218,f48219,f48264,f48280,f48313,f48314,f48321,f48361,f48377,f48410,f48411,f48418,f48475,f48540,f48551,f48606,f48607,f48634,f48632,f48693,f48694,f48695,f48696,f48701,f48703,f48704,f48705,f48709,f48748,f48749,f48750,f48751,f48756,f48758,f48759,f48760,f48764,f48834,f48832,f48825,f48820,f48904,f48902,f48895,f48890,f48612,f49010,f49015,f48608,f50179,f50246,f50245,f50244,f50238,f50234,f50311,f50379,f50378,f50377,f50371,f50367,f50501,f50502,f50503,f50508,f50510,f50511,f50512,f50516,f50517,f50519,f50521,f50529,f50532,f50561,f50562,f50569,f50652,f49018,f49014,f50813,f49009,f49008,f48611,f50831,f48489,f48485,f48484,f36118])).
fof(f50833,plain,(
  ( ! [X37,X33,X34] : (s(fun(bool,bool),X33) = s(fun(bool,bool),X34) | s(bool,'T_0') = s(bool,X37) | s(bool,X37) = s(bool,sK18(X33,X34,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK18(X33,X34,bool,bool))))) ) | $spl436),
  inference(cnf_transformation,[],[f50833_D])).
fof(f50833_D,plain,(
  ( ! [X37,X33,X34] : (s(fun(bool,bool),X33) = s(fun(bool,bool),X34) | s(bool,'T_0') = s(bool,X37) | s(bool,X37) = s(bool,sK18(X33,X34,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK18(X33,X34,bool,bool))))) ) <=> ~$spl436),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl436])])).
fof(f50834,plain,(
  ( ! [X35,X38,X36] : (s(bool,X36) != s(bool,f(s(bool,X35))) | s(bool,'T_0') = s(bool,X38) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X36)) ) | $spl438),
  inference(cnf_transformation,[],[f50834_D])).
fof(f50834_D,plain,(
  ( ! [X35,X38,X36] : (s(bool,X36) != s(bool,f(s(bool,X35))) | s(bool,'T_0') = s(bool,X38) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X36)) ) <=> ~$spl438),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl438])])).
fof(f48484,plain,(
  ( ! [X30,X28,X31,X29,X27,X32] : (s(bool,X30) != s(bool,f(s(bool,X29))) | s(fun(bool,bool),X27) = s(fun(bool,bool),X28) | s(bool,'T_0') = s(bool,X30) | s(bool,'T_0') = s(bool,g(s(bool,sK18(X27,X28,bool,bool)))) | s(bool,X29) = s(bool,X31) | s(bool,'T_0') = s(bool,X31) | s(bool,X32) = s(bool,sK18(X27,X28,bool,bool)) | s(bool,'T_0') = s(bool,X32)) )),
  inference(superposition,[],[f1596,f1507])).
fof(f48485,plain,(
  ( ! [X37,X35,X33,X38,X36,X34] : (s(bool,X36) != s(bool,f(s(bool,X35))) | s(fun(bool,bool),X33) = s(fun(bool,bool),X34) | s(bool,'T_0') = s(bool,X36) | s(bool,'T_0') = s(bool,g(s(bool,sK18(X33,X34,bool,bool)))) | s(bool,X37) = s(bool,sK18(X33,X34,bool,bool)) | s(bool,'T_0') = s(bool,X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f1596,f1507])).
fof(f50830,plain,(
  $false | ($spl40 | $spl60 | $spl116)),
  inference(subsumption_resolution,[],[f50829,f50267])).
fof(f50829,plain,(
  p(s(bool,'F_0')) | ($spl60 | $spl116)),
  inference(forward_demodulation,[],[f19572,f18793])).
fof(f50811,plain,(
  ( ! [X123,X121,X126,X124,X122,X120] : (s(bool,X126) = s(bool,'const.pred_set.SURJ_3'(s(fun(X121,X120),X122),s(fun(X121,bool),X123),s(fun(X120,bool),X124))) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X120,X121),sK19(X122,X123,X124,X120,X121)),s(fun(X120,bool),X124),s(fun(X121,bool),X123))) | s(bool,'T_0') = s(bool,X126)) ) | $spl434),
  inference(cnf_transformation,[],[f50811_D])).
fof(f50811_D,plain,(
  ( ! [X123,X121,X126,X124,X122,X120] : (s(bool,X126) = s(bool,'const.pred_set.SURJ_3'(s(fun(X121,X120),X122),s(fun(X121,bool),X123),s(fun(X120,bool),X124))) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X120,X121),sK19(X122,X123,X124,X120,X121)),s(fun(X120,bool),X124),s(fun(X121,bool),X123))) | s(bool,'T_0') = s(bool,X126)) ) <=> ~$spl434),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl434])])).
fof(f49008,plain,(
  ( ! [X14,X19,X17,X15,X13,X18,X16] : (p(s(bool,X18)) | s(bool,X19) = s(bool,'const.pred_set.SURJ_3'(s(fun(X14,X13),X15),s(fun(X14,bool),X16),s(fun(X13,bool),X17))) | s(bool,'T_0') = s(bool,X19) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X13,X14),sK19(X15,X16,X17,X13,X14)),s(fun(X13,bool),X17),s(fun(X14,bool),X16)))) )),
  inference(subsumption_resolution,[],[f48993,f232])).
fof(f48993,plain,(
  ( ! [X14,X19,X17,X15,X13,X18,X16] : (p(s(bool,X18)) | s(bool,X19) = s(bool,'const.pred_set.SURJ_3'(s(fun(X14,X13),X15),s(fun(X14,bool),X16),s(fun(X13,bool),X17))) | s(bool,'T_0') = s(bool,X19) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X13,X14),sK19(X15,X16,X17,X13,X14)),s(fun(X13,bool),X17),s(fun(X14,bool),X16)))) )),
  inference(superposition,[],[f2137,f518])).
fof(f49009,plain,(
  ( ! [X26,X24,X23,X21,X25,X22,X20] : (p(s(bool,X25)) | s(bool,X26) = s(bool,'const.pred_set.SURJ_3'(s(fun(X21,X20),X22),s(fun(X21,bool),X23),s(fun(X20,bool),X24))) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X20,X21),sK19(X22,X23,X24,X20,X21)),s(fun(X20,bool),X24),s(fun(X21,bool),X23)))) )),
  inference(subsumption_resolution,[],[f48994,f232])).
fof(f48994,plain,(
  ( ! [X26,X24,X23,X21,X25,X22,X20] : (p(s(bool,X25)) | s(bool,X26) = s(bool,'const.pred_set.SURJ_3'(s(fun(X21,X20),X22),s(fun(X21,bool),X23),s(fun(X20,bool),X24))) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X20,X21),sK19(X22,X23,X24,X20,X21)),s(fun(X20,bool),X24),s(fun(X21,bool),X23))) | s(bool,'T_0') = s(bool,X25)) )),
  inference(superposition,[],[f2137,f518])).
fof(f47609,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X32,bool),X33)))) ) | $spl422),
  inference(cnf_transformation,[],[f47609_D])).
fof(f47609_D,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X32,bool),X33)))) ) <=> ~$spl422),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl422])])).
fof(f50813,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42,X40] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X45,bool),X46))) | s(bool,X47) = s(bool,'const.pred_set.SURJ_3'(s(fun(X41,X40),X42),s(fun(X41,bool),X43),s(fun(X40,bool),X44))) | s(bool,'T_0') = s(bool,X47) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X40,X41),sK19(X42,X43,X44,X40,X41)),s(fun(X40,bool),X44),s(fun(X41,bool),X43)))) )),
  inference(subsumption_resolution,[],[f50812,f233])).
fof(f50812,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42,X40] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X45,bool),X46))) | p(s(bool,'|dollar|exists_1'(s(fun(X45,bool),X46)))) | s(bool,X47) = s(bool,'const.pred_set.SURJ_3'(s(fun(X41,X40),X42),s(fun(X41,bool),X43),s(fun(X40,bool),X44))) | s(bool,'T_0') = s(bool,X47) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X40,X41),sK19(X42,X43,X44,X40,X41)),s(fun(X40,bool),X44),s(fun(X41,bool),X43)))) )),
  inference(forward_demodulation,[],[f48997,f259])).
fof(f48997,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42,X40] : (p(s(bool,'|dollar|exists_1'(s(fun(X45,bool),X46)))) | s(bool,X47) = s(bool,'const.pred_set.SURJ_3'(s(fun(X41,X40),X42),s(fun(X41,bool),X43),s(fun(X40,bool),X44))) | s(bool,'T_0') = s(bool,X47) | s(bool,'T_0') = s(bool,happ(s(fun(X45,bool),X46),s(X45,'const.min.@_1'(s(fun(X45,bool),X46))))) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X40,X41),sK19(X42,X43,X44,X40,X41)),s(fun(X40,bool),X44),s(fun(X41,bool),X43)))) )),
  inference(superposition,[],[f2137,f1491])).
fof(f49014,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s(bool,X7) = s(bool,'const.pred_set.SURJ_3'(s(fun(X8,X9),X10),s(fun(X8,bool),X11),s(fun(X9,bool),X12))) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X9,X8),sK19(X10,X11,X12,X9,X8)),s(fun(X9,bool),X12),s(fun(X8,bool),X11)))) )),
  inference(duplicate_literal_removal,[],[f49013])).
fof(f49013,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s(bool,X7) = s(bool,'const.pred_set.SURJ_3'(s(fun(X8,X9),X10),s(fun(X8,bool),X11),s(fun(X9,bool),X12))) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X9,X8),sK19(X10,X11,X12,X9,X8)),s(fun(X9,bool),X12),s(fun(X8,bool),X11))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(condensation,[],[f49012])).
fof(f49012,plain,(
  ( ! [X80,X78,X76,X83,X81,X79,X77,X75,X82] : (p(s(bool,X80)) | s(bool,X81) = s(bool,'const.pred_set.SURJ_3'(s(fun(X76,X75),X77),s(fun(X76,bool),X78),s(fun(X75,bool),X79))) | s(bool,'T_0') = s(bool,X81) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X75,X76),sK19(X77,X78,X79,X75,X76)),s(fun(X75,bool),X79),s(fun(X76,bool),X78))) | s(bool,X82) = s(bool,X83) | s(bool,'T_0') = s(bool,X83)) )),
  inference(subsumption_resolution,[],[f49001,f1693])).
fof(f49001,plain,(
  ( ! [X80,X78,X76,X83,X81,X79,X77,X75,X82] : (p(s(bool,X80)) | s(bool,X81) = s(bool,'const.pred_set.SURJ_3'(s(fun(X76,X75),X77),s(fun(X76,bool),X78),s(fun(X75,bool),X79))) | s(bool,'T_0') = s(bool,X81) | s(bool,X80) = s(bool,X82) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X75,X76),sK19(X77,X78,X79,X75,X76)),s(fun(X75,bool),X79),s(fun(X76,bool),X78))) | s(bool,X82) = s(bool,X83) | s(bool,'T_0') = s(bool,X83)) )),
  inference(superposition,[],[f2137,f1507])).
fof(f49018,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s(bool,X7) = s(bool,'const.pred_set.SURJ_3'(s(fun(X8,X9),X10),s(fun(X8,bool),X11),s(fun(X9,bool),X12))) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X9,X8),sK19(X10,X11,X12,X9,X8)),s(fun(X9,bool),X12),s(fun(X8,bool),X11)))) )),
  inference(duplicate_literal_removal,[],[f49017])).
fof(f49017,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s(bool,X7) = s(bool,'const.pred_set.SURJ_3'(s(fun(X8,X9),X10),s(fun(X8,bool),X11),s(fun(X9,bool),X12))) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X9,X8),sK19(X10,X11,X12,X9,X8)),s(fun(X9,bool),X12),s(fun(X8,bool),X11)))) )),
  inference(condensation,[],[f49016])).
fof(f49016,plain,(
  ( ! [X111,X118,X116,X114,X112,X119,X117,X115,X113] : (p(s(bool,X116)) | s(bool,X117) = s(bool,'const.pred_set.SURJ_3'(s(fun(X112,X111),X113),s(fun(X112,bool),X114),s(fun(X111,bool),X115))) | s(bool,'T_0') = s(bool,X117) | s(bool,X118) = s(bool,X119) | s(bool,'T_0') = s(bool,X119) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X111,X112),sK19(X113,X114,X115,X111,X112)),s(fun(X111,bool),X115),s(fun(X112,bool),X114)))) )),
  inference(subsumption_resolution,[],[f49005,f1693])).
fof(f49005,plain,(
  ( ! [X111,X118,X116,X114,X112,X119,X117,X115,X113] : (p(s(bool,X116)) | s(bool,X117) = s(bool,'const.pred_set.SURJ_3'(s(fun(X112,X111),X113),s(fun(X112,bool),X114),s(fun(X111,bool),X115))) | s(bool,'T_0') = s(bool,X117) | s(bool,X116) = s(bool,X118) | s(bool,X118) = s(bool,X119) | s(bool,'T_0') = s(bool,X119) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X111,X112),sK19(X113,X114,X115,X111,X112)),s(fun(X111,bool),X115),s(fun(X112,bool),X114)))) )),
  inference(superposition,[],[f2137,f1507])).
fof(f47605,plain,(
  ( ! [X94] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X94))) = s(bool,happ(s(fun(bool,bool),X94),s(bool,'T_0')))) ) | $spl418),
  inference(cnf_transformation,[],[f47605_D])).
fof(f47605_D,plain,(
  ( ! [X94] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X94))) = s(bool,happ(s(fun(bool,bool),X94),s(bool,'T_0')))) ) <=> ~$spl418),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl418])])).
fof(f50810,plain,(
  ( ! [X125,X123,X121,X126,X124,X122,X120] : (s(bool,X126) = s(bool,'const.pred_set.SURJ_3'(s(fun(X121,X120),X122),s(fun(X121,bool),X123),s(fun(X120,bool),X124))) | s(bool,'T_0') = s(bool,X126) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X125))) = s(bool,happ(s(fun(bool,bool),X125),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X120,X121),sK19(X122,X123,X124,X120,X121)),s(fun(X120,bool),X124),s(fun(X121,bool),X123)))) ) | $spl202),
  inference(subsumption_resolution,[],[f49006,f34209])).
fof(f49006,plain,(
  ( ! [X125,X123,X121,X126,X124,X122,X120] : (p(s(bool,'const.min.@_1'(s(fun(bool,bool),X125)))) | s(bool,X126) = s(bool,'const.pred_set.SURJ_3'(s(fun(X121,X120),X122),s(fun(X121,bool),X123),s(fun(X120,bool),X124))) | s(bool,'T_0') = s(bool,X126) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X125))) = s(bool,happ(s(fun(bool,bool),X125),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X120,X121),sK19(X122,X123,X124,X120,X121)),s(fun(X120,bool),X124),s(fun(X121,bool),X123)))) )),
  inference(superposition,[],[f2137,f1782])).
fof(f2064,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f2064_D])).
fof(f2064_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f50808,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,X45) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X46))) = s(bool,happ(s(fun(bool,bool),X46),s(bool,'T_0')))) ) | ($spl40 | $spl60 | $spl117 | $spl414)),
  inference(subsumption_resolution,[],[f50783,f47602])).
fof(f50783,plain,(
  ( ! [X45,X46] : (sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X46)))),'F_0') | s(bool,'T_0') = s(bool,X45) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X46))) = s(bool,happ(s(fun(bool,bool),X46),s(bool,'T_0')))) ) | ($spl40 | $spl60 | $spl117)),
  inference(duplicate_literal_removal,[],[f50765])).
fof(f50765,plain,(
  ( ! [X45,X46] : (sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X46)))),'F_0') | s(bool,'T_0') = s(bool,X45) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X46))) = s(bool,happ(s(fun(bool,bool),X46),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X45)) ) | ($spl40 | $spl60 | $spl117)),
  inference(superposition,[],[f50185,f1782])).
fof(f50185,plain,(
  ( ! [X0] : (sP1(f(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | ($spl40 | $spl60 | $spl117)),
  inference(superposition,[],[f50135,f226])).
fof(f50135,plain,(
  sP1(f(s(bool,'F_0')),'F_0') | ($spl40 | $spl60 | $spl117)),
  inference(unit_resulting_resolution,[],[f37322,f49863])).
fof(f49863,plain,(
  ( ! [X5] : (sP1(f(s(bool,'F_0')),X5) | p(s(bool,X5))) ) | $spl40),
  inference(subsumption_resolution,[],[f49730,f219])).
fof(f49730,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,X5)) | sP1(f(s(bool,'F_0')),X5)) ) | $spl40),
  inference(superposition,[],[f296,f2179])).
fof(f37322,plain,(
  ~p(s(bool,'F_0')) | ($spl60 | $spl117)),
  inference(forward_demodulation,[],[f19573,f18793])).
fof(f50745,plain,(
  ( ! [X61,X62] : (sP0(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X61)))),X62) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X61))) = s(bool,happ(s(fun(bool,bool),X61),s(bool,'T_0')))) ) | $spl432),
  inference(cnf_transformation,[],[f50745_D])).
fof(f50745_D,plain,(
  ( ! [X61,X62] : (sP0(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X61)))),X62) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X61))) = s(bool,happ(s(fun(bool,bool),X61),s(bool,'T_0')))) ) <=> ~$spl432),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl432])])).
fof(f50720,plain,(
  ( ! [X61,X62,X60] : (sP0(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X61)))),X62) | s(bool,'T_0') = s(bool,X60) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X61))) = s(bool,happ(s(fun(bool,bool),X61),s(bool,'T_0')))) ) | $spl40),
  inference(duplicate_literal_removal,[],[f50702])).
fof(f50702,plain,(
  ( ! [X61,X62,X60] : (sP0(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X61)))),X62) | s(bool,'T_0') = s(bool,X60) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X61))) = s(bool,happ(s(fun(bool,bool),X61),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X60)) ) | $spl40),
  inference(superposition,[],[f49903,f1782])).
fof(f49903,plain,(
  ( ! [X0,X1] : (sP0(f(s(bool,X0)),X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl40),
  inference(superposition,[],[f49862,f226])).
fof(f49862,plain,(
  ( ! [X4] : (sP0(f(s(bool,'F_0')),X4)) ) | $spl40),
  inference(subsumption_resolution,[],[f49729,f219])).
fof(f49729,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | sP0(f(s(bool,'F_0')),X4)) ) | $spl40),
  inference(superposition,[],[f281,f2179])).
fof(f49636,plain,(
  $false | $spl41),
  inference(subsumption_resolution,[],[f49128,f46327])).
fof(f49128,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl41),
  inference(unit_resulting_resolution,[],[f412,f2180,f2180,f2111])).
fof(f49629,plain,(
  $false | ($spl41 | $spl60 | $spl117)),
  inference(subsumption_resolution,[],[f49150,f46327])).
fof(f49150,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl41 | $spl60 | $spl117)),
  inference(unit_resulting_resolution,[],[f405,f37322,f2180,f2180,f2117])).
fof(f49623,plain,(
  $false | ($spl41 | $spl60 | $spl117)),
  inference(subsumption_resolution,[],[f49160,f46327])).
fof(f49160,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl41 | $spl60 | $spl117)),
  inference(unit_resulting_resolution,[],[f407,f37322,f2180,f2180,f2118])).
fof(f49613,plain,(
  $false | ($spl41 | $spl60 | $spl117)),
  inference(subsumption_resolution,[],[f49193,f46327])).
fof(f49193,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl41 | $spl60 | $spl117)),
  inference(unit_resulting_resolution,[],[f410,f37322,f2180,f2180,f2123])).
fof(f49609,plain,(
  $false | ($spl41 | $spl60 | $spl117)),
  inference(subsumption_resolution,[],[f49211,f46327])).
fof(f49211,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl41 | $spl60 | $spl117)),
  inference(unit_resulting_resolution,[],[f502,f37322,f2180,f2180,f2126])).
fof(f49581,plain,(
  $false | ($spl0 | $spl41 | $spl60 | $spl117)),
  inference(subsumption_resolution,[],[f49265,f46327])).
fof(f49265,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl0 | $spl41 | $spl60 | $spl117)),
  inference(unit_resulting_resolution,[],[f37322,f405,f2180,f4492])).
fof(f49535,plain,(
  $false | $spl41),
  inference(subsumption_resolution,[],[f49365,f46327])).
fof(f49365,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl41),
  inference(unit_resulting_resolution,[],[f412,f2180,f2180,f2111])).
fof(f49530,plain,(
  $false | ($spl41 | $spl60 | $spl117)),
  inference(subsumption_resolution,[],[f49379,f46327])).
fof(f49379,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl41 | $spl60 | $spl117)),
  inference(unit_resulting_resolution,[],[f405,f37322,f2180,f2180,f2117])).
fof(f49526,plain,(
  $false | ($spl41 | $spl60 | $spl117)),
  inference(subsumption_resolution,[],[f49386,f46327])).
fof(f49386,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl41 | $spl60 | $spl117)),
  inference(unit_resulting_resolution,[],[f407,f37322,f2180,f2180,f2118])).
fof(f49519,plain,(
  $false | ($spl41 | $spl60 | $spl117)),
  inference(subsumption_resolution,[],[f49408,f46327])).
fof(f49408,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl41 | $spl60 | $spl117)),
  inference(unit_resulting_resolution,[],[f410,f37322,f2180,f2180,f2123])).
fof(f49516,plain,(
  $false | ($spl41 | $spl60 | $spl117)),
  inference(subsumption_resolution,[],[f49418,f46327])).
fof(f49418,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl41 | $spl60 | $spl117)),
  inference(unit_resulting_resolution,[],[f502,f37322,f2180,f2180,f2126])).
fof(f49011,plain,(
  ( ! [X70,X68,X66,X74,X72,X69,X67,X73] : (s(bool,X72) = s(bool,'const.pred_set.SURJ_3'(s(fun(X67,X66),X68),s(fun(X67,bool),X69),s(fun(X66,bool),X70))) | s(bool,'T_0') = s(bool,X74) | s(bool,X73) = s(bool,X74) | s(bool,X73) = s(bool,'const.pred_set.INJ_3'(s(fun(X66,X67),sK19(X68,X69,X70,X66,X67)),s(fun(X66,bool),X70),s(fun(X67,bool),X69))) | s(bool,'T_0') = s(bool,X72)) ) | $spl430),
  inference(cnf_transformation,[],[f49011_D])).
fof(f49011_D,plain,(
  ( ! [X70,X68,X66,X74,X72,X69,X67,X73] : (s(bool,X72) = s(bool,'const.pred_set.SURJ_3'(s(fun(X67,X66),X68),s(fun(X67,bool),X69),s(fun(X66,bool),X70))) | s(bool,'T_0') = s(bool,X74) | s(bool,X73) = s(bool,X74) | s(bool,X73) = s(bool,'const.pred_set.INJ_3'(s(fun(X66,X67),sK19(X68,X69,X70,X66,X67)),s(fun(X66,bool),X70),s(fun(X67,bool),X69))) | s(bool,'T_0') = s(bool,X72)) ) <=> ~$spl430),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl430])])).
fof(f49015,plain,(
  ( ! [X103,X109,X107,X105,X102,X110,X108,X106,X104] : (p(s(bool,X107)) | s(bool,X108) = s(bool,'const.pred_set.SURJ_3'(s(fun(X103,X102),X104),s(fun(X103,bool),X105),s(fun(X102,bool),X106))) | s(bool,'T_0') = s(bool,X108) | s(bool,X109) = s(bool,'const.pred_set.INJ_3'(s(fun(X102,X103),sK19(X104,X105,X106,X102,X103)),s(fun(X102,bool),X106),s(fun(X103,bool),X105))) | s(bool,X109) = s(bool,X110) | s(bool,'T_0') = s(bool,X110)) )),
  inference(subsumption_resolution,[],[f49004,f232])).
fof(f49004,plain,(
  ( ! [X103,X109,X107,X105,X102,X110,X108,X106,X104] : (p(s(bool,X107)) | s(bool,X108) = s(bool,'const.pred_set.SURJ_3'(s(fun(X103,X102),X104),s(fun(X103,bool),X105),s(fun(X102,bool),X106))) | s(bool,'T_0') = s(bool,X108) | s(bool,X109) = s(bool,'const.pred_set.INJ_3'(s(fun(X102,X103),sK19(X104,X105,X106,X102,X103)),s(fun(X102,bool),X106),s(fun(X103,bool),X105))) | s(bool,X109) = s(bool,X110) | s(bool,'T_0') = s(bool,X110) | s(bool,'T_0') = s(bool,X107)) )),
  inference(superposition,[],[f2137,f1507])).
fof(f49010,plain,(
  ( ! [X70,X68,X66,X74,X72,X71,X69,X67,X73] : (p(s(bool,X71)) | s(bool,X72) = s(bool,'const.pred_set.SURJ_3'(s(fun(X67,X66),X68),s(fun(X67,bool),X69),s(fun(X66,bool),X70))) | s(bool,'T_0') = s(bool,X72) | s(bool,X73) = s(bool,'const.pred_set.INJ_3'(s(fun(X66,X67),sK19(X68,X69,X70,X66,X67)),s(fun(X66,bool),X70),s(fun(X67,bool),X69))) | s(bool,X73) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f49000,f232])).
fof(f49000,plain,(
  ( ! [X70,X68,X66,X74,X72,X71,X69,X67,X73] : (p(s(bool,X71)) | s(bool,X72) = s(bool,'const.pred_set.SURJ_3'(s(fun(X67,X66),X68),s(fun(X67,bool),X69),s(fun(X66,bool),X70))) | s(bool,'T_0') = s(bool,X72) | s(bool,X73) = s(bool,'const.pred_set.INJ_3'(s(fun(X66,X67),sK19(X68,X69,X70,X66,X67)),s(fun(X66,bool),X70),s(fun(X67,bool),X69))) | s(bool,'T_0') = s(bool,X71) | s(bool,X73) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f2137,f1507])).
fof(f48988,plain,(
  ( ! [X61,X62] : (sP0(X62,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X61))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X61))) = s(bool,happ(s(fun(bool,bool),X61),s(bool,'T_0')))) ) | $spl428),
  inference(cnf_transformation,[],[f48988_D])).
fof(f48988_D,plain,(
  ( ! [X61,X62] : (sP0(X62,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X61))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X61))) = s(bool,happ(s(fun(bool,bool),X61),s(bool,'T_0')))) ) <=> ~$spl428),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl428])])).
fof(f48963,plain,(
  ( ! [X61,X62,X60] : (sP0(X62,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X61))))) | s(bool,'T_0') = s(bool,X60) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X61))) = s(bool,happ(s(fun(bool,bool),X61),s(bool,'T_0')))) ) | $spl40),
  inference(duplicate_literal_removal,[],[f48945])).
fof(f48945,plain,(
  ( ! [X61,X62,X60] : (sP0(X62,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X61))))) | s(bool,'T_0') = s(bool,X60) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X61))) = s(bool,happ(s(fun(bool,bool),X61),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X60)) ) | $spl40),
  inference(superposition,[],[f47895,f1782])).
fof(f47895,plain,(
  ( ! [X0,X1] : (sP0(X1,f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl40),
  inference(superposition,[],[f47786,f226])).
fof(f47786,plain,(
  ( ! [X3] : (sP0(X3,f(s(bool,'F_0')))) ) | $spl40),
  inference(subsumption_resolution,[],[f47655,f219])).
fof(f47655,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | sP0(X3,f(s(bool,'F_0')))) ) | $spl40),
  inference(superposition,[],[f280,f2179])).
fof(f48639,plain,(
  ( ! [X30,X28,X27,X32] : (s(fun(bool,bool),X27) = s(fun(bool,bool),X28) | s(bool,'T_0') = s(bool,X32) | s(bool,X32) = s(bool,sK18(X27,X28,bool,bool)) | s(bool,'T_0') = s(bool,X30) | s(bool,X30) = s(bool,g(s(bool,sK18(X27,X28,bool,bool))))) ) | $spl424),
  inference(cnf_transformation,[],[f48639_D])).
fof(f48639_D,plain,(
  ( ! [X30,X28,X27,X32] : (s(fun(bool,bool),X27) = s(fun(bool,bool),X28) | s(bool,'T_0') = s(bool,X32) | s(bool,X32) = s(bool,sK18(X27,X28,bool,bool)) | s(bool,'T_0') = s(bool,X30) | s(bool,X30) = s(bool,g(s(bool,sK18(X27,X28,bool,bool))))) ) <=> ~$spl424),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl424])])).
fof(f48640,plain,(
  ( ! [X31,X29] : (s(bool,'T_0') != s(bool,f(s(bool,X29))) | s(bool,'T_0') = s(bool,X31) | s(bool,X29) = s(bool,X31)) ) | $spl426),
  inference(cnf_transformation,[],[f48640_D])).
fof(f48640_D,plain,(
  ( ! [X31,X29] : (s(bool,'T_0') != s(bool,f(s(bool,X29))) | s(bool,'T_0') = s(bool,X31) | s(bool,X29) = s(bool,X31)) ) <=> ~$spl426),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl426])])).
fof(f48607,plain,(
  ( ! [X37,X35,X33,X38,X36,X34] : (s(bool,'T_0') != s(bool,f(s(bool,X35))) | s(fun(bool,bool),X33) = s(fun(bool,bool),X34) | s(bool,X36) = s(bool,g(s(bool,sK18(X33,X34,bool,bool)))) | s(bool,'T_0') = s(bool,X36) | s(bool,X37) = s(bool,sK18(X33,X34,bool,bool)) | s(bool,'T_0') = s(bool,X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f1780,f1507])).
fof(f48606,plain,(
  ( ! [X30,X28,X31,X29,X27,X32] : (s(bool,'T_0') != s(bool,f(s(bool,X29))) | s(fun(bool,bool),X27) = s(fun(bool,bool),X28) | s(bool,X30) = s(bool,g(s(bool,sK18(X27,X28,bool,bool)))) | s(bool,'T_0') = s(bool,X30) | s(bool,X29) = s(bool,X31) | s(bool,'T_0') = s(bool,X31) | s(bool,X32) = s(bool,sK18(X27,X28,bool,bool)) | s(bool,'T_0') = s(bool,X32)) )),
  inference(superposition,[],[f1780,f1507])).
fof(f47604,plain,(
  ( ! [X92,X90,X93,X91] : (s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X90,X91),sK19(X92,X93,'const.pred_set.IMAGE_2'(s(fun(X91,X90),X92),s(fun(X91,bool),X93)),X90,X91)),s(fun(X90,bool),'const.pred_set.IMAGE_2'(s(fun(X91,X90),X92),s(fun(X91,bool),X93))),s(fun(X91,bool),X93)))) ) | $spl416),
  inference(cnf_transformation,[],[f47604_D])).
fof(f47604_D,plain,(
  ( ! [X92,X90,X93,X91] : (s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X90,X91),sK19(X92,X93,'const.pred_set.IMAGE_2'(s(fun(X91,X90),X92),s(fun(X91,bool),X93)),X90,X91)),s(fun(X90,bool),'const.pred_set.IMAGE_2'(s(fun(X91,X90),X92),s(fun(X91,bool),X93))),s(fun(X91,bool),X93)))) ) <=> ~$spl416),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl416])])).
fof(f46915,plain,(
  ( ! [X12,X10,X13,X11,X9] : (p(s(bool,X13)) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X9,X10),sK19(X11,X12,'const.pred_set.IMAGE_2'(s(fun(X10,X9),X11),s(fun(X10,bool),X12)),X9,X10)),s(fun(X9,bool),'const.pred_set.IMAGE_2'(s(fun(X10,X9),X11),s(fun(X10,bool),X12))),s(fun(X10,bool),X12)))) )),
  inference(subsumption_resolution,[],[f46780,f232])).
fof(f46780,plain,(
  ( ! [X12,X10,X13,X11,X9] : (p(s(bool,X13)) | s(bool,'T_0') = s(bool,X13) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X9,X10),sK19(X11,X12,'const.pred_set.IMAGE_2'(s(fun(X10,X9),X11),s(fun(X10,bool),X12)),X9,X10)),s(fun(X9,bool),'const.pred_set.IMAGE_2'(s(fun(X10,X9),X11),s(fun(X10,bool),X12))),s(fun(X10,bool),X12)))) )),
  inference(superposition,[],[f5744,f518])).
fof(f46916,plain,(
  ( ! [X14,X17,X15,X18,X16] : (p(s(bool,X18)) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X14,X15),sK19(X16,X17,'const.pred_set.IMAGE_2'(s(fun(X15,X14),X16),s(fun(X15,bool),X17)),X14,X15)),s(fun(X14,bool),'const.pred_set.IMAGE_2'(s(fun(X15,X14),X16),s(fun(X15,bool),X17))),s(fun(X15,bool),X17)))) )),
  inference(subsumption_resolution,[],[f46781,f232])).
fof(f46781,plain,(
  ( ! [X14,X17,X15,X18,X16] : (p(s(bool,X18)) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X14,X15),sK19(X16,X17,'const.pred_set.IMAGE_2'(s(fun(X15,X14),X16),s(fun(X15,bool),X17)),X14,X15)),s(fun(X14,bool),'const.pred_set.IMAGE_2'(s(fun(X15,X14),X16),s(fun(X15,bool),X17))),s(fun(X15,bool),X17))) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f5744,f518])).
fof(f47608,plain,(
  ( ! [X30,X28,X33,X31,X29,X32] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X32,bool),X33))) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X28,X29),sK19(X30,X31,'const.pred_set.IMAGE_2'(s(fun(X29,X28),X30),s(fun(X29,bool),X31)),X28,X29)),s(fun(X28,bool),'const.pred_set.IMAGE_2'(s(fun(X29,X28),X30),s(fun(X29,bool),X31))),s(fun(X29,bool),X31)))) )),
  inference(subsumption_resolution,[],[f47607,f233])).
fof(f47607,plain,(
  ( ! [X30,X28,X33,X31,X29,X32] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X32,bool),X33))) | p(s(bool,'|dollar|exists_1'(s(fun(X32,bool),X33)))) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X28,X29),sK19(X30,X31,'const.pred_set.IMAGE_2'(s(fun(X29,X28),X30),s(fun(X29,bool),X31)),X28,X29)),s(fun(X28,bool),'const.pred_set.IMAGE_2'(s(fun(X29,X28),X30),s(fun(X29,bool),X31))),s(fun(X29,bool),X31)))) )),
  inference(forward_demodulation,[],[f46784,f259])).
fof(f46784,plain,(
  ( ! [X30,X28,X33,X31,X29,X32] : (p(s(bool,'|dollar|exists_1'(s(fun(X32,bool),X33)))) | s(bool,'T_0') = s(bool,happ(s(fun(X32,bool),X33),s(X32,'const.min.@_1'(s(fun(X32,bool),X33))))) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X28,X29),sK19(X30,X31,'const.pred_set.IMAGE_2'(s(fun(X29,X28),X30),s(fun(X29,bool),X31)),X28,X29)),s(fun(X28,bool),'const.pred_set.IMAGE_2'(s(fun(X29,X28),X30),s(fun(X29,bool),X31))),s(fun(X29,bool),X31)))) )),
  inference(superposition,[],[f5744,f1491])).
fof(f47606,plain,(
  ( ! [X78,X76,X81,X79,X77,X82] : (s(bool,X81) = s(bool,'const.pred_set.INJ_3'(s(fun(X76,X77),sK19(X78,X79,'const.pred_set.IMAGE_2'(s(fun(X77,X76),X78),s(fun(X77,bool),X79)),X76,X77)),s(fun(X76,bool),'const.pred_set.IMAGE_2'(s(fun(X77,X76),X78),s(fun(X77,bool),X79))),s(fun(X77,bool),X79))) | s(bool,'T_0') = s(bool,X82) | s(bool,X81) = s(bool,X82)) ) | $spl420),
  inference(cnf_transformation,[],[f47606_D])).
fof(f47606_D,plain,(
  ( ! [X78,X76,X81,X79,X77,X82] : (s(bool,X81) = s(bool,'const.pred_set.INJ_3'(s(fun(X76,X77),sK19(X78,X79,'const.pred_set.IMAGE_2'(s(fun(X77,X76),X78),s(fun(X77,bool),X79)),X76,X77)),s(fun(X76,bool),'const.pred_set.IMAGE_2'(s(fun(X77,X76),X78),s(fun(X77,bool),X79))),s(fun(X77,bool),X79))) | s(bool,'T_0') = s(bool,X82) | s(bool,X81) = s(bool,X82)) ) <=> ~$spl420),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl420])])).
fof(f46917,plain,(
  ( ! [X54,X52,X50,X48,X53,X51,X49] : (p(s(bool,X52)) | s(bool,X53) = s(bool,'const.pred_set.INJ_3'(s(fun(X48,X49),sK19(X50,X51,'const.pred_set.IMAGE_2'(s(fun(X49,X48),X50),s(fun(X49,bool),X51)),X48,X49)),s(fun(X48,bool),'const.pred_set.IMAGE_2'(s(fun(X49,X48),X50),s(fun(X49,bool),X51))),s(fun(X49,bool),X51))) | s(bool,X53) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f46787,f232])).
fof(f46787,plain,(
  ( ! [X54,X52,X50,X48,X53,X51,X49] : (p(s(bool,X52)) | s(bool,X53) = s(bool,'const.pred_set.INJ_3'(s(fun(X48,X49),sK19(X50,X51,'const.pred_set.IMAGE_2'(s(fun(X49,X48),X50),s(fun(X49,bool),X51)),X48,X49)),s(fun(X48,bool),'const.pred_set.IMAGE_2'(s(fun(X49,X48),X50),s(fun(X49,bool),X51))),s(fun(X49,bool),X51))) | s(bool,'T_0') = s(bool,X52) | s(bool,X53) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f5744,f1507])).
fof(f46921,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3))) | p(s(bool,X4))) )),
  inference(duplicate_literal_removal,[],[f46920])).
fof(f46920,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3))) | p(s(bool,X4)) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3)))) )),
  inference(condensation,[],[f46919])).
fof(f46919,plain,(
  ( ! [X61,X59,X57,X60,X58,X56,X55] : (p(s(bool,X59)) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X55,X56),sK19(X57,X58,'const.pred_set.IMAGE_2'(s(fun(X56,X55),X57),s(fun(X56,bool),X58)),X55,X56)),s(fun(X55,bool),'const.pred_set.IMAGE_2'(s(fun(X56,X55),X57),s(fun(X56,bool),X58))),s(fun(X56,bool),X58))) | s(bool,X60) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(subsumption_resolution,[],[f46788,f1693])).
fof(f46788,plain,(
  ( ! [X61,X59,X57,X60,X58,X56,X55] : (p(s(bool,X59)) | s(bool,X59) = s(bool,X60) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X55,X56),sK19(X57,X58,'const.pred_set.IMAGE_2'(s(fun(X56,X55),X57),s(fun(X56,bool),X58)),X55,X56)),s(fun(X55,bool),'const.pred_set.IMAGE_2'(s(fun(X56,X55),X57),s(fun(X56,bool),X58))),s(fun(X56,bool),X58))) | s(bool,X60) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f5744,f1507])).
fof(f46922,plain,(
  ( ! [X80,X78,X76,X81,X79,X77,X82] : (p(s(bool,X80)) | s(bool,X81) = s(bool,'const.pred_set.INJ_3'(s(fun(X76,X77),sK19(X78,X79,'const.pred_set.IMAGE_2'(s(fun(X77,X76),X78),s(fun(X77,bool),X79)),X76,X77)),s(fun(X76,bool),'const.pred_set.IMAGE_2'(s(fun(X77,X76),X78),s(fun(X77,bool),X79))),s(fun(X77,bool),X79))) | s(bool,X81) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(subsumption_resolution,[],[f46791,f232])).
fof(f46791,plain,(
  ( ! [X80,X78,X76,X81,X79,X77,X82] : (p(s(bool,X80)) | s(bool,X81) = s(bool,'const.pred_set.INJ_3'(s(fun(X76,X77),sK19(X78,X79,'const.pred_set.IMAGE_2'(s(fun(X77,X76),X78),s(fun(X77,bool),X79)),X76,X77)),s(fun(X76,bool),'const.pred_set.IMAGE_2'(s(fun(X77,X76),X78),s(fun(X77,bool),X79))),s(fun(X77,bool),X79))) | s(bool,X81) = s(bool,X82) | s(bool,'T_0') = s(bool,X82) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f5744,f1507])).
fof(f46926,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X0,X1),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3)),X0,X1)),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),X3))),s(fun(X1,bool),X3))) | p(s(bool,X4))) )),
  inference(condensation,[],[f46925])).
fof(f46925,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X2,X3),sK19(X4,X5,'const.pred_set.IMAGE_2'(s(fun(X3,X2),X4),s(fun(X3,bool),X5)),X2,X3)),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X3,X2),X4),s(fun(X3,bool),X5))),s(fun(X3,bool),X5)))) )),
  inference(condensation,[],[f46924])).
fof(f46924,plain,(
  ( ! [X88,X87,X85,X83,X89,X86,X84] : (p(s(bool,X87)) | s(bool,X88) = s(bool,X89) | s(bool,'T_0') = s(bool,X89) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X83,X84),sK19(X85,X86,'const.pred_set.IMAGE_2'(s(fun(X84,X83),X85),s(fun(X84,bool),X86)),X83,X84)),s(fun(X83,bool),'const.pred_set.IMAGE_2'(s(fun(X84,X83),X85),s(fun(X84,bool),X86))),s(fun(X84,bool),X86)))) )),
  inference(subsumption_resolution,[],[f46792,f1693])).
fof(f46792,plain,(
  ( ! [X88,X87,X85,X83,X89,X86,X84] : (p(s(bool,X87)) | s(bool,X87) = s(bool,X88) | s(bool,X88) = s(bool,X89) | s(bool,'T_0') = s(bool,X89) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X83,X84),sK19(X85,X86,'const.pred_set.IMAGE_2'(s(fun(X84,X83),X85),s(fun(X84,bool),X86)),X83,X84)),s(fun(X83,bool),'const.pred_set.IMAGE_2'(s(fun(X84,X83),X85),s(fun(X84,bool),X86))),s(fun(X84,bool),X86)))) )),
  inference(superposition,[],[f5744,f1507])).
fof(f46927,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X94))) = s(bool,happ(s(fun(bool,bool),X94),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X90,X91),sK19(X92,X93,'const.pred_set.IMAGE_2'(s(fun(X91,X90),X92),s(fun(X91,bool),X93)),X90,X91)),s(fun(X90,bool),'const.pred_set.IMAGE_2'(s(fun(X91,X90),X92),s(fun(X91,bool),X93))),s(fun(X91,bool),X93)))) ) | $spl202),
  inference(subsumption_resolution,[],[f46793,f34209])).
fof(f46793,plain,(
  ( ! [X94,X92,X90,X93,X91] : (p(s(bool,'const.min.@_1'(s(fun(bool,bool),X94)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X94))) = s(bool,happ(s(fun(bool,bool),X94),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X90,X91),sK19(X92,X93,'const.pred_set.IMAGE_2'(s(fun(X91,X90),X92),s(fun(X91,bool),X93)),X90,X91)),s(fun(X90,bool),'const.pred_set.IMAGE_2'(s(fun(X91,X90),X92),s(fun(X91,bool),X93))),s(fun(X91,bool),X93)))) )),
  inference(superposition,[],[f5744,f1782])).
fof(f47602,plain,(
  ( ! [X46] : (~sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X46)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X46))) = s(bool,happ(s(fun(bool,bool),X46),s(bool,'T_0')))) ) | $spl414),
  inference(cnf_transformation,[],[f47602_D])).
fof(f47602_D,plain,(
  ( ! [X46] : (~sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X46)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X46))) = s(bool,happ(s(fun(bool,bool),X46),s(bool,'T_0')))) ) <=> ~$spl414),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl414])])).
fof(f47576,plain,(
  ( ! [X45,X46] : (~sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X46)))),'F_0') | s(bool,'T_0') = s(bool,X45) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X46))) = s(bool,happ(s(fun(bool,bool),X46),s(bool,'T_0')))) ) | $spl50),
  inference(duplicate_literal_removal,[],[f47558])).
fof(f47558,plain,(
  ( ! [X45,X46] : (~sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X46)))),'F_0') | s(bool,'T_0') = s(bool,X45) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X46))) = s(bool,happ(s(fun(bool,bool),X46),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X45)) ) | $spl50),
  inference(superposition,[],[f35172,f1782])).
fof(f35172,plain,(
  ( ! [X0] : (~sP1(f(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl50),
  inference(superposition,[],[f34600,f226])).
fof(f34600,plain,(
  ~sP1(f(s(bool,'F_0')),'F_0') | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f294])).
fof(f34561,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | $spl50),
  inference(unit_resulting_resolution,[],[f219,f17019,f295])).
fof(f17019,plain,(
  sP1('T_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f412,f412,f11493])).
fof(f37320,plain,(
  $false | ($spl65 | $spl66 | $spl117 | $spl398)),
  inference(subsumption_resolution,[],[f37319,f219])).
fof(f37319,plain,(
  ~p(s(bool,'T_0')) | ($spl65 | $spl66 | $spl117 | $spl398)),
  inference(forward_demodulation,[],[f19573,f36156])).
fof(f36156,plain,(
  ( ! [X114] : (s(bool,'T_0') = s(bool,X114)) ) | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f34374,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121])).
fof(f34380,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'T_0'))) | $spl65),
  inference(subsumption_resolution,[],[f28312,f412])).
fof(f28312,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | $spl65),
  inference(superposition,[],[f418,f20464])).
fof(f28334,plain,(
  ( ! [X333,X331,X332] : (s(bool,f(s(bool,'T_0'))) != s(bool,f(s(X331,sK18(X332,X333,bool,X331)))) | s(fun(X331,bool),X332) = s(fun(X331,bool),X333) | s(bool,'T_0') = s(bool,g(s(X331,sK18(X332,X333,bool,X331))))) ) | $spl65),
  inference(superposition,[],[f305,f20464])).
fof(f28335,plain,(
  ( ! [X334] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X334))) = s(bool,happ(s(fun(bool,bool),X334),s(bool,f(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X334)))) ) | $spl65),
  inference(superposition,[],[f259,f20464])).
fof(f28336,plain,(
  ( ! [X335] : (~sP6('F_0',happ(s(fun(bool,bool),X335),s(bool,f(s(bool,'T_0')))),'|dollar|exists_1'(s(fun(bool,bool),X335))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X335)))) ) | $spl65),
  inference(superposition,[],[f1040,f20464])).
fof(f28340,plain,(
  ( ! [X339,X340] : (sP0(X340,happ(s(fun(bool,bool),X339),s(bool,f(s(bool,'T_0'))))) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X339)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X339)))) ) | $spl65),
  inference(superposition,[],[f1057,f20464])).
fof(f28341,plain,(
  ( ! [X341,X342] : (sP0(happ(s(fun(bool,bool),X341),s(bool,f(s(bool,'T_0')))),X342) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X341)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X341)))) ) | $spl65),
  inference(superposition,[],[f1058,f20464])).
fof(f28342,plain,(
  ( ! [X344,X343] : (sP1(happ(s(fun(bool,bool),X343),s(bool,f(s(bool,'T_0')))),X344) | p(s(bool,X344)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X343)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X343)))) ) | $spl65),
  inference(superposition,[],[f1059,f20464])).
fof(f28343,plain,(
  ( ! [X346,X345] : (sP1(X346,happ(s(fun(bool,bool),X345),s(bool,f(s(bool,'T_0'))))) | p(s(bool,X346)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X345)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X345)))) ) | $spl65),
  inference(superposition,[],[f1060,f20464])).
fof(f28344,plain,(
  ( ! [X349,X347,X348] : (sP2(X348,X349,happ(s(fun(bool,bool),X347),s(bool,f(s(bool,'T_0'))))) | ~p(s(bool,X349)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X347)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X347)))) ) | $spl65),
  inference(superposition,[],[f1061,f20464])).
fof(f28345,plain,(
  ( ! [X350,X352,X351] : (sP8(happ(s(fun(bool,bool),X350),s(bool,f(s(bool,'T_0')))),X351,X352) | ~p(s(bool,X352)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X350)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X350)))) ) | $spl65),
  inference(superposition,[],[f1065,f20464])).
fof(f28346,plain,(
  ( ! [X354,X353,X355] : (sP8(happ(s(fun(bool,bool),X353),s(bool,f(s(bool,'T_0')))),X354,X355) | ~p(s(bool,X354)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X353)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X353)))) ) | $spl65),
  inference(superposition,[],[f1066,f20464])).
fof(f28347,plain,(
  ( ! [X356,X358,X357] : (sP10(happ(s(fun(bool,bool),X356),s(bool,f(s(bool,'T_0')))),X357,X358) | p(s(bool,X358)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X356)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X356)))) ) | $spl65),
  inference(superposition,[],[f1069,f20464])).
fof(f28348,plain,(
  ( ! [X360,X359,X361] : (sP10(happ(s(fun(bool,bool),X359),s(bool,f(s(bool,'T_0')))),X360,X361) | ~p(s(bool,X360)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X359)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X359)))) ) | $spl65),
  inference(superposition,[],[f1070,f20464])).
fof(f28349,plain,(
  ( ! [X364,X362,X363] : (sP10(happ(s(fun(bool,bool),X362),s(bool,f(s(bool,'T_0')))),X363,X364) | ~sP9(happ(s(fun(bool,bool),X362),s(bool,'const.min.@_1'(s(fun(bool,bool),X362)))),X363,X364) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X362)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X362)))) ) | $spl65),
  inference(superposition,[],[f1072,f20464])).
fof(f28350,plain,(
  ( ! [X366,X365,X367] : (sP8(happ(s(fun(bool,bool),X365),s(bool,f(s(bool,'T_0')))),X366,X367) | ~sP7(happ(s(fun(bool,bool),X365),s(bool,'const.min.@_1'(s(fun(bool,bool),X365)))),X366,X367) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X365)))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X365)))) ) | $spl65),
  inference(superposition,[],[f1073,f20464])).
fof(f28351,plain,(
  ( ! [X372,X368,X370,X369,X371] : (sP6('const.pred_set.SURJ_3'(s(fun(X369,X370),X371),s(fun(X369,bool),X372),s(fun(X370,bool),'const.pred_set.IMAGE_2'(s(fun(X369,X370),X371),s(fun(X369,bool),X372)))),happ(s(fun(bool,bool),X368),s(bool,f(s(bool,'T_0')))),'|dollar|exists_1'(s(fun(bool,bool),X368))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X368)))) ) | $spl65),
  inference(superposition,[],[f1251,f20464])).
fof(f28352,plain,(
  ( ! [X377,X374,X376,X373,X375] : (sP6('const.pred_set.SURJ_3'(s(fun(X374,X375),X376),s(fun(X374,bool),X377),s(fun(X375,bool),'const.pred_set.IMAGE_2'(s(fun(X374,X375),X376),s(fun(X374,bool),X377)))),'|dollar|exists_1'(s(fun(bool,bool),X373)),happ(s(fun(bool,bool),X373),s(bool,f(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X373)))) ) | $spl65),
  inference(superposition,[],[f1253,f20464])).
fof(f28353,plain,(
  ( ! [X378] : (sP5('T_0','|dollar|exists_1'(s(fun(bool,bool),X378)),happ(s(fun(bool,bool),X378),s(bool,f(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X378)))) ) | $spl65),
  inference(superposition,[],[f3281,f20464])).
fof(f28354,plain,(
  ( ! [X379] : (sP5('T_0',happ(s(fun(bool,bool),X379),s(bool,f(s(bool,'T_0')))),'|dollar|exists_1'(s(fun(bool,bool),X379))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X379)))) ) | $spl65),
  inference(superposition,[],[f3334,f20464])).
fof(f28355,plain,(
  ( ! [X380,X382,X381] : (~p(s(bool,happ(s(fun(bool,bool),X380),s(bool,f(s(bool,'T_0')))))) | p(s(bool,happ(s(fun(bool,bool),X380),s(bool,X382)))) | ~p(s(bool,X381)) | s(bool,'T_0') = s(bool,sK14(X380,X381,bool))) ) | $spl65),
  inference(superposition,[],[f266,f20464])).
fof(f28356,plain,(
  ( ! [X383,X385,X384] : (~p(s(bool,happ(s(fun(bool,bool),X383),s(bool,f(s(bool,'T_0')))))) | p(s(bool,happ(s(fun(bool,bool),X383),s(bool,X385)))) | ~p(s(bool,X384)) | s(bool,'T_0') = s(bool,sK15(X383,X384,bool))) ) | $spl65),
  inference(superposition,[],[f268,f20464])).
fof(f28357,plain,(
  ( ! [X387,X388,X386] : (~p(s(bool,happ(s(fun(bool,bool),X386),s(bool,f(s(bool,'T_0')))))) | p(s(bool,happ(s(fun(bool,bool),X386),s(bool,X388)))) | p(s(bool,X387)) | s(bool,'T_0') = s(bool,sK16(X386,X387,bool))) ) | $spl65),
  inference(superposition,[],[f269,f20464])).
fof(f28358,plain,(
  ( ! [X389,X391,X390] : (~p(s(bool,happ(s(fun(bool,bool),X389),s(bool,f(s(bool,'T_0')))))) | p(s(bool,happ(s(fun(bool,bool),X389),s(bool,X391)))) | p(s(bool,X390)) | s(bool,'T_0') = s(bool,sK17(X389,X390,bool))) ) | $spl65),
  inference(superposition,[],[f271,f20464])).
fof(f28359,plain,(
  ( ! [X393,X392,X394] : (s(X394,f(s(bool,f(s(bool,'T_0'))))) != s(X394,g(s(bool,f(s(bool,'T_0'))))) | s(fun(bool,X394),X392) = s(fun(bool,X394),X393) | s(bool,'T_0') = s(bool,sK18(X392,X393,X394,bool))) ) | $spl65),
  inference(superposition,[],[f305,f20464])).
fof(f28827,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,X0) = s(bool,f(s(bool,'T_0')))) ) | $spl65),
  inference(condensation,[],[f28826])).
fof(f28826,plain,(
  ( ! [X19,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X19) = s(bool,f(s(bool,'T_0')))) ) | $spl65),
  inference(subsumption_resolution,[],[f28377,f232])).
fof(f28377,plain,(
  ( ! [X19,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X19) = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X18)) ) | $spl65),
  inference(superposition,[],[f273,f20464])).
fof(f28503,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2) | s(bool,X1) = s(bool,f(s(bool,'T_0')))) ) | $spl65),
  inference(condensation,[],[f28502])).
fof(f28502,plain,(
  ( ! [X103,X101,X102,X100] : (s(bool,'T_0') = s(bool,X100) | s(bool,X101) = s(bool,X102) | s(bool,X102) = s(bool,X103) | s(bool,'T_0') = s(bool,X103) | s(bool,X101) = s(bool,f(s(bool,'T_0')))) ) | $spl65),
  inference(duplicate_literal_removal,[],[f28406])).
fof(f28406,plain,(
  ( ! [X103,X101,X102,X100] : (s(bool,'T_0') = s(bool,X100) | s(bool,X101) = s(bool,X102) | s(bool,X102) = s(bool,X103) | s(bool,'T_0') = s(bool,X103) | s(bool,X101) = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X100)) ) | $spl65),
  inference(superposition,[],[f1507,f20464])).
fof(f29088,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | sP6('T_0',happ(s(fun(bool,bool),X0),s(bool,f(s(bool,'T_0')))),'|dollar|exists_1'(s(fun(bool,bool),X0)))) ) | $spl65),
  inference(condensation,[],[f29087])).
fof(f29087,plain,(
  ( ! [X59,X58] : (sP6('T_0',happ(s(fun(bool,bool),X59),s(bool,f(s(bool,'T_0')))),'|dollar|exists_1'(s(fun(bool,bool),X59))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X59))) | s(bool,'T_0') = s(bool,X58)) ) | $spl65),
  inference(duplicate_literal_removal,[],[f29066])).
fof(f29066,plain,(
  ( ! [X59,X58] : (sP6('T_0',happ(s(fun(bool,bool),X59),s(bool,f(s(bool,'T_0')))),'|dollar|exists_1'(s(fun(bool,bool),X59))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X59))) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) ) | $spl65),
  inference(superposition,[],[f3286,f20464])).
fof(f29471,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | ~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X0)),happ(s(fun(bool,bool),X0),s(bool,f(s(bool,'T_0')))))) ) | $spl65),
  inference(condensation,[],[f29470])).
fof(f29470,plain,(
  ( ! [X59,X58] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X59)),happ(s(fun(bool,bool),X59),s(bool,f(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X59))) | s(bool,'T_0') = s(bool,X58)) ) | $spl65),
  inference(duplicate_literal_removal,[],[f29449])).
fof(f29449,plain,(
  ( ! [X59,X58] : (~sP6('F_0','|dollar|exists_1'(s(fun(bool,bool),X59)),happ(s(fun(bool,bool),X59),s(bool,f(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X59))) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) ) | $spl65),
  inference(superposition,[],[f3311,f20464])).
fof(f29784,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X0))) | sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X0)),happ(s(fun(bool,bool),X0),s(bool,f(s(bool,'T_0')))))) ) | $spl65),
  inference(condensation,[],[f29783])).
fof(f29783,plain,(
  ( ! [X59,X58] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X59)),happ(s(fun(bool,bool),X59),s(bool,f(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X59))) | s(bool,'T_0') = s(bool,X58)) ) | $spl65),
  inference(duplicate_literal_removal,[],[f29762])).
fof(f29762,plain,(
  ( ! [X59,X58] : (sP6('T_0','|dollar|exists_1'(s(fun(bool,bool),X59)),happ(s(fun(bool,bool),X59),s(bool,f(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X59))) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) ) | $spl65),
  inference(superposition,[],[f3339,f20464])).
fof(f31086,plain,(
  ( ! [X62,X63] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X62),s(bool,f(s(bool,'T_0'))))) | s(bool,X63) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X62))) | s(bool,'T_0') = s(bool,X63) | s(bool,'T_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X62)))) ) | $spl65),
  inference(superposition,[],[f1491,f20464])).
fof(f31686,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1))))) | s(bool,f(s(bool,'T_0'))) = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) ) | $spl65),
  inference(condensation,[],[f31685])).
fof(f31685,plain,(
  ( ! [X551,X552,X550] : (s(bool,f(s(bool,'T_0'))) = s(bool,'|dollar|exists_1'(s(fun(X551,bool),X552))) | s(bool,'T_0') = s(bool,X550) | s(bool,'T_0') = s(bool,happ(s(fun(X551,bool),X552),s(X551,'const.min.@_1'(s(fun(X551,bool),X552)))))) ) | $spl65),
  inference(duplicate_literal_removal,[],[f31243])).
fof(f31243,plain,(
  ( ! [X551,X552,X550] : (s(bool,f(s(bool,'T_0'))) = s(bool,'|dollar|exists_1'(s(fun(X551,bool),X552))) | s(bool,'T_0') = s(bool,X550) | s(bool,'T_0') = s(bool,happ(s(fun(X551,bool),X552),s(X551,'const.min.@_1'(s(fun(X551,bool),X552))))) | s(bool,'T_0') = s(bool,X550)) ) | $spl65),
  inference(superposition,[],[f20464,f1491])).
fof(f32760,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,f(s(bool,'T_0'))) = s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) ) | $spl65),
  inference(condensation,[],[f32759])).
fof(f32759,plain,(
  ( ! [X557,X555,X556] : (s(bool,f(s(bool,'T_0'))) = s(bool,happ(s(fun(X556,bool),X557),s(X556,'const.min.@_1'(s(fun(X556,bool),X557))))) | s(bool,'T_0') = s(bool,X555) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X556,bool),X557)))) ) | $spl65),
  inference(duplicate_literal_removal,[],[f32488])).
fof(f32488,plain,(
  ( ! [X557,X555,X556] : (s(bool,f(s(bool,'T_0'))) = s(bool,happ(s(fun(X556,bool),X557),s(X556,'const.min.@_1'(s(fun(X556,bool),X557))))) | s(bool,'T_0') = s(bool,X555) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X556,bool),X557))) | s(bool,'T_0') = s(bool,X555)) ) | $spl65),
  inference(superposition,[],[f20464,f1520])).
fof(f33574,plain,(
  ( ! [X418,X419] : (s(bool,f(s(bool,'T_0'))) = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X418))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X418),s(bool,'T_0'))) | s(bool,X419) = s(bool,'const.min.@_1'(s(fun(bool,bool),X418))) | s(bool,'T_0') = s(bool,X419)) ) | $spl65),
  inference(superposition,[],[f20464,f1782])).
fof(f33583,plain,(
  ( ! [X445,X444,X446] : (sP4('T_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X444)))),'F_0') | s(bool,X445) = s(bool,happ(s(fun(bool,bool),X444),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X445) | s(bool,X446) = s(bool,'const.min.@_1'(s(fun(bool,bool),X444))) | s(bool,'T_0') = s(bool,X446)) ) | $spl65),
  inference(superposition,[],[f20778,f1782])).
fof(f33582,plain,(
  ( ! [X441,X443,X442] : (~sP5('T_0','T_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X441))))) | s(bool,X442) = s(bool,happ(s(fun(bool,bool),X441),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X442) | s(bool,X443) = s(bool,'const.min.@_1'(s(fun(bool,bool),X441))) | s(bool,'T_0') = s(bool,X443)) ) | $spl65),
  inference(superposition,[],[f20757,f1782])).
fof(f33581,plain,(
  ( ! [X438,X440,X439] : (sP4(f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X438)))),'T_0','F_0') | s(bool,X439) = s(bool,happ(s(fun(bool,bool),X438),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X439) | s(bool,X440) = s(bool,'const.min.@_1'(s(fun(bool,bool),X438))) | s(bool,'T_0') = s(bool,X440)) ) | $spl65),
  inference(superposition,[],[f20739,f1782])).
fof(f33580,plain,(
  ( ! [X436,X437,X435] : (~sP6('T_0','T_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X435))))) | s(bool,X436) = s(bool,happ(s(fun(bool,bool),X435),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X436) | s(bool,X437) = s(bool,'const.min.@_1'(s(fun(bool,bool),X435))) | s(bool,'T_0') = s(bool,X437)) ) | $spl65),
  inference(superposition,[],[f20717,f1782])).
fof(f33579,plain,(
  ( ! [X432,X434,X433] : (sP6('F_0','T_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X432))))) | s(bool,X433) = s(bool,happ(s(fun(bool,bool),X432),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X433) | s(bool,X434) = s(bool,'const.min.@_1'(s(fun(bool,bool),X432))) | s(bool,'T_0') = s(bool,X434)) ) | $spl65),
  inference(superposition,[],[f20704,f1782])).
fof(f33578,plain,(
  ( ! [X430,X429,X431] : (~sP6('T_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X429)))),'T_0') | s(bool,X430) = s(bool,happ(s(fun(bool,bool),X429),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X430) | s(bool,X431) = s(bool,'const.min.@_1'(s(fun(bool,bool),X429))) | s(bool,'T_0') = s(bool,X431)) ) | $spl65),
  inference(superposition,[],[f20686,f1782])).
fof(f33577,plain,(
  ( ! [X428,X426,X427] : (sP6('F_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X426)))),'T_0') | s(bool,X427) = s(bool,happ(s(fun(bool,bool),X426),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X427) | s(bool,X428) = s(bool,'const.min.@_1'(s(fun(bool,bool),X426))) | s(bool,'T_0') = s(bool,X428)) ) | $spl65),
  inference(superposition,[],[f20675,f1782])).
fof(f28128,plain,(
  ( ! [X12,X10,X11] : (s(bool,X11) = s(bool,f(s(bool,X10))) | s(bool,'T_0') = s(bool,X11) | s(bool,X10) = s(bool,X12) | s(bool,'T_0') = s(bool,X12)) ) | $spl65),
  inference(superposition,[],[f20464,f518])).
fof(f28126,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X1) = s(bool,f(s(bool,X0))) | s(bool,'T_0') = s(bool,X1) | s(bool,X2) = s(bool,X3) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X4) | s(bool,X0) = s(bool,X2)) ) | $spl65),
  inference(superposition,[],[f20464,f1507])).
fof(f23228,plain,(
  ( ! [X191,X192,X190,X193] : (sP4('T_0',f(s(bool,X190)),'F_0') | s(bool,X191) = s(bool,X192) | s(bool,X190) = s(bool,X192) | s(bool,X191) = s(bool,X193) | s(bool,'T_0') = s(bool,X193)) ) | $spl65),
  inference(superposition,[],[f20702,f1507])).
fof(f23227,plain,(
  ( ! [X189,X187,X188,X186] : (~sP5('T_0','T_0',f(s(bool,X186))) | s(bool,X187) = s(bool,X188) | s(bool,X186) = s(bool,X188) | s(bool,X187) = s(bool,X189) | s(bool,'T_0') = s(bool,X189)) ) | $spl65),
  inference(superposition,[],[f20683,f1507])).
fof(f23226,plain,(
  ( ! [X185,X182,X184,X183] : (sP4(f(s(bool,X182)),'T_0','F_0') | s(bool,X183) = s(bool,X184) | s(bool,X182) = s(bool,X184) | s(bool,X183) = s(bool,X185) | s(bool,'T_0') = s(bool,X185)) ) | $spl65),
  inference(superposition,[],[f20673,f1507])).
fof(f23224,plain,(
  ( ! [X177,X175,X176,X174] : (~sP6('T_0','T_0',f(s(bool,X174))) | s(bool,X175) = s(bool,X176) | s(bool,X174) = s(bool,X176) | s(bool,X175) = s(bool,X177) | s(bool,'T_0') = s(bool,X177)) ) | $spl65),
  inference(superposition,[],[f20441,f1507])).
fof(f23223,plain,(
  ( ! [X173,X171,X172,X170] : (sP6('F_0','T_0',f(s(bool,X170))) | s(bool,X171) = s(bool,X172) | s(bool,X170) = s(bool,X172) | s(bool,X171) = s(bool,X173) | s(bool,'T_0') = s(bool,X173)) ) | $spl65),
  inference(superposition,[],[f20440,f1507])).
fof(f23222,plain,(
  ( ! [X167,X169,X166,X168] : (~sP6('T_0',f(s(bool,X166)),'T_0') | s(bool,X167) = s(bool,X168) | s(bool,X166) = s(bool,X168) | s(bool,X167) = s(bool,X169) | s(bool,'T_0') = s(bool,X169)) ) | $spl65),
  inference(superposition,[],[f20354,f1507])).
fof(f23221,plain,(
  ( ! [X165,X163,X164,X162] : (sP6('F_0',f(s(bool,X162)),'T_0') | s(bool,X163) = s(bool,X164) | s(bool,X162) = s(bool,X164) | s(bool,X163) = s(bool,X165) | s(bool,'T_0') = s(bool,X165)) ) | $spl65),
  inference(superposition,[],[f20353,f1507])).
fof(f23195,plain,(
  ( ! [X30,X33,X31,X32] : (s(bool,X30) != s(bool,f(s(bool,X30))) | s(bool,X31) = s(bool,X32) | s(bool,X30) = s(bool,X32) | s(bool,X31) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) ) | $spl65),
  inference(superposition,[],[f18797,f1507])).
fof(f20778,plain,(
  ( ! [X0,X1] : (sP4('T_0',f(s(bool,X0)),'F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | $spl65),
  inference(superposition,[],[f20702,f518])).
fof(f20757,plain,(
  ( ! [X0,X1] : (~sP5('T_0','T_0',f(s(bool,X0))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | $spl65),
  inference(superposition,[],[f20683,f518])).
fof(f20739,plain,(
  ( ! [X0,X1] : (sP4(f(s(bool,X0)),'T_0','F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | $spl65),
  inference(superposition,[],[f20673,f518])).
fof(f20717,plain,(
  ( ! [X0,X1] : (~sP6('T_0','T_0',f(s(bool,X0))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | $spl65),
  inference(superposition,[],[f20441,f518])).
fof(f20704,plain,(
  ( ! [X0,X1] : (sP6('F_0','T_0',f(s(bool,X0))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | $spl65),
  inference(superposition,[],[f20440,f518])).
fof(f20702,plain,(
  sP4('T_0',f(s(bool,'T_0')),'F_0') | $spl65),
  inference(unit_resulting_resolution,[],[f20440,f319])).
fof(f20686,plain,(
  ( ! [X0,X1] : (~sP6('T_0',f(s(bool,X0)),'T_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | $spl65),
  inference(superposition,[],[f20354,f518])).
fof(f20683,plain,(
  ~sP5('T_0','T_0',f(s(bool,'T_0'))) | $spl65),
  inference(unit_resulting_resolution,[],[f219,f396,f391,f20354,f322])).
fof(f20675,plain,(
  ( ! [X0,X1] : (sP6('F_0',f(s(bool,X0)),'T_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | $spl65),
  inference(superposition,[],[f20353,f518])).
fof(f20673,plain,(
  sP4(f(s(bool,'T_0')),'T_0','F_0') | $spl65),
  inference(unit_resulting_resolution,[],[f20353,f319])).
fof(f20464,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl65),
  inference(trivial_inequality_removal,[],[f20459])).
fof(f20459,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X0) = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl65),
  inference(superposition,[],[f18797,f518])).
fof(f20450,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,f(s(bool,X0))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | $spl65),
  inference(superposition,[],[f18797,f518])).
fof(f20353,plain,(
  sP6('F_0',f(s(bool,'T_0')),'T_0') | $spl65),
  inference(unit_resulting_resolution,[],[f383,f18797,f337])).
fof(f20354,plain,(
  ~sP6('T_0',f(s(bool,'T_0')),'T_0') | $spl65),
  inference(unit_resulting_resolution,[],[f219,f18797,f339])).
fof(f20440,plain,(
  sP6('F_0','T_0',f(s(bool,'T_0'))) | $spl65),
  inference(unit_resulting_resolution,[],[f383,f18797,f337])).
fof(f20441,plain,(
  ~sP6('T_0','T_0',f(s(bool,'T_0'))) | $spl65),
  inference(unit_resulting_resolution,[],[f219,f18797,f339])).
fof(f37317,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284,f37286,f37288,f37290,f37292,f37294,f37296,f37298,f37300,f37302,f37304,f37306,f37308,f37312,f37316])).
fof(f37316,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X1,X4) = s(X1,happ(s(fun(X0,X1),X2),s(X0,happ(s(fun(X1,X0),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)),X1,X0)),s(X1,X4)))))) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36912,f219])).
fof(f36912,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s(X1,X4) = s(X1,happ(s(fun(X0,X1),X2),s(X0,happ(s(fun(X1,X0),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)),X1,X0)),s(X1,X4)))))) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f5743])).
fof(f37312,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(X1,X6)))))) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f37311,f219])).
fof(f37311,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(X1,X6)))))) ) | ($spl65 | $spl66 | $spl398)),
  inference(forward_demodulation,[],[f37310,f36156])).
fof(f37310,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),X2)))) | s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(X1,X6)))))) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36908,f219])).
fof(f36908,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),X2)))) | s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(X1,X6)))))) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f307])).
fof(f37308,plain,(
  ( ! [X83,X81,X84,X82] : (sP8(happ(s(fun(X81,bool),X82),s(X81,'const.min.@_1'(s(fun(X81,bool),X82)))),X83,X84) | ~sP7(happ(s(fun(X81,bool),X82),s(X81,'const.min.@_1'(s(fun(X81,bool),X82)))),X83,X84)) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36507,f219])).
fof(f36507,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,'T_0')) | sP8(happ(s(fun(X81,bool),X82),s(X81,'const.min.@_1'(s(fun(X81,bool),X82)))),X83,X84) | ~sP7(happ(s(fun(X81,bool),X82),s(X81,'const.min.@_1'(s(fun(X81,bool),X82)))),X83,X84)) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1073])).
fof(f37306,plain,(
  ( ! [X80,X78,X79,X77] : (sP10(happ(s(fun(X77,bool),X78),s(X77,'const.min.@_1'(s(fun(X77,bool),X78)))),X79,X80) | ~sP9(happ(s(fun(X77,bool),X78),s(X77,'const.min.@_1'(s(fun(X77,bool),X78)))),X79,X80)) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36506,f219])).
fof(f36506,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,'T_0')) | sP10(happ(s(fun(X77,bool),X78),s(X77,'const.min.@_1'(s(fun(X77,bool),X78)))),X79,X80) | ~sP9(happ(s(fun(X77,bool),X78),s(X77,'const.min.@_1'(s(fun(X77,bool),X78)))),X79,X80)) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1072])).
fof(f37304,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,X75)) | p(s(bool,X76)) | ~sP10(happ(s(fun(X73,bool),X74),s(X73,'const.min.@_1'(s(fun(X73,bool),X74)))),X76,X75)) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36505,f219])).
fof(f36505,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X75)) | p(s(bool,X76)) | ~sP10(happ(s(fun(X73,bool),X74),s(X73,'const.min.@_1'(s(fun(X73,bool),X74)))),X76,X75)) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1071])).
fof(f37302,plain,(
  ( ! [X70,X72,X71,X69] : (sP10(happ(s(fun(X69,bool),X70),s(X69,'const.min.@_1'(s(fun(X69,bool),X70)))),X71,X72) | ~p(s(bool,X71))) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36504,f219])).
fof(f36504,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,'T_0')) | sP10(happ(s(fun(X69,bool),X70),s(X69,'const.min.@_1'(s(fun(X69,bool),X70)))),X71,X72) | ~p(s(bool,X71))) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1070])).
fof(f37300,plain,(
  ( ! [X68,X66,X67,X65] : (sP10(happ(s(fun(X65,bool),X66),s(X65,'const.min.@_1'(s(fun(X65,bool),X66)))),X68,X67) | p(s(bool,X67))) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36503,f219])).
fof(f36503,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,'T_0')) | sP10(happ(s(fun(X65,bool),X66),s(X65,'const.min.@_1'(s(fun(X65,bool),X66)))),X68,X67) | p(s(bool,X67))) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1069])).
fof(f37298,plain,(
  ( ! [X61,X64,X62,X63] : (p(s(bool,X63)) | ~p(s(bool,X64)) | ~sP9(X64,X63,happ(s(fun(X61,bool),X62),s(X61,'const.min.@_1'(s(fun(X61,bool),X62)))))) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36502,f219])).
fof(f36502,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,'T_0')) | p(s(bool,X63)) | ~p(s(bool,X64)) | ~sP9(X64,X63,happ(s(fun(X61,bool),X62),s(X61,'const.min.@_1'(s(fun(X61,bool),X62)))))) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1068])).
fof(f37296,plain,(
  ( ! [X59,X57,X60,X58] : (p(s(bool,X59)) | p(s(bool,X60)) | ~sP8(happ(s(fun(X57,bool),X58),s(X57,'const.min.@_1'(s(fun(X57,bool),X58)))),X60,X59)) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36501,f219])).
fof(f36501,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'T_0')) | p(s(bool,X59)) | p(s(bool,X60)) | ~sP8(happ(s(fun(X57,bool),X58),s(X57,'const.min.@_1'(s(fun(X57,bool),X58)))),X60,X59)) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1067])).
fof(f37294,plain,(
  ( ! [X54,X56,X55,X53] : (sP8(happ(s(fun(X53,bool),X54),s(X53,'const.min.@_1'(s(fun(X53,bool),X54)))),X55,X56) | ~p(s(bool,X55))) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36500,f219])).
fof(f36500,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,'T_0')) | sP8(happ(s(fun(X53,bool),X54),s(X53,'const.min.@_1'(s(fun(X53,bool),X54)))),X55,X56) | ~p(s(bool,X55))) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1066])).
fof(f37292,plain,(
  ( ! [X52,X50,X51,X49] : (sP8(happ(s(fun(X49,bool),X50),s(X49,'const.min.@_1'(s(fun(X49,bool),X50)))),X52,X51) | ~p(s(bool,X51))) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36499,f219])).
fof(f36499,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,'T_0')) | sP8(happ(s(fun(X49,bool),X50),s(X49,'const.min.@_1'(s(fun(X49,bool),X50)))),X52,X51) | ~p(s(bool,X51))) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1065])).
fof(f37290,plain,(
  ( ! [X47,X45,X48,X46] : (p(s(bool,X47)) | p(s(bool,X48)) | ~sP7(happ(s(fun(X45,bool),X46),s(X45,'const.min.@_1'(s(fun(X45,bool),X46)))),X47,X48)) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36498,f219])).
fof(f36498,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'T_0')) | p(s(bool,X47)) | p(s(bool,X48)) | ~sP7(happ(s(fun(X45,bool),X46),s(X45,'const.min.@_1'(s(fun(X45,bool),X46)))),X47,X48)) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1064])).
fof(f37288,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,X43)) | p(s(bool,X44)) | ~sP4(X43,happ(s(fun(X41,bool),X42),s(X41,'const.min.@_1'(s(fun(X41,bool),X42)))),X44)) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36497,f219])).
fof(f36497,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X43)) | p(s(bool,X44)) | ~sP4(X43,happ(s(fun(X41,bool),X42),s(X41,'const.min.@_1'(s(fun(X41,bool),X42)))),X44)) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1063])).
fof(f37286,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,X39)) | p(s(bool,X40)) | ~sP5(X39,happ(s(fun(X37,bool),X38),s(X37,'const.min.@_1'(s(fun(X37,bool),X38)))),X40)) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36496,f219])).
fof(f36496,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X39)) | p(s(bool,X40)) | ~sP5(X39,happ(s(fun(X37,bool),X38),s(X37,'const.min.@_1'(s(fun(X37,bool),X38)))),X40)) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1062])).
fof(f37284,plain,(
  ( ! [X35,X33,X36,X34] : (sP2(X36,X35,happ(s(fun(X33,bool),X34),s(X33,'const.min.@_1'(s(fun(X33,bool),X34))))) | ~p(s(bool,X35))) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36495,f219])).
fof(f36495,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'T_0')) | sP2(X36,X35,happ(s(fun(X33,bool),X34),s(X33,'const.min.@_1'(s(fun(X33,bool),X34))))) | ~p(s(bool,X35))) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1061])).
fof(f37282,plain,(
  ( ! [X30,X31,X32] : (sP1(X32,happ(s(fun(X30,bool),X31),s(X30,'const.min.@_1'(s(fun(X30,bool),X31))))) | p(s(bool,X32))) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36494,f219])).
fof(f36494,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'T_0')) | sP1(X32,happ(s(fun(X30,bool),X31),s(X30,'const.min.@_1'(s(fun(X30,bool),X31))))) | p(s(bool,X32))) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1060])).
fof(f37280,plain,(
  ( ! [X28,X29,X27] : (sP1(happ(s(fun(X27,bool),X28),s(X27,'const.min.@_1'(s(fun(X27,bool),X28)))),X29) | p(s(bool,X29))) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36493,f219])).
fof(f36493,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | sP1(happ(s(fun(X27,bool),X28),s(X27,'const.min.@_1'(s(fun(X27,bool),X28)))),X29) | p(s(bool,X29))) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1059])).
fof(f37278,plain,(
  ( ! [X26,X24,X25] : (sP0(happ(s(fun(X24,bool),X25),s(X24,'const.min.@_1'(s(fun(X24,bool),X25)))),X26)) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36492,f219])).
fof(f36492,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | sP0(happ(s(fun(X24,bool),X25),s(X24,'const.min.@_1'(s(fun(X24,bool),X25)))),X26)) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1058])).
fof(f37276,plain,(
  ( ! [X23,X21,X22] : (sP0(X23,happ(s(fun(X21,bool),X22),s(X21,'const.min.@_1'(s(fun(X21,bool),X22)))))) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36491,f219])).
fof(f36491,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'T_0')) | sP0(X23,happ(s(fun(X21,bool),X22),s(X21,'const.min.@_1'(s(fun(X21,bool),X22)))))) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f1057])).
fof(f37102,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36157,f36156])).
fof(f36157,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f236])).
fof(f37313,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284,f37286,f37288,f37290,f37292,f37294,f37296,f37298,f37300,f37302,f37304,f37306,f37308,f37312])).
fof(f37309,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284,f37286,f37288,f37290,f37292,f37294,f37296,f37298,f37300,f37302,f37304,f37306,f37308])).
fof(f37307,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284,f37286,f37288,f37290,f37292,f37294,f37296,f37298,f37300,f37302,f37304,f37306])).
fof(f37305,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284,f37286,f37288,f37290,f37292,f37294,f37296,f37298,f37300,f37302,f37304])).
fof(f37303,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284,f37286,f37288,f37290,f37292,f37294,f37296,f37298,f37300,f37302])).
fof(f37301,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284,f37286,f37288,f37290,f37292,f37294,f37296,f37298,f37300])).
fof(f37299,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284,f37286,f37288,f37290,f37292,f37294,f37296,f37298])).
fof(f37297,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284,f37286,f37288,f37290,f37292,f37294,f37296])).
fof(f37295,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284,f37286,f37288,f37290,f37292,f37294])).
fof(f37293,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284,f37286,f37288,f37290,f37292])).
fof(f37291,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284,f37286,f37288,f37290])).
fof(f37289,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284,f37286,f37288])).
fof(f37287,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284,f37286])).
fof(f37285,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282,f37284])).
fof(f37283,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280,f37282])).
fof(f37281,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278,f37280])).
fof(f37279,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276,f37278])).
fof(f37277,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102,f37276])).
fof(f37268,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36448,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36448,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f36059])).
fof(f36059,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f1248,f390,f34656,f324])).
fof(f34656,plain,(
  ( ! [X0,X1] : (sP4(X0,f(s(bool,'F_0')),X1)) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f331])).
fof(f37267,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36447,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36447,plain,(
  sP6('F_0','T_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f36058])).
fof(f36058,plain,(
  sP6('F_0','T_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f395,f390,f34656,f324])).
fof(f37266,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36446,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36446,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(f(s(bool,'T_0')),'F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f36016])).
fof(f36016,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(f(s(bool,'F_0')),'F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f393,f1249,f34650,f323])).
fof(f34650,plain,(
  ( ! [X0,X1] : (sP5(f(s(bool,'F_0')),X0,X1)) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f328])).
fof(f37265,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36445,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36445,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0',f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f35805])).
fof(f35805,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0',f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f393,f1247,f34649,f323])).
fof(f34649,plain,(
  ( ! [X0,X1] : (sP5(X0,f(s(bool,'F_0')),X1)) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f327])).
fof(f37264,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36444,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36444,plain,(
  sP6('T_0','F_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f35803])).
fof(f35803,plain,(
  sP6('T_0','F_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f393,f394,f34649,f323])).
fof(f37263,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36438,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36438,plain,(
  sP1(g(s(bool,'T_0')),f(s(bool,'T_0'))) | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f35051])).
fof(f35051,plain,(
  sP1(g(s(bool,'F_0')),f(s(bool,'F_0'))) | ($spl0 | $spl50)),
  inference(forward_demodulation,[],[f34972,f418])).
fof(f34972,plain,(
  sP1(g(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),f(s(bool,'F_0'))) | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f412,f34561,f3249])).
fof(f3249,plain,(
  ( ! [X0,X1] : (sP1(g(s(bool,X0)),X1) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2652,f226])).
fof(f2652,plain,(
  ( ! [X5] : (sP1(g(s(bool,'F_0')),X5) | p(s(bool,X5))) ) | $spl0),
  inference(subsumption_resolution,[],[f2619,f219])).
fof(f2619,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,X5)) | sP1(g(s(bool,'F_0')),X5)) ) | $spl0),
  inference(superposition,[],[f296,f1415])).
fof(f37262,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36437,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36437,plain,(
  sP1(f(s(bool,'T_0')),g(s(bool,'T_0'))) | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f35050])).
fof(f35050,plain,(
  sP1(f(s(bool,'F_0')),g(s(bool,'F_0'))) | ($spl0 | $spl50)),
  inference(forward_demodulation,[],[f34974,f418])).
fof(f34974,plain,(
  sP1(f(s(bool,'F_0')),g(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))) | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f412,f34561,f3273])).
fof(f3273,plain,(
  ( ! [X0,X1] : (sP1(X1,g(s(bool,X0))) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2653,f226])).
fof(f2653,plain,(
  ( ! [X6] : (sP1(X6,g(s(bool,'F_0'))) | p(s(bool,X6))) ) | $spl0),
  inference(subsumption_resolution,[],[f2620,f219])).
fof(f2620,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,X6)) | sP1(X6,g(s(bool,'F_0')))) ) | $spl0),
  inference(superposition,[],[f299,f1415])).
fof(f37261,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36436,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36436,plain,(
  ( ! [X0] : (sP10(g(s(bool,'T_0')),X0,f(s(bool,'T_0')))) ) | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f35049])).
fof(f35049,plain,(
  ( ! [X0] : (sP10(g(s(bool,'F_0')),X0,f(s(bool,'F_0')))) ) | ($spl0 | $spl50)),
  inference(forward_demodulation,[],[f34976,f418])).
fof(f34976,plain,(
  ( ! [X0] : (sP10(g(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),X0,f(s(bool,'F_0')))) ) | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f412,f34561,f3381])).
fof(f3381,plain,(
  ( ! [X2,X0,X1] : (sP10(g(s(bool,X0)),X1,X2) | p(s(bool,X2)) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2662,f226])).
fof(f2662,plain,(
  ( ! [X24,X23] : (sP10(g(s(bool,'F_0')),X24,X23) | p(s(bool,X23))) ) | $spl0),
  inference(subsumption_resolution,[],[f2629,f219])).
fof(f2629,plain,(
  ( ! [X24,X23] : (~p(s(bool,'T_0')) | p(s(bool,X23)) | sP10(g(s(bool,'F_0')),X24,X23)) ) | $spl0),
  inference(superposition,[],[f370,f1415])).
fof(f37260,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36435,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36435,plain,(
  ~sP5('T_0',g(s(bool,'T_0')),f(s(bool,'T_0'))) | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f35048])).
fof(f35048,plain,(
  ~sP5('T_0',g(s(bool,'F_0')),f(s(bool,'F_0'))) | ($spl0 | $spl50)),
  inference(forward_demodulation,[],[f34978,f418])).
fof(f34978,plain,(
  ~sP5('T_0',g(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),f(s(bool,'F_0'))) | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f219,f412,f34561,f4492])).
fof(f37259,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36434,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36434,plain,(
  ( ! [X2,X0,X3,X1] : (~sP10('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'T_0')),'T_0')) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f35009])).
fof(f35009,plain,(
  ( ! [X2,X0,X3,X1] : (~sP10('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'F_0')),'T_0')) ) | $spl50),
  inference(unit_resulting_resolution,[],[f219,f34561,f5762])).
fof(f37258,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36433,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36433,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4,f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f35008])).
fof(f35008,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4,f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f5760])).
fof(f37257,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36432,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36432,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9('T_0',f(s(bool,'T_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f35005])).
fof(f35005,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9('T_0',f(s(bool,'F_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f219,f34561,f5759])).
fof(f37256,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36431,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36431,plain,(
  ( ! [X2,X0,X3,X1] : (~sP8('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'T_0')),f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f35002])).
fof(f35002,plain,(
  ( ! [X2,X0,X3,X1] : (~sP8('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'F_0')),f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f34561,f5758])).
fof(f37255,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36430,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36430,plain,(
  ( ! [X2,X0,X3,X1] : (~sP8('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'T_0')),'F_0')) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f35001])).
fof(f35001,plain,(
  ( ! [X2,X0,X3,X1] : (~sP8('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'F_0')),'F_0')) ) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f5758])).
fof(f37254,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36429,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36429,plain,(
  ( ! [X2,X0,X3,X1] : (~sP8('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0',f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34997])).
fof(f34997,plain,(
  ( ! [X2,X0,X3,X1] : (~sP8('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0',f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f5758])).
fof(f37253,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36428,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36428,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'T_0')),f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34994])).
fof(f34994,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'F_0')),f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f34561,f5755])).
fof(f37252,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36427,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36427,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0',f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34993])).
fof(f34993,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0',f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f5755])).
fof(f37251,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36426,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36426,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'T_0')),'F_0')) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34989])).
fof(f34989,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'F_0')),'F_0')) ) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f5755])).
fof(f37250,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36425,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36425,plain,(
  ( ! [X2,X0,X3,X1] : (~sP4('T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34986])).
fof(f34986,plain,(
  ( ! [X2,X0,X3,X1] : (~sP4('T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f219,f34561,f5754])).
fof(f37249,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36424,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36424,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34983])).
fof(f34983,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f219,f34561,f5753])).
fof(f37248,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36423,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36423,plain,(
  ( ! [X2,X0,X3,X1] : (sP1(f(s(bool,'T_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34982])).
fof(f34982,plain,(
  ( ! [X2,X0,X3,X1] : (sP1(f(s(bool,'F_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f5751])).
fof(f37247,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36422,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36422,plain,(
  ( ! [X2,X0,X3,X1] : (sP1('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34981])).
fof(f34981,plain,(
  ( ! [X2,X0,X3,X1] : (sP1('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f5750])).
fof(f37246,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36421,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36421,plain,(
  ~sP10(g(s(bool,'T_0')),f(s(bool,'T_0')),'T_0') | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34969])).
fof(f34969,plain,(
  ~sP10(g(s(bool,'F_0')),f(s(bool,'F_0')),'T_0') | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f219,f34561,f2664])).
fof(f2664,plain,(
  ( ! [X28,X27] : (~sP10(g(s(bool,'F_0')),X28,X27) | p(s(bool,X28)) | ~p(s(bool,X27))) ) | $spl0),
  inference(subsumption_resolution,[],[f2631,f219])).
fof(f2631,plain,(
  ( ! [X28,X27] : (~p(s(bool,'T_0')) | ~p(s(bool,X27)) | p(s(bool,X28)) | ~sP10(g(s(bool,'F_0')),X28,X27)) ) | $spl0),
  inference(superposition,[],[f372,f1415])).
fof(f37245,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36420,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36420,plain,(
  ~sP9('T_0',f(s(bool,'T_0')),g(s(bool,'T_0'))) | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34965])).
fof(f34965,plain,(
  ~sP9('T_0',f(s(bool,'F_0')),g(s(bool,'F_0'))) | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f219,f34561,f2661])).
fof(f2661,plain,(
  ( ! [X21,X22] : (~sP9(X22,X21,g(s(bool,'F_0'))) | ~p(s(bool,X22)) | p(s(bool,X21))) ) | $spl0),
  inference(subsumption_resolution,[],[f2628,f219])).
fof(f2628,plain,(
  ( ! [X21,X22] : (~p(s(bool,'T_0')) | p(s(bool,X21)) | ~p(s(bool,X22)) | ~sP9(X22,X21,g(s(bool,'F_0')))) ) | $spl0),
  inference(superposition,[],[f365,f1415])).
fof(f37244,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36419,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36419,plain,(
  ~sP8(g(s(bool,'T_0')),f(s(bool,'T_0')),f(s(bool,'T_0'))) | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34963])).
fof(f34963,plain,(
  ~sP8(g(s(bool,'F_0')),f(s(bool,'F_0')),f(s(bool,'F_0'))) | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f34561,f34561,f2660])).
fof(f2660,plain,(
  ( ! [X19,X20] : (~sP8(g(s(bool,'F_0')),X20,X19) | p(s(bool,X20)) | p(s(bool,X19))) ) | $spl0),
  inference(subsumption_resolution,[],[f2627,f219])).
fof(f2627,plain,(
  ( ! [X19,X20] : (~p(s(bool,'T_0')) | p(s(bool,X19)) | p(s(bool,X20)) | ~sP8(g(s(bool,'F_0')),X20,X19)) ) | $spl0),
  inference(superposition,[],[f355,f1415])).
fof(f37243,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36418,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36418,plain,(
  ~sP8(g(s(bool,'T_0')),'F_0',f(s(bool,'T_0'))) | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34962])).
fof(f34962,plain,(
  ~sP8(g(s(bool,'F_0')),'F_0',f(s(bool,'F_0'))) | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f383,f34561,f2660])).
fof(f37242,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36417,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36417,plain,(
  ~sP8(g(s(bool,'T_0')),f(s(bool,'T_0')),'F_0') | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34959])).
fof(f34959,plain,(
  ~sP8(g(s(bool,'F_0')),f(s(bool,'F_0')),'F_0') | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f383,f34561,f2660])).
fof(f37241,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36416,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36416,plain,(
  ~sP7(g(s(bool,'T_0')),f(s(bool,'T_0')),f(s(bool,'T_0'))) | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34956])).
fof(f34956,plain,(
  ~sP7(g(s(bool,'F_0')),f(s(bool,'F_0')),f(s(bool,'F_0'))) | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f34561,f34561,f2657])).
fof(f2657,plain,(
  ( ! [X14,X13] : (~sP7(g(s(bool,'F_0')),X13,X14) | p(s(bool,X14)) | p(s(bool,X13))) ) | $spl0),
  inference(subsumption_resolution,[],[f2624,f219])).
fof(f2624,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | p(s(bool,X13)) | p(s(bool,X14)) | ~sP7(g(s(bool,'F_0')),X13,X14)) ) | $spl0),
  inference(superposition,[],[f348,f1415])).
fof(f37240,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36415,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36415,plain,(
  ~sP7(g(s(bool,'T_0')),f(s(bool,'T_0')),'F_0') | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34955])).
fof(f34955,plain,(
  ~sP7(g(s(bool,'F_0')),f(s(bool,'F_0')),'F_0') | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f383,f34561,f2657])).
fof(f37239,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36414,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36414,plain,(
  ~sP7(g(s(bool,'T_0')),'F_0',f(s(bool,'T_0'))) | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34951])).
fof(f34951,plain,(
  ~sP7(g(s(bool,'F_0')),'F_0',f(s(bool,'F_0'))) | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f383,f34561,f2657])).
fof(f37238,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36413,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36413,plain,(
  ~sP4('T_0',g(s(bool,'T_0')),f(s(bool,'T_0'))) | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34948])).
fof(f34948,plain,(
  ~sP4('T_0',g(s(bool,'F_0')),f(s(bool,'F_0'))) | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f219,f34561,f2656])).
fof(f2656,plain,(
  ( ! [X12,X11] : (~sP4(X11,g(s(bool,'F_0')),X12) | p(s(bool,X12)) | ~p(s(bool,X11))) ) | $spl0),
  inference(subsumption_resolution,[],[f2623,f219])).
fof(f2623,plain,(
  ( ! [X12,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,X11)) | p(s(bool,X12)) | ~sP4(X11,g(s(bool,'F_0')),X12)) ) | $spl0),
  inference(superposition,[],[f329,f1415])).
fof(f37237,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36412,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36412,plain,(
  ~sP10('T_0',f(s(bool,'T_0')),'T_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34940])).
fof(f34940,plain,(
  ~sP10('T_0',f(s(bool,'F_0')),'T_0') | $spl50),
  inference(unit_resulting_resolution,[],[f219,f412,f412,f34561,f2126])).
fof(f37236,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36411,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36411,plain,(
  ( ! [X0] : (sP10('T_0',X0,f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34936])).
fof(f34936,plain,(
  ( ! [X0] : (sP10('T_0',X0,f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f412,f412,f34561,f2124])).
fof(f37235,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36410,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36410,plain,(
  ~sP9('T_0',f(s(bool,'T_0')),'T_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34927])).
fof(f34927,plain,(
  ~sP9('T_0',f(s(bool,'F_0')),'T_0') | $spl50),
  inference(unit_resulting_resolution,[],[f219,f412,f412,f34561,f2123])).
fof(f37234,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36409,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36409,plain,(
  ~sP8('T_0',f(s(bool,'T_0')),f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34915])).
fof(f34915,plain,(
  ~sP8('T_0',f(s(bool,'F_0')),f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f412,f412,f34561,f2122])).
fof(f37233,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36408,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36408,plain,(
  ~sP8('T_0','F_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34914])).
fof(f34914,plain,(
  ~sP8('T_0','F_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f412,f412,f34561,f2122])).
fof(f37232,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36407,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36407,plain,(
  ~sP8('T_0',f(s(bool,'T_0')),'F_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34906])).
fof(f34906,plain,(
  ~sP8('T_0',f(s(bool,'F_0')),'F_0') | $spl50),
  inference(unit_resulting_resolution,[],[f383,f412,f412,f34561,f2122])).
fof(f37231,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36406,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36406,plain,(
  ~sP7('T_0',f(s(bool,'T_0')),f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34899])).
fof(f34899,plain,(
  ~sP7('T_0',f(s(bool,'F_0')),f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f412,f412,f34561,f2119])).
fof(f37230,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36405,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36405,plain,(
  ~sP7('T_0','F_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34898])).
fof(f34898,plain,(
  ~sP7('T_0','F_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f412,f412,f34561,f2119])).
fof(f37229,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36404,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36404,plain,(
  ~sP7('T_0',f(s(bool,'T_0')),'F_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34884])).
fof(f34884,plain,(
  ~sP7('T_0',f(s(bool,'F_0')),'F_0') | $spl50),
  inference(unit_resulting_resolution,[],[f383,f412,f412,f34561,f2119])).
fof(f37228,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36403,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36403,plain,(
  ~sP4('T_0','T_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34871])).
fof(f34871,plain,(
  ~sP4('T_0','T_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f219,f412,f412,f34561,f2118])).
fof(f37227,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36402,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36402,plain,(
  ~sP5('T_0','T_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34859])).
fof(f34859,plain,(
  ~sP5('T_0','T_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f219,f412,f412,f34561,f2117])).
fof(f37226,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36401,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36401,plain,(
  sP1(f(s(bool,'T_0')),'T_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34849])).
fof(f34849,plain,(
  sP1(f(s(bool,'F_0')),'T_0') | $spl50),
  inference(unit_resulting_resolution,[],[f412,f412,f34561,f2115])).
fof(f37225,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36399,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36399,plain,(
  ~sP0(f(s(bool,'T_0')),f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34807])).
fof(f34807,plain,(
  ~sP0(f(s(bool,'F_0')),f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f34561,f385])).
fof(f37224,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36398,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36398,plain,(
  ~sP0('F_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34806])).
fof(f34806,plain,(
  ~sP0('F_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f385])).
fof(f37223,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36397,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36397,plain,(
  ~sP0(f(s(bool,'T_0')),'F_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34801])).
fof(f34801,plain,(
  ~sP0(f(s(bool,'F_0')),'F_0') | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f385])).
fof(f37222,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36396,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36396,plain,(
  sP10(f(s(bool,'T_0')),f(s(bool,'T_0')),'T_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34794])).
fof(f34794,plain,(
  sP10(f(s(bool,'F_0')),f(s(bool,'F_0')),'T_0') | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f219,f34561,f369])).
fof(f37221,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36395,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36395,plain,(
  sP10(f(s(bool,'T_0')),'F_0','T_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34793])).
fof(f34793,plain,(
  sP10(f(s(bool,'F_0')),'F_0','T_0') | $spl50),
  inference(unit_resulting_resolution,[],[f383,f219,f34561,f369])).
fof(f37220,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36394,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36394,plain,(
  sP10('F_0',f(s(bool,'T_0')),'T_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34790])).
fof(f34790,plain,(
  sP10('F_0',f(s(bool,'F_0')),'T_0') | $spl50),
  inference(unit_resulting_resolution,[],[f383,f219,f34561,f369])).
fof(f37219,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36393,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36393,plain,(
  ( ! [X0,X1] : (sP9(f(s(bool,'T_0')),X0,X1)) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34789])).
fof(f34789,plain,(
  ( ! [X0,X1] : (sP9(f(s(bool,'F_0')),X0,X1)) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f368])).
fof(f37218,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36392,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36392,plain,(
  ( ! [X0,X1] : (sP9(X0,X1,f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34788])).
fof(f34788,plain,(
  ( ! [X0,X1] : (sP9(X0,X1,f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f366])).
fof(f37217,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36391,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36391,plain,(
  sP10('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),f(s(bool,'T_0')),'T_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34782])).
fof(f34782,plain,(
  sP10('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),f(s(bool,'F_0')),'T_0') | $spl50),
  inference(unit_resulting_resolution,[],[f219,f410,f34561,f364])).
fof(f37216,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36390,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36390,plain,(
  ( ! [X0] : (~sP10(f(s(bool,'T_0')),'T_0',X0)) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34774])).
fof(f34774,plain,(
  ( ! [X0] : (~sP10(f(s(bool,'F_0')),'T_0',X0)) ) | $spl50),
  inference(unit_resulting_resolution,[],[f219,f34561,f359])).
fof(f37215,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36389,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36389,plain,(
  ( ! [X0] : (~sP10(f(s(bool,'T_0')),X0,f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34768])).
fof(f34768,plain,(
  ( ! [X0] : (~sP10(f(s(bool,'F_0')),X0,f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f34561,f358])).
fof(f37214,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36388,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36388,plain,(
  ( ! [X0] : (~sP10('F_0',X0,f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34767])).
fof(f34767,plain,(
  ( ! [X0] : (~sP10('F_0',X0,f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f358])).
fof(f37213,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36387,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36387,plain,(
  ( ! [X0] : (~sP10(f(s(bool,'T_0')),X0,'F_0')) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34765])).
fof(f34765,plain,(
  ( ! [X0] : (~sP10(f(s(bool,'F_0')),X0,'F_0')) ) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f358])).
fof(f37212,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36386,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36386,plain,(
  sP8(f(s(bool,'T_0')),f(s(bool,'T_0')),f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34756])).
fof(f34756,plain,(
  sP8(f(s(bool,'F_0')),f(s(bool,'F_0')),f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f34561,f34561,f352])).
fof(f37211,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36385,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36385,plain,(
  sP8(f(s(bool,'T_0')),'F_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34755])).
fof(f34755,plain,(
  sP8(f(s(bool,'F_0')),'F_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f34561,f352])).
fof(f37210,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36384,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36384,plain,(
  sP8(f(s(bool,'T_0')),f(s(bool,'T_0')),'F_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34754])).
fof(f34754,plain,(
  sP8(f(s(bool,'F_0')),f(s(bool,'F_0')),'F_0') | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f383,f34561,f352])).
fof(f37209,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36383,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36383,plain,(
  sP8(f(s(bool,'T_0')),'F_0','F_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34753])).
fof(f34753,plain,(
  sP8(f(s(bool,'F_0')),'F_0','F_0') | $spl50),
  inference(unit_resulting_resolution,[],[f383,f383,f34561,f352])).
fof(f37208,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36382,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36382,plain,(
  sP8('F_0',f(s(bool,'T_0')),f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34749])).
fof(f34749,plain,(
  sP8('F_0',f(s(bool,'F_0')),f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f34561,f352])).
fof(f37207,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36381,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36381,plain,(
  sP8('F_0','F_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34747])).
fof(f34747,plain,(
  sP8('F_0','F_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f383,f34561,f352])).
fof(f37206,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36380,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36380,plain,(
  sP8('F_0',f(s(bool,'T_0')),'F_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34741])).
fof(f34741,plain,(
  sP8('F_0',f(s(bool,'F_0')),'F_0') | $spl50),
  inference(unit_resulting_resolution,[],[f383,f383,f34561,f352])).
fof(f37205,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36379,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36379,plain,(
  ( ! [X0,X1] : (sP7(f(s(bool,'T_0')),X0,X1)) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34740])).
fof(f34740,plain,(
  ( ! [X0,X1] : (sP7(f(s(bool,'F_0')),X0,X1)) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f351])).
fof(f37204,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36378,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36378,plain,(
  sP8('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),f(s(bool,'T_0')),f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34727])).
fof(f34727,plain,(
  sP8('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),f(s(bool,'F_0')),f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f408,f34561,f347])).
fof(f37203,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36377,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36377,plain,(
  sP8('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34726])).
fof(f34726,plain,(
  sP8('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f408,f34561,f347])).
fof(f37202,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36376,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36376,plain,(
  sP8('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),f(s(bool,'T_0')),'F_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34718])).
fof(f34718,plain,(
  sP8('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),f(s(bool,'F_0')),'F_0') | $spl50),
  inference(unit_resulting_resolution,[],[f383,f408,f34561,f347])).
fof(f37201,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36375,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36375,plain,(
  ( ! [X0] : (~sP8(f(s(bool,'T_0')),'T_0',X0)) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34701])).
fof(f34701,plain,(
  ( ! [X0] : (~sP8(f(s(bool,'F_0')),'T_0',X0)) ) | $spl50),
  inference(unit_resulting_resolution,[],[f219,f34561,f342])).
fof(f37200,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36374,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36374,plain,(
  ( ! [X0] : (~sP8(f(s(bool,'T_0')),X0,'T_0')) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34700])).
fof(f34700,plain,(
  ( ! [X0] : (~sP8(f(s(bool,'F_0')),X0,'T_0')) ) | $spl50),
  inference(unit_resulting_resolution,[],[f219,f34561,f341])).
fof(f37199,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36373,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36373,plain,(
  ( ! [X0,X1] : (~sP6(f(s(bool,'T_0')),'|dollar|exists_1'(s(fun(X0,bool),X1)),happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34699])).
fof(f34699,plain,(
  ( ! [X0,X1] : (~sP6(f(s(bool,'F_0')),'|dollar|exists_1'(s(fun(X0,bool),X1)),happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f259,f34561,f340])).
fof(f37198,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36372,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36372,plain,(
  ~sP6(f(s(bool,'T_0')),'F_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34698])).
fof(f34698,plain,(
  ~sP6(f(s(bool,'F_0')),'F_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | $spl50),
  inference(unit_resulting_resolution,[],[f418,f34561,f340])).
fof(f37197,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36371,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36371,plain,(
  ~sP6(f(s(bool,'T_0')),'T_0',g(s(bool,'T_0'))) | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34697])).
fof(f34697,plain,(
  ~sP6(f(s(bool,'F_0')),'T_0',g(s(bool,'F_0'))) | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f1415,f34561,f340])).
fof(f37196,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36370,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36370,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6(f(s(bool,'T_0')),'T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34696])).
fof(f34696,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6(f(s(bool,'F_0')),'T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f1203,f34561,f340])).
fof(f37195,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36369,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36369,plain,(
  ( ! [X0,X1] : (~sP6(f(s(bool,'T_0')),happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),'|dollar|exists_1'(s(fun(X0,bool),X1)))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34695])).
fof(f34695,plain,(
  ( ! [X0,X1] : (~sP6(f(s(bool,'F_0')),happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),'|dollar|exists_1'(s(fun(X0,bool),X1)))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f259,f34561,f340])).
fof(f37194,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36368,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36368,plain,(
  ~sP6(f(s(bool,'T_0')),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34694])).
fof(f34694,plain,(
  ~sP6(f(s(bool,'F_0')),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'F_0') | $spl50),
  inference(unit_resulting_resolution,[],[f418,f34561,f340])).
fof(f37193,plain,(
  $false | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36367,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36367,plain,(
  ~sP6(f(s(bool,'T_0')),g(s(bool,'T_0')),'T_0') | ($spl0 | $spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34693])).
fof(f34693,plain,(
  ~sP6(f(s(bool,'F_0')),g(s(bool,'F_0')),'T_0') | ($spl0 | $spl50)),
  inference(unit_resulting_resolution,[],[f1415,f34561,f340])).
fof(f37192,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36366,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36366,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6(f(s(bool,'T_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0')) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34692])).
fof(f34692,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6(f(s(bool,'F_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0')) ) | $spl50),
  inference(unit_resulting_resolution,[],[f1203,f34561,f340])).
fof(f37191,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36365,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36365,plain,(
  sP6(f(s(bool,'T_0')),'T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34691])).
fof(f34691,plain,(
  sP6(f(s(bool,'F_0')),'T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | $spl50),
  inference(unit_resulting_resolution,[],[f412,f34561,f337])).
fof(f37190,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36364,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36364,plain,(
  sP6(f(s(bool,'T_0')),'T_0','F_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34690])).
fof(f34690,plain,(
  sP6(f(s(bool,'F_0')),'T_0','F_0') | $spl50),
  inference(unit_resulting_resolution,[],[f411,f34561,f337])).
fof(f37189,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36363,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36363,plain,(
  sP6(f(s(bool,'T_0')),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34689])).
fof(f34689,plain,(
  sP6(f(s(bool,'F_0')),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0') | $spl50),
  inference(unit_resulting_resolution,[],[f412,f34561,f337])).
fof(f37188,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36362,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36362,plain,(
  sP6(f(s(bool,'T_0')),'F_0','T_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34688])).
fof(f34688,plain,(
  sP6(f(s(bool,'F_0')),'F_0','T_0') | $spl50),
  inference(unit_resulting_resolution,[],[f411,f34561,f337])).
fof(f37187,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36361,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36361,plain,(
  ~sP3(f(s(bool,'T_0')),f(s(bool,'T_0')),f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34681])).
fof(f34681,plain,(
  ~sP3(f(s(bool,'F_0')),f(s(bool,'F_0')),f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f34561,f34561,f333])).
fof(f37186,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36360,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36360,plain,(
  ~sP3('F_0',f(s(bool,'T_0')),f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34680])).
fof(f34680,plain,(
  ~sP3('F_0',f(s(bool,'F_0')),f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f34561,f333])).
fof(f37185,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36359,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36359,plain,(
  ~sP3(f(s(bool,'T_0')),'F_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34679])).
fof(f34679,plain,(
  ~sP3(f(s(bool,'F_0')),'F_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f383,f34561,f333])).
fof(f37184,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36358,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36358,plain,(
  ~sP3('F_0','F_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34678])).
fof(f34678,plain,(
  ~sP3('F_0','F_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f383,f34561,f333])).
fof(f37183,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36357,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36357,plain,(
  ~sP3(f(s(bool,'T_0')),f(s(bool,'T_0')),'F_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34669])).
fof(f34669,plain,(
  ~sP3(f(s(bool,'F_0')),f(s(bool,'F_0')),'F_0') | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f383,f34561,f333])).
fof(f37182,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36356,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36356,plain,(
  ~sP3('F_0',f(s(bool,'T_0')),'F_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34668])).
fof(f34668,plain,(
  ~sP3('F_0',f(s(bool,'F_0')),'F_0') | $spl50),
  inference(unit_resulting_resolution,[],[f383,f383,f34561,f333])).
fof(f37181,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36355,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36355,plain,(
  ~sP3(f(s(bool,'T_0')),'F_0','F_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34658])).
fof(f34658,plain,(
  ~sP3(f(s(bool,'F_0')),'F_0','F_0') | $spl50),
  inference(unit_resulting_resolution,[],[f383,f383,f34561,f333])).
fof(f37180,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36354,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36354,plain,(
  ( ! [X0,X1] : (sP4(f(s(bool,'T_0')),X0,X1)) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34657])).
fof(f34657,plain,(
  ( ! [X0,X1] : (sP4(f(s(bool,'F_0')),X0,X1)) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f332])).
fof(f37179,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36353,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36353,plain,(
  ( ! [X0,X1] : (sP4(X0,f(s(bool,'T_0')),X1)) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34656])).
fof(f37178,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36352,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36352,plain,(
  ( ! [X0,X1] : (sP5(f(s(bool,'T_0')),X0,X1)) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34650])).
fof(f37177,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36351,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36351,plain,(
  ( ! [X0,X1] : (sP5(X0,f(s(bool,'T_0')),X1)) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34649])).
fof(f37176,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36350,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36350,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(f(s(bool,'T_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34643])).
fof(f34643,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(f(s(bool,'F_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f406,f404,f1248,f34561,f324])).
fof(f37175,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36349,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36349,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(f(s(bool,'T_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0')) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34642])).
fof(f34642,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(f(s(bool,'F_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0')) ) | $spl50),
  inference(unit_resulting_resolution,[],[f392,f389,f1248,f34561,f324])).
fof(f37174,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36348,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36348,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'T_0')),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34635])).
fof(f34635,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'F_0')),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f1246,f404,f1247,f34561,f323])).
fof(f37173,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36347,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36347,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'T_0')),'F_0')) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34633])).
fof(f34633,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),f(s(bool,'F_0')),'F_0')) ) | $spl50),
  inference(unit_resulting_resolution,[],[f1246,f389,f1247,f34561,f323])).
fof(f37172,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36346,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36346,plain,(
  sP6('T_0',f(s(bool,'T_0')),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34631])).
fof(f34631,plain,(
  sP6('T_0',f(s(bool,'F_0')),'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | $spl50),
  inference(unit_resulting_resolution,[],[f406,f404,f394,f34561,f323])).
fof(f37171,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36345,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36345,plain,(
  sP6('T_0',f(s(bool,'T_0')),'F_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34630])).
fof(f34630,plain,(
  sP6('T_0',f(s(bool,'F_0')),'F_0') | $spl50),
  inference(unit_resulting_resolution,[],[f392,f389,f394,f34561,f323])).
fof(f37170,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36344,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36344,plain,(
  ~sP6('T_0','T_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34629])).
fof(f34629,plain,(
  ~sP6('T_0','T_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f219,f219,f34561,f321])).
fof(f37169,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36343,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36343,plain,(
  ( ! [X0] : (~sP2(f(s(bool,'T_0')),f(s(bool,'T_0')),X0)) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34626])).
fof(f34626,plain,(
  ( ! [X0] : (~sP2(f(s(bool,'F_0')),f(s(bool,'F_0')),X0)) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f34561,f309])).
fof(f37168,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36342,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36342,plain,(
  ( ! [X0] : (~sP2('F_0',f(s(bool,'T_0')),X0)) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34625])).
fof(f34625,plain,(
  ( ! [X0] : (~sP2('F_0',f(s(bool,'F_0')),X0)) ) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f309])).
fof(f37167,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36341,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36341,plain,(
  ( ! [X0] : (~sP2(f(s(bool,'T_0')),'F_0',X0)) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34618])).
fof(f34618,plain,(
  ( ! [X0] : (~sP2(f(s(bool,'F_0')),'F_0',X0)) ) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f309])).
fof(f37166,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36340,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36340,plain,(
  ( ! [X0] : (~sP2(f(s(bool,'T_0')),X0,f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34615])).
fof(f34615,plain,(
  ( ! [X0] : (~sP2(f(s(bool,'F_0')),X0,f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f34561,f308])).
fof(f37165,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36339,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36339,plain,(
  ( ! [X0] : (~sP2('F_0',X0,f(s(bool,'T_0')))) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34614])).
fof(f34614,plain,(
  ( ! [X0] : (~sP2('F_0',X0,f(s(bool,'F_0')))) ) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f308])).
fof(f37164,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36338,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36338,plain,(
  ( ! [X0] : (~sP2(f(s(bool,'T_0')),X0,'F_0')) ) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34607])).
fof(f34607,plain,(
  ( ! [X0] : (~sP2(f(s(bool,'F_0')),X0,'F_0')) ) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f308])).
fof(f37163,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36337,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36337,plain,(
  ~sP1(f(s(bool,'T_0')),f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34603])).
fof(f34603,plain,(
  ~sP1(f(s(bool,'F_0')),f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f34561,f34561,f294])).
fof(f37162,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36336,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36336,plain,(
  ~sP1('F_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34602])).
fof(f34602,plain,(
  ~sP1('F_0',f(s(bool,'F_0'))) | $spl50),
  inference(unit_resulting_resolution,[],[f383,f34561,f294])).
fof(f37161,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36335,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36335,plain,(
  ~sP1(f(s(bool,'T_0')),'F_0') | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f34600])).
fof(f37154,plain,(
  $false | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36310,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36310,plain,(
  sP1('T_0',f(s(bool,'T_0'))) | ($spl50 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f17019])).
fof(f37153,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36298,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36298,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10(g(s(bool,'T_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f4938])).
fof(f4938,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10(g(s(bool,'F_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1305,f2665])).
fof(f2665,plain,(
  ( ! [X30,X29] : (sP10(g(s(bool,'F_0')),X29,X30) | ~sP9(g(s(bool,'F_0')),X29,X30)) ) | $spl0),
  inference(subsumption_resolution,[],[f2632,f219])).
fof(f2632,plain,(
  ( ! [X30,X29] : (~p(s(bool,'T_0')) | ~sP9(g(s(bool,'F_0')),X29,X30) | sP10(g(s(bool,'F_0')),X29,X30)) ) | $spl0),
  inference(superposition,[],[f375,f1415])).
fof(f37152,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36297,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36297,plain,(
  ~sP9(g(s(bool,'T_0')),'F_0','T_0') | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f4844])).
fof(f4844,plain,(
  ~sP9(g(s(bool,'F_0')),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f219,f383,f4832,f364])).
fof(f4832,plain,(
  ~sP10(g(s(bool,'F_0')),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f219,f383,f2664])).
fof(f37151,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36296,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36296,plain,(
  ~sP10(g(s(bool,'T_0')),'F_0','T_0') | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f4832])).
fof(f37150,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36295,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36295,plain,(
  ~sP10('T_0','F_0',g(s(bool,'T_0'))) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f4749])).
fof(f4749,plain,(
  ~sP10('T_0','F_0',g(s(bool,'F_0'))) | $spl0),
  inference(unit_resulting_resolution,[],[f4731,f360])).
fof(f4731,plain,(
  ~sP9('T_0','F_0',g(s(bool,'F_0'))) | $spl0),
  inference(unit_resulting_resolution,[],[f383,f219,f2661])).
fof(f37149,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36294,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36294,plain,(
  ~sP9('T_0','F_0',g(s(bool,'T_0'))) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f4731])).
fof(f37148,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36293,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36293,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8(g(s(bool,'T_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f4660])).
fof(f4660,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8(g(s(bool,'F_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1268,f2666])).
fof(f2666,plain,(
  ( ! [X31,X32] : (sP8(g(s(bool,'F_0')),X31,X32) | ~sP7(g(s(bool,'F_0')),X31,X32)) ) | $spl0),
  inference(subsumption_resolution,[],[f2633,f219])).
fof(f2633,plain,(
  ( ! [X31,X32] : (~p(s(bool,'T_0')) | ~sP7(g(s(bool,'F_0')),X31,X32) | sP8(g(s(bool,'F_0')),X31,X32)) ) | $spl0),
  inference(superposition,[],[f376,f1415])).
fof(f37147,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36292,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36292,plain,(
  ~sP8(g(s(bool,'T_0')),'F_0','F_0') | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f4631])).
fof(f4631,plain,(
  ~sP8(g(s(bool,'F_0')),'F_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f4606,f343])).
fof(f4606,plain,(
  ~sP7(g(s(bool,'F_0')),'F_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f383,f383,f2657])).
fof(f37146,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36291,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36291,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8(g(s(bool,'T_0')),X0,'const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f4624])).
fof(f4624,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8(g(s(bool,'F_0')),X0,'const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1267,f2666])).
fof(f37145,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36290,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36290,plain,(
  ~sP7(g(s(bool,'T_0')),'F_0','F_0') | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f4606])).
fof(f37144,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36289,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36289,plain,(
  ~sP6('T_0','F_0',g(s(bool,'T_0'))) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f4510])).
fof(f4510,plain,(
  ~sP6('T_0','F_0',g(s(bool,'F_0'))) | $spl0),
  inference(unit_resulting_resolution,[],[f4487,f320])).
fof(f4487,plain,(
  ~sP5('T_0',g(s(bool,'F_0')),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f219,f383,f2655])).
fof(f37143,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36288,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36288,plain,(
  ~sP5('T_0',g(s(bool,'T_0')),'F_0') | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f4487])).
fof(f37142,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36285,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36285,plain,(
  ( ! [X0] : (sP10(g(s(bool,'T_0')),X0,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f3660])).
fof(f3660,plain,(
  ( ! [X0] : (sP10(g(s(bool,'F_0')),X0,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f409,f2665])).
fof(f37141,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36284,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36284,plain,(
  ( ! [X0] : (sP10(g(s(bool,'T_0')),'T_0',X0)) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f3405])).
fof(f3405,plain,(
  ( ! [X0] : (sP10(g(s(bool,'F_0')),'T_0',X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f219,f2663])).
fof(f2663,plain,(
  ( ! [X26,X25] : (sP10(g(s(bool,'F_0')),X25,X26) | ~p(s(bool,X25))) ) | $spl0),
  inference(subsumption_resolution,[],[f2630,f219])).
fof(f2630,plain,(
  ( ! [X26,X25] : (~p(s(bool,'T_0')) | ~p(s(bool,X25)) | sP10(g(s(bool,'F_0')),X25,X26)) ) | $spl0),
  inference(superposition,[],[f371,f1415])).
fof(f37140,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36283,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36283,plain,(
  ( ! [X0] : (sP10(g(s(bool,'T_0')),X0,'F_0')) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f3380])).
fof(f3380,plain,(
  ( ! [X0] : (sP10(g(s(bool,'F_0')),X0,'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f383,f2662])).
fof(f37139,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36282,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36282,plain,(
  ( ! [X0] : (sP8(g(s(bool,'T_0')),'T_0',X0)) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f3355])).
fof(f3355,plain,(
  ( ! [X0] : (sP8(g(s(bool,'F_0')),'T_0',X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f219,f2659])).
fof(f2659,plain,(
  ( ! [X17,X18] : (sP8(g(s(bool,'F_0')),X17,X18) | ~p(s(bool,X17))) ) | $spl0),
  inference(subsumption_resolution,[],[f2626,f219])).
fof(f2626,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,X17)) | sP8(g(s(bool,'F_0')),X17,X18)) ) | $spl0),
  inference(superposition,[],[f354,f1415])).
fof(f37138,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36280,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36280,plain,(
  ( ! [X0] : (sP8(g(s(bool,'T_0')),X0,'T_0')) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f3325])).
fof(f3325,plain,(
  ( ! [X0] : (sP8(g(s(bool,'F_0')),X0,'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f219,f2658])).
fof(f2658,plain,(
  ( ! [X15,X16] : (sP8(g(s(bool,'F_0')),X16,X15) | ~p(s(bool,X15))) ) | $spl0),
  inference(subsumption_resolution,[],[f2625,f219])).
fof(f2625,plain,(
  ( ! [X15,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X15)) | sP8(g(s(bool,'F_0')),X16,X15)) ) | $spl0),
  inference(superposition,[],[f353,f1415])).
fof(f37137,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36278,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36278,plain,(
  ( ! [X0] : (sP2(X0,'T_0',g(s(bool,'T_0')))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f3299])).
fof(f3299,plain,(
  ( ! [X0] : (sP2(X0,'T_0',g(s(bool,'F_0')))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f219,f2654])).
fof(f2654,plain,(
  ( ! [X8,X7] : (sP2(X8,X7,g(s(bool,'F_0'))) | ~p(s(bool,X7))) ) | $spl0),
  inference(subsumption_resolution,[],[f2621,f219])).
fof(f2621,plain,(
  ( ! [X8,X7] : (~p(s(bool,'T_0')) | ~p(s(bool,X7)) | sP2(X8,X7,g(s(bool,'F_0')))) ) | $spl0),
  inference(superposition,[],[f310,f1415])).
fof(f37136,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36276,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36276,plain,(
  sP1('F_0',g(s(bool,'T_0'))) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f3272])).
fof(f3272,plain,(
  sP1('F_0',g(s(bool,'F_0'))) | $spl0),
  inference(unit_resulting_resolution,[],[f383,f2653])).
fof(f37135,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36274,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36274,plain,(
  sP1(g(s(bool,'T_0')),'F_0') | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f3248])).
fof(f3248,plain,(
  sP1(g(s(bool,'F_0')),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f383,f2652])).
fof(f37134,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36273,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36273,plain,(
  ~sP4('T_0',g(s(bool,'T_0')),'F_0') | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2758])).
fof(f2758,plain,(
  ~sP4('T_0',g(s(bool,'F_0')),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f383,f395,f390,f2600,f324])).
fof(f2600,plain,(
  ~sP6('F_0','T_0',g(s(bool,'F_0'))) | $spl0),
  inference(unit_resulting_resolution,[],[f383,f1415,f340])).
fof(f37133,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36272,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36272,plain,(
  sP5('T_0','T_0',g(s(bool,'T_0'))) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2727])).
fof(f2727,plain,(
  sP5('T_0','T_0',g(s(bool,'F_0'))) | $spl0),
  inference(unit_resulting_resolution,[],[f2599,f320])).
fof(f2599,plain,(
  sP6('T_0',g(s(bool,'F_0')),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f219,f1415,f338])).
fof(f37132,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36271,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36271,plain,(
  ~sP4(g(s(bool,'T_0')),'T_0','F_0') | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2716])).
fof(f2716,plain,(
  ~sP4(g(s(bool,'F_0')),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f219,f396,f390,f2598,f322])).
fof(f2598,plain,(
  ~sP6('F_0',g(s(bool,'F_0')),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f383,f1415,f340])).
fof(f37131,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f37130,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f37130,plain,(
  ( ! [X31,X32] : (sP8(g(s(bool,'T_0')),X31,X32) | ~sP7(g(s(bool,'T_0')),X31,X32)) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(forward_demodulation,[],[f36270,f36156])).
fof(f36270,plain,(
  ( ! [X31,X32] : (~sP7(g(s(bool,'T_0')),X31,X32) | sP8(g(s(bool,'F_0')),X31,X32)) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2666])).
fof(f37129,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f37128,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f37128,plain,(
  ( ! [X30,X29] : (sP10(g(s(bool,'T_0')),X29,X30) | ~sP9(g(s(bool,'T_0')),X29,X30)) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(forward_demodulation,[],[f36269,f36156])).
fof(f36269,plain,(
  ( ! [X30,X29] : (~sP9(g(s(bool,'T_0')),X29,X30) | sP10(g(s(bool,'F_0')),X29,X30)) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2665])).
fof(f37127,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36268,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36268,plain,(
  ( ! [X28,X27] : (~sP10(g(s(bool,'T_0')),X28,X27) | p(s(bool,X28)) | ~p(s(bool,X27))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2664])).
fof(f37126,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36267,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36267,plain,(
  ( ! [X26,X25] : (sP10(g(s(bool,'T_0')),X25,X26) | ~p(s(bool,X25))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2663])).
fof(f37125,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36266,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36266,plain,(
  ( ! [X24,X23] : (sP10(g(s(bool,'T_0')),X24,X23) | p(s(bool,X23))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2662])).
fof(f37124,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36265,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36265,plain,(
  ( ! [X21,X22] : (~sP9(X22,X21,g(s(bool,'T_0'))) | ~p(s(bool,X22)) | p(s(bool,X21))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2661])).
fof(f37123,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36264,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36264,plain,(
  ( ! [X19,X20] : (~sP8(g(s(bool,'T_0')),X20,X19) | p(s(bool,X20)) | p(s(bool,X19))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2660])).
fof(f37122,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36263,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36263,plain,(
  ( ! [X17,X18] : (sP8(g(s(bool,'T_0')),X17,X18) | ~p(s(bool,X17))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2659])).
fof(f37121,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36262,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36262,plain,(
  ( ! [X15,X16] : (sP8(g(s(bool,'T_0')),X16,X15) | ~p(s(bool,X15))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2658])).
fof(f37120,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36261,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36261,plain,(
  ( ! [X14,X13] : (~sP7(g(s(bool,'T_0')),X13,X14) | p(s(bool,X14)) | p(s(bool,X13))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2657])).
fof(f37119,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36260,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36260,plain,(
  ( ! [X12,X11] : (~sP4(X11,g(s(bool,'T_0')),X12) | p(s(bool,X12)) | ~p(s(bool,X11))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2656])).
fof(f37118,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36259,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36259,plain,(
  ( ! [X10,X9] : (~sP5(X9,g(s(bool,'T_0')),X10) | p(s(bool,X10)) | ~p(s(bool,X9))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2655])).
fof(f37117,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36258,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36258,plain,(
  ( ! [X8,X7] : (sP2(X8,X7,g(s(bool,'T_0'))) | ~p(s(bool,X7))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2654])).
fof(f37116,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36257,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36257,plain,(
  ( ! [X6] : (sP1(X6,g(s(bool,'T_0'))) | p(s(bool,X6))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2653])).
fof(f37115,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36256,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36256,plain,(
  ( ! [X5] : (sP1(g(s(bool,'T_0')),X5) | p(s(bool,X5))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2652])).
fof(f37114,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36255,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36255,plain,(
  ( ! [X4] : (sP0(g(s(bool,'T_0')),X4)) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2651])).
fof(f2651,plain,(
  ( ! [X4] : (sP0(g(s(bool,'F_0')),X4)) ) | $spl0),
  inference(subsumption_resolution,[],[f2618,f219])).
fof(f2618,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | sP0(g(s(bool,'F_0')),X4)) ) | $spl0),
  inference(superposition,[],[f281,f1415])).
fof(f37113,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36254,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36254,plain,(
  ( ! [X3] : (sP0(X3,g(s(bool,'T_0')))) ) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2650])).
fof(f2650,plain,(
  ( ! [X3] : (sP0(X3,g(s(bool,'F_0')))) ) | $spl0),
  inference(subsumption_resolution,[],[f2617,f219])).
fof(f2617,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | sP0(X3,g(s(bool,'F_0')))) ) | $spl0),
  inference(superposition,[],[f280,f1415])).
fof(f37112,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36253,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36253,plain,(
  sP6('T_0','T_0',g(s(bool,'T_0'))) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2601])).
fof(f2601,plain,(
  sP6('T_0','T_0',g(s(bool,'F_0'))) | $spl0),
  inference(unit_resulting_resolution,[],[f219,f1415,f338])).
fof(f37111,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36252,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36252,plain,(
  ~sP6('F_0','T_0',g(s(bool,'T_0'))) | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2600])).
fof(f37110,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36251,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36251,plain,(
  sP6('T_0',g(s(bool,'T_0')),'T_0') | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2599])).
fof(f37109,plain,(
  $false | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f36250,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36250,plain,(
  ~sP6('F_0',g(s(bool,'T_0')),'T_0') | ($spl0 | $spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f2598])).
fof(f37104,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(subsumption_resolution,[],[f36159,f219])).
fof(f36159,plain,(
  ~p(s(bool,'T_0')) | ($spl65 | $spl66 | $spl398)),
  inference(backward_demodulation,[],[f36156,f383])).
fof(f37103,plain,(
  $false | ($spl65 | $spl66 | $spl398)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f18797,f20441,f20440,f20354,f20353,f20450,f20464,f20673,f20675,f20683,f20686,f20702,f20704,f20717,f20739,f20757,f20778,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f23195,f23221,f23222,f23223,f23224,f23226,f23227,f23228,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28126,f28128,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33577,f33578,f33579,f33580,f33581,f33582,f33583,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f34035,f33574,f34152,f32738,f34368,f32760,f31647,f34371,f31686,f31086,f29784,f29471,f29088,f28832,f28831,f28830,f28503,f28827,f34375,f28359,f28358,f28357,f28356,f28355,f28354,f28353,f28352,f28351,f28350,f28349,f28348,f28347,f28346,f28345,f28344,f28343,f28342,f28341,f28340,f28336,f28335,f28334,f28332,f28331,f28330,f28328,f28327,f28326,f28325,f28323,f28321,f28320,f28319,f28318,f28317,f28316,f28315,f34380,f18798,f35137,f35212,f35319,f35322,f35327,f35402,f35411,f35417,f35431,f35399,f35400,f35432,f35511,f35520,f35526,f35540,f35508,f35509,f35541,f35592,f35730,f35736,f35747,f35753,f35765,f35766,f35773,f35775,f35677,f35678,f35829,f35967,f35973,f35984,f35990,f36002,f36003,f36010,f36012,f35914,f35915,f36092,f36121,f34374,f36156,f37102])).
fof(f36145,plain,(
  ( ! [X59,X57,X54,X58,X56,X55] : (s(fun(bool,bool),X54) = s(fun(bool,bool),X55) | s(bool,X56) = s(bool,sK18(X54,X55,bool,bool)) | s(bool,'T_0') = s(bool,X56) | s(bool,X57) = s(bool,X58) | s(bool,X58) = s(bool,X59) | s(bool,'T_0') = s(bool,X59) | s(bool,X57) = s(bool,g(s(bool,'T_0')))) ) | $spl64),
  inference(subsumption_resolution,[],[f36119,f18796])).
fof(f36142,plain,(
  ( ! [X52,X50,X48,X53,X51,X49] : (s(fun(bool,bool),X48) = s(fun(bool,bool),X49) | s(bool,X50) = s(bool,sK18(X48,X49,bool,bool)) | s(bool,'T_0') = s(bool,X50) | s(bool,X51) = s(bool,X52) | s(bool,X52) = s(bool,g(s(bool,'T_0'))) | s(bool,X51) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) ) | $spl64),
  inference(subsumption_resolution,[],[f36118,f18796])).
fof(f35323,plain,(
  ( ! [X39,X43,X44,X42,X40] : (s(bool,X42) = s(bool,'const.pred_set.countable_1'(s(fun(X39,bool),X40))) | s(bool,'T_0') = s(bool,X44) | s(bool,X43) = s(bool,X44) | s(bool,X43) = s(bool,'const.pred_set.INJ_3'(s(fun(X39,'type.num.num'),sK13(X40,X39)),s(fun(X39,bool),X40),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X42)) ) | $spl408),
  inference(cnf_transformation,[],[f35323_D])).
fof(f35323_D,plain,(
  ( ! [X39,X43,X44,X42,X40] : (s(bool,X42) = s(bool,'const.pred_set.countable_1'(s(fun(X39,bool),X40))) | s(bool,'T_0') = s(bool,X44) | s(bool,X43) = s(bool,X44) | s(bool,X43) = s(bool,'const.pred_set.INJ_3'(s(fun(X39,'type.num.num'),sK13(X40,X39)),s(fun(X39,bool),X40),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X42)) ) <=> ~$spl408),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl408])])).
fof(f35327,plain,(
  ( ! [X68,X66,X64,X67,X65,X63] : (p(s(bool,X65)) | s(bool,X66) = s(bool,'const.pred_set.countable_1'(s(fun(X63,bool),X64))) | s(bool,'T_0') = s(bool,X66) | s(bool,X67) = s(bool,'const.pred_set.INJ_3'(s(fun(X63,'type.num.num'),sK13(X64,X63)),s(fun(X63,bool),X64),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,X67) = s(bool,X68) | s(bool,'T_0') = s(bool,X68)) )),
  inference(subsumption_resolution,[],[f35315,f232])).
fof(f35315,plain,(
  ( ! [X68,X66,X64,X67,X65,X63] : (p(s(bool,X65)) | s(bool,X66) = s(bool,'const.pred_set.countable_1'(s(fun(X63,bool),X64))) | s(bool,'T_0') = s(bool,X66) | s(bool,X67) = s(bool,'const.pred_set.INJ_3'(s(fun(X63,'type.num.num'),sK13(X64,X63)),s(fun(X63,bool),X64),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,X67) = s(bool,X68) | s(bool,'T_0') = s(bool,X68) | s(bool,'T_0') = s(bool,X65)) )),
  inference(superposition,[],[f2130,f1507])).
fof(f35322,plain,(
  ( ! [X39,X43,X41,X44,X42,X40] : (p(s(bool,X41)) | s(bool,X42) = s(bool,'const.pred_set.countable_1'(s(fun(X39,bool),X40))) | s(bool,'T_0') = s(bool,X42) | s(bool,X43) = s(bool,'const.pred_set.INJ_3'(s(fun(X39,'type.num.num'),sK13(X40,X39)),s(fun(X39,bool),X40),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,X43) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(subsumption_resolution,[],[f35311,f232])).
fof(f35311,plain,(
  ( ! [X39,X43,X41,X44,X42,X40] : (p(s(bool,X41)) | s(bool,X42) = s(bool,'const.pred_set.countable_1'(s(fun(X39,bool),X40))) | s(bool,'T_0') = s(bool,X42) | s(bool,X43) = s(bool,'const.pred_set.INJ_3'(s(fun(X39,'type.num.num'),sK13(X40,X39)),s(fun(X39,bool),X40),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X41) | s(bool,X43) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f2130,f1507])).
fof(f34593,plain,(
  $false | ($spl5 | $spl50)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f11493,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f27599,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f32738,f34368,f31647,f34371,f34481,f1418,f17019,f34561,f34562,f34578,f34580,f34584,f34586,f34590,f34592])).
fof(f34592,plain,(
  ( ! [X30,X28,X29] : (sP1('T_0',f(s(bool,X28))) | s(bool,X28) = s(bool,X29) | s(bool,X29) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) ) | $spl50),
  inference(subsumption_resolution,[],[f34575,f411])).
fof(f34575,plain,(
  ( ! [X30,X28,X29] : (sP1('T_0',f(s(bool,X28))) | s(bool,X28) = s(bool,X29) | s(bool,X29) = s(bool,X30) | s(bool,'T_0') = s(bool,X30) | s(bool,'T_0') = s(bool,'F_0')) ) | $spl50),
  inference(superposition,[],[f17019,f1507])).
fof(f34590,plain,(
  ( ! [X0] : (sP1('T_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl50),
  inference(condensation,[],[f34589])).
fof(f34589,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP1('T_0',f(s(bool,X1))) | s(bool,'T_0') = s(bool,X1)) ) | $spl50),
  inference(condensation,[],[f34588])).
fof(f34588,plain,(
  ( ! [X26,X27,X25] : (sP1('T_0',f(s(bool,X25))) | s(bool,X26) = s(bool,X27) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,X25)) ) | $spl50),
  inference(subsumption_resolution,[],[f34574,f2110])).
fof(f34574,plain,(
  ( ! [X26,X27,X25] : (sP1('T_0',f(s(bool,X25))) | s(bool,'F_0') = s(bool,X26) | s(bool,X26) = s(bool,X27) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,X25)) ) | $spl50),
  inference(superposition,[],[f17019,f1507])).
fof(f34586,plain,(
  ( ! [X17,X18,X16] : (sP1('T_0',f(s(bool,X16))) | s(bool,X16) = s(bool,X17) | s(bool,X17) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) ) | $spl50),
  inference(subsumption_resolution,[],[f34571,f411])).
fof(f34571,plain,(
  ( ! [X17,X18,X16] : (sP1('T_0',f(s(bool,X16))) | s(bool,X16) = s(bool,X17) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X17) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) ) | $spl50),
  inference(superposition,[],[f17019,f1507])).
fof(f34584,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | sP1('T_0',f(s(bool,X0)))) ) | $spl50),
  inference(duplicate_literal_removal,[],[f34583])).
fof(f34583,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | sP1('T_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl50),
  inference(condensation,[],[f34582])).
fof(f34582,plain,(
  ( ! [X14,X15,X13] : (sP1('T_0',f(s(bool,X13))) | s(bool,'T_0') = s(bool,X13) | s(bool,X14) = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) ) | $spl50),
  inference(subsumption_resolution,[],[f34570,f2110])).
fof(f34570,plain,(
  ( ! [X14,X15,X13] : (sP1('T_0',f(s(bool,X13))) | s(bool,'F_0') = s(bool,X14) | s(bool,'T_0') = s(bool,X13) | s(bool,X14) = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) ) | $spl50),
  inference(superposition,[],[f17019,f1507])).
fof(f34580,plain,(
  ( ! [X3] : (sP1('T_0',f(s(bool,X3))) | s(bool,'T_0') = s(bool,X3)) ) | $spl50),
  inference(subsumption_resolution,[],[f34566,f411])).
fof(f34566,plain,(
  ( ! [X3] : (sP1('T_0',f(s(bool,X3))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,X3)) ) | $spl50),
  inference(superposition,[],[f17019,f518])).
fof(f34578,plain,(
  ( ! [X2] : (sP1('T_0',f(s(bool,X2))) | s(bool,'T_0') = s(bool,X2)) ) | $spl50),
  inference(subsumption_resolution,[],[f34565,f411])).
fof(f34565,plain,(
  ( ! [X2] : (sP1('T_0',f(s(bool,X2))) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,'F_0')) ) | $spl50),
  inference(superposition,[],[f17019,f518])).
fof(f34562,plain,(
  ( ! [X0] : (sP1('T_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl50),
  inference(superposition,[],[f17019,f226])).
fof(f34481,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP1(X1,f(s(bool,X2))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X2)) ) | $spl50),
  inference(duplicate_literal_removal,[],[f34480])).
fof(f34480,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP1(X1,f(s(bool,X2))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X2)) ) | $spl50),
  inference(condensation,[],[f34479])).
fof(f34479,plain,(
  ( ! [X971,X973,X970,X974,X972] : (sP1(X971,f(s(bool,X970))) | s(bool,'T_0') = s(bool,X972) | s(bool,X971) = s(bool,X972) | s(bool,X973) = s(bool,X974) | s(bool,'T_0') = s(bool,X974) | s(bool,'T_0') = s(bool,X970)) ) | $spl50),
  inference(subsumption_resolution,[],[f23897,f2110])).
fof(f23897,plain,(
  ( ! [X971,X973,X970,X974,X972] : (sP1(X971,f(s(bool,X970))) | s(bool,'T_0') = s(bool,X972) | s(bool,X971) = s(bool,X972) | s(bool,'F_0') = s(bool,X973) | s(bool,X973) = s(bool,X974) | s(bool,'T_0') = s(bool,X974) | s(bool,'T_0') = s(bool,X970)) ) | $spl50),
  inference(superposition,[],[f11493,f1507])).
fof(f27599,plain,(
  ( ! [X916,X914,X915,X913,X917] : (sP1(X914,f(s(bool,X913))) | s(bool,'T_0') = s(bool,X915) | s(bool,X914) = s(bool,X915) | s(bool,X913) = s(bool,X916) | s(bool,X916) = s(bool,X917) | s(bool,'T_0') = s(bool,X917)) ) | $spl50),
  inference(subsumption_resolution,[],[f23100,f411])).
fof(f23100,plain,(
  ( ! [X916,X914,X915,X913,X917] : (sP1(X914,f(s(bool,X913))) | s(bool,'T_0') = s(bool,X915) | s(bool,X914) = s(bool,X915) | s(bool,X913) = s(bool,X916) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X916) = s(bool,X917) | s(bool,'T_0') = s(bool,X917)) ) | $spl50),
  inference(superposition,[],[f11493,f1507])).
fof(f1468,plain,(
  ( ! [X0] : (sP6('F_0','F_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f1427,f226])).
fof(f1467,plain,(
  sP3(f(s(bool,'F_0')),'F_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f1427,f318])).
fof(f1461,plain,(
  ( ! [X0] : (~sP6('T_0','F_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f1426,f226])).
fof(f1459,plain,(
  ~sP5('T_0',f(s(bool,'F_0')),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f383,f394,f393,f1426,f323])).
fof(f1453,plain,(
  ( ! [X0] : (sP6('F_0',f(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f1423,f226])).
fof(f1452,plain,(
  sP3('F_0',f(s(bool,'F_0')),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f1423,f318])).
fof(f1445,plain,(
  ( ! [X0] : (~sP6('T_0',f(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f1422,f226])).
fof(f1429,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f1418,f226])).
fof(f1422,plain,(
  ~sP6('T_0',f(s(bool,'F_0')),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f219,f1418,f339])).
fof(f1423,plain,(
  sP6('F_0',f(s(bool,'F_0')),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f383,f1418,f337])).
fof(f1425,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'F_0'))) | $spl5),
  inference(unit_resulting_resolution,[],[f383,f1418,f571])).
fof(f1426,plain,(
  ~sP6('T_0','F_0',f(s(bool,'F_0'))) | $spl5),
  inference(unit_resulting_resolution,[],[f219,f1418,f339])).
fof(f1427,plain,(
  sP6('F_0','F_0',f(s(bool,'F_0'))) | $spl5),
  inference(unit_resulting_resolution,[],[f383,f1418,f337])).
fof(f1428,plain,(
  p(s(bool,f(s(bool,'F_0')))) | $spl5),
  inference(unit_resulting_resolution,[],[f383,f1418,f273])).
fof(f34591,plain,(
  $false | ($spl5 | $spl50)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f11493,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f27599,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f32738,f34368,f31647,f34371,f34481,f1418,f17019,f34561,f34562,f34578,f34580,f34584,f34586,f34590])).
fof(f34587,plain,(
  $false | ($spl5 | $spl50)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f11493,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f27599,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f32738,f34368,f31647,f34371,f34481,f1418,f17019,f34561,f34562,f34578,f34580,f34584,f34586])).
fof(f34585,plain,(
  $false | ($spl5 | $spl50)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f11493,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f27599,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f32738,f34368,f31647,f34371,f34481,f1418,f17019,f34561,f34562,f34578,f34580,f34584])).
fof(f34581,plain,(
  $false | ($spl5 | $spl50)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f11493,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f27599,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f32738,f34368,f31647,f34371,f34481,f1418,f17019,f34561,f34562,f34578,f34580])).
fof(f34579,plain,(
  $false | ($spl5 | $spl50)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f11493,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f27599,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f32738,f34368,f31647,f34371,f34481,f1418,f17019,f34561,f34562,f34578])).
fof(f34577,plain,(
  $false | ($spl5 | $spl50)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f11493,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f27599,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f32738,f34368,f31647,f34371,f34481,f1418,f17019,f34561,f34562])).
fof(f34576,plain,(
  $false | ($spl5 | $spl50)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f11493,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f27599,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794,f34321,f33796,f33797,f33798,f33800,f33801,f33806,f33807,f33808,f33809,f33810,f33811,f33812,f33813,f33814,f33815,f33816,f33817,f33818,f33819,f33821,f33822,f33823,f33824,f33825,f33826,f33827,f34329,f34334,f34340,f34342,f33992,f33993,f33994,f33995,f33996,f33997,f33998,f33999,f34000,f34001,f34002,f34003,f34004,f34005,f34006,f34007,f34008,f34009,f34010,f34012,f34013,f34015,f34016,f32738,f34368,f31647,f34371,f34481,f1418,f17019,f34561])).
fof(f34558,plain,(
  $false | ($spl57 | $spl58 | $spl64)),
  inference(subsumption_resolution,[],[f18796,f19684])).
fof(f19684,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | ($spl57 | $spl58)),
  inference(forward_demodulation,[],[f18730,f18792])).
fof(f34308,plain,(
  ( ! [X670,X671] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(X670,'type.num.num'),sK13(X671,X670)),s(fun(X670,bool),X671),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) | s(bool,'T_0') = s(bool,'const.pred_set.countable_1'(s(fun(X670,bool),X671)))) ) | $spl350),
  inference(cnf_transformation,[],[f34308_D])).
fof(f34308_D,plain,(
  ( ! [X670,X671] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(X670,'type.num.num'),sK13(X671,X670)),s(fun(X670,bool),X671),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) | s(bool,'T_0') = s(bool,'const.pred_set.countable_1'(s(fun(X670,bool),X671)))) ) <=> ~$spl350),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl350])])).
fof(f19573,plain,(
  ~p(s(bool,f(s(bool,'T_0')))) | $spl117),
  inference(cnf_transformation,[],[f19573_D])).
fof(f19573_D,plain,(
  ~p(s(bool,f(s(bool,'T_0')))) <=> ~$spl117),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl117])])).
fof(f28315,plain,(
  ( ! [X257,X258] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,'const.pred_set.INJ_3'(s(fun(X257,'type.num.num'),sK13(X258,X257)),s(fun(X257,bool),X258),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) | s(bool,'T_0') = s(bool,'const.pred_set.countable_1'(s(fun(X257,bool),X258)))) ) | $spl65),
  inference(superposition,[],[f260,f20464])).
fof(f34309,plain,(
  ( ! [X677,X673,X676,X674] : (~p(s(bool,X676)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X673,bool),X674))) | ~sP5(X676,happ(s(fun(X673,bool),X674),s(X673,'const.min.@_1'(s(fun(X673,bool),X674)))),X677) | p(s(bool,X677))) ) | $spl352),
  inference(cnf_transformation,[],[f34309_D])).
fof(f34309_D,plain,(
  ( ! [X677,X673,X676,X674] : (~p(s(bool,X676)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X673,bool),X674))) | ~sP5(X676,happ(s(fun(X673,bool),X674),s(X673,'const.min.@_1'(s(fun(X673,bool),X674)))),X677) | p(s(bool,X677))) ) <=> ~$spl352),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl352])])).
fof(f28316,plain,(
  ( ! [X261,X259,X260,X262] : (~p(s(bool,f(s(bool,'T_0')))) | ~p(s(bool,X261)) | p(s(bool,X262)) | ~sP5(X261,happ(s(fun(X259,bool),X260),s(X259,'const.min.@_1'(s(fun(X259,bool),X260)))),X262) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X259,bool),X260)))) ) | $spl65),
  inference(superposition,[],[f1062,f20464])).
fof(f34310,plain,(
  ( ! [X681,X679,X682,X678] : (~p(s(bool,X681)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X678,bool),X679))) | ~sP4(X681,happ(s(fun(X678,bool),X679),s(X678,'const.min.@_1'(s(fun(X678,bool),X679)))),X682) | p(s(bool,X682))) ) | $spl354),
  inference(cnf_transformation,[],[f34310_D])).
fof(f34310_D,plain,(
  ( ! [X681,X679,X682,X678] : (~p(s(bool,X681)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X678,bool),X679))) | ~sP4(X681,happ(s(fun(X678,bool),X679),s(X678,'const.min.@_1'(s(fun(X678,bool),X679)))),X682) | p(s(bool,X682))) ) <=> ~$spl354),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl354])])).
fof(f28317,plain,(
  ( ! [X263,X265,X264,X266] : (~p(s(bool,f(s(bool,'T_0')))) | ~p(s(bool,X265)) | p(s(bool,X266)) | ~sP4(X265,happ(s(fun(X263,bool),X264),s(X263,'const.min.@_1'(s(fun(X263,bool),X264)))),X266) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X263,bool),X264)))) ) | $spl65),
  inference(superposition,[],[f1063,f20464])).
fof(f34311,plain,(
  ( ! [X687,X683,X684,X686] : (p(s(bool,X686)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X683,bool),X684))) | ~sP7(happ(s(fun(X683,bool),X684),s(X683,'const.min.@_1'(s(fun(X683,bool),X684)))),X686,X687) | p(s(bool,X687))) ) | $spl356),
  inference(cnf_transformation,[],[f34311_D])).
fof(f34311_D,plain,(
  ( ! [X687,X683,X684,X686] : (p(s(bool,X686)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X683,bool),X684))) | ~sP7(happ(s(fun(X683,bool),X684),s(X683,'const.min.@_1'(s(fun(X683,bool),X684)))),X686,X687) | p(s(bool,X687))) ) <=> ~$spl356),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl356])])).
fof(f28318,plain,(
  ( ! [X269,X267,X268,X270] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,X269)) | p(s(bool,X270)) | ~sP7(happ(s(fun(X267,bool),X268),s(X267,'const.min.@_1'(s(fun(X267,bool),X268)))),X269,X270) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X267,bool),X268)))) ) | $spl65),
  inference(superposition,[],[f1064,f20464])).
fof(f34312,plain,(
  ( ! [X689,X691,X692,X688] : (p(s(bool,X691)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X688,bool),X689))) | ~sP8(happ(s(fun(X688,bool),X689),s(X688,'const.min.@_1'(s(fun(X688,bool),X689)))),X692,X691) | p(s(bool,X692))) ) | $spl358),
  inference(cnf_transformation,[],[f34312_D])).
fof(f34312_D,plain,(
  ( ! [X689,X691,X692,X688] : (p(s(bool,X691)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X688,bool),X689))) | ~sP8(happ(s(fun(X688,bool),X689),s(X688,'const.min.@_1'(s(fun(X688,bool),X689)))),X692,X691) | p(s(bool,X692))) ) <=> ~$spl358),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl358])])).
fof(f28319,plain,(
  ( ! [X271,X273,X272,X274] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,X273)) | p(s(bool,X274)) | ~sP8(happ(s(fun(X271,bool),X272),s(X271,'const.min.@_1'(s(fun(X271,bool),X272)))),X274,X273) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X271,bool),X272)))) ) | $spl65),
  inference(superposition,[],[f1067,f20464])).
fof(f34313,plain,(
  ( ! [X697,X693,X696,X694] : (p(s(bool,X696)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X693,bool),X694))) | ~sP9(X697,X696,happ(s(fun(X693,bool),X694),s(X693,'const.min.@_1'(s(fun(X693,bool),X694))))) | ~p(s(bool,X697))) ) | $spl360),
  inference(cnf_transformation,[],[f34313_D])).
fof(f34313_D,plain,(
  ( ! [X697,X693,X696,X694] : (p(s(bool,X696)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X693,bool),X694))) | ~sP9(X697,X696,happ(s(fun(X693,bool),X694),s(X693,'const.min.@_1'(s(fun(X693,bool),X694))))) | ~p(s(bool,X697))) ) <=> ~$spl360),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl360])])).
fof(f28320,plain,(
  ( ! [X277,X275,X276,X278] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,X277)) | ~p(s(bool,X278)) | ~sP9(X278,X277,happ(s(fun(X275,bool),X276),s(X275,'const.min.@_1'(s(fun(X275,bool),X276))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X275,bool),X276)))) ) | $spl65),
  inference(superposition,[],[f1068,f20464])).
fof(f34314,plain,(
  ( ! [X699,X702,X698,X701] : (~p(s(bool,X701)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X698,bool),X699))) | ~sP10(happ(s(fun(X698,bool),X699),s(X698,'const.min.@_1'(s(fun(X698,bool),X699)))),X702,X701) | p(s(bool,X702))) ) | $spl362),
  inference(cnf_transformation,[],[f34314_D])).
fof(f34314_D,plain,(
  ( ! [X699,X702,X698,X701] : (~p(s(bool,X701)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X698,bool),X699))) | ~sP10(happ(s(fun(X698,bool),X699),s(X698,'const.min.@_1'(s(fun(X698,bool),X699)))),X702,X701) | p(s(bool,X702))) ) <=> ~$spl362),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl362])])).
fof(f28321,plain,(
  ( ! [X280,X282,X279,X281] : (~p(s(bool,f(s(bool,'T_0')))) | ~p(s(bool,X281)) | p(s(bool,X282)) | ~sP10(happ(s(fun(X279,bool),X280),s(X279,'const.min.@_1'(s(fun(X279,bool),X280)))),X282,X281) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X279,bool),X280)))) ) | $spl65),
  inference(superposition,[],[f1071,f20464])).
fof(f34315,plain,(
  ( ! [X712,X714,X713] : (p(s(bool,'|dollar|exists_1'(s(fun(X712,bool),X713)))) | s(bool,'T_0') = s(bool,happ(s(fun(X712,bool),X713),s(X712,X714)))) ) | $spl364),
  inference(cnf_transformation,[],[f34315_D])).
fof(f34315_D,plain,(
  ( ! [X712,X714,X713] : (p(s(bool,'|dollar|exists_1'(s(fun(X712,bool),X713)))) | s(bool,'T_0') = s(bool,happ(s(fun(X712,bool),X713),s(X712,X714)))) ) <=> ~$spl364),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl364])])).
fof(f28323,plain,(
  ( ! [X288,X287,X289] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(X287,bool),X288)))) | s(bool,'T_0') = s(bool,happ(s(fun(X287,bool),X288),s(X287,X289)))) ) | $spl65),
  inference(superposition,[],[f384,f20464])).
fof(f34379,plain,(
  ( ! [X292,X294,X293,X295] : (p(s(bool,happ(s(fun(X292,bool),X293),s(X292,X295)))) | s(bool,'T_0') = s(bool,happ(s(fun(X292,bool),X293),s(X292,sK14(X293,X294,X292)))) | ~p(s(bool,X294))) ) | $spl406),
  inference(cnf_transformation,[],[f34379_D])).
fof(f34379_D,plain,(
  ( ! [X292,X294,X293,X295] : (p(s(bool,happ(s(fun(X292,bool),X293),s(X292,X295)))) | s(bool,'T_0') = s(bool,happ(s(fun(X292,bool),X293),s(X292,sK14(X293,X294,X292)))) | ~p(s(bool,X294))) ) <=> ~$spl406),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl406])])).
fof(f28325,plain,(
  ( ! [X292,X294,X293,X295] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,happ(s(fun(X292,bool),X293),s(X292,X295)))) | ~p(s(bool,X294)) | s(bool,'T_0') = s(bool,happ(s(fun(X292,bool),X293),s(X292,sK14(X293,X294,X292))))) ) | $spl65),
  inference(superposition,[],[f266,f20464])).
fof(f34378,plain,(
  ( ! [X296,X298,X297,X299] : (p(s(bool,happ(s(fun(X296,bool),X297),s(X296,X299)))) | s(bool,'T_0') = s(bool,happ(s(fun(X296,bool),X297),s(X296,sK15(X297,X298,X296)))) | ~p(s(bool,X298))) ) | $spl404),
  inference(cnf_transformation,[],[f34378_D])).
fof(f34378_D,plain,(
  ( ! [X296,X298,X297,X299] : (p(s(bool,happ(s(fun(X296,bool),X297),s(X296,X299)))) | s(bool,'T_0') = s(bool,happ(s(fun(X296,bool),X297),s(X296,sK15(X297,X298,X296)))) | ~p(s(bool,X298))) ) <=> ~$spl404),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl404])])).
fof(f28326,plain,(
  ( ! [X296,X298,X297,X299] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,happ(s(fun(X296,bool),X297),s(X296,X299)))) | ~p(s(bool,X298)) | s(bool,'T_0') = s(bool,happ(s(fun(X296,bool),X297),s(X296,sK15(X297,X298,X296))))) ) | $spl65),
  inference(superposition,[],[f268,f20464])).
fof(f34377,plain,(
  ( ! [X300,X302,X301,X303] : (p(s(bool,happ(s(fun(X300,bool),X301),s(X300,X303)))) | s(bool,'T_0') = s(bool,happ(s(fun(X300,bool),X301),s(X300,sK16(X301,X302,X300)))) | p(s(bool,X302))) ) | $spl402),
  inference(cnf_transformation,[],[f34377_D])).
fof(f34377_D,plain,(
  ( ! [X300,X302,X301,X303] : (p(s(bool,happ(s(fun(X300,bool),X301),s(X300,X303)))) | s(bool,'T_0') = s(bool,happ(s(fun(X300,bool),X301),s(X300,sK16(X301,X302,X300)))) | p(s(bool,X302))) ) <=> ~$spl402),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl402])])).
fof(f28327,plain,(
  ( ! [X300,X302,X301,X303] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,happ(s(fun(X300,bool),X301),s(X300,X303)))) | p(s(bool,X302)) | s(bool,'T_0') = s(bool,happ(s(fun(X300,bool),X301),s(X300,sK16(X301,X302,X300))))) ) | $spl65),
  inference(superposition,[],[f269,f20464])).
fof(f34376,plain,(
  ( ! [X304,X306,X305,X307] : (p(s(bool,happ(s(fun(X304,bool),X305),s(X304,X307)))) | s(bool,'T_0') = s(bool,happ(s(fun(X304,bool),X305),s(X304,sK17(X305,X306,X304)))) | p(s(bool,X306))) ) | $spl400),
  inference(cnf_transformation,[],[f34376_D])).
fof(f34376_D,plain,(
  ( ! [X304,X306,X305,X307] : (p(s(bool,happ(s(fun(X304,bool),X305),s(X304,X307)))) | s(bool,'T_0') = s(bool,happ(s(fun(X304,bool),X305),s(X304,sK17(X305,X306,X304)))) | p(s(bool,X306))) ) <=> ~$spl400),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl400])])).
fof(f28328,plain,(
  ( ! [X304,X306,X305,X307] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,happ(s(fun(X304,bool),X305),s(X304,X307)))) | p(s(bool,X306)) | s(bool,'T_0') = s(bool,happ(s(fun(X304,bool),X305),s(X304,sK17(X305,X306,X304))))) ) | $spl65),
  inference(superposition,[],[f271,f20464])).
fof(f34323,plain,(
  ( ! [X753,X755,X756,X758,X752,X754] : (~p(s(bool,'const.bool.IN_2'(s(X753,X758),s(fun(X753,bool),X756)))) | s(bool,'T_0') = s(bool,'const.pred_set.SURJ_3'(s(fun(X752,X753),X754),s(fun(X752,bool),X755),s(fun(X753,bool),X756))) | s(X753,X758) = s(X753,happ(s(fun(X752,X753),X754),s(X752,happ(s(fun(X753,X752),sK19(X754,X755,X756,X753,X752)),s(X753,X758)))))) ) | $spl370),
  inference(cnf_transformation,[],[f34323_D])).
fof(f34323_D,plain,(
  ( ! [X753,X755,X756,X758,X752,X754] : (~p(s(bool,'const.bool.IN_2'(s(X753,X758),s(fun(X753,bool),X756)))) | s(bool,'T_0') = s(bool,'const.pred_set.SURJ_3'(s(fun(X752,X753),X754),s(fun(X752,bool),X755),s(fun(X753,bool),X756))) | s(X753,X758) = s(X753,happ(s(fun(X752,X753),X754),s(X752,happ(s(fun(X753,X752),sK19(X754,X755,X756,X753,X752)),s(X753,X758)))))) ) <=> ~$spl370),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl370])])).
fof(f28330,plain,(
  ( ! [X313,X315,X316,X312,X314,X317] : (~p(s(bool,f(s(bool,'T_0')))) | ~p(s(bool,'const.bool.IN_2'(s(X313,X317),s(fun(X313,bool),X316)))) | s(X313,X317) = s(X313,happ(s(fun(X312,X313),X314),s(X312,happ(s(fun(X313,X312),sK19(X314,X315,X316,X313,X312)),s(X313,X317))))) | s(bool,'T_0') = s(bool,'const.pred_set.SURJ_3'(s(fun(X312,X313),X314),s(fun(X312,bool),X315),s(fun(X313,bool),X316)))) ) | $spl65),
  inference(superposition,[],[f307,f20464])).
fof(f34324,plain,(
  ( ! [X761,X763,X759,X760,X762] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(X760,X759),sK19(X761,X762,X763,X760,X759)),s(fun(X760,bool),X763),s(fun(X759,bool),X762)))) | s(bool,'T_0') = s(bool,'const.pred_set.SURJ_3'(s(fun(X759,X760),X761),s(fun(X759,bool),X762),s(fun(X760,bool),X763)))) ) | $spl372),
  inference(cnf_transformation,[],[f34324_D])).
fof(f34324_D,plain,(
  ( ! [X761,X763,X759,X760,X762] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(X760,X759),sK19(X761,X762,X763,X760,X759)),s(fun(X760,bool),X763),s(fun(X759,bool),X762)))) | s(bool,'T_0') = s(bool,'const.pred_set.SURJ_3'(s(fun(X759,X760),X761),s(fun(X759,bool),X762),s(fun(X760,bool),X763)))) ) <=> ~$spl372),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl372])])).
fof(f28331,plain,(
  ( ! [X321,X318,X320,X322,X319] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,'const.pred_set.INJ_3'(s(fun(X319,X318),sK19(X320,X321,X322,X319,X318)),s(fun(X319,bool),X322),s(fun(X318,bool),X321)))) | s(bool,'T_0') = s(bool,'const.pred_set.SURJ_3'(s(fun(X318,X319),X320),s(fun(X318,bool),X321),s(fun(X319,bool),X322)))) ) | $spl65),
  inference(superposition,[],[f306,f20464])).
fof(f34325,plain,(
  ( ! [X765,X767,X766] : (p(s(bool,'const.pred_set.countable_1'(s(fun(X765,bool),X767)))) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X765,'type.num.num'),X766),s(fun(X765,bool),X767),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) ) | $spl374),
  inference(cnf_transformation,[],[f34325_D])).
fof(f34325_D,plain,(
  ( ! [X765,X767,X766] : (p(s(bool,'const.pred_set.countable_1'(s(fun(X765,bool),X767)))) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X765,'type.num.num'),X766),s(fun(X765,bool),X767),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) ) <=> ~$spl374),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl374])])).
fof(f28332,plain,(
  ( ! [X325,X323,X324] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,'const.pred_set.countable_1'(s(fun(X323,bool),X325)))) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X323,'type.num.num'),X324),s(fun(X323,bool),X325),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) ) | $spl65),
  inference(superposition,[],[f261,f20464])).
fof(f18793,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'T_0'))) | $spl60),
  inference(cnf_transformation,[],[f18793_D])).
fof(f18793_D,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'T_0'))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f34375,plain,(
  ( ! [X15] : (p(s(bool,X15)) | s(bool,'F_0') = s(bool,f(s(bool,'T_0')))) ) | $spl65),
  inference(subsumption_resolution,[],[f28375,f232])).
fof(f28375,plain,(
  ( ! [X15] : (p(s(bool,X15)) | s(bool,'F_0') = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X15)) ) | $spl65),
  inference(superposition,[],[f237,f20464])).
fof(f34374,plain,(
  ( ! [X114,X113] : (s(bool,X113) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X114) | s(bool,X113) = s(bool,X114)) ) | $spl398),
  inference(cnf_transformation,[],[f34374_D])).
fof(f34374_D,plain,(
  ( ! [X114,X113] : (s(bool,X113) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X114) | s(bool,X113) = s(bool,X114)) ) <=> ~$spl398),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl398])])).
fof(f28830,plain,(
  ( ! [X114,X112,X113] : (p(s(bool,X112)) | s(bool,X113) != s(bool,f(s(bool,'T_0'))) | s(bool,X113) = s(bool,X114) | s(bool,'T_0') = s(bool,X114)) ) | $spl65),
  inference(subsumption_resolution,[],[f28409,f232])).
fof(f28409,plain,(
  ( ! [X114,X112,X113] : (p(s(bool,X112)) | s(bool,X113) != s(bool,f(s(bool,'T_0'))) | s(bool,X113) = s(bool,X114) | s(bool,'T_0') = s(bool,X114) | s(bool,'T_0') = s(bool,X112)) ) | $spl65),
  inference(superposition,[],[f1693,f20464])).
fof(f34373,plain,(
  ( ! [X123,X124] : (sP1(X123,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X124) | s(bool,X123) = s(bool,X124)) ) | $spl396),
  inference(cnf_transformation,[],[f34373_D])).
fof(f34373_D,plain,(
  ( ! [X123,X124] : (sP1(X123,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X124) | s(bool,X123) = s(bool,X124)) ) <=> ~$spl396),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl396])])).
fof(f28831,plain,(
  ( ! [X123,X124,X122] : (p(s(bool,X122)) | sP1(X123,f(s(bool,'T_0'))) | s(bool,X123) = s(bool,X124) | s(bool,'T_0') = s(bool,X124)) ) | $spl65),
  inference(subsumption_resolution,[],[f28414,f232])).
fof(f28414,plain,(
  ( ! [X123,X124,X122] : (p(s(bool,X122)) | sP1(X123,f(s(bool,'T_0'))) | s(bool,X123) = s(bool,X124) | s(bool,'T_0') = s(bool,X124) | s(bool,'T_0') = s(bool,X122)) ) | $spl65),
  inference(superposition,[],[f2114,f20464])).
fof(f34372,plain,(
  ( ! [X127,X126] : (sP1(f(s(bool,'T_0')),X126) | s(bool,'T_0') = s(bool,X127) | s(bool,X126) = s(bool,X127)) ) | $spl394),
  inference(cnf_transformation,[],[f34372_D])).
fof(f34372_D,plain,(
  ( ! [X127,X126] : (sP1(f(s(bool,'T_0')),X126) | s(bool,'T_0') = s(bool,X127) | s(bool,X126) = s(bool,X127)) ) <=> ~$spl394),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl394])])).
fof(f28832,plain,(
  ( ! [X127,X125,X126] : (p(s(bool,X125)) | sP1(f(s(bool,'T_0')),X126) | s(bool,X126) = s(bool,X127) | s(bool,'T_0') = s(bool,X127)) ) | $spl65),
  inference(subsumption_resolution,[],[f28415,f232])).
fof(f28415,plain,(
  ( ! [X127,X125,X126] : (p(s(bool,X125)) | sP1(f(s(bool,'T_0')),X126) | s(bool,X126) = s(bool,X127) | s(bool,'T_0') = s(bool,X127) | s(bool,'T_0') = s(bool,X125)) ) | $spl65),
  inference(superposition,[],[f2115,f20464])).
fof(f34367,plain,(
  ( ! [X417] : (s(bool,f(s(bool,'T_0'))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X417))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X417))) = s(bool,happ(s(fun(bool,bool),X417),s(bool,'T_0')))) ) | $spl392),
  inference(cnf_transformation,[],[f34367_D])).
fof(f34367_D,plain,(
  ( ! [X417] : (s(bool,f(s(bool,'T_0'))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X417))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X417))) = s(bool,happ(s(fun(bool,bool),X417),s(bool,'T_0')))) ) <=> ~$spl392),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl392])])).
fof(f34152,plain,(
  ( ! [X70,X69] : (s(bool,f(s(bool,'T_0'))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X70))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X70))) = s(bool,happ(s(fun(bool,bool),X70),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X69)) ) | $spl65),
  inference(duplicate_literal_removal,[],[f33394])).
fof(f33394,plain,(
  ( ! [X70,X69] : (s(bool,f(s(bool,'T_0'))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X70))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X70))) = s(bool,happ(s(fun(bool,bool),X70),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) ) | $spl65),
  inference(superposition,[],[f1782,f20464])).
fof(f34035,plain,(
  ( ! [X416,X417] : (s(bool,f(s(bool,'T_0'))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X417))) | s(bool,'T_0') = s(bool,X416) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X417))) = s(bool,happ(s(fun(bool,bool),X417),s(bool,'T_0')))) ) | $spl65),
  inference(duplicate_literal_removal,[],[f33739])).
fof(f33739,plain,(
  ( ! [X416,X417] : (s(bool,f(s(bool,'T_0'))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X417))) | s(bool,'T_0') = s(bool,X416) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X417))) = s(bool,happ(s(fun(bool,bool),X417),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X416)) ) | $spl65),
  inference(superposition,[],[f20464,f1782])).
fof(f34293,plain,(
  ( ! [X376] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X376))) = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X376))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X376))) = s(bool,happ(s(fun(bool,bool),X376),s(bool,'T_0')))) ) | $spl344),
  inference(cnf_transformation,[],[f34293_D])).
fof(f34293_D,plain,(
  ( ! [X376] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X376))) = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X376))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X376))) = s(bool,happ(s(fun(bool,bool),X376),s(bool,'T_0')))) ) <=> ~$spl344),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl344])])).
fof(f34366,plain,(
  ( ! [X385,X386] : (p(s(bool,X386)) | s(bool,'const.min.@_1'(s(fun(bool,bool),X385))) = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X385))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X385))) = s(bool,happ(s(fun(bool,bool),X385),s(bool,'T_0')))) ) | $spl44),
  inference(subsumption_resolution,[],[f33962,f232])).
fof(f33962,plain,(
  ( ! [X385,X386] : (p(s(bool,X386)) | s(bool,'const.min.@_1'(s(fun(bool,bool),X385))) = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X385))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X385))) = s(bool,happ(s(fun(bool,bool),X385),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X386)) ) | $spl44),
  inference(superposition,[],[f18313,f1782])).
fof(f18313,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,X0) = s(bool,f(s(bool,f(s(bool,X0)))))) ) | $spl44),
  inference(factoring,[],[f16941])).
fof(f16941,plain,(
  ( ! [X30,X29] : (p(s(bool,X29)) | p(s(bool,X30)) | s(bool,X30) = s(bool,f(s(bool,f(s(bool,X29)))))) ) | $spl44),
  inference(subsumption_resolution,[],[f16899,f232])).
fof(f16899,plain,(
  ( ! [X30,X29] : (p(s(bool,X29)) | p(s(bool,X30)) | s(bool,X30) = s(bool,f(s(bool,f(s(bool,X29))))) | s(bool,'T_0') = s(bool,X29)) ) | $spl44),
  inference(superposition,[],[f15600,f13463])).
fof(f13463,plain,(
  ( ! [X13] : (s(bool,X13) = s(bool,f(s(bool,X13))) | s(bool,'T_0') = s(bool,X13)) ) | $spl44),
  inference(subsumption_resolution,[],[f9354,f411])).
fof(f9354,plain,(
  ( ! [X13] : (s(bool,X13) = s(bool,f(s(bool,X13))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,X13)) ) | $spl44),
  inference(superposition,[],[f5339,f226])).
fof(f15600,plain,(
  ( ! [X6,X7] : (p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X7) = s(bool,f(s(bool,X6)))) ) | $spl44),
  inference(subsumption_resolution,[],[f15506,f232])).
fof(f15506,plain,(
  ( ! [X6,X7] : (p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X7) = s(bool,f(s(bool,X6))) | s(bool,'T_0') = s(bool,X6)) ) | $spl44),
  inference(superposition,[],[f273,f13463])).
fof(f34365,plain,(
  ( ! [X373] : (s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X373))))) = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X373))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X373))) = s(bool,happ(s(fun(bool,bool),X373),s(bool,'T_0')))) ) | $spl390),
  inference(cnf_transformation,[],[f34365_D])).
fof(f34365_D,plain,(
  ( ! [X373] : (s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X373))))) = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X373))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X373))) = s(bool,happ(s(fun(bool,bool),X373),s(bool,'T_0')))) ) <=> ~$spl390),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl390])])).
fof(f34364,plain,(
  ( ! [X374,X373] : (p(s(bool,X374)) | s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X373))))) = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X373))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X373))) = s(bool,happ(s(fun(bool,bool),X373),s(bool,'T_0')))) ) | $spl44),
  inference(subsumption_resolution,[],[f33956,f232])).
fof(f33956,plain,(
  ( ! [X374,X373] : (p(s(bool,X374)) | s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X373))))) = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X373))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X373))) = s(bool,happ(s(fun(bool,bool),X373),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X374)) ) | $spl44),
  inference(superposition,[],[f17011,f1782])).
fof(f17011,plain,(
  ( ! [X17] : (p(s(bool,X17)) | s(bool,f(s(bool,X17))) = s(bool,f(s(bool,f(s(bool,X17)))))) ) | $spl44),
  inference(subsumption_resolution,[],[f16997,f232])).
fof(f16997,plain,(
  ( ! [X17] : (p(s(bool,X17)) | s(bool,f(s(bool,X17))) = s(bool,f(s(bool,f(s(bool,X17))))) | s(bool,'T_0') = s(bool,X17)) ) | $spl44),
  inference(superposition,[],[f16886,f13463])).
fof(f16886,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,X0) = s(bool,f(s(bool,X0)))) ) | $spl44),
  inference(factoring,[],[f15600])).
fof(f34273,plain,(
  ( ! [X305] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X305))) = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X305))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X305))) = s(bool,happ(s(fun(bool,bool),X305),s(bool,'T_0')))) ) | $spl310),
  inference(cnf_transformation,[],[f34273_D])).
fof(f34273_D,plain,(
  ( ! [X305] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X305))) = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X305))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X305))) = s(bool,happ(s(fun(bool,bool),X305),s(bool,'T_0')))) ) <=> ~$spl310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl310])])).
fof(f34355,plain,(
  ( ! [X360,X359] : (p(s(bool,X360)) | s(bool,'const.min.@_1'(s(fun(bool,bool),X359))) = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X359))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X359))) = s(bool,happ(s(fun(bool,bool),X359),s(bool,'T_0')))) ) | $spl44),
  inference(subsumption_resolution,[],[f33951,f232])).
fof(f33951,plain,(
  ( ! [X360,X359] : (p(s(bool,X360)) | s(bool,'const.min.@_1'(s(fun(bool,bool),X359))) = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X359))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X359))) = s(bool,happ(s(fun(bool,bool),X359),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X360)) ) | $spl44),
  inference(superposition,[],[f16886,f1782])).
fof(f34354,plain,(
  ( ! [X357] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X357))))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X357))) = s(bool,happ(s(fun(bool,bool),X357),s(bool,'T_0')))) ) | $spl388),
  inference(cnf_transformation,[],[f34354_D])).
fof(f34354_D,plain,(
  ( ! [X357] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X357))))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X357))) = s(bool,happ(s(fun(bool,bool),X357),s(bool,'T_0')))) ) <=> ~$spl388),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl388])])).
fof(f34353,plain,(
  ( ! [X358,X357] : (p(s(bool,X358)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X357))))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X357))) = s(bool,happ(s(fun(bool,bool),X357),s(bool,'T_0')))) ) | $spl44),
  inference(subsumption_resolution,[],[f33950,f232])).
fof(f33950,plain,(
  ( ! [X358,X357] : (p(s(bool,X358)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X357))))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X357))) = s(bool,happ(s(fun(bool,bool),X357),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X358)) ) | $spl44),
  inference(superposition,[],[f16816,f1782])).
fof(f16816,plain,(
  ( ! [X17] : (p(s(bool,X17)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X17)))))))) ) | $spl44),
  inference(subsumption_resolution,[],[f16797,f232])).
fof(f16797,plain,(
  ( ! [X17] : (p(s(bool,X17)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X17))))))) | s(bool,'T_0') = s(bool,X17)) ) | $spl44),
  inference(superposition,[],[f15724,f13463])).
fof(f15724,plain,(
  ( ! [X15] : (p(s(bool,X15)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X15)))))) ) | $spl44),
  inference(subsumption_resolution,[],[f15712,f232])).
fof(f15712,plain,(
  ( ! [X15] : (p(s(bool,X15)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X15))))) | s(bool,'T_0') = s(bool,X15)) ) | $spl44),
  inference(superposition,[],[f15599,f13463])).
fof(f15599,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,'F_0') = s(bool,f(s(bool,X5)))) ) | $spl44),
  inference(subsumption_resolution,[],[f15505,f232])).
fof(f15505,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,'F_0') = s(bool,f(s(bool,X5))) | s(bool,'T_0') = s(bool,X5)) ) | $spl44),
  inference(superposition,[],[f237,f13463])).
fof(f34284,plain,(
  ( ! [X340] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X340))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X340))) = s(bool,happ(s(fun(bool,bool),X340),s(bool,'T_0')))) ) | $spl326),
  inference(cnf_transformation,[],[f34284_D])).
fof(f34284_D,plain,(
  ( ! [X340] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X340))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X340))) = s(bool,happ(s(fun(bool,bool),X340),s(bool,'T_0')))) ) <=> ~$spl326),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl326])])).
fof(f34352,plain,(
  ( ! [X337,X338] : (p(s(bool,X338)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X337))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X337))) = s(bool,happ(s(fun(bool,bool),X337),s(bool,'T_0')))) ) | $spl44),
  inference(subsumption_resolution,[],[f33940,f232])).
fof(f33940,plain,(
  ( ! [X337,X338] : (p(s(bool,X338)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X337))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X337))) = s(bool,happ(s(fun(bool,bool),X337),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X338)) ) | $spl44),
  inference(superposition,[],[f15724,f1782])).
fof(f34267,plain,(
  ( ! [X286] : (s(bool,'F_0') = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X286))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X286))) = s(bool,happ(s(fun(bool,bool),X286),s(bool,'T_0')))) ) | $spl298),
  inference(cnf_transformation,[],[f34267_D])).
fof(f34267_D,plain,(
  ( ! [X286] : (s(bool,'F_0') = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X286))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X286))) = s(bool,happ(s(fun(bool,bool),X286),s(bool,'T_0')))) ) <=> ~$spl298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl298])])).
fof(f34346,plain,(
  ( ! [X323,X322] : (p(s(bool,X323)) | s(bool,'F_0') = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X322))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X322))) = s(bool,happ(s(fun(bool,bool),X322),s(bool,'T_0')))) ) | $spl44),
  inference(subsumption_resolution,[],[f33934,f232])).
fof(f33934,plain,(
  ( ! [X323,X322] : (p(s(bool,X323)) | s(bool,'F_0') = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X322))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X322))) = s(bool,happ(s(fun(bool,bool),X322),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X323)) ) | $spl44),
  inference(superposition,[],[f15599,f1782])).
fof(f34345,plain,(
  ( ! [X289,X291] : (s(bool,f(s(bool,X291))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X289))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X289))) = s(bool,happ(s(fun(bool,bool),X289),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X291)) ) | $spl386),
  inference(cnf_transformation,[],[f34345_D])).
fof(f34345_D,plain,(
  ( ! [X289,X291] : (s(bool,f(s(bool,X291))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X289))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X289))) = s(bool,happ(s(fun(bool,bool),X289),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X291)) ) <=> ~$spl386),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl386])])).
fof(f34344,plain,(
  ( ! [X290,X289,X291] : (p(s(bool,X290)) | s(bool,f(s(bool,X291))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X289))) | s(bool,'T_0') = s(bool,X291) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X289))) = s(bool,happ(s(fun(bool,bool),X289),s(bool,'T_0')))) ) | $spl44),
  inference(subsumption_resolution,[],[f33920,f232])).
fof(f33920,plain,(
  ( ! [X290,X289,X291] : (p(s(bool,X290)) | s(bool,f(s(bool,X291))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X289))) | s(bool,'T_0') = s(bool,X291) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X289))) = s(bool,happ(s(fun(bool,bool),X289),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X290)) ) | $spl44),
  inference(superposition,[],[f9475,f1782])).
fof(f9475,plain,(
  ( ! [X8,X9] : (p(s(bool,X9)) | s(bool,X9) = s(bool,f(s(bool,X8))) | s(bool,'T_0') = s(bool,X8)) ) | $spl44),
  inference(subsumption_resolution,[],[f9381,f383])).
fof(f9381,plain,(
  ( ! [X8,X9] : (p(s(bool,'F_0')) | p(s(bool,X9)) | s(bool,X9) = s(bool,f(s(bool,X8))) | s(bool,'T_0') = s(bool,X8)) ) | $spl44),
  inference(superposition,[],[f273,f5339])).
fof(f34343,plain,(
  ( ! [X167,X169,X170] : (sP1('const.min.@_1'(s(fun(bool,bool),X167)),X169) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X167))) = s(bool,happ(s(fun(bool,bool),X167),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X170) | s(bool,X169) = s(bool,X170)) ) | $spl384),
  inference(cnf_transformation,[],[f34343_D])).
fof(f34343_D,plain,(
  ( ! [X167,X169,X170] : (sP1('const.min.@_1'(s(fun(bool,bool),X167)),X169) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X167))) = s(bool,happ(s(fun(bool,bool),X167),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X170) | s(bool,X169) = s(bool,X170)) ) <=> ~$spl384),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl384])])).
fof(f34342,plain,(
  ( ! [X167,X169,X170,X168] : (p(s(bool,X168)) | sP1('const.min.@_1'(s(fun(bool,bool),X167)),X169) | s(bool,X169) = s(bool,X170) | s(bool,'T_0') = s(bool,X170) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X167))) = s(bool,happ(s(fun(bool,bool),X167),s(bool,'T_0')))) )),
  inference(subsumption_resolution,[],[f33875,f232])).
fof(f33875,plain,(
  ( ! [X167,X169,X170,X168] : (p(s(bool,X168)) | sP1('const.min.@_1'(s(fun(bool,bool),X167)),X169) | s(bool,X169) = s(bool,X170) | s(bool,'T_0') = s(bool,X170) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X167))) = s(bool,happ(s(fun(bool,bool),X167),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X168)) )),
  inference(superposition,[],[f2115,f1782])).
fof(f34341,plain,(
  ( ! [X165,X163,X166] : (sP1(X165,'const.min.@_1'(s(fun(bool,bool),X163))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X163))) = s(bool,happ(s(fun(bool,bool),X163),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X166) | s(bool,X165) = s(bool,X166)) ) | $spl382),
  inference(cnf_transformation,[],[f34341_D])).
fof(f34341_D,plain,(
  ( ! [X165,X163,X166] : (sP1(X165,'const.min.@_1'(s(fun(bool,bool),X163))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X163))) = s(bool,happ(s(fun(bool,bool),X163),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X166) | s(bool,X165) = s(bool,X166)) ) <=> ~$spl382),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl382])])).
fof(f34340,plain,(
  ( ! [X165,X163,X166,X164] : (p(s(bool,X164)) | sP1(X165,'const.min.@_1'(s(fun(bool,bool),X163))) | s(bool,X165) = s(bool,X166) | s(bool,'T_0') = s(bool,X166) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X163))) = s(bool,happ(s(fun(bool,bool),X163),s(bool,'T_0')))) )),
  inference(subsumption_resolution,[],[f33874,f232])).
fof(f33874,plain,(
  ( ! [X165,X163,X166,X164] : (p(s(bool,X164)) | sP1(X165,'const.min.@_1'(s(fun(bool,bool),X163))) | s(bool,X165) = s(bool,X166) | s(bool,'T_0') = s(bool,X166) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X163))) = s(bool,happ(s(fun(bool,bool),X163),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X164)) )),
  inference(superposition,[],[f2114,f1782])).
fof(f34339,plain,(
  ( ! [X154] : (sP1('const.min.@_1'(s(fun(bool,bool),X154)),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X154))) = s(bool,happ(s(fun(bool,bool),X154),s(bool,'T_0')))) ) | $spl380),
  inference(cnf_transformation,[],[f34339_D])).
fof(f34339_D,plain,(
  ( ! [X154] : (sP1('const.min.@_1'(s(fun(bool,bool),X154)),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X154))) = s(bool,happ(s(fun(bool,bool),X154),s(bool,'T_0')))) ) <=> ~$spl380),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl380])])).
fof(f34338,plain,(
  ( ! [X154,X155] : (p(s(bool,X155)) | sP1('const.min.@_1'(s(fun(bool,bool),X154)),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X154))) = s(bool,happ(s(fun(bool,bool),X154),s(bool,'T_0')))) ) | $spl10),
  inference(subsumption_resolution,[],[f33871,f232])).
fof(f33871,plain,(
  ( ! [X154,X155] : (p(s(bool,X155)) | sP1('const.min.@_1'(s(fun(bool,bool),X154)),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X154))) = s(bool,happ(s(fun(bool,bool),X154),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X155)) ) | $spl10),
  inference(superposition,[],[f2067,f1782])).
fof(f34337,plain,(
  ( ! [X152] : (sP1('T_0','const.min.@_1'(s(fun(bool,bool),X152))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X152))) = s(bool,happ(s(fun(bool,bool),X152),s(bool,'T_0')))) ) | $spl378),
  inference(cnf_transformation,[],[f34337_D])).
fof(f34337_D,plain,(
  ( ! [X152] : (sP1('T_0','const.min.@_1'(s(fun(bool,bool),X152))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X152))) = s(bool,happ(s(fun(bool,bool),X152),s(bool,'T_0')))) ) <=> ~$spl378),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl378])])).
fof(f34336,plain,(
  ( ! [X152,X153] : (p(s(bool,X153)) | sP1('T_0','const.min.@_1'(s(fun(bool,bool),X152))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X152))) = s(bool,happ(s(fun(bool,bool),X152),s(bool,'T_0')))) ) | $spl6),
  inference(subsumption_resolution,[],[f33870,f232])).
fof(f33870,plain,(
  ( ! [X152,X153] : (p(s(bool,X153)) | sP1('T_0','const.min.@_1'(s(fun(bool,bool),X152))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X152))) = s(bool,happ(s(fun(bool,bool),X152),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X153)) ) | $spl6),
  inference(superposition,[],[f2063,f1782])).
fof(f34335,plain,(
  ( ! [X151,X150,X148] : (s(bool,X150) != s(bool,'const.min.@_1'(s(fun(bool,bool),X148))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X148))) = s(bool,happ(s(fun(bool,bool),X148),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X151) | s(bool,X150) = s(bool,X151)) ) | $spl376),
  inference(cnf_transformation,[],[f34335_D])).
fof(f34335_D,plain,(
  ( ! [X151,X150,X148] : (s(bool,X150) != s(bool,'const.min.@_1'(s(fun(bool,bool),X148))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X148))) = s(bool,happ(s(fun(bool,bool),X148),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X151) | s(bool,X150) = s(bool,X151)) ) <=> ~$spl376),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl376])])).
fof(f34334,plain,(
  ( ! [X151,X149,X150,X148] : (p(s(bool,X149)) | s(bool,X150) != s(bool,'const.min.@_1'(s(fun(bool,bool),X148))) | s(bool,X150) = s(bool,X151) | s(bool,'T_0') = s(bool,X151) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X148))) = s(bool,happ(s(fun(bool,bool),X148),s(bool,'T_0')))) )),
  inference(subsumption_resolution,[],[f33869,f232])).
fof(f33869,plain,(
  ( ! [X151,X149,X150,X148] : (p(s(bool,X149)) | s(bool,X150) != s(bool,'const.min.@_1'(s(fun(bool,bool),X148))) | s(bool,X150) = s(bool,X151) | s(bool,'T_0') = s(bool,X151) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X148))) = s(bool,happ(s(fun(bool,bool),X148),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X149)) )),
  inference(superposition,[],[f1693,f1782])).
fof(f34209,plain,(
  ( ! [X5] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5))) = s(bool,happ(s(fun(bool,bool),X5),s(bool,'T_0')))) ) | $spl202),
  inference(cnf_transformation,[],[f34209_D])).
fof(f34209_D,plain,(
  ( ! [X5] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5))) = s(bool,happ(s(fun(bool,bool),X5),s(bool,'T_0')))) ) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f33798,plain,(
  ( ! [X765,X767,X766,X768] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X768)))) | p(s(bool,'const.pred_set.countable_1'(s(fun(X765,bool),X767)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X768))) = s(bool,happ(s(fun(bool,bool),X768),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.pred_set.INJ_3'(s(fun(X765,'type.num.num'),X766),s(fun(X765,bool),X767),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) )),
  inference(superposition,[],[f261,f1782])).
fof(f33797,plain,(
  ( ! [X761,X763,X759,X764,X760,X762] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X764)))) | p(s(bool,'const.pred_set.INJ_3'(s(fun(X760,X759),sK19(X761,X762,X763,X760,X759)),s(fun(X760,bool),X763),s(fun(X759,bool),X762)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X764))) = s(bool,happ(s(fun(bool,bool),X764),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.pred_set.SURJ_3'(s(fun(X759,X760),X761),s(fun(X759,bool),X762),s(fun(X760,bool),X763)))) )),
  inference(superposition,[],[f306,f1782])).
fof(f33796,plain,(
  ( ! [X757,X753,X755,X756,X758,X752,X754] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X757)))) | ~p(s(bool,'const.bool.IN_2'(s(X753,X758),s(fun(X753,bool),X756)))) | s(X753,X758) = s(X753,happ(s(fun(X752,X753),X754),s(X752,happ(s(fun(X753,X752),sK19(X754,X755,X756,X753,X752)),s(X753,X758))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X757))) = s(bool,happ(s(fun(bool,bool),X757),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.pred_set.SURJ_3'(s(fun(X752,X753),X754),s(fun(X752,bool),X755),s(fun(X753,bool),X756)))) )),
  inference(superposition,[],[f307,f1782])).
fof(f34321,plain,(
  ( ! [X745,X744] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X745))) = s(bool,happ(s(fun(bool,bool),X745),s(bool,'T_0'))) | p(s(bool,X744)) | ~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X745))))) )),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793,f34320,f33794])).
fof(f34320,plain,(
  ( ! [X739,X740] : (p(s(bool,X739)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X740))) = s(bool,happ(s(fun(bool,bool),X740),s(bool,'T_0'))) | ~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X740))))) )),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792,f34318,f33793])).
fof(f34319,plain,(
  ( ! [X736,X732,X734,X733] : (s(bool,'T_0') = s(bool,happ(s(fun(X732,bool),X733),s(X732,sK15(X733,X734,X732)))) | p(s(bool,happ(s(fun(X732,bool),X733),s(X732,X736))))) ) | $spl368),
  inference(cnf_transformation,[],[f34319_D])).
fof(f34319_D,plain,(
  ( ! [X736,X732,X734,X733] : (s(bool,'T_0') = s(bool,happ(s(fun(X732,bool),X733),s(X732,sK15(X733,X734,X732)))) | p(s(bool,happ(s(fun(X732,bool),X733),s(X732,X736))))) ) <=> ~$spl368),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl368])])).
fof(f34318,plain,(
  ( ! [X736,X732,X734,X733,X735] : (s(bool,'T_0') = s(bool,happ(s(fun(X732,bool),X733),s(X732,sK15(X733,X734,X732)))) | ~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X735)))) | p(s(bool,happ(s(fun(X732,bool),X733),s(X732,X736)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X735))) = s(bool,happ(s(fun(bool,bool),X735),s(bool,'T_0')))) )),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791,f34316,f33792])).
fof(f34317,plain,(
  ( ! [X728,X729,X731,X727] : (p(s(bool,happ(s(fun(X727,bool),X728),s(X727,X731)))) | s(bool,'T_0') = s(bool,happ(s(fun(X727,bool),X728),s(X727,sK14(X728,X729,X727))))) ) | $spl366),
  inference(cnf_transformation,[],[f34317_D])).
fof(f34317_D,plain,(
  ( ! [X728,X729,X731,X727] : (p(s(bool,happ(s(fun(X727,bool),X728),s(X727,X731)))) | s(bool,'T_0') = s(bool,happ(s(fun(X727,bool),X728),s(X727,sK14(X728,X729,X727))))) ) <=> ~$spl366),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl366])])).
fof(f34316,plain,(
  ( ! [X728,X730,X729,X731,X727] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X730)))) | p(s(bool,happ(s(fun(X727,bool),X728),s(X727,X731)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X730))) = s(bool,happ(s(fun(bool,bool),X730),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(X727,bool),X728),s(X727,sK14(X728,X729,X727))))) )),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34307,f33778,f33779,f33780,f33781,f33782,f33783,f33784,f33787,f33791])).
fof(f33787,plain,(
  ( ! [X712,X714,X713,X715] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X715)))) | p(s(bool,'|dollar|exists_1'(s(fun(X712,bool),X713)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X715))) = s(bool,happ(s(fun(bool,bool),X715),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(X712,bool),X713),s(X712,X714)))) )),
  inference(superposition,[],[f384,f1782])).
fof(f33784,plain,(
  ( ! [X699,X700,X702,X698,X701] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X700)))) | ~p(s(bool,X701)) | p(s(bool,X702)) | ~sP10(happ(s(fun(X698,bool),X699),s(X698,'const.min.@_1'(s(fun(X698,bool),X699)))),X702,X701) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X700))) = s(bool,happ(s(fun(bool,bool),X700),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X698,bool),X699)))) )),
  inference(superposition,[],[f1071,f1782])).
fof(f33783,plain,(
  ( ! [X697,X693,X695,X696,X694] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X695)))) | p(s(bool,X696)) | ~p(s(bool,X697)) | ~sP9(X697,X696,happ(s(fun(X693,bool),X694),s(X693,'const.min.@_1'(s(fun(X693,bool),X694))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X695))) = s(bool,happ(s(fun(bool,bool),X695),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X693,bool),X694)))) )),
  inference(superposition,[],[f1068,f1782])).
fof(f33782,plain,(
  ( ! [X689,X691,X692,X688,X690] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X690)))) | p(s(bool,X691)) | p(s(bool,X692)) | ~sP8(happ(s(fun(X688,bool),X689),s(X688,'const.min.@_1'(s(fun(X688,bool),X689)))),X692,X691) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X690))) = s(bool,happ(s(fun(bool,bool),X690),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X688,bool),X689)))) )),
  inference(superposition,[],[f1067,f1782])).
fof(f33781,plain,(
  ( ! [X685,X687,X683,X684,X686] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X685)))) | p(s(bool,X686)) | p(s(bool,X687)) | ~sP7(happ(s(fun(X683,bool),X684),s(X683,'const.min.@_1'(s(fun(X683,bool),X684)))),X686,X687) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X685))) = s(bool,happ(s(fun(bool,bool),X685),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X683,bool),X684)))) )),
  inference(superposition,[],[f1064,f1782])).
fof(f33780,plain,(
  ( ! [X681,X679,X680,X682,X678] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X680)))) | ~p(s(bool,X681)) | p(s(bool,X682)) | ~sP4(X681,happ(s(fun(X678,bool),X679),s(X678,'const.min.@_1'(s(fun(X678,bool),X679)))),X682) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X680))) = s(bool,happ(s(fun(bool,bool),X680),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X678,bool),X679)))) )),
  inference(superposition,[],[f1063,f1782])).
fof(f33779,plain,(
  ( ! [X677,X673,X675,X676,X674] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X675)))) | ~p(s(bool,X676)) | p(s(bool,X677)) | ~sP5(X676,happ(s(fun(X673,bool),X674),s(X673,'const.min.@_1'(s(fun(X673,bool),X674)))),X677) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X675))) = s(bool,happ(s(fun(bool,bool),X675),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X673,bool),X674)))) )),
  inference(superposition,[],[f1062,f1782])).
fof(f33778,plain,(
  ( ! [X670,X671,X672] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X672)))) | p(s(bool,'const.pred_set.INJ_3'(s(fun(X670,'type.num.num'),sK13(X671,X670)),s(fun(X670,bool),X671),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X672))) = s(bool,happ(s(fun(bool,bool),X672),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.pred_set.countable_1'(s(fun(X670,bool),X671)))) )),
  inference(superposition,[],[f260,f1782])).
fof(f34271,plain,(
  ( ! [X301] : (sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X301)))),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X301))) = s(bool,happ(s(fun(bool,bool),X301),s(bool,'T_0')))) ) | $spl306),
  inference(cnf_transformation,[],[f34271_D])).
fof(f34271_D,plain,(
  ( ! [X301] : (sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X301)))),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X301))) = s(bool,happ(s(fun(bool,bool),X301),s(bool,'T_0')))) ) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f34306,plain,(
  ( ! [X639,X640] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X640))) = s(bool,happ(s(fun(bool,bool),X640),s(bool,'T_0'))) | p(s(bool,X639)) | sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X640)))),'T_0')) ) | ($spl10 | $spl44)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2067,f3281,f3334,f3617,f3618,f3621,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11495,f11499,f11090,f9475,f5339,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f3615,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f9363,f11364,f13461,f13463,f307,f2136,f5743,f11057,f14591,f14590,f14589,f14588,f14679,f14681,f14706,f14709,f14728,f14736,f14739,f14754,f14757,f14767,f14785,f14794,f15491,f15599,f15600,f15601,f15603,f15604,f15634,f15637,f15639,f15640,f15641,f15642,f15630,f15724,f15725,f16154,f16318,f16317,f16305,f16304,f16322,f16414,f16416,f16452,f16455,f16464,f16466,f16475,f16483,f16494,f16507,f16516,f16816,f16817,f16856,f16886,f16941,f16942,f16960,f16961,f17011,f17012,f17218,f17074,f17228,f17230,f17231,f17232,f17236,f17237,f17238,f17239,f17454,f17455,f17498,f17499,f17563,f17735,f17737,f17738,f17739,f17740,f17741,f17742,f17743,f17912,f17913,f17914,f17988,f17989,f17990,f18147,f18148,f18149,f18150,f18151,f18152,f18189,f18190,f18229,f18230,f18311,f18313,f18372,f18373,f18391,f18392,f18433,f18434,f18435,f18436,f18542,f18543,f21247,f27085,f21682,f21750,f26901,f26887,f26855,f21784,f21786,f26781,f26778,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27477,f27479,f27481,f27484,f27487,f27489,f27490,f27492,f27494,f27496,f27499,f27501,f27503,f27506,f27508,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f25860,f25852,f25848,f25844,f25842,f25840,f25838,f25836,f25834,f25832,f25830,f25828,f25826,f25824,f25822,f25820,f25818,f25816,f25814,f25812,f25808,f27590,f27591,f27600,f27601,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27674,f27675,f27676,f27685,f27695,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f32012,f32013,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f33083,f32546,f33149,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34199,f34201,f33398,f34202,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33473,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33520,f33522,f33525,f33527,f33529,f33530,f33531,f33532,f33533,f33534,f33535,f33536,f33537,f33538,f33539,f33541,f33542,f33543,f33544,f33545,f33546,f33547,f33548,f33549,f33550,f33551,f33552,f33553,f33554,f33555,f33556,f33558,f33559,f33561,f33563,f33564,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34062,f34058,f34056,f34054,f34053,f34052,f34051,f34050,f34049,f34048,f34283,f34047,f34046,f34045,f34044,f34043,f34042,f34041,f34040,f34039,f34038,f34036,f34297,f34300,f34301,f34302,f34304,f33767])).
fof(f33767,plain,(
  ( ! [X639,X640] : (sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X640)))),'T_0') | p(s(bool,X639)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X640))) = s(bool,happ(s(fun(bool,bool),X640),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,f(s(bool,X639)))) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f17737,f1782])).
fof(f34302,plain,(
  ( ! [X631,X632] : (s(bool,X631) = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X632))))) | s(bool,'T_0') = s(bool,X631) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X632))) = s(bool,happ(s(fun(bool,bool),X632),s(bool,'T_0')))) ) | $spl44),
  inference(subsumption_resolution,[],[f33763,f16322])).
fof(f33763,plain,(
  ( ! [X631,X632] : (s(bool,X631) = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X632))))) | s(bool,'T_0') = s(bool,X631) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X632))) = s(bool,happ(s(fun(bool,bool),X632),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,f(s(bool,X631)))) ) | $spl44),
  inference(superposition,[],[f17218,f1782])).
fof(f33564,plain,(
  ( ! [X387,X388] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X387)))) | s(bool,happ(s(fun(bool,bool),X387),s(bool,'T_0'))) = s(bool,f(s(bool,f(s(bool,happ(s(fun(bool,bool),X387),s(bool,'T_0'))))))) | s(bool,X388) = s(bool,'const.min.@_1'(s(fun(bool,bool),X387))) | s(bool,'T_0') = s(bool,X388)) ) | $spl44),
  inference(superposition,[],[f18313,f1782])).
fof(f33563,plain,(
  ( ! [X385,X386] : (sP1(f(s(bool,f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X385)))))),'T_0') | p(s(bool,happ(s(fun(bool,bool),X385),s(bool,'T_0')))) | s(bool,X386) = s(bool,'const.min.@_1'(s(fun(bool,bool),X385))) | s(bool,'T_0') = s(bool,X386)) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f17737,f1782])).
fof(f33561,plain,(
  ( ! [X382,X381] : (sP1(f(s(bool,f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X381)))))),'T_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X381),s(bool,'T_0'))) | s(bool,X382) = s(bool,'const.min.@_1'(s(fun(bool,bool),X381))) | s(bool,'T_0') = s(bool,X382)) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f17230,f1782])).
fof(f33559,plain,(
  ( ! [X377,X378] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X377))) = s(bool,f(s(bool,f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X377))))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X377),s(bool,'T_0'))) | s(bool,X378) = s(bool,'const.min.@_1'(s(fun(bool,bool),X377))) | s(bool,'T_0') = s(bool,X378)) ) | $spl44),
  inference(superposition,[],[f17218,f1782])).
fof(f33558,plain,(
  ( ! [X376,X375] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X375)))) | s(bool,f(s(bool,happ(s(fun(bool,bool),X375),s(bool,'T_0'))))) = s(bool,f(s(bool,f(s(bool,happ(s(fun(bool,bool),X375),s(bool,'T_0'))))))) | s(bool,X376) = s(bool,'const.min.@_1'(s(fun(bool,bool),X375))) | s(bool,'T_0') = s(bool,X376)) ) | $spl44),
  inference(superposition,[],[f17011,f1782])).
fof(f33556,plain,(
  ( ! [X370,X369,X371] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X369)))) | p(s(bool,X370)) | s(bool,f(s(bool,X370))) = s(bool,f(s(bool,happ(s(fun(bool,bool),X369),s(bool,'T_0'))))) | s(bool,X371) = s(bool,'const.min.@_1'(s(fun(bool,bool),X369))) | s(bool,'T_0') = s(bool,X371)) ) | $spl44),
  inference(superposition,[],[f16960,f1782])).
fof(f33555,plain,(
  ( ! [X366,X368,X367] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X366)))) | p(s(bool,X367)) | s(bool,f(s(bool,f(s(bool,X367))))) = s(bool,happ(s(fun(bool,bool),X366),s(bool,'T_0'))) | s(bool,X368) = s(bool,'const.min.@_1'(s(fun(bool,bool),X366))) | s(bool,'T_0') = s(bool,X368)) ) | $spl44),
  inference(superposition,[],[f16941,f1782])).
fof(f33554,plain,(
  ( ! [X364,X365,X363] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X363)))) | p(s(bool,X364)) | s(bool,X364) = s(bool,f(s(bool,f(s(bool,happ(s(fun(bool,bool),X363),s(bool,'T_0'))))))) | s(bool,X365) = s(bool,'const.min.@_1'(s(fun(bool,bool),X363))) | s(bool,'T_0') = s(bool,X365)) ) | $spl44),
  inference(superposition,[],[f16941,f1782])).
fof(f33553,plain,(
  ( ! [X362,X361] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X361)))) | s(bool,happ(s(fun(bool,bool),X361),s(bool,'T_0'))) = s(bool,f(s(bool,happ(s(fun(bool,bool),X361),s(bool,'T_0'))))) | s(bool,X362) = s(bool,'const.min.@_1'(s(fun(bool,bool),X361))) | s(bool,'T_0') = s(bool,X362)) ) | $spl44),
  inference(superposition,[],[f16886,f1782])).
fof(f33552,plain,(
  ( ! [X360,X359] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X359)))) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,happ(s(fun(bool,bool),X359),s(bool,'T_0'))))))))) | s(bool,X360) = s(bool,'const.min.@_1'(s(fun(bool,bool),X359))) | s(bool,'T_0') = s(bool,X360)) ) | $spl44),
  inference(superposition,[],[f16816,f1782])).
fof(f33551,plain,(
  ( ! [X358,X357] : (sP4('T_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X357)))),'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X357),s(bool,'T_0'))) | s(bool,X358) = s(bool,'const.min.@_1'(s(fun(bool,bool),X357))) | s(bool,'T_0') = s(bool,X358)) ) | $spl44),
  inference(superposition,[],[f16516,f1782])).
fof(f33550,plain,(
  ( ! [X356,X355] : (~sP5('T_0','T_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X355))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X355),s(bool,'T_0'))) | s(bool,X356) = s(bool,'const.min.@_1'(s(fun(bool,bool),X355))) | s(bool,'T_0') = s(bool,X356)) ) | $spl44),
  inference(superposition,[],[f16507,f1782])).
fof(f33549,plain,(
  ( ! [X354,X353] : (sP4(f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X353)))),'T_0','F_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X353),s(bool,'T_0'))) | s(bool,X354) = s(bool,'const.min.@_1'(s(fun(bool,bool),X353))) | s(bool,'T_0') = s(bool,X354)) ) | $spl44),
  inference(superposition,[],[f16494,f1782])).
fof(f33548,plain,(
  ( ! [X352,X351] : (~sP6('T_0','T_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X351))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X351),s(bool,'T_0'))) | s(bool,X352) = s(bool,'const.min.@_1'(s(fun(bool,bool),X351))) | s(bool,'T_0') = s(bool,X352)) ) | $spl44),
  inference(superposition,[],[f16483,f1782])).
fof(f33547,plain,(
  ( ! [X350,X349] : (sP6('F_0','T_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X349))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X349),s(bool,'T_0'))) | s(bool,X350) = s(bool,'const.min.@_1'(s(fun(bool,bool),X349))) | s(bool,'T_0') = s(bool,X350)) ) | $spl44),
  inference(superposition,[],[f16466,f1782])).
fof(f33546,plain,(
  ( ! [X347,X348] : (~sP6('T_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X347)))),'T_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X347),s(bool,'T_0'))) | s(bool,X348) = s(bool,'const.min.@_1'(s(fun(bool,bool),X347))) | s(bool,'T_0') = s(bool,X348)) ) | $spl44),
  inference(superposition,[],[f16455,f1782])).
fof(f33545,plain,(
  ( ! [X346,X345] : (sP6('F_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X345)))),'T_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X345),s(bool,'T_0'))) | s(bool,X346) = s(bool,'const.min.@_1'(s(fun(bool,bool),X345))) | s(bool,'T_0') = s(bool,X346)) ) | $spl44),
  inference(superposition,[],[f16416,f1782])).
fof(f33544,plain,(
  ( ! [X344,X343] : (s(bool,'T_0') != s(bool,f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X343))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X343),s(bool,'T_0'))) | s(bool,X344) = s(bool,'const.min.@_1'(s(fun(bool,bool),X343))) | s(bool,'T_0') = s(bool,X344)) ) | $spl44),
  inference(superposition,[],[f16322,f1782])).
fof(f33543,plain,(
  ( ! [X341,X342] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X341))))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X341),s(bool,'T_0'))) | s(bool,X342) = s(bool,'const.min.@_1'(s(fun(bool,bool),X341))) | s(bool,'T_0') = s(bool,X342)) ) | $spl44),
  inference(superposition,[],[f15725,f1782])).
fof(f33542,plain,(
  ( ! [X339,X340] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X339)))) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,happ(s(fun(bool,bool),X339),s(bool,'T_0'))))))) | s(bool,X340) = s(bool,'const.min.@_1'(s(fun(bool,bool),X339))) | s(bool,'T_0') = s(bool,X340)) ) | $spl44),
  inference(superposition,[],[f15724,f1782])).
fof(f33541,plain,(
  ( ! [X337,X338] : (sP1(f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X337)))),'T_0') | p(s(bool,happ(s(fun(bool,bool),X337),s(bool,'T_0')))) | s(bool,X338) = s(bool,'const.min.@_1'(s(fun(bool,bool),X337))) | s(bool,'T_0') = s(bool,X338)) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f15603,f1782])).
fof(f33539,plain,(
  ( ! [X333,X332,X334] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X332)))) | s(bool,X333) = s(bool,f(s(bool,happ(s(fun(bool,bool),X332),s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,X333) | s(bool,X334) = s(bool,'const.min.@_1'(s(fun(bool,bool),X332))) | s(bool,'T_0') = s(bool,X334)) ) | $spl44),
  inference(superposition,[],[f15601,f1782])).
fof(f33538,plain,(
  ( ! [X329,X331,X330] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X329)))) | p(s(bool,X330)) | s(bool,f(s(bool,X330))) = s(bool,happ(s(fun(bool,bool),X329),s(bool,'T_0'))) | s(bool,X331) = s(bool,'const.min.@_1'(s(fun(bool,bool),X329))) | s(bool,'T_0') = s(bool,X331)) ) | $spl44),
  inference(superposition,[],[f15600,f1782])).
fof(f33537,plain,(
  ( ! [X327,X326,X328] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X326)))) | p(s(bool,X327)) | s(bool,X327) = s(bool,f(s(bool,happ(s(fun(bool,bool),X326),s(bool,'T_0'))))) | s(bool,X328) = s(bool,'const.min.@_1'(s(fun(bool,bool),X326))) | s(bool,'T_0') = s(bool,X328)) ) | $spl44),
  inference(superposition,[],[f15600,f1782])).
fof(f33536,plain,(
  ( ! [X325,X324] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X324)))) | s(bool,'F_0') = s(bool,f(s(bool,happ(s(fun(bool,bool),X324),s(bool,'T_0'))))) | s(bool,X325) = s(bool,'const.min.@_1'(s(fun(bool,bool),X324))) | s(bool,'T_0') = s(bool,X325)) ) | $spl44),
  inference(superposition,[],[f15599,f1782])).
fof(f33535,plain,(
  ( ! [X323,X322] : (sP5('T_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X322)))),'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X322),s(bool,'T_0'))) | s(bool,X323) = s(bool,'const.min.@_1'(s(fun(bool,bool),X322))) | s(bool,'T_0') = s(bool,X323)) ) | $spl44),
  inference(superposition,[],[f14794,f1782])).
fof(f33534,plain,(
  ( ! [X321,X320] : (~sP3(f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X320)))),'F_0','F_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X320),s(bool,'T_0'))) | s(bool,X321) = s(bool,'const.min.@_1'(s(fun(bool,bool),X320))) | s(bool,'T_0') = s(bool,X321)) ) | $spl44),
  inference(superposition,[],[f14785,f1782])).
fof(f33533,plain,(
  ( ! [X318,X319] : (~sP3('F_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X318)))),'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X318),s(bool,'T_0'))) | s(bool,X319) = s(bool,'const.min.@_1'(s(fun(bool,bool),X318))) | s(bool,'T_0') = s(bool,X319)) ) | $spl44),
  inference(superposition,[],[f14767,f1782])).
fof(f33532,plain,(
  ( ! [X316,X317] : (sP6('T_0','F_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X316))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X316),s(bool,'T_0'))) | s(bool,X317) = s(bool,'const.min.@_1'(s(fun(bool,bool),X316))) | s(bool,'T_0') = s(bool,X317)) ) | $spl44),
  inference(superposition,[],[f14757,f1782])).
fof(f33531,plain,(
  ( ! [X315,X314] : (~sP6('F_0','F_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X314))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X314),s(bool,'T_0'))) | s(bool,X315) = s(bool,'const.min.@_1'(s(fun(bool,bool),X314))) | s(bool,'T_0') = s(bool,X315)) ) | $spl44),
  inference(superposition,[],[f14739,f1782])).
fof(f33530,plain,(
  ( ! [X313,X312] : (sP6('T_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X312)))),'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X312),s(bool,'T_0'))) | s(bool,X313) = s(bool,'const.min.@_1'(s(fun(bool,bool),X312))) | s(bool,'T_0') = s(bool,X313)) ) | $spl44),
  inference(superposition,[],[f14728,f1782])).
fof(f33529,plain,(
  ( ! [X310,X311] : (~sP6('F_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X310)))),'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X310),s(bool,'T_0'))) | s(bool,X311) = s(bool,'const.min.@_1'(s(fun(bool,bool),X310))) | s(bool,'T_0') = s(bool,X311)) ) | $spl44),
  inference(superposition,[],[f14709,f1782])).
fof(f33527,plain,(
  ( ! [X306,X307] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X306))) = s(bool,f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X306))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X306),s(bool,'T_0'))) | s(bool,X307) = s(bool,'const.min.@_1'(s(fun(bool,bool),X306))) | s(bool,'T_0') = s(bool,X307)) ) | $spl44),
  inference(superposition,[],[f13463,f1782])).
fof(f33525,plain,(
  ( ! [X302,X303] : (sP1(f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X302)))),'T_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X302),s(bool,'T_0'))) | s(bool,X303) = s(bool,'const.min.@_1'(s(fun(bool,bool),X302))) | s(bool,'T_0') = s(bool,X303)) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f13461,f1782])).
fof(f33522,plain,(
  ( ! [X292,X293,X291] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X291)))) | s(bool,f(s(bool,X292))) = s(bool,happ(s(fun(bool,bool),X291),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X292) | s(bool,X293) = s(bool,'const.min.@_1'(s(fun(bool,bool),X291))) | s(bool,'T_0') = s(bool,X293)) ) | $spl44),
  inference(superposition,[],[f9475,f1782])).
fof(f33520,plain,(
  ( ! [X288,X287] : (s(bool,'F_0') = s(bool,f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X287))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X287),s(bool,'T_0'))) | s(bool,X288) = s(bool,'const.min.@_1'(s(fun(bool,bool),X287))) | s(bool,'T_0') = s(bool,X288)) ) | $spl44),
  inference(superposition,[],[f5339,f1782])).
fof(f33473,plain,(
  ( ! [X156,X157] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X156)))) | sP1(happ(s(fun(bool,bool),X156),s(bool,'T_0')),'T_0') | s(bool,X157) = s(bool,'const.min.@_1'(s(fun(bool,bool),X156))) | s(bool,'T_0') = s(bool,X157)) ) | $spl10),
  inference(superposition,[],[f2067,f1782])).
fof(f33398,plain,(
  ( ! [X94,X93] : (s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X94))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X94))) = s(bool,happ(s(fun(bool,bool),X94),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,f(s(bool,f(s(bool,X93))))) | s(bool,'T_0') = s(bool,X93)) ) | $spl44),
  inference(superposition,[],[f1782,f15725])).
fof(f33083,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) | s(bool,'T_0') != s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) ) | $spl44),
  inference(condensation,[],[f33082])).
fof(f33082,plain,(
  ( ! [X926,X928,X927] : (s(bool,'T_0') != s(bool,happ(s(fun(X927,bool),X928),s(X927,'const.min.@_1'(s(fun(X927,bool),X928))))) | s(bool,'T_0') = s(bool,X926) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X927,bool),X928)))) ) | $spl44),
  inference(subsumption_resolution,[],[f32509,f16322])).
fof(f32509,plain,(
  ( ! [X926,X928,X927] : (s(bool,'T_0') != s(bool,happ(s(fun(X927,bool),X928),s(X927,'const.min.@_1'(s(fun(X927,bool),X928))))) | s(bool,'T_0') = s(bool,X926) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X927,bool),X928))) | s(bool,'T_0') = s(bool,f(s(bool,X926)))) ) | $spl44),
  inference(superposition,[],[f16322,f1520])).
fof(f32013,plain,(
  ( ! [X916,X915,X917] : (s(bool,X915) = s(bool,f(s(bool,'|dollar|exists_1'(s(fun(X916,bool),X917))))) | s(bool,'T_0') = s(bool,X915) | s(bool,'T_0') = s(bool,happ(s(fun(X916,bool),X917),s(X916,'const.min.@_1'(s(fun(X916,bool),X917)))))) ) | $spl44),
  inference(subsumption_resolution,[],[f31263,f16322])).
fof(f31263,plain,(
  ( ! [X916,X915,X917] : (s(bool,X915) = s(bool,f(s(bool,'|dollar|exists_1'(s(fun(X916,bool),X917))))) | s(bool,'T_0') = s(bool,X915) | s(bool,'T_0') = s(bool,happ(s(fun(X916,bool),X917),s(X916,'const.min.@_1'(s(fun(X916,bool),X917))))) | s(bool,'T_0') = s(bool,f(s(bool,X915)))) ) | $spl44),
  inference(superposition,[],[f17218,f1491])).
fof(f32012,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1))))) | s(bool,'T_0') != s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) ) | $spl44),
  inference(condensation,[],[f32011])).
fof(f32011,plain,(
  ( ! [X912,X914,X913] : (s(bool,'T_0') != s(bool,'|dollar|exists_1'(s(fun(X913,bool),X914))) | s(bool,'T_0') = s(bool,X912) | s(bool,'T_0') = s(bool,happ(s(fun(X913,bool),X914),s(X913,'const.min.@_1'(s(fun(X913,bool),X914)))))) ) | $spl44),
  inference(subsumption_resolution,[],[f31262,f16322])).
fof(f31262,plain,(
  ( ! [X912,X914,X913] : (s(bool,'T_0') != s(bool,'|dollar|exists_1'(s(fun(X913,bool),X914))) | s(bool,'T_0') = s(bool,X912) | s(bool,'T_0') = s(bool,happ(s(fun(X913,bool),X914),s(X913,'const.min.@_1'(s(fun(X913,bool),X914))))) | s(bool,'T_0') = s(bool,f(s(bool,X912)))) ) | $spl44),
  inference(superposition,[],[f16322,f1491])).
fof(f27601,plain,(
  ( ! [X951,X949,X952,X950,X953] : (sP1(f(s(bool,X949)),X950) | s(bool,X950) = s(bool,X951) | s(bool,'T_0') = s(bool,X951) | s(bool,X949) = s(bool,X952) | s(bool,X952) = s(bool,X953) | s(bool,'T_0') = s(bool,X953)) ) | $spl44),
  inference(subsumption_resolution,[],[f23111,f411])).
fof(f23111,plain,(
  ( ! [X951,X949,X952,X950,X953] : (sP1(f(s(bool,X949)),X950) | s(bool,X950) = s(bool,X951) | s(bool,'T_0') = s(bool,X951) | s(bool,X949) = s(bool,X952) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X952) = s(bool,X953) | s(bool,'T_0') = s(bool,X953)) ) | $spl44),
  inference(superposition,[],[f15639,f1507])).
fof(f27600,plain,(
  ( ! [X930,X932,X931,X933] : (s(bool,X931) = s(bool,f(s(bool,X930))) | s(bool,'T_0') = s(bool,X931) | s(bool,X930) = s(bool,X932) | s(bool,X932) = s(bool,X933) | s(bool,'T_0') = s(bool,X933)) ) | $spl44),
  inference(subsumption_resolution,[],[f23105,f411])).
fof(f23105,plain,(
  ( ! [X930,X932,X931,X933] : (s(bool,X931) = s(bool,f(s(bool,X930))) | s(bool,'T_0') = s(bool,X931) | s(bool,X930) = s(bool,X932) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X932) = s(bool,X933) | s(bool,'T_0') = s(bool,X933)) ) | $spl44),
  inference(superposition,[],[f14679,f1507])).
fof(f25808,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP1(f(s(bool,f(s(bool,X1)))),'T_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | ($spl10 | $spl44)),
  inference(condensation,[],[f25807])).
fof(f25807,plain,(
  ( ! [X553,X555,X556,X554] : (sP1(f(s(bool,f(s(bool,X554)))),'T_0') | s(bool,'T_0') = s(bool,X553) | s(bool,X554) = s(bool,X555) | s(bool,X555) = s(bool,X556) | s(bool,'T_0') = s(bool,X556)) ) | ($spl10 | $spl44)),
  inference(duplicate_literal_removal,[],[f22992])).
fof(f22992,plain,(
  ( ! [X553,X555,X556,X554] : (sP1(f(s(bool,f(s(bool,X554)))),'T_0') | s(bool,'T_0') = s(bool,X553) | s(bool,X554) = s(bool,X555) | s(bool,'T_0') = s(bool,X553) | s(bool,X555) = s(bool,X556) | s(bool,'T_0') = s(bool,X556)) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f17230,f1507])).
fof(f25812,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,f(s(bool,f(s(bool,X1))))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25811])).
fof(f25811,plain,(
  ( ! [X546,X545,X547,X548] : (s(bool,X546) = s(bool,f(s(bool,f(s(bool,X546))))) | s(bool,'T_0') = s(bool,X545) | s(bool,X546) = s(bool,X547) | s(bool,X547) = s(bool,X548) | s(bool,'T_0') = s(bool,X548)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22990])).
fof(f22990,plain,(
  ( ! [X546,X545,X547,X548] : (s(bool,X546) = s(bool,f(s(bool,f(s(bool,X546))))) | s(bool,'T_0') = s(bool,X545) | s(bool,X546) = s(bool,X547) | s(bool,'T_0') = s(bool,X545) | s(bool,X547) = s(bool,X548) | s(bool,'T_0') = s(bool,X548)) ) | $spl44),
  inference(superposition,[],[f17218,f1507])).
fof(f25814,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP4('T_0',f(s(bool,X1)),'F_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25813])).
fof(f25813,plain,(
  ( ! [X509,X511,X512,X510] : (sP4('T_0',f(s(bool,X510)),'F_0') | s(bool,'T_0') = s(bool,X509) | s(bool,X510) = s(bool,X511) | s(bool,X511) = s(bool,X512) | s(bool,'T_0') = s(bool,X512)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22982])).
fof(f22982,plain,(
  ( ! [X509,X511,X512,X510] : (sP4('T_0',f(s(bool,X510)),'F_0') | s(bool,'T_0') = s(bool,X509) | s(bool,X510) = s(bool,X511) | s(bool,'T_0') = s(bool,X509) | s(bool,X511) = s(bool,X512) | s(bool,'T_0') = s(bool,X512)) ) | $spl44),
  inference(superposition,[],[f16516,f1507])).
fof(f25816,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP5('T_0','T_0',f(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25815])).
fof(f25815,plain,(
  ( ! [X505,X507,X508,X506] : (~sP5('T_0','T_0',f(s(bool,X506))) | s(bool,'T_0') = s(bool,X505) | s(bool,X506) = s(bool,X507) | s(bool,X507) = s(bool,X508) | s(bool,'T_0') = s(bool,X508)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22981])).
fof(f22981,plain,(
  ( ! [X505,X507,X508,X506] : (~sP5('T_0','T_0',f(s(bool,X506))) | s(bool,'T_0') = s(bool,X505) | s(bool,X506) = s(bool,X507) | s(bool,'T_0') = s(bool,X505) | s(bool,X507) = s(bool,X508) | s(bool,'T_0') = s(bool,X508)) ) | $spl44),
  inference(superposition,[],[f16507,f1507])).
fof(f25818,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP4(f(s(bool,X1)),'T_0','F_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25817])).
fof(f25817,plain,(
  ( ! [X502,X504,X501,X503] : (sP4(f(s(bool,X502)),'T_0','F_0') | s(bool,'T_0') = s(bool,X501) | s(bool,X502) = s(bool,X503) | s(bool,X503) = s(bool,X504) | s(bool,'T_0') = s(bool,X504)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22980])).
fof(f22980,plain,(
  ( ! [X502,X504,X501,X503] : (sP4(f(s(bool,X502)),'T_0','F_0') | s(bool,'T_0') = s(bool,X501) | s(bool,X502) = s(bool,X503) | s(bool,'T_0') = s(bool,X501) | s(bool,X503) = s(bool,X504) | s(bool,'T_0') = s(bool,X504)) ) | $spl44),
  inference(superposition,[],[f16494,f1507])).
fof(f25820,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP6('T_0','T_0',f(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25819])).
fof(f25819,plain,(
  ( ! [X499,X500,X498,X497] : (~sP6('T_0','T_0',f(s(bool,X498))) | s(bool,'T_0') = s(bool,X497) | s(bool,X498) = s(bool,X499) | s(bool,X499) = s(bool,X500) | s(bool,'T_0') = s(bool,X500)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22979])).
fof(f22979,plain,(
  ( ! [X499,X500,X498,X497] : (~sP6('T_0','T_0',f(s(bool,X498))) | s(bool,'T_0') = s(bool,X497) | s(bool,X498) = s(bool,X499) | s(bool,'T_0') = s(bool,X497) | s(bool,X499) = s(bool,X500) | s(bool,'T_0') = s(bool,X500)) ) | $spl44),
  inference(superposition,[],[f16483,f1507])).
fof(f25822,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP6('F_0','T_0',f(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25821])).
fof(f25821,plain,(
  ( ! [X494,X496,X493,X495] : (sP6('F_0','T_0',f(s(bool,X494))) | s(bool,'T_0') = s(bool,X493) | s(bool,X494) = s(bool,X495) | s(bool,X495) = s(bool,X496) | s(bool,'T_0') = s(bool,X496)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22978])).
fof(f22978,plain,(
  ( ! [X494,X496,X493,X495] : (sP6('F_0','T_0',f(s(bool,X494))) | s(bool,'T_0') = s(bool,X493) | s(bool,X494) = s(bool,X495) | s(bool,'T_0') = s(bool,X493) | s(bool,X495) = s(bool,X496) | s(bool,'T_0') = s(bool,X496)) ) | $spl44),
  inference(superposition,[],[f16466,f1507])).
fof(f25824,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP6('T_0',f(s(bool,X1)),'T_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25823])).
fof(f25823,plain,(
  ( ! [X492,X490,X489,X491] : (~sP6('T_0',f(s(bool,X490)),'T_0') | s(bool,'T_0') = s(bool,X489) | s(bool,X490) = s(bool,X491) | s(bool,X491) = s(bool,X492) | s(bool,'T_0') = s(bool,X492)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22977])).
fof(f22977,plain,(
  ( ! [X492,X490,X489,X491] : (~sP6('T_0',f(s(bool,X490)),'T_0') | s(bool,'T_0') = s(bool,X489) | s(bool,X490) = s(bool,X491) | s(bool,'T_0') = s(bool,X489) | s(bool,X491) = s(bool,X492) | s(bool,'T_0') = s(bool,X492)) ) | $spl44),
  inference(superposition,[],[f16455,f1507])).
fof(f25826,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP6('F_0',f(s(bool,X1)),'T_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25825])).
fof(f25825,plain,(
  ( ! [X486,X488,X485,X487] : (sP6('F_0',f(s(bool,X486)),'T_0') | s(bool,'T_0') = s(bool,X485) | s(bool,X486) = s(bool,X487) | s(bool,X487) = s(bool,X488) | s(bool,'T_0') = s(bool,X488)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22976])).
fof(f22976,plain,(
  ( ! [X486,X488,X485,X487] : (sP6('F_0',f(s(bool,X486)),'T_0') | s(bool,'T_0') = s(bool,X485) | s(bool,X486) = s(bool,X487) | s(bool,'T_0') = s(bool,X485) | s(bool,X487) = s(bool,X488) | s(bool,'T_0') = s(bool,X488)) ) | $spl44),
  inference(superposition,[],[f16416,f1507])).
fof(f25828,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,f(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25827])).
fof(f25827,plain,(
  ( ! [X484,X482,X481,X483] : (s(bool,'T_0') != s(bool,f(s(bool,X482))) | s(bool,'T_0') = s(bool,X481) | s(bool,X482) = s(bool,X483) | s(bool,X483) = s(bool,X484) | s(bool,'T_0') = s(bool,X484)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22975])).
fof(f22975,plain,(
  ( ! [X484,X482,X481,X483] : (s(bool,'T_0') != s(bool,f(s(bool,X482))) | s(bool,'T_0') = s(bool,X481) | s(bool,X482) = s(bool,X483) | s(bool,'T_0') = s(bool,X481) | s(bool,X483) = s(bool,X484) | s(bool,'T_0') = s(bool,X484)) ) | $spl44),
  inference(superposition,[],[f16322,f1507])).
fof(f25830,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X1))))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25829])).
fof(f25829,plain,(
  ( ! [X478,X480,X477,X479] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X478))))) | s(bool,'T_0') = s(bool,X477) | s(bool,X478) = s(bool,X479) | s(bool,X479) = s(bool,X480) | s(bool,'T_0') = s(bool,X480)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22974])).
fof(f22974,plain,(
  ( ! [X478,X480,X477,X479] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X478))))) | s(bool,'T_0') = s(bool,X477) | s(bool,X478) = s(bool,X479) | s(bool,'T_0') = s(bool,X477) | s(bool,X479) = s(bool,X480) | s(bool,'T_0') = s(bool,X480)) ) | $spl44),
  inference(superposition,[],[f15725,f1507])).
fof(f25832,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP5('T_0',f(s(bool,X1)),'F_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25831])).
fof(f25831,plain,(
  ( ! [X445,X443,X444,X442] : (sP5('T_0',f(s(bool,X443)),'F_0') | s(bool,'T_0') = s(bool,X442) | s(bool,X443) = s(bool,X444) | s(bool,X444) = s(bool,X445) | s(bool,'T_0') = s(bool,X445)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22966])).
fof(f22966,plain,(
  ( ! [X445,X443,X444,X442] : (sP5('T_0',f(s(bool,X443)),'F_0') | s(bool,'T_0') = s(bool,X442) | s(bool,X443) = s(bool,X444) | s(bool,'T_0') = s(bool,X442) | s(bool,X444) = s(bool,X445) | s(bool,'T_0') = s(bool,X445)) ) | $spl44),
  inference(superposition,[],[f14794,f1507])).
fof(f25834,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP3(f(s(bool,X1)),'F_0','F_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25833])).
fof(f25833,plain,(
  ( ! [X441,X438,X440,X439] : (~sP3(f(s(bool,X439)),'F_0','F_0') | s(bool,'T_0') = s(bool,X438) | s(bool,X439) = s(bool,X440) | s(bool,X440) = s(bool,X441) | s(bool,'T_0') = s(bool,X441)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22965])).
fof(f22965,plain,(
  ( ! [X441,X438,X440,X439] : (~sP3(f(s(bool,X439)),'F_0','F_0') | s(bool,'T_0') = s(bool,X438) | s(bool,X439) = s(bool,X440) | s(bool,'T_0') = s(bool,X438) | s(bool,X440) = s(bool,X441) | s(bool,'T_0') = s(bool,X441)) ) | $spl44),
  inference(superposition,[],[f14785,f1507])).
fof(f25836,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP3('F_0',f(s(bool,X1)),'F_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25835])).
fof(f25835,plain,(
  ( ! [X436,X434,X437,X435] : (~sP3('F_0',f(s(bool,X435)),'F_0') | s(bool,'T_0') = s(bool,X434) | s(bool,X435) = s(bool,X436) | s(bool,X436) = s(bool,X437) | s(bool,'T_0') = s(bool,X437)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22964])).
fof(f22964,plain,(
  ( ! [X436,X434,X437,X435] : (~sP3('F_0',f(s(bool,X435)),'F_0') | s(bool,'T_0') = s(bool,X434) | s(bool,X435) = s(bool,X436) | s(bool,'T_0') = s(bool,X434) | s(bool,X436) = s(bool,X437) | s(bool,'T_0') = s(bool,X437)) ) | $spl44),
  inference(superposition,[],[f14767,f1507])).
fof(f25838,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP6('T_0','F_0',f(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25837])).
fof(f25837,plain,(
  ( ! [X430,X432,X431,X433] : (sP6('T_0','F_0',f(s(bool,X431))) | s(bool,'T_0') = s(bool,X430) | s(bool,X431) = s(bool,X432) | s(bool,X432) = s(bool,X433) | s(bool,'T_0') = s(bool,X433)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22963])).
fof(f22963,plain,(
  ( ! [X430,X432,X431,X433] : (sP6('T_0','F_0',f(s(bool,X431))) | s(bool,'T_0') = s(bool,X430) | s(bool,X431) = s(bool,X432) | s(bool,'T_0') = s(bool,X430) | s(bool,X432) = s(bool,X433) | s(bool,'T_0') = s(bool,X433)) ) | $spl44),
  inference(superposition,[],[f14757,f1507])).
fof(f25840,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP6('F_0','F_0',f(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25839])).
fof(f25839,plain,(
  ( ! [X428,X426,X429,X427] : (~sP6('F_0','F_0',f(s(bool,X427))) | s(bool,'T_0') = s(bool,X426) | s(bool,X427) = s(bool,X428) | s(bool,X428) = s(bool,X429) | s(bool,'T_0') = s(bool,X429)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22962])).
fof(f22962,plain,(
  ( ! [X428,X426,X429,X427] : (~sP6('F_0','F_0',f(s(bool,X427))) | s(bool,'T_0') = s(bool,X426) | s(bool,X427) = s(bool,X428) | s(bool,'T_0') = s(bool,X426) | s(bool,X428) = s(bool,X429) | s(bool,'T_0') = s(bool,X429)) ) | $spl44),
  inference(superposition,[],[f14739,f1507])).
fof(f25842,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP6('T_0',f(s(bool,X1)),'F_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25841])).
fof(f25841,plain,(
  ( ! [X422,X424,X423,X425] : (sP6('T_0',f(s(bool,X423)),'F_0') | s(bool,'T_0') = s(bool,X422) | s(bool,X423) = s(bool,X424) | s(bool,X424) = s(bool,X425) | s(bool,'T_0') = s(bool,X425)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22961])).
fof(f22961,plain,(
  ( ! [X422,X424,X423,X425] : (sP6('T_0',f(s(bool,X423)),'F_0') | s(bool,'T_0') = s(bool,X422) | s(bool,X423) = s(bool,X424) | s(bool,'T_0') = s(bool,X422) | s(bool,X424) = s(bool,X425) | s(bool,'T_0') = s(bool,X425)) ) | $spl44),
  inference(superposition,[],[f14728,f1507])).
fof(f25844,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP6('F_0',f(s(bool,X1)),'F_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25843])).
fof(f25843,plain,(
  ( ! [X420,X418,X421,X419] : (~sP6('F_0',f(s(bool,X419)),'F_0') | s(bool,'T_0') = s(bool,X418) | s(bool,X419) = s(bool,X420) | s(bool,X420) = s(bool,X421) | s(bool,'T_0') = s(bool,X421)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22960])).
fof(f22960,plain,(
  ( ! [X420,X418,X421,X419] : (~sP6('F_0',f(s(bool,X419)),'F_0') | s(bool,'T_0') = s(bool,X418) | s(bool,X419) = s(bool,X420) | s(bool,'T_0') = s(bool,X418) | s(bool,X420) = s(bool,X421) | s(bool,'T_0') = s(bool,X421)) ) | $spl44),
  inference(superposition,[],[f14709,f1507])).
fof(f25848,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,f(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25847])).
fof(f25847,plain,(
  ( ! [X412,X410,X413,X411] : (s(bool,X411) = s(bool,f(s(bool,X411))) | s(bool,'T_0') = s(bool,X410) | s(bool,X411) = s(bool,X412) | s(bool,X412) = s(bool,X413) | s(bool,'T_0') = s(bool,X413)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22958])).
fof(f22958,plain,(
  ( ! [X412,X410,X413,X411] : (s(bool,X411) = s(bool,f(s(bool,X411))) | s(bool,'T_0') = s(bool,X410) | s(bool,X411) = s(bool,X412) | s(bool,'T_0') = s(bool,X410) | s(bool,X412) = s(bool,X413) | s(bool,'T_0') = s(bool,X413)) ) | $spl44),
  inference(superposition,[],[f13463,f1507])).
fof(f25852,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP1(f(s(bool,X1)),'T_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | ($spl10 | $spl44)),
  inference(condensation,[],[f25851])).
fof(f25851,plain,(
  ( ! [X405,X403,X404,X402] : (sP1(f(s(bool,X403)),'T_0') | s(bool,'T_0') = s(bool,X402) | s(bool,X403) = s(bool,X404) | s(bool,X404) = s(bool,X405) | s(bool,'T_0') = s(bool,X405)) ) | ($spl10 | $spl44)),
  inference(duplicate_literal_removal,[],[f22956])).
fof(f22956,plain,(
  ( ! [X405,X403,X404,X402] : (sP1(f(s(bool,X403)),'T_0') | s(bool,'T_0') = s(bool,X402) | s(bool,X403) = s(bool,X404) | s(bool,'T_0') = s(bool,X402) | s(bool,X404) = s(bool,X405) | s(bool,'T_0') = s(bool,X405)) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f13461,f1507])).
fof(f25860,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,f(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f25859])).
fof(f25859,plain,(
  ( ! [X377,X379,X380,X378] : (s(bool,'F_0') = s(bool,f(s(bool,X378))) | s(bool,'T_0') = s(bool,X377) | s(bool,X378) = s(bool,X379) | s(bool,X379) = s(bool,X380) | s(bool,'T_0') = s(bool,X380)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f22951])).
fof(f22951,plain,(
  ( ! [X377,X379,X380,X378] : (s(bool,'F_0') = s(bool,f(s(bool,X378))) | s(bool,'T_0') = s(bool,X377) | s(bool,X378) = s(bool,X379) | s(bool,'T_0') = s(bool,X377) | s(bool,X379) = s(bool,X380) | s(bool,'T_0') = s(bool,X380)) ) | $spl44),
  inference(superposition,[],[f5339,f1507])).
fof(f27503,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X0)) | s(bool,f(s(bool,X0))) = s(bool,f(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl44),
  inference(condensation,[],[f27502])).
fof(f27502,plain,(
  ( ! [X532,X534,X533,X535,X531] : (p(s(bool,X532)) | p(s(bool,X533)) | s(bool,f(s(bool,X531))) = s(bool,f(s(bool,X533))) | s(bool,X531) = s(bool,X534) | s(bool,X534) = s(bool,X535) | s(bool,'T_0') = s(bool,X535)) ) | $spl44),
  inference(subsumption_resolution,[],[f22672,f232])).
fof(f22672,plain,(
  ( ! [X532,X534,X533,X535,X531] : (p(s(bool,X532)) | p(s(bool,X533)) | s(bool,f(s(bool,X531))) = s(bool,f(s(bool,X533))) | s(bool,X531) = s(bool,X534) | s(bool,'T_0') = s(bool,X532) | s(bool,X534) = s(bool,X535) | s(bool,'T_0') = s(bool,X535)) ) | $spl44),
  inference(superposition,[],[f16960,f1507])).
fof(f27501,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X0)) | s(bool,X1) = s(bool,f(s(bool,f(s(bool,X0))))) | s(bool,X1) = s(bool,X2) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl44),
  inference(condensation,[],[f27500])).
fof(f27500,plain,(
  ( ! [X528,X530,X526,X529,X527] : (p(s(bool,X527)) | p(s(bool,X528)) | s(bool,X526) = s(bool,f(s(bool,f(s(bool,X528))))) | s(bool,X526) = s(bool,X529) | s(bool,X529) = s(bool,X530) | s(bool,'T_0') = s(bool,X530)) ) | $spl44),
  inference(subsumption_resolution,[],[f22671,f232])).
fof(f22671,plain,(
  ( ! [X528,X530,X526,X529,X527] : (p(s(bool,X527)) | p(s(bool,X528)) | s(bool,X526) = s(bool,f(s(bool,f(s(bool,X528))))) | s(bool,X526) = s(bool,X529) | s(bool,'T_0') = s(bool,X527) | s(bool,X529) = s(bool,X530) | s(bool,'T_0') = s(bool,X530)) ) | $spl44),
  inference(superposition,[],[f16941,f1507])).
fof(f27499,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X0)) | s(bool,X0) = s(bool,f(s(bool,f(s(bool,X1))))) | s(bool,X1) = s(bool,X2) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl44),
  inference(condensation,[],[f27498])).
fof(f27498,plain,(
  ( ! [X524,X522,X525,X521,X523] : (p(s(bool,X522)) | p(s(bool,X523)) | s(bool,X523) = s(bool,f(s(bool,f(s(bool,X521))))) | s(bool,X521) = s(bool,X524) | s(bool,X524) = s(bool,X525) | s(bool,'T_0') = s(bool,X525)) ) | $spl44),
  inference(subsumption_resolution,[],[f22670,f232])).
fof(f22670,plain,(
  ( ! [X524,X522,X525,X521,X523] : (p(s(bool,X522)) | p(s(bool,X523)) | s(bool,X523) = s(bool,f(s(bool,f(s(bool,X521))))) | s(bool,X521) = s(bool,X524) | s(bool,'T_0') = s(bool,X522) | s(bool,X524) = s(bool,X525) | s(bool,'T_0') = s(bool,X525)) ) | $spl44),
  inference(superposition,[],[f16941,f1507])).
fof(f27489,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X0)) | s(bool,X1) = s(bool,f(s(bool,X0))) | s(bool,X1) = s(bool,X2) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl44),
  inference(condensation,[],[f27488])).
fof(f27488,plain,(
  ( ! [X455,X457,X459,X456,X458] : (p(s(bool,X456)) | p(s(bool,X457)) | s(bool,X455) = s(bool,f(s(bool,X457))) | s(bool,X455) = s(bool,X458) | s(bool,X458) = s(bool,X459) | s(bool,'T_0') = s(bool,X459)) ) | $spl44),
  inference(subsumption_resolution,[],[f22654,f232])).
fof(f22654,plain,(
  ( ! [X455,X457,X459,X456,X458] : (p(s(bool,X456)) | p(s(bool,X457)) | s(bool,X455) = s(bool,f(s(bool,X457))) | s(bool,X455) = s(bool,X458) | s(bool,'T_0') = s(bool,X456) | s(bool,X458) = s(bool,X459) | s(bool,'T_0') = s(bool,X459)) ) | $spl44),
  inference(superposition,[],[f15600,f1507])).
fof(f27487,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X0)) | s(bool,X0) = s(bool,f(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl44),
  inference(condensation,[],[f27486])).
fof(f27486,plain,(
  ( ! [X453,X451,X452,X454,X450] : (p(s(bool,X451)) | p(s(bool,X452)) | s(bool,X452) = s(bool,f(s(bool,X450))) | s(bool,X450) = s(bool,X453) | s(bool,X453) = s(bool,X454) | s(bool,'T_0') = s(bool,X454)) ) | $spl44),
  inference(subsumption_resolution,[],[f22653,f232])).
fof(f22653,plain,(
  ( ! [X453,X451,X452,X454,X450] : (p(s(bool,X451)) | p(s(bool,X452)) | s(bool,X452) = s(bool,f(s(bool,X450))) | s(bool,X450) = s(bool,X453) | s(bool,'T_0') = s(bool,X451) | s(bool,X453) = s(bool,X454) | s(bool,'T_0') = s(bool,X454)) ) | $spl44),
  inference(superposition,[],[f15600,f1507])).
fof(f26778,plain,(
  ( ! [X94,X97,X95,X96] : (s(bool,'T_0') = s(bool,X94) | s(bool,X95) = s(bool,X96) | s(bool,X96) = s(bool,f(s(bool,f(s(bool,X94))))) | s(bool,X95) = s(bool,X97) | s(bool,'T_0') = s(bool,X97)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f21819])).
fof(f21819,plain,(
  ( ! [X94,X97,X95,X96] : (s(bool,'T_0') = s(bool,X94) | s(bool,X95) = s(bool,X96) | s(bool,X96) = s(bool,f(s(bool,f(s(bool,X94))))) | s(bool,X95) = s(bool,X97) | s(bool,'T_0') = s(bool,X97) | s(bool,'T_0') = s(bool,X94)) ) | $spl44),
  inference(superposition,[],[f1507,f17218])).
fof(f26781,plain,(
  ( ! [X78,X76,X79,X77] : (s(bool,'T_0') = s(bool,X76) | s(bool,X77) = s(bool,X78) | s(bool,X78) = s(bool,f(s(bool,X76))) | s(bool,X77) = s(bool,X79) | s(bool,'T_0') = s(bool,X79)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f21814])).
fof(f21814,plain,(
  ( ! [X78,X76,X79,X77] : (s(bool,'T_0') = s(bool,X76) | s(bool,X77) = s(bool,X78) | s(bool,X78) = s(bool,f(s(bool,X76))) | s(bool,X77) = s(bool,X79) | s(bool,'T_0') = s(bool,X79) | s(bool,'T_0') = s(bool,X76)) ) | $spl44),
  inference(superposition,[],[f1507,f13463])).
fof(f26855,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,f(s(bool,'F_0'))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl44),
  inference(condensation,[],[f26854])).
fof(f26854,plain,(
  ( ! [X87,X85,X86,X84] : (s(bool,X85) = s(bool,f(s(bool,'F_0'))) | s(bool,X85) = s(bool,X86) | s(bool,'T_0') = s(bool,X84) | s(bool,X86) = s(bool,X87) | s(bool,'T_0') = s(bool,X87)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f21766])).
fof(f21766,plain,(
  ( ! [X87,X85,X86,X84] : (s(bool,X85) = s(bool,f(s(bool,'F_0'))) | s(bool,X85) = s(bool,X86) | s(bool,'T_0') = s(bool,X84) | s(bool,X86) = s(bool,X87) | s(bool,'T_0') = s(bool,X87) | s(bool,'T_0') = s(bool,X84)) ) | $spl44),
  inference(superposition,[],[f1507,f14679])).
fof(f18543,plain,(
  ( ! [X35,X36] : (p(s(bool,X36)) | s(bool,f(s(bool,X36))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X35))))))) | s(bool,'T_0') = s(bool,X35)) ) | $spl44),
  inference(subsumption_resolution,[],[f18502,f383])).
fof(f18502,plain,(
  ( ! [X35,X36] : (p(s(bool,'F_0')) | p(s(bool,X36)) | s(bool,f(s(bool,X36))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X35))))))) | s(bool,'T_0') = s(bool,X35)) ) | $spl44),
  inference(superposition,[],[f16960,f15725])).
fof(f18542,plain,(
  ( ! [X33,X34] : (p(s(bool,X33)) | p(s(bool,X34)) | s(bool,f(s(bool,X34))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X33)))))))) ) | $spl44),
  inference(subsumption_resolution,[],[f18501,f232])).
fof(f18501,plain,(
  ( ! [X33,X34] : (p(s(bool,X33)) | p(s(bool,X34)) | s(bool,f(s(bool,X34))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X33))))))) | s(bool,'T_0') = s(bool,X33)) ) | $spl44),
  inference(superposition,[],[f16960,f17218])).
fof(f18436,plain,(
  ( ! [X20] : (s(bool,f(s(bool,f(s(bool,X20))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X20))))))))) | s(bool,'T_0') = s(bool,X20)) ) | $spl44),
  inference(subsumption_resolution,[],[f18415,f383])).
fof(f18415,plain,(
  ( ! [X20] : (p(s(bool,'F_0')) | s(bool,f(s(bool,f(s(bool,X20))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X20))))))))) | s(bool,'T_0') = s(bool,X20)) ) | $spl44),
  inference(superposition,[],[f18313,f15725])).
fof(f18435,plain,(
  ( ! [X19] : (p(s(bool,X19)) | s(bool,f(s(bool,f(s(bool,X19))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X19)))))))))) ) | $spl44),
  inference(subsumption_resolution,[],[f18414,f232])).
fof(f18414,plain,(
  ( ! [X19] : (p(s(bool,X19)) | s(bool,f(s(bool,f(s(bool,X19))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X19))))))))) | s(bool,'T_0') = s(bool,X19)) ) | $spl44),
  inference(superposition,[],[f18313,f17218])).
fof(f18434,plain,(
  ( ! [X18] : (s(bool,f(s(bool,X18))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X18))))))) | s(bool,'T_0') = s(bool,X18)) ) | $spl44),
  inference(subsumption_resolution,[],[f18413,f383])).
fof(f18413,plain,(
  ( ! [X18] : (p(s(bool,'F_0')) | s(bool,f(s(bool,X18))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X18))))))) | s(bool,'T_0') = s(bool,X18)) ) | $spl44),
  inference(superposition,[],[f18313,f5339])).
fof(f18433,plain,(
  ( ! [X17] : (p(s(bool,X17)) | s(bool,f(s(bool,X17))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X17)))))))) ) | $spl44),
  inference(subsumption_resolution,[],[f18412,f232])).
fof(f18412,plain,(
  ( ! [X17] : (p(s(bool,X17)) | s(bool,f(s(bool,X17))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X17))))))) | s(bool,'T_0') = s(bool,X17)) ) | $spl44),
  inference(superposition,[],[f18313,f13463])).
fof(f18392,plain,(
  ( ! [X35,X36] : (p(s(bool,X36)) | s(bool,f(s(bool,f(s(bool,X35))))) = s(bool,f(s(bool,f(s(bool,X36))))) | s(bool,'T_0') = s(bool,X35)) ) | $spl44),
  inference(subsumption_resolution,[],[f18351,f383])).
fof(f18351,plain,(
  ( ! [X35,X36] : (p(s(bool,'F_0')) | p(s(bool,X36)) | s(bool,f(s(bool,f(s(bool,X35))))) = s(bool,f(s(bool,f(s(bool,X36))))) | s(bool,'T_0') = s(bool,X35)) ) | $spl44),
  inference(superposition,[],[f16941,f15725])).
fof(f18391,plain,(
  ( ! [X33,X34] : (p(s(bool,X33)) | p(s(bool,X34)) | s(bool,f(s(bool,f(s(bool,X33))))) = s(bool,f(s(bool,f(s(bool,X34)))))) ) | $spl44),
  inference(subsumption_resolution,[],[f18350,f232])).
fof(f18350,plain,(
  ( ! [X33,X34] : (p(s(bool,X33)) | p(s(bool,X34)) | s(bool,f(s(bool,f(s(bool,X33))))) = s(bool,f(s(bool,f(s(bool,X34))))) | s(bool,'T_0') = s(bool,X33)) ) | $spl44),
  inference(superposition,[],[f16941,f17218])).
fof(f18373,plain,(
  ( ! [X35,X36] : (p(s(bool,X36)) | s(bool,X36) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X35))))))))) | s(bool,'T_0') = s(bool,X35)) ) | $spl44),
  inference(subsumption_resolution,[],[f18329,f383])).
fof(f18329,plain,(
  ( ! [X35,X36] : (p(s(bool,'F_0')) | p(s(bool,X36)) | s(bool,X36) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X35))))))))) | s(bool,'T_0') = s(bool,X35)) ) | $spl44),
  inference(superposition,[],[f16941,f15725])).
fof(f18372,plain,(
  ( ! [X33,X34] : (p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X34) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X33)))))))))) ) | $spl44),
  inference(subsumption_resolution,[],[f18328,f232])).
fof(f18328,plain,(
  ( ! [X33,X34] : (p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X34) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X33))))))))) | s(bool,'T_0') = s(bool,X33)) ) | $spl44),
  inference(superposition,[],[f16941,f17218])).
fof(f18230,plain,(
  ( ! [X35,X36] : (s(bool,X36) = s(bool,f(s(bool,f(s(bool,f(s(bool,X35))))))) | s(bool,'T_0') = s(bool,X36) | s(bool,'T_0') = s(bool,X35)) ) | $spl44),
  inference(subsumption_resolution,[],[f18215,f383])).
fof(f18215,plain,(
  ( ! [X35,X36] : (p(s(bool,'F_0')) | s(bool,X36) = s(bool,f(s(bool,f(s(bool,f(s(bool,X35))))))) | s(bool,'T_0') = s(bool,X36) | s(bool,'T_0') = s(bool,X35)) ) | $spl44),
  inference(superposition,[],[f15601,f15725])).
fof(f18229,plain,(
  ( ! [X33,X34] : (p(s(bool,X33)) | s(bool,X34) = s(bool,f(s(bool,f(s(bool,f(s(bool,X33))))))) | s(bool,'T_0') = s(bool,X34)) ) | $spl44),
  inference(subsumption_resolution,[],[f18214,f232])).
fof(f18214,plain,(
  ( ! [X33,X34] : (p(s(bool,X33)) | s(bool,X34) = s(bool,f(s(bool,f(s(bool,f(s(bool,X33))))))) | s(bool,'T_0') = s(bool,X34) | s(bool,'T_0') = s(bool,X33)) ) | $spl44),
  inference(superposition,[],[f15601,f17218])).
fof(f18190,plain,(
  ( ! [X35,X36] : (s(bool,f(s(bool,X36))) = s(bool,f(s(bool,f(s(bool,X35))))) | s(bool,'T_0') = s(bool,X36) | s(bool,'T_0') = s(bool,X35)) ) | $spl44),
  inference(subsumption_resolution,[],[f18174,f383])).
fof(f18174,plain,(
  ( ! [X35,X36] : (p(s(bool,'F_0')) | s(bool,f(s(bool,X36))) = s(bool,f(s(bool,f(s(bool,X35))))) | s(bool,'T_0') = s(bool,X36) | s(bool,'T_0') = s(bool,X35)) ) | $spl44),
  inference(superposition,[],[f9475,f15725])).
fof(f18189,plain,(
  ( ! [X33,X34] : (p(s(bool,X33)) | s(bool,f(s(bool,X34))) = s(bool,f(s(bool,f(s(bool,X33))))) | s(bool,'T_0') = s(bool,X34)) ) | $spl44),
  inference(subsumption_resolution,[],[f18173,f232])).
fof(f18173,plain,(
  ( ! [X33,X34] : (p(s(bool,X33)) | s(bool,f(s(bool,X34))) = s(bool,f(s(bool,f(s(bool,X33))))) | s(bool,'T_0') = s(bool,X34) | s(bool,'T_0') = s(bool,X33)) ) | $spl44),
  inference(superposition,[],[f9475,f17218])).
fof(f18151,plain,(
  ( ! [X52,X50,X51] : (s(bool,X51) != s(bool,f(s(bool,f(s(bool,X50))))) | s(bool,X51) = s(bool,X52) | s(bool,'T_0') = s(bool,X52) | s(bool,'T_0') = s(bool,X50)) ) | $spl44),
  inference(subsumption_resolution,[],[f18127,f383])).
fof(f18127,plain,(
  ( ! [X52,X50,X51] : (p(s(bool,'F_0')) | s(bool,X51) != s(bool,f(s(bool,f(s(bool,X50))))) | s(bool,X51) = s(bool,X52) | s(bool,'T_0') = s(bool,X52) | s(bool,'T_0') = s(bool,X50)) ) | $spl44),
  inference(superposition,[],[f1693,f15725])).
fof(f18150,plain,(
  ( ! [X47,X48,X49] : (p(s(bool,X47)) | s(bool,X48) != s(bool,f(s(bool,f(s(bool,X47))))) | s(bool,X48) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) ) | $spl44),
  inference(subsumption_resolution,[],[f18126,f232])).
fof(f18126,plain,(
  ( ! [X47,X48,X49] : (p(s(bool,X47)) | s(bool,X48) != s(bool,f(s(bool,f(s(bool,X47))))) | s(bool,X48) = s(bool,X49) | s(bool,'T_0') = s(bool,X49) | s(bool,'T_0') = s(bool,X47)) ) | $spl44),
  inference(superposition,[],[f1693,f17218])).
fof(f18149,plain,(
  ( ! [X45,X46,X44] : (s(bool,X45) != s(bool,f(s(bool,X44))) | s(bool,X45) = s(bool,X46) | s(bool,'T_0') = s(bool,X46) | s(bool,'T_0') = s(bool,X44)) ) | $spl44),
  inference(subsumption_resolution,[],[f18125,f383])).
fof(f18125,plain,(
  ( ! [X45,X46,X44] : (p(s(bool,'F_0')) | s(bool,X45) != s(bool,f(s(bool,X44))) | s(bool,X45) = s(bool,X46) | s(bool,'T_0') = s(bool,X46) | s(bool,'T_0') = s(bool,X44)) ) | $spl44),
  inference(superposition,[],[f1693,f5339])).
fof(f18148,plain,(
  ( ! [X43,X41,X42] : (p(s(bool,X41)) | s(bool,X42) != s(bool,f(s(bool,X41))) | s(bool,X42) = s(bool,X43) | s(bool,'T_0') = s(bool,X43)) ) | $spl44),
  inference(subsumption_resolution,[],[f18124,f232])).
fof(f18124,plain,(
  ( ! [X43,X41,X42] : (p(s(bool,X41)) | s(bool,X42) != s(bool,f(s(bool,X41))) | s(bool,X42) = s(bool,X43) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,X41)) ) | $spl44),
  inference(superposition,[],[f1693,f13463])).
fof(f18147,plain,(
  ( ! [X39,X40] : (s(bool,X39) != s(bool,f(s(bool,'F_0'))) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) ) | $spl44),
  inference(subsumption_resolution,[],[f18123,f383])).
fof(f18123,plain,(
  ( ! [X39,X40] : (p(s(bool,'F_0')) | s(bool,X39) != s(bool,f(s(bool,'F_0'))) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) ) | $spl44),
  inference(superposition,[],[f1693,f11057])).
fof(f17743,plain,(
  ( ! [X180] : (p(s(bool,X180)) | s(bool,f(s(bool,f(s(bool,f(s(bool,X180))))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X180)))))))))) ) | $spl44),
  inference(subsumption_resolution,[],[f17697,f232])).
fof(f17697,plain,(
  ( ! [X180] : (p(s(bool,X180)) | s(bool,f(s(bool,f(s(bool,f(s(bool,X180))))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X180))))))))) | s(bool,'T_0') = s(bool,X180)) ) | $spl44),
  inference(superposition,[],[f17011,f17218])).
fof(f17742,plain,(
  ( ! [X178] : (p(s(bool,X178)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X178)))))))))))) ) | $spl44),
  inference(subsumption_resolution,[],[f17695,f232])).
fof(f17695,plain,(
  ( ! [X178] : (p(s(bool,X178)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X178))))))))))) | s(bool,'T_0') = s(bool,X178)) ) | $spl44),
  inference(superposition,[],[f16816,f17218])).
fof(f17741,plain,(
  ( ! [X165,X164] : (p(s(bool,X164)) | p(s(bool,X165)) | s(bool,f(s(bool,X165))) = s(bool,f(s(bool,f(s(bool,X164)))))) ) | $spl44),
  inference(subsumption_resolution,[],[f17682,f232])).
fof(f17682,plain,(
  ( ! [X165,X164] : (p(s(bool,X164)) | p(s(bool,X165)) | s(bool,f(s(bool,X165))) = s(bool,f(s(bool,f(s(bool,X164))))) | s(bool,'T_0') = s(bool,X164)) ) | $spl44),
  inference(superposition,[],[f15600,f17218])).
fof(f17740,plain,(
  ( ! [X163,X162] : (p(s(bool,X162)) | p(s(bool,X163)) | s(bool,X163) = s(bool,f(s(bool,f(s(bool,f(s(bool,X162)))))))) ) | $spl44),
  inference(subsumption_resolution,[],[f17681,f232])).
fof(f17681,plain,(
  ( ! [X163,X162] : (p(s(bool,X162)) | p(s(bool,X163)) | s(bool,X163) = s(bool,f(s(bool,f(s(bool,f(s(bool,X162))))))) | s(bool,'T_0') = s(bool,X162)) ) | $spl44),
  inference(superposition,[],[f15600,f17218])).
fof(f17739,plain,(
  ( ! [X85,X83,X84] : (p(s(bool,X83)) | sP1(f(s(bool,f(s(bool,X83)))),X84) | s(bool,X84) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) ) | $spl44),
  inference(subsumption_resolution,[],[f17629,f232])).
fof(f17629,plain,(
  ( ! [X85,X83,X84] : (p(s(bool,X83)) | sP1(f(s(bool,f(s(bool,X83)))),X84) | s(bool,X84) = s(bool,X85) | s(bool,'T_0') = s(bool,X85) | s(bool,'T_0') = s(bool,X83)) ) | $spl44),
  inference(superposition,[],[f2115,f17218])).
fof(f17738,plain,(
  ( ! [X80,X81,X82] : (p(s(bool,X80)) | sP1(X81,f(s(bool,f(s(bool,X80))))) | s(bool,X81) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) ) | $spl44),
  inference(subsumption_resolution,[],[f17628,f232])).
fof(f17628,plain,(
  ( ! [X80,X81,X82] : (p(s(bool,X80)) | sP1(X81,f(s(bool,f(s(bool,X80))))) | s(bool,X81) = s(bool,X82) | s(bool,'T_0') = s(bool,X82) | s(bool,'T_0') = s(bool,X80)) ) | $spl44),
  inference(superposition,[],[f2114,f17218])).
fof(f17737,plain,(
  ( ! [X77] : (sP1(f(s(bool,f(s(bool,X77)))),'T_0') | p(s(bool,X77))) ) | ($spl10 | $spl44)),
  inference(subsumption_resolution,[],[f17626,f232])).
fof(f17626,plain,(
  ( ! [X77] : (p(s(bool,X77)) | sP1(f(s(bool,f(s(bool,X77)))),'T_0') | s(bool,'T_0') = s(bool,X77)) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f2067,f17218])).
fof(f17735,plain,(
  ( ! [X74,X73] : (p(s(bool,X73)) | s(bool,X74) = s(bool,f(s(bool,f(s(bool,X73))))) | s(bool,'T_0') = s(bool,X74)) ) | $spl44),
  inference(subsumption_resolution,[],[f17623,f232])).
fof(f17623,plain,(
  ( ! [X74,X73] : (p(s(bool,X73)) | s(bool,X74) = s(bool,f(s(bool,f(s(bool,X73))))) | s(bool,'T_0') = s(bool,X74) | s(bool,'T_0') = s(bool,X73)) ) | $spl44),
  inference(superposition,[],[f571,f17218])).
fof(f17563,plain,(
  ( ! [X21,X22] : (s(bool,'|dollar|exists_1'(s(fun(X21,bool),X22))) = s(bool,f(s(bool,f(s(bool,'|dollar|exists_1'(s(fun(X21,bool),X22))))))) | s(bool,'T_0') = s(bool,happ(s(fun(X21,bool),X22),s(X21,'const.min.@_1'(s(fun(X21,bool),X22)))))) ) | $spl44),
  inference(superposition,[],[f17218,f259])).
fof(f17499,plain,(
  ( ! [X19] : (s(bool,f(s(bool,f(s(bool,f(s(bool,X19))))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X19))))))))) | s(bool,'T_0') = s(bool,X19)) ) | $spl44),
  inference(subsumption_resolution,[],[f17480,f383])).
fof(f17480,plain,(
  ( ! [X19] : (p(s(bool,'F_0')) | s(bool,f(s(bool,f(s(bool,f(s(bool,X19))))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X19))))))))) | s(bool,'T_0') = s(bool,X19)) ) | $spl44),
  inference(superposition,[],[f17011,f15725])).
fof(f17498,plain,(
  ( ! [X17] : (p(s(bool,X17)) | s(bool,f(s(bool,f(s(bool,X17))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X17)))))))) ) | $spl44),
  inference(subsumption_resolution,[],[f17478,f232])).
fof(f17478,plain,(
  ( ! [X17] : (p(s(bool,X17)) | s(bool,f(s(bool,f(s(bool,X17))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X17))))))) | s(bool,'T_0') = s(bool,X17)) ) | $spl44),
  inference(superposition,[],[f17011,f13463])).
fof(f17455,plain,(
  ( ! [X19] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X19))))))))))) | s(bool,'T_0') = s(bool,X19)) ) | $spl44),
  inference(subsumption_resolution,[],[f17432,f383])).
fof(f17432,plain,(
  ( ! [X19] : (p(s(bool,'F_0')) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X19))))))))))) | s(bool,'T_0') = s(bool,X19)) ) | $spl44),
  inference(superposition,[],[f16816,f15725])).
fof(f17454,plain,(
  ( ! [X17] : (p(s(bool,X17)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X17)))))))))) ) | $spl44),
  inference(subsumption_resolution,[],[f17430,f232])).
fof(f17430,plain,(
  ( ! [X17] : (p(s(bool,X17)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X17))))))))) | s(bool,'T_0') = s(bool,X17)) ) | $spl44),
  inference(superposition,[],[f16816,f13463])).
fof(f17239,plain,(
  ( ! [X173] : (s(bool,f(s(bool,f(s(bool,X173))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X173))))))) | s(bool,'T_0') = s(bool,X173)) ) | $spl44),
  inference(subsumption_resolution,[],[f17196,f383])).
fof(f17196,plain,(
  ( ! [X173] : (p(s(bool,'F_0')) | s(bool,f(s(bool,f(s(bool,X173))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X173))))))) | s(bool,'T_0') = s(bool,X173)) ) | $spl44),
  inference(superposition,[],[f16886,f15725])).
fof(f17238,plain,(
  ( ! [X164] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X164))))))))) | s(bool,'T_0') = s(bool,X164)) ) | $spl44),
  inference(subsumption_resolution,[],[f17187,f383])).
fof(f17187,plain,(
  ( ! [X164] : (p(s(bool,'F_0')) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X164))))))))) | s(bool,'T_0') = s(bool,X164)) ) | $spl44),
  inference(superposition,[],[f15724,f15725])).
fof(f17237,plain,(
  ( ! [X161,X160] : (p(s(bool,X161)) | s(bool,f(s(bool,X161))) = s(bool,f(s(bool,f(s(bool,X160))))) | s(bool,'T_0') = s(bool,X160)) ) | $spl44),
  inference(subsumption_resolution,[],[f17184,f383])).
fof(f17184,plain,(
  ( ! [X161,X160] : (p(s(bool,'F_0')) | p(s(bool,X161)) | s(bool,f(s(bool,X161))) = s(bool,f(s(bool,f(s(bool,X160))))) | s(bool,'T_0') = s(bool,X160)) ) | $spl44),
  inference(superposition,[],[f15600,f15725])).
fof(f17236,plain,(
  ( ! [X158,X159] : (p(s(bool,X159)) | s(bool,X159) = s(bool,f(s(bool,f(s(bool,f(s(bool,X158))))))) | s(bool,'T_0') = s(bool,X158)) ) | $spl44),
  inference(subsumption_resolution,[],[f17183,f383])).
fof(f17183,plain,(
  ( ! [X158,X159] : (p(s(bool,'F_0')) | p(s(bool,X159)) | s(bool,X159) = s(bool,f(s(bool,f(s(bool,f(s(bool,X158))))))) | s(bool,'T_0') = s(bool,X158)) ) | $spl44),
  inference(superposition,[],[f15600,f15725])).
fof(f17232,plain,(
  ( ! [X80,X81,X79] : (sP1(f(s(bool,f(s(bool,X79)))),X80) | s(bool,X80) = s(bool,X81) | s(bool,'T_0') = s(bool,X81) | s(bool,'T_0') = s(bool,X79)) ) | $spl44),
  inference(subsumption_resolution,[],[f17131,f383])).
fof(f17131,plain,(
  ( ! [X80,X81,X79] : (p(s(bool,'F_0')) | sP1(f(s(bool,f(s(bool,X79)))),X80) | s(bool,X80) = s(bool,X81) | s(bool,'T_0') = s(bool,X81) | s(bool,'T_0') = s(bool,X79)) ) | $spl44),
  inference(superposition,[],[f2115,f15725])).
fof(f17231,plain,(
  ( ! [X78,X76,X77] : (sP1(X77,f(s(bool,f(s(bool,X76))))) | s(bool,X77) = s(bool,X78) | s(bool,'T_0') = s(bool,X78) | s(bool,'T_0') = s(bool,X76)) ) | $spl44),
  inference(subsumption_resolution,[],[f17130,f383])).
fof(f17130,plain,(
  ( ! [X78,X76,X77] : (p(s(bool,'F_0')) | sP1(X77,f(s(bool,f(s(bool,X76))))) | s(bool,X77) = s(bool,X78) | s(bool,'T_0') = s(bool,X78) | s(bool,'T_0') = s(bool,X76)) ) | $spl44),
  inference(superposition,[],[f2114,f15725])).
fof(f17230,plain,(
  ( ! [X73] : (sP1(f(s(bool,f(s(bool,X73)))),'T_0') | s(bool,'T_0') = s(bool,X73)) ) | ($spl10 | $spl44)),
  inference(subsumption_resolution,[],[f17128,f383])).
fof(f17128,plain,(
  ( ! [X73] : (p(s(bool,'F_0')) | sP1(f(s(bool,f(s(bool,X73)))),'T_0') | s(bool,'T_0') = s(bool,X73)) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f2067,f15725])).
fof(f17228,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,f(s(bool,f(s(bool,X4))))) | s(bool,'T_0') = s(bool,X5)) ) | $spl44),
  inference(subsumption_resolution,[],[f17089,f411])).
fof(f17089,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,f(s(bool,f(s(bool,X4))))) | s(bool,'T_0') = s(bool,X5)) ) | $spl44),
  inference(superposition,[],[f15725,f518])).
fof(f17074,plain,(
  ( ! [X21,X20] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,'|dollar|exists_1'(s(fun(X20,bool),X21))))))) | s(bool,'T_0') = s(bool,happ(s(fun(X20,bool),X21),s(X20,'const.min.@_1'(s(fun(X20,bool),X21)))))) ) | $spl44),
  inference(superposition,[],[f15725,f259])).
fof(f17218,plain,(
  ( ! [X13] : (s(bool,X13) = s(bool,f(s(bool,f(s(bool,X13))))) | s(bool,'T_0') = s(bool,X13)) ) | $spl44),
  inference(subsumption_resolution,[],[f17064,f411])).
fof(f17064,plain,(
  ( ! [X13] : (s(bool,X13) = s(bool,f(s(bool,f(s(bool,X13))))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,X13)) ) | $spl44),
  inference(superposition,[],[f15725,f226])).
fof(f17012,plain,(
  ( ! [X18] : (s(bool,f(s(bool,X18))) = s(bool,f(s(bool,f(s(bool,X18))))) | s(bool,'T_0') = s(bool,X18)) ) | $spl44),
  inference(subsumption_resolution,[],[f16998,f383])).
fof(f16998,plain,(
  ( ! [X18] : (p(s(bool,'F_0')) | s(bool,f(s(bool,X18))) = s(bool,f(s(bool,f(s(bool,X18))))) | s(bool,'T_0') = s(bool,X18)) ) | $spl44),
  inference(superposition,[],[f16886,f5339])).
fof(f16961,plain,(
  ( ! [X31,X32] : (p(s(bool,X32)) | s(bool,f(s(bool,X31))) = s(bool,f(s(bool,X32))) | s(bool,'T_0') = s(bool,X31)) ) | $spl44),
  inference(subsumption_resolution,[],[f16920,f383])).
fof(f16920,plain,(
  ( ! [X31,X32] : (p(s(bool,'F_0')) | p(s(bool,X32)) | s(bool,f(s(bool,X31))) = s(bool,f(s(bool,X32))) | s(bool,'T_0') = s(bool,X31)) ) | $spl44),
  inference(superposition,[],[f15600,f5339])).
fof(f16960,plain,(
  ( ! [X30,X29] : (p(s(bool,X29)) | p(s(bool,X30)) | s(bool,f(s(bool,X29))) = s(bool,f(s(bool,X30)))) ) | $spl44),
  inference(subsumption_resolution,[],[f16919,f232])).
fof(f16919,plain,(
  ( ! [X30,X29] : (p(s(bool,X29)) | p(s(bool,X30)) | s(bool,f(s(bool,X29))) = s(bool,f(s(bool,X30))) | s(bool,'T_0') = s(bool,X29)) ) | $spl44),
  inference(superposition,[],[f15600,f13463])).
fof(f16942,plain,(
  ( ! [X31,X32] : (p(s(bool,X32)) | s(bool,X32) = s(bool,f(s(bool,f(s(bool,X31))))) | s(bool,'T_0') = s(bool,X31)) ) | $spl44),
  inference(subsumption_resolution,[],[f16900,f383])).
fof(f16900,plain,(
  ( ! [X31,X32] : (p(s(bool,'F_0')) | p(s(bool,X32)) | s(bool,X32) = s(bool,f(s(bool,f(s(bool,X31))))) | s(bool,'T_0') = s(bool,X31)) ) | $spl44),
  inference(superposition,[],[f15600,f5339])).
fof(f16856,plain,(
  ( ! [X19,X20] : (s(bool,'T_0') != s(bool,f(s(bool,'|dollar|exists_1'(s(fun(X19,bool),X20))))) | s(bool,'T_0') = s(bool,happ(s(fun(X19,bool),X20),s(X19,'const.min.@_1'(s(fun(X19,bool),X20)))))) ) | $spl44),
  inference(superposition,[],[f16322,f259])).
fof(f16817,plain,(
  ( ! [X18] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X18))))))) | s(bool,'T_0') = s(bool,X18)) ) | $spl44),
  inference(subsumption_resolution,[],[f16798,f383])).
fof(f16798,plain,(
  ( ! [X18] : (p(s(bool,'F_0')) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X18))))))) | s(bool,'T_0') = s(bool,X18)) ) | $spl44),
  inference(superposition,[],[f15724,f5339])).
fof(f16516,plain,(
  ( ! [X0] : (sP4('T_0',f(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f16464,f226])).
fof(f16507,plain,(
  ( ! [X0] : (~sP5('T_0','T_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f16452,f226])).
fof(f16494,plain,(
  ( ! [X0] : (sP4(f(s(bool,X0)),'T_0','F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f16414,f226])).
fof(f16483,plain,(
  ( ! [X0] : (~sP6('T_0','T_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f16318,f226])).
fof(f16466,plain,(
  ( ! [X0] : (sP6('F_0','T_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f16317,f226])).
fof(f16464,plain,(
  sP4('T_0',f(s(bool,'F_0')),'F_0') | $spl44),
  inference(unit_resulting_resolution,[],[f16317,f319])).
fof(f16455,plain,(
  ( ! [X0] : (~sP6('T_0',f(s(bool,X0)),'T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f16305,f226])).
fof(f16452,plain,(
  ~sP5('T_0','T_0',f(s(bool,'F_0'))) | $spl44),
  inference(unit_resulting_resolution,[],[f219,f396,f391,f16305,f322])).
fof(f16416,plain,(
  ( ! [X0] : (sP6('F_0',f(s(bool,X0)),'T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f16304,f226])).
fof(f16414,plain,(
  sP4(f(s(bool,'F_0')),'T_0','F_0') | $spl44),
  inference(unit_resulting_resolution,[],[f16304,f319])).
fof(f16322,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f16154,f226])).
fof(f16304,plain,(
  sP6('F_0',f(s(bool,'F_0')),'T_0') | $spl44),
  inference(unit_resulting_resolution,[],[f383,f16154,f337])).
fof(f16305,plain,(
  ~sP6('T_0',f(s(bool,'F_0')),'T_0') | $spl44),
  inference(unit_resulting_resolution,[],[f219,f16154,f339])).
fof(f16317,plain,(
  sP6('F_0','T_0',f(s(bool,'F_0'))) | $spl44),
  inference(unit_resulting_resolution,[],[f383,f16154,f337])).
fof(f16318,plain,(
  ~sP6('T_0','T_0',f(s(bool,'F_0'))) | $spl44),
  inference(unit_resulting_resolution,[],[f219,f16154,f339])).
fof(f16154,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl44),
  inference(subsumption_resolution,[],[f15862,f412])).
fof(f15862,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | $spl44),
  inference(superposition,[],[f412,f14679])).
fof(f15725,plain,(
  ( ! [X16] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X16))))) | s(bool,'T_0') = s(bool,X16)) ) | $spl44),
  inference(subsumption_resolution,[],[f15713,f383])).
fof(f15713,plain,(
  ( ! [X16] : (p(s(bool,'F_0')) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X16))))) | s(bool,'T_0') = s(bool,X16)) ) | $spl44),
  inference(superposition,[],[f15599,f5339])).
fof(f15641,plain,(
  ( ! [X39,X38,X40] : (sP1(f(s(bool,X38)),X39) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40) | s(bool,'T_0') = s(bool,X38)) ) | $spl44),
  inference(subsumption_resolution,[],[f15625,f383])).
fof(f15625,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,'F_0')) | sP1(f(s(bool,X38)),X39) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40) | s(bool,'T_0') = s(bool,X38)) ) | $spl44),
  inference(superposition,[],[f2115,f5339])).
fof(f15640,plain,(
  ( ! [X37,X35,X36] : (p(s(bool,X35)) | sP1(f(s(bool,X35)),X36) | s(bool,X36) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) ) | $spl44),
  inference(subsumption_resolution,[],[f15624,f232])).
fof(f15624,plain,(
  ( ! [X37,X35,X36] : (p(s(bool,X35)) | sP1(f(s(bool,X35)),X36) | s(bool,X36) = s(bool,X37) | s(bool,'T_0') = s(bool,X37) | s(bool,'T_0') = s(bool,X35)) ) | $spl44),
  inference(superposition,[],[f2115,f13463])).
fof(f15639,plain,(
  ( ! [X33,X34] : (sP1(f(s(bool,'F_0')),X33) | s(bool,X33) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) ) | $spl44),
  inference(subsumption_resolution,[],[f15623,f383])).
fof(f15623,plain,(
  ( ! [X33,X34] : (p(s(bool,'F_0')) | sP1(f(s(bool,'F_0')),X33) | s(bool,X33) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) ) | $spl44),
  inference(superposition,[],[f2115,f11057])).
fof(f15604,plain,(
  ( ! [X76,X74,X75] : (p(s(bool,X74)) | sP1(X75,f(s(bool,X74))) | s(bool,X75) = s(bool,X76) | s(bool,'T_0') = s(bool,X76)) ) | $spl44),
  inference(subsumption_resolution,[],[f15535,f232])).
fof(f15535,plain,(
  ( ! [X76,X74,X75] : (p(s(bool,X74)) | sP1(X75,f(s(bool,X74))) | s(bool,X75) = s(bool,X76) | s(bool,'T_0') = s(bool,X76) | s(bool,'T_0') = s(bool,X74)) ) | $spl44),
  inference(superposition,[],[f2114,f13463])).
fof(f15603,plain,(
  ( ! [X71] : (sP1(f(s(bool,X71)),'T_0') | p(s(bool,X71))) ) | ($spl10 | $spl44)),
  inference(subsumption_resolution,[],[f15533,f232])).
fof(f15533,plain,(
  ( ! [X71] : (p(s(bool,X71)) | sP1(f(s(bool,X71)),'T_0') | s(bool,'T_0') = s(bool,X71)) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f2067,f13463])).
fof(f15601,plain,(
  ( ! [X68,X67] : (p(s(bool,X67)) | s(bool,X68) = s(bool,f(s(bool,X67))) | s(bool,'T_0') = s(bool,X68)) ) | $spl44),
  inference(subsumption_resolution,[],[f15530,f232])).
fof(f15530,plain,(
  ( ! [X68,X67] : (p(s(bool,X67)) | s(bool,X68) = s(bool,f(s(bool,X67))) | s(bool,'T_0') = s(bool,X68) | s(bool,'T_0') = s(bool,X67)) ) | $spl44),
  inference(superposition,[],[f571,f13463])).
fof(f15491,plain,(
  ( ! [X17,X18] : (s(bool,'|dollar|exists_1'(s(fun(X17,bool),X18))) = s(bool,f(s(bool,'|dollar|exists_1'(s(fun(X17,bool),X18))))) | s(bool,'T_0') = s(bool,happ(s(fun(X17,bool),X18),s(X17,'const.min.@_1'(s(fun(X17,bool),X18)))))) ) | $spl44),
  inference(superposition,[],[f13463,f259])).
fof(f14794,plain,(
  ( ! [X0] : (sP5('T_0',f(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f14754,f226])).
fof(f14785,plain,(
  ( ! [X0] : (~sP3(f(s(bool,X0)),'F_0','F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f14736,f226])).
fof(f14767,plain,(
  ( ! [X0] : (~sP3('F_0',f(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f14706,f226])).
fof(f14757,plain,(
  ( ! [X0] : (sP6('T_0','F_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f14591,f226])).
fof(f14754,plain,(
  sP5('T_0',f(s(bool,'F_0')),'F_0') | $spl44),
  inference(unit_resulting_resolution,[],[f14591,f320])).
fof(f14739,plain,(
  ( ! [X0] : (~sP6('F_0','F_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f14590,f226])).
fof(f14736,plain,(
  ~sP3(f(s(bool,'F_0')),'F_0','F_0') | $spl44),
  inference(unit_resulting_resolution,[],[f383,f393,f390,f14590,f323])).
fof(f14728,plain,(
  ( ! [X0] : (sP6('T_0',f(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f14589,f226])).
fof(f14709,plain,(
  ( ! [X0] : (~sP6('F_0',f(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f14588,f226])).
fof(f14706,plain,(
  ~sP3('F_0',f(s(bool,'F_0')),'F_0') | $spl44),
  inference(unit_resulting_resolution,[],[f383,f392,f390,f14588,f324])).
fof(f14681,plain,(
  sP1(f(s(bool,'F_0')),'T_0') | ($spl10 | $spl44)),
  inference(subsumption_resolution,[],[f14632,f383])).
fof(f14632,plain,(
  p(s(bool,'F_0')) | sP1(f(s(bool,'F_0')),'T_0') | ($spl10 | $spl44)),
  inference(superposition,[],[f2067,f11057])).
fof(f14679,plain,(
  ( ! [X37] : (s(bool,X37) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X37)) ) | $spl44),
  inference(subsumption_resolution,[],[f14630,f383])).
fof(f14630,plain,(
  ( ! [X37] : (p(s(bool,'F_0')) | s(bool,X37) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X37)) ) | $spl44),
  inference(superposition,[],[f571,f11057])).
fof(f14588,plain,(
  ~sP6('F_0',f(s(bool,'F_0')),'F_0') | $spl44),
  inference(unit_resulting_resolution,[],[f383,f11057,f340])).
fof(f14589,plain,(
  sP6('T_0',f(s(bool,'F_0')),'F_0') | $spl44),
  inference(unit_resulting_resolution,[],[f219,f11057,f338])).
fof(f14590,plain,(
  ~sP6('F_0','F_0',f(s(bool,'F_0'))) | $spl44),
  inference(unit_resulting_resolution,[],[f383,f11057,f340])).
fof(f14591,plain,(
  sP6('T_0','F_0',f(s(bool,'F_0'))) | $spl44),
  inference(unit_resulting_resolution,[],[f219,f11057,f338])).
fof(f11057,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) | $spl44),
  inference(unit_resulting_resolution,[],[f383,f411,f9475])).
fof(f13461,plain,(
  ( ! [X73] : (sP1(f(s(bool,X73)),'T_0') | s(bool,'T_0') = s(bool,X73)) ) | ($spl10 | $spl44)),
  inference(subsumption_resolution,[],[f9408,f383])).
fof(f9408,plain,(
  ( ! [X73] : (p(s(bool,'F_0')) | sP1(f(s(bool,X73)),'T_0') | s(bool,'T_0') = s(bool,X73)) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f2067,f5339])).
fof(f11364,plain,(
  ( ! [X26,X25] : (s(bool,X26) = s(bool,f(s(bool,X25))) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,X25)) ) | $spl44),
  inference(trivial_inequality_removal,[],[f11351])).
fof(f11351,plain,(
  ( ! [X26,X25] : (s(bool,'F_0') != s(bool,'F_0') | s(bool,X26) = s(bool,f(s(bool,X25))) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,X25)) ) | $spl44),
  inference(superposition,[],[f2110,f5339])).
fof(f9363,plain,(
  ( ! [X19,X20] : (s(bool,'F_0') = s(bool,f(s(bool,'|dollar|exists_1'(s(fun(X19,bool),X20))))) | s(bool,'T_0') = s(bool,happ(s(fun(X19,bool),X20),s(X19,'const.min.@_1'(s(fun(X19,bool),X20)))))) ) | $spl44),
  inference(superposition,[],[f5339,f259])).
fof(f3615,plain,(
  ( ! [X17,X16] : (p(s(bool,'|dollar|exists_1'(s(fun(X16,bool),X17)))) | sP1(happ(s(fun(X16,bool),X17),s(X16,'const.min.@_1'(s(fun(X16,bool),X17)))),'T_0')) ) | $spl10),
  inference(superposition,[],[f2067,f259])).
fof(f11090,plain,(
  ( ! [X30,X29] : (s(bool,f(s(bool,X29))) = s(bool,f(s(bool,X30))) | s(bool,'T_0') = s(bool,X30) | s(bool,'T_0') = s(bool,X29)) ) | $spl44),
  inference(subsumption_resolution,[],[f11073,f383])).
fof(f11073,plain,(
  ( ! [X30,X29] : (p(s(bool,'F_0')) | s(bool,f(s(bool,X29))) = s(bool,f(s(bool,X30))) | s(bool,'T_0') = s(bool,X30) | s(bool,'T_0') = s(bool,X29)) ) | $spl44),
  inference(superposition,[],[f9475,f5339])).
fof(f11495,plain,(
  ( ! [X43,X41,X42] : (sP1(X42,f(s(bool,X41))) | s(bool,X42) = s(bool,X43) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,X41)) ) | $spl44),
  inference(subsumption_resolution,[],[f11474,f383])).
fof(f11474,plain,(
  ( ! [X43,X41,X42] : (p(s(bool,'F_0')) | sP1(X42,f(s(bool,X41))) | s(bool,X42) = s(bool,X43) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,X41)) ) | $spl44),
  inference(superposition,[],[f2114,f5339])).
fof(f3621,plain,(
  sP1('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0') | $spl10),
  inference(subsumption_resolution,[],[f3613,f383])).
fof(f3613,plain,(
  p(s(bool,'F_0')) | sP1('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0') | $spl10),
  inference(superposition,[],[f2067,f418])).
fof(f3618,plain,(
  ( ! [X4] : (sP1(X4,'T_0') | s(bool,'T_0') = s(bool,X4)) ) | $spl10),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2067,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3617])).
fof(f3617,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | sP1(X4,'T_0') | s(bool,'T_0') = s(bool,X4)) ) | $spl10),
  inference(subsumption_resolution,[],[f3604,f232])).
fof(f3604,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | sP1(X4,'T_0') | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X5)) ) | $spl10),
  inference(superposition,[],[f2067,f518])).
fof(f34272,plain,(
  ( ! [X303] : (sP1('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X303))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X303))) = s(bool,happ(s(fun(bool,bool),X303),s(bool,'T_0')))) ) | $spl308),
  inference(cnf_transformation,[],[f34272_D])).
fof(f34272_D,plain,(
  ( ! [X303] : (sP1('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X303))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X303))) = s(bool,happ(s(fun(bool,bool),X303),s(bool,'T_0')))) ) <=> ~$spl308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl308])])).
fof(f34305,plain,(
  ( ! [X638,X637] : (sP1('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X638))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X638))) = s(bool,happ(s(fun(bool,bool),X638),s(bool,'T_0'))) | p(s(bool,X637))) ) | ($spl6 | $spl44)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2063,f3281,f3334,f3553,f3554,f3557,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11495,f11499,f11090,f9475,f5339,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f3552,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f9363,f11364,f13462,f13463,f307,f2136,f5743,f11057,f14591,f14590,f14589,f14588,f14679,f14680,f14706,f14709,f14728,f14736,f14739,f14754,f14757,f14767,f14785,f14794,f15491,f15599,f15600,f15601,f15602,f15604,f15634,f15637,f15639,f15640,f15641,f15642,f15630,f15724,f15725,f16154,f16318,f16317,f16305,f16304,f16322,f16414,f16416,f16452,f16455,f16464,f16466,f16475,f16483,f16494,f16507,f16516,f16816,f16817,f16856,f16886,f16941,f16942,f16960,f16961,f17011,f17012,f17218,f17074,f17228,f17229,f17231,f17232,f17236,f17237,f17238,f17239,f17454,f17455,f17498,f17499,f17563,f17735,f17736,f17738,f17739,f17740,f17741,f17742,f17743,f17912,f17913,f17914,f17988,f17989,f17990,f18147,f18148,f18149,f18150,f18151,f18152,f18189,f18190,f18229,f18230,f18311,f18313,f18372,f18373,f18391,f18392,f18433,f18434,f18435,f18436,f18542,f18543,f21247,f27085,f21682,f21750,f26901,f26887,f26855,f21784,f21786,f26781,f26778,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27475,f27479,f27481,f27484,f27487,f27489,f27490,f27492,f27494,f27496,f27499,f27501,f27503,f27506,f27508,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f25860,f25850,f25848,f25844,f25842,f25840,f25838,f25836,f25834,f25832,f25830,f25828,f25826,f25824,f25822,f25820,f25818,f25816,f25814,f25812,f25810,f27590,f27591,f27600,f27601,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27673,f27675,f27676,f27685,f27695,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f32012,f32013,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f33083,f32546,f33147,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34199,f34201,f33398,f34202,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33472,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f33520,f33522,f33526,f33527,f33529,f33530,f33531,f33532,f33533,f33534,f33535,f33536,f33537,f33538,f33539,f33540,f33542,f33543,f33544,f33545,f33546,f33547,f33548,f33549,f33550,f33551,f33552,f33553,f33554,f33555,f33556,f33558,f33559,f33560,f33562,f33564,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084,f34062,f34057,f34056,f34054,f34053,f34052,f34051,f34050,f34049,f34048,f34282,f34047,f34046,f34045,f34044,f34043,f34042,f34041,f34040,f34039,f34038,f34037,f34296,f34300,f34301,f34302,f34303,f33766])).
fof(f33766,plain,(
  ( ! [X638,X637] : (sP1('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X638))))) | p(s(bool,X637)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X638))) = s(bool,happ(s(fun(bool,bool),X638),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,f(s(bool,X637)))) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f17736,f1782])).
fof(f33562,plain,(
  ( ! [X383,X384] : (sP1('T_0',f(s(bool,f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X383))))))) | p(s(bool,happ(s(fun(bool,bool),X383),s(bool,'T_0')))) | s(bool,X384) = s(bool,'const.min.@_1'(s(fun(bool,bool),X383))) | s(bool,'T_0') = s(bool,X384)) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f17736,f1782])).
fof(f33560,plain,(
  ( ! [X379,X380] : (sP1('T_0',f(s(bool,f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X379))))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X379),s(bool,'T_0'))) | s(bool,X380) = s(bool,'const.min.@_1'(s(fun(bool,bool),X379))) | s(bool,'T_0') = s(bool,X380)) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f17229,f1782])).
fof(f33540,plain,(
  ( ! [X335,X336] : (sP1('T_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X335))))) | p(s(bool,happ(s(fun(bool,bool),X335),s(bool,'T_0')))) | s(bool,X336) = s(bool,'const.min.@_1'(s(fun(bool,bool),X335))) | s(bool,'T_0') = s(bool,X336)) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f15602,f1782])).
fof(f33526,plain,(
  ( ! [X304,X305] : (sP1('T_0',f(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X304))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X304),s(bool,'T_0'))) | s(bool,X305) = s(bool,'const.min.@_1'(s(fun(bool,bool),X304))) | s(bool,'T_0') = s(bool,X305)) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f13462,f1782])).
fof(f33472,plain,(
  ( ! [X154,X155] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X154)))) | sP1('T_0',happ(s(fun(bool,bool),X154),s(bool,'T_0'))) | s(bool,X155) = s(bool,'const.min.@_1'(s(fun(bool,bool),X154))) | s(bool,'T_0') = s(bool,X155)) ) | $spl6),
  inference(superposition,[],[f2063,f1782])).
fof(f25810,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP1('T_0',f(s(bool,f(s(bool,X1))))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | ($spl6 | $spl44)),
  inference(condensation,[],[f25809])).
fof(f25809,plain,(
  ( ! [X549,X551,X552,X550] : (sP1('T_0',f(s(bool,f(s(bool,X550))))) | s(bool,'T_0') = s(bool,X549) | s(bool,X550) = s(bool,X551) | s(bool,X551) = s(bool,X552) | s(bool,'T_0') = s(bool,X552)) ) | ($spl6 | $spl44)),
  inference(duplicate_literal_removal,[],[f22991])).
fof(f22991,plain,(
  ( ! [X549,X551,X552,X550] : (sP1('T_0',f(s(bool,f(s(bool,X550))))) | s(bool,'T_0') = s(bool,X549) | s(bool,X550) = s(bool,X551) | s(bool,'T_0') = s(bool,X549) | s(bool,X551) = s(bool,X552) | s(bool,'T_0') = s(bool,X552)) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f17229,f1507])).
fof(f25850,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP1('T_0',f(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | ($spl6 | $spl44)),
  inference(condensation,[],[f25849])).
fof(f25849,plain,(
  ( ! [X408,X407,X409,X406] : (sP1('T_0',f(s(bool,X407))) | s(bool,'T_0') = s(bool,X406) | s(bool,X407) = s(bool,X408) | s(bool,X408) = s(bool,X409) | s(bool,'T_0') = s(bool,X409)) ) | ($spl6 | $spl44)),
  inference(duplicate_literal_removal,[],[f22957])).
fof(f22957,plain,(
  ( ! [X408,X407,X409,X406] : (sP1('T_0',f(s(bool,X407))) | s(bool,'T_0') = s(bool,X406) | s(bool,X407) = s(bool,X408) | s(bool,'T_0') = s(bool,X406) | s(bool,X408) = s(bool,X409) | s(bool,'T_0') = s(bool,X409)) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f13462,f1507])).
fof(f17736,plain,(
  ( ! [X76] : (sP1('T_0',f(s(bool,f(s(bool,X76))))) | p(s(bool,X76))) ) | ($spl6 | $spl44)),
  inference(subsumption_resolution,[],[f17625,f232])).
fof(f17625,plain,(
  ( ! [X76] : (p(s(bool,X76)) | sP1('T_0',f(s(bool,f(s(bool,X76))))) | s(bool,'T_0') = s(bool,X76)) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f2063,f17218])).
fof(f17229,plain,(
  ( ! [X72] : (sP1('T_0',f(s(bool,f(s(bool,X72))))) | s(bool,'T_0') = s(bool,X72)) ) | ($spl6 | $spl44)),
  inference(subsumption_resolution,[],[f17127,f383])).
fof(f17127,plain,(
  ( ! [X72] : (p(s(bool,'F_0')) | sP1('T_0',f(s(bool,f(s(bool,X72))))) | s(bool,'T_0') = s(bool,X72)) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f2063,f15725])).
fof(f15602,plain,(
  ( ! [X70] : (sP1('T_0',f(s(bool,X70))) | p(s(bool,X70))) ) | ($spl6 | $spl44)),
  inference(subsumption_resolution,[],[f15532,f232])).
fof(f15532,plain,(
  ( ! [X70] : (p(s(bool,X70)) | sP1('T_0',f(s(bool,X70))) | s(bool,'T_0') = s(bool,X70)) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f2063,f13463])).
fof(f14680,plain,(
  sP1('T_0',f(s(bool,'F_0'))) | ($spl6 | $spl44)),
  inference(subsumption_resolution,[],[f14631,f383])).
fof(f14631,plain,(
  p(s(bool,'F_0')) | sP1('T_0',f(s(bool,'F_0'))) | ($spl6 | $spl44)),
  inference(superposition,[],[f2063,f11057])).
fof(f13462,plain,(
  ( ! [X72] : (sP1('T_0',f(s(bool,X72))) | s(bool,'T_0') = s(bool,X72)) ) | ($spl6 | $spl44)),
  inference(subsumption_resolution,[],[f9407,f383])).
fof(f9407,plain,(
  ( ! [X72] : (p(s(bool,'F_0')) | sP1('T_0',f(s(bool,X72))) | s(bool,'T_0') = s(bool,X72)) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f2063,f5339])).
fof(f3552,plain,(
  ( ! [X17,X16] : (p(s(bool,'|dollar|exists_1'(s(fun(X16,bool),X17)))) | sP1('T_0',happ(s(fun(X16,bool),X17),s(X16,'const.min.@_1'(s(fun(X16,bool),X17)))))) ) | $spl6),
  inference(superposition,[],[f2063,f259])).
fof(f3557,plain,(
  sP1('T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | $spl6),
  inference(subsumption_resolution,[],[f3550,f383])).
fof(f3550,plain,(
  p(s(bool,'F_0')) | sP1('T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | $spl6),
  inference(superposition,[],[f2063,f418])).
fof(f3554,plain,(
  ( ! [X4] : (sP1('T_0',X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl6),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2063,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3553])).
fof(f3553,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | sP1('T_0',X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl6),
  inference(subsumption_resolution,[],[f3541,f232])).
fof(f3541,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | sP1('T_0',X4) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X5)) ) | $spl6),
  inference(superposition,[],[f2063,f518])).
fof(f34304,plain,(
  ( ! [X635,X636] : (sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X636)))),'T_0') | s(bool,'T_0') = s(bool,X635) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X636))) = s(bool,happ(s(fun(bool,bool),X636),s(bool,'T_0')))) ) | ($spl10 | $spl44)),
  inference(subsumption_resolution,[],[f33765,f16322])).
fof(f33765,plain,(
  ( ! [X635,X636] : (sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X636)))),'T_0') | s(bool,'T_0') = s(bool,X635) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X636))) = s(bool,happ(s(fun(bool,bool),X636),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,f(s(bool,X635)))) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f17230,f1782])).
fof(f34303,plain,(
  ( ! [X633,X634] : (sP1('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X634))))) | s(bool,'T_0') = s(bool,X633) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X634))) = s(bool,happ(s(fun(bool,bool),X634),s(bool,'T_0')))) ) | ($spl6 | $spl44)),
  inference(subsumption_resolution,[],[f33764,f16322])).
fof(f33764,plain,(
  ( ! [X633,X634] : (sP1('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X634))))) | s(bool,'T_0') = s(bool,X633) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X634))) = s(bool,happ(s(fun(bool,bool),X634),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,f(s(bool,X633)))) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f17229,f1782])).
fof(f34208,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.min.@_1'(s(fun(bool,bool),X3))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3))) = s(bool,happ(s(fun(bool,bool),X3),s(bool,'T_0')))) ) | $spl200),
  inference(cnf_transformation,[],[f34208_D])).
fof(f34208_D,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.min.@_1'(s(fun(bool,bool),X3))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3))) = s(bool,happ(s(fun(bool,bool),X3),s(bool,'T_0')))) ) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f34301,plain,(
  ( ! [X629,X630] : (s(bool,'T_0') != s(bool,'const.min.@_1'(s(fun(bool,bool),X630))) | s(bool,'T_0') = s(bool,X629) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X630))) = s(bool,happ(s(fun(bool,bool),X630),s(bool,'T_0')))) ) | $spl44),
  inference(subsumption_resolution,[],[f33762,f16322])).
fof(f33762,plain,(
  ( ! [X629,X630] : (s(bool,'T_0') != s(bool,'const.min.@_1'(s(fun(bool,bool),X630))) | s(bool,'T_0') = s(bool,X629) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X630))) = s(bool,happ(s(fun(bool,bool),X630),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,f(s(bool,X629)))) ) | $spl44),
  inference(superposition,[],[f16322,f1782])).
fof(f34300,plain,(
  ( ! [X627,X628] : (s(bool,'F_0') = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X628))))) | s(bool,'T_0') = s(bool,X627) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X628))) = s(bool,happ(s(fun(bool,bool),X628),s(bool,'T_0')))) ) | $spl44),
  inference(subsumption_resolution,[],[f33761,f16322])).
fof(f33761,plain,(
  ( ! [X627,X628] : (s(bool,'F_0') = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X628))))) | s(bool,'T_0') = s(bool,X627) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X628))) = s(bool,happ(s(fun(bool,bool),X628),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,f(s(bool,X627)))) ) | $spl44),
  inference(superposition,[],[f15725,f1782])).
fof(f34295,plain,(
  ( ! [X380] : (sP1(f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X380)))))),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X380))) = s(bool,happ(s(fun(bool,bool),X380),s(bool,'T_0')))) ) | $spl348),
  inference(cnf_transformation,[],[f34295_D])).
fof(f34295_D,plain,(
  ( ! [X380] : (sP1(f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X380)))))),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X380))) = s(bool,happ(s(fun(bool,bool),X380),s(bool,'T_0')))) ) <=> ~$spl348),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl348])])).
fof(f34297,plain,(
  ( ! [X383,X384] : (sP1(f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X384)))))),'T_0') | p(s(bool,X383)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X384))) = s(bool,happ(s(fun(bool,bool),X384),s(bool,'T_0')))) ) | ($spl10 | $spl44)),
  inference(subsumption_resolution,[],[f33728,f232])).
fof(f33728,plain,(
  ( ! [X383,X384] : (sP1(f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X384)))))),'T_0') | p(s(bool,X383)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X384))) = s(bool,happ(s(fun(bool,bool),X384),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X383)) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f17737,f1782])).
fof(f34294,plain,(
  ( ! [X378] : (sP1('T_0',f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X378))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X378))) = s(bool,happ(s(fun(bool,bool),X378),s(bool,'T_0')))) ) | $spl346),
  inference(cnf_transformation,[],[f34294_D])).
fof(f34294_D,plain,(
  ( ! [X378] : (sP1('T_0',f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X378))))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X378))) = s(bool,happ(s(fun(bool,bool),X378),s(bool,'T_0')))) ) <=> ~$spl346),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl346])])).
fof(f34296,plain,(
  ( ! [X382,X381] : (sP1('T_0',f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X382))))))) | p(s(bool,X381)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X382))) = s(bool,happ(s(fun(bool,bool),X382),s(bool,'T_0')))) ) | ($spl6 | $spl44)),
  inference(subsumption_resolution,[],[f33727,f232])).
fof(f33727,plain,(
  ( ! [X382,X381] : (sP1('T_0',f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X382))))))) | p(s(bool,X381)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X382))) = s(bool,happ(s(fun(bool,bool),X382),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X381)) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f17736,f1782])).
fof(f34036,plain,(
  ( ! [X379,X380] : (sP1(f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X380)))))),'T_0') | s(bool,'T_0') = s(bool,X379) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X380))) = s(bool,happ(s(fun(bool,bool),X380),s(bool,'T_0')))) ) | ($spl10 | $spl44)),
  inference(duplicate_literal_removal,[],[f33726])).
fof(f33726,plain,(
  ( ! [X379,X380] : (sP1(f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X380)))))),'T_0') | s(bool,'T_0') = s(bool,X379) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X380))) = s(bool,happ(s(fun(bool,bool),X380),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X379)) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f17230,f1782])).
fof(f34037,plain,(
  ( ! [X377,X378] : (sP1('T_0',f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X378))))))) | s(bool,'T_0') = s(bool,X377) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X378))) = s(bool,happ(s(fun(bool,bool),X378),s(bool,'T_0')))) ) | ($spl6 | $spl44)),
  inference(duplicate_literal_removal,[],[f33725])).
fof(f33725,plain,(
  ( ! [X377,X378] : (sP1('T_0',f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X378))))))) | s(bool,'T_0') = s(bool,X377) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X378))) = s(bool,happ(s(fun(bool,bool),X378),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X377)) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f17229,f1782])).
fof(f34038,plain,(
  ( ! [X376,X375] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X376))) = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X376))))))) | s(bool,'T_0') = s(bool,X375) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X376))) = s(bool,happ(s(fun(bool,bool),X376),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33724])).
fof(f33724,plain,(
  ( ! [X376,X375] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X376))) = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X376))))))) | s(bool,'T_0') = s(bool,X375) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X376))) = s(bool,happ(s(fun(bool,bool),X376),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X375)) ) | $spl44),
  inference(superposition,[],[f17218,f1782])).
fof(f34292,plain,(
  ( ! [X356] : (sP4('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X356)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X356))) = s(bool,happ(s(fun(bool,bool),X356),s(bool,'T_0')))) ) | $spl342),
  inference(cnf_transformation,[],[f34292_D])).
fof(f34292_D,plain,(
  ( ! [X356] : (sP4('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X356)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X356))) = s(bool,happ(s(fun(bool,bool),X356),s(bool,'T_0')))) ) <=> ~$spl342),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl342])])).
fof(f34039,plain,(
  ( ! [X356,X355] : (sP4('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X356)))),'F_0') | s(bool,'T_0') = s(bool,X355) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X356))) = s(bool,happ(s(fun(bool,bool),X356),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33716])).
fof(f33716,plain,(
  ( ! [X356,X355] : (sP4('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X356)))),'F_0') | s(bool,'T_0') = s(bool,X355) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X356))) = s(bool,happ(s(fun(bool,bool),X356),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X355)) ) | $spl44),
  inference(superposition,[],[f16516,f1782])).
fof(f34291,plain,(
  ( ! [X354] : (~sP5('T_0','T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X354))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X354))) = s(bool,happ(s(fun(bool,bool),X354),s(bool,'T_0')))) ) | $spl340),
  inference(cnf_transformation,[],[f34291_D])).
fof(f34291_D,plain,(
  ( ! [X354] : (~sP5('T_0','T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X354))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X354))) = s(bool,happ(s(fun(bool,bool),X354),s(bool,'T_0')))) ) <=> ~$spl340),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl340])])).
fof(f34040,plain,(
  ( ! [X354,X353] : (~sP5('T_0','T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X354))))) | s(bool,'T_0') = s(bool,X353) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X354))) = s(bool,happ(s(fun(bool,bool),X354),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33715])).
fof(f33715,plain,(
  ( ! [X354,X353] : (~sP5('T_0','T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X354))))) | s(bool,'T_0') = s(bool,X353) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X354))) = s(bool,happ(s(fun(bool,bool),X354),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X353)) ) | $spl44),
  inference(superposition,[],[f16507,f1782])).
fof(f34290,plain,(
  ( ! [X352] : (sP4(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X352)))),'T_0','F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X352))) = s(bool,happ(s(fun(bool,bool),X352),s(bool,'T_0')))) ) | $spl338),
  inference(cnf_transformation,[],[f34290_D])).
fof(f34290_D,plain,(
  ( ! [X352] : (sP4(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X352)))),'T_0','F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X352))) = s(bool,happ(s(fun(bool,bool),X352),s(bool,'T_0')))) ) <=> ~$spl338),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl338])])).
fof(f34041,plain,(
  ( ! [X352,X351] : (sP4(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X352)))),'T_0','F_0') | s(bool,'T_0') = s(bool,X351) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X352))) = s(bool,happ(s(fun(bool,bool),X352),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33714])).
fof(f33714,plain,(
  ( ! [X352,X351] : (sP4(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X352)))),'T_0','F_0') | s(bool,'T_0') = s(bool,X351) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X352))) = s(bool,happ(s(fun(bool,bool),X352),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X351)) ) | $spl44),
  inference(superposition,[],[f16494,f1782])).
fof(f34289,plain,(
  ( ! [X350] : (~sP6('T_0','T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X350))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X350))) = s(bool,happ(s(fun(bool,bool),X350),s(bool,'T_0')))) ) | $spl336),
  inference(cnf_transformation,[],[f34289_D])).
fof(f34289_D,plain,(
  ( ! [X350] : (~sP6('T_0','T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X350))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X350))) = s(bool,happ(s(fun(bool,bool),X350),s(bool,'T_0')))) ) <=> ~$spl336),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl336])])).
fof(f34042,plain,(
  ( ! [X350,X349] : (~sP6('T_0','T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X350))))) | s(bool,'T_0') = s(bool,X349) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X350))) = s(bool,happ(s(fun(bool,bool),X350),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33713])).
fof(f33713,plain,(
  ( ! [X350,X349] : (~sP6('T_0','T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X350))))) | s(bool,'T_0') = s(bool,X349) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X350))) = s(bool,happ(s(fun(bool,bool),X350),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X349)) ) | $spl44),
  inference(superposition,[],[f16483,f1782])).
fof(f34288,plain,(
  ( ! [X348] : (sP6('F_0','T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X348))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X348))) = s(bool,happ(s(fun(bool,bool),X348),s(bool,'T_0')))) ) | $spl334),
  inference(cnf_transformation,[],[f34288_D])).
fof(f34288_D,plain,(
  ( ! [X348] : (sP6('F_0','T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X348))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X348))) = s(bool,happ(s(fun(bool,bool),X348),s(bool,'T_0')))) ) <=> ~$spl334),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl334])])).
fof(f34043,plain,(
  ( ! [X347,X348] : (sP6('F_0','T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X348))))) | s(bool,'T_0') = s(bool,X347) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X348))) = s(bool,happ(s(fun(bool,bool),X348),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33712])).
fof(f33712,plain,(
  ( ! [X347,X348] : (sP6('F_0','T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X348))))) | s(bool,'T_0') = s(bool,X347) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X348))) = s(bool,happ(s(fun(bool,bool),X348),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X347)) ) | $spl44),
  inference(superposition,[],[f16466,f1782])).
fof(f34287,plain,(
  ( ! [X346] : (~sP6('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X346)))),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X346))) = s(bool,happ(s(fun(bool,bool),X346),s(bool,'T_0')))) ) | $spl332),
  inference(cnf_transformation,[],[f34287_D])).
fof(f34287_D,plain,(
  ( ! [X346] : (~sP6('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X346)))),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X346))) = s(bool,happ(s(fun(bool,bool),X346),s(bool,'T_0')))) ) <=> ~$spl332),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl332])])).
fof(f34044,plain,(
  ( ! [X346,X345] : (~sP6('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X346)))),'T_0') | s(bool,'T_0') = s(bool,X345) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X346))) = s(bool,happ(s(fun(bool,bool),X346),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33711])).
fof(f33711,plain,(
  ( ! [X346,X345] : (~sP6('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X346)))),'T_0') | s(bool,'T_0') = s(bool,X345) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X346))) = s(bool,happ(s(fun(bool,bool),X346),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X345)) ) | $spl44),
  inference(superposition,[],[f16455,f1782])).
fof(f34286,plain,(
  ( ! [X344] : (sP6('F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X344)))),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X344))) = s(bool,happ(s(fun(bool,bool),X344),s(bool,'T_0')))) ) | $spl330),
  inference(cnf_transformation,[],[f34286_D])).
fof(f34286_D,plain,(
  ( ! [X344] : (sP6('F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X344)))),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X344))) = s(bool,happ(s(fun(bool,bool),X344),s(bool,'T_0')))) ) <=> ~$spl330),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl330])])).
fof(f34045,plain,(
  ( ! [X344,X343] : (sP6('F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X344)))),'T_0') | s(bool,'T_0') = s(bool,X343) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X344))) = s(bool,happ(s(fun(bool,bool),X344),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33710])).
fof(f33710,plain,(
  ( ! [X344,X343] : (sP6('F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X344)))),'T_0') | s(bool,'T_0') = s(bool,X343) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X344))) = s(bool,happ(s(fun(bool,bool),X344),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X343)) ) | $spl44),
  inference(superposition,[],[f16416,f1782])).
fof(f34285,plain,(
  ( ! [X342] : (s(bool,'T_0') != s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X342))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X342))) = s(bool,happ(s(fun(bool,bool),X342),s(bool,'T_0')))) ) | $spl328),
  inference(cnf_transformation,[],[f34285_D])).
fof(f34285_D,plain,(
  ( ! [X342] : (s(bool,'T_0') != s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X342))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X342))) = s(bool,happ(s(fun(bool,bool),X342),s(bool,'T_0')))) ) <=> ~$spl328),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl328])])).
fof(f34046,plain,(
  ( ! [X341,X342] : (s(bool,'T_0') != s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X342))))) | s(bool,'T_0') = s(bool,X341) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X342))) = s(bool,happ(s(fun(bool,bool),X342),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33709])).
fof(f33709,plain,(
  ( ! [X341,X342] : (s(bool,'T_0') != s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X342))))) | s(bool,'T_0') = s(bool,X341) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X342))) = s(bool,happ(s(fun(bool,bool),X342),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X341)) ) | $spl44),
  inference(superposition,[],[f16322,f1782])).
fof(f34047,plain,(
  ( ! [X339,X340] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X340))))))) | s(bool,'T_0') = s(bool,X339) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X340))) = s(bool,happ(s(fun(bool,bool),X340),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33708])).
fof(f33708,plain,(
  ( ! [X339,X340] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X340))))))) | s(bool,'T_0') = s(bool,X339) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X340))) = s(bool,happ(s(fun(bool,bool),X340),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X339)) ) | $spl44),
  inference(superposition,[],[f15725,f1782])).
fof(f34283,plain,(
  ( ! [X335,X336] : (sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X336)))),'T_0') | p(s(bool,X335)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X336))) = s(bool,happ(s(fun(bool,bool),X336),s(bool,'T_0')))) ) | ($spl10 | $spl44)),
  inference(subsumption_resolution,[],[f33706,f232])).
fof(f33706,plain,(
  ( ! [X335,X336] : (sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X336)))),'T_0') | p(s(bool,X335)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X336))) = s(bool,happ(s(fun(bool,bool),X336),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X335)) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f15603,f1782])).
fof(f34282,plain,(
  ( ! [X333,X334] : (sP1('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X334))))) | p(s(bool,X333)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X334))) = s(bool,happ(s(fun(bool,bool),X334),s(bool,'T_0')))) ) | ($spl6 | $spl44)),
  inference(subsumption_resolution,[],[f33705,f232])).
fof(f33705,plain,(
  ( ! [X333,X334] : (sP1('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X334))))) | p(s(bool,X333)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X334))) = s(bool,happ(s(fun(bool,bool),X334),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X333)) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f15602,f1782])).
fof(f34281,plain,(
  ( ! [X321] : (sP5('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X321)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X321))) = s(bool,happ(s(fun(bool,bool),X321),s(bool,'T_0')))) ) | $spl324),
  inference(cnf_transformation,[],[f34281_D])).
fof(f34281_D,plain,(
  ( ! [X321] : (sP5('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X321)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X321))) = s(bool,happ(s(fun(bool,bool),X321),s(bool,'T_0')))) ) <=> ~$spl324),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl324])])).
fof(f34048,plain,(
  ( ! [X321,X320] : (sP5('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X321)))),'F_0') | s(bool,'T_0') = s(bool,X320) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X321))) = s(bool,happ(s(fun(bool,bool),X321),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33700])).
fof(f33700,plain,(
  ( ! [X321,X320] : (sP5('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X321)))),'F_0') | s(bool,'T_0') = s(bool,X320) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X321))) = s(bool,happ(s(fun(bool,bool),X321),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X320)) ) | $spl44),
  inference(superposition,[],[f14794,f1782])).
fof(f34280,plain,(
  ( ! [X319] : (~sP3(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X319)))),'F_0','F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X319))) = s(bool,happ(s(fun(bool,bool),X319),s(bool,'T_0')))) ) | $spl322),
  inference(cnf_transformation,[],[f34280_D])).
fof(f34280_D,plain,(
  ( ! [X319] : (~sP3(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X319)))),'F_0','F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X319))) = s(bool,happ(s(fun(bool,bool),X319),s(bool,'T_0')))) ) <=> ~$spl322),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl322])])).
fof(f34049,plain,(
  ( ! [X318,X319] : (~sP3(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X319)))),'F_0','F_0') | s(bool,'T_0') = s(bool,X318) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X319))) = s(bool,happ(s(fun(bool,bool),X319),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33699])).
fof(f33699,plain,(
  ( ! [X318,X319] : (~sP3(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X319)))),'F_0','F_0') | s(bool,'T_0') = s(bool,X318) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X319))) = s(bool,happ(s(fun(bool,bool),X319),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X318)) ) | $spl44),
  inference(superposition,[],[f14785,f1782])).
fof(f34279,plain,(
  ( ! [X317] : (~sP3('F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X317)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X317))) = s(bool,happ(s(fun(bool,bool),X317),s(bool,'T_0')))) ) | $spl320),
  inference(cnf_transformation,[],[f34279_D])).
fof(f34279_D,plain,(
  ( ! [X317] : (~sP3('F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X317)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X317))) = s(bool,happ(s(fun(bool,bool),X317),s(bool,'T_0')))) ) <=> ~$spl320),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl320])])).
fof(f34050,plain,(
  ( ! [X316,X317] : (~sP3('F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X317)))),'F_0') | s(bool,'T_0') = s(bool,X316) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X317))) = s(bool,happ(s(fun(bool,bool),X317),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33698])).
fof(f33698,plain,(
  ( ! [X316,X317] : (~sP3('F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X317)))),'F_0') | s(bool,'T_0') = s(bool,X316) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X317))) = s(bool,happ(s(fun(bool,bool),X317),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X316)) ) | $spl44),
  inference(superposition,[],[f14767,f1782])).
fof(f34278,plain,(
  ( ! [X315] : (sP6('T_0','F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X315))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X315))) = s(bool,happ(s(fun(bool,bool),X315),s(bool,'T_0')))) ) | $spl318),
  inference(cnf_transformation,[],[f34278_D])).
fof(f34278_D,plain,(
  ( ! [X315] : (sP6('T_0','F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X315))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X315))) = s(bool,happ(s(fun(bool,bool),X315),s(bool,'T_0')))) ) <=> ~$spl318),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl318])])).
fof(f34051,plain,(
  ( ! [X315,X314] : (sP6('T_0','F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X315))))) | s(bool,'T_0') = s(bool,X314) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X315))) = s(bool,happ(s(fun(bool,bool),X315),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33697])).
fof(f33697,plain,(
  ( ! [X315,X314] : (sP6('T_0','F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X315))))) | s(bool,'T_0') = s(bool,X314) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X315))) = s(bool,happ(s(fun(bool,bool),X315),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X314)) ) | $spl44),
  inference(superposition,[],[f14757,f1782])).
fof(f34277,plain,(
  ( ! [X313] : (~sP6('F_0','F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X313))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X313))) = s(bool,happ(s(fun(bool,bool),X313),s(bool,'T_0')))) ) | $spl316),
  inference(cnf_transformation,[],[f34277_D])).
fof(f34277_D,plain,(
  ( ! [X313] : (~sP6('F_0','F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X313))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X313))) = s(bool,happ(s(fun(bool,bool),X313),s(bool,'T_0')))) ) <=> ~$spl316),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl316])])).
fof(f34052,plain,(
  ( ! [X313,X312] : (~sP6('F_0','F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X313))))) | s(bool,'T_0') = s(bool,X312) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X313))) = s(bool,happ(s(fun(bool,bool),X313),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33696])).
fof(f33696,plain,(
  ( ! [X313,X312] : (~sP6('F_0','F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X313))))) | s(bool,'T_0') = s(bool,X312) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X313))) = s(bool,happ(s(fun(bool,bool),X313),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X312)) ) | $spl44),
  inference(superposition,[],[f14739,f1782])).
fof(f34276,plain,(
  ( ! [X311] : (sP6('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X311)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X311))) = s(bool,happ(s(fun(bool,bool),X311),s(bool,'T_0')))) ) | $spl314),
  inference(cnf_transformation,[],[f34276_D])).
fof(f34276_D,plain,(
  ( ! [X311] : (sP6('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X311)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X311))) = s(bool,happ(s(fun(bool,bool),X311),s(bool,'T_0')))) ) <=> ~$spl314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl314])])).
fof(f34053,plain,(
  ( ! [X310,X311] : (sP6('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X311)))),'F_0') | s(bool,'T_0') = s(bool,X310) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X311))) = s(bool,happ(s(fun(bool,bool),X311),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33695])).
fof(f33695,plain,(
  ( ! [X310,X311] : (sP6('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X311)))),'F_0') | s(bool,'T_0') = s(bool,X310) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X311))) = s(bool,happ(s(fun(bool,bool),X311),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X310)) ) | $spl44),
  inference(superposition,[],[f14728,f1782])).
fof(f34275,plain,(
  ( ! [X309] : (~sP6('F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X309)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X309))) = s(bool,happ(s(fun(bool,bool),X309),s(bool,'T_0')))) ) | $spl312),
  inference(cnf_transformation,[],[f34275_D])).
fof(f34275_D,plain,(
  ( ! [X309] : (~sP6('F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X309)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X309))) = s(bool,happ(s(fun(bool,bool),X309),s(bool,'T_0')))) ) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f34054,plain,(
  ( ! [X308,X309] : (~sP6('F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X309)))),'F_0') | s(bool,'T_0') = s(bool,X308) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X309))) = s(bool,happ(s(fun(bool,bool),X309),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33694])).
fof(f33694,plain,(
  ( ! [X308,X309] : (~sP6('F_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X309)))),'F_0') | s(bool,'T_0') = s(bool,X308) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X309))) = s(bool,happ(s(fun(bool,bool),X309),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X308)) ) | $spl44),
  inference(superposition,[],[f14709,f1782])).
fof(f34056,plain,(
  ( ! [X304,X305] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X305))) = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X305))))) | s(bool,'T_0') = s(bool,X304) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X305))) = s(bool,happ(s(fun(bool,bool),X305),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33692])).
fof(f33692,plain,(
  ( ! [X304,X305] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X305))) = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X305))))) | s(bool,'T_0') = s(bool,X304) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X305))) = s(bool,happ(s(fun(bool,bool),X305),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X304)) ) | $spl44),
  inference(superposition,[],[f13463,f1782])).
fof(f34057,plain,(
  ( ! [X302,X303] : (sP1('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X303))))) | s(bool,'T_0') = s(bool,X302) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X303))) = s(bool,happ(s(fun(bool,bool),X303),s(bool,'T_0')))) ) | ($spl6 | $spl44)),
  inference(duplicate_literal_removal,[],[f33691])).
fof(f33691,plain,(
  ( ! [X302,X303] : (sP1('T_0',f(s(bool,'const.min.@_1'(s(fun(bool,bool),X303))))) | s(bool,'T_0') = s(bool,X302) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X303))) = s(bool,happ(s(fun(bool,bool),X303),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X302)) ) | ($spl6 | $spl44)),
  inference(superposition,[],[f13462,f1782])).
fof(f34058,plain,(
  ( ! [X300,X301] : (sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X301)))),'T_0') | s(bool,'T_0') = s(bool,X300) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X301))) = s(bool,happ(s(fun(bool,bool),X301),s(bool,'T_0')))) ) | ($spl10 | $spl44)),
  inference(duplicate_literal_removal,[],[f33690])).
fof(f33690,plain,(
  ( ! [X300,X301] : (sP1(f(s(bool,'const.min.@_1'(s(fun(bool,bool),X301)))),'T_0') | s(bool,'T_0') = s(bool,X300) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X301))) = s(bool,happ(s(fun(bool,bool),X301),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X300)) ) | ($spl10 | $spl44)),
  inference(superposition,[],[f13461,f1782])).
fof(f34270,plain,(
  ( ! [X298,X297,X299] : (~sP7(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X297)))),X298,X299) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X297))) = s(bool,happ(s(fun(bool,bool),X297),s(bool,'T_0'))) | sP8(g(s(bool,'F_0')),X298,X299)) ) | $spl304),
  inference(cnf_transformation,[],[f34270_D])).
fof(f34270_D,plain,(
  ( ! [X298,X297,X299] : (~sP7(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X297)))),X298,X299) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X297))) = s(bool,happ(s(fun(bool,bool),X297),s(bool,'T_0'))) | sP8(g(s(bool,'F_0')),X298,X299)) ) <=> ~$spl304),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl304])])).
fof(f34059,plain,(
  ( ! [X296,X298,X297,X299] : (~sP7(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X297)))),X298,X299) | sP8(g(s(bool,'F_0')),X298,X299) | s(bool,'T_0') = s(bool,X296) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X297))) = s(bool,happ(s(fun(bool,bool),X297),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33689])).
fof(f33689,plain,(
  ( ! [X296,X298,X297,X299] : (~sP7(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X297)))),X298,X299) | sP8(g(s(bool,'F_0')),X298,X299) | s(bool,'T_0') = s(bool,X296) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X297))) = s(bool,happ(s(fun(bool,bool),X297),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X296)) ) | $spl0),
  inference(superposition,[],[f10892,f1782])).
fof(f10892,plain,(
  ( ! [X2,X0,X1] : (~sP7(g(s(bool,X0)),X1,X2) | sP8(g(s(bool,'F_0')),X1,X2) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f10866])).
fof(f10866,plain,(
  ( ! [X2,X0,X1] : (sP8(g(s(bool,'F_0')),X1,X2) | ~sP7(g(s(bool,X0)),X1,X2) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f5099,f226])).
fof(f5099,plain,(
  ( ! [X57,X56,X55] : (sP8(g(s(bool,X55)),X56,X57) | ~sP7(g(s(bool,X55)),X56,X57) | s(bool,'T_0') = s(bool,X55)) ) | $spl0),
  inference(subsumption_resolution,[],[f5027,f219])).
fof(f5027,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,'T_0')) | ~sP7(g(s(bool,X55)),X56,X57) | sP8(g(s(bool,X55)),X56,X57) | s(bool,'T_0') = s(bool,X55)) ) | $spl0),
  inference(superposition,[],[f376,f2602])).
fof(f2602,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f1415,f226])).
fof(f34269,plain,(
  ( ! [X294,X293,X295] : (~sP9(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X293)))),X294,X295) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X293))) = s(bool,happ(s(fun(bool,bool),X293),s(bool,'T_0'))) | sP10(g(s(bool,'F_0')),X294,X295)) ) | $spl302),
  inference(cnf_transformation,[],[f34269_D])).
fof(f34269_D,plain,(
  ( ! [X294,X293,X295] : (~sP9(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X293)))),X294,X295) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X293))) = s(bool,happ(s(fun(bool,bool),X293),s(bool,'T_0'))) | sP10(g(s(bool,'F_0')),X294,X295)) ) <=> ~$spl302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl302])])).
fof(f34060,plain,(
  ( ! [X292,X294,X293,X295] : (~sP9(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X293)))),X294,X295) | sP10(g(s(bool,'F_0')),X294,X295) | s(bool,'T_0') = s(bool,X292) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X293))) = s(bool,happ(s(fun(bool,bool),X293),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33688])).
fof(f33688,plain,(
  ( ! [X292,X294,X293,X295] : (~sP9(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X293)))),X294,X295) | sP10(g(s(bool,'F_0')),X294,X295) | s(bool,'T_0') = s(bool,X292) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X293))) = s(bool,happ(s(fun(bool,bool),X293),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X292)) ) | $spl0),
  inference(superposition,[],[f10833,f1782])).
fof(f10833,plain,(
  ( ! [X2,X0,X1] : (~sP9(g(s(bool,X0)),X1,X2) | sP10(g(s(bool,'F_0')),X1,X2) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f10807])).
fof(f10807,plain,(
  ( ! [X2,X0,X1] : (sP10(g(s(bool,'F_0')),X1,X2) | ~sP9(g(s(bool,X0)),X1,X2) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f5098,f226])).
fof(f5098,plain,(
  ( ! [X54,X52,X53] : (sP10(g(s(bool,X52)),X53,X54) | ~sP9(g(s(bool,X52)),X53,X54) | s(bool,'T_0') = s(bool,X52)) ) | $spl0),
  inference(subsumption_resolution,[],[f5026,f219])).
fof(f5026,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,'T_0')) | ~sP9(g(s(bool,X52)),X53,X54) | sP10(g(s(bool,X52)),X53,X54) | s(bool,'T_0') = s(bool,X52)) ) | $spl0),
  inference(superposition,[],[f375,f2602])).
fof(f34268,plain,(
  ( ! [X288] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X288))) != s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X288))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X288))) = s(bool,happ(s(fun(bool,bool),X288),s(bool,'T_0')))) ) | $spl300),
  inference(cnf_transformation,[],[f34268_D])).
fof(f34268_D,plain,(
  ( ! [X288] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X288))) != s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X288))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X288))) = s(bool,happ(s(fun(bool,bool),X288),s(bool,'T_0')))) ) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f34061,plain,(
  ( ! [X288,X287] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X288))) != s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X288))))) | s(bool,'T_0') = s(bool,X287) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X288))) = s(bool,happ(s(fun(bool,bool),X288),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33686])).
fof(f33686,plain,(
  ( ! [X288,X287] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X288))) != s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X288))))) | s(bool,'T_0') = s(bool,X287) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X288))) = s(bool,happ(s(fun(bool,bool),X288),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X287)) ) | $spl0),
  inference(superposition,[],[f9094,f1782])).
fof(f9094,plain,(
  ( ! [X13] : (s(bool,X13) != s(bool,g(s(bool,X13))) | s(bool,'T_0') = s(bool,X13)) ) | $spl0),
  inference(subsumption_resolution,[],[f9057,f411])).
fof(f9057,plain,(
  ( ! [X13] : (s(bool,X13) != s(bool,g(s(bool,X13))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,X13)) ) | $spl0),
  inference(superposition,[],[f5096,f226])).
fof(f5096,plain,(
  ( ! [X3] : (s(bool,'F_0') != s(bool,g(s(bool,X3))) | s(bool,'T_0') = s(bool,X3)) ) | $spl0),
  inference(subsumption_resolution,[],[f5006,f219])).
fof(f5006,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,g(s(bool,X3))) | s(bool,'T_0') = s(bool,X3)) ) | $spl0),
  inference(superposition,[],[f236,f2602])).
fof(f34062,plain,(
  ( ! [X285,X286] : (s(bool,'F_0') = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X286))))) | s(bool,'T_0') = s(bool,X285) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X286))) = s(bool,happ(s(fun(bool,bool),X286),s(bool,'T_0')))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33685])).
fof(f33685,plain,(
  ( ! [X285,X286] : (s(bool,'F_0') = s(bool,f(s(bool,'const.min.@_1'(s(fun(bool,bool),X286))))) | s(bool,'T_0') = s(bool,X285) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X286))) = s(bool,happ(s(fun(bool,bool),X286),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X285)) ) | $spl44),
  inference(superposition,[],[f5339,f1782])).
fof(f34266,plain,(
  ( ! [X275,X276] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X275)))) | s(bool,'T_0') = s(bool,X276) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X275))) = s(bool,happ(s(fun(bool,bool),X275),s(bool,'T_0')))) ) | $spl0),
  inference(global_subsumption,[],[f34265,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34096,f34092,f34088,f34084])).
fof(f34265,plain,(
  ( ! [X275,X276,X274] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X275)))) | s(bool,'T_0') = s(bool,X276) | s(bool,X274) = s(bool,g(s(bool,X276))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X275))) = s(bool,happ(s(fun(bool,bool),X275),s(bool,'T_0')))) ) | $spl0),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2602,f2685,f2693,f2719,f2730,f2761,f2773,f2843,f2852,f2870,f3249,f3265,f3273,f3281,f3292,f3301,f3318,f3326,f3334,f3347,f3356,f3372,f3381,f3397,f3406,f3417,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4492,f4511,f4520,f4598,f4609,f4632,f4644,f4725,f4735,f4750,f4761,f4835,f4846,f4862,f5098,f5099,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9094,f9100,f9625,f9671,f10704,f10731,f10779,f11335,f11386,f11487,f11490,f11499,f10788,f5097,f5080,f10892,f10833,f5096,f4938,f4844,f4832,f4749,f4731,f4660,f4631,f4624,f4606,f4510,f4487,f3677,f3662,f3660,f3405,f3380,f3355,f3325,f3299,f3272,f3248,f2758,f2727,f2716,f2666,f2665,f2664,f2663,f2662,f2661,f2660,f2659,f2658,f2657,f2656,f2655,f2654,f2653,f2652,f2651,f2650,f2601,f2600,f2599,f2598,f2129,f1415,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f4998,f9064,f9504,f1596,f1780,f1410,f5074,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18309,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f25932,f25930,f25928,f25926,f25924,f25922,f25920,f25918,f25916,f25914,f25912,f25910,f25908,f25906,f25904,f25902,f25900,f25898,f25896,f25894,f25892,f25890,f25888,f25886,f25884,f25882,f25880,f25878,f25876,f25874,f25872,f25870,f25868,f25866,f25864,f25862,f25861,f25858,f25856,f25854,f27590,f27591,f27592,f27593,f27594,f27595,f27596,f27597,f27598,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27647,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32125,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33478,f33479,f33480,f33481,f33482,f33483,f33484,f33485,f33486,f33487,f33488,f33489,f33490,f33491,f33492,f33493,f33494,f33495,f33496,f33497,f33498,f33499,f33500,f33501,f33502,f33503,f33504,f33505,f33506,f33507,f33508,f33509,f33510,f33511,f33512,f33513,f33514,f33515,f33516,f33517,f33518,f33519,f33521,f33523,f33524,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619,f34229,f34111,f34108,f34106,f34105,f34104,f34103,f34102,f34101,f34100,f34099,f34098,f34097,f34096,f34094,f34093,f34092,f34090,f34089,f34088,f34086,f34085,f34084,f34082,f34081,f34080,f34079,f34078,f34077,f34076,f34075,f34074,f34073,f34072,f34071,f34070,f34069,f34068,f34067,f34066,f34065,f33682])).
fof(f33682,plain,(
  ( ! [X275,X276,X274] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X275)))) | s(bool,X274) = s(bool,g(s(bool,X276))) | s(bool,'T_0') = s(bool,X276) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X275))) = s(bool,happ(s(fun(bool,bool),X275),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X274)) ) | $spl0),
  inference(superposition,[],[f5097,f1782])).
fof(f34108,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X0))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X0))) = s(bool,happ(s(fun(bool,bool),X0),s(bool,'T_0')))) ) | $spl0),
  inference(condensation,[],[f34107])).
fof(f34107,plain,(
  ( ! [X171,X172] : (s(bool,'T_0') = s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X172))))) | s(bool,'T_0') = s(bool,X171) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X172))) = s(bool,happ(s(fun(bool,bool),X172),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33643])).
fof(f33643,plain,(
  ( ! [X171,X172] : (s(bool,'T_0') = s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X172))))) | s(bool,'T_0') = s(bool,X171) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X172))) = s(bool,happ(s(fun(bool,bool),X172),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X171)) ) | $spl0),
  inference(superposition,[],[f2602,f1782])).
fof(f33524,plain,(
  ( ! [X300,X298,X301,X299] : (~sP7(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X298)))),X299,X300) | sP8(g(s(bool,'F_0')),X299,X300) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X298),s(bool,'T_0'))) | s(bool,X301) = s(bool,'const.min.@_1'(s(fun(bool,bool),X298))) | s(bool,'T_0') = s(bool,X301)) ) | $spl0),
  inference(superposition,[],[f10892,f1782])).
fof(f33523,plain,(
  ( ! [X294,X296,X295,X297] : (~sP9(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X294)))),X295,X296) | sP10(g(s(bool,'F_0')),X295,X296) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X294),s(bool,'T_0'))) | s(bool,X297) = s(bool,'const.min.@_1'(s(fun(bool,bool),X294))) | s(bool,'T_0') = s(bool,X297)) ) | $spl0),
  inference(superposition,[],[f10833,f1782])).
fof(f33521,plain,(
  ( ! [X290,X289] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X289))) != s(bool,g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X289))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X289),s(bool,'T_0'))) | s(bool,X290) = s(bool,'const.min.@_1'(s(fun(bool,bool),X289))) | s(bool,'T_0') = s(bool,X290)) ) | $spl0),
  inference(superposition,[],[f9094,f1782])).
fof(f33519,plain,(
  ( ! [X285,X283,X284,X286] : (sP8(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X283)))),X284,X285) | ~sP7(g(s(bool,happ(s(fun(bool,bool),X283),s(bool,'T_0')))),X284,X285) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X283),s(bool,'T_0'))) | s(bool,X286) = s(bool,'const.min.@_1'(s(fun(bool,bool),X283))) | s(bool,'T_0') = s(bool,X286)) ) | $spl0),
  inference(superposition,[],[f5099,f1782])).
fof(f33518,plain,(
  ( ! [X280,X282,X279,X281] : (sP10(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X279)))),X280,X281) | ~sP9(g(s(bool,happ(s(fun(bool,bool),X279),s(bool,'T_0')))),X280,X281) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X279),s(bool,'T_0'))) | s(bool,X282) = s(bool,'const.min.@_1'(s(fun(bool,bool),X279))) | s(bool,'T_0') = s(bool,X282)) ) | $spl0),
  inference(superposition,[],[f5098,f1782])).
fof(f33517,plain,(
  ( ! [X277,X276,X278] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X276)))) | s(bool,g(s(bool,X277))) = s(bool,happ(s(fun(bool,bool),X276),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X277) | s(bool,X278) = s(bool,'const.min.@_1'(s(fun(bool,bool),X276))) | s(bool,'T_0') = s(bool,X278)) ) | $spl0),
  inference(superposition,[],[f5097,f1782])).
fof(f33516,plain,(
  ( ! [X275,X274] : (s(bool,'F_0') != s(bool,g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X274))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X274),s(bool,'T_0'))) | s(bool,X275) = s(bool,'const.min.@_1'(s(fun(bool,bool),X274))) | s(bool,'T_0') = s(bool,X275)) ) | $spl0),
  inference(superposition,[],[f5096,f1782])).
fof(f33515,plain,(
  ( ! [X273,X272] : (p(s(bool,g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X272)))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X272),s(bool,'T_0'))) | s(bool,X273) = s(bool,'const.min.@_1'(s(fun(bool,bool),X272))) | s(bool,'T_0') = s(bool,X273)) ) | $spl0),
  inference(superposition,[],[f5080,f1782])).
fof(f33514,plain,(
  ( ! [X271,X270] : (~sP9(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X270)))),'F_0','T_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X270),s(bool,'T_0'))) | s(bool,X271) = s(bool,'const.min.@_1'(s(fun(bool,bool),X270))) | s(bool,'T_0') = s(bool,X271)) ) | $spl0),
  inference(superposition,[],[f4862,f1782])).
fof(f33513,plain,(
  ( ! [X269,X268] : (~sP10(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X268)))),'F_0','T_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X268),s(bool,'T_0'))) | s(bool,X269) = s(bool,'const.min.@_1'(s(fun(bool,bool),X268))) | s(bool,'T_0') = s(bool,X269)) ) | $spl0),
  inference(superposition,[],[f4846,f1782])).
fof(f33512,plain,(
  ( ! [X267,X266] : (~sP10('T_0','F_0',g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X266))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X266),s(bool,'T_0'))) | s(bool,X267) = s(bool,'const.min.@_1'(s(fun(bool,bool),X266))) | s(bool,'T_0') = s(bool,X267)) ) | $spl0),
  inference(superposition,[],[f4761,f1782])).
fof(f33511,plain,(
  ( ! [X265,X264] : (~sP9('T_0','F_0',g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X264))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X264),s(bool,'T_0'))) | s(bool,X265) = s(bool,'const.min.@_1'(s(fun(bool,bool),X264))) | s(bool,'T_0') = s(bool,X265)) ) | $spl0),
  inference(superposition,[],[f4750,f1782])).
fof(f33510,plain,(
  ( ! [X263,X262] : (~sP8(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X262)))),'F_0','F_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X262),s(bool,'T_0'))) | s(bool,X263) = s(bool,'const.min.@_1'(s(fun(bool,bool),X262))) | s(bool,'T_0') = s(bool,X263)) ) | $spl0),
  inference(superposition,[],[f4644,f1782])).
fof(f33509,plain,(
  ( ! [X261,X260] : (~sP7(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X260)))),'F_0','F_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X260),s(bool,'T_0'))) | s(bool,X261) = s(bool,'const.min.@_1'(s(fun(bool,bool),X260))) | s(bool,'T_0') = s(bool,X261)) ) | $spl0),
  inference(superposition,[],[f4632,f1782])).
fof(f33508,plain,(
  ( ! [X259,X258] : (~sP6('T_0','F_0',g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X258))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X258),s(bool,'T_0'))) | s(bool,X259) = s(bool,'const.min.@_1'(s(fun(bool,bool),X258))) | s(bool,'T_0') = s(bool,X259)) ) | $spl0),
  inference(superposition,[],[f4520,f1782])).
fof(f33507,plain,(
  ( ! [X257,X256] : (~sP5('T_0',g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X256)))),'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X256),s(bool,'T_0'))) | s(bool,X257) = s(bool,'const.min.@_1'(s(fun(bool,bool),X256))) | s(bool,'T_0') = s(bool,X257)) ) | $spl0),
  inference(superposition,[],[f4511,f1782])).
fof(f33506,plain,(
  ( ! [X255,X253,X254,X252] : (~sP5(X253,g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X252)))),X254) | p(s(bool,X254)) | ~p(s(bool,X253)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X252),s(bool,'T_0'))) | s(bool,X255) = s(bool,'const.min.@_1'(s(fun(bool,bool),X252))) | s(bool,'T_0') = s(bool,X255)) ) | $spl0),
  inference(superposition,[],[f4492,f1782])).
fof(f33505,plain,(
  ( ! [X251,X249,X250] : (sP10(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X249)))),'T_0',X250) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X249),s(bool,'T_0'))) | s(bool,X251) = s(bool,'const.min.@_1'(s(fun(bool,bool),X249))) | s(bool,'T_0') = s(bool,X251)) ) | $spl0),
  inference(superposition,[],[f3417,f1782])).
fof(f33504,plain,(
  ( ! [X246,X248,X247,X245] : (sP10(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X245)))),X246,X247) | ~p(s(bool,X246)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X245),s(bool,'T_0'))) | s(bool,X248) = s(bool,'const.min.@_1'(s(fun(bool,bool),X245))) | s(bool,'T_0') = s(bool,X248)) ) | $spl0),
  inference(superposition,[],[f3406,f1782])).
fof(f33503,plain,(
  ( ! [X243,X244,X242] : (sP10(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X242)))),X243,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X242),s(bool,'T_0'))) | s(bool,X244) = s(bool,'const.min.@_1'(s(fun(bool,bool),X242))) | s(bool,'T_0') = s(bool,X244)) ) | $spl0),
  inference(superposition,[],[f3397,f1782])).
fof(f33502,plain,(
  ( ! [X241,X239,X240,X238] : (sP10(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X238)))),X239,X240) | p(s(bool,X240)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X238),s(bool,'T_0'))) | s(bool,X241) = s(bool,'const.min.@_1'(s(fun(bool,bool),X238))) | s(bool,'T_0') = s(bool,X241)) ) | $spl0),
  inference(superposition,[],[f3381,f1782])).
fof(f33501,plain,(
  ( ! [X237,X235,X236] : (sP8(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X235)))),'T_0',X236) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X235),s(bool,'T_0'))) | s(bool,X237) = s(bool,'const.min.@_1'(s(fun(bool,bool),X235))) | s(bool,'T_0') = s(bool,X237)) ) | $spl0),
  inference(superposition,[],[f3372,f1782])).
fof(f33500,plain,(
  ( ! [X231,X233,X234,X232] : (sP8(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X231)))),X232,X233) | ~p(s(bool,X232)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X231),s(bool,'T_0'))) | s(bool,X234) = s(bool,'const.min.@_1'(s(fun(bool,bool),X231))) | s(bool,'T_0') = s(bool,X234)) ) | $spl0),
  inference(superposition,[],[f3356,f1782])).
fof(f33499,plain,(
  ( ! [X229,X230,X228] : (sP8(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X228)))),X229,'T_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X228),s(bool,'T_0'))) | s(bool,X230) = s(bool,'const.min.@_1'(s(fun(bool,bool),X228))) | s(bool,'T_0') = s(bool,X230)) ) | $spl0),
  inference(superposition,[],[f3347,f1782])).
fof(f33497,plain,(
  ( ! [X222,X223,X221,X224] : (sP8(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X221)))),X222,X223) | ~p(s(bool,X223)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X221),s(bool,'T_0'))) | s(bool,X224) = s(bool,'const.min.@_1'(s(fun(bool,bool),X221))) | s(bool,'T_0') = s(bool,X224)) ) | $spl0),
  inference(superposition,[],[f3326,f1782])).
fof(f33496,plain,(
  ( ! [X218,X220,X219] : (sP2(X219,'T_0',g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X218))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X218),s(bool,'T_0'))) | s(bool,X220) = s(bool,'const.min.@_1'(s(fun(bool,bool),X218))) | s(bool,'T_0') = s(bool,X220)) ) | $spl0),
  inference(superposition,[],[f3318,f1782])).
fof(f33494,plain,(
  ( ! [X212,X213,X211,X214] : (sP2(X212,X213,g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X211))))) | ~p(s(bool,X213)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X211),s(bool,'T_0'))) | s(bool,X214) = s(bool,'const.min.@_1'(s(fun(bool,bool),X211))) | s(bool,'T_0') = s(bool,X214)) ) | $spl0),
  inference(superposition,[],[f3301,f1782])).
fof(f33493,plain,(
  ( ! [X210,X209] : (sP1('F_0',g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X209))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X209),s(bool,'T_0'))) | s(bool,X210) = s(bool,'const.min.@_1'(s(fun(bool,bool),X209))) | s(bool,'T_0') = s(bool,X210)) ) | $spl0),
  inference(superposition,[],[f3292,f1782])).
fof(f33491,plain,(
  ( ! [X204,X205,X203] : (sP1(X204,g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X203))))) | p(s(bool,X204)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X203),s(bool,'T_0'))) | s(bool,X205) = s(bool,'const.min.@_1'(s(fun(bool,bool),X203))) | s(bool,'T_0') = s(bool,X205)) ) | $spl0),
  inference(superposition,[],[f3273,f1782])).
fof(f33490,plain,(
  ( ! [X202,X201] : (sP1(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X201)))),'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X201),s(bool,'T_0'))) | s(bool,X202) = s(bool,'const.min.@_1'(s(fun(bool,bool),X201))) | s(bool,'T_0') = s(bool,X202)) ) | $spl0),
  inference(superposition,[],[f3265,f1782])).
fof(f33488,plain,(
  ( ! [X196,X197,X195] : (sP1(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X195)))),X196) | p(s(bool,X196)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X195),s(bool,'T_0'))) | s(bool,X197) = s(bool,'const.min.@_1'(s(fun(bool,bool),X195))) | s(bool,'T_0') = s(bool,X197)) ) | $spl0),
  inference(superposition,[],[f3249,f1782])).
fof(f33487,plain,(
  ( ! [X194,X193] : (~sP4('T_0',g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X193)))),'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X193),s(bool,'T_0'))) | s(bool,X194) = s(bool,'const.min.@_1'(s(fun(bool,bool),X193))) | s(bool,'T_0') = s(bool,X194)) ) | $spl0),
  inference(superposition,[],[f2870,f1782])).
fof(f33486,plain,(
  ( ! [X191,X192] : (sP5('T_0','T_0',g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X191))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X191),s(bool,'T_0'))) | s(bool,X192) = s(bool,'const.min.@_1'(s(fun(bool,bool),X191))) | s(bool,'T_0') = s(bool,X192)) ) | $spl0),
  inference(superposition,[],[f2852,f1782])).
fof(f33485,plain,(
  ( ! [X189,X190] : (~sP4(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X189)))),'T_0','F_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X189),s(bool,'T_0'))) | s(bool,X190) = s(bool,'const.min.@_1'(s(fun(bool,bool),X189))) | s(bool,'T_0') = s(bool,X190)) ) | $spl0),
  inference(superposition,[],[f2843,f1782])).
fof(f33484,plain,(
  ( ! [X187,X188] : (sP6('T_0','T_0',g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X187))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X187),s(bool,'T_0'))) | s(bool,X188) = s(bool,'const.min.@_1'(s(fun(bool,bool),X187))) | s(bool,'T_0') = s(bool,X188)) ) | $spl0),
  inference(superposition,[],[f2773,f1782])).
fof(f33483,plain,(
  ( ! [X185,X186] : (~sP6('F_0','T_0',g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X185))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X185),s(bool,'T_0'))) | s(bool,X186) = s(bool,'const.min.@_1'(s(fun(bool,bool),X185))) | s(bool,'T_0') = s(bool,X186)) ) | $spl0),
  inference(superposition,[],[f2761,f1782])).
fof(f33482,plain,(
  ( ! [X184,X183] : (sP6('T_0',g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X183)))),'T_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X183),s(bool,'T_0'))) | s(bool,X184) = s(bool,'const.min.@_1'(s(fun(bool,bool),X183))) | s(bool,'T_0') = s(bool,X184)) ) | $spl0),
  inference(superposition,[],[f2730,f1782])).
fof(f33481,plain,(
  ( ! [X182,X181] : (~sP6('F_0',g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X181)))),'T_0') | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X181),s(bool,'T_0'))) | s(bool,X182) = s(bool,'const.min.@_1'(s(fun(bool,bool),X181))) | s(bool,'T_0') = s(bool,X182)) ) | $spl0),
  inference(superposition,[],[f2719,f1782])).
fof(f33480,plain,(
  ( ! [X180,X178,X179] : (sP0(g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X178)))),X179) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X178),s(bool,'T_0'))) | s(bool,X180) = s(bool,'const.min.@_1'(s(fun(bool,bool),X178))) | s(bool,'T_0') = s(bool,X180)) ) | $spl0),
  inference(superposition,[],[f2693,f1782])).
fof(f33479,plain,(
  ( ! [X177,X175,X176] : (sP0(X176,g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X175))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X175),s(bool,'T_0'))) | s(bool,X177) = s(bool,'const.min.@_1'(s(fun(bool,bool),X175))) | s(bool,'T_0') = s(bool,X177)) ) | $spl0),
  inference(superposition,[],[f2685,f1782])).
fof(f33478,plain,(
  ( ! [X173,X174] : (s(bool,'T_0') = s(bool,g(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X173))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),X173),s(bool,'T_0'))) | s(bool,X174) = s(bool,'const.min.@_1'(s(fun(bool,bool),X173))) | s(bool,'T_0') = s(bool,X174)) ) | $spl0),
  inference(superposition,[],[f2602,f1782])).
fof(f32125,plain,(
  ( ! [X346,X345,X347,X348] : (s(bool,g(s(bool,X347))) = s(bool,happ(s(fun(X345,bool),X346),s(X345,'const.min.@_1'(s(fun(X345,bool),X346))))) | s(bool,'T_0') = s(bool,X347) | s(bool,X348) = s(bool,'|dollar|exists_1'(s(fun(X345,bool),X346))) | s(bool,'T_0') = s(bool,X348)) ) | $spl0),
  inference(subsumption_resolution,[],[f31572,f219])).
fof(f31572,plain,(
  ( ! [X346,X345,X347,X348] : (~p(s(bool,'T_0')) | s(bool,g(s(bool,X347))) = s(bool,happ(s(fun(X345,bool),X346),s(X345,'const.min.@_1'(s(fun(X345,bool),X346))))) | s(bool,'T_0') = s(bool,X347) | s(bool,X348) = s(bool,'|dollar|exists_1'(s(fun(X345,bool),X346))) | s(bool,'T_0') = s(bool,X348)) ) | $spl0),
  inference(superposition,[],[f5097,f1491])).
fof(f27647,plain,(
  ( ! [X356,X352,X354,X353,X355] : (s(bool,X352) = s(bool,g(s(bool,X353))) | s(bool,'T_0') = s(bool,X353) | s(bool,X354) = s(bool,X355) | s(bool,X352) = s(bool,X355) | s(bool,X354) = s(bool,X356) | s(bool,'T_0') = s(bool,X356)) ) | $spl0),
  inference(subsumption_resolution,[],[f23434,f219])).
fof(f23434,plain,(
  ( ! [X356,X352,X354,X353,X355] : (~p(s(bool,'T_0')) | s(bool,X352) = s(bool,g(s(bool,X353))) | s(bool,'T_0') = s(bool,X353) | s(bool,X354) = s(bool,X355) | s(bool,X352) = s(bool,X355) | s(bool,X354) = s(bool,X356) | s(bool,'T_0') = s(bool,X356)) ) | $spl0),
  inference(superposition,[],[f5097,f1507])).
fof(f27598,plain,(
  ( ! [X883,X881,X878,X882,X880,X879] : (~sP7(g(s(bool,X878)),X879,X880) | sP8(g(s(bool,X881)),X879,X880) | s(bool,'T_0') = s(bool,X881) | s(bool,X878) = s(bool,X882) | s(bool,X882) = s(bool,X883) | s(bool,'T_0') = s(bool,X883)) ) | $spl0),
  inference(subsumption_resolution,[],[f23090,f411])).
fof(f23090,plain,(
  ( ! [X883,X881,X878,X882,X880,X879] : (~sP7(g(s(bool,X878)),X879,X880) | sP8(g(s(bool,X881)),X879,X880) | s(bool,'T_0') = s(bool,X881) | s(bool,X878) = s(bool,X882) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X882) = s(bool,X883) | s(bool,'T_0') = s(bool,X883)) ) | $spl0),
  inference(superposition,[],[f3677,f1507])).
fof(f27597,plain,(
  ( ! [X874,X872,X876,X875,X873,X877] : (~sP9(g(s(bool,X872)),X873,X874) | sP10(g(s(bool,X875)),X873,X874) | s(bool,'T_0') = s(bool,X875) | s(bool,X872) = s(bool,X876) | s(bool,X876) = s(bool,X877) | s(bool,'T_0') = s(bool,X877)) ) | $spl0),
  inference(subsumption_resolution,[],[f23089,f411])).
fof(f23089,plain,(
  ( ! [X874,X872,X876,X875,X873,X877] : (~sP9(g(s(bool,X872)),X873,X874) | sP10(g(s(bool,X875)),X873,X874) | s(bool,'T_0') = s(bool,X875) | s(bool,X872) = s(bool,X876) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X876) = s(bool,X877) | s(bool,'T_0') = s(bool,X877)) ) | $spl0),
  inference(superposition,[],[f3662,f1507])).
fof(f27596,plain,(
  ( ! [X825,X823,X826,X824,X822] : (~sP10(g(s(bool,X822)),X823,X824) | p(s(bool,X823)) | ~p(s(bool,X824)) | s(bool,X822) = s(bool,X825) | s(bool,X825) = s(bool,X826) | s(bool,'T_0') = s(bool,X826)) ) | $spl0),
  inference(subsumption_resolution,[],[f23076,f411])).
fof(f23076,plain,(
  ( ! [X825,X823,X826,X824,X822] : (~sP10(g(s(bool,X822)),X823,X824) | p(s(bool,X823)) | ~p(s(bool,X824)) | s(bool,X822) = s(bool,X825) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X825) = s(bool,X826) | s(bool,'T_0') = s(bool,X826)) ) | $spl0),
  inference(superposition,[],[f2664,f1507])).
fof(f27595,plain,(
  ( ! [X810,X808,X811,X809,X807] : (~sP9(X808,X809,g(s(bool,X807))) | ~p(s(bool,X808)) | p(s(bool,X809)) | s(bool,X807) = s(bool,X810) | s(bool,X810) = s(bool,X811) | s(bool,'T_0') = s(bool,X811)) ) | $spl0),
  inference(subsumption_resolution,[],[f23073,f411])).
fof(f23073,plain,(
  ( ! [X810,X808,X811,X809,X807] : (~sP9(X808,X809,g(s(bool,X807))) | ~p(s(bool,X808)) | p(s(bool,X809)) | s(bool,X807) = s(bool,X810) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X810) = s(bool,X811) | s(bool,'T_0') = s(bool,X811)) ) | $spl0),
  inference(superposition,[],[f2661,f1507])).
fof(f27594,plain,(
  ( ! [X802,X806,X804,X803,X805] : (~sP8(g(s(bool,X802)),X803,X804) | p(s(bool,X803)) | p(s(bool,X804)) | s(bool,X802) = s(bool,X805) | s(bool,X805) = s(bool,X806) | s(bool,'T_0') = s(bool,X806)) ) | $spl0),
  inference(subsumption_resolution,[],[f23072,f411])).
fof(f23072,plain,(
  ( ! [X802,X806,X804,X803,X805] : (~sP8(g(s(bool,X802)),X803,X804) | p(s(bool,X803)) | p(s(bool,X804)) | s(bool,X802) = s(bool,X805) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X805) = s(bool,X806) | s(bool,'T_0') = s(bool,X806)) ) | $spl0),
  inference(superposition,[],[f2660,f1507])).
fof(f27593,plain,(
  ( ! [X790,X788,X787,X791,X789] : (~sP7(g(s(bool,X787)),X788,X789) | p(s(bool,X789)) | p(s(bool,X788)) | s(bool,X787) = s(bool,X790) | s(bool,X790) = s(bool,X791) | s(bool,'T_0') = s(bool,X791)) ) | $spl0),
  inference(subsumption_resolution,[],[f23069,f411])).
fof(f23069,plain,(
  ( ! [X790,X788,X787,X791,X789] : (~sP7(g(s(bool,X787)),X788,X789) | p(s(bool,X789)) | p(s(bool,X788)) | s(bool,X787) = s(bool,X790) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X790) = s(bool,X791) | s(bool,'T_0') = s(bool,X791)) ) | $spl0),
  inference(superposition,[],[f2657,f1507])).
fof(f27592,plain,(
  ( ! [X786,X784,X783,X785,X782] : (~sP4(X783,g(s(bool,X782)),X784) | p(s(bool,X784)) | ~p(s(bool,X783)) | s(bool,X782) = s(bool,X785) | s(bool,X785) = s(bool,X786) | s(bool,'T_0') = s(bool,X786)) ) | $spl0),
  inference(subsumption_resolution,[],[f23068,f411])).
fof(f23068,plain,(
  ( ! [X786,X784,X783,X785,X782] : (~sP4(X783,g(s(bool,X782)),X784) | p(s(bool,X784)) | ~p(s(bool,X783)) | s(bool,X782) = s(bool,X785) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X785) = s(bool,X786) | s(bool,'T_0') = s(bool,X786)) ) | $spl0),
  inference(superposition,[],[f2656,f1507])).
fof(f25854,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP7(g(s(bool,X1)),X2,X3) | sP8(g(s(bool,'F_0')),X2,X3) | s(bool,X1) = s(bool,X4) | s(bool,X0) = s(bool,X4)) ) | $spl0),
  inference(condensation,[],[f25853])).
fof(f25853,plain,(
  ( ! [X397,X399,X401,X396,X398,X400] : (~sP7(g(s(bool,X397)),X398,X399) | sP8(g(s(bool,'F_0')),X398,X399) | s(bool,'T_0') = s(bool,X396) | s(bool,X397) = s(bool,X400) | s(bool,X400) = s(bool,X401) | s(bool,'T_0') = s(bool,X401)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22955])).
fof(f22955,plain,(
  ( ! [X397,X399,X401,X396,X398,X400] : (~sP7(g(s(bool,X397)),X398,X399) | sP8(g(s(bool,'F_0')),X398,X399) | s(bool,'T_0') = s(bool,X396) | s(bool,X397) = s(bool,X400) | s(bool,'T_0') = s(bool,X396) | s(bool,X400) = s(bool,X401) | s(bool,'T_0') = s(bool,X401)) ) | $spl0),
  inference(superposition,[],[f10892,f1507])).
fof(f25856,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP9(g(s(bool,X1)),X2,X3) | sP10(g(s(bool,'F_0')),X2,X3) | s(bool,X1) = s(bool,X4) | s(bool,X0) = s(bool,X4)) ) | $spl0),
  inference(condensation,[],[f25855])).
fof(f25855,plain,(
  ( ! [X391,X393,X395,X390,X392,X394] : (~sP9(g(s(bool,X391)),X392,X393) | sP10(g(s(bool,'F_0')),X392,X393) | s(bool,'T_0') = s(bool,X390) | s(bool,X391) = s(bool,X394) | s(bool,X394) = s(bool,X395) | s(bool,'T_0') = s(bool,X395)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22954])).
fof(f22954,plain,(
  ( ! [X391,X393,X395,X390,X392,X394] : (~sP9(g(s(bool,X391)),X392,X393) | sP10(g(s(bool,'F_0')),X392,X393) | s(bool,'T_0') = s(bool,X390) | s(bool,X391) = s(bool,X394) | s(bool,'T_0') = s(bool,X390) | s(bool,X394) = s(bool,X395) | s(bool,'T_0') = s(bool,X395)) ) | $spl0),
  inference(superposition,[],[f10833,f1507])).
fof(f25858,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) != s(bool,g(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25857])).
fof(f25857,plain,(
  ( ! [X383,X382,X384,X381] : (s(bool,X382) != s(bool,g(s(bool,X382))) | s(bool,'T_0') = s(bool,X381) | s(bool,X382) = s(bool,X383) | s(bool,X383) = s(bool,X384) | s(bool,'T_0') = s(bool,X384)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22952])).
fof(f22952,plain,(
  ( ! [X383,X382,X384,X381] : (s(bool,X382) != s(bool,g(s(bool,X382))) | s(bool,'T_0') = s(bool,X381) | s(bool,X382) = s(bool,X383) | s(bool,'T_0') = s(bool,X381) | s(bool,X383) = s(bool,X384) | s(bool,'T_0') = s(bool,X384)) ) | $spl0),
  inference(superposition,[],[f9094,f1507])).
fof(f25861,plain,(
  ( ! [X372,X374,X376,X373,X375,X371] : (sP8(g(s(bool,X372)),X373,X374) | ~sP7(g(s(bool,X371)),X373,X374) | s(bool,'T_0') = s(bool,X371) | s(bool,X372) = s(bool,X375) | s(bool,X375) = s(bool,X376) | s(bool,'T_0') = s(bool,X376)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22950])).
fof(f22950,plain,(
  ( ! [X372,X374,X376,X373,X375,X371] : (sP8(g(s(bool,X372)),X373,X374) | ~sP7(g(s(bool,X371)),X373,X374) | s(bool,'T_0') = s(bool,X371) | s(bool,X372) = s(bool,X375) | s(bool,'T_0') = s(bool,X371) | s(bool,X375) = s(bool,X376) | s(bool,'T_0') = s(bool,X376)) ) | $spl0),
  inference(superposition,[],[f5099,f1507])).
fof(f25862,plain,(
  ( ! [X366,X368,X370,X365,X367,X369] : (sP10(g(s(bool,X366)),X367,X368) | ~sP9(g(s(bool,X365)),X367,X368) | s(bool,'T_0') = s(bool,X365) | s(bool,X366) = s(bool,X369) | s(bool,X369) = s(bool,X370) | s(bool,'T_0') = s(bool,X370)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22949])).
fof(f22949,plain,(
  ( ! [X366,X368,X370,X365,X367,X369] : (sP10(g(s(bool,X366)),X367,X368) | ~sP9(g(s(bool,X365)),X367,X368) | s(bool,'T_0') = s(bool,X365) | s(bool,X366) = s(bool,X369) | s(bool,'T_0') = s(bool,X365) | s(bool,X369) = s(bool,X370) | s(bool,'T_0') = s(bool,X370)) ) | $spl0),
  inference(superposition,[],[f5098,f1507])).
fof(f25864,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,g(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25863])).
fof(f25863,plain,(
  ( ! [X356,X358,X357,X359] : (s(bool,'F_0') != s(bool,g(s(bool,X357))) | s(bool,'T_0') = s(bool,X356) | s(bool,X357) = s(bool,X358) | s(bool,X358) = s(bool,X359) | s(bool,'T_0') = s(bool,X359)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22947])).
fof(f22947,plain,(
  ( ! [X356,X358,X357,X359] : (s(bool,'F_0') != s(bool,g(s(bool,X357))) | s(bool,'T_0') = s(bool,X356) | s(bool,X357) = s(bool,X358) | s(bool,'T_0') = s(bool,X356) | s(bool,X358) = s(bool,X359) | s(bool,'T_0') = s(bool,X359)) ) | $spl0),
  inference(superposition,[],[f5096,f1507])).
fof(f25866,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,g(s(bool,X1)))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25865])).
fof(f25865,plain,(
  ( ! [X352,X354,X353,X355] : (p(s(bool,g(s(bool,X353)))) | s(bool,'T_0') = s(bool,X352) | s(bool,X353) = s(bool,X354) | s(bool,X354) = s(bool,X355) | s(bool,'T_0') = s(bool,X355)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22946])).
fof(f22946,plain,(
  ( ! [X352,X354,X353,X355] : (p(s(bool,g(s(bool,X353)))) | s(bool,'T_0') = s(bool,X352) | s(bool,X353) = s(bool,X354) | s(bool,'T_0') = s(bool,X352) | s(bool,X354) = s(bool,X355) | s(bool,'T_0') = s(bool,X355)) ) | $spl0),
  inference(superposition,[],[f5080,f1507])).
fof(f25868,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP9(g(s(bool,X1)),'F_0','T_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25867])).
fof(f25867,plain,(
  ( ! [X350,X349,X351,X348] : (~sP9(g(s(bool,X349)),'F_0','T_0') | s(bool,'T_0') = s(bool,X348) | s(bool,X349) = s(bool,X350) | s(bool,X350) = s(bool,X351) | s(bool,'T_0') = s(bool,X351)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22945])).
fof(f22945,plain,(
  ( ! [X350,X349,X351,X348] : (~sP9(g(s(bool,X349)),'F_0','T_0') | s(bool,'T_0') = s(bool,X348) | s(bool,X349) = s(bool,X350) | s(bool,'T_0') = s(bool,X348) | s(bool,X350) = s(bool,X351) | s(bool,'T_0') = s(bool,X351)) ) | $spl0),
  inference(superposition,[],[f4862,f1507])).
fof(f25870,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10(g(s(bool,X1)),'F_0','T_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25869])).
fof(f25869,plain,(
  ( ! [X344,X346,X345,X347] : (~sP10(g(s(bool,X345)),'F_0','T_0') | s(bool,'T_0') = s(bool,X344) | s(bool,X345) = s(bool,X346) | s(bool,X346) = s(bool,X347) | s(bool,'T_0') = s(bool,X347)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22944])).
fof(f22944,plain,(
  ( ! [X344,X346,X345,X347] : (~sP10(g(s(bool,X345)),'F_0','T_0') | s(bool,'T_0') = s(bool,X344) | s(bool,X345) = s(bool,X346) | s(bool,'T_0') = s(bool,X344) | s(bool,X346) = s(bool,X347) | s(bool,'T_0') = s(bool,X347)) ) | $spl0),
  inference(superposition,[],[f4846,f1507])).
fof(f25872,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('T_0','F_0',g(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25871])).
fof(f25871,plain,(
  ( ! [X341,X343,X340,X342] : (~sP10('T_0','F_0',g(s(bool,X341))) | s(bool,'T_0') = s(bool,X340) | s(bool,X341) = s(bool,X342) | s(bool,X342) = s(bool,X343) | s(bool,'T_0') = s(bool,X343)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22943])).
fof(f22943,plain,(
  ( ! [X341,X343,X340,X342] : (~sP10('T_0','F_0',g(s(bool,X341))) | s(bool,'T_0') = s(bool,X340) | s(bool,X341) = s(bool,X342) | s(bool,'T_0') = s(bool,X340) | s(bool,X342) = s(bool,X343) | s(bool,'T_0') = s(bool,X343)) ) | $spl0),
  inference(superposition,[],[f4761,f1507])).
fof(f25874,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP9('T_0','F_0',g(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25873])).
fof(f25873,plain,(
  ( ! [X337,X339,X336,X338] : (~sP9('T_0','F_0',g(s(bool,X337))) | s(bool,'T_0') = s(bool,X336) | s(bool,X337) = s(bool,X338) | s(bool,X338) = s(bool,X339) | s(bool,'T_0') = s(bool,X339)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22942])).
fof(f22942,plain,(
  ( ! [X337,X339,X336,X338] : (~sP9('T_0','F_0',g(s(bool,X337))) | s(bool,'T_0') = s(bool,X336) | s(bool,X337) = s(bool,X338) | s(bool,'T_0') = s(bool,X336) | s(bool,X338) = s(bool,X339) | s(bool,'T_0') = s(bool,X339)) ) | $spl0),
  inference(superposition,[],[f4750,f1507])).
fof(f25876,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8(g(s(bool,X1)),'F_0','F_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25875])).
fof(f25875,plain,(
  ( ! [X333,X335,X332,X334] : (~sP8(g(s(bool,X333)),'F_0','F_0') | s(bool,'T_0') = s(bool,X332) | s(bool,X333) = s(bool,X334) | s(bool,X334) = s(bool,X335) | s(bool,'T_0') = s(bool,X335)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22941])).
fof(f22941,plain,(
  ( ! [X333,X335,X332,X334] : (~sP8(g(s(bool,X333)),'F_0','F_0') | s(bool,'T_0') = s(bool,X332) | s(bool,X333) = s(bool,X334) | s(bool,'T_0') = s(bool,X332) | s(bool,X334) = s(bool,X335) | s(bool,'T_0') = s(bool,X335)) ) | $spl0),
  inference(superposition,[],[f4644,f1507])).
fof(f25878,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP7(g(s(bool,X1)),'F_0','F_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25877])).
fof(f25877,plain,(
  ( ! [X329,X331,X328,X330] : (~sP7(g(s(bool,X329)),'F_0','F_0') | s(bool,'T_0') = s(bool,X328) | s(bool,X329) = s(bool,X330) | s(bool,X330) = s(bool,X331) | s(bool,'T_0') = s(bool,X331)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22940])).
fof(f22940,plain,(
  ( ! [X329,X331,X328,X330] : (~sP7(g(s(bool,X329)),'F_0','F_0') | s(bool,'T_0') = s(bool,X328) | s(bool,X329) = s(bool,X330) | s(bool,'T_0') = s(bool,X328) | s(bool,X330) = s(bool,X331) | s(bool,'T_0') = s(bool,X331)) ) | $spl0),
  inference(superposition,[],[f4632,f1507])).
fof(f25880,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP6('T_0','F_0',g(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25879])).
fof(f25879,plain,(
  ( ! [X325,X327,X324,X326] : (~sP6('T_0','F_0',g(s(bool,X325))) | s(bool,'T_0') = s(bool,X324) | s(bool,X325) = s(bool,X326) | s(bool,X326) = s(bool,X327) | s(bool,'T_0') = s(bool,X327)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22939])).
fof(f22939,plain,(
  ( ! [X325,X327,X324,X326] : (~sP6('T_0','F_0',g(s(bool,X325))) | s(bool,'T_0') = s(bool,X324) | s(bool,X325) = s(bool,X326) | s(bool,'T_0') = s(bool,X324) | s(bool,X326) = s(bool,X327) | s(bool,'T_0') = s(bool,X327)) ) | $spl0),
  inference(superposition,[],[f4520,f1507])).
fof(f25882,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP5('T_0',g(s(bool,X1)),'F_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25881])).
fof(f25881,plain,(
  ( ! [X321,X323,X320,X322] : (~sP5('T_0',g(s(bool,X321)),'F_0') | s(bool,'T_0') = s(bool,X320) | s(bool,X321) = s(bool,X322) | s(bool,X322) = s(bool,X323) | s(bool,'T_0') = s(bool,X323)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22938])).
fof(f22938,plain,(
  ( ! [X321,X323,X320,X322] : (~sP5('T_0',g(s(bool,X321)),'F_0') | s(bool,'T_0') = s(bool,X320) | s(bool,X321) = s(bool,X322) | s(bool,'T_0') = s(bool,X320) | s(bool,X322) = s(bool,X323) | s(bool,'T_0') = s(bool,X323)) ) | $spl0),
  inference(superposition,[],[f4511,f1507])).
fof(f25884,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP5(X1,g(s(bool,X2)),X3) | p(s(bool,X3)) | ~p(s(bool,X1)) | s(bool,X2) = s(bool,X4) | s(bool,X0) = s(bool,X4)) ) | $spl0),
  inference(condensation,[],[f25883])).
fof(f25883,plain,(
  ( ! [X315,X316,X318,X314,X317,X319] : (~sP5(X316,g(s(bool,X315)),X317) | p(s(bool,X317)) | ~p(s(bool,X316)) | s(bool,'T_0') = s(bool,X314) | s(bool,X315) = s(bool,X318) | s(bool,X318) = s(bool,X319) | s(bool,'T_0') = s(bool,X319)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22937])).
fof(f22937,plain,(
  ( ! [X315,X316,X318,X314,X317,X319] : (~sP5(X316,g(s(bool,X315)),X317) | p(s(bool,X317)) | ~p(s(bool,X316)) | s(bool,'T_0') = s(bool,X314) | s(bool,X315) = s(bool,X318) | s(bool,'T_0') = s(bool,X314) | s(bool,X318) = s(bool,X319) | s(bool,'T_0') = s(bool,X319)) ) | $spl0),
  inference(superposition,[],[f4492,f1507])).
fof(f25886,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | sP10(g(s(bool,X1)),'T_0',X2) | s(bool,X1) = s(bool,X3) | s(bool,X0) = s(bool,X3)) ) | $spl0),
  inference(condensation,[],[f25885])).
fof(f25885,plain,(
  ( ! [X313,X310,X312,X309,X311] : (sP10(g(s(bool,X310)),'T_0',X311) | s(bool,'T_0') = s(bool,X309) | s(bool,X310) = s(bool,X312) | s(bool,X312) = s(bool,X313) | s(bool,'T_0') = s(bool,X313)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22936])).
fof(f22936,plain,(
  ( ! [X313,X310,X312,X309,X311] : (sP10(g(s(bool,X310)),'T_0',X311) | s(bool,'T_0') = s(bool,X309) | s(bool,X310) = s(bool,X312) | s(bool,'T_0') = s(bool,X309) | s(bool,X312) = s(bool,X313) | s(bool,'T_0') = s(bool,X313)) ) | $spl0),
  inference(superposition,[],[f3417,f1507])).
fof(f25888,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | sP10(g(s(bool,X1)),X2,X3) | ~p(s(bool,X2)) | s(bool,X1) = s(bool,X4) | s(bool,X0) = s(bool,X4)) ) | $spl0),
  inference(condensation,[],[f25887])).
fof(f25887,plain,(
  ( ! [X308,X304,X306,X303,X305,X307] : (sP10(g(s(bool,X304)),X305,X306) | ~p(s(bool,X305)) | s(bool,'T_0') = s(bool,X303) | s(bool,X304) = s(bool,X307) | s(bool,X307) = s(bool,X308) | s(bool,'T_0') = s(bool,X308)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22935])).
fof(f22935,plain,(
  ( ! [X308,X304,X306,X303,X305,X307] : (sP10(g(s(bool,X304)),X305,X306) | ~p(s(bool,X305)) | s(bool,'T_0') = s(bool,X303) | s(bool,X304) = s(bool,X307) | s(bool,'T_0') = s(bool,X303) | s(bool,X307) = s(bool,X308) | s(bool,'T_0') = s(bool,X308)) ) | $spl0),
  inference(superposition,[],[f3406,f1507])).
fof(f25890,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | sP10(g(s(bool,X1)),X2,'F_0') | s(bool,X1) = s(bool,X3) | s(bool,X0) = s(bool,X3)) ) | $spl0),
  inference(condensation,[],[f25889])).
fof(f25889,plain,(
  ( ! [X300,X302,X298,X301,X299] : (sP10(g(s(bool,X299)),X300,'F_0') | s(bool,'T_0') = s(bool,X298) | s(bool,X299) = s(bool,X301) | s(bool,X301) = s(bool,X302) | s(bool,'T_0') = s(bool,X302)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22934])).
fof(f22934,plain,(
  ( ! [X300,X302,X298,X301,X299] : (sP10(g(s(bool,X299)),X300,'F_0') | s(bool,'T_0') = s(bool,X298) | s(bool,X299) = s(bool,X301) | s(bool,'T_0') = s(bool,X298) | s(bool,X301) = s(bool,X302) | s(bool,'T_0') = s(bool,X302)) ) | $spl0),
  inference(superposition,[],[f3397,f1507])).
fof(f25892,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | sP10(g(s(bool,X1)),X2,X3) | p(s(bool,X3)) | s(bool,X1) = s(bool,X4) | s(bool,X0) = s(bool,X4)) ) | $spl0),
  inference(condensation,[],[f25891])).
fof(f25891,plain,(
  ( ! [X292,X294,X296,X293,X295,X297] : (sP10(g(s(bool,X293)),X294,X295) | p(s(bool,X295)) | s(bool,'T_0') = s(bool,X292) | s(bool,X293) = s(bool,X296) | s(bool,X296) = s(bool,X297) | s(bool,'T_0') = s(bool,X297)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22933])).
fof(f22933,plain,(
  ( ! [X292,X294,X296,X293,X295,X297] : (sP10(g(s(bool,X293)),X294,X295) | p(s(bool,X295)) | s(bool,'T_0') = s(bool,X292) | s(bool,X293) = s(bool,X296) | s(bool,'T_0') = s(bool,X292) | s(bool,X296) = s(bool,X297) | s(bool,'T_0') = s(bool,X297)) ) | $spl0),
  inference(superposition,[],[f3381,f1507])).
fof(f25894,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | sP8(g(s(bool,X1)),'T_0',X2) | s(bool,X1) = s(bool,X3) | s(bool,X0) = s(bool,X3)) ) | $spl0),
  inference(condensation,[],[f25893])).
fof(f25893,plain,(
  ( ! [X288,X290,X287,X289,X291] : (sP8(g(s(bool,X288)),'T_0',X289) | s(bool,'T_0') = s(bool,X287) | s(bool,X288) = s(bool,X290) | s(bool,X290) = s(bool,X291) | s(bool,'T_0') = s(bool,X291)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22932])).
fof(f22932,plain,(
  ( ! [X288,X290,X287,X289,X291] : (sP8(g(s(bool,X288)),'T_0',X289) | s(bool,'T_0') = s(bool,X287) | s(bool,X288) = s(bool,X290) | s(bool,'T_0') = s(bool,X287) | s(bool,X290) = s(bool,X291) | s(bool,'T_0') = s(bool,X291)) ) | $spl0),
  inference(superposition,[],[f3372,f1507])).
fof(f25896,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | sP8(g(s(bool,X1)),X2,X3) | ~p(s(bool,X2)) | s(bool,X1) = s(bool,X4) | s(bool,X0) = s(bool,X4)) ) | $spl0),
  inference(condensation,[],[f25895])).
fof(f25895,plain,(
  ( ! [X282,X285,X281,X283,X284,X286] : (sP8(g(s(bool,X282)),X283,X284) | ~p(s(bool,X283)) | s(bool,'T_0') = s(bool,X281) | s(bool,X282) = s(bool,X285) | s(bool,X285) = s(bool,X286) | s(bool,'T_0') = s(bool,X286)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22931])).
fof(f22931,plain,(
  ( ! [X282,X285,X281,X283,X284,X286] : (sP8(g(s(bool,X282)),X283,X284) | ~p(s(bool,X283)) | s(bool,'T_0') = s(bool,X281) | s(bool,X282) = s(bool,X285) | s(bool,'T_0') = s(bool,X281) | s(bool,X285) = s(bool,X286) | s(bool,'T_0') = s(bool,X286)) ) | $spl0),
  inference(superposition,[],[f3356,f1507])).
fof(f25898,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | sP8(g(s(bool,X1)),X2,'T_0') | s(bool,X1) = s(bool,X3) | s(bool,X0) = s(bool,X3)) ) | $spl0),
  inference(condensation,[],[f25897])).
fof(f25897,plain,(
  ( ! [X280,X277,X279,X276,X278] : (sP8(g(s(bool,X277)),X278,'T_0') | s(bool,'T_0') = s(bool,X276) | s(bool,X277) = s(bool,X279) | s(bool,X279) = s(bool,X280) | s(bool,'T_0') = s(bool,X280)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22930])).
fof(f22930,plain,(
  ( ! [X280,X277,X279,X276,X278] : (sP8(g(s(bool,X277)),X278,'T_0') | s(bool,'T_0') = s(bool,X276) | s(bool,X277) = s(bool,X279) | s(bool,'T_0') = s(bool,X276) | s(bool,X279) = s(bool,X280) | s(bool,'T_0') = s(bool,X280)) ) | $spl0),
  inference(superposition,[],[f3347,f1507])).
fof(f25900,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | sP8(g(s(bool,X1)),X2,X3) | ~p(s(bool,X3)) | s(bool,X1) = s(bool,X4) | s(bool,X0) = s(bool,X4)) ) | $spl0),
  inference(condensation,[],[f25899])).
fof(f25899,plain,(
  ( ! [X271,X273,X275,X270,X272,X274] : (sP8(g(s(bool,X271)),X272,X273) | ~p(s(bool,X273)) | s(bool,'T_0') = s(bool,X270) | s(bool,X271) = s(bool,X274) | s(bool,X274) = s(bool,X275) | s(bool,'T_0') = s(bool,X275)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22929])).
fof(f22929,plain,(
  ( ! [X271,X273,X275,X270,X272,X274] : (sP8(g(s(bool,X271)),X272,X273) | ~p(s(bool,X273)) | s(bool,'T_0') = s(bool,X270) | s(bool,X271) = s(bool,X274) | s(bool,'T_0') = s(bool,X270) | s(bool,X274) = s(bool,X275) | s(bool,'T_0') = s(bool,X275)) ) | $spl0),
  inference(superposition,[],[f3326,f1507])).
fof(f25902,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | sP2(X1,'T_0',g(s(bool,X2))) | s(bool,X2) = s(bool,X3) | s(bool,X0) = s(bool,X3)) ) | $spl0),
  inference(condensation,[],[f25901])).
fof(f25901,plain,(
  ( ! [X269,X265,X267,X268,X266] : (sP2(X267,'T_0',g(s(bool,X266))) | s(bool,'T_0') = s(bool,X265) | s(bool,X266) = s(bool,X268) | s(bool,X268) = s(bool,X269) | s(bool,'T_0') = s(bool,X269)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22928])).
fof(f22928,plain,(
  ( ! [X269,X265,X267,X268,X266] : (sP2(X267,'T_0',g(s(bool,X266))) | s(bool,'T_0') = s(bool,X265) | s(bool,X266) = s(bool,X268) | s(bool,'T_0') = s(bool,X265) | s(bool,X268) = s(bool,X269) | s(bool,'T_0') = s(bool,X269)) ) | $spl0),
  inference(superposition,[],[f3318,f1507])).
fof(f25904,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | sP2(X1,X2,g(s(bool,X3))) | ~p(s(bool,X2)) | s(bool,X3) = s(bool,X4) | s(bool,X0) = s(bool,X4)) ) | $spl0),
  inference(condensation,[],[f25903])).
fof(f25903,plain,(
  ( ! [X261,X263,X259,X260,X262,X264] : (sP2(X261,X262,g(s(bool,X260))) | ~p(s(bool,X262)) | s(bool,'T_0') = s(bool,X259) | s(bool,X260) = s(bool,X263) | s(bool,X263) = s(bool,X264) | s(bool,'T_0') = s(bool,X264)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22927])).
fof(f22927,plain,(
  ( ! [X261,X263,X259,X260,X262,X264] : (sP2(X261,X262,g(s(bool,X260))) | ~p(s(bool,X262)) | s(bool,'T_0') = s(bool,X259) | s(bool,X260) = s(bool,X263) | s(bool,'T_0') = s(bool,X259) | s(bool,X263) = s(bool,X264) | s(bool,'T_0') = s(bool,X264)) ) | $spl0),
  inference(superposition,[],[f3301,f1507])).
fof(f25906,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP1('F_0',g(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25905])).
fof(f25905,plain,(
  ( ! [X255,X257,X256,X258] : (sP1('F_0',g(s(bool,X256))) | s(bool,'T_0') = s(bool,X255) | s(bool,X256) = s(bool,X257) | s(bool,X257) = s(bool,X258) | s(bool,'T_0') = s(bool,X258)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22926])).
fof(f22926,plain,(
  ( ! [X255,X257,X256,X258] : (sP1('F_0',g(s(bool,X256))) | s(bool,'T_0') = s(bool,X255) | s(bool,X256) = s(bool,X257) | s(bool,'T_0') = s(bool,X255) | s(bool,X257) = s(bool,X258) | s(bool,'T_0') = s(bool,X258)) ) | $spl0),
  inference(superposition,[],[f3292,f1507])).
fof(f25908,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | sP1(X1,g(s(bool,X2))) | p(s(bool,X1)) | s(bool,X2) = s(bool,X3) | s(bool,X0) = s(bool,X3)) ) | $spl0),
  inference(condensation,[],[f25907])).
fof(f25907,plain,(
  ( ! [X253,X251,X254,X252,X250] : (sP1(X252,g(s(bool,X251))) | p(s(bool,X252)) | s(bool,'T_0') = s(bool,X250) | s(bool,X251) = s(bool,X253) | s(bool,X253) = s(bool,X254) | s(bool,'T_0') = s(bool,X254)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22925])).
fof(f22925,plain,(
  ( ! [X253,X251,X254,X252,X250] : (sP1(X252,g(s(bool,X251))) | p(s(bool,X252)) | s(bool,'T_0') = s(bool,X250) | s(bool,X251) = s(bool,X253) | s(bool,'T_0') = s(bool,X250) | s(bool,X253) = s(bool,X254) | s(bool,'T_0') = s(bool,X254)) ) | $spl0),
  inference(superposition,[],[f3273,f1507])).
fof(f25910,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP1(g(s(bool,X1)),'F_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25909])).
fof(f25909,plain,(
  ( ! [X249,X246,X248,X247] : (sP1(g(s(bool,X247)),'F_0') | s(bool,'T_0') = s(bool,X246) | s(bool,X247) = s(bool,X248) | s(bool,X248) = s(bool,X249) | s(bool,'T_0') = s(bool,X249)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22924])).
fof(f22924,plain,(
  ( ! [X249,X246,X248,X247] : (sP1(g(s(bool,X247)),'F_0') | s(bool,'T_0') = s(bool,X246) | s(bool,X247) = s(bool,X248) | s(bool,'T_0') = s(bool,X246) | s(bool,X248) = s(bool,X249) | s(bool,'T_0') = s(bool,X249)) ) | $spl0),
  inference(superposition,[],[f3265,f1507])).
fof(f25912,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | sP1(g(s(bool,X1)),X2) | p(s(bool,X2)) | s(bool,X1) = s(bool,X3) | s(bool,X0) = s(bool,X3)) ) | $spl0),
  inference(condensation,[],[f25911])).
fof(f25911,plain,(
  ( ! [X243,X241,X244,X242,X245] : (sP1(g(s(bool,X242)),X243) | p(s(bool,X243)) | s(bool,'T_0') = s(bool,X241) | s(bool,X242) = s(bool,X244) | s(bool,X244) = s(bool,X245) | s(bool,'T_0') = s(bool,X245)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22923])).
fof(f22923,plain,(
  ( ! [X243,X241,X244,X242,X245] : (sP1(g(s(bool,X242)),X243) | p(s(bool,X243)) | s(bool,'T_0') = s(bool,X241) | s(bool,X242) = s(bool,X244) | s(bool,'T_0') = s(bool,X241) | s(bool,X244) = s(bool,X245) | s(bool,'T_0') = s(bool,X245)) ) | $spl0),
  inference(superposition,[],[f3249,f1507])).
fof(f25914,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP4('T_0',g(s(bool,X1)),'F_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25913])).
fof(f25913,plain,(
  ( ! [X239,X237,X240,X238] : (~sP4('T_0',g(s(bool,X238)),'F_0') | s(bool,'T_0') = s(bool,X237) | s(bool,X238) = s(bool,X239) | s(bool,X239) = s(bool,X240) | s(bool,'T_0') = s(bool,X240)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22922])).
fof(f22922,plain,(
  ( ! [X239,X237,X240,X238] : (~sP4('T_0',g(s(bool,X238)),'F_0') | s(bool,'T_0') = s(bool,X237) | s(bool,X238) = s(bool,X239) | s(bool,'T_0') = s(bool,X237) | s(bool,X239) = s(bool,X240) | s(bool,'T_0') = s(bool,X240)) ) | $spl0),
  inference(superposition,[],[f2870,f1507])).
fof(f25916,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP5('T_0','T_0',g(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25915])).
fof(f25915,plain,(
  ( ! [X235,X233,X236,X234] : (sP5('T_0','T_0',g(s(bool,X234))) | s(bool,'T_0') = s(bool,X233) | s(bool,X234) = s(bool,X235) | s(bool,X235) = s(bool,X236) | s(bool,'T_0') = s(bool,X236)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22921])).
fof(f22921,plain,(
  ( ! [X235,X233,X236,X234] : (sP5('T_0','T_0',g(s(bool,X234))) | s(bool,'T_0') = s(bool,X233) | s(bool,X234) = s(bool,X235) | s(bool,'T_0') = s(bool,X233) | s(bool,X235) = s(bool,X236) | s(bool,'T_0') = s(bool,X236)) ) | $spl0),
  inference(superposition,[],[f2852,f1507])).
fof(f25918,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP4(g(s(bool,X1)),'T_0','F_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25917])).
fof(f25917,plain,(
  ( ! [X231,X229,X230,X232] : (~sP4(g(s(bool,X230)),'T_0','F_0') | s(bool,'T_0') = s(bool,X229) | s(bool,X230) = s(bool,X231) | s(bool,X231) = s(bool,X232) | s(bool,'T_0') = s(bool,X232)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22920])).
fof(f22920,plain,(
  ( ! [X231,X229,X230,X232] : (~sP4(g(s(bool,X230)),'T_0','F_0') | s(bool,'T_0') = s(bool,X229) | s(bool,X230) = s(bool,X231) | s(bool,'T_0') = s(bool,X229) | s(bool,X231) = s(bool,X232) | s(bool,'T_0') = s(bool,X232)) ) | $spl0),
  inference(superposition,[],[f2843,f1507])).
fof(f25920,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP6('T_0','T_0',g(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25919])).
fof(f25919,plain,(
  ( ! [X227,X225,X228,X226] : (sP6('T_0','T_0',g(s(bool,X226))) | s(bool,'T_0') = s(bool,X225) | s(bool,X226) = s(bool,X227) | s(bool,X227) = s(bool,X228) | s(bool,'T_0') = s(bool,X228)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22919])).
fof(f22919,plain,(
  ( ! [X227,X225,X228,X226] : (sP6('T_0','T_0',g(s(bool,X226))) | s(bool,'T_0') = s(bool,X225) | s(bool,X226) = s(bool,X227) | s(bool,'T_0') = s(bool,X225) | s(bool,X227) = s(bool,X228) | s(bool,'T_0') = s(bool,X228)) ) | $spl0),
  inference(superposition,[],[f2773,f1507])).
fof(f25922,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP6('F_0','T_0',g(s(bool,X1))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25921])).
fof(f25921,plain,(
  ( ! [X222,X223,X221,X224] : (~sP6('F_0','T_0',g(s(bool,X222))) | s(bool,'T_0') = s(bool,X221) | s(bool,X222) = s(bool,X223) | s(bool,X223) = s(bool,X224) | s(bool,'T_0') = s(bool,X224)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22918])).
fof(f22918,plain,(
  ( ! [X222,X223,X221,X224] : (~sP6('F_0','T_0',g(s(bool,X222))) | s(bool,'T_0') = s(bool,X221) | s(bool,X222) = s(bool,X223) | s(bool,'T_0') = s(bool,X221) | s(bool,X223) = s(bool,X224) | s(bool,'T_0') = s(bool,X224)) ) | $spl0),
  inference(superposition,[],[f2761,f1507])).
fof(f25924,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP6('T_0',g(s(bool,X1)),'T_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25923])).
fof(f25923,plain,(
  ( ! [X218,X220,X219,X217] : (sP6('T_0',g(s(bool,X218)),'T_0') | s(bool,'T_0') = s(bool,X217) | s(bool,X218) = s(bool,X219) | s(bool,X219) = s(bool,X220) | s(bool,'T_0') = s(bool,X220)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22917])).
fof(f22917,plain,(
  ( ! [X218,X220,X219,X217] : (sP6('T_0',g(s(bool,X218)),'T_0') | s(bool,'T_0') = s(bool,X217) | s(bool,X218) = s(bool,X219) | s(bool,'T_0') = s(bool,X217) | s(bool,X219) = s(bool,X220) | s(bool,'T_0') = s(bool,X220)) ) | $spl0),
  inference(superposition,[],[f2730,f1507])).
fof(f25926,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP6('F_0',g(s(bool,X1)),'T_0') | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25925])).
fof(f25925,plain,(
  ( ! [X216,X215,X213,X214] : (~sP6('F_0',g(s(bool,X214)),'T_0') | s(bool,'T_0') = s(bool,X213) | s(bool,X214) = s(bool,X215) | s(bool,X215) = s(bool,X216) | s(bool,'T_0') = s(bool,X216)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22916])).
fof(f22916,plain,(
  ( ! [X216,X215,X213,X214] : (~sP6('F_0',g(s(bool,X214)),'T_0') | s(bool,'T_0') = s(bool,X213) | s(bool,X214) = s(bool,X215) | s(bool,'T_0') = s(bool,X213) | s(bool,X215) = s(bool,X216) | s(bool,'T_0') = s(bool,X216)) ) | $spl0),
  inference(superposition,[],[f2719,f1507])).
fof(f25928,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | sP0(g(s(bool,X1)),X2) | s(bool,X1) = s(bool,X3) | s(bool,X0) = s(bool,X3)) ) | $spl0),
  inference(condensation,[],[f25927])).
fof(f25927,plain,(
  ( ! [X212,X210,X208,X211,X209] : (sP0(g(s(bool,X209)),X210) | s(bool,'T_0') = s(bool,X208) | s(bool,X209) = s(bool,X211) | s(bool,X211) = s(bool,X212) | s(bool,'T_0') = s(bool,X212)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22915])).
fof(f22915,plain,(
  ( ! [X212,X210,X208,X211,X209] : (sP0(g(s(bool,X209)),X210) | s(bool,'T_0') = s(bool,X208) | s(bool,X209) = s(bool,X211) | s(bool,'T_0') = s(bool,X208) | s(bool,X211) = s(bool,X212) | s(bool,'T_0') = s(bool,X212)) ) | $spl0),
  inference(superposition,[],[f2693,f1507])).
fof(f25930,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | sP0(X1,g(s(bool,X2))) | s(bool,X2) = s(bool,X3) | s(bool,X0) = s(bool,X3)) ) | $spl0),
  inference(condensation,[],[f25929])).
fof(f25929,plain,(
  ( ! [X206,X204,X207,X205,X203] : (sP0(X205,g(s(bool,X204))) | s(bool,'T_0') = s(bool,X203) | s(bool,X204) = s(bool,X206) | s(bool,X206) = s(bool,X207) | s(bool,'T_0') = s(bool,X207)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22914])).
fof(f22914,plain,(
  ( ! [X206,X204,X207,X205,X203] : (sP0(X205,g(s(bool,X204))) | s(bool,'T_0') = s(bool,X203) | s(bool,X204) = s(bool,X206) | s(bool,'T_0') = s(bool,X203) | s(bool,X206) = s(bool,X207) | s(bool,'T_0') = s(bool,X207)) ) | $spl0),
  inference(superposition,[],[f2685,f1507])).
fof(f25932,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,g(s(bool,X0))) | s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl0),
  inference(condensation,[],[f25931])).
fof(f25931,plain,(
  ( ! [X202,X200,X199,X201] : (s(bool,'T_0') = s(bool,g(s(bool,X200))) | s(bool,'T_0') = s(bool,X199) | s(bool,X200) = s(bool,X201) | s(bool,X201) = s(bool,X202) | s(bool,'T_0') = s(bool,X202)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f22913])).
fof(f22913,plain,(
  ( ! [X202,X200,X199,X201] : (s(bool,'T_0') = s(bool,g(s(bool,X200))) | s(bool,'T_0') = s(bool,X199) | s(bool,X200) = s(bool,X201) | s(bool,'T_0') = s(bool,X199) | s(bool,X201) = s(bool,X202) | s(bool,'T_0') = s(bool,X202)) ) | $spl0),
  inference(superposition,[],[f2602,f1507])).
fof(f18309,plain,(
  ( ! [X57,X56] : (s(bool,X56) = s(bool,g(s(bool,'F_0'))) | s(bool,X56) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) ) | $spl0),
  inference(subsumption_resolution,[],[f18277,f219])).
fof(f18277,plain,(
  ( ! [X57,X56] : (~p(s(bool,'T_0')) | s(bool,X56) = s(bool,g(s(bool,'F_0'))) | s(bool,X56) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) ) | $spl0),
  inference(superposition,[],[f2111,f1415])).
fof(f5074,plain,(
  ( ! [X116,X117] : (s(bool,'T_0') != s(bool,f(s(bool,sK18(X116,X117,bool,bool)))) | s(fun(bool,bool),X116) = s(fun(bool,bool),X117) | s(bool,'T_0') = s(bool,sK18(X116,X117,bool,bool))) ) | $spl0),
  inference(superposition,[],[f305,f2602])).
fof(f9504,plain,(
  ( ! [X19,X20] : (s(bool,'|dollar|exists_1'(s(fun(X19,bool),X20))) != s(bool,g(s(bool,'|dollar|exists_1'(s(fun(X19,bool),X20))))) | s(bool,'T_0') = s(bool,happ(s(fun(X19,bool),X20),s(X19,'const.min.@_1'(s(fun(X19,bool),X20)))))) ) | $spl0),
  inference(superposition,[],[f9094,f259])).
fof(f9064,plain,(
  ( ! [X17,X18] : (s(bool,'F_0') != s(bool,g(s(bool,'|dollar|exists_1'(s(fun(X17,bool),X18))))) | s(bool,'T_0') = s(bool,happ(s(fun(X17,bool),X18),s(X17,'const.min.@_1'(s(fun(X17,bool),X18)))))) ) | $spl0),
  inference(superposition,[],[f5096,f259])).
fof(f4998,plain,(
  ( ! [X15,X16] : (s(bool,'T_0') = s(bool,g(s(bool,'|dollar|exists_1'(s(fun(X15,bool),X16))))) | s(bool,'T_0') = s(bool,happ(s(fun(X15,bool),X16),s(X15,'const.min.@_1'(s(fun(X15,bool),X16)))))) ) | $spl0),
  inference(superposition,[],[f2602,f259])).
fof(f3662,plain,(
  ( ! [X2,X0,X1] : (~sP9(g(s(bool,'F_0')),X1,X2) | sP10(g(s(bool,X0)),X1,X2) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2665,f226])).
fof(f3677,plain,(
  ( ! [X2,X0,X1] : (~sP7(g(s(bool,'F_0')),X1,X2) | sP8(g(s(bool,X0)),X1,X2) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2666,f226])).
fof(f5080,plain,(
  ( ! [X1] : (p(s(bool,g(s(bool,X1)))) | s(bool,'T_0') = s(bool,X1)) ) | $spl0),
  inference(trivial_inequality_removal,[],[f5004])).
fof(f5004,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'T_0') | p(s(bool,g(s(bool,X1)))) | s(bool,'T_0') = s(bool,X1)) ) | $spl0),
  inference(superposition,[],[f232,f2602])).
fof(f5097,plain,(
  ( ! [X10,X9] : (~p(s(bool,X10)) | s(bool,X10) = s(bool,g(s(bool,X9))) | s(bool,'T_0') = s(bool,X9)) ) | $spl0),
  inference(subsumption_resolution,[],[f5010,f219])).
fof(f5010,plain,(
  ( ! [X10,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X10)) | s(bool,X10) = s(bool,g(s(bool,X9))) | s(bool,'T_0') = s(bool,X9)) ) | $spl0),
  inference(superposition,[],[f276,f2602])).
fof(f10788,plain,(
  ( ! [X37,X38] : (s(bool,g(s(bool,X37))) = s(bool,g(s(bool,X38))) | s(bool,'T_0') = s(bool,X38) | s(bool,'T_0') = s(bool,X37)) ) | $spl0),
  inference(subsumption_resolution,[],[f10771,f219])).
fof(f10771,plain,(
  ( ! [X37,X38] : (~p(s(bool,'T_0')) | s(bool,g(s(bool,X37))) = s(bool,g(s(bool,X38))) | s(bool,'T_0') = s(bool,X38) | s(bool,'T_0') = s(bool,X37)) ) | $spl0),
  inference(superposition,[],[f5097,f2602])).
fof(f11386,plain,(
  ( ! [X0,X1] : (sP10(g(s(bool,X0)),X1,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f3660,f226])).
fof(f10779,plain,(
  ( ! [X4,X2,X3] : (s(bool,X2) = s(bool,g(s(bool,X3))) | s(bool,'T_0') = s(bool,X3) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl0),
  inference(subsumption_resolution,[],[f10756,f219])).
fof(f10756,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'T_0')) | s(bool,X2) = s(bool,g(s(bool,X3))) | s(bool,'T_0') = s(bool,X3) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl0),
  inference(superposition,[],[f5097,f518])).
fof(f10731,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7(g(s(bool,X0)),X1,X2) | sP8(g(s(bool,X3)),X1,X2) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f3677,f226])).
fof(f10704,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9(g(s(bool,X0)),X1,X2) | sP10(g(s(bool,X3)),X1,X2) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f3662,f226])).
fof(f4862,plain,(
  ( ! [X0] : (~sP9(g(s(bool,X0)),'F_0','T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f4844,f226])).
fof(f4846,plain,(
  ( ! [X0] : (~sP10(g(s(bool,X0)),'F_0','T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f4832,f226])).
fof(f4835,plain,(
  ( ! [X2,X0,X1] : (~sP10(g(s(bool,X0)),X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2664,f226])).
fof(f4761,plain,(
  ( ! [X0] : (~sP10('T_0','F_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f4749,f226])).
fof(f4750,plain,(
  ( ! [X0] : (~sP9('T_0','F_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f4731,f226])).
fof(f4735,plain,(
  ( ! [X2,X0,X1] : (~sP9(X1,X2,g(s(bool,X0))) | ~p(s(bool,X1)) | p(s(bool,X2)) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2661,f226])).
fof(f4725,plain,(
  ( ! [X2,X0,X1] : (~sP8(g(s(bool,X0)),X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2660,f226])).
fof(f4644,plain,(
  ( ! [X0] : (~sP8(g(s(bool,X0)),'F_0','F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f4631,f226])).
fof(f4632,plain,(
  ( ! [X0] : (~sP7(g(s(bool,X0)),'F_0','F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f4606,f226])).
fof(f4609,plain,(
  ( ! [X2,X0,X1] : (~sP7(g(s(bool,X0)),X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2657,f226])).
fof(f4598,plain,(
  ( ! [X2,X0,X1] : (~sP4(X1,g(s(bool,X0)),X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2656,f226])).
fof(f4520,plain,(
  ( ! [X0] : (~sP6('T_0','F_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f4510,f226])).
fof(f4511,plain,(
  ( ! [X0] : (~sP5('T_0',g(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f4487,f226])).
fof(f3417,plain,(
  ( ! [X0,X1] : (sP10(g(s(bool,X0)),'T_0',X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f3405,f226])).
fof(f3406,plain,(
  ( ! [X2,X0,X1] : (sP10(g(s(bool,X0)),X1,X2) | ~p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2663,f226])).
fof(f3397,plain,(
  ( ! [X0,X1] : (sP10(g(s(bool,X0)),X1,'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f3380,f226])).
fof(f3372,plain,(
  ( ! [X0,X1] : (sP8(g(s(bool,X0)),'T_0',X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f3355,f226])).
fof(f3356,plain,(
  ( ! [X2,X0,X1] : (sP8(g(s(bool,X0)),X1,X2) | ~p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2659,f226])).
fof(f3347,plain,(
  ( ! [X0,X1] : (sP8(g(s(bool,X0)),X1,'T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f3325,f226])).
fof(f3326,plain,(
  ( ! [X2,X0,X1] : (sP8(g(s(bool,X0)),X1,X2) | ~p(s(bool,X2)) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2658,f226])).
fof(f3318,plain,(
  ( ! [X0,X1] : (sP2(X1,'T_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f3299,f226])).
fof(f3301,plain,(
  ( ! [X2,X0,X1] : (sP2(X1,X2,g(s(bool,X0))) | ~p(s(bool,X2)) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2654,f226])).
fof(f3292,plain,(
  ( ! [X0] : (sP1('F_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f3272,f226])).
fof(f3265,plain,(
  ( ! [X0] : (sP1(g(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f3248,f226])).
fof(f2870,plain,(
  ( ! [X0] : (~sP4('T_0',g(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2758,f226])).
fof(f2852,plain,(
  ( ! [X0] : (sP5('T_0','T_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2727,f226])).
fof(f2843,plain,(
  ( ! [X0] : (~sP4(g(s(bool,X0)),'T_0','F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2716,f226])).
fof(f2773,plain,(
  ( ! [X0] : (sP6('T_0','T_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2601,f226])).
fof(f2761,plain,(
  ( ! [X0] : (~sP6('F_0','T_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2600,f226])).
fof(f2730,plain,(
  ( ! [X0] : (sP6('T_0',g(s(bool,X0)),'T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2599,f226])).
fof(f2719,plain,(
  ( ! [X0] : (~sP6('F_0',g(s(bool,X0)),'T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2598,f226])).
fof(f2693,plain,(
  ( ! [X0,X1] : (sP0(g(s(bool,X0)),X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2651,f226])).
fof(f2685,plain,(
  ( ! [X0,X1] : (sP0(X1,g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl0),
  inference(superposition,[],[f2650,f226])).
fof(f34264,plain,(
  ( ! [X273] : (s(bool,'F_0') != s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X273))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X273))) = s(bool,happ(s(fun(bool,bool),X273),s(bool,'T_0')))) ) | $spl296),
  inference(cnf_transformation,[],[f34264_D])).
fof(f34264_D,plain,(
  ( ! [X273] : (s(bool,'F_0') != s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X273))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X273))) = s(bool,happ(s(fun(bool,bool),X273),s(bool,'T_0')))) ) <=> ~$spl296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl296])])).
fof(f34065,plain,(
  ( ! [X273,X272] : (s(bool,'F_0') != s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X273))))) | s(bool,'T_0') = s(bool,X272) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X273))) = s(bool,happ(s(fun(bool,bool),X273),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33681])).
fof(f33681,plain,(
  ( ! [X273,X272] : (s(bool,'F_0') != s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X273))))) | s(bool,'T_0') = s(bool,X272) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X273))) = s(bool,happ(s(fun(bool,bool),X273),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X272)) ) | $spl0),
  inference(superposition,[],[f5096,f1782])).
fof(f34263,plain,(
  ( ! [X271] : (p(s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X271)))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X271))) = s(bool,happ(s(fun(bool,bool),X271),s(bool,'T_0')))) ) | $spl294),
  inference(cnf_transformation,[],[f34263_D])).
fof(f34263_D,plain,(
  ( ! [X271] : (p(s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X271)))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X271))) = s(bool,happ(s(fun(bool,bool),X271),s(bool,'T_0')))) ) <=> ~$spl294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl294])])).
fof(f34066,plain,(
  ( ! [X271,X270] : (p(s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X271)))))) | s(bool,'T_0') = s(bool,X270) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X271))) = s(bool,happ(s(fun(bool,bool),X271),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33680])).
fof(f33680,plain,(
  ( ! [X271,X270] : (p(s(bool,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X271)))))) | s(bool,'T_0') = s(bool,X270) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X271))) = s(bool,happ(s(fun(bool,bool),X271),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X270)) ) | $spl0),
  inference(superposition,[],[f5080,f1782])).
fof(f34262,plain,(
  ( ! [X269] : (~sP9(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X269)))),'F_0','T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X269))) = s(bool,happ(s(fun(bool,bool),X269),s(bool,'T_0')))) ) | $spl292),
  inference(cnf_transformation,[],[f34262_D])).
fof(f34262_D,plain,(
  ( ! [X269] : (~sP9(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X269)))),'F_0','T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X269))) = s(bool,happ(s(fun(bool,bool),X269),s(bool,'T_0')))) ) <=> ~$spl292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl292])])).
fof(f34067,plain,(
  ( ! [X269,X268] : (~sP9(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X269)))),'F_0','T_0') | s(bool,'T_0') = s(bool,X268) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X269))) = s(bool,happ(s(fun(bool,bool),X269),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33679])).
fof(f33679,plain,(
  ( ! [X269,X268] : (~sP9(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X269)))),'F_0','T_0') | s(bool,'T_0') = s(bool,X268) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X269))) = s(bool,happ(s(fun(bool,bool),X269),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X268)) ) | $spl0),
  inference(superposition,[],[f4862,f1782])).
fof(f34261,plain,(
  ( ! [X267] : (~sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X267)))),'F_0','T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X267))) = s(bool,happ(s(fun(bool,bool),X267),s(bool,'T_0')))) ) | $spl290),
  inference(cnf_transformation,[],[f34261_D])).
fof(f34261_D,plain,(
  ( ! [X267] : (~sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X267)))),'F_0','T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X267))) = s(bool,happ(s(fun(bool,bool),X267),s(bool,'T_0')))) ) <=> ~$spl290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl290])])).
fof(f34068,plain,(
  ( ! [X267,X266] : (~sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X267)))),'F_0','T_0') | s(bool,'T_0') = s(bool,X266) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X267))) = s(bool,happ(s(fun(bool,bool),X267),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33678])).
fof(f33678,plain,(
  ( ! [X267,X266] : (~sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X267)))),'F_0','T_0') | s(bool,'T_0') = s(bool,X266) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X267))) = s(bool,happ(s(fun(bool,bool),X267),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X266)) ) | $spl0),
  inference(superposition,[],[f4846,f1782])).
fof(f34260,plain,(
  ( ! [X265] : (~sP10('T_0','F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X265))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X265))) = s(bool,happ(s(fun(bool,bool),X265),s(bool,'T_0')))) ) | $spl288),
  inference(cnf_transformation,[],[f34260_D])).
fof(f34260_D,plain,(
  ( ! [X265] : (~sP10('T_0','F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X265))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X265))) = s(bool,happ(s(fun(bool,bool),X265),s(bool,'T_0')))) ) <=> ~$spl288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl288])])).
fof(f34069,plain,(
  ( ! [X265,X264] : (~sP10('T_0','F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X265))))) | s(bool,'T_0') = s(bool,X264) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X265))) = s(bool,happ(s(fun(bool,bool),X265),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33677])).
fof(f33677,plain,(
  ( ! [X265,X264] : (~sP10('T_0','F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X265))))) | s(bool,'T_0') = s(bool,X264) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X265))) = s(bool,happ(s(fun(bool,bool),X265),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X264)) ) | $spl0),
  inference(superposition,[],[f4761,f1782])).
fof(f34259,plain,(
  ( ! [X263] : (~sP9('T_0','F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X263))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X263))) = s(bool,happ(s(fun(bool,bool),X263),s(bool,'T_0')))) ) | $spl286),
  inference(cnf_transformation,[],[f34259_D])).
fof(f34259_D,plain,(
  ( ! [X263] : (~sP9('T_0','F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X263))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X263))) = s(bool,happ(s(fun(bool,bool),X263),s(bool,'T_0')))) ) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f34070,plain,(
  ( ! [X263,X262] : (~sP9('T_0','F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X263))))) | s(bool,'T_0') = s(bool,X262) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X263))) = s(bool,happ(s(fun(bool,bool),X263),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33676])).
fof(f33676,plain,(
  ( ! [X263,X262] : (~sP9('T_0','F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X263))))) | s(bool,'T_0') = s(bool,X262) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X263))) = s(bool,happ(s(fun(bool,bool),X263),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X262)) ) | $spl0),
  inference(superposition,[],[f4750,f1782])).
fof(f34258,plain,(
  ( ! [X261] : (~sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X261)))),'F_0','F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X261))) = s(bool,happ(s(fun(bool,bool),X261),s(bool,'T_0')))) ) | $spl284),
  inference(cnf_transformation,[],[f34258_D])).
fof(f34258_D,plain,(
  ( ! [X261] : (~sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X261)))),'F_0','F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X261))) = s(bool,happ(s(fun(bool,bool),X261),s(bool,'T_0')))) ) <=> ~$spl284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl284])])).
fof(f34071,plain,(
  ( ! [X261,X260] : (~sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X261)))),'F_0','F_0') | s(bool,'T_0') = s(bool,X260) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X261))) = s(bool,happ(s(fun(bool,bool),X261),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33675])).
fof(f33675,plain,(
  ( ! [X261,X260] : (~sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X261)))),'F_0','F_0') | s(bool,'T_0') = s(bool,X260) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X261))) = s(bool,happ(s(fun(bool,bool),X261),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X260)) ) | $spl0),
  inference(superposition,[],[f4644,f1782])).
fof(f34257,plain,(
  ( ! [X259] : (~sP7(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X259)))),'F_0','F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X259))) = s(bool,happ(s(fun(bool,bool),X259),s(bool,'T_0')))) ) | $spl282),
  inference(cnf_transformation,[],[f34257_D])).
fof(f34257_D,plain,(
  ( ! [X259] : (~sP7(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X259)))),'F_0','F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X259))) = s(bool,happ(s(fun(bool,bool),X259),s(bool,'T_0')))) ) <=> ~$spl282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl282])])).
fof(f34072,plain,(
  ( ! [X259,X258] : (~sP7(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X259)))),'F_0','F_0') | s(bool,'T_0') = s(bool,X258) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X259))) = s(bool,happ(s(fun(bool,bool),X259),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33674])).
fof(f33674,plain,(
  ( ! [X259,X258] : (~sP7(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X259)))),'F_0','F_0') | s(bool,'T_0') = s(bool,X258) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X259))) = s(bool,happ(s(fun(bool,bool),X259),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X258)) ) | $spl0),
  inference(superposition,[],[f4632,f1782])).
fof(f34256,plain,(
  ( ! [X257] : (~sP6('T_0','F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X257))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X257))) = s(bool,happ(s(fun(bool,bool),X257),s(bool,'T_0')))) ) | $spl280),
  inference(cnf_transformation,[],[f34256_D])).
fof(f34256_D,plain,(
  ( ! [X257] : (~sP6('T_0','F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X257))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X257))) = s(bool,happ(s(fun(bool,bool),X257),s(bool,'T_0')))) ) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f34073,plain,(
  ( ! [X257,X256] : (~sP6('T_0','F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X257))))) | s(bool,'T_0') = s(bool,X256) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X257))) = s(bool,happ(s(fun(bool,bool),X257),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33673])).
fof(f33673,plain,(
  ( ! [X257,X256] : (~sP6('T_0','F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X257))))) | s(bool,'T_0') = s(bool,X256) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X257))) = s(bool,happ(s(fun(bool,bool),X257),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X256)) ) | $spl0),
  inference(superposition,[],[f4520,f1782])).
fof(f34255,plain,(
  ( ! [X255] : (~sP5('T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X255)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X255))) = s(bool,happ(s(fun(bool,bool),X255),s(bool,'T_0')))) ) | $spl278),
  inference(cnf_transformation,[],[f34255_D])).
fof(f34255_D,plain,(
  ( ! [X255] : (~sP5('T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X255)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X255))) = s(bool,happ(s(fun(bool,bool),X255),s(bool,'T_0')))) ) <=> ~$spl278),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl278])])).
fof(f34074,plain,(
  ( ! [X255,X254] : (~sP5('T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X255)))),'F_0') | s(bool,'T_0') = s(bool,X254) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X255))) = s(bool,happ(s(fun(bool,bool),X255),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33672])).
fof(f33672,plain,(
  ( ! [X255,X254] : (~sP5('T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X255)))),'F_0') | s(bool,'T_0') = s(bool,X254) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X255))) = s(bool,happ(s(fun(bool,bool),X255),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X254)) ) | $spl0),
  inference(superposition,[],[f4511,f1782])).
fof(f34254,plain,(
  ( ! [X253,X251,X252] : (~sP5(X252,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X251)))),X253) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X251))) = s(bool,happ(s(fun(bool,bool),X251),s(bool,'T_0'))) | ~p(s(bool,X252)) | p(s(bool,X253))) ) | $spl276),
  inference(cnf_transformation,[],[f34254_D])).
fof(f34254_D,plain,(
  ( ! [X253,X251,X252] : (~sP5(X252,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X251)))),X253) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X251))) = s(bool,happ(s(fun(bool,bool),X251),s(bool,'T_0'))) | ~p(s(bool,X252)) | p(s(bool,X253))) ) <=> ~$spl276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl276])])).
fof(f34075,plain,(
  ( ! [X253,X251,X252,X250] : (~sP5(X252,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X251)))),X253) | p(s(bool,X253)) | ~p(s(bool,X252)) | s(bool,'T_0') = s(bool,X250) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X251))) = s(bool,happ(s(fun(bool,bool),X251),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33671])).
fof(f33671,plain,(
  ( ! [X253,X251,X252,X250] : (~sP5(X252,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X251)))),X253) | p(s(bool,X253)) | ~p(s(bool,X252)) | s(bool,'T_0') = s(bool,X250) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X251))) = s(bool,happ(s(fun(bool,bool),X251),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X250)) ) | $spl0),
  inference(superposition,[],[f4492,f1782])).
fof(f34253,plain,(
  ( ! [X249,X248] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X248)))),'T_0',X249) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X248))) = s(bool,happ(s(fun(bool,bool),X248),s(bool,'T_0')))) ) | $spl274),
  inference(cnf_transformation,[],[f34253_D])).
fof(f34253_D,plain,(
  ( ! [X249,X248] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X248)))),'T_0',X249) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X248))) = s(bool,happ(s(fun(bool,bool),X248),s(bool,'T_0')))) ) <=> ~$spl274),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl274])])).
fof(f34076,plain,(
  ( ! [X249,X248,X247] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X248)))),'T_0',X249) | s(bool,'T_0') = s(bool,X247) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X248))) = s(bool,happ(s(fun(bool,bool),X248),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33670])).
fof(f33670,plain,(
  ( ! [X249,X248,X247] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X248)))),'T_0',X249) | s(bool,'T_0') = s(bool,X247) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X248))) = s(bool,happ(s(fun(bool,bool),X248),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X247)) ) | $spl0),
  inference(superposition,[],[f3417,f1782])).
fof(f34252,plain,(
  ( ! [X246,X244,X245] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X244)))),X245,X246) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X244))) = s(bool,happ(s(fun(bool,bool),X244),s(bool,'T_0'))) | ~p(s(bool,X245))) ) | $spl272),
  inference(cnf_transformation,[],[f34252_D])).
fof(f34252_D,plain,(
  ( ! [X246,X244,X245] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X244)))),X245,X246) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X244))) = s(bool,happ(s(fun(bool,bool),X244),s(bool,'T_0'))) | ~p(s(bool,X245))) ) <=> ~$spl272),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl272])])).
fof(f34077,plain,(
  ( ! [X243,X246,X244,X245] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X244)))),X245,X246) | ~p(s(bool,X245)) | s(bool,'T_0') = s(bool,X243) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X244))) = s(bool,happ(s(fun(bool,bool),X244),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33669])).
fof(f33669,plain,(
  ( ! [X243,X246,X244,X245] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X244)))),X245,X246) | ~p(s(bool,X245)) | s(bool,'T_0') = s(bool,X243) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X244))) = s(bool,happ(s(fun(bool,bool),X244),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X243)) ) | $spl0),
  inference(superposition,[],[f3406,f1782])).
fof(f34251,plain,(
  ( ! [X241,X242] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X241)))),X242,'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X241))) = s(bool,happ(s(fun(bool,bool),X241),s(bool,'T_0')))) ) | $spl270),
  inference(cnf_transformation,[],[f34251_D])).
fof(f34251_D,plain,(
  ( ! [X241,X242] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X241)))),X242,'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X241))) = s(bool,happ(s(fun(bool,bool),X241),s(bool,'T_0')))) ) <=> ~$spl270),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl270])])).
fof(f34078,plain,(
  ( ! [X241,X242,X240] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X241)))),X242,'F_0') | s(bool,'T_0') = s(bool,X240) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X241))) = s(bool,happ(s(fun(bool,bool),X241),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33668])).
fof(f33668,plain,(
  ( ! [X241,X242,X240] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X241)))),X242,'F_0') | s(bool,'T_0') = s(bool,X240) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X241))) = s(bool,happ(s(fun(bool,bool),X241),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X240)) ) | $spl0),
  inference(superposition,[],[f3397,f1782])).
fof(f34250,plain,(
  ( ! [X239,X237,X238] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X237)))),X238,X239) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X237))) = s(bool,happ(s(fun(bool,bool),X237),s(bool,'T_0'))) | p(s(bool,X239))) ) | $spl268),
  inference(cnf_transformation,[],[f34250_D])).
fof(f34250_D,plain,(
  ( ! [X239,X237,X238] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X237)))),X238,X239) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X237))) = s(bool,happ(s(fun(bool,bool),X237),s(bool,'T_0'))) | p(s(bool,X239))) ) <=> ~$spl268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl268])])).
fof(f34079,plain,(
  ( ! [X239,X237,X238,X236] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X237)))),X238,X239) | p(s(bool,X239)) | s(bool,'T_0') = s(bool,X236) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X237))) = s(bool,happ(s(fun(bool,bool),X237),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33667])).
fof(f33667,plain,(
  ( ! [X239,X237,X238,X236] : (sP10(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X237)))),X238,X239) | p(s(bool,X239)) | s(bool,'T_0') = s(bool,X236) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X237))) = s(bool,happ(s(fun(bool,bool),X237),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X236)) ) | $spl0),
  inference(superposition,[],[f3381,f1782])).
fof(f34249,plain,(
  ( ! [X235,X234] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X234)))),'T_0',X235) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X234))) = s(bool,happ(s(fun(bool,bool),X234),s(bool,'T_0')))) ) | $spl266),
  inference(cnf_transformation,[],[f34249_D])).
fof(f34249_D,plain,(
  ( ! [X235,X234] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X234)))),'T_0',X235) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X234))) = s(bool,happ(s(fun(bool,bool),X234),s(bool,'T_0')))) ) <=> ~$spl266),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl266])])).
fof(f34080,plain,(
  ( ! [X235,X233,X234] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X234)))),'T_0',X235) | s(bool,'T_0') = s(bool,X233) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X234))) = s(bool,happ(s(fun(bool,bool),X234),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33666])).
fof(f33666,plain,(
  ( ! [X235,X233,X234] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X234)))),'T_0',X235) | s(bool,'T_0') = s(bool,X233) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X234))) = s(bool,happ(s(fun(bool,bool),X234),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X233)) ) | $spl0),
  inference(superposition,[],[f3372,f1782])).
fof(f34248,plain,(
  ( ! [X231,X230,X232] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X230)))),X231,X232) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X230))) = s(bool,happ(s(fun(bool,bool),X230),s(bool,'T_0'))) | ~p(s(bool,X231))) ) | $spl264),
  inference(cnf_transformation,[],[f34248_D])).
fof(f34248_D,plain,(
  ( ! [X231,X230,X232] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X230)))),X231,X232) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X230))) = s(bool,happ(s(fun(bool,bool),X230),s(bool,'T_0'))) | ~p(s(bool,X231))) ) <=> ~$spl264),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl264])])).
fof(f34081,plain,(
  ( ! [X231,X229,X230,X232] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X230)))),X231,X232) | ~p(s(bool,X231)) | s(bool,'T_0') = s(bool,X229) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X230))) = s(bool,happ(s(fun(bool,bool),X230),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33665])).
fof(f33665,plain,(
  ( ! [X231,X229,X230,X232] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X230)))),X231,X232) | ~p(s(bool,X231)) | s(bool,'T_0') = s(bool,X229) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X230))) = s(bool,happ(s(fun(bool,bool),X230),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X229)) ) | $spl0),
  inference(superposition,[],[f3356,f1782])).
fof(f34247,plain,(
  ( ! [X227,X228] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X227)))),X228,'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X227))) = s(bool,happ(s(fun(bool,bool),X227),s(bool,'T_0')))) ) | $spl262),
  inference(cnf_transformation,[],[f34247_D])).
fof(f34247_D,plain,(
  ( ! [X227,X228] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X227)))),X228,'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X227))) = s(bool,happ(s(fun(bool,bool),X227),s(bool,'T_0')))) ) <=> ~$spl262),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl262])])).
fof(f34082,plain,(
  ( ! [X227,X228,X226] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X227)))),X228,'T_0') | s(bool,'T_0') = s(bool,X226) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X227))) = s(bool,happ(s(fun(bool,bool),X227),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33664])).
fof(f33664,plain,(
  ( ! [X227,X228,X226] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X227)))),X228,'T_0') | s(bool,'T_0') = s(bool,X226) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X227))) = s(bool,happ(s(fun(bool,bool),X227),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X226)) ) | $spl0),
  inference(superposition,[],[f3347,f1782])).
fof(f34246,plain,(
  ( ! [X222,X220,X221] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X220)))),X221,X222) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X220))) = s(bool,happ(s(fun(bool,bool),X220),s(bool,'T_0'))) | ~p(s(bool,X222))) ) | $spl260),
  inference(cnf_transformation,[],[f34246_D])).
fof(f34246_D,plain,(
  ( ! [X222,X220,X221] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X220)))),X221,X222) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X220))) = s(bool,happ(s(fun(bool,bool),X220),s(bool,'T_0'))) | ~p(s(bool,X222))) ) <=> ~$spl260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl260])])).
fof(f34085,plain,(
  ( ! [X222,X220,X219,X221] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X220)))),X221,X222) | ~p(s(bool,X222)) | s(bool,'T_0') = s(bool,X219) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X220))) = s(bool,happ(s(fun(bool,bool),X220),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33662])).
fof(f33662,plain,(
  ( ! [X222,X220,X219,X221] : (sP8(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X220)))),X221,X222) | ~p(s(bool,X222)) | s(bool,'T_0') = s(bool,X219) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X220))) = s(bool,happ(s(fun(bool,bool),X220),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X219)) ) | $spl0),
  inference(superposition,[],[f3326,f1782])).
fof(f34245,plain,(
  ( ! [X218,X217] : (sP2(X218,'T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X217))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X217))) = s(bool,happ(s(fun(bool,bool),X217),s(bool,'T_0')))) ) | $spl258),
  inference(cnf_transformation,[],[f34245_D])).
fof(f34245_D,plain,(
  ( ! [X218,X217] : (sP2(X218,'T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X217))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X217))) = s(bool,happ(s(fun(bool,bool),X217),s(bool,'T_0')))) ) <=> ~$spl258),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl258])])).
fof(f34086,plain,(
  ( ! [X218,X216,X217] : (sP2(X218,'T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X217))))) | s(bool,'T_0') = s(bool,X216) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X217))) = s(bool,happ(s(fun(bool,bool),X217),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33661])).
fof(f33661,plain,(
  ( ! [X218,X216,X217] : (sP2(X218,'T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X217))))) | s(bool,'T_0') = s(bool,X216) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X217))) = s(bool,happ(s(fun(bool,bool),X217),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X216)) ) | $spl0),
  inference(superposition,[],[f3318,f1782])).
fof(f34244,plain,(
  ( ! [X212,X210,X211] : (sP2(X211,X212,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X210))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X210))) = s(bool,happ(s(fun(bool,bool),X210),s(bool,'T_0'))) | ~p(s(bool,X212))) ) | $spl256),
  inference(cnf_transformation,[],[f34244_D])).
fof(f34244_D,plain,(
  ( ! [X212,X210,X211] : (sP2(X211,X212,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X210))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X210))) = s(bool,happ(s(fun(bool,bool),X210),s(bool,'T_0'))) | ~p(s(bool,X212))) ) <=> ~$spl256),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl256])])).
fof(f34089,plain,(
  ( ! [X212,X210,X211,X209] : (sP2(X211,X212,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X210))))) | ~p(s(bool,X212)) | s(bool,'T_0') = s(bool,X209) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X210))) = s(bool,happ(s(fun(bool,bool),X210),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33659])).
fof(f33659,plain,(
  ( ! [X212,X210,X211,X209] : (sP2(X211,X212,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X210))))) | ~p(s(bool,X212)) | s(bool,'T_0') = s(bool,X209) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X210))) = s(bool,happ(s(fun(bool,bool),X210),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X209)) ) | $spl0),
  inference(superposition,[],[f3301,f1782])).
fof(f34243,plain,(
  ( ! [X208] : (sP1('F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X208))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X208))) = s(bool,happ(s(fun(bool,bool),X208),s(bool,'T_0')))) ) | $spl254),
  inference(cnf_transformation,[],[f34243_D])).
fof(f34243_D,plain,(
  ( ! [X208] : (sP1('F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X208))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X208))) = s(bool,happ(s(fun(bool,bool),X208),s(bool,'T_0')))) ) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f34090,plain,(
  ( ! [X208,X207] : (sP1('F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X208))))) | s(bool,'T_0') = s(bool,X207) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X208))) = s(bool,happ(s(fun(bool,bool),X208),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33658])).
fof(f33658,plain,(
  ( ! [X208,X207] : (sP1('F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X208))))) | s(bool,'T_0') = s(bool,X207) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X208))) = s(bool,happ(s(fun(bool,bool),X208),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X207)) ) | $spl0),
  inference(superposition,[],[f3292,f1782])).
fof(f34242,plain,(
  ( ! [X202,X203] : (sP1(X203,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X202))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X202))) = s(bool,happ(s(fun(bool,bool),X202),s(bool,'T_0'))) | p(s(bool,X203))) ) | $spl252),
  inference(cnf_transformation,[],[f34242_D])).
fof(f34242_D,plain,(
  ( ! [X202,X203] : (sP1(X203,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X202))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X202))) = s(bool,happ(s(fun(bool,bool),X202),s(bool,'T_0'))) | p(s(bool,X203))) ) <=> ~$spl252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl252])])).
fof(f34093,plain,(
  ( ! [X202,X203,X201] : (sP1(X203,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X202))))) | p(s(bool,X203)) | s(bool,'T_0') = s(bool,X201) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X202))) = s(bool,happ(s(fun(bool,bool),X202),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33656])).
fof(f33656,plain,(
  ( ! [X202,X203,X201] : (sP1(X203,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X202))))) | p(s(bool,X203)) | s(bool,'T_0') = s(bool,X201) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X202))) = s(bool,happ(s(fun(bool,bool),X202),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X201)) ) | $spl0),
  inference(superposition,[],[f3273,f1782])).
fof(f34241,plain,(
  ( ! [X200] : (sP1(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X200)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X200))) = s(bool,happ(s(fun(bool,bool),X200),s(bool,'T_0')))) ) | $spl250),
  inference(cnf_transformation,[],[f34241_D])).
fof(f34241_D,plain,(
  ( ! [X200] : (sP1(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X200)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X200))) = s(bool,happ(s(fun(bool,bool),X200),s(bool,'T_0')))) ) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f34094,plain,(
  ( ! [X200,X199] : (sP1(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X200)))),'F_0') | s(bool,'T_0') = s(bool,X199) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X200))) = s(bool,happ(s(fun(bool,bool),X200),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33655])).
fof(f33655,plain,(
  ( ! [X200,X199] : (sP1(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X200)))),'F_0') | s(bool,'T_0') = s(bool,X199) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X200))) = s(bool,happ(s(fun(bool,bool),X200),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X199)) ) | $spl0),
  inference(superposition,[],[f3265,f1782])).
fof(f34240,plain,(
  ( ! [X194,X195] : (sP1(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X194)))),X195) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X194))) = s(bool,happ(s(fun(bool,bool),X194),s(bool,'T_0'))) | p(s(bool,X195))) ) | $spl248),
  inference(cnf_transformation,[],[f34240_D])).
fof(f34240_D,plain,(
  ( ! [X194,X195] : (sP1(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X194)))),X195) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X194))) = s(bool,happ(s(fun(bool,bool),X194),s(bool,'T_0'))) | p(s(bool,X195))) ) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f34097,plain,(
  ( ! [X194,X195,X193] : (sP1(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X194)))),X195) | p(s(bool,X195)) | s(bool,'T_0') = s(bool,X193) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X194))) = s(bool,happ(s(fun(bool,bool),X194),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33653])).
fof(f33653,plain,(
  ( ! [X194,X195,X193] : (sP1(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X194)))),X195) | p(s(bool,X195)) | s(bool,'T_0') = s(bool,X193) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X194))) = s(bool,happ(s(fun(bool,bool),X194),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X193)) ) | $spl0),
  inference(superposition,[],[f3249,f1782])).
fof(f34239,plain,(
  ( ! [X192] : (~sP4('T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X192)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X192))) = s(bool,happ(s(fun(bool,bool),X192),s(bool,'T_0')))) ) | $spl246),
  inference(cnf_transformation,[],[f34239_D])).
fof(f34239_D,plain,(
  ( ! [X192] : (~sP4('T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X192)))),'F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X192))) = s(bool,happ(s(fun(bool,bool),X192),s(bool,'T_0')))) ) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f34098,plain,(
  ( ! [X191,X192] : (~sP4('T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X192)))),'F_0') | s(bool,'T_0') = s(bool,X191) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X192))) = s(bool,happ(s(fun(bool,bool),X192),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33652])).
fof(f33652,plain,(
  ( ! [X191,X192] : (~sP4('T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X192)))),'F_0') | s(bool,'T_0') = s(bool,X191) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X192))) = s(bool,happ(s(fun(bool,bool),X192),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X191)) ) | $spl0),
  inference(superposition,[],[f2870,f1782])).
fof(f34238,plain,(
  ( ! [X190] : (sP5('T_0','T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X190))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X190))) = s(bool,happ(s(fun(bool,bool),X190),s(bool,'T_0')))) ) | $spl244),
  inference(cnf_transformation,[],[f34238_D])).
fof(f34238_D,plain,(
  ( ! [X190] : (sP5('T_0','T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X190))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X190))) = s(bool,happ(s(fun(bool,bool),X190),s(bool,'T_0')))) ) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f34099,plain,(
  ( ! [X189,X190] : (sP5('T_0','T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X190))))) | s(bool,'T_0') = s(bool,X189) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X190))) = s(bool,happ(s(fun(bool,bool),X190),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33651])).
fof(f33651,plain,(
  ( ! [X189,X190] : (sP5('T_0','T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X190))))) | s(bool,'T_0') = s(bool,X189) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X190))) = s(bool,happ(s(fun(bool,bool),X190),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X189)) ) | $spl0),
  inference(superposition,[],[f2852,f1782])).
fof(f34237,plain,(
  ( ! [X188] : (~sP4(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X188)))),'T_0','F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X188))) = s(bool,happ(s(fun(bool,bool),X188),s(bool,'T_0')))) ) | $spl242),
  inference(cnf_transformation,[],[f34237_D])).
fof(f34237_D,plain,(
  ( ! [X188] : (~sP4(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X188)))),'T_0','F_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X188))) = s(bool,happ(s(fun(bool,bool),X188),s(bool,'T_0')))) ) <=> ~$spl242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl242])])).
fof(f34100,plain,(
  ( ! [X187,X188] : (~sP4(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X188)))),'T_0','F_0') | s(bool,'T_0') = s(bool,X187) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X188))) = s(bool,happ(s(fun(bool,bool),X188),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33650])).
fof(f33650,plain,(
  ( ! [X187,X188] : (~sP4(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X188)))),'T_0','F_0') | s(bool,'T_0') = s(bool,X187) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X188))) = s(bool,happ(s(fun(bool,bool),X188),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X187)) ) | $spl0),
  inference(superposition,[],[f2843,f1782])).
fof(f34236,plain,(
  ( ! [X186] : (sP6('T_0','T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X186))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X186))) = s(bool,happ(s(fun(bool,bool),X186),s(bool,'T_0')))) ) | $spl240),
  inference(cnf_transformation,[],[f34236_D])).
fof(f34236_D,plain,(
  ( ! [X186] : (sP6('T_0','T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X186))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X186))) = s(bool,happ(s(fun(bool,bool),X186),s(bool,'T_0')))) ) <=> ~$spl240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl240])])).
fof(f34101,plain,(
  ( ! [X185,X186] : (sP6('T_0','T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X186))))) | s(bool,'T_0') = s(bool,X185) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X186))) = s(bool,happ(s(fun(bool,bool),X186),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33649])).
fof(f33649,plain,(
  ( ! [X185,X186] : (sP6('T_0','T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X186))))) | s(bool,'T_0') = s(bool,X185) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X186))) = s(bool,happ(s(fun(bool,bool),X186),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X185)) ) | $spl0),
  inference(superposition,[],[f2773,f1782])).
fof(f34235,plain,(
  ( ! [X184] : (~sP6('F_0','T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X184))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X184))) = s(bool,happ(s(fun(bool,bool),X184),s(bool,'T_0')))) ) | $spl238),
  inference(cnf_transformation,[],[f34235_D])).
fof(f34235_D,plain,(
  ( ! [X184] : (~sP6('F_0','T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X184))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X184))) = s(bool,happ(s(fun(bool,bool),X184),s(bool,'T_0')))) ) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f34102,plain,(
  ( ! [X184,X183] : (~sP6('F_0','T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X184))))) | s(bool,'T_0') = s(bool,X183) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X184))) = s(bool,happ(s(fun(bool,bool),X184),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33648])).
fof(f33648,plain,(
  ( ! [X184,X183] : (~sP6('F_0','T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X184))))) | s(bool,'T_0') = s(bool,X183) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X184))) = s(bool,happ(s(fun(bool,bool),X184),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X183)) ) | $spl0),
  inference(superposition,[],[f2761,f1782])).
fof(f34234,plain,(
  ( ! [X182] : (sP6('T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X182)))),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X182))) = s(bool,happ(s(fun(bool,bool),X182),s(bool,'T_0')))) ) | $spl236),
  inference(cnf_transformation,[],[f34234_D])).
fof(f34234_D,plain,(
  ( ! [X182] : (sP6('T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X182)))),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X182))) = s(bool,happ(s(fun(bool,bool),X182),s(bool,'T_0')))) ) <=> ~$spl236),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl236])])).
fof(f34103,plain,(
  ( ! [X182,X181] : (sP6('T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X182)))),'T_0') | s(bool,'T_0') = s(bool,X181) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X182))) = s(bool,happ(s(fun(bool,bool),X182),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33647])).
fof(f33647,plain,(
  ( ! [X182,X181] : (sP6('T_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X182)))),'T_0') | s(bool,'T_0') = s(bool,X181) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X182))) = s(bool,happ(s(fun(bool,bool),X182),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X181)) ) | $spl0),
  inference(superposition,[],[f2730,f1782])).
fof(f34233,plain,(
  ( ! [X180] : (~sP6('F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X180)))),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X180))) = s(bool,happ(s(fun(bool,bool),X180),s(bool,'T_0')))) ) | $spl234),
  inference(cnf_transformation,[],[f34233_D])).
fof(f34233_D,plain,(
  ( ! [X180] : (~sP6('F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X180)))),'T_0') | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X180))) = s(bool,happ(s(fun(bool,bool),X180),s(bool,'T_0')))) ) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f34104,plain,(
  ( ! [X180,X179] : (~sP6('F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X180)))),'T_0') | s(bool,'T_0') = s(bool,X179) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X180))) = s(bool,happ(s(fun(bool,bool),X180),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33646])).
fof(f33646,plain,(
  ( ! [X180,X179] : (~sP6('F_0',g(s(bool,'const.min.@_1'(s(fun(bool,bool),X180)))),'T_0') | s(bool,'T_0') = s(bool,X179) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X180))) = s(bool,happ(s(fun(bool,bool),X180),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X179)) ) | $spl0),
  inference(superposition,[],[f2719,f1782])).
fof(f34232,plain,(
  ( ! [X177,X178] : (sP0(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X177)))),X178) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X177))) = s(bool,happ(s(fun(bool,bool),X177),s(bool,'T_0')))) ) | $spl232),
  inference(cnf_transformation,[],[f34232_D])).
fof(f34232_D,plain,(
  ( ! [X177,X178] : (sP0(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X177)))),X178) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X177))) = s(bool,happ(s(fun(bool,bool),X177),s(bool,'T_0')))) ) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f34105,plain,(
  ( ! [X177,X178,X176] : (sP0(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X177)))),X178) | s(bool,'T_0') = s(bool,X176) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X177))) = s(bool,happ(s(fun(bool,bool),X177),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33645])).
fof(f33645,plain,(
  ( ! [X177,X178,X176] : (sP0(g(s(bool,'const.min.@_1'(s(fun(bool,bool),X177)))),X178) | s(bool,'T_0') = s(bool,X176) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X177))) = s(bool,happ(s(fun(bool,bool),X177),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X176)) ) | $spl0),
  inference(superposition,[],[f2693,f1782])).
fof(f34231,plain,(
  ( ! [X175,X174] : (sP0(X175,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X174))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X174))) = s(bool,happ(s(fun(bool,bool),X174),s(bool,'T_0')))) ) | $spl230),
  inference(cnf_transformation,[],[f34231_D])).
fof(f34231_D,plain,(
  ( ! [X175,X174] : (sP0(X175,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X174))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X174))) = s(bool,happ(s(fun(bool,bool),X174),s(bool,'T_0')))) ) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f34106,plain,(
  ( ! [X175,X173,X174] : (sP0(X175,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X174))))) | s(bool,'T_0') = s(bool,X173) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X174))) = s(bool,happ(s(fun(bool,bool),X174),s(bool,'T_0')))) ) | $spl0),
  inference(duplicate_literal_removal,[],[f33644])).
fof(f33644,plain,(
  ( ! [X175,X173,X174] : (sP0(X175,g(s(bool,'const.min.@_1'(s(fun(bool,bool),X174))))) | s(bool,'T_0') = s(bool,X173) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X174))) = s(bool,happ(s(fun(bool,bool),X174),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X173)) ) | $spl0),
  inference(superposition,[],[f2685,f1782])).
fof(f34111,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X1)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) = s(bool,happ(s(fun(bool,bool),X1),s(bool,'T_0')))) )),
  inference(condensation,[],[f34110])).
fof(f34110,plain,(
  ( ! [X2,X3,X1] : (s(bool,X1) = s(bool,X2) | ~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X3)))) | s(bool,'T_0') = s(bool,X1) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3))) = s(bool,happ(s(fun(bool,bool),X3),s(bool,'T_0')))) )),
  inference(duplicate_literal_removal,[],[f34109])).
fof(f34109,plain,(
  ( ! [X2,X3,X1] : (s(bool,X1) = s(bool,X2) | ~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X3)))) | s(bool,'T_0') = s(bool,X1) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3))) = s(bool,happ(s(fun(bool,bool),X3),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(condensation,[],[f33640])).
fof(f33640,plain,(
  ( ! [X161,X159,X162,X160] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X160)))) | s(bool,X159) = s(bool,X161) | s(bool,X161) = s(bool,X162) | s(bool,'T_0') = s(bool,X162) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X160))) = s(bool,happ(s(fun(bool,bool),X160),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X159)) )),
  inference(superposition,[],[f2111,f1782])).
fof(f34229,plain,(
  ( ! [X80,X79] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X80))) = s(bool,happ(s(fun(bool,bool),X80),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X79) | ~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X80))))) )),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618,f34228,f33619])).
fof(f34228,plain,(
  ( ! [X76,X75] : (s(bool,'T_0') = s(bool,X75) | ~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X76)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X76))) = s(bool,happ(s(fun(bool,bool),X76),s(bool,'T_0')))) )),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604,f34214,f33605,f33606,f33607,f33608,f33609,f33610,f33611,f33612,f33613,f33614,f33615,f33616,f33617,f33618])).
fof(f34227,plain,(
  ( ! [X74,X71,X73] : (~p(s(bool,X73)) | s(bool,'T_0') = s(bool,X71) | ~sP10(X71,X74,X73) | p(s(bool,X74))) ) | $spl228),
  inference(cnf_transformation,[],[f34227_D])).
fof(f34227_D,plain,(
  ( ! [X74,X71,X73] : (~p(s(bool,X73)) | s(bool,'T_0') = s(bool,X71) | ~sP10(X71,X74,X73) | p(s(bool,X74))) ) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f33617,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X72)))) | ~p(s(bool,X73)) | p(s(bool,X74)) | ~sP10(X71,X74,X73) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X72))) = s(bool,happ(s(fun(bool,bool),X72),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X71)) )),
  inference(superposition,[],[f372,f1782])).
fof(f34226,plain,(
  ( ! [X70,X69,X67] : (~p(s(bool,X69)) | s(bool,'T_0') = s(bool,X67) | sP10(X67,X69,X70)) ) | $spl226),
  inference(cnf_transformation,[],[f34226_D])).
fof(f34226_D,plain,(
  ( ! [X70,X69,X67] : (~p(s(bool,X69)) | s(bool,'T_0') = s(bool,X67) | sP10(X67,X69,X70)) ) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f33616,plain,(
  ( ! [X70,X68,X69,X67] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X68)))) | ~p(s(bool,X69)) | sP10(X67,X69,X70) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X68))) = s(bool,happ(s(fun(bool,bool),X68),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f371,f1782])).
fof(f34225,plain,(
  ( ! [X66,X65,X63] : (p(s(bool,X65)) | s(bool,'T_0') = s(bool,X63) | sP10(X63,X66,X65)) ) | $spl224),
  inference(cnf_transformation,[],[f34225_D])).
fof(f34225_D,plain,(
  ( ! [X66,X65,X63] : (p(s(bool,X65)) | s(bool,'T_0') = s(bool,X63) | sP10(X63,X66,X65)) ) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f33615,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X64)))) | p(s(bool,X65)) | sP10(X63,X66,X65) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X64))) = s(bool,happ(s(fun(bool,bool),X64),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X63)) )),
  inference(superposition,[],[f370,f1782])).
fof(f34224,plain,(
  ( ! [X61,X59,X62] : (p(s(bool,X61)) | s(bool,'T_0') = s(bool,X59) | ~sP9(X62,X61,X59) | ~p(s(bool,X62))) ) | $spl222),
  inference(cnf_transformation,[],[f34224_D])).
fof(f34224_D,plain,(
  ( ! [X61,X59,X62] : (p(s(bool,X61)) | s(bool,'T_0') = s(bool,X59) | ~sP9(X62,X61,X59) | ~p(s(bool,X62))) ) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f33614,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X60)))) | p(s(bool,X61)) | ~p(s(bool,X62)) | ~sP9(X62,X61,X59) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X60))) = s(bool,happ(s(fun(bool,bool),X60),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X59)) )),
  inference(superposition,[],[f365,f1782])).
fof(f34223,plain,(
  ( ! [X57,X58,X55] : (p(s(bool,X57)) | s(bool,'T_0') = s(bool,X55) | ~sP8(X55,X58,X57) | p(s(bool,X58))) ) | $spl220),
  inference(cnf_transformation,[],[f34223_D])).
fof(f34223_D,plain,(
  ( ! [X57,X58,X55] : (p(s(bool,X57)) | s(bool,'T_0') = s(bool,X55) | ~sP8(X55,X58,X57) | p(s(bool,X58))) ) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f33613,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X56)))) | p(s(bool,X57)) | p(s(bool,X58)) | ~sP8(X55,X58,X57) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X56))) = s(bool,happ(s(fun(bool,bool),X56),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X55)) )),
  inference(superposition,[],[f355,f1782])).
fof(f34222,plain,(
  ( ! [X54,X53,X51] : (~p(s(bool,X53)) | s(bool,'T_0') = s(bool,X51) | sP8(X51,X53,X54)) ) | $spl218),
  inference(cnf_transformation,[],[f34222_D])).
fof(f34222_D,plain,(
  ( ! [X54,X53,X51] : (~p(s(bool,X53)) | s(bool,'T_0') = s(bool,X51) | sP8(X51,X53,X54)) ) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f33612,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X52)))) | ~p(s(bool,X53)) | sP8(X51,X53,X54) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X52))) = s(bool,happ(s(fun(bool,bool),X52),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X51)) )),
  inference(superposition,[],[f354,f1782])).
fof(f34221,plain,(
  ( ! [X47,X50,X49] : (~p(s(bool,X49)) | s(bool,'T_0') = s(bool,X47) | sP8(X47,X50,X49)) ) | $spl216),
  inference(cnf_transformation,[],[f34221_D])).
fof(f34221_D,plain,(
  ( ! [X47,X50,X49] : (~p(s(bool,X49)) | s(bool,'T_0') = s(bool,X47) | sP8(X47,X50,X49)) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f33611,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X48)))) | ~p(s(bool,X49)) | sP8(X47,X50,X49) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X48))) = s(bool,happ(s(fun(bool,bool),X48),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f353,f1782])).
fof(f34220,plain,(
  ( ! [X45,X43,X46] : (p(s(bool,X45)) | s(bool,'T_0') = s(bool,X43) | ~sP7(X43,X45,X46) | p(s(bool,X46))) ) | $spl214),
  inference(cnf_transformation,[],[f34220_D])).
fof(f34220_D,plain,(
  ( ! [X45,X43,X46] : (p(s(bool,X45)) | s(bool,'T_0') = s(bool,X43) | ~sP7(X43,X45,X46) | p(s(bool,X46))) ) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f33610,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X44)))) | p(s(bool,X45)) | p(s(bool,X46)) | ~sP7(X43,X45,X46) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X44))) = s(bool,happ(s(fun(bool,bool),X44),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f348,f1782])).
fof(f34219,plain,(
  ( ! [X39,X41,X42] : (~p(s(bool,X41)) | s(bool,'T_0') = s(bool,X39) | ~sP4(X41,X39,X42) | p(s(bool,X42))) ) | $spl212),
  inference(cnf_transformation,[],[f34219_D])).
fof(f34219_D,plain,(
  ( ! [X39,X41,X42] : (~p(s(bool,X41)) | s(bool,'T_0') = s(bool,X39) | ~sP4(X41,X39,X42) | p(s(bool,X42))) ) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f33609,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X40)))) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP4(X41,X39,X42) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X40))) = s(bool,happ(s(fun(bool,bool),X40),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X39)) )),
  inference(superposition,[],[f329,f1782])).
fof(f34218,plain,(
  ( ! [X37,X35,X38] : (~p(s(bool,X37)) | s(bool,'T_0') = s(bool,X35) | ~sP5(X37,X35,X38) | p(s(bool,X38))) ) | $spl210),
  inference(cnf_transformation,[],[f34218_D])).
fof(f34218_D,plain,(
  ( ! [X37,X35,X38] : (~p(s(bool,X37)) | s(bool,'T_0') = s(bool,X35) | ~sP5(X37,X35,X38) | p(s(bool,X38))) ) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f33608,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X36)))) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP5(X37,X35,X38) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X36))) = s(bool,happ(s(fun(bool,bool),X36),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f325,f1782])).
fof(f34217,plain,(
  ( ! [X33,X31,X34] : (~p(s(bool,X33)) | s(bool,'T_0') = s(bool,X31) | sP2(X34,X33,X31)) ) | $spl208),
  inference(cnf_transformation,[],[f34217_D])).
fof(f34217_D,plain,(
  ( ! [X33,X31,X34] : (~p(s(bool,X33)) | s(bool,'T_0') = s(bool,X31) | sP2(X34,X33,X31)) ) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f33607,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X32)))) | ~p(s(bool,X33)) | sP2(X34,X33,X31) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X32))) = s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X31)) )),
  inference(superposition,[],[f310,f1782])).
fof(f34216,plain,(
  ( ! [X30,X28] : (p(s(bool,X30)) | s(bool,'T_0') = s(bool,X28) | sP1(X30,X28)) ) | $spl206),
  inference(cnf_transformation,[],[f34216_D])).
fof(f34216_D,plain,(
  ( ! [X30,X28] : (p(s(bool,X30)) | s(bool,'T_0') = s(bool,X28) | sP1(X30,X28)) ) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f33606,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X29)))) | p(s(bool,X30)) | sP1(X30,X28) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X29))) = s(bool,happ(s(fun(bool,bool),X29),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f299,f1782])).
fof(f34215,plain,(
  ( ! [X27,X25] : (p(s(bool,X27)) | s(bool,'T_0') = s(bool,X25) | sP1(X25,X27)) ) | $spl204),
  inference(cnf_transformation,[],[f34215_D])).
fof(f34215_D,plain,(
  ( ! [X27,X25] : (p(s(bool,X27)) | s(bool,'T_0') = s(bool,X25) | sP1(X25,X27)) ) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f33605,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X26)))) | p(s(bool,X27)) | sP1(X25,X27) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X26))) = s(bool,happ(s(fun(bool,bool),X26),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X25)) )),
  inference(superposition,[],[f296,f1782])).
fof(f34214,plain,(
  ( ! [X23,X22] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X23))) = s(bool,happ(s(fun(bool,bool),X23),s(bool,'T_0'))) | ~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X23)))) | s(bool,'T_0') = s(bool,X22)) )),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603,f34213,f33604])).
fof(f34213,plain,(
  ( ! [X19,X20] : (s(bool,'|dollar|exists_1'(s(fun(bool,bool),X20))) = s(bool,happ(s(fun(bool,bool),X20),s(bool,'T_0'))) | ~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X20)))) | s(bool,'T_0') = s(bool,X19)) )),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154,f34203,f33431,f33432,f33433,f33434,f33435,f33437,f33443,f33444,f33445,f33448,f33449,f33452,f33453,f33454,f33471,f33474,f33475,f33476,f33477,f33489,f33492,f33495,f33498,f34207,f34133,f34210,f34212,f33603])).
fof(f34212,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X1)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) = s(bool,happ(s(fun(bool,bool),X1),s(bool,'T_0')))) )),
  inference(condensation,[],[f34211])).
fof(f34211,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X17)))) | s(bool,X16) = s(bool,X18) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X17))) = s(bool,happ(s(fun(bool,bool),X17),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(subsumption_resolution,[],[f33602,f571])).
fof(f33602,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X17)))) | ~p(s(bool,X18)) | s(bool,X16) = s(bool,X18) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X17))) = s(bool,happ(s(fun(bool,bool),X17),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f276,f1782])).
fof(f34210,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X7)))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X7))) = s(bool,happ(s(fun(bool,bool),X7),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f33598,f226])).
fof(f33598,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X7)))) | s(bool,'F_0') != s(bool,X6) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X7))) = s(bool,happ(s(fun(bool,bool),X7),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f236,f1782])).
fof(f34133,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) | s(bool,'T_0') = s(bool,X4) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5))) = s(bool,happ(s(fun(bool,bool),X5),s(bool,'T_0')))) )),
  inference(duplicate_literal_removal,[],[f33597])).
fof(f33597,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.min.@_1'(s(fun(bool,bool),X5)))) | s(bool,'T_0') = s(bool,X4) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X5))) = s(bool,happ(s(fun(bool,bool),X5),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f233,f1782])).
fof(f34207,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,'const.min.@_1'(s(fun(bool,bool),X3))) | p(s(bool,X2)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3))) = s(bool,happ(s(fun(bool,bool),X3),s(bool,'T_0')))) )),
  inference(subsumption_resolution,[],[f33596,f232])).
fof(f33596,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,'const.min.@_1'(s(fun(bool,bool),X3))) | p(s(bool,X2)) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3))) = s(bool,happ(s(fun(bool,bool),X3),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f232,f1782])).
fof(f34202,plain,(
  ( ! [X94,X93] : (s(bool,'T_0') = s(bool,X93) | s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X94))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X94))) = s(bool,happ(s(fun(bool,bool),X94),s(bool,'T_0')))) ) | $spl44),
  inference(global_subsumption,[],[f33398,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f8999,f9100,f9625,f9671,f11335,f11487,f11490,f11499,f2129,f1409,f418,f383,f237,f236,f5744,f306,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f1398,f1386,f1374,f1362,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f9105,f9104,f9103,f9004,f9003,f9002,f3343,f3339,f3337,f3315,f3311,f3309,f3290,f3286,f3284,f3263,f3259,f3257,f8542,f8541,f8540,f8489,f8488,f8487,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1782,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1403,f1402,f1393,f1390,f1381,f1378,f1369,f1366,f1357,f1347,f1340,f1339,f1198,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1088,f1077,f11482,f11359,f8463,f8429,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1078,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f1410,f307,f2136,f5743,f15634,f15637,f15642,f15630,f16475,f17912,f17913,f17914,f17988,f17989,f17990,f18152,f18311,f21247,f27085,f21682,f21750,f26901,f26887,f21784,f21786,f21823,f22219,f22220,f22221,f22222,f22223,f22224,f22225,f22226,f22227,f22228,f22229,f22230,f22231,f22232,f22233,f22234,f22235,f22236,f22237,f22238,f22239,f22240,f22241,f22242,f22243,f22244,f27469,f27473,f27479,f27481,f27531,f22849,f22850,f22851,f22852,f22853,f22854,f22855,f22856,f22857,f22858,f22859,f22860,f22861,f22862,f22863,f22864,f22865,f22866,f22867,f22868,f22869,f22870,f22871,f22872,f22873,f22874,f27533,f27590,f27591,f23164,f23165,f23166,f23167,f23168,f23169,f23170,f23171,f23172,f23173,f23174,f23175,f23176,f23177,f23178,f23179,f23180,f23181,f23182,f23183,f23184,f23185,f23186,f23187,f23188,f23189,f23191,f27628,f27629,f27630,f27631,f27632,f27633,f27634,f27635,f27636,f27637,f27638,f27639,f27640,f27641,f27642,f27643,f27644,f27645,f27646,f27651,f27652,f27653,f27654,f27655,f27656,f27657,f27658,f27659,f27660,f27661,f27662,f27663,f27664,f27665,f23646,f23647,f23648,f23649,f23650,f23651,f23652,f23653,f23654,f23655,f23656,f23657,f23658,f23659,f23660,f23661,f23662,f23663,f23664,f23665,f23666,f23667,f23668,f23669,f23670,f23671,f27675,f27676,f27718,f27806,f24822,f27897,f28877,f29260,f29573,f30868,f30870,f30873,f30878,f31895,f31071,f31072,f31076,f31077,f31079,f31080,f31081,f31297,f31298,f31322,f32111,f32114,f32115,f32116,f32117,f32118,f32119,f32120,f32121,f32122,f32123,f32124,f32967,f32959,f32945,f32546,f33151,f33153,f33341,f33363,f33366,f33367,f33368,f33372,f33373,f34176,f34197,f34170,f34156,f34154])).
fof(f34201,plain,(
  ( ! [X83,X84] : (s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X84))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X84))) = s(bool,happ(s(fun(bool,bool),X84),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X83)) ) | $spl44),
  inference(subsumption_resolution,[],[f33396,f16322])).
fof(f33396,plain,(
  ( ! [X83,X84] : (s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X84))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X84))) = s(bool,happ(s(fun(bool,bool),X84),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,f(s(bool,X83))) | s(bool,'T_0') = s(bool,X83)) ) | $spl44),
  inference(superposition,[],[f1782,f5339])).
fof(f34200,plain,(
  ( ! [X70,X69] : (s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X70))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X70))) = s(bool,happ(s(fun(bool,bool),X70),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X69)) ) | ($spl44 | $spl65)),
  inference(forward_demodulation,[],[f34152,f20467])).
fof(f20467,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'T_0'))) | ($spl44 | $spl65)),
  inference(forward_demodulation,[],[f20446,f11057])).
fof(f20446,plain,(
  s(bool,f(s(bool,'T_0'))) = s(bool,f(s(bool,'F_0'))) | ($spl44 | $spl65)),
  inference(unit_resulting_resolution,[],[f219,f16154,f18797,f2111])).
fof(f34199,plain,(
  ( ! [X68,X67] : (s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X68))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X68))) = s(bool,happ(s(fun(bool,bool),X68),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X67)) ) | $spl44),
  inference(forward_demodulation,[],[f34153,f11057])).
fof(f34153,plain,(
  ( ! [X68,X67] : (s(bool,f(s(bool,'F_0'))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X68))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X68))) = s(bool,happ(s(fun(bool,bool),X68),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X67)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f33393])).
fof(f33393,plain,(
  ( ! [X68,X67] : (s(bool,f(s(bool,'F_0'))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X68))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X68))) = s(bool,happ(s(fun(bool,bool),X68),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X67) | s(bool,'T_0') = s(bool,X67)) ) | $spl44),
  inference(superposition,[],[f1782,f14679])).
fof(f34198,plain,(
  ( ! [X66,X65] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X65))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X66))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X65))) = s(bool,happ(s(fun(bool,bool),X65),s(bool,'T_0'))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X66))) = s(bool,happ(s(fun(bool,bool),X66),s(bool,'T_0')))) ) | $spl198),
  inference(cnf_transformation,[],[f34198_D])).
fof(f34198_D,plain,(
  ( ! [X66,X65] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X65))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X66))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X65))) = s(bool,happ(s(fun(bool,bool),X65),s(bool,'T_0'))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X66))) = s(bool,happ(s(fun(bool,bool),X66),s(bool,'T_0')))) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f34154,plain,(
  ( ! [X66,X64,X65] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X65))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X66))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X66))) = s(bool,happ(s(fun(bool,bool),X66),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X64) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X65))) = s(bool,happ(s(fun(bool,bool),X65),s(bool,'T_0')))) )),
  inference(duplicate_literal_removal,[],[f33392])).
fof(f33392,plain,(
  ( ! [X66,X64,X65] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X65))) = s(bool,'const.min.@_1'(s(fun(bool,bool),X66))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X66))) = s(bool,happ(s(fun(bool,bool),X66),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X64) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X65))) = s(bool,happ(s(fun(bool,bool),X65),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X64)) )),
  inference(superposition,[],[f1782,f1782])).
fof(f34197,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X15))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X15))) = s(bool,happ(s(fun(bool,bool),X15),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(forward_demodulation,[],[f34171,f418])).
fof(f34171,plain,(
  ( ! [X14,X15] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X15))) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X15))) = s(bool,happ(s(fun(bool,bool),X15),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(duplicate_literal_removal,[],[f33381])).
fof(f33381,plain,(
  ( ! [X14,X15] : (s(bool,'const.min.@_1'(s(fun(bool,bool),X15))) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X15))) = s(bool,happ(s(fun(bool,bool),X15),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X14) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f1782,f785])).
fof(f34176,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) = s(bool,happ(s(fun(bool,bool),X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f33376])).
fof(f33376,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.min.@_1'(s(fun(bool,bool),X1))) | s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) = s(bool,happ(s(fun(bool,bool),X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1782,f226])).
fof(f33154,plain,(
  ( ! [X222,X220,X219,X223] : (sP1(happ(s(fun(X219,bool),X220),s(X219,'const.min.@_1'(s(fun(X219,bool),X220)))),X222) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X219,bool),X220))) | s(bool,'T_0') = s(bool,X223) | s(bool,X222) = s(bool,X223)) ) | $spl194),
  inference(cnf_transformation,[],[f33154_D])).
fof(f33154_D,plain,(
  ( ! [X222,X220,X219,X223] : (sP1(happ(s(fun(X219,bool),X220),s(X219,'const.min.@_1'(s(fun(X219,bool),X220)))),X222) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X219,bool),X220))) | s(bool,'T_0') = s(bool,X223) | s(bool,X222) = s(bool,X223)) ) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f33153,plain,(
  ( ! [X222,X220,X219,X223,X221] : (p(s(bool,X221)) | sP1(happ(s(fun(X219,bool),X220),s(X219,'const.min.@_1'(s(fun(X219,bool),X220)))),X222) | s(bool,X222) = s(bool,X223) | s(bool,'T_0') = s(bool,X223) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X219,bool),X220)))) )),
  inference(subsumption_resolution,[],[f32622,f232])).
fof(f32622,plain,(
  ( ! [X222,X220,X219,X223,X221] : (p(s(bool,X221)) | sP1(happ(s(fun(X219,bool),X220),s(X219,'const.min.@_1'(s(fun(X219,bool),X220)))),X222) | s(bool,X222) = s(bool,X223) | s(bool,'T_0') = s(bool,X223) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X219,bool),X220))) | s(bool,'T_0') = s(bool,X221)) )),
  inference(superposition,[],[f2115,f1520])).
fof(f33152,plain,(
  ( ! [X218,X215,X217,X214] : (sP1(X217,happ(s(fun(X214,bool),X215),s(X214,'const.min.@_1'(s(fun(X214,bool),X215))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X214,bool),X215))) | s(bool,'T_0') = s(bool,X218) | s(bool,X217) = s(bool,X218)) ) | $spl192),
  inference(cnf_transformation,[],[f33152_D])).
fof(f33152_D,plain,(
  ( ! [X218,X215,X217,X214] : (sP1(X217,happ(s(fun(X214,bool),X215),s(X214,'const.min.@_1'(s(fun(X214,bool),X215))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X214,bool),X215))) | s(bool,'T_0') = s(bool,X218) | s(bool,X217) = s(bool,X218)) ) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f33151,plain,(
  ( ! [X218,X216,X215,X217,X214] : (p(s(bool,X216)) | sP1(X217,happ(s(fun(X214,bool),X215),s(X214,'const.min.@_1'(s(fun(X214,bool),X215))))) | s(bool,X217) = s(bool,X218) | s(bool,'T_0') = s(bool,X218) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X214,bool),X215)))) )),
  inference(subsumption_resolution,[],[f32621,f232])).
fof(f32621,plain,(
  ( ! [X218,X216,X215,X217,X214] : (p(s(bool,X216)) | sP1(X217,happ(s(fun(X214,bool),X215),s(X214,'const.min.@_1'(s(fun(X214,bool),X215))))) | s(bool,X217) = s(bool,X218) | s(bool,'T_0') = s(bool,X218) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X214,bool),X215))) | s(bool,'T_0') = s(bool,X216)) )),
  inference(superposition,[],[f2114,f1520])).
fof(f33150,plain,(
  ( ! [X202,X203] : (sP1(happ(s(fun(X202,bool),X203),s(X202,'const.min.@_1'(s(fun(X202,bool),X203)))),'T_0') | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X202,bool),X203)))) ) | $spl190),
  inference(cnf_transformation,[],[f33150_D])).
fof(f33150_D,plain,(
  ( ! [X202,X203] : (sP1(happ(s(fun(X202,bool),X203),s(X202,'const.min.@_1'(s(fun(X202,bool),X203)))),'T_0') | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X202,bool),X203)))) ) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f33149,plain,(
  ( ! [X204,X202,X203] : (p(s(bool,X204)) | sP1(happ(s(fun(X202,bool),X203),s(X202,'const.min.@_1'(s(fun(X202,bool),X203)))),'T_0') | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X202,bool),X203)))) ) | $spl10),
  inference(subsumption_resolution,[],[f32618,f232])).
fof(f32618,plain,(
  ( ! [X204,X202,X203] : (p(s(bool,X204)) | sP1(happ(s(fun(X202,bool),X203),s(X202,'const.min.@_1'(s(fun(X202,bool),X203)))),'T_0') | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X202,bool),X203))) | s(bool,'T_0') = s(bool,X204)) ) | $spl10),
  inference(superposition,[],[f2067,f1520])).
fof(f33148,plain,(
  ( ! [X200,X199] : (sP1('T_0',happ(s(fun(X199,bool),X200),s(X199,'const.min.@_1'(s(fun(X199,bool),X200))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X199,bool),X200)))) ) | $spl188),
  inference(cnf_transformation,[],[f33148_D])).
fof(f33148_D,plain,(
  ( ! [X200,X199] : (sP1('T_0',happ(s(fun(X199,bool),X200),s(X199,'const.min.@_1'(s(fun(X199,bool),X200))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X199,bool),X200)))) ) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f33147,plain,(
  ( ! [X200,X199,X201] : (p(s(bool,X201)) | sP1('T_0',happ(s(fun(X199,bool),X200),s(X199,'const.min.@_1'(s(fun(X199,bool),X200))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X199,bool),X200)))) ) | $spl6),
  inference(subsumption_resolution,[],[f32617,f232])).
fof(f32617,plain,(
  ( ! [X200,X199,X201] : (p(s(bool,X201)) | sP1('T_0',happ(s(fun(X199,bool),X200),s(X199,'const.min.@_1'(s(fun(X199,bool),X200))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X199,bool),X200))) | s(bool,'T_0') = s(bool,X201)) ) | $spl6),
  inference(superposition,[],[f2063,f1520])).
fof(f30874,plain,(
  ( ! [X47,X52,X50,X48,X53,X51] : (s(bool,X50) = s(bool,'const.pred_set.INJ_3'(s(fun(X47,'type.num.num'),X51),s(fun(X47,bool),X48),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X53) | s(bool,X52) = s(bool,X53) | s(bool,X52) = s(bool,'const.pred_set.countable_1'(s(fun(X47,bool),X48))) | s(bool,'T_0') = s(bool,X50)) ) | $spl186),
  inference(cnf_transformation,[],[f30874_D])).
fof(f30874_D,plain,(
  ( ! [X47,X52,X50,X48,X53,X51] : (s(bool,X50) = s(bool,'const.pred_set.INJ_3'(s(fun(X47,'type.num.num'),X51),s(fun(X47,bool),X48),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X53) | s(bool,X52) = s(bool,X53) | s(bool,X52) = s(bool,'const.pred_set.countable_1'(s(fun(X47,bool),X48))) | s(bool,'T_0') = s(bool,X50)) ) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f30878,plain,(
  ( ! [X80,X78,X76,X81,X79,X77,X75] : (p(s(bool,X77)) | s(bool,X78) = s(bool,'const.pred_set.INJ_3'(s(fun(X75,'type.num.num'),X79),s(fun(X75,bool),X76),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X78) | s(bool,X80) = s(bool,'const.pred_set.countable_1'(s(fun(X75,bool),X76))) | s(bool,X80) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) )),
  inference(subsumption_resolution,[],[f30864,f232])).
fof(f30864,plain,(
  ( ! [X80,X78,X76,X81,X79,X77,X75] : (p(s(bool,X77)) | s(bool,X78) = s(bool,'const.pred_set.INJ_3'(s(fun(X75,'type.num.num'),X79),s(fun(X75,bool),X76),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X78) | s(bool,X80) = s(bool,'const.pred_set.countable_1'(s(fun(X75,bool),X76))) | s(bool,X80) = s(bool,X81) | s(bool,'T_0') = s(bool,X81) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f2138,f1507])).
fof(f30873,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X49)) | s(bool,X50) = s(bool,'const.pred_set.INJ_3'(s(fun(X47,'type.num.num'),X51),s(fun(X47,bool),X48),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X50) | s(bool,X52) = s(bool,'const.pred_set.countable_1'(s(fun(X47,bool),X48))) | s(bool,X52) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f30860,f232])).
fof(f30860,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X49)) | s(bool,X50) = s(bool,'const.pred_set.INJ_3'(s(fun(X47,'type.num.num'),X51),s(fun(X47,bool),X48),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))) | s(bool,'T_0') = s(bool,X50) | s(bool,X52) = s(bool,'const.pred_set.countable_1'(s(fun(X47,bool),X48))) | s(bool,'T_0') = s(bool,X49) | s(bool,X52) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f2138,f1507])).
fof(f27532,plain,(
  ( ! [X1180,X1174,X1179,X1177,X1175,X1178] : (s(bool,X1177) = s(bool,happ(s(fun(X1174,bool),X1175),s(X1174,X1178))) | s(bool,'T_0') = s(bool,X1180) | s(bool,X1179) = s(bool,X1180) | s(bool,X1179) = s(bool,'|dollar|exists_1'(s(fun(X1174,bool),X1175))) | s(bool,'T_0') = s(bool,X1177)) ) | $spl182),
  inference(cnf_transformation,[],[f27532_D])).
fof(f27532_D,plain,(
  ( ! [X1180,X1174,X1179,X1177,X1175,X1178] : (s(bool,X1177) = s(bool,happ(s(fun(X1174,bool),X1175),s(X1174,X1178))) | s(bool,'T_0') = s(bool,X1180) | s(bool,X1179) = s(bool,X1180) | s(bool,X1179) = s(bool,'|dollar|exists_1'(s(fun(X1174,bool),X1175))) | s(bool,'T_0') = s(bool,X1177)) ) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f27718,plain,(
  ( ! [X1180,X1174,X1179,X1177,X1175,X1178,X1176] : (p(s(bool,X1176)) | s(bool,X1177) = s(bool,happ(s(fun(X1174,bool),X1175),s(X1174,X1178))) | s(bool,'T_0') = s(bool,X1177) | s(bool,X1179) = s(bool,'|dollar|exists_1'(s(fun(X1174,bool),X1175))) | s(bool,X1179) = s(bool,X1180) | s(bool,'T_0') = s(bool,X1180)) )),
  inference(subsumption_resolution,[],[f23949,f232])).
fof(f23949,plain,(
  ( ! [X1180,X1174,X1179,X1177,X1175,X1178,X1176] : (p(s(bool,X1176)) | s(bool,X1177) = s(bool,happ(s(fun(X1174,bool),X1175),s(X1174,X1178))) | s(bool,'T_0') = s(bool,X1177) | s(bool,X1179) = s(bool,'|dollar|exists_1'(s(fun(X1174,bool),X1175))) | s(bool,X1179) = s(bool,X1180) | s(bool,'T_0') = s(bool,X1180) | s(bool,'T_0') = s(bool,X1176)) )),
  inference(superposition,[],[f2131,f1507])).
fof(f27507,plain,(
  ( ! [X541,X543,X544] : (s(bool,f(s(bool,X541))) = s(bool,f(s(bool,f(s(bool,X541))))) | s(bool,'T_0') = s(bool,X544) | s(bool,X543) = s(bool,X544) | s(bool,X541) = s(bool,X543)) ) | $spl178),
  inference(cnf_transformation,[],[f27507_D])).
fof(f27507_D,plain,(
  ( ! [X541,X543,X544] : (s(bool,f(s(bool,X541))) = s(bool,f(s(bool,f(s(bool,X541))))) | s(bool,'T_0') = s(bool,X544) | s(bool,X543) = s(bool,X544) | s(bool,X541) = s(bool,X543)) ) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f27695,plain,(
  ( ! [X542,X541,X543,X544] : (p(s(bool,X542)) | s(bool,f(s(bool,X541))) = s(bool,f(s(bool,f(s(bool,X541))))) | s(bool,X541) = s(bool,X543) | s(bool,X543) = s(bool,X544) | s(bool,'T_0') = s(bool,X544)) ) | $spl44),
  inference(subsumption_resolution,[],[f23786,f232])).
fof(f23786,plain,(
  ( ! [X542,X541,X543,X544] : (p(s(bool,X542)) | s(bool,f(s(bool,X541))) = s(bool,f(s(bool,f(s(bool,X541))))) | s(bool,X541) = s(bool,X543) | s(bool,X543) = s(bool,X544) | s(bool,'T_0') = s(bool,X544) | s(bool,'T_0') = s(bool,X542)) ) | $spl44),
  inference(superposition,[],[f17011,f1507])).
fof(f27495,plain,(
  ( ! [X516,X513,X515] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X513))))))) | s(bool,'T_0') = s(bool,X516) | s(bool,X515) = s(bool,X516) | s(bool,X513) = s(bool,X515)) ) | $spl174),
  inference(cnf_transformation,[],[f27495_D])).
fof(f27495_D,plain,(
  ( ! [X516,X513,X515] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X513))))))) | s(bool,'T_0') = s(bool,X516) | s(bool,X515) = s(bool,X516) | s(bool,X513) = s(bool,X515)) ) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f27685,plain,(
  ( ! [X516,X514,X513,X515] : (p(s(bool,X514)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X513))))))) | s(bool,X513) = s(bool,X515) | s(bool,X515) = s(bool,X516) | s(bool,'T_0') = s(bool,X516)) ) | $spl44),
  inference(subsumption_resolution,[],[f23780,f232])).
fof(f23780,plain,(
  ( ! [X516,X514,X513,X515] : (p(s(bool,X514)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X513))))))) | s(bool,X513) = s(bool,X515) | s(bool,X515) = s(bool,X516) | s(bool,'T_0') = s(bool,X516) | s(bool,'T_0') = s(bool,X514)) ) | $spl44),
  inference(superposition,[],[f16816,f1507])).
fof(f27482,plain,(
  ( ! [X198,X196,X197,X195,X193] : (sP1(X193,X195) | s(bool,'T_0') = s(bool,X198) | s(bool,X197) = s(bool,X198) | s(bool,X193) = s(bool,X197) | s(bool,'T_0') = s(bool,X196) | s(bool,X195) = s(bool,X196)) ) | $spl166),
  inference(cnf_transformation,[],[f27482_D])).
fof(f27482_D,plain,(
  ( ! [X198,X196,X197,X195,X193] : (sP1(X193,X195) | s(bool,'T_0') = s(bool,X198) | s(bool,X197) = s(bool,X198) | s(bool,X193) = s(bool,X197) | s(bool,'T_0') = s(bool,X196) | s(bool,X195) = s(bool,X196)) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f27676,plain,(
  ( ! [X198,X196,X194,X197,X195,X193] : (p(s(bool,X194)) | sP1(X193,X195) | s(bool,X195) = s(bool,X196) | s(bool,'T_0') = s(bool,X196) | s(bool,X193) = s(bool,X197) | s(bool,X197) = s(bool,X198) | s(bool,'T_0') = s(bool,X198)) )),
  inference(subsumption_resolution,[],[f23709,f232])).
fof(f23709,plain,(
  ( ! [X198,X196,X194,X197,X195,X193] : (p(s(bool,X194)) | sP1(X193,X195) | s(bool,X195) = s(bool,X196) | s(bool,'T_0') = s(bool,X196) | s(bool,X193) = s(bool,X197) | s(bool,X197) = s(bool,X198) | s(bool,'T_0') = s(bool,X198) | s(bool,'T_0') = s(bool,X194)) )),
  inference(superposition,[],[f2115,f1507])).
fof(f27480,plain,(
  ( ! [X191,X189,X187,X192,X190] : (sP1(X189,X187) | s(bool,'T_0') = s(bool,X192) | s(bool,X191) = s(bool,X192) | s(bool,X187) = s(bool,X191) | s(bool,'T_0') = s(bool,X190) | s(bool,X189) = s(bool,X190)) ) | $spl164),
  inference(cnf_transformation,[],[f27480_D])).
fof(f27480_D,plain,(
  ( ! [X191,X189,X187,X192,X190] : (sP1(X189,X187) | s(bool,'T_0') = s(bool,X192) | s(bool,X191) = s(bool,X192) | s(bool,X187) = s(bool,X191) | s(bool,'T_0') = s(bool,X190) | s(bool,X189) = s(bool,X190)) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f27675,plain,(
  ( ! [X191,X189,X187,X192,X190,X188] : (p(s(bool,X188)) | sP1(X189,X187) | s(bool,X189) = s(bool,X190) | s(bool,'T_0') = s(bool,X190) | s(bool,X187) = s(bool,X191) | s(bool,X191) = s(bool,X192) | s(bool,'T_0') = s(bool,X192)) )),
  inference(subsumption_resolution,[],[f23708,f232])).
fof(f23708,plain,(
  ( ! [X191,X189,X187,X192,X190,X188] : (p(s(bool,X188)) | sP1(X189,X187) | s(bool,X189) = s(bool,X190) | s(bool,'T_0') = s(bool,X190) | s(bool,X187) = s(bool,X191) | s(bool,X191) = s(bool,X192) | s(bool,'T_0') = s(bool,X192) | s(bool,'T_0') = s(bool,X188)) )),
  inference(superposition,[],[f2114,f1507])).
fof(f27478,plain,(
  ( ! [X175,X174,X172] : (sP1(X172,'T_0') | s(bool,'T_0') = s(bool,X175) | s(bool,X174) = s(bool,X175) | s(bool,X172) = s(bool,X174)) ) | $spl162),
  inference(cnf_transformation,[],[f27478_D])).
fof(f27478_D,plain,(
  ( ! [X175,X174,X172] : (sP1(X172,'T_0') | s(bool,'T_0') = s(bool,X175) | s(bool,X174) = s(bool,X175) | s(bool,X172) = s(bool,X174)) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f27674,plain,(
  ( ! [X175,X173,X174,X172] : (p(s(bool,X173)) | sP1(X172,'T_0') | s(bool,X172) = s(bool,X174) | s(bool,X174) = s(bool,X175) | s(bool,'T_0') = s(bool,X175)) ) | $spl10),
  inference(subsumption_resolution,[],[f23705,f232])).
fof(f23705,plain,(
  ( ! [X175,X173,X174,X172] : (p(s(bool,X173)) | sP1(X172,'T_0') | s(bool,X172) = s(bool,X174) | s(bool,X174) = s(bool,X175) | s(bool,'T_0') = s(bool,X175) | s(bool,'T_0') = s(bool,X173)) ) | $spl10),
  inference(superposition,[],[f2067,f1507])).
fof(f27476,plain,(
  ( ! [X171,X170,X168] : (sP1('T_0',X168) | s(bool,'T_0') = s(bool,X171) | s(bool,X170) = s(bool,X171) | s(bool,X168) = s(bool,X170)) ) | $spl160),
  inference(cnf_transformation,[],[f27476_D])).
fof(f27476_D,plain,(
  ( ! [X171,X170,X168] : (sP1('T_0',X168) | s(bool,'T_0') = s(bool,X171) | s(bool,X170) = s(bool,X171) | s(bool,X168) = s(bool,X170)) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f27673,plain,(
  ( ! [X171,X169,X170,X168] : (p(s(bool,X169)) | sP1('T_0',X168) | s(bool,X168) = s(bool,X170) | s(bool,X170) = s(bool,X171) | s(bool,'T_0') = s(bool,X171)) ) | $spl6),
  inference(subsumption_resolution,[],[f23704,f232])).
fof(f23704,plain,(
  ( ! [X171,X169,X170,X168] : (p(s(bool,X169)) | sP1('T_0',X168) | s(bool,X168) = s(bool,X170) | s(bool,X170) = s(bool,X171) | s(bool,'T_0') = s(bool,X171) | s(bool,'T_0') = s(bool,X169)) ) | $spl6),
  inference(superposition,[],[f2063,f1507])).
fof(f27534,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') != s(bool,X5) | s(bool,'T_0') = s(bool,X7) | s(bool,X6) = s(bool,X7) | s(bool,X5) = s(bool,X6)) ) | $spl184),
  inference(cnf_transformation,[],[f27534_D])).
fof(f27534_D,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') != s(bool,X5) | s(bool,'T_0') = s(bool,X7) | s(bool,X6) = s(bool,X7) | s(bool,X5) = s(bool,X6)) ) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f27533,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') != s(bool,X5) | p(s(bool,X4)) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f22876,f232])).
fof(f22876,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') != s(bool,X5) | p(s(bool,X4)) | s(bool,X5) = s(bool,X6) | s(bool,'T_0') = s(bool,X4) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f232,f1507])).
fof(f27531,plain,(
  ( ! [X1180,X1174,X1179,X1177,X1175,X1178,X1176] : (p(s(bool,X1176)) | s(bool,X1177) = s(bool,happ(s(fun(X1174,bool),X1175),s(X1174,X1178))) | s(bool,'T_0') = s(bool,X1177) | s(bool,X1179) = s(bool,'|dollar|exists_1'(s(fun(X1174,bool),X1175))) | s(bool,X1179) = s(bool,X1180) | s(bool,'T_0') = s(bool,X1180)) )),
  inference(subsumption_resolution,[],[f22837,f232])).
fof(f22837,plain,(
  ( ! [X1180,X1174,X1179,X1177,X1175,X1178,X1176] : (p(s(bool,X1176)) | s(bool,X1177) = s(bool,happ(s(fun(X1174,bool),X1175),s(X1174,X1178))) | s(bool,'T_0') = s(bool,X1177) | s(bool,X1179) = s(bool,'|dollar|exists_1'(s(fun(X1174,bool),X1175))) | s(bool,'T_0') = s(bool,X1176) | s(bool,X1179) = s(bool,X1180) | s(bool,'T_0') = s(bool,X1180)) )),
  inference(superposition,[],[f2131,f1507])).
fof(f27509,plain,(
  ( ! [X565,X567,X568] : (s(bool,X565) = s(bool,f(s(bool,f(s(bool,X565))))) | s(bool,'T_0') = s(bool,X568) | s(bool,X567) = s(bool,X568) | s(bool,X565) = s(bool,X567)) ) | $spl180),
  inference(cnf_transformation,[],[f27509_D])).
fof(f27509_D,plain,(
  ( ! [X565,X567,X568] : (s(bool,X565) = s(bool,f(s(bool,f(s(bool,X565))))) | s(bool,'T_0') = s(bool,X568) | s(bool,X567) = s(bool,X568) | s(bool,X565) = s(bool,X567)) ) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f27508,plain,(
  ( ! [X565,X567,X568,X566] : (p(s(bool,X566)) | s(bool,X565) = s(bool,f(s(bool,f(s(bool,X565))))) | s(bool,X565) = s(bool,X567) | s(bool,X567) = s(bool,X568) | s(bool,'T_0') = s(bool,X568)) ) | $spl44),
  inference(subsumption_resolution,[],[f22680,f232])).
fof(f22680,plain,(
  ( ! [X565,X567,X568,X566] : (p(s(bool,X566)) | s(bool,X565) = s(bool,f(s(bool,f(s(bool,X565))))) | s(bool,X565) = s(bool,X567) | s(bool,'T_0') = s(bool,X566) | s(bool,X567) = s(bool,X568) | s(bool,'T_0') = s(bool,X568)) ) | $spl44),
  inference(superposition,[],[f18313,f1507])).
fof(f27506,plain,(
  ( ! [X542,X541,X543,X544] : (p(s(bool,X542)) | s(bool,f(s(bool,X541))) = s(bool,f(s(bool,f(s(bool,X541))))) | s(bool,X541) = s(bool,X543) | s(bool,X543) = s(bool,X544) | s(bool,'T_0') = s(bool,X544)) ) | $spl44),
  inference(subsumption_resolution,[],[f22674,f232])).
fof(f22674,plain,(
  ( ! [X542,X541,X543,X544] : (p(s(bool,X542)) | s(bool,f(s(bool,X541))) = s(bool,f(s(bool,f(s(bool,X541))))) | s(bool,X541) = s(bool,X543) | s(bool,'T_0') = s(bool,X542) | s(bool,X543) = s(bool,X544) | s(bool,'T_0') = s(bool,X544)) ) | $spl44),
  inference(superposition,[],[f17011,f1507])).
fof(f27497,plain,(
  ( ! [X520,X517,X519] : (s(bool,X517) = s(bool,f(s(bool,X517))) | s(bool,'T_0') = s(bool,X520) | s(bool,X519) = s(bool,X520) | s(bool,X517) = s(bool,X519)) ) | $spl176),
  inference(cnf_transformation,[],[f27497_D])).
fof(f27497_D,plain,(
  ( ! [X520,X517,X519] : (s(bool,X517) = s(bool,f(s(bool,X517))) | s(bool,'T_0') = s(bool,X520) | s(bool,X519) = s(bool,X520) | s(bool,X517) = s(bool,X519)) ) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f27496,plain,(
  ( ! [X520,X518,X517,X519] : (p(s(bool,X518)) | s(bool,X517) = s(bool,f(s(bool,X517))) | s(bool,X517) = s(bool,X519) | s(bool,X519) = s(bool,X520) | s(bool,'T_0') = s(bool,X520)) ) | $spl44),
  inference(subsumption_resolution,[],[f22669,f232])).
fof(f22669,plain,(
  ( ! [X520,X518,X517,X519] : (p(s(bool,X518)) | s(bool,X517) = s(bool,f(s(bool,X517))) | s(bool,X517) = s(bool,X519) | s(bool,'T_0') = s(bool,X518) | s(bool,X519) = s(bool,X520) | s(bool,'T_0') = s(bool,X520)) ) | $spl44),
  inference(superposition,[],[f16886,f1507])).
fof(f27494,plain,(
  ( ! [X516,X514,X513,X515] : (p(s(bool,X514)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X513))))))) | s(bool,X513) = s(bool,X515) | s(bool,X515) = s(bool,X516) | s(bool,'T_0') = s(bool,X516)) ) | $spl44),
  inference(subsumption_resolution,[],[f22668,f232])).
fof(f22668,plain,(
  ( ! [X516,X514,X513,X515] : (p(s(bool,X514)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X513))))))) | s(bool,X513) = s(bool,X515) | s(bool,'T_0') = s(bool,X514) | s(bool,X515) = s(bool,X516) | s(bool,'T_0') = s(bool,X516)) ) | $spl44),
  inference(superposition,[],[f16816,f1507])).
fof(f27493,plain,(
  ( ! [X476,X475,X473] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X473))))) | s(bool,'T_0') = s(bool,X476) | s(bool,X475) = s(bool,X476) | s(bool,X473) = s(bool,X475)) ) | $spl172),
  inference(cnf_transformation,[],[f27493_D])).
fof(f27493_D,plain,(
  ( ! [X476,X475,X473] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X473))))) | s(bool,'T_0') = s(bool,X476) | s(bool,X475) = s(bool,X476) | s(bool,X473) = s(bool,X475)) ) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f27492,plain,(
  ( ! [X476,X474,X475,X473] : (p(s(bool,X474)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X473))))) | s(bool,X473) = s(bool,X475) | s(bool,X475) = s(bool,X476) | s(bool,'T_0') = s(bool,X476)) ) | $spl44),
  inference(subsumption_resolution,[],[f22658,f232])).
fof(f22658,plain,(
  ( ! [X476,X474,X475,X473] : (p(s(bool,X474)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X473))))) | s(bool,X473) = s(bool,X475) | s(bool,'T_0') = s(bool,X474) | s(bool,X475) = s(bool,X476) | s(bool,'T_0') = s(bool,X476)) ) | $spl44),
  inference(superposition,[],[f15724,f1507])).
fof(f27491,plain,(
  ( ! [X463,X460,X462,X464] : (s(bool,X462) = s(bool,f(s(bool,X460))) | s(bool,'T_0') = s(bool,X464) | s(bool,X463) = s(bool,X464) | s(bool,X460) = s(bool,X463) | s(bool,'T_0') = s(bool,X462)) ) | $spl170),
  inference(cnf_transformation,[],[f27491_D])).
fof(f27491_D,plain,(
  ( ! [X463,X460,X462,X464] : (s(bool,X462) = s(bool,f(s(bool,X460))) | s(bool,'T_0') = s(bool,X464) | s(bool,X463) = s(bool,X464) | s(bool,X460) = s(bool,X463) | s(bool,'T_0') = s(bool,X462)) ) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f27490,plain,(
  ( ! [X461,X463,X460,X462,X464] : (p(s(bool,X461)) | s(bool,X462) = s(bool,f(s(bool,X460))) | s(bool,'T_0') = s(bool,X462) | s(bool,X460) = s(bool,X463) | s(bool,X463) = s(bool,X464) | s(bool,'T_0') = s(bool,X464)) ) | $spl44),
  inference(subsumption_resolution,[],[f22655,f232])).
fof(f22655,plain,(
  ( ! [X461,X463,X460,X462,X464] : (p(s(bool,X461)) | s(bool,X462) = s(bool,f(s(bool,X460))) | s(bool,'T_0') = s(bool,X462) | s(bool,X460) = s(bool,X463) | s(bool,'T_0') = s(bool,X461) | s(bool,X463) = s(bool,X464) | s(bool,'T_0') = s(bool,X464)) ) | $spl44),
  inference(superposition,[],[f15601,f1507])).
fof(f27485,plain,(
  ( ! [X449,X446,X448] : (s(bool,'F_0') = s(bool,f(s(bool,X446))) | s(bool,'T_0') = s(bool,X449) | s(bool,X448) = s(bool,X449) | s(bool,X446) = s(bool,X448)) ) | $spl168),
  inference(cnf_transformation,[],[f27485_D])).
fof(f27485_D,plain,(
  ( ! [X449,X446,X448] : (s(bool,'F_0') = s(bool,f(s(bool,X446))) | s(bool,'T_0') = s(bool,X449) | s(bool,X448) = s(bool,X449) | s(bool,X446) = s(bool,X448)) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f27484,plain,(
  ( ! [X447,X449,X446,X448] : (p(s(bool,X447)) | s(bool,'F_0') = s(bool,f(s(bool,X446))) | s(bool,X446) = s(bool,X448) | s(bool,X448) = s(bool,X449) | s(bool,'T_0') = s(bool,X449)) ) | $spl44),
  inference(subsumption_resolution,[],[f22652,f232])).
fof(f22652,plain,(
  ( ! [X447,X449,X446,X448] : (p(s(bool,X447)) | s(bool,'F_0') = s(bool,f(s(bool,X446))) | s(bool,X446) = s(bool,X448) | s(bool,'T_0') = s(bool,X447) | s(bool,X448) = s(bool,X449) | s(bool,'T_0') = s(bool,X449)) ) | $spl44),
  inference(superposition,[],[f15599,f1507])).
fof(f27481,plain,(
  ( ! [X198,X196,X194,X197,X195,X193] : (p(s(bool,X194)) | sP1(X193,X195) | s(bool,X195) = s(bool,X196) | s(bool,'T_0') = s(bool,X196) | s(bool,X193) = s(bool,X197) | s(bool,X197) = s(bool,X198) | s(bool,'T_0') = s(bool,X198)) )),
  inference(subsumption_resolution,[],[f22597,f232])).
fof(f22597,plain,(
  ( ! [X198,X196,X194,X197,X195,X193] : (p(s(bool,X194)) | sP1(X193,X195) | s(bool,X195) = s(bool,X196) | s(bool,'T_0') = s(bool,X196) | s(bool,X193) = s(bool,X197) | s(bool,'T_0') = s(bool,X194) | s(bool,X197) = s(bool,X198) | s(bool,'T_0') = s(bool,X198)) )),
  inference(superposition,[],[f2115,f1507])).
fof(f27479,plain,(
  ( ! [X191,X189,X187,X192,X190,X188] : (p(s(bool,X188)) | sP1(X189,X187) | s(bool,X189) = s(bool,X190) | s(bool,'T_0') = s(bool,X190) | s(bool,X187) = s(bool,X191) | s(bool,X191) = s(bool,X192) | s(bool,'T_0') = s(bool,X192)) )),
  inference(subsumption_resolution,[],[f22596,f232])).
fof(f22596,plain,(
  ( ! [X191,X189,X187,X192,X190,X188] : (p(s(bool,X188)) | sP1(X189,X187) | s(bool,X189) = s(bool,X190) | s(bool,'T_0') = s(bool,X190) | s(bool,X187) = s(bool,X191) | s(bool,'T_0') = s(bool,X188) | s(bool,X191) = s(bool,X192) | s(bool,'T_0') = s(bool,X192)) )),
  inference(superposition,[],[f2114,f1507])).
fof(f27477,plain,(
  ( ! [X175,X173,X174,X172] : (p(s(bool,X173)) | sP1(X172,'T_0') | s(bool,X172) = s(bool,X174) | s(bool,X174) = s(bool,X175) | s(bool,'T_0') = s(bool,X175)) ) | $spl10),
  inference(subsumption_resolution,[],[f22593,f232])).
fof(f22593,plain,(
  ( ! [X175,X173,X174,X172] : (p(s(bool,X173)) | sP1(X172,'T_0') | s(bool,X172) = s(bool,X174) | s(bool,'T_0') = s(bool,X173) | s(bool,X174) = s(bool,X175) | s(bool,'T_0') = s(bool,X175)) ) | $spl10),
  inference(superposition,[],[f2067,f1507])).
fof(f27475,plain,(
  ( ! [X171,X169,X170,X168] : (p(s(bool,X169)) | sP1('T_0',X168) | s(bool,X168) = s(bool,X170) | s(bool,X170) = s(bool,X171) | s(bool,'T_0') = s(bool,X171)) ) | $spl6),
  inference(subsumption_resolution,[],[f22592,f232])).
fof(f22592,plain,(
  ( ! [X171,X169,X170,X168] : (p(s(bool,X169)) | sP1('T_0',X168) | s(bool,X168) = s(bool,X170) | s(bool,'T_0') = s(bool,X169) | s(bool,X170) = s(bool,X171) | s(bool,'T_0') = s(bool,X171)) ) | $spl6),
  inference(superposition,[],[f2063,f1507])).
fof(f27474,plain,(
  ( ! [X167,X165,X166,X164,X162] : (s(bool,X162) != s(bool,X164) | s(bool,'T_0') = s(bool,X167) | s(bool,X166) = s(bool,X167) | s(bool,X162) = s(bool,X166) | s(bool,'T_0') = s(bool,X165) | s(bool,X164) = s(bool,X165)) ) | $spl158),
  inference(cnf_transformation,[],[f27474_D])).
fof(f27474_D,plain,(
  ( ! [X167,X165,X166,X164,X162] : (s(bool,X162) != s(bool,X164) | s(bool,'T_0') = s(bool,X167) | s(bool,X166) = s(bool,X167) | s(bool,X162) = s(bool,X166) | s(bool,'T_0') = s(bool,X165) | s(bool,X164) = s(bool,X165)) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f27473,plain,(
  ( ! [X167,X165,X163,X166,X164,X162] : (p(s(bool,X163)) | s(bool,X162) != s(bool,X164) | s(bool,X164) = s(bool,X165) | s(bool,'T_0') = s(bool,X165) | s(bool,X162) = s(bool,X166) | s(bool,X166) = s(bool,X167) | s(bool,'T_0') = s(bool,X167)) )),
  inference(subsumption_resolution,[],[f22591,f232])).
fof(f22591,plain,(
  ( ! [X167,X165,X163,X166,X164,X162] : (p(s(bool,X163)) | s(bool,X162) != s(bool,X164) | s(bool,X164) = s(bool,X165) | s(bool,'T_0') = s(bool,X165) | s(bool,X162) = s(bool,X166) | s(bool,'T_0') = s(bool,X163) | s(bool,X166) = s(bool,X167) | s(bool,'T_0') = s(bool,X167)) )),
  inference(superposition,[],[f1693,f1507])).
fof(f18792,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | $spl58),
  inference(cnf_transformation,[],[f18792_D])).
fof(f18792_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f19647,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | ($spl44 | $spl56)),
  inference(forward_demodulation,[],[f19522,f11057])).
fof(f19522,plain,(
  s(bool,f(s(bool,'T_0'))) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | ($spl44 | $spl56)),
  inference(superposition,[],[f14679,f18729])).
fof(f18729,plain,(
  s(bool,f(s(bool,'T_0'))) = s(bool,g(s(bool,'T_0'))) | $spl56),
  inference(cnf_transformation,[],[f18729_D])).
fof(f18729_D,plain,(
  s(bool,f(s(bool,'T_0'))) = s(bool,g(s(bool,'T_0'))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f19598,plain,(
  ( ! [X45,X46] : (sP1(g(s(bool,'T_0')),X45) | s(bool,'T_0') = s(bool,X46) | s(bool,X45) = s(bool,X46)) ) | $spl156),
  inference(cnf_transformation,[],[f19598_D])).
fof(f19598_D,plain,(
  ( ! [X45,X46] : (sP1(g(s(bool,'T_0')),X45) | s(bool,'T_0') = s(bool,X46) | s(bool,X45) = s(bool,X46)) ) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f19572,plain,(
  p(s(bool,f(s(bool,'T_0')))) | $spl116),
  inference(cnf_transformation,[],[f19572_D])).
fof(f19572_D,plain,(
  p(s(bool,f(s(bool,'T_0')))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f19475,plain,(
  ( ! [X45,X46] : (p(s(bool,f(s(bool,'T_0')))) | sP1(g(s(bool,'T_0')),X45) | s(bool,X45) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) ) | $spl56),
  inference(superposition,[],[f2115,f18729])).
fof(f19597,plain,(
  ( ! [X43,X44] : (sP1(X43,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X44) | s(bool,X43) = s(bool,X44)) ) | $spl154),
  inference(cnf_transformation,[],[f19597_D])).
fof(f19597_D,plain,(
  ( ! [X43,X44] : (sP1(X43,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X44) | s(bool,X43) = s(bool,X44)) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f19474,plain,(
  ( ! [X43,X44] : (p(s(bool,f(s(bool,'T_0')))) | sP1(X43,g(s(bool,'T_0'))) | s(bool,X43) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) ) | $spl56),
  inference(superposition,[],[f2114,f18729])).
fof(f18795,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl62),
  inference(cnf_transformation,[],[f18795_D])).
fof(f18795_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f18794,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | $spl61),
  inference(cnf_transformation,[],[f18794_D])).
fof(f18794_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) <=> ~$spl61),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl61])])).
fof(f19472,plain,(
  ( ! [X40] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(bool,X40) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X40)) ) | $spl56),
  inference(superposition,[],[f2110,f18729])).
fof(f19595,plain,(
  sP1(g(s(bool,'T_0')),'T_0') | $spl152),
  inference(cnf_transformation,[],[f19595_D])).
fof(f19595_D,plain,(
  sP1(g(s(bool,'T_0')),'T_0') <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f19471,plain,(
  p(s(bool,f(s(bool,'T_0')))) | sP1(g(s(bool,'T_0')),'T_0') | ($spl10 | $spl56)),
  inference(superposition,[],[f2067,f18729])).
fof(f19593,plain,(
  sP1('T_0',g(s(bool,'T_0'))) | $spl150),
  inference(cnf_transformation,[],[f19593_D])).
fof(f19593_D,plain,(
  sP1('T_0',g(s(bool,'T_0'))) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f19470,plain,(
  p(s(bool,f(s(bool,'T_0')))) | sP1('T_0',g(s(bool,'T_0'))) | ($spl6 | $spl56)),
  inference(superposition,[],[f2063,f18729])).
fof(f18796,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'T_0'))) | $spl64),
  inference(cnf_transformation,[],[f18796_D])).
fof(f18796_D,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'T_0'))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f19467,plain,(
  ( ! [X36] : (s(bool,'T_0') = s(bool,f(s(bool,'T_0'))) | s(bool,X36) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X36)) ) | $spl56),
  inference(superposition,[],[f518,f18729])).
fof(f19562,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) ) | $spl112),
  inference(cnf_transformation,[],[f19562_D])).
fof(f19562_D,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f19466,plain,(
  ( ! [X35] : (s(bool,X35) = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X35)) ) | $spl56),
  inference(superposition,[],[f518,f18729])).
fof(f19465,plain,(
  ( ! [X34] : (s(bool,X34) = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X34) | s(bool,'T_0') = s(bool,g(s(bool,'T_0')))) ) | $spl56),
  inference(superposition,[],[f518,f18729])).
fof(f19464,plain,(
  ( ! [X33] : (s(bool,'T_0') = s(bool,f(s(bool,'T_0'))) | s(bool,X33) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X33)) ) | $spl56),
  inference(superposition,[],[f518,f18729])).
fof(f19589,plain,(
  ( ! [X31,X32] : (~sP7(g(s(bool,'T_0')),X31,X32) | sP8(g(s(bool,'T_0')),X31,X32)) ) | $spl148),
  inference(cnf_transformation,[],[f19589_D])).
fof(f19589_D,plain,(
  ( ! [X31,X32] : (~sP7(g(s(bool,'T_0')),X31,X32) | sP8(g(s(bool,'T_0')),X31,X32)) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f19463,plain,(
  ( ! [X31,X32] : (~p(s(bool,f(s(bool,'T_0')))) | ~sP7(g(s(bool,'T_0')),X31,X32) | sP8(g(s(bool,'T_0')),X31,X32)) ) | $spl56),
  inference(superposition,[],[f376,f18729])).
fof(f19588,plain,(
  ( ! [X30,X29] : (~sP9(g(s(bool,'T_0')),X29,X30) | sP10(g(s(bool,'T_0')),X29,X30)) ) | $spl146),
  inference(cnf_transformation,[],[f19588_D])).
fof(f19588_D,plain,(
  ( ! [X30,X29] : (~sP9(g(s(bool,'T_0')),X29,X30) | sP10(g(s(bool,'T_0')),X29,X30)) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f19462,plain,(
  ( ! [X30,X29] : (~p(s(bool,f(s(bool,'T_0')))) | ~sP9(g(s(bool,'T_0')),X29,X30) | sP10(g(s(bool,'T_0')),X29,X30)) ) | $spl56),
  inference(superposition,[],[f375,f18729])).
fof(f19587,plain,(
  ( ! [X28,X27] : (~p(s(bool,X27)) | p(s(bool,X28)) | ~sP10(g(s(bool,'T_0')),X28,X27)) ) | $spl144),
  inference(cnf_transformation,[],[f19587_D])).
fof(f19587_D,plain,(
  ( ! [X28,X27] : (~p(s(bool,X27)) | p(s(bool,X28)) | ~sP10(g(s(bool,'T_0')),X28,X27)) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f19461,plain,(
  ( ! [X28,X27] : (~p(s(bool,f(s(bool,'T_0')))) | ~p(s(bool,X27)) | p(s(bool,X28)) | ~sP10(g(s(bool,'T_0')),X28,X27)) ) | $spl56),
  inference(superposition,[],[f372,f18729])).
fof(f19586,plain,(
  ( ! [X26,X25] : (~p(s(bool,X25)) | sP10(g(s(bool,'T_0')),X25,X26)) ) | $spl142),
  inference(cnf_transformation,[],[f19586_D])).
fof(f19586_D,plain,(
  ( ! [X26,X25] : (~p(s(bool,X25)) | sP10(g(s(bool,'T_0')),X25,X26)) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f19460,plain,(
  ( ! [X26,X25] : (~p(s(bool,f(s(bool,'T_0')))) | ~p(s(bool,X25)) | sP10(g(s(bool,'T_0')),X25,X26)) ) | $spl56),
  inference(superposition,[],[f371,f18729])).
fof(f19585,plain,(
  ( ! [X24,X23] : (p(s(bool,X23)) | sP10(g(s(bool,'T_0')),X24,X23)) ) | $spl140),
  inference(cnf_transformation,[],[f19585_D])).
fof(f19585_D,plain,(
  ( ! [X24,X23] : (p(s(bool,X23)) | sP10(g(s(bool,'T_0')),X24,X23)) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f19459,plain,(
  ( ! [X24,X23] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,X23)) | sP10(g(s(bool,'T_0')),X24,X23)) ) | $spl56),
  inference(superposition,[],[f370,f18729])).
fof(f19584,plain,(
  ( ! [X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | ~sP9(X22,X21,g(s(bool,'T_0')))) ) | $spl138),
  inference(cnf_transformation,[],[f19584_D])).
fof(f19584_D,plain,(
  ( ! [X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | ~sP9(X22,X21,g(s(bool,'T_0')))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f19458,plain,(
  ( ! [X21,X22] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,X21)) | ~p(s(bool,X22)) | ~sP9(X22,X21,g(s(bool,'T_0')))) ) | $spl56),
  inference(superposition,[],[f365,f18729])).
fof(f19583,plain,(
  ( ! [X19,X20] : (p(s(bool,X19)) | p(s(bool,X20)) | ~sP8(g(s(bool,'T_0')),X20,X19)) ) | $spl136),
  inference(cnf_transformation,[],[f19583_D])).
fof(f19583_D,plain,(
  ( ! [X19,X20] : (p(s(bool,X19)) | p(s(bool,X20)) | ~sP8(g(s(bool,'T_0')),X20,X19)) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f19457,plain,(
  ( ! [X19,X20] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,X19)) | p(s(bool,X20)) | ~sP8(g(s(bool,'T_0')),X20,X19)) ) | $spl56),
  inference(superposition,[],[f355,f18729])).
fof(f19582,plain,(
  ( ! [X17,X18] : (~p(s(bool,X17)) | sP8(g(s(bool,'T_0')),X17,X18)) ) | $spl134),
  inference(cnf_transformation,[],[f19582_D])).
fof(f19582_D,plain,(
  ( ! [X17,X18] : (~p(s(bool,X17)) | sP8(g(s(bool,'T_0')),X17,X18)) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f19456,plain,(
  ( ! [X17,X18] : (~p(s(bool,f(s(bool,'T_0')))) | ~p(s(bool,X17)) | sP8(g(s(bool,'T_0')),X17,X18)) ) | $spl56),
  inference(superposition,[],[f354,f18729])).
fof(f19581,plain,(
  ( ! [X15,X16] : (~p(s(bool,X15)) | sP8(g(s(bool,'T_0')),X16,X15)) ) | $spl132),
  inference(cnf_transformation,[],[f19581_D])).
fof(f19581_D,plain,(
  ( ! [X15,X16] : (~p(s(bool,X15)) | sP8(g(s(bool,'T_0')),X16,X15)) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f19455,plain,(
  ( ! [X15,X16] : (~p(s(bool,f(s(bool,'T_0')))) | ~p(s(bool,X15)) | sP8(g(s(bool,'T_0')),X16,X15)) ) | $spl56),
  inference(superposition,[],[f353,f18729])).
fof(f19580,plain,(
  ( ! [X14,X13] : (p(s(bool,X13)) | ~sP7(g(s(bool,'T_0')),X13,X14) | p(s(bool,X14))) ) | $spl130),
  inference(cnf_transformation,[],[f19580_D])).
fof(f19580_D,plain,(
  ( ! [X14,X13] : (p(s(bool,X13)) | ~sP7(g(s(bool,'T_0')),X13,X14) | p(s(bool,X14))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f19454,plain,(
  ( ! [X14,X13] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,X13)) | p(s(bool,X14)) | ~sP7(g(s(bool,'T_0')),X13,X14)) ) | $spl56),
  inference(superposition,[],[f348,f18729])).
fof(f19579,plain,(
  ( ! [X12,X11] : (~p(s(bool,X11)) | ~sP4(X11,g(s(bool,'T_0')),X12) | p(s(bool,X12))) ) | $spl128),
  inference(cnf_transformation,[],[f19579_D])).
fof(f19579_D,plain,(
  ( ! [X12,X11] : (~p(s(bool,X11)) | ~sP4(X11,g(s(bool,'T_0')),X12) | p(s(bool,X12))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f19453,plain,(
  ( ! [X12,X11] : (~p(s(bool,f(s(bool,'T_0')))) | ~p(s(bool,X11)) | p(s(bool,X12)) | ~sP4(X11,g(s(bool,'T_0')),X12)) ) | $spl56),
  inference(superposition,[],[f329,f18729])).
fof(f19578,plain,(
  ( ! [X10,X9] : (~p(s(bool,X9)) | ~sP5(X9,g(s(bool,'T_0')),X10) | p(s(bool,X10))) ) | $spl126),
  inference(cnf_transformation,[],[f19578_D])).
fof(f19578_D,plain,(
  ( ! [X10,X9] : (~p(s(bool,X9)) | ~sP5(X9,g(s(bool,'T_0')),X10) | p(s(bool,X10))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f19452,plain,(
  ( ! [X10,X9] : (~p(s(bool,f(s(bool,'T_0')))) | ~p(s(bool,X9)) | p(s(bool,X10)) | ~sP5(X9,g(s(bool,'T_0')),X10)) ) | $spl56),
  inference(superposition,[],[f325,f18729])).
fof(f19577,plain,(
  ( ! [X8,X7] : (~p(s(bool,X7)) | sP2(X8,X7,g(s(bool,'T_0')))) ) | $spl124),
  inference(cnf_transformation,[],[f19577_D])).
fof(f19577_D,plain,(
  ( ! [X8,X7] : (~p(s(bool,X7)) | sP2(X8,X7,g(s(bool,'T_0')))) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f19451,plain,(
  ( ! [X8,X7] : (~p(s(bool,f(s(bool,'T_0')))) | ~p(s(bool,X7)) | sP2(X8,X7,g(s(bool,'T_0')))) ) | $spl56),
  inference(superposition,[],[f310,f18729])).
fof(f19576,plain,(
  ( ! [X6] : (p(s(bool,X6)) | sP1(X6,g(s(bool,'T_0')))) ) | $spl122),
  inference(cnf_transformation,[],[f19576_D])).
fof(f19576_D,plain,(
  ( ! [X6] : (p(s(bool,X6)) | sP1(X6,g(s(bool,'T_0')))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f19450,plain,(
  ( ! [X6] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,X6)) | sP1(X6,g(s(bool,'T_0')))) ) | $spl56),
  inference(superposition,[],[f299,f18729])).
fof(f19575,plain,(
  ( ! [X5] : (p(s(bool,X5)) | sP1(g(s(bool,'T_0')),X5)) ) | $spl120),
  inference(cnf_transformation,[],[f19575_D])).
fof(f19575_D,plain,(
  ( ! [X5] : (p(s(bool,X5)) | sP1(g(s(bool,'T_0')),X5)) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f19449,plain,(
  ( ! [X5] : (~p(s(bool,f(s(bool,'T_0')))) | p(s(bool,X5)) | sP1(g(s(bool,'T_0')),X5)) ) | $spl56),
  inference(superposition,[],[f296,f18729])).
fof(f19574,plain,(
  ( ! [X4] : (sP0(g(s(bool,'T_0')),X4)) ) | $spl118),
  inference(cnf_transformation,[],[f19574_D])).
fof(f19574_D,plain,(
  ( ! [X4] : (sP0(g(s(bool,'T_0')),X4)) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f19448,plain,(
  ( ! [X4] : (~p(s(bool,f(s(bool,'T_0')))) | sP0(g(s(bool,'T_0')),X4)) ) | $spl56),
  inference(superposition,[],[f281,f18729])).
fof(f19571,plain,(
  ( ! [X3] : (sP0(X3,g(s(bool,'T_0')))) ) | $spl114),
  inference(cnf_transformation,[],[f19571_D])).
fof(f19571_D,plain,(
  ( ! [X3] : (sP0(X3,g(s(bool,'T_0')))) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f19447,plain,(
  ( ! [X3] : (~p(s(bool,f(s(bool,'T_0')))) | sP0(X3,g(s(bool,'T_0')))) ) | $spl56),
  inference(superposition,[],[f280,f18729])).
fof(f19439,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | $spl56),
  inference(superposition,[],[f226,f18729])).
fof(f19563,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | ($spl44 | $spl56)),
  inference(forward_demodulation,[],[f19434,f11057])).
fof(f19434,plain,(
  s(bool,f(s(bool,'T_0'))) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | ($spl44 | $spl56)),
  inference(superposition,[],[f18729,f14679])).
fof(f19433,plain,(
  ( ! [X3] : (s(bool,'T_0') = s(bool,f(s(bool,'T_0'))) | s(bool,X3) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X3)) ) | $spl56),
  inference(superposition,[],[f18729,f518])).
fof(f19432,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl56),
  inference(superposition,[],[f18729,f518])).
fof(f19431,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,g(s(bool,'T_0')))) ) | $spl56),
  inference(superposition,[],[f18729,f518])).
fof(f19430,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,f(s(bool,'T_0'))) | s(bool,X0) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl56),
  inference(superposition,[],[f18729,f518])).
fof(f19429,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | $spl56),
  inference(superposition,[],[f18729,f226])).
fof(f19369,plain,(
  ( ! [X111,X110,X108] : (~p(s(bool,X110)) | p(s(bool,X111)) | ~sP10(happ(s(fun(bool,bool),X108),s(bool,'const.min.@_1'(s(fun(bool,bool),X108)))),X111,X110)) ) | $spl110),
  inference(cnf_transformation,[],[f19369_D])).
fof(f19369_D,plain,(
  ( ! [X111,X110,X108] : (~p(s(bool,X110)) | p(s(bool,X111)) | ~sP10(happ(s(fun(bool,bool),X108),s(bool,'const.min.@_1'(s(fun(bool,bool),X108)))),X111,X110)) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f19354,plain,(
  ( ! [X56] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X56))))) ) | $spl80),
  inference(cnf_transformation,[],[f19354_D])).
fof(f19354_D,plain,(
  ( ! [X56] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X56))))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f19103,plain,(
  ( ! [X111,X109,X110,X108] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X109)))) | ~p(s(bool,X110)) | p(s(bool,X111)) | ~sP10(happ(s(fun(bool,bool),X108),s(bool,'const.min.@_1'(s(fun(bool,bool),X108)))),X111,X110)) ) | $spl54),
  inference(superposition,[],[f1071,f18728])).
fof(f19368,plain,(
  ( ! [X107,X105,X106] : (sP10(happ(s(fun(bool,bool),X105),s(bool,'const.min.@_1'(s(fun(bool,bool),X105)))),X106,X107) | ~p(s(bool,X106))) ) | $spl108),
  inference(cnf_transformation,[],[f19368_D])).
fof(f19368_D,plain,(
  ( ! [X107,X105,X106] : (sP10(happ(s(fun(bool,bool),X105),s(bool,'const.min.@_1'(s(fun(bool,bool),X105)))),X106,X107) | ~p(s(bool,X106))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f19102,plain,(
  ( ! [X107,X105,X106,X104] : (sP10(happ(s(fun(bool,bool),X105),s(bool,'const.min.@_1'(s(fun(bool,bool),X105)))),X106,X107) | ~p(s(bool,X106)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X104))))) ) | $spl54),
  inference(superposition,[],[f1070,f18728])).
fof(f19367,plain,(
  ( ! [X103,X101,X102] : (sP10(happ(s(fun(bool,bool),X101),s(bool,'const.min.@_1'(s(fun(bool,bool),X101)))),X102,X103) | p(s(bool,X103))) ) | $spl106),
  inference(cnf_transformation,[],[f19367_D])).
fof(f19367_D,plain,(
  ( ! [X103,X101,X102] : (sP10(happ(s(fun(bool,bool),X101),s(bool,'const.min.@_1'(s(fun(bool,bool),X101)))),X102,X103) | p(s(bool,X103))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f19101,plain,(
  ( ! [X103,X101,X102,X100] : (sP10(happ(s(fun(bool,bool),X101),s(bool,'const.min.@_1'(s(fun(bool,bool),X101)))),X102,X103) | p(s(bool,X103)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X100))))) ) | $spl54),
  inference(superposition,[],[f1069,f18728])).
fof(f19366,plain,(
  ( ! [X99,X98,X96] : (p(s(bool,X98)) | ~p(s(bool,X99)) | ~sP9(X99,X98,happ(s(fun(bool,bool),X96),s(bool,'const.min.@_1'(s(fun(bool,bool),X96)))))) ) | $spl104),
  inference(cnf_transformation,[],[f19366_D])).
fof(f19366_D,plain,(
  ( ! [X99,X98,X96] : (p(s(bool,X98)) | ~p(s(bool,X99)) | ~sP9(X99,X98,happ(s(fun(bool,bool),X96),s(bool,'const.min.@_1'(s(fun(bool,bool),X96)))))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f19100,plain,(
  ( ! [X99,X97,X98,X96] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X97)))) | p(s(bool,X98)) | ~p(s(bool,X99)) | ~sP9(X99,X98,happ(s(fun(bool,bool),X96),s(bool,'const.min.@_1'(s(fun(bool,bool),X96)))))) ) | $spl54),
  inference(superposition,[],[f1068,f18728])).
fof(f19365,plain,(
  ( ! [X94,X92,X95] : (p(s(bool,X94)) | p(s(bool,X95)) | ~sP8(happ(s(fun(bool,bool),X92),s(bool,'const.min.@_1'(s(fun(bool,bool),X92)))),X95,X94)) ) | $spl102),
  inference(cnf_transformation,[],[f19365_D])).
fof(f19365_D,plain,(
  ( ! [X94,X92,X95] : (p(s(bool,X94)) | p(s(bool,X95)) | ~sP8(happ(s(fun(bool,bool),X92),s(bool,'const.min.@_1'(s(fun(bool,bool),X92)))),X95,X94)) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f19099,plain,(
  ( ! [X94,X92,X95,X93] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X93)))) | p(s(bool,X94)) | p(s(bool,X95)) | ~sP8(happ(s(fun(bool,bool),X92),s(bool,'const.min.@_1'(s(fun(bool,bool),X92)))),X95,X94)) ) | $spl54),
  inference(superposition,[],[f1067,f18728])).
fof(f19364,plain,(
  ( ! [X90,X91,X89] : (sP8(happ(s(fun(bool,bool),X89),s(bool,'const.min.@_1'(s(fun(bool,bool),X89)))),X90,X91) | ~p(s(bool,X90))) ) | $spl100),
  inference(cnf_transformation,[],[f19364_D])).
fof(f19364_D,plain,(
  ( ! [X90,X91,X89] : (sP8(happ(s(fun(bool,bool),X89),s(bool,'const.min.@_1'(s(fun(bool,bool),X89)))),X90,X91) | ~p(s(bool,X90))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f19098,plain,(
  ( ! [X90,X88,X91,X89] : (sP8(happ(s(fun(bool,bool),X89),s(bool,'const.min.@_1'(s(fun(bool,bool),X89)))),X90,X91) | ~p(s(bool,X90)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X88))))) ) | $spl54),
  inference(superposition,[],[f1066,f18728])).
fof(f19363,plain,(
  ( ! [X87,X85,X86] : (sP8(happ(s(fun(bool,bool),X85),s(bool,'const.min.@_1'(s(fun(bool,bool),X85)))),X86,X87) | ~p(s(bool,X87))) ) | $spl98),
  inference(cnf_transformation,[],[f19363_D])).
fof(f19363_D,plain,(
  ( ! [X87,X85,X86] : (sP8(happ(s(fun(bool,bool),X85),s(bool,'const.min.@_1'(s(fun(bool,bool),X85)))),X86,X87) | ~p(s(bool,X87))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f19097,plain,(
  ( ! [X87,X85,X86,X84] : (sP8(happ(s(fun(bool,bool),X85),s(bool,'const.min.@_1'(s(fun(bool,bool),X85)))),X86,X87) | ~p(s(bool,X87)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X84))))) ) | $spl54),
  inference(superposition,[],[f1065,f18728])).
fof(f19362,plain,(
  ( ! [X80,X83,X82] : (p(s(bool,X82)) | ~sP7(happ(s(fun(bool,bool),X80),s(bool,'const.min.@_1'(s(fun(bool,bool),X80)))),X82,X83) | p(s(bool,X83))) ) | $spl96),
  inference(cnf_transformation,[],[f19362_D])).
fof(f19362_D,plain,(
  ( ! [X80,X83,X82] : (p(s(bool,X82)) | ~sP7(happ(s(fun(bool,bool),X80),s(bool,'const.min.@_1'(s(fun(bool,bool),X80)))),X82,X83) | p(s(bool,X83))) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f19096,plain,(
  ( ! [X80,X83,X81,X82] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X81)))) | p(s(bool,X82)) | p(s(bool,X83)) | ~sP7(happ(s(fun(bool,bool),X80),s(bool,'const.min.@_1'(s(fun(bool,bool),X80)))),X82,X83)) ) | $spl54),
  inference(superposition,[],[f1064,f18728])).
fof(f19361,plain,(
  ( ! [X78,X76,X79] : (~p(s(bool,X78)) | ~sP4(X78,happ(s(fun(bool,bool),X76),s(bool,'const.min.@_1'(s(fun(bool,bool),X76)))),X79) | p(s(bool,X79))) ) | $spl94),
  inference(cnf_transformation,[],[f19361_D])).
fof(f19361_D,plain,(
  ( ! [X78,X76,X79] : (~p(s(bool,X78)) | ~sP4(X78,happ(s(fun(bool,bool),X76),s(bool,'const.min.@_1'(s(fun(bool,bool),X76)))),X79) | p(s(bool,X79))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f19095,plain,(
  ( ! [X78,X76,X79,X77] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X77)))) | ~p(s(bool,X78)) | p(s(bool,X79)) | ~sP4(X78,happ(s(fun(bool,bool),X76),s(bool,'const.min.@_1'(s(fun(bool,bool),X76)))),X79)) ) | $spl54),
  inference(superposition,[],[f1063,f18728])).
fof(f19360,plain,(
  ( ! [X74,X72,X75] : (~p(s(bool,X74)) | ~sP5(X74,happ(s(fun(bool,bool),X72),s(bool,'const.min.@_1'(s(fun(bool,bool),X72)))),X75) | p(s(bool,X75))) ) | $spl92),
  inference(cnf_transformation,[],[f19360_D])).
fof(f19360_D,plain,(
  ( ! [X74,X72,X75] : (~p(s(bool,X74)) | ~sP5(X74,happ(s(fun(bool,bool),X72),s(bool,'const.min.@_1'(s(fun(bool,bool),X72)))),X75) | p(s(bool,X75))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f19094,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X73)))) | ~p(s(bool,X74)) | p(s(bool,X75)) | ~sP5(X74,happ(s(fun(bool,bool),X72),s(bool,'const.min.@_1'(s(fun(bool,bool),X72)))),X75)) ) | $spl54),
  inference(superposition,[],[f1062,f18728])).
fof(f19359,plain,(
  ( ! [X70,X71,X69] : (sP2(X70,X71,happ(s(fun(bool,bool),X69),s(bool,'const.min.@_1'(s(fun(bool,bool),X69))))) | ~p(s(bool,X71))) ) | $spl90),
  inference(cnf_transformation,[],[f19359_D])).
fof(f19359_D,plain,(
  ( ! [X70,X71,X69] : (sP2(X70,X71,happ(s(fun(bool,bool),X69),s(bool,'const.min.@_1'(s(fun(bool,bool),X69))))) | ~p(s(bool,X71))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f19093,plain,(
  ( ! [X70,X68,X71,X69] : (sP2(X70,X71,happ(s(fun(bool,bool),X69),s(bool,'const.min.@_1'(s(fun(bool,bool),X69))))) | ~p(s(bool,X71)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X68))))) ) | $spl54),
  inference(superposition,[],[f1061,f18728])).
fof(f19358,plain,(
  ( ! [X66,X67] : (sP1(X67,happ(s(fun(bool,bool),X66),s(bool,'const.min.@_1'(s(fun(bool,bool),X66))))) | p(s(bool,X67))) ) | $spl88),
  inference(cnf_transformation,[],[f19358_D])).
fof(f19358_D,plain,(
  ( ! [X66,X67] : (sP1(X67,happ(s(fun(bool,bool),X66),s(bool,'const.min.@_1'(s(fun(bool,bool),X66))))) | p(s(bool,X67))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f19092,plain,(
  ( ! [X66,X67,X65] : (sP1(X67,happ(s(fun(bool,bool),X66),s(bool,'const.min.@_1'(s(fun(bool,bool),X66))))) | p(s(bool,X67)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X65))))) ) | $spl54),
  inference(superposition,[],[f1060,f18728])).
fof(f19357,plain,(
  ( ! [X64,X63] : (sP1(happ(s(fun(bool,bool),X63),s(bool,'const.min.@_1'(s(fun(bool,bool),X63)))),X64) | p(s(bool,X64))) ) | $spl86),
  inference(cnf_transformation,[],[f19357_D])).
fof(f19357_D,plain,(
  ( ! [X64,X63] : (sP1(happ(s(fun(bool,bool),X63),s(bool,'const.min.@_1'(s(fun(bool,bool),X63)))),X64) | p(s(bool,X64))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f19091,plain,(
  ( ! [X64,X62,X63] : (sP1(happ(s(fun(bool,bool),X63),s(bool,'const.min.@_1'(s(fun(bool,bool),X63)))),X64) | p(s(bool,X64)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X62))))) ) | $spl54),
  inference(superposition,[],[f1059,f18728])).
fof(f19356,plain,(
  ( ! [X61,X60] : (sP0(happ(s(fun(bool,bool),X60),s(bool,'const.min.@_1'(s(fun(bool,bool),X60)))),X61)) ) | $spl84),
  inference(cnf_transformation,[],[f19356_D])).
fof(f19356_D,plain,(
  ( ! [X61,X60] : (sP0(happ(s(fun(bool,bool),X60),s(bool,'const.min.@_1'(s(fun(bool,bool),X60)))),X61)) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f19090,plain,(
  ( ! [X61,X59,X60] : (sP0(happ(s(fun(bool,bool),X60),s(bool,'const.min.@_1'(s(fun(bool,bool),X60)))),X61) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X59))))) ) | $spl54),
  inference(superposition,[],[f1058,f18728])).
fof(f19355,plain,(
  ( ! [X57,X58] : (sP0(X58,happ(s(fun(bool,bool),X57),s(bool,'const.min.@_1'(s(fun(bool,bool),X57)))))) ) | $spl82),
  inference(cnf_transformation,[],[f19355_D])).
fof(f19355_D,plain,(
  ( ! [X57,X58] : (sP0(X58,happ(s(fun(bool,bool),X57),s(bool,'const.min.@_1'(s(fun(bool,bool),X57)))))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f19089,plain,(
  ( ! [X57,X58,X56] : (sP0(X58,happ(s(fun(bool,bool),X57),s(bool,'const.min.@_1'(s(fun(bool,bool),X57))))) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X56))))) ) | $spl54),
  inference(superposition,[],[f1057,f18728])).
fof(f19352,plain,(
  ( ! [X45] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X45))))) ) | $spl76),
  inference(cnf_transformation,[],[f19352_D])).
fof(f19352_D,plain,(
  ( ! [X45] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X45))))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f19353,plain,(
  ( ! [X47,X46] : (~p(s(bool,happ(s(fun(bool,bool),X46),s(bool,X47))))) ) | $spl78),
  inference(cnf_transformation,[],[f19353_D])).
fof(f19353_D,plain,(
  ( ! [X47,X46] : (~p(s(bool,happ(s(fun(bool,bool),X46),s(bool,X47))))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f19084,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,happ(s(fun(bool,bool),X46),s(bool,X47)))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X45))))) ) | $spl54),
  inference(superposition,[],[f384,f18728])).
fof(f19350,plain,(
  ( ! [X4] : (p(s(bool,'const.pred_set.countable_1'(s(fun(bool,bool),X4))))) ) | $spl72),
  inference(cnf_transformation,[],[f19350_D])).
fof(f19350_D,plain,(
  ( ! [X4] : (p(s(bool,'const.pred_set.countable_1'(s(fun(bool,bool),X4))))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f19351,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.pred_set.INJ_3'(s(fun(bool,'type.num.num'),X6),s(fun(bool,bool),X5),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) ) | $spl74),
  inference(cnf_transformation,[],[f19351_D])).
fof(f19351_D,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.pred_set.INJ_3'(s(fun(bool,'type.num.num'),X6),s(fun(bool,bool),X5),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f19075,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'const.pred_set.INJ_3'(s(fun(bool,'type.num.num'),X6),s(fun(bool,bool),X5),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) | p(s(bool,'const.pred_set.countable_1'(s(fun(bool,bool),X4))))) ) | $spl54),
  inference(superposition,[],[f261,f18728])).
fof(f19348,plain,(
  ( ! [X2] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(bool,'type.num.num'),sK13(X2,bool)),s(fun(bool,bool),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) ) | $spl68),
  inference(cnf_transformation,[],[f19348_D])).
fof(f19348_D,plain,(
  ( ! [X2] : (p(s(bool,'const.pred_set.INJ_3'(s(fun(bool,'type.num.num'),sK13(X2,bool)),s(fun(bool,bool),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f19349,plain,(
  ( ! [X3] : (~p(s(bool,'const.pred_set.countable_1'(s(fun(bool,bool),X3))))) ) | $spl70),
  inference(cnf_transformation,[],[f19349_D])).
fof(f19349_D,plain,(
  ( ! [X3] : (~p(s(bool,'const.pred_set.countable_1'(s(fun(bool,bool),X3))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f19074,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.pred_set.countable_1'(s(fun(bool,bool),X3)))) | p(s(bool,'const.pred_set.INJ_3'(s(fun(bool,'type.num.num'),sK13(X2,bool)),s(fun(bool,bool),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) ) | $spl54),
  inference(superposition,[],[f260,f18728])).
fof(f18836,plain,(
  ( ! [X111,X109,X110,X108] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X109)))) | ~p(s(bool,X110)) | p(s(bool,X111)) | ~sP10(happ(s(fun(bool,bool),X108),s(bool,'const.min.@_1'(s(fun(bool,bool),X108)))),X111,X110)) ) | $spl54),
  inference(superposition,[],[f1071,f18728])).
fof(f18835,plain,(
  ( ! [X107,X105,X106,X104] : (sP10(happ(s(fun(bool,bool),X105),s(bool,'const.min.@_1'(s(fun(bool,bool),X105)))),X106,X107) | ~p(s(bool,X106)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X104))))) ) | $spl54),
  inference(superposition,[],[f1070,f18728])).
fof(f18834,plain,(
  ( ! [X103,X101,X102,X100] : (sP10(happ(s(fun(bool,bool),X101),s(bool,'const.min.@_1'(s(fun(bool,bool),X101)))),X102,X103) | p(s(bool,X103)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X100))))) ) | $spl54),
  inference(superposition,[],[f1069,f18728])).
fof(f18833,plain,(
  ( ! [X99,X97,X98,X96] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X97)))) | p(s(bool,X98)) | ~p(s(bool,X99)) | ~sP9(X99,X98,happ(s(fun(bool,bool),X96),s(bool,'const.min.@_1'(s(fun(bool,bool),X96)))))) ) | $spl54),
  inference(superposition,[],[f1068,f18728])).
fof(f18832,plain,(
  ( ! [X94,X92,X95,X93] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X93)))) | p(s(bool,X94)) | p(s(bool,X95)) | ~sP8(happ(s(fun(bool,bool),X92),s(bool,'const.min.@_1'(s(fun(bool,bool),X92)))),X95,X94)) ) | $spl54),
  inference(superposition,[],[f1067,f18728])).
fof(f18831,plain,(
  ( ! [X90,X88,X91,X89] : (sP8(happ(s(fun(bool,bool),X89),s(bool,'const.min.@_1'(s(fun(bool,bool),X89)))),X90,X91) | ~p(s(bool,X90)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X88))))) ) | $spl54),
  inference(superposition,[],[f1066,f18728])).
fof(f18830,plain,(
  ( ! [X87,X85,X86,X84] : (sP8(happ(s(fun(bool,bool),X85),s(bool,'const.min.@_1'(s(fun(bool,bool),X85)))),X86,X87) | ~p(s(bool,X87)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X84))))) ) | $spl54),
  inference(superposition,[],[f1065,f18728])).
fof(f18829,plain,(
  ( ! [X80,X83,X81,X82] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X81)))) | p(s(bool,X82)) | p(s(bool,X83)) | ~sP7(happ(s(fun(bool,bool),X80),s(bool,'const.min.@_1'(s(fun(bool,bool),X80)))),X82,X83)) ) | $spl54),
  inference(superposition,[],[f1064,f18728])).
fof(f18828,plain,(
  ( ! [X78,X76,X79,X77] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X77)))) | ~p(s(bool,X78)) | p(s(bool,X79)) | ~sP4(X78,happ(s(fun(bool,bool),X76),s(bool,'const.min.@_1'(s(fun(bool,bool),X76)))),X79)) ) | $spl54),
  inference(superposition,[],[f1063,f18728])).
fof(f18827,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X73)))) | ~p(s(bool,X74)) | p(s(bool,X75)) | ~sP5(X74,happ(s(fun(bool,bool),X72),s(bool,'const.min.@_1'(s(fun(bool,bool),X72)))),X75)) ) | $spl54),
  inference(superposition,[],[f1062,f18728])).
fof(f18826,plain,(
  ( ! [X70,X68,X71,X69] : (sP2(X70,X71,happ(s(fun(bool,bool),X69),s(bool,'const.min.@_1'(s(fun(bool,bool),X69))))) | ~p(s(bool,X71)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X68))))) ) | $spl54),
  inference(superposition,[],[f1061,f18728])).
fof(f18825,plain,(
  ( ! [X66,X67,X65] : (sP1(X67,happ(s(fun(bool,bool),X66),s(bool,'const.min.@_1'(s(fun(bool,bool),X66))))) | p(s(bool,X67)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X65))))) ) | $spl54),
  inference(superposition,[],[f1060,f18728])).
fof(f18824,plain,(
  ( ! [X64,X62,X63] : (sP1(happ(s(fun(bool,bool),X63),s(bool,'const.min.@_1'(s(fun(bool,bool),X63)))),X64) | p(s(bool,X64)) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X62))))) ) | $spl54),
  inference(superposition,[],[f1059,f18728])).
fof(f18823,plain,(
  ( ! [X61,X59,X60] : (sP0(happ(s(fun(bool,bool),X60),s(bool,'const.min.@_1'(s(fun(bool,bool),X60)))),X61) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X59))))) ) | $spl54),
  inference(superposition,[],[f1058,f18728])).
fof(f18822,plain,(
  ( ! [X57,X58,X56] : (sP0(X58,happ(s(fun(bool,bool),X57),s(bool,'const.min.@_1'(s(fun(bool,bool),X57))))) | ~p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X56))))) ) | $spl54),
  inference(superposition,[],[f1057,f18728])).
fof(f18817,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,happ(s(fun(bool,bool),X46),s(bool,X47)))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X45))))) ) | $spl54),
  inference(superposition,[],[f384,f18728])).
fof(f18808,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'const.pred_set.INJ_3'(s(fun(bool,'type.num.num'),X6),s(fun(bool,bool),X5),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))) | p(s(bool,'const.pred_set.countable_1'(s(fun(bool,bool),X4))))) ) | $spl54),
  inference(superposition,[],[f261,f18728])).
fof(f18807,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.pred_set.countable_1'(s(fun(bool,bool),X3)))) | p(s(bool,'const.pred_set.INJ_3'(s(fun(bool,'type.num.num'),sK13(X2,bool)),s(fun(bool,bool),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) ) | $spl54),
  inference(superposition,[],[f260,f18728])).
fof(f18799,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | ($spl44 | $spl57)),
  inference(forward_demodulation,[],[f18788,f11057])).
fof(f18788,plain,(
  s(bool,f(s(bool,'T_0'))) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | ($spl44 | $spl57)),
  inference(superposition,[],[f18730,f14679])).
fof(f18797,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | $spl65),
  inference(cnf_transformation,[],[f18797_D])).
fof(f18797_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) <=> ~$spl65),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl65])])).
fof(f18787,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | s(bool,X3) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X3)) ) | $spl57),
  inference(superposition,[],[f18730,f518])).
fof(f18798,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) ) | $spl66),
  inference(cnf_transformation,[],[f18798_D])).
fof(f18798_D,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f18786,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl57),
  inference(superposition,[],[f18730,f518])).
fof(f18785,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,g(s(bool,'T_0')))) ) | $spl57),
  inference(superposition,[],[f18730,f518])).
fof(f18784,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | s(bool,X0) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl57),
  inference(superposition,[],[f18730,f518])).
fof(f18783,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | $spl57),
  inference(superposition,[],[f18730,f226])).
fof(f18728,plain,(
  ( ! [X325,X326] : (s(fun(bool,bool),X325) = s(fun(bool,bool),X326)) ) | $spl54),
  inference(cnf_transformation,[],[f18728_D])).
fof(f18728_D,plain,(
  ( ! [X325,X326] : (s(fun(bool,bool),X325) = s(fun(bool,bool),X326)) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f18730,plain,(
  s(bool,f(s(bool,'T_0'))) != s(bool,g(s(bool,'T_0'))) | $spl57),
  inference(cnf_transformation,[],[f18730_D])).
fof(f18730_D,plain,(
  s(bool,f(s(bool,'T_0'))) != s(bool,g(s(bool,'T_0'))) <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f18697,plain,(
  ( ! [X325,X326] : (s(bool,f(s(bool,'T_0'))) != s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X325) = s(fun(bool,bool),X326)) ) | $spl2),
  inference(duplicate_literal_removal,[],[f18695])).
fof(f18695,plain,(
  ( ! [X325,X326] : (s(bool,f(s(bool,'T_0'))) != s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X325) = s(fun(bool,bool),X326) | s(fun(bool,bool),X325) = s(fun(bool,bool),X326)) ) | $spl2),
  inference(superposition,[],[f305,f1416])).
fof(f15638,plain,(
  ( ! [X31,X32] : (sP1('F_0',X31) | s(bool,'T_0') = s(bool,X32) | s(bool,X31) = s(bool,X32)) ) | $spl52),
  inference(cnf_transformation,[],[f15638_D])).
fof(f15638_D,plain,(
  ( ! [X31,X32] : (sP1('F_0',X31) | s(bool,'T_0') = s(bool,X32) | s(bool,X31) = s(bool,X32)) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f15637,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | sP1('F_0',X31) | s(bool,X31) = s(bool,X32) | s(bool,'T_0') = s(bool,X32)) )),
  inference(subsumption_resolution,[],[f15622,f232])).
fof(f15622,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | sP1('F_0',X31) | s(bool,X31) = s(bool,X32) | s(bool,'T_0') = s(bool,X32) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f2115,f226])).
fof(f13465,plain,(
  $false | ($spl40 | $spl44)),
  inference(subsumption_resolution,[],[f13464,f411])).
fof(f13464,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl40 | $spl44)),
  inference(backward_demodulation,[],[f2179,f11057])).
fof(f13457,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11504,f11523])).
fof(f11523,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f5340,f276])).
fof(f11504,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f236])).
fof(f13456,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11510,f219])).
fof(f11510,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f411,f5340,f276])).
fof(f13455,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11512,f219])).
fof(f11512,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f412,f5340,f276])).
fof(f13454,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11514,f219])).
fof(f11514,plain,(
  ~p(s(bool,'T_0')) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f2180,f5340,f276])).
fof(f13453,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11516,f5340])).
fof(f11516,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f411,f5340,f276])).
fof(f13452,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11518,f5340])).
fof(f11518,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f412,f5340,f276])).
fof(f13451,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11520,f5340])).
fof(f11520,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f2180,f5340,f276])).
fof(f13450,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11524,f219])).
fof(f11524,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f411,f5340,f276])).
fof(f13449,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11526,f219])).
fof(f11526,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f412,f5340,f276])).
fof(f13448,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11528,f219])).
fof(f11528,plain,(
  ~p(s(bool,'T_0')) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f2180,f5340,f276])).
fof(f13447,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11530,f5340])).
fof(f11530,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f411,f5340,f276])).
fof(f13446,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11532,f5340])).
fof(f11532,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f412,f5340,f276])).
fof(f13445,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11534,f5340])).
fof(f11534,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f2180,f5340,f276])).
fof(f13444,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11540,f5340])).
fof(f11540,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f425,f5340,f295])).
fof(f13443,plain,(
  $false | ($spl6 | $spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11541,f5340])).
fof(f11541,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl6 | $spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5535,f5340,f295])).
fof(f5535,plain,(
  sP1('T_0',f(s(bool,'F_0'))) | ($spl6 | $spl41)),
  inference(subsumption_resolution,[],[f5494,f383])).
fof(f5494,plain,(
  p(s(bool,'F_0')) | sP1('T_0',f(s(bool,'F_0'))) | ($spl6 | $spl41)),
  inference(superposition,[],[f2063,f3063])).
fof(f3063,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) | $spl41),
  inference(unit_resulting_resolution,[],[f2180,f226])).
fof(f13442,plain,(
  $false | ($spl6 | $spl46)),
  inference(subsumption_resolution,[],[f11542,f5340])).
fof(f11542,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl6 | $spl46)),
  inference(unit_resulting_resolution,[],[f3557,f5340,f295])).
fof(f13441,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11543,f219])).
fof(f11543,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f428,f5340,f295])).
fof(f13440,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11544,f5340])).
fof(f11544,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3))))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1212,f5340,f295])).
fof(f13439,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f11545,f5340])).
fof(f11545,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f3272,f5340,f295])).
fof(f13438,plain,(
  $false | ($spl10 | $spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11546,f219])).
fof(f11546,plain,(
  ~p(s(bool,'T_0')) | ($spl10 | $spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5536,f5340,f295])).
fof(f5536,plain,(
  sP1(f(s(bool,'F_0')),'T_0') | ($spl10 | $spl41)),
  inference(subsumption_resolution,[],[f5495,f383])).
fof(f5495,plain,(
  p(s(bool,'F_0')) | sP1(f(s(bool,'F_0')),'T_0') | ($spl10 | $spl41)),
  inference(superposition,[],[f2067,f3063])).
fof(f13437,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f11547,f5340])).
fof(f11547,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f3248,f5340,f295])).
fof(f13436,plain,(
  $false | ($spl10 | $spl46)),
  inference(subsumption_resolution,[],[f11548,f219])).
fof(f11548,plain,(
  ~p(s(bool,'T_0')) | ($spl10 | $spl46)),
  inference(unit_resulting_resolution,[],[f3621,f5340,f295])).
fof(f13435,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11549,f5340])).
fof(f11549,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1211,f5340,f295])).
fof(f13434,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11554,f219])).
fof(f11554,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f425,f5340,f295])).
fof(f13433,plain,(
  $false | ($spl6 | $spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11555,f219])).
fof(f11555,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5535,f5340,f295])).
fof(f13432,plain,(
  $false | ($spl6 | $spl46)),
  inference(subsumption_resolution,[],[f11556,f219])).
fof(f11556,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl46)),
  inference(unit_resulting_resolution,[],[f3557,f5340,f295])).
fof(f13431,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11557,f5340])).
fof(f11557,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f428,f5340,f295])).
fof(f13430,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11558,f5340])).
fof(f11558,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1212,f5340,f295])).
fof(f13429,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f11559,f5340])).
fof(f11559,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f3272,f5340,f295])).
fof(f13428,plain,(
  $false | ($spl10 | $spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11560,f5340])).
fof(f11560,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl10 | $spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5536,f5340,f295])).
fof(f13427,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f11561,f5340])).
fof(f11561,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f3248,f5340,f295])).
fof(f13426,plain,(
  $false | ($spl10 | $spl46)),
  inference(subsumption_resolution,[],[f11562,f5340])).
fof(f11562,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl10 | $spl46)),
  inference(unit_resulting_resolution,[],[f3621,f5340,f295])).
fof(f13425,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11563,f5340])).
fof(f11563,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3))))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1211,f5340,f295])).
fof(f13424,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11582,f5340])).
fof(f11582,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f441,f5340,f310])).
fof(f13423,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11583,f5340])).
fof(f11583,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f455,f5340,f310])).
fof(f13422,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11588,f5340])).
fof(f11588,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f441,f5340,f310])).
fof(f13421,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11589,f5340])).
fof(f11589,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f455,f5340,f310])).
fof(f13420,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11594,f5340])).
fof(f11594,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f864,f383,f5340,f321])).
fof(f13419,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11595,f5340])).
fof(f11595,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5451,f383,f5340,f321])).
fof(f5451,plain,(
  sP6('T_0',f(s(bool,'F_0')),'F_0') | $spl41),
  inference(unit_resulting_resolution,[],[f219,f3063,f338])).
fof(f13418,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11596,f5340])).
fof(f11596,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f590,f383,f5340,f321])).
fof(f13417,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11597,f219])).
fof(f11597,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f588,f383,f5340,f321])).
fof(f13416,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11657,f219])).
fof(f11657,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f864,f383,f5340,f321])).
fof(f13415,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11658,f219])).
fof(f11658,plain,(
  ~p(s(bool,'T_0')) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5451,f383,f5340,f321])).
fof(f13414,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11659,f219])).
fof(f11659,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f590,f383,f5340,f321])).
fof(f13413,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11660,f5340])).
fof(f11660,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f588,f383,f5340,f321])).
fof(f13412,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11665,f11955])).
fof(f11955,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f336])).
fof(f11665,plain,(
  ~sP3('F_0','T_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f602,f391,f388,f5340,f322])).
fof(f13411,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11666,f11955])).
fof(f11666,plain,(
  ~sP3('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f603,f391,f388,f5340,f322])).
fof(f13410,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11667,f11955])).
fof(f11667,plain,(
  ~sP3(f(s(bool,'F_0')),'T_0','T_0') | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3071,f391,f388,f5340,f322])).
fof(f3071,plain,(
  ~sP6('T_0','T_0',f(s(bool,'F_0'))) | $spl41),
  inference(unit_resulting_resolution,[],[f219,f2180,f339])).
fof(f13409,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11668,f11955])).
fof(f11668,plain,(
  ~sP3('F_0','T_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f602,f392,f388,f5340,f322])).
fof(f13408,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11669,f11955])).
fof(f11669,plain,(
  ~sP3('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f603,f406,f388,f5340,f322])).
fof(f13407,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11670,f11955])).
fof(f11670,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f391,f1235,f5340,f322])).
fof(f13406,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11671,f11955])).
fof(f11671,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP3('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f1246,f1235,f5340,f322])).
fof(f13405,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11672,f11955])).
fof(f11672,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f392,f1235,f5340,f322])).
fof(f13404,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11673,f11955])).
fof(f11673,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP3('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f392,f1235,f5340,f322])).
fof(f13403,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11674,f11955])).
fof(f11674,plain,(
  ~sP3('F_0','T_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f602,f392,f389,f5340,f322])).
fof(f13402,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11675,f11955])).
fof(f11675,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f392,f389,f5340,f322])).
fof(f13401,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11677,f11955])).
fof(f11677,plain,(
  ~sP3('F_0',f(s(bool,'F_0')),'F_0') | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5450,f392,f389,f5340,f322])).
fof(f5450,plain,(
  ~sP6('F_0',f(s(bool,'F_0')),'F_0') | $spl41),
  inference(unit_resulting_resolution,[],[f383,f3063,f340])).
fof(f13400,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11679,f11955])).
fof(f11679,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP3('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f392,f389,f5340,f322])).
fof(f13399,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11680,f11955])).
fof(f11680,plain,(
  ~sP3('F_0','T_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f602,f391,f389,f5340,f322])).
fof(f13398,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11681,f11955])).
fof(f11681,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f391,f389,f5340,f322])).
fof(f13397,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11682,f11955])).
fof(f11682,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP3('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f1246,f389,f5340,f322])).
fof(f13396,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11685,f11955])).
fof(f11685,plain,(
  ~sP3('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f603,f406,f404,f5340,f322])).
fof(f13395,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11687,f11955])).
fof(f11687,plain,(
  ~sP3('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f603,f391,f404,f5340,f322])).
fof(f13394,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11690,f11955])).
fof(f11690,plain,(
  ~sP3('F_0',f(s(bool,'F_0')),'F_0') | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5450,f392,f390,f5340,f322])).
fof(f13393,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11695,f11955])).
fof(f11695,plain,(
  ~sP3(f(s(bool,'F_0')),'F_0','F_0') | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5452,f393,f390,f5340,f322])).
fof(f5452,plain,(
  ~sP6('F_0','F_0',f(s(bool,'F_0'))) | $spl41),
  inference(unit_resulting_resolution,[],[f383,f3063,f340])).
fof(f13392,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11697,f11901])).
fof(f11901,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f326])).
fof(f11697,plain,(
  ~sP5('T_0','F_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f602,f391,f394,f5340,f322])).
fof(f13391,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11698,f11901])).
fof(f11698,plain,(
  ~sP5('T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f603,f391,f394,f5340,f322])).
fof(f13390,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11699,f11901])).
fof(f11699,plain,(
  ~sP5('T_0',f(s(bool,'F_0')),'T_0') | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3071,f391,f394,f5340,f322])).
fof(f13389,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f11701,f11901])).
fof(f11701,plain,(
  ~sP5('T_0',g(s(bool,'F_0')),'F_0') | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4510,f391,f394,f5340,f322])).
fof(f13388,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11702,f11901])).
fof(f11702,plain,(
  ~sP5('T_0','T_0',f(s(bool,'F_0'))) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3066,f391,f394,f5340,f322])).
fof(f3066,plain,(
  ~sP6('T_0',f(s(bool,'F_0')),'T_0') | $spl41),
  inference(unit_resulting_resolution,[],[f219,f2180,f339])).
fof(f13387,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11704,f11901])).
fof(f11704,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('T_0','F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f391,f394,f5340,f322])).
fof(f13386,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11705,f11901])).
fof(f11705,plain,(
  ~sP5('T_0','F_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f602,f392,f394,f5340,f322])).
fof(f13385,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11706,f11901])).
fof(f11706,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('T_0','F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f392,f394,f5340,f322])).
fof(f13384,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11707,f11901])).
fof(f11707,plain,(
  ~sP5('T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f603,f406,f394,f5340,f322])).
fof(f13383,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f11709,f11901])).
fof(f11709,plain,(
  ~sP5('T_0',g(s(bool,'F_0')),'F_0') | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4510,f393,f394,f5340,f322])).
fof(f13380,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11713,f11949])).
fof(f11949,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f330])).
fof(f11713,plain,(
  ~sP4('T_0','F_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f602,f388,f394,f5340,f322])).
fof(f13379,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11714,f11949])).
fof(f11714,plain,(
  ~sP4('T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f603,f388,f394,f5340,f322])).
fof(f13378,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11715,f11949])).
fof(f11715,plain,(
  ~sP4('T_0',f(s(bool,'F_0')),'T_0') | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3071,f388,f394,f5340,f322])).
fof(f13377,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11722,f11949])).
fof(f11722,plain,(
  ( ! [X2,X0,X3,X1] : (~sP4('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','T_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f1235,f394,f5340,f322])).
fof(f13376,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11728,f11949])).
fof(f11728,plain,(
  ~sP4('T_0','F_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f602,f389,f394,f5340,f322])).
fof(f13375,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11729,f11949])).
fof(f11729,plain,(
  ( ! [X2,X0,X3,X1] : (~sP4('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','T_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f389,f394,f5340,f322])).
fof(f13374,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11736,f11949])).
fof(f11736,plain,(
  ~sP4('T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f603,f404,f394,f5340,f322])).
fof(f13373,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11743,f11901])).
fof(f11743,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP5('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f1246,f1247,f5340,f322])).
fof(f13372,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11744,f11901])).
fof(f11744,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP5('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f392,f1247,f5340,f322])).
fof(f13371,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11748,f11949])).
fof(f11748,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP4('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f1235,f1247,f5340,f322])).
fof(f13370,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11754,f11949])).
fof(f11754,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP4('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f389,f1247,f5340,f322])).
fof(f13369,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11765,f11901])).
fof(f11765,plain,(
  ~sP5('T_0','F_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f602,f391,f395,f5340,f322])).
fof(f13368,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11766,f11901])).
fof(f11766,plain,(
  ~sP5('T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f603,f391,f395,f5340,f322])).
fof(f13367,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11767,f11901])).
fof(f11767,plain,(
  ~sP5('T_0',f(s(bool,'F_0')),'T_0') | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3071,f391,f395,f5340,f322])).
fof(f13366,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11768,f11901])).
fof(f11768,plain,(
  ~sP5('T_0','F_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f602,f392,f395,f5340,f322])).
fof(f13365,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11769,f11901])).
fof(f11769,plain,(
  ~sP5('T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f603,f406,f395,f5340,f322])).
fof(f13364,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11770,f11949])).
fof(f11770,plain,(
  ~sP4('T_0','F_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f602,f388,f395,f5340,f322])).
fof(f13363,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11771,f11949])).
fof(f11771,plain,(
  ~sP4('T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f603,f388,f395,f5340,f322])).
fof(f13362,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11772,f11949])).
fof(f11772,plain,(
  ~sP4('T_0',f(s(bool,'F_0')),'T_0') | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3071,f388,f395,f5340,f322])).
fof(f13361,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f11774,f11949])).
fof(f11774,plain,(
  ~sP4('T_0',g(s(bool,'F_0')),'F_0') | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f2600,f388,f395,f5340,f322])).
fof(f13359,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11779,f12014])).
fof(f12014,plain,(
  ( ! [X0] : (~sP6(X0,'T_0','F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f411,f5340,f339])).
fof(f11779,plain,(
  ( ! [X0] : (sP6(X0,'T_0','F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f392,f388,f395,f5340,f322])).
fof(f13358,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11781,f12016])).
fof(f12016,plain,(
  ( ! [X0] : (~sP6(X0,'T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f412,f5340,f339])).
fof(f11781,plain,(
  ( ! [X0] : (sP6(X0,'T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f406,f388,f395,f5340,f322])).
fof(f13357,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11783,f11949])).
fof(f11783,plain,(
  ~sP4('T_0','F_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f602,f389,f395,f5340,f322])).
fof(f13356,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11784,f12014])).
fof(f11784,plain,(
  ( ! [X0] : (sP6(X0,'T_0','F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f392,f389,f395,f5340,f322])).
fof(f13355,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11786,f602])).
fof(f11786,plain,(
  sP6('T_0','T_0','F_0') | $spl46),
  inference(unit_resulting_resolution,[],[f391,f389,f395,f5340,f322])).
fof(f13354,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11788,f1254])).
fof(f11788,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0','F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1246,f389,f395,f5340,f322])).
fof(f13353,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11789,f11949])).
fof(f11789,plain,(
  ~sP4('T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f603,f404,f395,f5340,f322])).
fof(f13352,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11790,f12016])).
fof(f11790,plain,(
  ( ! [X0] : (sP6(X0,'T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f406,f404,f395,f5340,f322])).
fof(f13351,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11792,f603])).
fof(f11792,plain,(
  sP6('T_0','T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | $spl46),
  inference(unit_resulting_resolution,[],[f391,f404,f395,f5340,f322])).
fof(f13350,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11794,f1255])).
fof(f11794,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1246,f404,f395,f5340,f322])).
fof(f13349,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f11796,f11949])).
fof(f11796,plain,(
  ~sP4('T_0',g(s(bool,'F_0')),'F_0') | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f2600,f390,f395,f5340,f322])).
fof(f13347,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11800,f12014])).
fof(f11800,plain,(
  sP6('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0','F_0') | $spl46),
  inference(unit_resulting_resolution,[],[f392,f405,f395,f5340,f322])).
fof(f13346,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11801,f12016])).
fof(f11801,plain,(
  sP6('const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))),'T_0','const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | $spl46),
  inference(unit_resulting_resolution,[],[f406,f405,f395,f5340,f322])).
fof(f13345,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11802,f11901])).
fof(f11802,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('T_0','F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f391,f1248,f5340,f322])).
fof(f13344,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11803,f11901])).
fof(f11803,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP5('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f1246,f1248,f5340,f322])).
fof(f13343,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11804,f11901])).
fof(f11804,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('T_0','F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f392,f1248,f5340,f322])).
fof(f13342,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11805,f11901])).
fof(f11805,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP5('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f392,f1248,f5340,f322])).
fof(f13341,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11806,f11949])).
fof(f11806,plain,(
  ( ! [X2,X0,X3,X1] : (~sP4('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','T_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f1235,f1248,f5340,f322])).
fof(f13340,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11807,f11949])).
fof(f11807,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP4('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f1235,f1248,f5340,f322])).
fof(f13339,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11815,f11949])).
fof(f11815,plain,(
  ( ! [X2,X0,X3,X1] : (~sP4('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','T_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f389,f1248,f5340,f322])).
fof(f13338,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11816,f11949])).
fof(f11816,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~sP4('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0','const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f389,f1248,f5340,f322])).
fof(f13337,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11819,f1221])).
fof(f11819,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('T_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f391,f389,f1248,f5340,f322])).
fof(f13336,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11821,f1222])).
fof(f11821,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (sP6('const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'const.pred_set.SURJ_3'(s(fun(X4,X5),X6),s(fun(X4,bool),X7),s(fun(X5,bool),'const.pred_set.IMAGE_2'(s(fun(X4,X5),X6),s(fun(X4,bool),X7)))),'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1246,f389,f1248,f5340,f322])).
fof(f13335,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11831,f11901])).
fof(f11831,plain,(
  ~sP5('T_0','T_0',f(s(bool,'F_0'))) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3066,f391,f396,f5340,f322])).
fof(f13332,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11856,f5340])).
fof(f11856,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f389,f383,f5340,f325])).
fof(f13331,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11857,f5340])).
fof(f11857,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f404,f383,f5340,f325])).
fof(f13330,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11858,f5340])).
fof(f11858,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5610,f383,f5340,f325])).
fof(f5610,plain,(
  sP5('T_0',f(s(bool,'F_0')),'F_0') | $spl41),
  inference(unit_resulting_resolution,[],[f5453,f320])).
fof(f5453,plain,(
  sP6('T_0','F_0',f(s(bool,'F_0'))) | $spl41),
  inference(unit_resulting_resolution,[],[f219,f3063,f338])).
fof(f13329,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11859,f5340])).
fof(f11859,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f390,f383,f5340,f325])).
fof(f13328,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11860,f5340])).
fof(f11860,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f405,f383,f5340,f325])).
fof(f13327,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11876,f11901])).
fof(f11876,plain,(
  ( ! [X0,X1] : (~sP5(X0,X1,'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f5340,f325])).
fof(f13326,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11878,f5340])).
fof(f11878,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f389,f383,f5340,f325])).
fof(f13325,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11879,f5340])).
fof(f11879,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f404,f383,f5340,f325])).
fof(f13324,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11880,f219])).
fof(f11880,plain,(
  ~p(s(bool,'T_0')) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5610,f383,f5340,f325])).
fof(f13323,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11881,f5340])).
fof(f11881,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f390,f383,f5340,f325])).
fof(f13322,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11882,f5340])).
fof(f11882,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f405,f383,f5340,f325])).
fof(f13321,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11889,f11901])).
fof(f11889,plain,(
  ( ! [X0] : (~sP5('T_0',X0,'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f219,f5340,f325])).
fof(f13320,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11899,f11901])).
fof(f11899,plain,(
  ( ! [X0,X1] : (~sP5(X0,X1,'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f5340,f325])).
fof(f13319,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11903,f5340])).
fof(f11903,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f392,f383,f5340,f329])).
fof(f13318,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11904,f5340])).
fof(f11904,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f406,f383,f5340,f329])).
fof(f13317,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11905,f5340])).
fof(f11905,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3150,f383,f5340,f329])).
fof(f3150,plain,(
  sP4('T_0',f(s(bool,'F_0')),'F_0') | $spl41),
  inference(unit_resulting_resolution,[],[f3072,f319])).
fof(f3072,plain,(
  sP6('F_0','T_0',f(s(bool,'F_0'))) | $spl41),
  inference(unit_resulting_resolution,[],[f383,f2180,f337])).
fof(f13316,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11906,f5340])).
fof(f11906,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f393,f383,f5340,f329])).
fof(f13315,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11907,f219])).
fof(f11907,plain,(
  ~p(s(bool,'T_0')) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3120,f383,f5340,f329])).
fof(f3120,plain,(
  sP4(f(s(bool,'F_0')),'T_0','F_0') | $spl41),
  inference(unit_resulting_resolution,[],[f3067,f319])).
fof(f3067,plain,(
  sP6('F_0',f(s(bool,'F_0')),'T_0') | $spl41),
  inference(unit_resulting_resolution,[],[f383,f2180,f337])).
fof(f13314,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11908,f5340])).
fof(f11908,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f407,f383,f5340,f329])).
fof(f13313,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11924,f11949])).
fof(f11924,plain,(
  ( ! [X0,X1] : (~sP4(X0,X1,'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f5340,f329])).
fof(f13312,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11926,f5340])).
fof(f11926,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f392,f383,f5340,f329])).
fof(f13311,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11927,f5340])).
fof(f11927,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f406,f383,f5340,f329])).
fof(f13310,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11928,f219])).
fof(f11928,plain,(
  ~p(s(bool,'T_0')) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3150,f383,f5340,f329])).
fof(f13309,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11929,f5340])).
fof(f11929,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f393,f383,f5340,f329])).
fof(f13308,plain,(
  $false | ($spl41 | $spl46)),
  inference(subsumption_resolution,[],[f11930,f5340])).
fof(f11930,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3120,f383,f5340,f329])).
fof(f13307,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11931,f5340])).
fof(f11931,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f407,f383,f5340,f329])).
fof(f13306,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11937,f11949])).
fof(f11937,plain,(
  ( ! [X0] : (~sP4('T_0',X0,'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f219,f5340,f329])).
fof(f13305,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f11947,f11949])).
fof(f11947,plain,(
  ( ! [X0,X1] : (~sP4(X0,X1,'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f5340,f329])).
fof(f13304,plain,(
  $false | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f11959,f12989])).
fof(f12989,plain,(
  ( ! [X17] : (s(bool,'T_0') = s(bool,X17)) ) | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(global_subsumption,[],[f12988,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f3281,f3334,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5743,f5744,f307,f306,f2136,f2137,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1613,f1612,f1611,f1610,f1797,f1796,f1795,f1794,f3339,f3337,f3311,f3309,f3286,f3284,f3259,f3257,f6027,f5961,f5895,f5829,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f5632,f5630,f5603,f5601,f5573,f5571,f5549,f5547,f5444,f5442,f3712,f3710,f3670,f3668,f3387,f3362,f1782,f1347,f1340,f1088,f261,f260,f2130,f2138,f1596,f1780,f3343,f3315,f3290,f3263,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f8429,f8463,f8487,f8488,f8489,f8540,f8541,f8542,f8999,f9002,f9003,f9004,f9100,f9103,f9104,f9105,f9625,f9671,f11335,f11359,f11487,f11490,f11499,f11482,f5340,f12715,f12704,f12703,f12702,f12701,f12700,f12699,f12698,f12697,f12696,f12694,f12682,f12680,f12679,f12671,f12661,f12650,f12646,f12644,f12643,f12642,f12641])).
fof(f12641,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,happ(s(fun(X1,bool),X2),s(X1,'const.min.@_1'(s(fun(X1,bool),X2)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f1057])).
fof(f12642,plain,(
  ( ! [X2,X0,X1] : (sP0(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X2)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f1058])).
fof(f12643,plain,(
  ( ! [X0,X1] : (sP1(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f1059])).
fof(f12644,plain,(
  ( ! [X0,X1] : (sP1('F_0',happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f1060])).
fof(f12646,plain,(
  ( ! [X2,X0,X3,X1] : (sP2(X0,X1,happ(s(fun(X2,bool),X3),s(X2,'const.min.@_1'(s(fun(X2,bool),X3)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f5340,f1061])).
fof(f12650,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,happ(s(fun(X1,bool),X2),s(X1,'const.min.@_1'(s(fun(X1,bool),X2)))),'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f383,f5340,f1062])).
fof(f12661,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,happ(s(fun(X1,bool),X2),s(X1,'const.min.@_1'(s(fun(X1,bool),X2)))),'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f383,f5340,f1063])).
fof(f12671,plain,(
  ( ! [X0,X1] : (~sP7(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),'F_0','F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f383,f5340,f1064])).
fof(f12679,plain,(
  ( ! [X2,X0,X3,X1] : (sP8(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X2,X3)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f5340,f1066])).
fof(f12680,plain,(
  ( ! [X0,X1] : (~sP8(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),'F_0','F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f383,f5340,f1067])).
fof(f12682,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,'F_0',happ(s(fun(X1,bool),X2),s(X1,'const.min.@_1'(s(fun(X1,bool),X2)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f5340,f1068])).
fof(f12694,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X2,X3)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f5340,f1070])).
fof(f12696,plain,(
  ( ! [X2,X0,X1] : (~sP10(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),'F_0',X2)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f383,f5340,f1071])).
fof(f12697,plain,(
  ( ! [X2,X0,X1] : (sP10(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X2,'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f400,f5340,f1072])).
fof(f12698,plain,(
  ( ! [X2,X0,X1] : (sP10(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X2,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f409,f5340,f1072])).
fof(f12699,plain,(
  ( ! [X2,X0,X1] : (sP10(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),'T_0',X2)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f401,f5340,f1072])).
fof(f12700,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP10(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),'const.pred_set.SURJ_3'(s(fun(X2,X3),X4),s(fun(X2,bool),X5),s(fun(X3,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X3),X4),s(fun(X2,bool),X5)))),X6)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1305,f5340,f1072])).
fof(f12701,plain,(
  ( ! [X2,X0,X1] : (sP8(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X2,'T_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f397,f5340,f1073])).
fof(f12702,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP8(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),X2,'const.pred_set.SURJ_3'(s(fun(X3,X4),X5),s(fun(X3,bool),X6),s(fun(X4,bool),'const.pred_set.IMAGE_2'(s(fun(X3,X4),X5),s(fun(X3,bool),X6)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1267,f5340,f1073])).
fof(f12703,plain,(
  ( ! [X2,X0,X1] : (sP8(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),'T_0',X2)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f398,f5340,f1073])).
fof(f12704,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP8(happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))),'const.pred_set.SURJ_3'(s(fun(X2,X3),X4),s(fun(X2,bool),X5),s(fun(X3,bool),'const.pred_set.IMAGE_2'(s(fun(X2,X3),X4),s(fun(X2,bool),X5)))),X6)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1268,f5340,f1073])).
fof(f12715,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,X1) = s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X0,X2),sK19(X3,X4,X5,X0,X2)),s(X0,X1)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f5340,f307])).
fof(f12988,plain,(
  ( ! [X17] : (s(bool,'F_0') = s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X17)) ) | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(forward_demodulation,[],[f12749,f1415])).
fof(f12749,plain,(
  ( ! [X17] : (s(bool,'F_0') = s(bool,f(s(bool,g(s(bool,'F_0'))))) | s(bool,'T_0') = s(bool,X17)) ) | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(backward_demodulation,[],[f12747,f9611])).
fof(f9611,plain,(
  ( ! [X17] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X17))))))) | s(bool,'T_0') = s(bool,X17)) ) | ($spl41 | $spl44)),
  inference(subsumption_resolution,[],[f9592,f383])).
fof(f9592,plain,(
  ( ! [X17] : (p(s(bool,'F_0')) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X17))))))) | s(bool,'T_0') = s(bool,X17)) ) | ($spl41 | $spl44)),
  inference(superposition,[],[f9332,f5339])).
fof(f9332,plain,(
  ( ! [X17] : (p(s(bool,X17)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X17)))))) ) | $spl41),
  inference(subsumption_resolution,[],[f9319,f232])).
fof(f9319,plain,(
  ( ! [X17] : (p(s(bool,X17)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X17))))) | s(bool,'T_0') = s(bool,X17)) ) | $spl41),
  inference(superposition,[],[f9243,f5454])).
fof(f5454,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl41),
  inference(superposition,[],[f3063,f226])).
fof(f9243,plain,(
  ( ! [X6] : (p(s(bool,X6)) | s(bool,'F_0') = s(bool,f(s(bool,X6)))) ) | $spl41),
  inference(subsumption_resolution,[],[f9150,f232])).
fof(f9150,plain,(
  ( ! [X6] : (p(s(bool,X6)) | s(bool,'F_0') = s(bool,f(s(bool,X6))) | s(bool,'T_0') = s(bool,X6)) ) | $spl41),
  inference(superposition,[],[f237,f5454])).
fof(f12747,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,g(s(bool,'F_0')))) ) | ($spl0 | $spl41 | $spl46)),
  inference(forward_demodulation,[],[f12639,f3063])).
fof(f12639,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,g(s(bool,f(s(bool,'F_0')))))) ) | ($spl0 | $spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f2180,f5340,f5097])).
fof(f11959,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3071,f5340,f338])).
fof(f13302,plain,(
  $false | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f11962,f12989])).
fof(f11962,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3066,f5340,f338])).
fof(f13300,plain,(
  $false | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f11966,f12989])).
fof(f11966,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'F_0'))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f2600,f5340,f338])).
fof(f13296,plain,(
  $false | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f11971,f12989])).
fof(f11971,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'F_0'))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f2598,f5340,f338])).
fof(f13294,plain,(
  $false | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f13293,f12989])).
fof(f13293,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) ) | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(forward_demodulation,[],[f11973,f12989])).
fof(f11973,plain,(
  ( ! [X0,X1] : (s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) != s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1042,f5340,f338])).
fof(f13292,plain,(
  $false | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f13291,f12989])).
fof(f13291,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) ) | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(forward_demodulation,[],[f11974,f12989])).
fof(f11974,plain,(
  ( ! [X0,X1] : (s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) != s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1040,f5340,f338])).
fof(f13275,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12036,f12484])).
fof(f12484,plain,(
  ( ! [X0,X1] : (sP8('F_0',X0,X1)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f399,f5340,f376])).
fof(f12036,plain,(
  ( ! [X0,X1] : (~sP8('F_0',X0,X1)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f341])).
fof(f13274,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12048,f12484])).
fof(f12048,plain,(
  ( ! [X0,X1] : (~sP8('F_0',X0,X1)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f342])).
fof(f13273,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12068,f12112])).
fof(f12112,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f350])).
fof(f12068,plain,(
  ~sP7('F_0','T_0','F_0') | $spl46),
  inference(unit_resulting_resolution,[],[f464,f383,f5340,f345])).
fof(f13272,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12070,f12112])).
fof(f12070,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1260,f383,f5340,f345])).
fof(f13271,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12072,f12112])).
fof(f12072,plain,(
  ~sP7(g(s(bool,'F_0')),'F_0','F_0') | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4631,f383,f5340,f345])).
fof(f13270,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12089,f12112])).
fof(f12089,plain,(
  ~sP7('F_0','F_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f461,f383,f5340,f346])).
fof(f13269,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12090,f12112])).
fof(f12090,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('F_0','F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1258,f383,f5340,f346])).
fof(f13268,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12091,f12112])).
fof(f12091,plain,(
  ~sP7(g(s(bool,'F_0')),'F_0','F_0') | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4631,f383,f5340,f346])).
fof(f13267,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12108,f12112])).
fof(f12108,plain,(
  ( ! [X0] : (~sP7(X0,'F_0','F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f383,f5340,f348])).
fof(f13266,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12114,f219])).
fof(f12114,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f704,f5340,f353])).
fof(f13265,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12115,f5340])).
fof(f12115,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f461,f5340,f353])).
fof(f13264,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12116,f5340])).
fof(f12116,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1258,f5340,f353])).
fof(f13263,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12117,f5340])).
fof(f12117,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f464,f5340,f353])).
fof(f13262,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12118,f5340])).
fof(f12118,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1260,f5340,f353])).
fof(f13261,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12119,f5340])).
fof(f12119,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4631,f5340,f353])).
fof(f13260,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12120,f5340])).
fof(f12120,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3))))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1279,f5340,f353])).
fof(f13259,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12125,f5340])).
fof(f12125,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f704,f5340,f353])).
fof(f13258,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12126,f219])).
fof(f12126,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f461,f5340,f353])).
fof(f13257,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12127,f5340])).
fof(f12127,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3))))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1258,f5340,f353])).
fof(f13256,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12128,f5340])).
fof(f12128,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f464,f5340,f353])).
fof(f13255,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12129,f5340])).
fof(f12129,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1260,f5340,f353])).
fof(f13254,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12130,f5340])).
fof(f12130,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4631,f5340,f353])).
fof(f13253,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12131,f5340])).
fof(f12131,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1279,f5340,f353])).
fof(f13252,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12136,f219])).
fof(f12136,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f704,f5340,f354])).
fof(f13251,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12137,f5340])).
fof(f12137,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f461,f5340,f354])).
fof(f13250,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12138,f5340])).
fof(f12138,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1258,f5340,f354])).
fof(f13249,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12139,f5340])).
fof(f12139,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f464,f5340,f354])).
fof(f13248,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12140,f5340])).
fof(f12140,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1260,f5340,f354])).
fof(f13247,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12141,f5340])).
fof(f12141,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4631,f5340,f354])).
fof(f13246,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12142,f5340])).
fof(f12142,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3))))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1279,f5340,f354])).
fof(f13245,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12147,f5340])).
fof(f12147,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f704,f5340,f354])).
fof(f13244,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12148,f5340])).
fof(f12148,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f461,f5340,f354])).
fof(f13243,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12149,f5340])).
fof(f12149,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1258,f5340,f354])).
fof(f13242,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12150,f219])).
fof(f12150,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f464,f5340,f354])).
fof(f13241,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12151,f5340])).
fof(f12151,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3))))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1260,f5340,f354])).
fof(f13240,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12152,f5340])).
fof(f12152,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4631,f5340,f354])).
fof(f13239,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12153,f5340])).
fof(f12153,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1279,f5340,f354])).
fof(f13238,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12183,f12466])).
fof(f12466,plain,(
  ( ! [X0,X1] : (sP10('F_0',X0,X1)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f402,f5340,f375])).
fof(f12183,plain,(
  ( ! [X0,X1] : (~sP10('F_0',X0,X1)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f359])).
fof(f13237,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12185,f5340])).
fof(f12185,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f402,f479,f5340,f362])).
fof(f13236,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12186,f5340])).
fof(f12186,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f402,f480,f5340,f362])).
fof(f13235,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12187,f5340])).
fof(f12187,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f401,f480,f5340,f362])).
fof(f13234,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12188,f5340])).
fof(f12188,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f400,f480,f5340,f362])).
fof(f13233,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12189,f5340])).
fof(f12189,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f409,f480,f5340,f362])).
fof(f13232,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12190,f5340])).
fof(f12190,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f402,f1280,f5340,f362])).
fof(f13231,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12191,f5340])).
fof(f12191,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1305,f1280,f5340,f362])).
fof(f13230,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12192,f5340])).
fof(f12192,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f400,f1280,f5340,f362])).
fof(f13229,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12193,f5340])).
fof(f12193,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f409,f1280,f5340,f362])).
fof(f13228,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12199,f12344])).
fof(f12344,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f367])).
fof(f12199,plain,(
  ~sP9('F_0','T_0','T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f480,f219,f5340,f362])).
fof(f13227,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12201,f12344])).
fof(f12201,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),'T_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1280,f219,f5340,f362])).
fof(f13226,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12213,f12344])).
fof(f12213,plain,(
  ~sP9('T_0','F_0',g(s(bool,'F_0'))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4749,f5340,f5340,f362])).
fof(f13225,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12214,f12344])).
fof(f12214,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f479,f5340,f5340,f362])).
fof(f13224,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12216,f12344])).
fof(f12216,plain,(
  ( ! [X0] : (~sP9('F_0','T_0',X0)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f480,f5340,f5340,f362])).
fof(f13223,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12218,f12344])).
fof(f12218,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP9('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1280,f5340,f5340,f362])).
fof(f13222,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12223,f5340])).
fof(f12223,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f479,f400,f5340,f362])).
fof(f13221,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12224,f5340])).
fof(f12224,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f480,f400,f5340,f362])).
fof(f13220,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12225,f5340])).
fof(f12225,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1280,f400,f5340,f362])).
fof(f13219,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12226,f5340])).
fof(f12226,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f480,f409,f5340,f362])).
fof(f13218,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12227,f5340])).
fof(f12227,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1280,f409,f5340,f362])).
fof(f13217,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12228,f5340])).
fof(f12228,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f480,f401,f5340,f362])).
fof(f13216,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12229,f5340])).
fof(f12229,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f479,f401,f5340,f362])).
fof(f13215,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12230,f5340])).
fof(f12230,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1280,f1305,f5340,f362])).
fof(f13214,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12231,f5340])).
fof(f12231,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f479,f1305,f5340,f362])).
fof(f13213,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12232,f5340])).
fof(f12232,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f479,f402,f5340,f362])).
fof(f13212,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12235,f12344])).
fof(f12235,plain,(
  ~sP9('T_0','F_0',g(s(bool,'F_0'))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4749,f219,f5340,f362])).
fof(f13211,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12242,f12344])).
fof(f12242,plain,(
  ~sP9('T_0','F_0',g(s(bool,'F_0'))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4749,f5340,f5340,f362])).
fof(f13210,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12243,f12344])).
fof(f12243,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f479,f5340,f5340,f362])).
fof(f13209,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12244,f12344])).
fof(f12244,plain,(
  ( ! [X0] : (~sP9('F_0','T_0',X0)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f480,f5340,f5340,f362])).
fof(f13208,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12245,f12344])).
fof(f12245,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP9('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1280,f5340,f5340,f362])).
fof(f13207,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12273,f12344])).
fof(f12273,plain,(
  ~sP9('T_0','F_0',g(s(bool,'F_0'))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4749,f383,f5340,f363])).
fof(f13206,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12274,f12344])).
fof(f12274,plain,(
  ~sP9('F_0','F_0','F_0') | $spl46),
  inference(unit_resulting_resolution,[],[f479,f383,f5340,f363])).
fof(f13205,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12297,f12344])).
fof(f12297,plain,(
  ~sP9('T_0','F_0',g(s(bool,'F_0'))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4749,f383,f5340,f364])).
fof(f13204,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12298,f12344])).
fof(f12298,plain,(
  ~sP9('F_0','F_0','F_0') | $spl46),
  inference(unit_resulting_resolution,[],[f479,f383,f5340,f364])).
fof(f13203,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12318,f5340])).
fof(f12318,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f400,f383,f5340,f365])).
fof(f13202,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12319,f5340])).
fof(f12319,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f409,f383,f5340,f365])).
fof(f13201,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12320,f5340])).
fof(f12320,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f402,f383,f5340,f365])).
fof(f13200,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12321,f5340])).
fof(f12321,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f410,f383,f5340,f365])).
fof(f13199,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12324,f12344])).
fof(f12324,plain,(
  ( ! [X0,X1] : (~sP9(X0,'F_0',X1)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f383,f5340,f365])).
fof(f13198,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12336,f5340])).
fof(f12336,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f400,f383,f5340,f365])).
fof(f13197,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12337,f5340])).
fof(f12337,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f409,f383,f5340,f365])).
fof(f13196,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12338,f5340])).
fof(f12338,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f402,f383,f5340,f365])).
fof(f13195,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12339,f5340])).
fof(f12339,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f410,f383,f5340,f365])).
fof(f13194,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12340,f12344])).
fof(f12340,plain,(
  ( ! [X0] : (~sP9('T_0','F_0',X0)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f219,f383,f5340,f365])).
fof(f13193,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12342,f12344])).
fof(f12342,plain,(
  ( ! [X0,X1] : (~sP9(X0,'F_0',X1)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f383,f5340,f365])).
fof(f13192,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12369,f219])).
fof(f12369,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f755,f5340,f371])).
fof(f13191,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12370,f219])).
fof(f12370,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1314,f5340,f371])).
fof(f13190,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12371,f219])).
fof(f12371,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4749,f5340,f371])).
fof(f13189,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12372,f5340])).
fof(f12372,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f479,f5340,f371])).
fof(f13188,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12373,f5340])).
fof(f12373,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f480,f5340,f371])).
fof(f13187,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12374,f5340])).
fof(f12374,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1280,f5340,f371])).
fof(f13186,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12375,f5340])).
fof(f12375,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4832,f5340,f371])).
fof(f13185,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12376,f5340])).
fof(f12376,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3))))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1317,f5340,f371])).
fof(f13184,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12377,f5340])).
fof(f12377,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3))))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1318,f5340,f371])).
fof(f13183,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12382,f5340])).
fof(f12382,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f755,f5340,f371])).
fof(f13182,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12383,f5340])).
fof(f12383,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1314,f5340,f371])).
fof(f13181,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12384,f5340])).
fof(f12384,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4749,f5340,f371])).
fof(f13180,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12385,f5340])).
fof(f12385,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f479,f5340,f371])).
fof(f13179,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12386,f219])).
fof(f12386,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f480,f5340,f371])).
fof(f13178,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12387,f5340])).
fof(f12387,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3))))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1280,f5340,f371])).
fof(f13177,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12388,f5340])).
fof(f12388,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4832,f5340,f371])).
fof(f13176,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12389,f5340])).
fof(f12389,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1317,f5340,f371])).
fof(f13175,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12390,f5340])).
fof(f12390,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1318,f5340,f371])).
fof(f13174,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12395,f219])).
fof(f12395,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f482,f383,f5340,f372])).
fof(f13173,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12396,f219])).
fof(f12396,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f502,f383,f5340,f372])).
fof(f13172,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12397,f5340])).
fof(f12397,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f735,f383,f5340,f372])).
fof(f13171,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12398,f5340])).
fof(f12398,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f1306,f383,f5340,f372])).
fof(f13170,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12399,f5340])).
fof(f12399,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f3380,f383,f5340,f372])).
fof(f13169,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12400,f5340])).
fof(f12400,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f3660,f383,f5340,f372])).
fof(f13168,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12401,f5340])).
fof(f12401,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f736,f383,f5340,f372])).
fof(f13167,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12421,f5340])).
fof(f12421,plain,(
  ~p(s(bool,'F_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f482,f383,f5340,f372])).
fof(f13166,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12422,f5340])).
fof(f12422,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f502,f383,f5340,f372])).
fof(f13165,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12423,f219])).
fof(f12423,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f735,f383,f5340,f372])).
fof(f13164,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12424,f5340])).
fof(f12424,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3))))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1306,f383,f5340,f372])).
fof(f13163,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12425,f5340])).
fof(f12425,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f3380,f383,f5340,f372])).
fof(f13162,plain,(
  $false | ($spl0 | $spl46)),
  inference(subsumption_resolution,[],[f12426,f5340])).
fof(f12426,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f3660,f383,f5340,f372])).
fof(f13161,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12427,f219])).
fof(f12427,plain,(
  ~p(s(bool,'T_0')) | $spl46),
  inference(unit_resulting_resolution,[],[f736,f383,f5340,f372])).
fof(f13159,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12452,f400])).
fof(f12452,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'F_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f479,f5340,f375])).
fof(f13158,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12453,f401])).
fof(f12453,plain,(
  ( ! [X0] : (~sP9('F_0','T_0',X0)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f480,f5340,f375])).
fof(f13157,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12454,f1305])).
fof(f12454,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP9('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1280,f5340,f375])).
fof(f13156,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12470,f397])).
fof(f12470,plain,(
  ( ! [X0] : (~sP7('F_0',X0,'T_0')) ) | $spl46),
  inference(unit_resulting_resolution,[],[f461,f5340,f376])).
fof(f13155,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12471,f1267])).
fof(f12471,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP7('F_0',X0,'const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1258,f5340,f376])).
fof(f13154,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12472,f398])).
fof(f12472,plain,(
  ( ! [X0] : (~sP7('F_0','T_0',X0)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f464,f5340,f376])).
fof(f13153,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12473,f1268])).
fof(f12473,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP7('F_0','const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) ) | $spl46),
  inference(unit_resulting_resolution,[],[f1260,f5340,f376])).
fof(f13151,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12490,f5340])).
fof(f12490,plain,(
  ( ! [X0,X1] : (~p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f455,f5340,f1061])).
fof(f13150,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12495,f5340])).
fof(f12495,plain,(
  ( ! [X0,X1] : (~p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f390,f5340,f1062])).
fof(f13149,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12498,f5340])).
fof(f12498,plain,(
  ( ! [X0,X1] : (~p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f405,f5340,f1062])).
fof(f13148,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12504,f5340])).
fof(f12504,plain,(
  ( ! [X0,X1] : (~p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f393,f5340,f1063])).
fof(f13147,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12507,f5340])).
fof(f12507,plain,(
  ( ! [X0,X1] : (~p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f407,f5340,f1063])).
fof(f13146,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12515,f5340])).
fof(f12515,plain,(
  ( ! [X0,X1] : (~p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f402,f5340,f1068])).
fof(f13145,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12518,f5340])).
fof(f12518,plain,(
  ( ! [X0,X1] : (~p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))))) ) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f410,f5340,f1068])).
fof(f13137,plain,(
  $false | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f13136,f13109])).
fof(f13109,plain,(
  ( ! [X26,X25] : (sP10(g(s(bool,'T_0')),X25,X26)) ) | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f13015,f5340])).
fof(f13015,plain,(
  ( ! [X26,X25] : (sP10(g(s(bool,'T_0')),X25,X26) | ~p(s(bool,X25))) ) | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(backward_demodulation,[],[f12989,f2663])).
fof(f13136,plain,(
  ( ! [X0] : (~sP10(g(s(bool,'T_0')),'F_0',X0)) ) | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(forward_demodulation,[],[f12586,f12989])).
fof(f12586,plain,(
  ( ! [X0] : (~sP10(g(s(bool,'F_0')),'F_0',X0)) ) | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f5340,f2664])).
fof(f13113,plain,(
  $false | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f13049,f13109])).
fof(f13049,plain,(
  ~sP10(g(s(bool,'T_0')),'F_0','T_0') | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(backward_demodulation,[],[f12989,f4832])).
fof(f13112,plain,(
  $false | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f13045,f13108])).
fof(f13108,plain,(
  ( ! [X15,X16] : (sP8(g(s(bool,'T_0')),X16,X15)) ) | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f13010,f5340])).
fof(f13010,plain,(
  ( ! [X15,X16] : (sP8(g(s(bool,'T_0')),X16,X15) | ~p(s(bool,X15))) ) | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(backward_demodulation,[],[f12989,f2658])).
fof(f13045,plain,(
  ~sP8(g(s(bool,'T_0')),'F_0','F_0') | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(backward_demodulation,[],[f12989,f4631])).
fof(f13106,plain,(
  $false | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f12997,f12989])).
fof(f12997,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(backward_demodulation,[],[f12989,f2180])).
fof(f13105,plain,(
  $false | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f12992,f219])).
fof(f12992,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(backward_demodulation,[],[f12989,f383])).
fof(f13104,plain,(
  $false | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f13103,f5340])).
fof(f13103,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(subsumption_resolution,[],[f12990,f12989])).
fof(f12990,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | ($spl0 | $spl41 | $spl44 | $spl46)),
  inference(backward_demodulation,[],[f12989,f236])).
fof(f12746,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12657,f5340])).
fof(f12657,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f405,f5340,f1062])).
fof(f12745,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12668,f5340])).
fof(f12668,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f407,f5340,f1063])).
fof(f12744,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f12689,f5340])).
fof(f12689,plain,(
  ~p(s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) | $spl46),
  inference(unit_resulting_resolution,[],[f383,f410,f5340,f1068])).
fof(f12691,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f410,f5340,f1068])).
fof(f12688,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f402,f5340,f1068])).
fof(f12670,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f407,f5340,f1063])).
fof(f12667,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f393,f5340,f1063])).
fof(f12659,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f405,f5340,f1062])).
fof(f12656,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f390,f5340,f1062])).
fof(f12648,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f455,f5340,f1061])).
fof(f12636,plain,(
  $false | ($spl0 | $spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f405,f2180,f5340,f4492])).
fof(f12634,plain,(
  $false | ($spl0 | $spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f390,f2180,f5340,f4492])).
fof(f12629,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f405,f412,f5340,f4492])).
fof(f12627,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f390,f412,f5340,f4492])).
fof(f12622,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f405,f411,f5340,f4492])).
fof(f12620,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f390,f411,f5340,f4492])).
fof(f12611,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4832,f411,f5340,f3406])).
fof(f12606,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4631,f411,f5340,f3356])).
fof(f12601,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4631,f411,f5340,f3326])).
fof(f12598,plain,(
  $false | ($spl0 | $spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f455,f2180,f5340,f3301])).
fof(f12596,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f455,f412,f5340,f3301])).
fof(f12594,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f455,f411,f5340,f3301])).
fof(f12590,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f3660,f5340,f2664])).
fof(f12588,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f3380,f5340,f2664])).
fof(f12585,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4832,f5340,f2663])).
fof(f12583,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f410,f5340,f2661])).
fof(f12581,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f402,f5340,f2661])).
fof(f12576,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4631,f5340,f2659])).
fof(f12574,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f4631,f5340,f2658])).
fof(f12572,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f407,f5340,f2656])).
fof(f12570,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f393,f5340,f2656])).
fof(f12565,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f405,f5340,f2655])).
fof(f12563,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f383,f390,f5340,f2655])).
fof(f12558,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f455,f5340,f2654])).
fof(f12556,plain,(
  $false | ($spl32 | $spl46)),
  inference(unit_resulting_resolution,[],[f482,f383,f5340,f2100])).
fof(f12550,plain,(
  $false | ($spl30 | $spl46)),
  inference(unit_resulting_resolution,[],[f755,f5340,f2097])).
fof(f12548,plain,(
  $false | ($spl26 | $spl46)),
  inference(unit_resulting_resolution,[],[f402,f383,f5340,f2091])).
fof(f12542,plain,(
  $false | ($spl22 | $spl46)),
  inference(unit_resulting_resolution,[],[f704,f5340,f2085])).
fof(f12540,plain,(
  $false | ($spl20 | $spl46)),
  inference(unit_resulting_resolution,[],[f704,f5340,f2082])).
fof(f12538,plain,(
  $false | ($spl16 | $spl46)),
  inference(unit_resulting_resolution,[],[f393,f383,f5340,f2076])).
fof(f12531,plain,(
  $false | ($spl14 | $spl46)),
  inference(unit_resulting_resolution,[],[f390,f383,f5340,f2073])).
fof(f12524,plain,(
  $false | ($spl12 | $spl46)),
  inference(unit_resulting_resolution,[],[f455,f5340,f2070])).
fof(f12520,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f410,f5340,f1068])).
fof(f12517,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f402,f5340,f1068])).
fof(f12509,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f407,f5340,f1063])).
fof(f12506,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f393,f5340,f1063])).
fof(f12500,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f405,f5340,f1062])).
fof(f12497,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340,f390,f5340,f1062])).
fof(f12491,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f455,f5340,f1061])).
fof(f12488,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f441,f5340,f377])).
fof(f12485,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f461,f399,f5340,f376])).
fof(f12483,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1260,f1268,f5340,f376])).
fof(f12481,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f464,f398,f5340,f376])).
fof(f12479,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1258,f1267,f5340,f376])).
fof(f12477,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f461,f397,f5340,f376])).
fof(f12467,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f479,f402,f5340,f375])).
fof(f12465,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1280,f1305,f5340,f375])).
fof(f12463,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f480,f401,f5340,f375])).
fof(f12461,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f480,f409,f5340,f375])).
fof(f12459,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f479,f400,f5340,f375])).
fof(f12448,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f482,f383,f5340,f5340,f372])).
fof(f12435,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f735,f383,f219,f5340,f372])).
fof(f12420,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f482,f383,f5340,f5340,f372])).
fof(f12407,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f482,f383,f219,f5340,f372])).
fof(f12394,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f755,f5340,f5340,f371])).
fof(f12392,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f480,f219,f5340,f371])).
fof(f12381,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f755,f5340,f5340,f371])).
fof(f12379,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f755,f219,f5340,f371])).
fof(f12368,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f479,f383,f5340,f370])).
fof(f12357,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f479,f383,f383,f5340,f369])).
fof(f12345,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f746,f5340,f367])).
fof(f12343,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f400,f5340,f383,f5340,f365])).
fof(f12341,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f400,f219,f383,f5340,f365])).
fof(f12325,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f400,f5340,f383,f5340,f365])).
fof(f12323,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f402,f219,f383,f5340,f365])).
fof(f12306,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f479,f402,f383,f5340,f364])).
fof(f12303,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f479,f400,f383,f5340,f364])).
fof(f12282,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f479,f402,f383,f5340,f363])).
fof(f12279,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f479,f400,f383,f5340,f363])).
fof(f12258,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f479,f402,f5340,f5340,f362])).
fof(f12256,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1280,f1305,f5340,f5340,f362])).
fof(f12254,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f480,f401,f5340,f5340,f362])).
fof(f12252,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f480,f409,f5340,f5340,f362])).
fof(f12250,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f479,f400,f5340,f5340,f362])).
fof(f12219,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f402,f1280,f5340,f5340,f362])).
fof(f12217,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f402,f480,f5340,f5340,f362])).
fof(f12215,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f402,f479,f5340,f5340,f362])).
fof(f12202,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f402,f1280,f219,f5340,f362])).
fof(f12200,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f402,f480,f219,f5340,f362])).
fof(f12184,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f735,f383,f5340,f359])).
fof(f12171,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f690,f383,f383,f5340,f355])).
fof(f12157,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f704,f5340,f5340,f354])).
fof(f12155,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f464,f219,f5340,f354])).
fof(f12146,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f704,f5340,f5340,f354])).
fof(f12144,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f704,f219,f5340,f354])).
fof(f12135,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f704,f5340,f5340,f353])).
fof(f12133,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f461,f219,f5340,f353])).
fof(f12124,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f704,f5340,f5340,f353])).
fof(f12122,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f704,f219,f5340,f353])).
fof(f12113,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f696,f5340,f350])).
fof(f12111,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f696,f5340,f349])).
fof(f12109,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f399,f383,f383,f5340,f348])).
fof(f12098,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f461,f399,f383,f5340,f346])).
fof(f12096,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1258,f1267,f383,f5340,f346])).
fof(f12094,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f461,f397,f383,f5340,f346])).
fof(f12071,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f399,f1260,f383,f5340,f345])).
fof(f12069,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f399,f464,f383,f5340,f345])).
fof(f12049,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f690,f383,f5340,f342])).
fof(f12037,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f690,f383,f5340,f341])).
fof(f12025,plain,(
  $false | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3067,f2180,f5340,f339])).
fof(f12023,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f587,f412,f5340,f339])).
fof(f12021,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f586,f411,f5340,f339])).
fof(f12019,plain,(
  $false | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3072,f2180,f5340,f339])).
fof(f12017,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f589,f412,f5340,f339])).
fof(f12015,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f588,f411,f5340,f339])).
fof(f11993,plain,(
  $false | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5452,f3063,f5340,f338])).
fof(f11991,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f611,f418,f5340,f338])).
fof(f11989,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1042,f259,f5340,f338])).
fof(f11987,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f2600,f1415,f5340,f338])).
fof(f11984,plain,(
  $false | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5450,f3063,f5340,f338])).
fof(f11982,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f610,f418,f5340,f338])).
fof(f11980,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1040,f259,f5340,f338])).
fof(f11978,plain,(
  $false | ($spl0 | $spl46)),
  inference(unit_resulting_resolution,[],[f2598,f1415,f5340,f338])).
fof(f12743,plain,(
  $false | $spl46),
  inference(trivial_inequality_removal,[],[f11967])).
fof(f11967,plain,(
  s(bool,'F_0') != s(bool,'F_0') | $spl46),
  inference(unit_resulting_resolution,[],[f676,f5340,f338])).
fof(f12742,plain,(
  $false | $spl46),
  inference(trivial_inequality_removal,[],[f11965])).
fof(f11965,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl46),
  inference(unit_resulting_resolution,[],[f667,f5340,f338])).
fof(f11956,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f671,f5340,f336])).
fof(f11954,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f671,f5340,f335])).
fof(f11952,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f671,f5340,f334])).
fof(f11950,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f658,f5340,f330])).
fof(f11948,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f392,f383,f5340,f5340,f329])).
fof(f11938,plain,(
  $false | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f3150,f383,f219,f5340,f329])).
fof(f11925,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f392,f383,f5340,f5340,f329])).
fof(f11915,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f393,f383,f219,f5340,f329])).
fof(f11902,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f641,f5340,f326])).
fof(f11900,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f389,f383,f5340,f5340,f325])).
fof(f11890,plain,(
  $false | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5610,f383,f219,f5340,f325])).
fof(f11877,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f389,f383,f5340,f5340,f325])).
fof(f11867,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f390,f383,f219,f5340,f325])).
fof(f11822,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f1246,f389,f1248,f5340,f322])).
fof(f11820,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f391,f389,f1248,f5340,f322])).
fof(f11818,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f392,f389,f1248,f5340,f322])).
fof(f11813,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f392,f1235,f1248,f5340,f322])).
fof(f11811,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f1246,f1235,f1248,f5340,f322])).
fof(f11809,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f391,f1235,f1248,f5340,f322])).
fof(f11793,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f603,f391,f404,f395,f5340,f322])).
fof(f11791,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f603,f406,f404,f395,f5340,f322])).
fof(f11787,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f602,f391,f389,f395,f5340,f322])).
fof(f11785,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f602,f392,f389,f395,f5340,f322])).
fof(f11782,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f603,f406,f388,f395,f5340,f322])).
fof(f11780,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f602,f392,f388,f395,f5340,f322])).
fof(f11777,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f602,f391,f388,f395,f5340,f322])).
fof(f11758,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f1246,f389,f1247,f5340,f322])).
fof(f11756,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f392,f389,f1247,f5340,f322])).
fof(f11752,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f392,f1235,f1247,f5340,f322])).
fof(f11750,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1222,f1246,f1235,f1247,f5340,f322])).
fof(f11740,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f603,f391,f404,f394,f5340,f322])).
fof(f11738,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f603,f406,f404,f394,f5340,f322])).
fof(f11733,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f602,f391,f389,f394,f5340,f322])).
fof(f11731,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f602,f392,f389,f394,f5340,f322])).
fof(f11726,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f392,f1235,f394,f5340,f322])).
fof(f11724,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f1221,f391,f1235,f394,f5340,f322])).
fof(f11721,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f603,f406,f388,f394,f5340,f322])).
fof(f11719,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f602,f392,f388,f394,f5340,f322])).
fof(f11717,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f602,f391,f388,f394,f5340,f322])).
fof(f11664,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f864,f5340,f383,f5340,f321])).
fof(f11662,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f864,f219,f383,f5340,f321])).
fof(f11626,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f864,f383,f5340,f5340,f321])).
fof(f11604,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f588,f383,f219,f5340,f321])).
fof(f11593,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f441,f5340,f5340,f310])).
fof(f11591,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f441,f219,f5340,f310])).
fof(f11587,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f441,f5340,f5340,f310])).
fof(f11585,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f455,f219,f5340,f310])).
fof(f11581,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f421,f383,f5340,f299])).
fof(f11574,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f421,f383,f5340,f296])).
fof(f11567,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f425,f5340,f5340,f295])).
fof(f11565,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f425,f219,f5340,f295])).
fof(f11553,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f425,f5340,f5340,f295])).
fof(f11551,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f428,f219,f5340,f295])).
fof(f11539,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f435,f5340,f281])).
fof(f11537,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f435,f5340,f280])).
fof(f11535,plain,(
  $false | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5340,f2180,f5340,f276])).
fof(f11533,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f412,f5340,f276])).
fof(f11531,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f411,f5340,f276])).
fof(f11529,plain,(
  $false | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f219,f2180,f5340,f276])).
fof(f11527,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f219,f412,f5340,f276])).
fof(f11525,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f219,f411,f5340,f276])).
fof(f11521,plain,(
  $false | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f5340,f2180,f5340,f276])).
fof(f11519,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f412,f5340,f276])).
fof(f11517,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f5340,f411,f5340,f276])).
fof(f11515,plain,(
  $false | ($spl41 | $spl46)),
  inference(unit_resulting_resolution,[],[f219,f2180,f5340,f276])).
fof(f11513,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f219,f412,f5340,f276])).
fof(f11511,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f219,f411,f5340,f276])).
fof(f11505,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f418,f5340,f236])).
fof(f11503,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f411,f5340,f233])).
fof(f11501,plain,(
  $false | $spl46),
  inference(unit_resulting_resolution,[],[f383,f5340])).
fof(f11493,plain,(
  ( ! [X37,X38] : (sP1(X37,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X38) | s(bool,X37) = s(bool,X38)) ) | $spl50),
  inference(cnf_transformation,[],[f11493_D])).
fof(f11493_D,plain,(
  ( ! [X37,X38] : (sP1(X37,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X38) | s(bool,X37) = s(bool,X38)) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f11492,plain,(
  ( ! [X37,X38,X36] : (p(s(bool,X36)) | sP1(X37,f(s(bool,'F_0'))) | s(bool,X37) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) ) | $spl41),
  inference(subsumption_resolution,[],[f11472,f232])).
fof(f11472,plain,(
  ( ! [X37,X38,X36] : (p(s(bool,X36)) | sP1(X37,f(s(bool,'F_0'))) | s(bool,X37) = s(bool,X38) | s(bool,'T_0') = s(bool,X38) | s(bool,'T_0') = s(bool,X36)) ) | $spl41),
  inference(superposition,[],[f2114,f3087])).
fof(f3087,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl41),
  inference(trivial_inequality_removal,[],[f3081])).
fof(f3081,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X0) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl41),
  inference(superposition,[],[f2180,f518])).
fof(f11491,plain,(
  ( ! [X35,X34] : (sP1(X34,'F_0') | s(bool,'T_0') = s(bool,X35) | s(bool,X34) = s(bool,X35)) ) | $spl48),
  inference(cnf_transformation,[],[f11491_D])).
fof(f11491_D,plain,(
  ( ! [X35,X34] : (sP1(X34,'F_0') | s(bool,'T_0') = s(bool,X35) | s(bool,X34) = s(bool,X35)) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f11490,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X33)) | sP1(X34,'F_0') | s(bool,X34) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(subsumption_resolution,[],[f11471,f232])).
fof(f11471,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X33)) | sP1(X34,'F_0') | s(bool,X34) = s(bool,X35) | s(bool,'T_0') = s(bool,X35) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f2114,f226])).
fof(f6775,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729,f6731,f6733,f6735,f6737,f6739,f6741,f6743,f6745,f6751,f6753,f6756,f6774])).
fof(f6774,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,g(s(bool,'T_0')))) ) | ($spl0 | $spl38)),
  inference(forward_demodulation,[],[f6773,f6349])).
fof(f6773,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,g(s(bool,'F_0')))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6283,f6349])).
fof(f6283,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,g(s(bool,'F_0'))) | s(bool,X0) = s(bool,g(s(bool,'F_0')))) ) | $spl38),
  inference(equality_factoring,[],[f2140])).
fof(f6756,plain,(
  ( ! [X1] : (p(s(bool,X1))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6755,f6349])).
fof(f6755,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,g(s(bool,'F_0'))) | p(s(bool,X1))) ) | $spl38),
  inference(subsumption_resolution,[],[f6089,f232])).
fof(f6089,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,g(s(bool,'F_0'))) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X1)) ) | $spl38),
  inference(superposition,[],[f232,f2140])).
fof(f6753,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X1,X4) = s(X1,happ(s(fun(X0,X1),X2),s(X0,happ(s(fun(X1,X0),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)),X1,X0)),s(X1,X4)))))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6619,f219])).
fof(f6619,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s(X1,X4) = s(X1,happ(s(fun(X0,X1),X2),s(X0,happ(s(fun(X1,X0),sK19(X2,X3,'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)),X1,X0)),s(X1,X4)))))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f5743])).
fof(f6751,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(X1,X6)))))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6750,f219])).
fof(f6750,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(X1,X6)))))) ) | ($spl0 | $spl38)),
  inference(forward_demodulation,[],[f6749,f6349])).
fof(f6749,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),X2)))) | s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(X1,X6)))))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6617,f219])).
fof(f6617,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),X2)))) | s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(X1,X6)))))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f307])).
fof(f6745,plain,(
  ( ! [X83,X81,X84,X82] : (~sP7(happ(s(fun(X81,bool),X82),s(X81,'const.min.@_1'(s(fun(X81,bool),X82)))),X83,X84) | sP8(happ(s(fun(X81,bool),X82),s(X81,'const.min.@_1'(s(fun(X81,bool),X82)))),X83,X84)) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6585,f219])).
fof(f6585,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,'T_0')) | ~sP7(happ(s(fun(X81,bool),X82),s(X81,'const.min.@_1'(s(fun(X81,bool),X82)))),X83,X84) | sP8(happ(s(fun(X81,bool),X82),s(X81,'const.min.@_1'(s(fun(X81,bool),X82)))),X83,X84)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1073])).
fof(f6743,plain,(
  ( ! [X80,X78,X79,X77] : (~sP9(happ(s(fun(X77,bool),X78),s(X77,'const.min.@_1'(s(fun(X77,bool),X78)))),X79,X80) | sP10(happ(s(fun(X77,bool),X78),s(X77,'const.min.@_1'(s(fun(X77,bool),X78)))),X79,X80)) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6584,f219])).
fof(f6584,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,'T_0')) | ~sP9(happ(s(fun(X77,bool),X78),s(X77,'const.min.@_1'(s(fun(X77,bool),X78)))),X79,X80) | sP10(happ(s(fun(X77,bool),X78),s(X77,'const.min.@_1'(s(fun(X77,bool),X78)))),X79,X80)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1072])).
fof(f6741,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,X75)) | p(s(bool,X76)) | ~sP10(happ(s(fun(X73,bool),X74),s(X73,'const.min.@_1'(s(fun(X73,bool),X74)))),X76,X75)) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6583,f219])).
fof(f6583,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X75)) | p(s(bool,X76)) | ~sP10(happ(s(fun(X73,bool),X74),s(X73,'const.min.@_1'(s(fun(X73,bool),X74)))),X76,X75)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1071])).
fof(f6739,plain,(
  ( ! [X70,X72,X71,X69] : (sP10(happ(s(fun(X69,bool),X70),s(X69,'const.min.@_1'(s(fun(X69,bool),X70)))),X71,X72) | ~p(s(bool,X71))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6582,f219])).
fof(f6582,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,'T_0')) | sP10(happ(s(fun(X69,bool),X70),s(X69,'const.min.@_1'(s(fun(X69,bool),X70)))),X71,X72) | ~p(s(bool,X71))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1070])).
fof(f6737,plain,(
  ( ! [X68,X66,X67,X65] : (sP10(happ(s(fun(X65,bool),X66),s(X65,'const.min.@_1'(s(fun(X65,bool),X66)))),X68,X67) | p(s(bool,X67))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6581,f219])).
fof(f6581,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,'T_0')) | sP10(happ(s(fun(X65,bool),X66),s(X65,'const.min.@_1'(s(fun(X65,bool),X66)))),X68,X67) | p(s(bool,X67))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1069])).
fof(f6735,plain,(
  ( ! [X61,X64,X62,X63] : (p(s(bool,X63)) | ~p(s(bool,X64)) | ~sP9(X64,X63,happ(s(fun(X61,bool),X62),s(X61,'const.min.@_1'(s(fun(X61,bool),X62)))))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6580,f219])).
fof(f6580,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,'T_0')) | p(s(bool,X63)) | ~p(s(bool,X64)) | ~sP9(X64,X63,happ(s(fun(X61,bool),X62),s(X61,'const.min.@_1'(s(fun(X61,bool),X62)))))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1068])).
fof(f6733,plain,(
  ( ! [X59,X57,X60,X58] : (p(s(bool,X59)) | p(s(bool,X60)) | ~sP8(happ(s(fun(X57,bool),X58),s(X57,'const.min.@_1'(s(fun(X57,bool),X58)))),X60,X59)) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6579,f219])).
fof(f6579,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'T_0')) | p(s(bool,X59)) | p(s(bool,X60)) | ~sP8(happ(s(fun(X57,bool),X58),s(X57,'const.min.@_1'(s(fun(X57,bool),X58)))),X60,X59)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1067])).
fof(f6731,plain,(
  ( ! [X54,X56,X55,X53] : (sP8(happ(s(fun(X53,bool),X54),s(X53,'const.min.@_1'(s(fun(X53,bool),X54)))),X55,X56) | ~p(s(bool,X55))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6578,f219])).
fof(f6578,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,'T_0')) | sP8(happ(s(fun(X53,bool),X54),s(X53,'const.min.@_1'(s(fun(X53,bool),X54)))),X55,X56) | ~p(s(bool,X55))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1066])).
fof(f6729,plain,(
  ( ! [X52,X50,X51,X49] : (sP8(happ(s(fun(X49,bool),X50),s(X49,'const.min.@_1'(s(fun(X49,bool),X50)))),X52,X51) | ~p(s(bool,X51))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6577,f219])).
fof(f6577,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,'T_0')) | sP8(happ(s(fun(X49,bool),X50),s(X49,'const.min.@_1'(s(fun(X49,bool),X50)))),X52,X51) | ~p(s(bool,X51))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1065])).
fof(f6727,plain,(
  ( ! [X47,X45,X48,X46] : (p(s(bool,X47)) | p(s(bool,X48)) | ~sP7(happ(s(fun(X45,bool),X46),s(X45,'const.min.@_1'(s(fun(X45,bool),X46)))),X47,X48)) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6576,f219])).
fof(f6576,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'T_0')) | p(s(bool,X47)) | p(s(bool,X48)) | ~sP7(happ(s(fun(X45,bool),X46),s(X45,'const.min.@_1'(s(fun(X45,bool),X46)))),X47,X48)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1064])).
fof(f6725,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,X43)) | p(s(bool,X44)) | ~sP4(X43,happ(s(fun(X41,bool),X42),s(X41,'const.min.@_1'(s(fun(X41,bool),X42)))),X44)) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6575,f219])).
fof(f6575,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X43)) | p(s(bool,X44)) | ~sP4(X43,happ(s(fun(X41,bool),X42),s(X41,'const.min.@_1'(s(fun(X41,bool),X42)))),X44)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1063])).
fof(f6723,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,X39)) | p(s(bool,X40)) | ~sP5(X39,happ(s(fun(X37,bool),X38),s(X37,'const.min.@_1'(s(fun(X37,bool),X38)))),X40)) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6574,f219])).
fof(f6574,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X39)) | p(s(bool,X40)) | ~sP5(X39,happ(s(fun(X37,bool),X38),s(X37,'const.min.@_1'(s(fun(X37,bool),X38)))),X40)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1062])).
fof(f6721,plain,(
  ( ! [X35,X33,X36,X34] : (sP2(X36,X35,happ(s(fun(X33,bool),X34),s(X33,'const.min.@_1'(s(fun(X33,bool),X34))))) | ~p(s(bool,X35))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6573,f219])).
fof(f6573,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'T_0')) | sP2(X36,X35,happ(s(fun(X33,bool),X34),s(X33,'const.min.@_1'(s(fun(X33,bool),X34))))) | ~p(s(bool,X35))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1061])).
fof(f6719,plain,(
  ( ! [X30,X31,X32] : (sP1(X32,happ(s(fun(X30,bool),X31),s(X30,'const.min.@_1'(s(fun(X30,bool),X31))))) | p(s(bool,X32))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6572,f219])).
fof(f6572,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'T_0')) | sP1(X32,happ(s(fun(X30,bool),X31),s(X30,'const.min.@_1'(s(fun(X30,bool),X31))))) | p(s(bool,X32))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1060])).
fof(f6717,plain,(
  ( ! [X28,X29,X27] : (sP1(happ(s(fun(X27,bool),X28),s(X27,'const.min.@_1'(s(fun(X27,bool),X28)))),X29) | p(s(bool,X29))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6571,f219])).
fof(f6571,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | sP1(happ(s(fun(X27,bool),X28),s(X27,'const.min.@_1'(s(fun(X27,bool),X28)))),X29) | p(s(bool,X29))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1059])).
fof(f6715,plain,(
  ( ! [X26,X24,X25] : (sP0(happ(s(fun(X24,bool),X25),s(X24,'const.min.@_1'(s(fun(X24,bool),X25)))),X26)) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6570,f219])).
fof(f6570,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | sP0(happ(s(fun(X24,bool),X25),s(X24,'const.min.@_1'(s(fun(X24,bool),X25)))),X26)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1058])).
fof(f6713,plain,(
  ( ! [X23,X21,X22] : (sP0(X23,happ(s(fun(X21,bool),X22),s(X21,'const.min.@_1'(s(fun(X21,bool),X22)))))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6569,f219])).
fof(f6569,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'T_0')) | sP0(X23,happ(s(fun(X21,bool),X22),s(X21,'const.min.@_1'(s(fun(X21,bool),X22)))))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f1057])).
fof(f6527,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10(g(s(bool,'T_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f4938])).
fof(f6526,plain,(
  ~sP9(g(s(bool,'T_0')),'F_0','T_0') | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f4844])).
fof(f6525,plain,(
  ~sP10(g(s(bool,'T_0')),'F_0','T_0') | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f4832])).
fof(f6524,plain,(
  ~sP10('T_0','F_0',g(s(bool,'T_0'))) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f4749])).
fof(f6523,plain,(
  ~sP9('T_0','F_0',g(s(bool,'T_0'))) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f4731])).
fof(f6522,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8(g(s(bool,'T_0')),'const.pred_set.SURJ_3'(s(fun(X0,X1),X2),s(fun(X0,bool),X3),s(fun(X1,bool),'const.pred_set.IMAGE_2'(s(fun(X0,X1),X2),s(fun(X0,bool),X3)))),X4)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f4660])).
fof(f6521,plain,(
  ~sP8(g(s(bool,'T_0')),'F_0','F_0') | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f4631])).
fof(f6520,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8(g(s(bool,'T_0')),X0,'const.pred_set.SURJ_3'(s(fun(X1,X2),X3),s(fun(X1,bool),X4),s(fun(X2,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X2),X3),s(fun(X1,bool),X4)))))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f4624])).
fof(f6519,plain,(
  ~sP7(g(s(bool,'T_0')),'F_0','F_0') | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f4606])).
fof(f6518,plain,(
  ~sP6('T_0','F_0',g(s(bool,'T_0'))) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f4510])).
fof(f6517,plain,(
  ~sP5('T_0',g(s(bool,'T_0')),'F_0') | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f4487])).
fof(f6514,plain,(
  ( ! [X0] : (sP10(g(s(bool,'T_0')),X0,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f3660])).
fof(f6513,plain,(
  ( ! [X0] : (sP10(g(s(bool,'T_0')),'T_0',X0)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f3405])).
fof(f6512,plain,(
  ( ! [X0] : (sP10(g(s(bool,'T_0')),X0,'F_0')) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f3380])).
fof(f6511,plain,(
  ( ! [X0] : (sP8(g(s(bool,'T_0')),'T_0',X0)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f3355])).
fof(f6509,plain,(
  ( ! [X0] : (sP8(g(s(bool,'T_0')),X0,'T_0')) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f3325])).
fof(f6507,plain,(
  ( ! [X0] : (sP2(X0,'T_0',g(s(bool,'T_0')))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f3299])).
fof(f6505,plain,(
  sP1('F_0',g(s(bool,'T_0'))) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f3272])).
fof(f6503,plain,(
  sP1(g(s(bool,'T_0')),'F_0') | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f3248])).
fof(f6493,plain,(
  ~sP4('T_0',g(s(bool,'T_0')),'F_0') | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2758])).
fof(f6492,plain,(
  sP5('T_0','T_0',g(s(bool,'T_0'))) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2727])).
fof(f6491,plain,(
  ~sP4(g(s(bool,'T_0')),'T_0','F_0') | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2716])).
fof(f6671,plain,(
  ( ! [X31,X32] : (sP8(g(s(bool,'T_0')),X31,X32) | ~sP7(g(s(bool,'T_0')),X31,X32)) ) | ($spl0 | $spl38)),
  inference(forward_demodulation,[],[f6490,f6349])).
fof(f6490,plain,(
  ( ! [X31,X32] : (~sP7(g(s(bool,'T_0')),X31,X32) | sP8(g(s(bool,'F_0')),X31,X32)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2666])).
fof(f6669,plain,(
  ( ! [X30,X29] : (sP10(g(s(bool,'T_0')),X29,X30) | ~sP9(g(s(bool,'T_0')),X29,X30)) ) | ($spl0 | $spl38)),
  inference(forward_demodulation,[],[f6489,f6349])).
fof(f6489,plain,(
  ( ! [X30,X29] : (~sP9(g(s(bool,'T_0')),X29,X30) | sP10(g(s(bool,'F_0')),X29,X30)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2665])).
fof(f6488,plain,(
  ( ! [X28,X27] : (~sP10(g(s(bool,'T_0')),X28,X27) | p(s(bool,X28)) | ~p(s(bool,X27))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2664])).
fof(f6487,plain,(
  ( ! [X26,X25] : (sP10(g(s(bool,'T_0')),X25,X26) | ~p(s(bool,X25))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2663])).
fof(f6486,plain,(
  ( ! [X24,X23] : (sP10(g(s(bool,'T_0')),X24,X23) | p(s(bool,X23))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2662])).
fof(f6485,plain,(
  ( ! [X21,X22] : (~sP9(X22,X21,g(s(bool,'T_0'))) | ~p(s(bool,X22)) | p(s(bool,X21))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2661])).
fof(f6484,plain,(
  ( ! [X19,X20] : (~sP8(g(s(bool,'T_0')),X20,X19) | p(s(bool,X20)) | p(s(bool,X19))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2660])).
fof(f6483,plain,(
  ( ! [X17,X18] : (sP8(g(s(bool,'T_0')),X17,X18) | ~p(s(bool,X17))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2659])).
fof(f6482,plain,(
  ( ! [X15,X16] : (sP8(g(s(bool,'T_0')),X16,X15) | ~p(s(bool,X15))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2658])).
fof(f6481,plain,(
  ( ! [X14,X13] : (~sP7(g(s(bool,'T_0')),X13,X14) | p(s(bool,X14)) | p(s(bool,X13))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2657])).
fof(f6480,plain,(
  ( ! [X12,X11] : (~sP4(X11,g(s(bool,'T_0')),X12) | p(s(bool,X12)) | ~p(s(bool,X11))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2656])).
fof(f6479,plain,(
  ( ! [X10,X9] : (~sP5(X9,g(s(bool,'T_0')),X10) | p(s(bool,X10)) | ~p(s(bool,X9))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2655])).
fof(f6478,plain,(
  ( ! [X8,X7] : (sP2(X8,X7,g(s(bool,'T_0'))) | ~p(s(bool,X7))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2654])).
fof(f6477,plain,(
  ( ! [X6] : (sP1(X6,g(s(bool,'T_0'))) | p(s(bool,X6))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2653])).
fof(f6476,plain,(
  ( ! [X5] : (sP1(g(s(bool,'T_0')),X5) | p(s(bool,X5))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2652])).
fof(f6475,plain,(
  ( ! [X4] : (sP0(g(s(bool,'T_0')),X4)) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2651])).
fof(f6474,plain,(
  ( ! [X3] : (sP0(X3,g(s(bool,'T_0')))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2650])).
fof(f6473,plain,(
  sP6('T_0','T_0',g(s(bool,'T_0'))) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2601])).
fof(f6472,plain,(
  ~sP6('F_0','T_0',g(s(bool,'T_0'))) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2600])).
fof(f6471,plain,(
  sP6('T_0',g(s(bool,'T_0')),'T_0') | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2599])).
fof(f6470,plain,(
  ~sP6('F_0',g(s(bool,'T_0')),'T_0') | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f2598])).
fof(f6642,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6375,f6349])).
fof(f6375,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f236])).
fof(f6349,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl38)),
  inference(duplicate_literal_removal,[],[f6080])).
fof(f6080,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl38)),
  inference(superposition,[],[f2140,f1415])).
fof(f6073,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,g(s(bool,X0))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl38),
  inference(superposition,[],[f2140,f226])).
fof(f6374,plain,(
  ( ! [X17,X18] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X17,bool),X18))) | s(bool,'T_0') = s(bool,happ(s(fun(X17,bool),X18),s(X17,'const.min.@_1'(s(fun(X17,bool),X18)))))) ) | ($spl0 | $spl38)),
  inference(forward_demodulation,[],[f6071,f1415])).
fof(f6071,plain,(
  ( ! [X17,X18] : (s(bool,g(s(bool,'F_0'))) = s(bool,'|dollar|exists_1'(s(fun(X17,bool),X18))) | s(bool,'T_0') = s(bool,happ(s(fun(X17,bool),X18),s(X17,'const.min.@_1'(s(fun(X17,bool),X18)))))) ) | $spl38),
  inference(superposition,[],[f2140,f259])).
fof(f6370,plain,(
  ( ! [X13] : (s(bool,X13) = s(bool,g(s(bool,X13))) | s(bool,'T_0') = s(bool,X13)) ) | $spl38),
  inference(subsumption_resolution,[],[f6067,f411])).
fof(f6067,plain,(
  ( ! [X13] : (s(bool,X13) = s(bool,g(s(bool,X13))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,X13)) ) | $spl38),
  inference(superposition,[],[f2140,f226])).
fof(f6772,plain,(
  $false | ($spl0 | $spl10 | $spl38)),
  inference(global_subsumption,[],[f6771,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729,f6731,f6733,f6735,f6737,f6739,f6741,f6743,f6745,f6751,f6753,f6756])).
fof(f6771,plain,(
  ( ! [X73] : (sP1(g(s(bool,'T_0')),'T_0') | p(s(bool,X73))) ) | ($spl0 | $spl10 | $spl38)),
  inference(forward_demodulation,[],[f6770,f6349])).
fof(f6770,plain,(
  ( ! [X73] : (p(s(bool,X73)) | sP1(g(s(bool,'F_0')),'T_0')) ) | ($spl10 | $spl38)),
  inference(subsumption_resolution,[],[f6239,f232])).
fof(f6239,plain,(
  ( ! [X73] : (p(s(bool,X73)) | sP1(g(s(bool,'F_0')),'T_0') | s(bool,'T_0') = s(bool,X73)) ) | ($spl10 | $spl38)),
  inference(superposition,[],[f2067,f2140])).
fof(f6769,plain,(
  $false | ($spl0 | $spl6 | $spl38)),
  inference(global_subsumption,[],[f6768,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729,f6731,f6733,f6735,f6737,f6739,f6741,f6743,f6745,f6751,f6753,f6756])).
fof(f6768,plain,(
  ( ! [X72] : (sP1('T_0',g(s(bool,'T_0'))) | p(s(bool,X72))) ) | ($spl0 | $spl6 | $spl38)),
  inference(forward_demodulation,[],[f6767,f6349])).
fof(f6767,plain,(
  ( ! [X72] : (p(s(bool,X72)) | sP1('T_0',g(s(bool,'F_0')))) ) | ($spl6 | $spl38)),
  inference(subsumption_resolution,[],[f6238,f232])).
fof(f6238,plain,(
  ( ! [X72] : (p(s(bool,X72)) | sP1('T_0',g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X72)) ) | ($spl6 | $spl38)),
  inference(superposition,[],[f2063,f2140])).
fof(f6757,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729,f6731,f6733,f6735,f6737,f6739,f6741,f6743,f6745,f6751,f6753,f6756])).
fof(f6754,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729,f6731,f6733,f6735,f6737,f6739,f6741,f6743,f6745,f6751,f6753])).
fof(f6752,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729,f6731,f6733,f6735,f6737,f6739,f6741,f6743,f6745,f6751])).
fof(f6746,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729,f6731,f6733,f6735,f6737,f6739,f6741,f6743,f6745])).
fof(f6744,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729,f6731,f6733,f6735,f6737,f6739,f6741,f6743])).
fof(f6742,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729,f6731,f6733,f6735,f6737,f6739,f6741])).
fof(f6740,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729,f6731,f6733,f6735,f6737,f6739])).
fof(f6738,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729,f6731,f6733,f6735,f6737])).
fof(f6736,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729,f6731,f6733,f6735])).
fof(f6734,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729,f6731,f6733])).
fof(f6732,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729,f6731])).
fof(f6730,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727,f6729])).
fof(f6728,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725,f6727])).
fof(f6726,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723,f6725])).
fof(f6724,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721,f6723])).
fof(f6722,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719,f6721])).
fof(f6720,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717,f6719])).
fof(f6718,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715,f6717])).
fof(f6716,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713,f6715])).
fof(f6714,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527,f6713])).
fof(f6710,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6538,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527])).
fof(f6538,plain,(
  sP5('T_0',f(s(bool,'T_0')),'F_0') | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f5610])).
fof(f6709,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6537,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527])).
fof(f6537,plain,(
  ~sP3(f(s(bool,'T_0')),'F_0','F_0') | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f5592])).
fof(f5592,plain,(
  ~sP3(f(s(bool,'F_0')),'F_0','F_0') | $spl41),
  inference(unit_resulting_resolution,[],[f383,f393,f390,f5452,f323])).
fof(f6708,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6536,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527])).
fof(f6536,plain,(
  ~sP3('F_0',f(s(bool,'T_0')),'F_0') | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f5562])).
fof(f5562,plain,(
  ~sP3('F_0',f(s(bool,'F_0')),'F_0') | $spl41),
  inference(unit_resulting_resolution,[],[f383,f392,f390,f5450,f324])).
fof(f6707,plain,(
  $false | ($spl0 | $spl10 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6535,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527])).
fof(f6535,plain,(
  sP1(f(s(bool,'T_0')),'T_0') | ($spl0 | $spl10 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f5536])).
fof(f6706,plain,(
  $false | ($spl0 | $spl6 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6534,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527])).
fof(f6534,plain,(
  sP1('T_0',f(s(bool,'T_0'))) | ($spl0 | $spl6 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f5535])).
fof(f6705,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6533,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527])).
fof(f6533,plain,(
  sP6('T_0','F_0',f(s(bool,'T_0'))) | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f5453])).
fof(f6704,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6532,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527])).
fof(f6532,plain,(
  ~sP6('F_0','F_0',f(s(bool,'T_0'))) | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f5452])).
fof(f6703,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6531,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527])).
fof(f6531,plain,(
  sP6('T_0',f(s(bool,'T_0')),'F_0') | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f5451])).
fof(f6702,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6530,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527])).
fof(f6530,plain,(
  ~sP6('F_0',f(s(bool,'T_0')),'F_0') | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f5450])).
fof(f6701,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526,f6527])).
fof(f6700,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525,f6526])).
fof(f6699,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524,f6525])).
fof(f6698,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523,f6524])).
fof(f6697,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522,f6523])).
fof(f6696,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521,f6522])).
fof(f6695,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520,f6521])).
fof(f6694,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519,f6520])).
fof(f6693,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518,f6519])).
fof(f6692,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517,f6518])).
fof(f6691,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514,f6517])).
fof(f6690,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513,f6514])).
fof(f6689,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512,f6513])).
fof(f6688,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511,f6512])).
fof(f6687,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509,f6511])).
fof(f6686,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507,f6509])).
fof(f6685,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505,f6507])).
fof(f6684,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503,f6505])).
fof(f6683,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493,f6503])).
fof(f6682,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6502,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493])).
fof(f6502,plain,(
  sP4('T_0',f(s(bool,'T_0')),'F_0') | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f3150])).
fof(f6681,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6501,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493])).
fof(f6501,plain,(
  sP4(f(s(bool,'T_0')),'T_0','F_0') | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f3120])).
fof(f6680,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6500,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493])).
fof(f6500,plain,(
  ~sP5('T_0','T_0',f(s(bool,'T_0'))) | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f3108])).
fof(f3108,plain,(
  ~sP5('T_0','T_0',f(s(bool,'F_0'))) | $spl41),
  inference(unit_resulting_resolution,[],[f219,f396,f391,f3066,f322])).
fof(f6679,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6498,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493])).
fof(f6498,plain,(
  sP6('F_0','T_0',f(s(bool,'T_0'))) | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f3072])).
fof(f6678,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6497,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493])).
fof(f6497,plain,(
  ~sP6('T_0','T_0',f(s(bool,'T_0'))) | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f3071])).
fof(f6677,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6496,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493])).
fof(f6496,plain,(
  sP6('F_0',f(s(bool,'T_0')),'T_0') | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f3067])).
fof(f6676,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f6495,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493])).
fof(f6495,plain,(
  ~sP6('T_0',f(s(bool,'T_0')),'T_0') | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f3066])).
fof(f6675,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492,f6493])).
fof(f6674,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491,f6492])).
fof(f6673,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671,f6491])).
fof(f6672,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669,f6671])).
fof(f6670,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488,f6669])).
fof(f6668,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487,f6488])).
fof(f6667,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486,f6487])).
fof(f6666,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485,f6486])).
fof(f6665,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484,f6485])).
fof(f6664,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483,f6484])).
fof(f6663,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482,f6483])).
fof(f6662,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481,f6482])).
fof(f6661,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480,f6481])).
fof(f6660,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479,f6480])).
fof(f6659,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478,f6479])).
fof(f6658,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477,f6478])).
fof(f6657,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476,f6477])).
fof(f6656,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475,f6476])).
fof(f6655,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474,f6475])).
fof(f6654,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473,f6474])).
fof(f6653,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472,f6473])).
fof(f6652,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471,f6472])).
fof(f6651,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470,f6471])).
fof(f6650,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642,f6470])).
fof(f6649,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(subsumption_resolution,[],[f6469,f6349])).
fof(f6469,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | ($spl0 | $spl38 | $spl41)),
  inference(backward_demodulation,[],[f6349,f2180])).
fof(f6644,plain,(
  $false | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6377,f219])).
fof(f6377,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl38)),
  inference(backward_demodulation,[],[f6349,f383])).
fof(f6643,plain,(
  $false | ($spl0 | $spl38)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f1415,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2601,f2600,f2599,f2598,f2602,f2650,f2651,f2652,f2653,f2654,f2655,f2656,f2657,f2658,f2659,f2660,f2661,f2662,f2663,f2664,f2665,f2666,f2685,f2693,f2716,f2719,f2727,f2730,f2758,f2761,f2773,f2843,f2852,f2870,f3248,f3249,f3257,f3259,f3263,f3265,f3272,f3273,f3281,f3284,f3286,f3290,f3292,f3299,f3301,f3309,f3311,f3315,f3318,f3325,f3326,f3334,f3337,f3339,f3343,f3347,f3355,f3356,f3362,f3372,f3380,f3381,f3387,f3397,f3405,f3406,f3417,f3660,f3662,f3668,f3670,f3677,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4487,f4492,f4510,f4511,f4520,f4598,f4606,f4609,f4624,f4631,f4632,f4644,f4660,f4725,f4731,f4735,f4749,f4750,f4761,f4832,f4835,f4844,f4846,f4862,f4938,f4998,f5080,f5096,f5097,f5098,f5099,f2140,f5442,f5444,f5547,f5549,f5571,f5573,f5601,f5603,f5630,f5632,f5743,f5744,f5750,f5751,f5752,f5753,f5754,f5755,f5756,f5757,f5758,f5759,f5760,f5761,f5762,f5763,f5764,f5829,f5895,f5961,f6027,f6370,f6374,f6073,f6349,f6642])).
fof(f6373,plain,(
  $false | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6372,f411])).
fof(f6372,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl38)),
  inference(forward_demodulation,[],[f6371,f1415])).
fof(f6371,plain,(
  s(bool,'F_0') = s(bool,g(s(bool,'F_0'))) | $spl38),
  inference(subsumption_resolution,[],[f6069,f412])).
fof(f6069,plain,(
  s(bool,'F_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | $spl38),
  inference(superposition,[],[f2140,f418])).
fof(f6369,plain,(
  $false | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6368,f411])).
fof(f6368,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl38)),
  inference(condensation,[],[f6367])).
fof(f6367,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,X9)) ) | ($spl0 | $spl38)),
  inference(forward_demodulation,[],[f6366,f1415])).
fof(f6366,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X9)) ) | $spl38),
  inference(forward_demodulation,[],[f6350,f418])).
fof(f6350,plain,(
  ( ! [X9] : (s(bool,g(s(bool,'F_0'))) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl38),
  inference(duplicate_literal_removal,[],[f6066])).
fof(f6066,plain,(
  ( ! [X9] : (s(bool,g(s(bool,'F_0'))) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | $spl38),
  inference(superposition,[],[f2140,f785])).
fof(f6365,plain,(
  $false | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6364,f411])).
fof(f6364,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl38)),
  inference(condensation,[],[f6363])).
fof(f6363,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl38)),
  inference(forward_demodulation,[],[f6355,f1415])).
fof(f6355,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl38),
  inference(duplicate_literal_removal,[],[f6061])).
fof(f6061,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl38),
  inference(superposition,[],[f2140,f226])).
fof(f6362,plain,(
  $false | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6361,f411])).
fof(f6361,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl38)),
  inference(forward_demodulation,[],[f6058,f1415])).
fof(f6058,plain,(
  s(bool,'F_0') = s(bool,g(s(bool,'F_0'))) | $spl38),
  inference(unit_resulting_resolution,[],[f411,f2140])).
fof(f6360,plain,(
  $false | ($spl0 | $spl38)),
  inference(subsumption_resolution,[],[f6359,f411])).
fof(f6359,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl38)),
  inference(forward_demodulation,[],[f6358,f1415])).
fof(f6358,plain,(
  s(bool,'F_0') = s(bool,g(s(bool,'F_0'))) | $spl38),
  inference(forward_demodulation,[],[f6059,f418])).
fof(f6059,plain,(
  s(bool,g(s(bool,'F_0'))) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | $spl38),
  inference(unit_resulting_resolution,[],[f412,f2140])).
fof(f6357,plain,(
  $false | ($spl0 | $spl38 | $spl41)),
  inference(subsumption_resolution,[],[f6356,f2180])).
fof(f6356,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'F_0'))) | ($spl0 | $spl38 | $spl41)),
  inference(forward_demodulation,[],[f6060,f1415])).
fof(f6060,plain,(
  s(bool,f(s(bool,'F_0'))) = s(bool,g(s(bool,'F_0'))) | ($spl38 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f2140])).
fof(f5402,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137,f3086,f3087,f3052,f3093,f3056,f3092,f3091,f3061,f3063,f3064,f3068,f3073,f1418])).
fof(f3073,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | $spl41),
  inference(unit_resulting_resolution,[],[f219,f2180,f276])).
fof(f3068,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | $spl41),
  inference(unit_resulting_resolution,[],[f219,f2180,f276])).
fof(f3064,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | $spl41),
  inference(unit_resulting_resolution,[],[f2180,f233])).
fof(f3061,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) | $spl41),
  inference(unit_resulting_resolution,[],[f383,f2180,f571])).
fof(f3091,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) | $spl41),
  inference(forward_demodulation,[],[f3060,f418])).
fof(f3060,plain,(
  s(bool,f(s(bool,'F_0'))) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | $spl41),
  inference(unit_resulting_resolution,[],[f2180,f785])).
fof(f3092,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) | $spl41),
  inference(forward_demodulation,[],[f3057,f418])).
fof(f3057,plain,(
  s(bool,f(s(bool,'F_0'))) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | $spl41),
  inference(unit_resulting_resolution,[],[f412,f2180,f518])).
fof(f3056,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) | $spl41),
  inference(unit_resulting_resolution,[],[f411,f2180,f518])).
fof(f3093,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) | $spl41),
  inference(forward_demodulation,[],[f3053,f418])).
fof(f3053,plain,(
  s(bool,f(s(bool,'F_0'))) = s(bool,'const.pred_set.countable_1'(s(fun(sK11,bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',sK11),sK12),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) | $spl41),
  inference(unit_resulting_resolution,[],[f412,f2180,f518])).
fof(f3052,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) | $spl41),
  inference(unit_resulting_resolution,[],[f411,f2180,f518])).
fof(f3086,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X1)) ) | $spl41),
  inference(trivial_inequality_removal,[],[f3082])).
fof(f3082,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X1) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X1)) ) | $spl41),
  inference(superposition,[],[f2180,f518])).
fof(f3137,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | $spl41),
  inference(unit_resulting_resolution,[],[f395,f391,f388,f3071,f322])).
fof(f3167,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | $spl41),
  inference(unit_resulting_resolution,[],[f3108,f326])).
fof(f3178,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | $spl41),
  inference(unit_resulting_resolution,[],[f219,f383,f3120,f329])).
fof(f3240,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | $spl41),
  inference(unit_resulting_resolution,[],[f219,f383,f3150,f329])).
fof(f3924,plain,(
  ~sP6('T_0',f(s(bool,f(s(bool,'F_0')))),'T_0') | $spl41),
  inference(unit_resulting_resolution,[],[f2180,f3111])).
fof(f3956,plain,(
  sP6('F_0',f(s(bool,f(s(bool,'F_0')))),'T_0') | $spl41),
  inference(unit_resulting_resolution,[],[f2180,f3122])).
fof(f3983,plain,(
  ~sP6('T_0','T_0',f(s(bool,f(s(bool,'F_0'))))) | $spl41),
  inference(unit_resulting_resolution,[],[f2180,f3140])).
fof(f4015,plain,(
  sP6('F_0','T_0',f(s(bool,f(s(bool,'F_0'))))) | $spl41),
  inference(unit_resulting_resolution,[],[f2180,f3152])).
fof(f4226,plain,(
  ~sP5('T_0','T_0',f(s(bool,f(s(bool,'F_0'))))) | $spl41),
  inference(unit_resulting_resolution,[],[f2180,f3169])).
fof(f4258,plain,(
  sP4(f(s(bool,f(s(bool,'F_0')))),'T_0','F_0') | $spl41),
  inference(unit_resulting_resolution,[],[f2180,f3179])).
fof(f4285,plain,(
  sP4('T_0',f(s(bool,f(s(bool,'F_0')))),'F_0') | $spl41),
  inference(unit_resulting_resolution,[],[f2180,f3241])).
fof(f3241,plain,(
  ( ! [X0] : (sP4('T_0',f(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl41),
  inference(superposition,[],[f3150,f226])).
fof(f3179,plain,(
  ( ! [X0] : (sP4(f(s(bool,X0)),'T_0','F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl41),
  inference(superposition,[],[f3120,f226])).
fof(f3169,plain,(
  ( ! [X0] : (~sP5('T_0','T_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl41),
  inference(superposition,[],[f3108,f226])).
fof(f3152,plain,(
  ( ! [X0] : (sP6('F_0','T_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl41),
  inference(superposition,[],[f3072,f226])).
fof(f3140,plain,(
  ( ! [X0] : (~sP6('T_0','T_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl41),
  inference(superposition,[],[f3071,f226])).
fof(f3122,plain,(
  ( ! [X0] : (sP6('F_0',f(s(bool,X0)),'T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl41),
  inference(superposition,[],[f3067,f226])).
fof(f3111,plain,(
  ( ! [X0] : (~sP6('T_0',f(s(bool,X0)),'T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl41),
  inference(superposition,[],[f3066,f226])).
fof(f3074,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl41),
  inference(superposition,[],[f2180,f226])).
fof(f5401,plain,(
  $false | ($spl5 | $spl38 | $spl41)),
  inference(global_subsumption,[],[f2140,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137,f3086,f3087,f3052,f3093,f3056,f3092,f3091,f3061,f3063,f3064,f3068,f3073])).
fof(f5400,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137,f3086,f3087,f3052,f3093,f3056,f3092,f3091,f3061,f3063,f3064,f3068,f3073])).
fof(f5399,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137,f3086,f3087,f3052,f3093,f3056,f3092,f3091,f3061,f3063,f3064,f3068])).
fof(f5398,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137,f3086,f3087,f3052,f3093,f3056,f3092,f3091,f3061,f3063,f3064])).
fof(f5397,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137,f3086,f3087,f3052,f3093,f3056,f3092,f3091,f3061,f3063])).
fof(f5396,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137,f3086,f3087,f3052,f3093,f3056,f3092,f3091,f3061])).
fof(f5395,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137,f3086,f3087,f3052,f3093,f3056,f3092,f3091])).
fof(f5394,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137,f3086,f3087,f3052,f3093,f3056,f3092])).
fof(f5393,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137,f3086,f3087,f3052,f3093,f3056])).
fof(f5392,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137,f3086,f3087,f3052,f3093])).
fof(f5391,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137,f3086,f3087,f3052])).
fof(f5390,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137,f3086,f3087])).
fof(f5389,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137,f3086])).
fof(f5388,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167,f3137])).
fof(f5387,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178,f3167])).
fof(f5386,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240,f3178])).
fof(f5385,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924,f3240])).
fof(f5384,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f3427,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924])).
fof(f3427,plain,(
  ( ! [X0] : (sP0(X0,g(s(bool,f(s(bool,'F_0')))))) ) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f2685])).
fof(f5383,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f3456,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924])).
fof(f3456,plain,(
  ( ! [X0] : (sP0(g(s(bool,f(s(bool,'F_0')))),X0)) ) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f2693])).
fof(f5382,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f3483,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924])).
fof(f3483,plain,(
  sP1(g(s(bool,f(s(bool,'F_0')))),'F_0') | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f3265])).
fof(f5381,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f3512,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924])).
fof(f3512,plain,(
  sP1('F_0',g(s(bool,f(s(bool,'F_0'))))) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f3292])).
fof(f5380,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f3685,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924])).
fof(f3685,plain,(
  ~sP6('F_0',g(s(bool,f(s(bool,'F_0')))),'T_0') | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f2719])).
fof(f5379,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f3719,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924])).
fof(f3719,plain,(
  sP6('T_0',g(s(bool,f(s(bool,'F_0')))),'T_0') | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f2730])).
fof(f5378,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f3746,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924])).
fof(f3746,plain,(
  ~sP6('F_0','T_0',g(s(bool,f(s(bool,'F_0'))))) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f2761])).
fof(f5377,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f3776,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924])).
fof(f3776,plain,(
  sP6('T_0','T_0',g(s(bool,f(s(bool,'F_0'))))) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f2773])).
fof(f5376,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956,f3924])).
fof(f5375,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983,f3956])).
fof(f5374,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015,f3983])).
fof(f5373,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226,f4015])).
fof(f5372,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4042,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226])).
fof(f4042,plain,(
  ~sP4(g(s(bool,f(s(bool,'F_0')))),'T_0','F_0') | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f2843])).
fof(f5371,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4081,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226])).
fof(f4081,plain,(
  sP5('T_0','T_0',g(s(bool,f(s(bool,'F_0'))))) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f2852])).
fof(f5370,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4108,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226])).
fof(f4108,plain,(
  ~sP4('T_0',g(s(bool,f(s(bool,'F_0')))),'F_0') | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f2870])).
fof(f5369,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258,f4226])).
fof(f5368,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285,f4258])).
fof(f5367,plain,(
  $false | ($spl5 | $spl41)),
  inference(global_subsumption,[],[f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455,f4285])).
fof(f5366,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4322,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f4322,plain,(
  ( ! [X0] : (sP2(X0,'T_0',g(s(bool,f(s(bool,'F_0')))))) ) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f3318])).
fof(f5365,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4349,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f4349,plain,(
  ( ! [X0] : (sP8(g(s(bool,f(s(bool,'F_0')))),X0,'T_0')) ) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f3347])).
fof(f5364,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4402,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f4402,plain,(
  ( ! [X0] : (sP8(g(s(bool,f(s(bool,'F_0')))),'T_0',X0)) ) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f3372])).
fof(f5363,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4429,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f4429,plain,(
  ( ! [X0] : (sP10(g(s(bool,f(s(bool,'F_0')))),X0,'F_0')) ) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f3397])).
fof(f5362,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4462,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f4462,plain,(
  ( ! [X0] : (sP10(g(s(bool,f(s(bool,'F_0')))),'T_0',X0)) ) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f3417])).
fof(f5361,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4536,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f4536,plain,(
  ~sP5('T_0',g(s(bool,f(s(bool,'F_0')))),'F_0') | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f4511])).
fof(f5360,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4563,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f4563,plain,(
  ~sP6('T_0','F_0',g(s(bool,f(s(bool,'F_0'))))) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f4520])).
fof(f5359,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4666,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f4666,plain,(
  ~sP7(g(s(bool,f(s(bool,'F_0')))),'F_0','F_0') | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f4632])).
fof(f5358,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4693,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f4693,plain,(
  ~sP8(g(s(bool,f(s(bool,'F_0')))),'F_0','F_0') | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f4644])).
fof(f5357,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4773,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f4773,plain,(
  ~sP9('T_0','F_0',g(s(bool,f(s(bool,'F_0'))))) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f4750])).
fof(f5356,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4800,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f4800,plain,(
  ~sP10('T_0','F_0',g(s(bool,f(s(bool,'F_0'))))) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f4761])).
fof(f5355,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4871,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f4871,plain,(
  ~sP10(g(s(bool,f(s(bool,'F_0')))),'F_0','T_0') | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f4846])).
fof(f5354,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4903,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f4903,plain,(
  ~sP9(g(s(bool,f(s(bool,'F_0')))),'F_0','T_0') | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f4862])).
fof(f5353,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f4983,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f4983,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,f(s(bool,'F_0'))))) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f2602])).
fof(f5352,plain,(
  $false | ($spl0 | $spl5 | $spl41)),
  inference(global_subsumption,[],[f5102,f218,f219,f226,f233,f232,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1118,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1411,f1413,f1418,f1428,f1427,f1426,f1425,f1423,f1422,f1429,f1445,f1452,f1453,f1459,f1461,f1467,f1468,f1507,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2139,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f2178,f1887,f1781,f1675,f1597,f307,f306,f2136,f2137,f1797,f1796,f1795,f1794,f1613,f1612,f1611,f1610,f2135,f2134,f2133,f2132,f271,f269,f268,f266,f1782,f1347,f1340,f1088,f2131,f1520,f1491,f1073,f1072,f1071,f1070,f1069,f1068,f1067,f1066,f1065,f1064,f1063,f1062,f1061,f1060,f1059,f1058,f1057,f384,f259,f261,f260,f2130,f2138,f1596,f1780,f2129,f1793,f1792,f1791,f1790,f1789,f1788,f1787,f1786,f1785,f1784,f1783,f1609,f1608,f1607,f1606,f1605,f1604,f1603,f1602,f1600,f1599,f1521,f1492,f1410,f1409,f1403,f1402,f1398,f1393,f1390,f1386,f1381,f1378,f1374,f1369,f1366,f1362,f1357,f1339,f1198,f1194,f1191,f1180,f1179,f1178,f1177,f1176,f1175,f1174,f1173,f1172,f1171,f1170,f1169,f1168,f1167,f1166,f1165,f1164,f1163,f1161,f1121,f1117,f1116,f1115,f1114,f1113,f1112,f1111,f1110,f1109,f1108,f1107,f1106,f1105,f1104,f1103,f1102,f1101,f1100,f1098,f1097,f1096,f1095,f1094,f1078,f1077,f418,f383,f237,f236,f2180,f3072,f3071,f3067,f3066,f3074,f3108,f3111,f3120,f3122,f3140,f3150,f3152,f3169,f3179,f3241,f3257,f3259,f3263,f3281,f3284,f3286,f3290,f3309,f3311,f3315,f3334,f3337,f3339,f3343,f3362,f3387,f3668,f3670,f3710,f3712,f4011,f4074,f4136,f4195,f4253,f4252,f4312,f4383,f4382,f4457,f4456,f4455])).
fof(f5102,plain,(
  p(s(bool,g(s(bool,f(s(bool,'F_0')))))) | ($spl0 | $spl41)),
  inference(unit_resulting_resolution,[],[f2180,f5080])).
fof(f5339,plain,(
  ( ! [X4] : (s(bool,'F_0') = s(bool,f(s(bool,X4))) | s(bool,'T_0') = s(bool,X4)) ) | $spl44),
  inference(cnf_transformation,[],[f5339_D])).
fof(f5339_D,plain,(
  ( ! [X4] : (s(bool,'F_0') = s(bool,f(s(bool,X4))) | s(bool,'T_0') = s(bool,X4)) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f5341,plain,(
  ( ! [X6,X7] : (p(s(bool,X7)) | s(bool,'F_0') = s(bool,f(s(bool,X6))) | s(bool,'T_0') = s(bool,X6)) ) | $spl4),
  inference(subsumption_resolution,[],[f5325,f232])).
fof(f5325,plain,(
  ( ! [X6,X7] : (p(s(bool,X7)) | s(bool,'F_0') = s(bool,f(s(bool,X6))) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,X6)) ) | $spl4),
  inference(superposition,[],[f5266,f518])).
fof(f5266,plain,(
  ( ! [X4] : (p(s(bool,X4)) | s(bool,'F_0') = s(bool,f(s(bool,X4)))) ) | $spl4),
  inference(subsumption_resolution,[],[f5181,f232])).
fof(f5181,plain,(
  ( ! [X4] : (p(s(bool,X4)) | s(bool,'F_0') = s(bool,f(s(bool,X4))) | s(bool,'T_0') = s(bool,X4)) ) | $spl4),
  inference(superposition,[],[f237,f2882])).
fof(f2882,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(superposition,[],[f1417,f226])).
fof(f1417,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) | $spl4),
  inference(cnf_transformation,[],[f1417_D])).
fof(f1417_D,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f5338,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | s(bool,'F_0') = s(bool,f(s(bool,X4))) | s(bool,'T_0') = s(bool,X4)) ) | $spl4),
  inference(subsumption_resolution,[],[f5324,f232])).
fof(f5324,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | s(bool,'F_0') = s(bool,f(s(bool,X4))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X5)) ) | $spl4),
  inference(superposition,[],[f5266,f518])).
fof(f2387,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354,f2356,f2358,f2360,f2362,f2364,f2366,f2368,f2370,f2372,f2374,f2376,f2378,f2380,f2386])).
fof(f2386,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(X1,X6)))))) ) | $spl8),
  inference(subsumption_resolution,[],[f2385,f219])).
fof(f2385,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(X1,X6)))))) ) | $spl8),
  inference(forward_demodulation,[],[f2384,f2064])).
fof(f2384,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),X2)))) | s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(X1,X6)))))) ) | $spl8),
  inference(subsumption_resolution,[],[f2325,f219])).
fof(f2325,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),X2)))) | s(X1,X6) = s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),sK19(X4,X3,X2,X1,X0)),s(X1,X6)))))) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f307])).
fof(f2380,plain,(
  ( ! [X83,X81,X84,X82] : (~sP7(happ(s(fun(X81,bool),X82),s(X81,'const.min.@_1'(s(fun(X81,bool),X82)))),X83,X84) | sP8(happ(s(fun(X81,bool),X82),s(X81,'const.min.@_1'(s(fun(X81,bool),X82)))),X83,X84)) ) | $spl8),
  inference(subsumption_resolution,[],[f2299,f219])).
fof(f2299,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,'T_0')) | ~sP7(happ(s(fun(X81,bool),X82),s(X81,'const.min.@_1'(s(fun(X81,bool),X82)))),X83,X84) | sP8(happ(s(fun(X81,bool),X82),s(X81,'const.min.@_1'(s(fun(X81,bool),X82)))),X83,X84)) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1073])).
fof(f2378,plain,(
  ( ! [X80,X78,X79,X77] : (~sP9(happ(s(fun(X77,bool),X78),s(X77,'const.min.@_1'(s(fun(X77,bool),X78)))),X79,X80) | sP10(happ(s(fun(X77,bool),X78),s(X77,'const.min.@_1'(s(fun(X77,bool),X78)))),X79,X80)) ) | $spl8),
  inference(subsumption_resolution,[],[f2298,f219])).
fof(f2298,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,'T_0')) | ~sP9(happ(s(fun(X77,bool),X78),s(X77,'const.min.@_1'(s(fun(X77,bool),X78)))),X79,X80) | sP10(happ(s(fun(X77,bool),X78),s(X77,'const.min.@_1'(s(fun(X77,bool),X78)))),X79,X80)) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1072])).
fof(f2376,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,X75)) | p(s(bool,X76)) | ~sP10(happ(s(fun(X73,bool),X74),s(X73,'const.min.@_1'(s(fun(X73,bool),X74)))),X76,X75)) ) | $spl8),
  inference(subsumption_resolution,[],[f2297,f219])).
fof(f2297,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X75)) | p(s(bool,X76)) | ~sP10(happ(s(fun(X73,bool),X74),s(X73,'const.min.@_1'(s(fun(X73,bool),X74)))),X76,X75)) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1071])).
fof(f2374,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,X71)) | sP10(happ(s(fun(X69,bool),X70),s(X69,'const.min.@_1'(s(fun(X69,bool),X70)))),X71,X72)) ) | $spl8),
  inference(subsumption_resolution,[],[f2296,f219])).
fof(f2296,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,'T_0')) | ~p(s(bool,X71)) | sP10(happ(s(fun(X69,bool),X70),s(X69,'const.min.@_1'(s(fun(X69,bool),X70)))),X71,X72)) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1070])).
fof(f2372,plain,(
  ( ! [X68,X66,X67,X65] : (p(s(bool,X67)) | sP10(happ(s(fun(X65,bool),X66),s(X65,'const.min.@_1'(s(fun(X65,bool),X66)))),X68,X67)) ) | $spl8),
  inference(subsumption_resolution,[],[f2295,f219])).
fof(f2295,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,'T_0')) | p(s(bool,X67)) | sP10(happ(s(fun(X65,bool),X66),s(X65,'const.min.@_1'(s(fun(X65,bool),X66)))),X68,X67)) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1069])).
fof(f2370,plain,(
  ( ! [X61,X64,X62,X63] : (p(s(bool,X63)) | ~p(s(bool,X64)) | ~sP9(X64,X63,happ(s(fun(X61,bool),X62),s(X61,'const.min.@_1'(s(fun(X61,bool),X62)))))) ) | $spl8),
  inference(subsumption_resolution,[],[f2294,f219])).
fof(f2294,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,'T_0')) | p(s(bool,X63)) | ~p(s(bool,X64)) | ~sP9(X64,X63,happ(s(fun(X61,bool),X62),s(X61,'const.min.@_1'(s(fun(X61,bool),X62)))))) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1068])).
fof(f2368,plain,(
  ( ! [X59,X57,X60,X58] : (p(s(bool,X59)) | p(s(bool,X60)) | ~sP8(happ(s(fun(X57,bool),X58),s(X57,'const.min.@_1'(s(fun(X57,bool),X58)))),X60,X59)) ) | $spl8),
  inference(subsumption_resolution,[],[f2293,f219])).
fof(f2293,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'T_0')) | p(s(bool,X59)) | p(s(bool,X60)) | ~sP8(happ(s(fun(X57,bool),X58),s(X57,'const.min.@_1'(s(fun(X57,bool),X58)))),X60,X59)) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1067])).
fof(f2366,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X55)) | sP8(happ(s(fun(X53,bool),X54),s(X53,'const.min.@_1'(s(fun(X53,bool),X54)))),X55,X56)) ) | $spl8),
  inference(subsumption_resolution,[],[f2292,f219])).
fof(f2292,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X55)) | sP8(happ(s(fun(X53,bool),X54),s(X53,'const.min.@_1'(s(fun(X53,bool),X54)))),X55,X56)) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1066])).
fof(f2364,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,X51)) | sP8(happ(s(fun(X49,bool),X50),s(X49,'const.min.@_1'(s(fun(X49,bool),X50)))),X52,X51)) ) | $spl8),
  inference(subsumption_resolution,[],[f2291,f219])).
fof(f2291,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X51)) | sP8(happ(s(fun(X49,bool),X50),s(X49,'const.min.@_1'(s(fun(X49,bool),X50)))),X52,X51)) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1065])).
fof(f2362,plain,(
  ( ! [X47,X45,X48,X46] : (p(s(bool,X47)) | p(s(bool,X48)) | ~sP7(happ(s(fun(X45,bool),X46),s(X45,'const.min.@_1'(s(fun(X45,bool),X46)))),X47,X48)) ) | $spl8),
  inference(subsumption_resolution,[],[f2290,f219])).
fof(f2290,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'T_0')) | p(s(bool,X47)) | p(s(bool,X48)) | ~sP7(happ(s(fun(X45,bool),X46),s(X45,'const.min.@_1'(s(fun(X45,bool),X46)))),X47,X48)) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1064])).
fof(f2360,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,X43)) | p(s(bool,X44)) | ~sP4(X43,happ(s(fun(X41,bool),X42),s(X41,'const.min.@_1'(s(fun(X41,bool),X42)))),X44)) ) | $spl8),
  inference(subsumption_resolution,[],[f2289,f219])).
fof(f2289,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X43)) | p(s(bool,X44)) | ~sP4(X43,happ(s(fun(X41,bool),X42),s(X41,'const.min.@_1'(s(fun(X41,bool),X42)))),X44)) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1063])).
fof(f2358,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,X39)) | p(s(bool,X40)) | ~sP5(X39,happ(s(fun(X37,bool),X38),s(X37,'const.min.@_1'(s(fun(X37,bool),X38)))),X40)) ) | $spl8),
  inference(subsumption_resolution,[],[f2288,f219])).
fof(f2288,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X39)) | p(s(bool,X40)) | ~sP5(X39,happ(s(fun(X37,bool),X38),s(X37,'const.min.@_1'(s(fun(X37,bool),X38)))),X40)) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1062])).
fof(f2356,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,X35)) | sP2(X36,X35,happ(s(fun(X33,bool),X34),s(X33,'const.min.@_1'(s(fun(X33,bool),X34)))))) ) | $spl8),
  inference(subsumption_resolution,[],[f2287,f219])).
fof(f2287,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,X35)) | sP2(X36,X35,happ(s(fun(X33,bool),X34),s(X33,'const.min.@_1'(s(fun(X33,bool),X34)))))) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1061])).
fof(f2354,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X32)) | sP1(X32,happ(s(fun(X30,bool),X31),s(X30,'const.min.@_1'(s(fun(X30,bool),X31)))))) ) | $spl8),
  inference(subsumption_resolution,[],[f2286,f219])).
fof(f2286,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'T_0')) | p(s(bool,X32)) | sP1(X32,happ(s(fun(X30,bool),X31),s(X30,'const.min.@_1'(s(fun(X30,bool),X31)))))) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1060])).
fof(f2352,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,X29)) | sP1(happ(s(fun(X27,bool),X28),s(X27,'const.min.@_1'(s(fun(X27,bool),X28)))),X29)) ) | $spl8),
  inference(subsumption_resolution,[],[f2285,f219])).
fof(f2285,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | p(s(bool,X29)) | sP1(happ(s(fun(X27,bool),X28),s(X27,'const.min.@_1'(s(fun(X27,bool),X28)))),X29)) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1059])).
fof(f2350,plain,(
  ( ! [X26,X24,X25] : (sP0(happ(s(fun(X24,bool),X25),s(X24,'const.min.@_1'(s(fun(X24,bool),X25)))),X26)) ) | $spl8),
  inference(subsumption_resolution,[],[f2284,f219])).
fof(f2284,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | sP0(happ(s(fun(X24,bool),X25),s(X24,'const.min.@_1'(s(fun(X24,bool),X25)))),X26)) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1058])).
fof(f2348,plain,(
  ( ! [X23,X21,X22] : (sP0(X23,happ(s(fun(X21,bool),X22),s(X21,'const.min.@_1'(s(fun(X21,bool),X22)))))) ) | $spl8),
  inference(subsumption_resolution,[],[f2283,f219])).
fof(f2283,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'T_0')) | sP0(X23,happ(s(fun(X21,bool),X22),s(X21,'const.min.@_1'(s(fun(X21,bool),X22)))))) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f1057])).
fof(f2339,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl8),
  inference(subsumption_resolution,[],[f2182,f2064])).
fof(f2182,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl8),
  inference(backward_demodulation,[],[f2064,f236])).
fof(f2381,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354,f2356,f2358,f2360,f2362,f2364,f2366,f2368,f2370,f2372,f2374,f2376,f2378,f2380])).
fof(f2379,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354,f2356,f2358,f2360,f2362,f2364,f2366,f2368,f2370,f2372,f2374,f2376,f2378])).
fof(f2377,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354,f2356,f2358,f2360,f2362,f2364,f2366,f2368,f2370,f2372,f2374,f2376])).
fof(f2375,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354,f2356,f2358,f2360,f2362,f2364,f2366,f2368,f2370,f2372,f2374])).
fof(f2373,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354,f2356,f2358,f2360,f2362,f2364,f2366,f2368,f2370,f2372])).
fof(f2371,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354,f2356,f2358,f2360,f2362,f2364,f2366,f2368,f2370])).
fof(f2369,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354,f2356,f2358,f2360,f2362,f2364,f2366,f2368])).
fof(f2367,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354,f2356,f2358,f2360,f2362,f2364,f2366])).
fof(f2365,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354,f2356,f2358,f2360,f2362,f2364])).
fof(f2363,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354,f2356,f2358,f2360,f2362])).
fof(f2361,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354,f2356,f2358,f2360])).
fof(f2359,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354,f2356,f2358])).
fof(f2357,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354,f2356])).
fof(f2355,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352,f2354])).
fof(f2353,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350,f2352])).
fof(f2351,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348,f2350])).
fof(f2349,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339,f2348])).
fof(f2341,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f2184,f219])).
fof(f2184,plain,(
  ~p(s(bool,'T_0')) | $spl8),
  inference(backward_demodulation,[],[f2064,f383])).
fof(f2340,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f218,f219,f383,f226,f233,f232,f237,f236,f259,f261,f260,f384,f268,f266,f271,f269,f276,f273,f281,f280,f385,f299,f296,f295,f294,f304,f305,f307,f306,f377,f310,f309,f308,f324,f323,f322,f321,f320,f319,f318,f328,f327,f326,f325,f332,f331,f330,f329,f336,f335,f334,f333,f340,f339,f338,f337,f347,f346,f345,f376,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f364,f363,f362,f375,f360,f359,f358,f368,f367,f366,f365,f372,f371,f370,f369,f386,f387,f388,f389,f390,f391,f392,f393,f394,f395,f396,f397,f398,f399,f400,f401,f402,f403,f410,f409,f408,f407,f406,f405,f404,f412,f411,f418,f421,f422,f425,f428,f435,f441,f455,f459,f461,f464,f467,f471,f479,f480,f482,f490,f502,f518,f571,f589,f588,f587,f586,f591,f590,f603,f602,f600,f599,f611,f610,f641,f658,f667,f671,f676,f691,f690,f696,f704,f736,f735,f746,f755,f785,f820,f817,f813,f812,f864,f861,f903,f1043,f1042,f1041,f1040,f1077,f1078,f1057,f1058,f1059,f1060,f1061,f1062,f1063,f1064,f1065,f1066,f1067,f1068,f1069,f1070,f1071,f1072,f1073,f1088,f1121,f1094,f1095,f1096,f1097,f1098,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1107,f1108,f1109,f1110,f1111,f1112,f1113,f1114,f1115,f1116,f1117,f1118,f1161,f1163,f1164,f1165,f1166,f1167,f1168,f1169,f1170,f1171,f1172,f1173,f1174,f1175,f1176,f1177,f1178,f1179,f1180,f1194,f1191,f1198,f1324,f1323,f1322,f1321,f1320,f1319,f1318,f1317,f1314,f1313,f1309,f1306,f1305,f1301,f1300,f1295,f1294,f1280,f1279,f1278,f1274,f1273,f1269,f1268,f1267,f1264,f1260,f1258,f1257,f1256,f1255,f1254,f1253,f1252,f1251,f1250,f1249,f1248,f1247,f1246,f1242,f1241,f1236,f1235,f1231,f1230,f1225,f1224,f1222,f1221,f1217,f1216,f1213,f1212,f1211,f1210,f1209,f1207,f1206,f1205,f1204,f1203,f1339,f1340,f1347,f1357,f1362,f1366,f1369,f1374,f1378,f1381,f1386,f1390,f1393,f1398,f1402,f1403,f1409,f1410,f1411,f1413,f1491,f1492,f1507,f1520,f1521,f1596,f1599,f1600,f1602,f1603,f1604,f1605,f1606,f1607,f1608,f1609,f1610,f1611,f1612,f1613,f1693,f2062,f2066,f2069,f2072,f2075,f2078,f2081,f2084,f2087,f2090,f2093,f2096,f2099,f2102,f2105,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2129,f2130,f2131,f2132,f2133,f2134,f2135,f2136,f2137,f2138,f1780,f1782,f1783,f1784,f1785,f1786,f1787,f1788,f1789,f1790,f1791,f1792,f1793,f1794,f1795,f1796,f1797,f1798,f2146,f2148,f2150,f2152,f2154,f2156,f2158,f2160,f2162,f2164,f2166,f2168,f2170,f2172,f2174,f1887,f1781,f1675,f1597,f2064,f2339])).
fof(f1415,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl0),
  inference(cnf_transformation,[],[f1415_D])).
fof(f1415_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f1416,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,sK18(X0,X1,bool,bool)) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1)) ) | $spl2),
  inference(cnf_transformation,[],[f1416_D])).
fof(f1416_D,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,sK18(X0,X1,bool,bool)) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1)) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f2181,plain,(
  ( ! [X194] : (s(bool,X194) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X194)) ) | $spl42),
  inference(cnf_transformation,[],[f2181_D])).
fof(f2181_D,plain,(
  ( ! [X194] : (s(bool,X194) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X194)) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f1597,plain,(
  ( ! [X196,X194,X195] : (s(bool,X194) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X195) = s(fun(bool,bool),X196) | s(bool,'T_0') = s(bool,sK18(X195,X196,bool,bool)) | s(bool,'T_0') = s(bool,X194) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1409,f518])).
fof(f1675,plain,(
  ( ! [X196,X194,X195] : (s(bool,X194) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X195) = s(fun(bool,bool),X196) | s(bool,'T_0') = s(bool,sK18(X195,X196,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X194)) )),
  inference(superposition,[],[f1409,f518])).
fof(f2140,plain,(
  ( ! [X190] : (s(bool,X190) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X190)) ) | $spl38),
  inference(cnf_transformation,[],[f2140_D])).
fof(f2140_D,plain,(
  ( ! [X190] : (s(bool,X190) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X190)) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f2180,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl41),
  inference(cnf_transformation,[],[f2180_D])).
fof(f2180_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f1781,plain,(
  ( ! [X189,X190,X188] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X188) = s(fun(bool,bool),X189) | s(bool,'T_0') = s(bool,sK18(X188,X189,bool,bool)) | s(bool,X190) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X190)) )),
  inference(superposition,[],[f1409,f518])).
fof(f1887,plain,(
  ( ! [X189,X190,X188] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X188) = s(fun(bool,bool),X189) | s(bool,'T_0') = s(bool,sK18(X188,X189,bool,bool)) | s(bool,X190) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X190)) )),
  inference(superposition,[],[f1409,f518])).
fof(f2178,plain,(
  ( ! [X189,X190,X188] : (s(fun(bool,bool),X188) = s(fun(bool,bool),X189) | s(bool,'T_0') = s(bool,sK18(X188,X189,bool,bool)) | s(bool,X190) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X190)) ) | $spl5),
  inference(subsumption_resolution,[],[f1887,f1425])).
fof(f2106,plain,(
  ( ! [X2,X1] : (sP8('T_0',X1,X2) | ~sP7('T_0',X1,X2)) ) | $spl36),
  inference(cnf_transformation,[],[f2106_D])).
fof(f2106_D,plain,(
  ( ! [X2,X1] : (sP8('T_0',X1,X2) | ~sP7('T_0',X1,X2)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f2174,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP7('T_0',X1,X2) | sP8('T_0',X1,X2)) )),
  inference(condensation,[],[f2173])).
fof(f2173,plain,(
  ( ! [X87,X85,X86,X84] : (~sP7('T_0',X85,X86) | sP8('T_0',X85,X86) | s(bool,X84) = s(bool,X87) | s(bool,'T_0') = s(bool,X87)) )),
  inference(subsumption_resolution,[],[f1824,f571])).
fof(f1824,plain,(
  ( ! [X87,X85,X86,X84] : (~p(s(bool,X84)) | ~sP7('T_0',X85,X86) | sP8('T_0',X85,X86) | s(bool,X84) = s(bool,X87) | s(bool,'T_0') = s(bool,X87)) )),
  inference(superposition,[],[f376,f518])).
fof(f2103,plain,(
  ( ! [X2,X1] : (sP10('T_0',X1,X2) | ~sP9('T_0',X1,X2)) ) | $spl34),
  inference(cnf_transformation,[],[f2103_D])).
fof(f2103_D,plain,(
  ( ! [X2,X1] : (sP10('T_0',X1,X2) | ~sP9('T_0',X1,X2)) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f2172,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP9('T_0',X1,X2) | sP10('T_0',X1,X2)) )),
  inference(condensation,[],[f2171])).
fof(f2171,plain,(
  ( ! [X80,X83,X81,X82] : (~sP9('T_0',X81,X82) | sP10('T_0',X81,X82) | s(bool,X80) = s(bool,X83) | s(bool,'T_0') = s(bool,X83)) )),
  inference(subsumption_resolution,[],[f1823,f571])).
fof(f1823,plain,(
  ( ! [X80,X83,X81,X82] : (~p(s(bool,X80)) | ~sP9('T_0',X81,X82) | sP10('T_0',X81,X82) | s(bool,X80) = s(bool,X83) | s(bool,'T_0') = s(bool,X83)) )),
  inference(superposition,[],[f375,f518])).
fof(f2100,plain,(
  ( ! [X2,X1] : (~sP10('T_0',X2,X1) | p(s(bool,X2)) | ~p(s(bool,X1))) ) | $spl32),
  inference(cnf_transformation,[],[f2100_D])).
fof(f2100_D,plain,(
  ( ! [X2,X1] : (~sP10('T_0',X2,X1) | p(s(bool,X2)) | ~p(s(bool,X1))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f2170,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP10('T_0',X2,X1)) )),
  inference(condensation,[],[f2169])).
fof(f2169,plain,(
  ( ! [X78,X76,X79,X77] : (~p(s(bool,X77)) | p(s(bool,X78)) | ~sP10('T_0',X78,X77) | s(bool,X76) = s(bool,X79) | s(bool,'T_0') = s(bool,X79)) )),
  inference(subsumption_resolution,[],[f1822,f571])).
fof(f1822,plain,(
  ( ! [X78,X76,X79,X77] : (~p(s(bool,X76)) | ~p(s(bool,X77)) | p(s(bool,X78)) | ~sP10('T_0',X78,X77) | s(bool,X76) = s(bool,X79) | s(bool,'T_0') = s(bool,X79)) )),
  inference(superposition,[],[f372,f518])).
fof(f2097,plain,(
  ( ! [X2,X1] : (sP10('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl30),
  inference(cnf_transformation,[],[f2097_D])).
fof(f2097_D,plain,(
  ( ! [X2,X1] : (sP10('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f2168,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP10('T_0',X1,X2)) )),
  inference(condensation,[],[f2167])).
fof(f2167,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,X73)) | sP10('T_0',X73,X74) | s(bool,X72) = s(bool,X75) | s(bool,'T_0') = s(bool,X75)) )),
  inference(subsumption_resolution,[],[f1821,f571])).
fof(f1821,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,X72)) | ~p(s(bool,X73)) | sP10('T_0',X73,X74) | s(bool,X72) = s(bool,X75) | s(bool,'T_0') = s(bool,X75)) )),
  inference(superposition,[],[f371,f518])).
fof(f2094,plain,(
  ( ! [X2,X1] : (sP10('T_0',X2,X1) | p(s(bool,X1))) ) | $spl28),
  inference(cnf_transformation,[],[f2094_D])).
fof(f2094_D,plain,(
  ( ! [X2,X1] : (sP10('T_0',X2,X1) | p(s(bool,X1))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f2166,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP10('T_0',X2,X1)) )),
  inference(condensation,[],[f2165])).
fof(f2165,plain,(
  ( ! [X70,X68,X71,X69] : (p(s(bool,X69)) | sP10('T_0',X70,X69) | s(bool,X68) = s(bool,X71) | s(bool,'T_0') = s(bool,X71)) )),
  inference(subsumption_resolution,[],[f1820,f571])).
fof(f1820,plain,(
  ( ! [X70,X68,X71,X69] : (~p(s(bool,X68)) | p(s(bool,X69)) | sP10('T_0',X70,X69) | s(bool,X68) = s(bool,X71) | s(bool,'T_0') = s(bool,X71)) )),
  inference(superposition,[],[f370,f518])).
fof(f2091,plain,(
  ( ! [X2,X1] : (~sP9(X2,X1,'T_0') | ~p(s(bool,X2)) | p(s(bool,X1))) ) | $spl26),
  inference(cnf_transformation,[],[f2091_D])).
fof(f2091_D,plain,(
  ( ! [X2,X1] : (~sP9(X2,X1,'T_0') | ~p(s(bool,X2)) | p(s(bool,X1))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f2164,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP9(X2,X1,'T_0')) )),
  inference(condensation,[],[f2163])).
fof(f2163,plain,(
  ( ! [X66,X64,X67,X65] : (p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP9(X66,X65,'T_0') | s(bool,X64) = s(bool,X67) | s(bool,'T_0') = s(bool,X67)) )),
  inference(subsumption_resolution,[],[f1819,f571])).
fof(f1819,plain,(
  ( ! [X66,X64,X67,X65] : (~p(s(bool,X64)) | p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP9(X66,X65,'T_0') | s(bool,X64) = s(bool,X67) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f365,f518])).
fof(f2088,plain,(
  ( ! [X2,X1] : (~sP8('T_0',X2,X1) | p(s(bool,X2)) | p(s(bool,X1))) ) | $spl24),
  inference(cnf_transformation,[],[f2088_D])).
fof(f2088_D,plain,(
  ( ! [X2,X1] : (~sP8('T_0',X2,X1) | p(s(bool,X2)) | p(s(bool,X1))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f2162,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('T_0',X2,X1)) )),
  inference(condensation,[],[f2161])).
fof(f2161,plain,(
  ( ! [X61,X62,X60,X63] : (p(s(bool,X61)) | p(s(bool,X62)) | ~sP8('T_0',X62,X61) | s(bool,X60) = s(bool,X63) | s(bool,'T_0') = s(bool,X63)) )),
  inference(subsumption_resolution,[],[f1818,f571])).
fof(f1818,plain,(
  ( ! [X61,X62,X60,X63] : (~p(s(bool,X60)) | p(s(bool,X61)) | p(s(bool,X62)) | ~sP8('T_0',X62,X61) | s(bool,X60) = s(bool,X63) | s(bool,'T_0') = s(bool,X63)) )),
  inference(superposition,[],[f355,f518])).
fof(f2085,plain,(
  ( ! [X2,X1] : (sP8('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl22),
  inference(cnf_transformation,[],[f2085_D])).
fof(f2085_D,plain,(
  ( ! [X2,X1] : (sP8('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f2160,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP8('T_0',X1,X2)) )),
  inference(condensation,[],[f2159])).
fof(f2159,plain,(
  ( ! [X59,X57,X58,X56] : (~p(s(bool,X57)) | sP8('T_0',X57,X58) | s(bool,X56) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) )),
  inference(subsumption_resolution,[],[f1817,f571])).
fof(f1817,plain,(
  ( ! [X59,X57,X58,X56] : (~p(s(bool,X56)) | ~p(s(bool,X57)) | sP8('T_0',X57,X58) | s(bool,X56) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) )),
  inference(superposition,[],[f354,f518])).
fof(f2082,plain,(
  ( ! [X2,X1] : (sP8('T_0',X2,X1) | ~p(s(bool,X1))) ) | $spl20),
  inference(cnf_transformation,[],[f2082_D])).
fof(f2082_D,plain,(
  ( ! [X2,X1] : (sP8('T_0',X2,X1) | ~p(s(bool,X1))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f2158,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP8('T_0',X2,X1)) )),
  inference(condensation,[],[f2157])).
fof(f2157,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,X53)) | sP8('T_0',X54,X53) | s(bool,X52) = s(bool,X55) | s(bool,'T_0') = s(bool,X55)) )),
  inference(subsumption_resolution,[],[f1816,f571])).
fof(f1816,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,X52)) | ~p(s(bool,X53)) | sP8('T_0',X54,X53) | s(bool,X52) = s(bool,X55) | s(bool,'T_0') = s(bool,X55)) )),
  inference(superposition,[],[f353,f518])).
fof(f2079,plain,(
  ( ! [X2,X1] : (~sP7('T_0',X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) ) | $spl18),
  inference(cnf_transformation,[],[f2079_D])).
fof(f2079_D,plain,(
  ( ! [X2,X1] : (~sP7('T_0',X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f2156,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP7('T_0',X1,X2)) )),
  inference(condensation,[],[f2155])).
fof(f2155,plain,(
  ( ! [X50,X48,X51,X49] : (p(s(bool,X49)) | p(s(bool,X50)) | ~sP7('T_0',X49,X50) | s(bool,X48) = s(bool,X51) | s(bool,'T_0') = s(bool,X51)) )),
  inference(subsumption_resolution,[],[f1815,f571])).
fof(f1815,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,X48)) | p(s(bool,X49)) | p(s(bool,X50)) | ~sP7('T_0',X49,X50) | s(bool,X48) = s(bool,X51) | s(bool,'T_0') = s(bool,X51)) )),
  inference(superposition,[],[f348,f518])).
fof(f2076,plain,(
  ( ! [X2,X1] : (~sP4(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl16),
  inference(cnf_transformation,[],[f2076_D])).
fof(f2076_D,plain,(
  ( ! [X2,X1] : (~sP4(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f2154,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f2153])).
fof(f2153,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,X45)) | p(s(bool,X46)) | ~sP4(X45,'T_0',X46) | s(bool,X44) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f1814,f571])).
fof(f1814,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,X44)) | ~p(s(bool,X45)) | p(s(bool,X46)) | ~sP4(X45,'T_0',X46) | s(bool,X44) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f329,f518])).
fof(f2073,plain,(
  ( ! [X2,X1] : (~sP5(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl14),
  inference(cnf_transformation,[],[f2073_D])).
fof(f2073_D,plain,(
  ( ! [X2,X1] : (~sP5(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f2152,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP5(X1,'T_0',X2)) )),
  inference(condensation,[],[f2151])).
fof(f2151,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP5(X41,'T_0',X42) | s(bool,X40) = s(bool,X43) | s(bool,'T_0') = s(bool,X43)) )),
  inference(subsumption_resolution,[],[f1813,f571])).
fof(f1813,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,X40)) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP5(X41,'T_0',X42) | s(bool,X40) = s(bool,X43) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f325,f518])).
fof(f2070,plain,(
  ( ! [X2,X1] : (sP2(X2,X1,'T_0') | ~p(s(bool,X1))) ) | $spl12),
  inference(cnf_transformation,[],[f2070_D])).
fof(f2070_D,plain,(
  ( ! [X2,X1] : (sP2(X2,X1,'T_0') | ~p(s(bool,X1))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f2150,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP2(X2,X1,'T_0')) )),
  inference(condensation,[],[f2149])).
fof(f2149,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,X37)) | sP2(X38,X37,'T_0') | s(bool,X36) = s(bool,X39) | s(bool,'T_0') = s(bool,X39)) )),
  inference(subsumption_resolution,[],[f1812,f571])).
fof(f1812,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,X36)) | ~p(s(bool,X37)) | sP2(X38,X37,'T_0') | s(bool,X36) = s(bool,X39) | s(bool,'T_0') = s(bool,X39)) )),
  inference(superposition,[],[f310,f518])).
fof(f2067,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) | $spl10),
  inference(cnf_transformation,[],[f2067_D])).
fof(f2067_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f2148,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f2147])).
fof(f2147,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X34)) | sP1(X34,'T_0') | s(bool,X33) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(subsumption_resolution,[],[f1811,f571])).
fof(f1811,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,X33)) | p(s(bool,X34)) | sP1(X34,'T_0') | s(bool,X33) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f299,f518])).
fof(f2063,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) | $spl6),
  inference(cnf_transformation,[],[f2063_D])).
fof(f2063_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f2146,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f2145])).
fof(f2145,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X31)) | sP1('T_0',X31) | s(bool,X30) = s(bool,X32) | s(bool,'T_0') = s(bool,X32)) )),
  inference(subsumption_resolution,[],[f1810,f571])).
fof(f1810,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | sP1('T_0',X31) | s(bool,X30) = s(bool,X32) | s(bool,'T_0') = s(bool,X32)) )),
  inference(superposition,[],[f296,f518])).
fof(f2139,plain,(
  ( ! [X189,X190,X188] : (s(fun(bool,bool),X188) = s(fun(bool,bool),X189) | s(bool,'T_0') = s(bool,sK18(X188,X189,bool,bool)) | s(bool,X190) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X190)) ) | $spl5),
  inference(subsumption_resolution,[],[f1781,f1425])).
fof(f2105,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP7('T_0',X1,X2) | sP8('T_0',X1,X2)) )),
  inference(condensation,[],[f2104])).
fof(f2104,plain,(
  ( ! [X87,X85,X86,X84] : (~sP7('T_0',X85,X86) | sP8('T_0',X85,X86) | s(bool,X84) = s(bool,X87) | s(bool,'T_0') = s(bool,X87)) )),
  inference(subsumption_resolution,[],[f1718,f571])).
fof(f1718,plain,(
  ( ! [X87,X85,X86,X84] : (~p(s(bool,X84)) | ~sP7('T_0',X85,X86) | sP8('T_0',X85,X86) | s(bool,X84) = s(bool,X87) | s(bool,'T_0') = s(bool,X87)) )),
  inference(superposition,[],[f376,f518])).
fof(f2102,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP9('T_0',X1,X2) | sP10('T_0',X1,X2)) )),
  inference(condensation,[],[f2101])).
fof(f2101,plain,(
  ( ! [X80,X83,X81,X82] : (~sP9('T_0',X81,X82) | sP10('T_0',X81,X82) | s(bool,X80) = s(bool,X83) | s(bool,'T_0') = s(bool,X83)) )),
  inference(subsumption_resolution,[],[f1717,f571])).
fof(f1717,plain,(
  ( ! [X80,X83,X81,X82] : (~p(s(bool,X80)) | ~sP9('T_0',X81,X82) | sP10('T_0',X81,X82) | s(bool,X80) = s(bool,X83) | s(bool,'T_0') = s(bool,X83)) )),
  inference(superposition,[],[f375,f518])).
fof(f2099,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP10('T_0',X2,X1)) )),
  inference(condensation,[],[f2098])).
fof(f2098,plain,(
  ( ! [X78,X76,X79,X77] : (~p(s(bool,X77)) | p(s(bool,X78)) | ~sP10('T_0',X78,X77) | s(bool,X76) = s(bool,X79) | s(bool,'T_0') = s(bool,X79)) )),
  inference(subsumption_resolution,[],[f1716,f571])).
fof(f1716,plain,(
  ( ! [X78,X76,X79,X77] : (~p(s(bool,X76)) | ~p(s(bool,X77)) | p(s(bool,X78)) | ~sP10('T_0',X78,X77) | s(bool,X76) = s(bool,X79) | s(bool,'T_0') = s(bool,X79)) )),
  inference(superposition,[],[f372,f518])).
fof(f2096,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP10('T_0',X1,X2)) )),
  inference(condensation,[],[f2095])).
fof(f2095,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,X73)) | sP10('T_0',X73,X74) | s(bool,X72) = s(bool,X75) | s(bool,'T_0') = s(bool,X75)) )),
  inference(subsumption_resolution,[],[f1715,f571])).
fof(f1715,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,X72)) | ~p(s(bool,X73)) | sP10('T_0',X73,X74) | s(bool,X72) = s(bool,X75) | s(bool,'T_0') = s(bool,X75)) )),
  inference(superposition,[],[f371,f518])).
fof(f2093,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP10('T_0',X2,X1)) )),
  inference(condensation,[],[f2092])).
fof(f2092,plain,(
  ( ! [X70,X68,X71,X69] : (p(s(bool,X69)) | sP10('T_0',X70,X69) | s(bool,X68) = s(bool,X71) | s(bool,'T_0') = s(bool,X71)) )),
  inference(subsumption_resolution,[],[f1714,f571])).
fof(f1714,plain,(
  ( ! [X70,X68,X71,X69] : (~p(s(bool,X68)) | p(s(bool,X69)) | sP10('T_0',X70,X69) | s(bool,X68) = s(bool,X71) | s(bool,'T_0') = s(bool,X71)) )),
  inference(superposition,[],[f370,f518])).
fof(f2090,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP9(X2,X1,'T_0')) )),
  inference(condensation,[],[f2089])).
fof(f2089,plain,(
  ( ! [X66,X64,X67,X65] : (p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP9(X66,X65,'T_0') | s(bool,X64) = s(bool,X67) | s(bool,'T_0') = s(bool,X67)) )),
  inference(subsumption_resolution,[],[f1713,f571])).
fof(f1713,plain,(
  ( ! [X66,X64,X67,X65] : (~p(s(bool,X64)) | p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP9(X66,X65,'T_0') | s(bool,X64) = s(bool,X67) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f365,f518])).
fof(f2087,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('T_0',X2,X1)) )),
  inference(condensation,[],[f2086])).
fof(f2086,plain,(
  ( ! [X61,X62,X60,X63] : (p(s(bool,X61)) | p(s(bool,X62)) | ~sP8('T_0',X62,X61) | s(bool,X60) = s(bool,X63) | s(bool,'T_0') = s(bool,X63)) )),
  inference(subsumption_resolution,[],[f1712,f571])).
fof(f1712,plain,(
  ( ! [X61,X62,X60,X63] : (~p(s(bool,X60)) | p(s(bool,X61)) | p(s(bool,X62)) | ~sP8('T_0',X62,X61) | s(bool,X60) = s(bool,X63) | s(bool,'T_0') = s(bool,X63)) )),
  inference(superposition,[],[f355,f518])).
fof(f2084,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP8('T_0',X1,X2)) )),
  inference(condensation,[],[f2083])).
fof(f2083,plain,(
  ( ! [X59,X57,X58,X56] : (~p(s(bool,X57)) | sP8('T_0',X57,X58) | s(bool,X56) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) )),
  inference(subsumption_resolution,[],[f1711,f571])).
fof(f1711,plain,(
  ( ! [X59,X57,X58,X56] : (~p(s(bool,X56)) | ~p(s(bool,X57)) | sP8('T_0',X57,X58) | s(bool,X56) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) )),
  inference(superposition,[],[f354,f518])).
fof(f2081,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP8('T_0',X2,X1)) )),
  inference(condensation,[],[f2080])).
fof(f2080,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,X53)) | sP8('T_0',X54,X53) | s(bool,X52) = s(bool,X55) | s(bool,'T_0') = s(bool,X55)) )),
  inference(subsumption_resolution,[],[f1710,f571])).
fof(f1710,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,X52)) | ~p(s(bool,X53)) | sP8('T_0',X54,X53) | s(bool,X52) = s(bool,X55) | s(bool,'T_0') = s(bool,X55)) )),
  inference(superposition,[],[f353,f518])).
fof(f2078,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP7('T_0',X1,X2)) )),
  inference(condensation,[],[f2077])).
fof(f2077,plain,(
  ( ! [X50,X48,X51,X49] : (p(s(bool,X49)) | p(s(bool,X50)) | ~sP7('T_0',X49,X50) | s(bool,X48) = s(bool,X51) | s(bool,'T_0') = s(bool,X51)) )),
  inference(subsumption_resolution,[],[f1709,f571])).
fof(f1709,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,X48)) | p(s(bool,X49)) | p(s(bool,X50)) | ~sP7('T_0',X49,X50) | s(bool,X48) = s(bool,X51) | s(bool,'T_0') = s(bool,X51)) )),
  inference(superposition,[],[f348,f518])).
fof(f2075,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f2074])).
fof(f2074,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,X45)) | p(s(bool,X46)) | ~sP4(X45,'T_0',X46) | s(bool,X44) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f1708,f571])).
fof(f1708,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,X44)) | ~p(s(bool,X45)) | p(s(bool,X46)) | ~sP4(X45,'T_0',X46) | s(bool,X44) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f329,f518])).
fof(f2072,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP5(X1,'T_0',X2)) )),
  inference(condensation,[],[f2071])).
fof(f2071,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP5(X41,'T_0',X42) | s(bool,X40) = s(bool,X43) | s(bool,'T_0') = s(bool,X43)) )),
  inference(subsumption_resolution,[],[f1707,f571])).
fof(f1707,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,X40)) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP5(X41,'T_0',X42) | s(bool,X40) = s(bool,X43) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f325,f518])).
fof(f2069,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP2(X2,X1,'T_0')) )),
  inference(condensation,[],[f2068])).
fof(f2068,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,X37)) | sP2(X38,X37,'T_0') | s(bool,X36) = s(bool,X39) | s(bool,'T_0') = s(bool,X39)) )),
  inference(subsumption_resolution,[],[f1706,f571])).
fof(f1706,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,X36)) | ~p(s(bool,X37)) | sP2(X38,X37,'T_0') | s(bool,X36) = s(bool,X39) | s(bool,'T_0') = s(bool,X39)) )),
  inference(superposition,[],[f310,f518])).
fof(f2066,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f2065])).
fof(f2065,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X34)) | sP1(X34,'T_0') | s(bool,X33) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(subsumption_resolution,[],[f1705,f571])).
fof(f1705,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,X33)) | p(s(bool,X34)) | sP1(X34,'T_0') | s(bool,X33) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f299,f518])).
fof(f2062,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f2061])).
fof(f2061,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X31)) | sP1('T_0',X31) | s(bool,X30) = s(bool,X32) | s(bool,'T_0') = s(bool,X32)) )),
  inference(subsumption_resolution,[],[f1704,f571])).
fof(f1704,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | sP1('T_0',X31) | s(bool,X30) = s(bool,X32) | s(bool,'T_0') = s(bool,X32)) )),
  inference(superposition,[],[f296,f518])).
fof(f1418,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | $spl5),
  inference(cnf_transformation,[],[f1418_D])).
fof(f1418_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f1413,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK18(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1409,f226])).
% SZS output end Proof for thm.pred_set
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1167
% Passive clauses: 4345
% Generated clauses: 53009
% Final active clauses: 464
% Final passive clauses: 771
% Input formulas: 39
% Initial clauses: 157
% 
% Duplicate literals: 3735
% Trivial inequalities: 107
% Fw subsumption resolutions: 2243
% Fw demodulations: 5106
% Bw demodulations: 1598
% Condensations: 4559
% Global subsumptions: 363
% 
% Simple tautologies: 193
% Equational tautologies: 839
% Forward subsumptions: 30424
% Bw demodulations to eq. taut.: 188
% 
% Unit resulting resolution: 10015
% Factoring: 11
% Forward superposition: 12461
% Backward superposition: 9682
% Self superposition: 163
% Equality factoring: 134
% Equality resolution: 3
% 
% Split clauses: 327
% Split components: 659
% SAT solver clauses: 6236
% SAT solver unit clauses: 649
% SAT solver binary clauses: 1148
% 
% Sat splits: 327
% Sat splitting refutations: 872
% 
% Memory used [KB]: 23283
% Time elapsed: 3.409 s
% ------------------------------
% ------------------------------
% Success in time 4.729 s
