Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f14563,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f14558,f232,f390])).
fof(f390,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f390_D])).
fof(f390_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f232,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.GUESS_RULES_WEAKEN_FORALL_POINT',aHL_FALSITY)).
fof(f14558,plain,(
  $false | $spl3),
  inference(subsumption_resolution,[],[f14557,f390])).
fof(f14557,plain,(
  p(s(bool,'F_0'))),
  inference(forward_demodulation,[],[f14465,f932])).
fof(f932,plain,(
  s(bool,'F_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(sK10,sK11),sK12),s(fun(sK11,bool),sK14)))),
  inference(resolution,[],[f225,f244])).
fof(f244,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.quantHeuristics.GUESS_RULES_WEAKEN_FORALL_POINT','thm.bool.EQ_CLAUSES|split|2')).
fof(f225,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(sK10,sK11),sK12),s(fun(sK11,bool),sK14))))),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X5] : (~p(s(bool,happ(s(fun(sK11,bool),sK14),s(sK11,X5)))) | p(s(bool,happ(s(fun(sK11,bool),sK13),s(sK11,X5))))) & p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(sK10,sK11),sK12),s(fun(sK11,bool),sK13)))) & ~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(sK10,sK11),sK12),s(fun(sK11,bool),sK14))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12,sK13,sK14])],[f99])).
fof(f99,plain,(
  ? [X0,X1,X2,X3,X4] : (! [X5] : (~p(s(bool,happ(s(fun(X1,bool),X4),s(X1,X5)))) | p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X5))))) & p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) & ~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4)))))),
  inference(flattening,[],[f98])).
fof(f98,plain,(
  ? [X0,X1,X2,X3,X4] : (! [X5] : (~p(s(bool,happ(s(fun(X1,bool),X4),s(X1,X5)))) | p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X5))))) & (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) & ~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4))))))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ~! [X0,X1,X2,X3,X4] : (! [X5] : (p(s(bool,happ(s(fun(X1,bool),X4),s(X1,X5)))) => p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X5))))) => (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4))))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (! [X5] : (p(s(bool,happ(s(fun(X1,bool),X4),s(X1,X5)))) => p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X5))))) => (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (! [X11] : (p(s(bool,happ(s(fun(X7,bool),X10),s(X7,X11)))) => p(s(bool,happ(s(fun(X7,bool),X9),s(X7,X11))))) => (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X6,X7),X8),s(fun(X7,bool),X9)))) => p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X6,X7),X8),s(fun(X7,bool),X10))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (! [X11] : (p(s(bool,happ(s(fun(X7,bool),X10),s(X7,X11)))) => p(s(bool,happ(s(fun(X7,bool),X9),s(X7,X11))))) => (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X6,X7),X8),s(fun(X7,bool),X9)))) => p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X6,X7),X8),s(fun(X7,bool),X10))))))),
  file('thm.quantHeuristics.GUESS_RULES_WEAKEN_FORALL_POINT','thm.quantHeuristics.GUESS_RULES_WEAKEN_FORALL_POINT')).
fof(f14465,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(sK10,sK11),sK12),s(fun(sK11,bool),sK14))))),
  inference(resolution,[],[f4489,f4310])).
fof(f4310,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK11,bool),sK13),s(sK11,happ(s(fun(sK10,sK11),sK12),s(sK10,X0))))))) )),
  inference(resolution,[],[f310,f224])).
fof(f224,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(sK10,sK11),sK12),s(fun(sK11,bool),sK13))))),
  inference(cnf_transformation,[],[f142])).
fof(f310,plain,(
  ( ! [X2,X0,X5,X3,X1] : (~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) )),
  inference(cnf_transformation,[],[f190])).
fof(f190,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK25(X3,X2,X1,X0))))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK25])],[f189])).
fof(f189,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (? [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f188])).
fof(f188,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))))))) & (? [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))),
  inference(flattening,[],[f88])).
fof(f88,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6,X7] : ! [X21,X22] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X7,X6),X21),s(fun(X6,bool),X22)))) <=> ! [X20] : ~p(s(bool,happ(s(fun(X6,bool),X22),s(X6,happ(s(fun(X7,X6),X21),s(X7,X20)))))))),
  file('thm.quantHeuristics.GUESS_RULES_WEAKEN_FORALL_POINT','thm.quantHeuristics.GUESS_REWRITES|split|3')).
fof(f4489,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(sK11,bool),sK13),s(sK11,happ(s(fun(X0,sK11),X1),s(X0,sK25(sK14,X1,X0,sK11))))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,sK11),X1),s(fun(sK11,bool),sK14))))) )),
  inference(resolution,[],[f311,f223])).
fof(f223,plain,(
  ( ! [X5] : (~p(s(bool,happ(s(fun(sK11,bool),sK14),s(sK11,X5)))) | p(s(bool,happ(s(fun(sK11,bool),sK13),s(sK11,X5))))) )),
  inference(cnf_transformation,[],[f142])).
fof(f311,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK25(X3,X2,X1,X0))))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f190])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 611
% Passive clauses: 6779
% Generated clauses: 14272
% Final active clauses: 603
% Final passive clauses: 5873
% Input formulas: 38
% Initial clauses: 160
% 
% Duplicate literals: 272
% Trivial inequalities: 57
% Fw subsumption resolutions: 1347
% Fw demodulations: 115
% Bw demodulations: 5
% 
% Simple tautologies: 176
% Equational tautologies: 54
% Forward subsumptions: 5160
% 
% Binary resolution: 8178
% Factoring: 1102
% Forward superposition: 1608
% Backward superposition: 1237
% Self superposition: 22
% Equality factoring: 26
% Equality resolution: 19
% 
% Split clauses: 362
% Split components: 731
% SAT solver clauses: 615
% SAT solver unit clauses: 21
% SAT solver binary clauses: 126
% SAT solver learnt clauses: 1
% 
% Sat splits: 362
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 611
% TWLsolver calls for satisfiability: 344
% 
% Memory used [KB]: 7291
% Time elapsed: 0.349 s
% ------------------------------
% ------------------------------
% Success in time 0.352 s
