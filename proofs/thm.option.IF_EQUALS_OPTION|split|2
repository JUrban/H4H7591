Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f3683,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3672,f3341,f1379,f95,f152,f94,f150,f148,f3415,f3340,f3320,f96,f153,f151,f149])).
fof(f149,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) != s('type.option.option'(sK0),'const.bool.COND_3'(s(bool,sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) | $spl1),
  inference(cnf_transformation,[],[f149_D])).
fof(f149_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) != s('type.option.option'(sK0),'const.bool.COND_3'(s(bool,sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f151,plain,(
  ~p(s(bool,sK3)) | $spl3),
  inference(cnf_transformation,[],[f151_D])).
fof(f151_D,plain,(
  ~p(s(bool,sK3)) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f153,plain,(
  s(sK0,sK1) != s(sK0,sK2) | $spl5),
  inference(cnf_transformation,[],[f153_D])).
fof(f153_D,plain,(
  s(sK0,sK1) != s(sK0,sK2) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f96,plain,(
  s(sK0,sK1) != s(sK0,sK2) | ~p(s(bool,sK3)) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) != s('type.option.option'(sK0),'const.bool.COND_3'(s(bool,sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0')))),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) = s('type.option.option'(sK0),'const.bool.COND_3'(s(bool,sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) | (p(s(bool,sK3)) & s(sK0,sK1) = s(sK0,sK2))) & (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) != s('type.option.option'(sK0),'const.bool.COND_3'(s(bool,sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) | ~p(s(bool,sK3)) | s(sK0,sK1) != s(sK0,sK2))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f71])).
fof(f71,plain,(
  ? [X0,X1,X2,X3] : ((s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X3),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X0),'const.option.NONE_0'))) | (p(s(bool,X3)) & s(X0,X1) = s(X0,X2))) & (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X3),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X0),'const.option.NONE_0'))) | ~p(s(bool,X3)) | s(X0,X1) != s(X0,X2)))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ? [X0,X1,X2,X3] : ((s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X3),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X0),'const.option.NONE_0'))) | (p(s(bool,X3)) & s(X0,X1) = s(X0,X2))) & (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X3),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X0),'const.option.NONE_0'))) | (~p(s(bool,X3)) | s(X0,X1) != s(X0,X2))))),
  inference(nnf_transformation,[],[f65])).
fof(f65,plain,(
  ? [X0,X1,X2,X3] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X3),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X0),'const.option.NONE_0'))) <~> (p(s(bool,X3)) & s(X0,X1) = s(X0,X2)))),
  inference(ennf_transformation,[],[f30])).
fof(f30,plain,(
  ~! [X0,X1,X2,X3] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X3),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X0),'const.option.NONE_0'))) <=> (p(s(bool,X3)) & s(X0,X1) = s(X0,X2)))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ~! [X0] : ! [X1,X2,X3] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X3),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X0),'const.option.NONE_0'))) <=> (p(s(bool,X3)) & s(X0,X1) = s(X0,X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : (s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X7))) = s('type.option.option'(X6),'const.bool.COND_3'(s(bool,X9),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))),s('type.option.option'(X6),'const.option.NONE_0'))) <=> (p(s(bool,X9)) & s(X6,X7) = s(X6,X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : (s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X7))) = s('type.option.option'(X6),'const.bool.COND_3'(s(bool,X9),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))),s('type.option.option'(X6),'const.option.NONE_0'))) <=> (p(s(bool,X9)) & s(X6,X7) = s(X6,X8)))),
  file('thm.option.IF_EQUALS_OPTION|split|2','thm.option.IF_EQUALS_OPTION|split|2')).
fof(f3320,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f3319,f153])).
fof(f3319,plain,(
  s(sK0,sK1) = s(sK0,sK2) | ($spl0 | $spl2)),
  inference(equality_resolution,[],[f1448])).
fof(f1448,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,X0))) | s(sK0,sK2) = s(sK0,X0)) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f139,f1430])).
fof(f1430,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))) | ($spl0 | $spl2)),
  inference(superposition,[],[f1380,f136])).
fof(f136,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6] : ! [X10,X11] : s(X6,X10) = s(X6,'const.bool.COND_3'(s(bool,'T_0'),s(X6,X10),s(X6,X11)))),
  file('thm.option.IF_EQUALS_OPTION|split|2','thm.bool.COND_CLAUSES|split|0')).
fof(f1380,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) = s('type.option.option'(sK0),'const.bool.COND_3'(s(bool,'T_0'),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f148,f161])).
fof(f161,plain,(
  s(bool,'T_0') = s(bool,sK3) | $spl2),
  inference(resolution,[],[f108,f150])).
fof(f108,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.option.IF_EQUALS_OPTION|split|2','thm.bool.EQ_CLAUSES|split|0')).
fof(f139,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0,X1,X2] : ((s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0] : ! [X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6] : ! [X8,X7] : (s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X7))) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))) <=> s(X6,X7) = s(X6,X8))),
  file('thm.option.IF_EQUALS_OPTION|split|2','thm.option.SOME_|49||49|')).
fof(f3340,plain,(
  s(bool,'T_0') != s(bool,sK3) | $spl57),
  inference(cnf_transformation,[],[f3340_D])).
fof(f3340_D,plain,(
  s(bool,'T_0') != s(bool,sK3) <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f3415,plain,(
  s(bool,'T_0') != s(bool,sK3) | $spl3),
  inference(resolution,[],[f151,f107])).
fof(f107,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f75])).
fof(f148,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) = s('type.option.option'(sK0),'const.bool.COND_3'(s(bool,sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) | $spl0),
  inference(cnf_transformation,[],[f148_D])).
fof(f148_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) = s('type.option.option'(sK0),'const.bool.COND_3'(s(bool,sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f150,plain,(
  p(s(bool,sK3)) | $spl2),
  inference(cnf_transformation,[],[f150_D])).
fof(f150_D,plain,(
  p(s(bool,sK3)) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f94,plain,(
  p(s(bool,sK3)) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) = s('type.option.option'(sK0),'const.bool.COND_3'(s(bool,sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0')))),
  inference(cnf_transformation,[],[f72])).
fof(f152,plain,(
  s(sK0,sK1) = s(sK0,sK2) | $spl4),
  inference(cnf_transformation,[],[f152_D])).
fof(f152_D,plain,(
  s(sK0,sK1) = s(sK0,sK2) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f95,plain,(
  s(sK0,sK1) = s(sK0,sK2) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) = s('type.option.option'(sK0),'const.bool.COND_3'(s(bool,sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0')))),
  inference(cnf_transformation,[],[f72])).
fof(f1379,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f1378,f136])).
fof(f1378,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) != s('type.option.option'(sK0),'const.bool.COND_3'(s(bool,'T_0'),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))),s('type.option.option'(sK0),'const.option.NONE_0'))) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f1377,f161])).
fof(f1377,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) != s('type.option.option'(sK0),'const.bool.COND_3'(s(bool,sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))),s('type.option.option'(sK0),'const.option.NONE_0'))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f149,f152])).
fof(f3341,plain,(
  s(bool,'T_0') = s(bool,sK3) | $spl56),
  inference(cnf_transformation,[],[f3341_D])).
fof(f3341_D,plain,(
  s(bool,'T_0') = s(bool,sK3) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f3672,plain,(
  s(bool,'T_0') = s(bool,sK3) | $spl0),
  inference(subsumption_resolution,[],[f3671,f134])).
fof(f134,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0] : ! [X1] : ~s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : ! [X8] : ~s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8)))),
  file('thm.option.IF_EQUALS_OPTION|split|2','thm.option.NOT_NONE_SOME')).
fof(f3671,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) | s(bool,'T_0') = s(bool,sK3) | $spl0),
  inference(forward_demodulation,[],[f3647,f135])).
fof(f135,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : ! [X10,X11] : s(X6,X11) = s(X6,'const.bool.COND_3'(s(bool,'F_0'),s(X6,X10),s(X6,X11)))),
  file('thm.option.IF_EQUALS_OPTION|split|2','thm.bool.COND_CLAUSES|split|1')).
fof(f3647,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK1))) = s('type.option.option'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))),s('type.option.option'(sK0),'const.option.NONE_0'))) | s(bool,'T_0') = s(bool,sK3) | $spl0),
  inference(superposition,[],[f148,f105])).
fof(f105,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.option.IF_EQUALS_OPTION|split|2',aHL_BOOL_CASES)).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 47
% Passive clauses: 702
% Generated clauses: 3776
% Final active clauses: 33
% Final passive clauses: 337
% Input formulas: 27
% Initial clauses: 52
% 
% Duplicate literals: 234
% Trivial inequalities: 59
% Fw subsumption resolutions: 417
% Fw demodulations: 432
% Bw demodulations: 2
% 
% Simple tautologies: 132
% Equational tautologies: 49
% Forward subsumptions: 1426
% 
% Binary resolution: 61
% Factoring: 1
% Forward superposition: 768
% Backward superposition: 1168
% Self superposition: 94
% Equality factoring: 96
% Equality resolution: 13
% 
% Split clauses: 303
% Split components: 639
% SAT solver clauses: 359
% SAT solver unit clauses: 8
% SAT solver binary clauses: 44
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 2
% 
% Sat splits: 303
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 344
% TWLsolver calls for satisfiability: 23
% 
% Memory used [KB]: 1791
% Time elapsed: 0.090 s
% ------------------------------
% ------------------------------
% Success in time 0.092 s
