Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integer
% (64840)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 293
% Passive clauses: 3393
% Generated clauses: 28734
% Final active clauses: 265
% Final passive clauses: 2795
% Input formulas: 126
% Initial clauses: 181
% 
% Duplicate literals: 461
% Trivial inequalities: 330
% Fw subsumption resolutions: 1147
% Fw demodulations: 5472
% Bw demodulations: 25
% 
% Simple tautologies: 225
% Equational tautologies: 44
% Forward subsumptions: 17705
% Fw demodulations to eq. taut.: 41
% 
% Binary resolution: 198
% Factoring: 1
% Forward superposition: 10952
% Backward superposition: 9803
% Self superposition: 154
% Equality factoring: 68
% Equality resolution: 60
% 
% Split clauses: 80
% Split components: 160
% SAT solver clauses: 203
% SAT solver unit clauses: 12
% SAT solver binary clauses: 95
% 
% Sat splits: 80
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 201
% TWLsolver calls for satisfiability: 63
% 
% Memory used [KB]: 21492
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f20454,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f20424,f20430,f11759,f11776,f11774,f706,f744,f322,f508,f469,f614,f761,f763,f319,f504,f334,f525,f20414,f705,f743,f467,f613,f1345,f1346,f517,f519,f351,f539,f471,f617,f20429,f20431,f4343,f4348,f739,f740,f392,f572])).
fof(f572,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl110),
  inference(cnf_transformation,[],[f572_D])).
fof(f572_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f392,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f278])).
fof(f278,plain,(
  ! [X0] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(nnf_transformation,[],[f184])).
fof(f184,plain,(
  ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) <=> s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X8] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) <=> s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.integer.INT_REM_REDUCE|split|7','thm.integer.INT_NEG_EQ|48|')).
fof(f740,plain,(
  ( ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))) ) | $spl288),
  inference(cnf_transformation,[],[f740_D])).
fof(f740_D,plain,(
  ( ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))) ) <=> ~$spl288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl288])])).
fof(f739,plain,(
  ( ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))) ) | ($spl4 | $spl110)),
  inference(forward_demodulation,[],[f703,f508])).
fof(f703,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl4 | $spl110)),
  inference(backward_demodulation,[],[f508,f572])).
fof(f4348,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl840),
  inference(cnf_transformation,[],[f4348_D])).
fof(f4348_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl840),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl840])])).
fof(f4343,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl288),
  inference(equality_resolution,[],[f740])).
fof(f20431,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2827),
  inference(cnf_transformation,[],[f20431_D])).
fof(f20431_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl2827),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2827])])).
fof(f20429,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl311 | $spl840 | $spl1710)),
  inference(forward_demodulation,[],[f20415,f4348])).
fof(f20415,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl311 | $spl1710)),
  inference(backward_demodulation,[],[f11774,f763])).
fof(f617,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) != s('type.num.num',X1)) ) | $spl180),
  inference(cnf_transformation,[],[f617_D])).
fof(f617_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) != s('type.num.num',X1)) ) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f471,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f307])).
fof(f307,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(flattening,[],[f306])).
fof(f306,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f237])).
fof(f237,plain,(
  ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6,X7] : (s('type.num.num',X6) = s('type.num.num',X7) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6))))))),
  file('thm.integer.INT_REM_REDUCE|split|7','thm.arithmetic.EQ_LESS_EQ')).
fof(f539,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl46),
  inference(cnf_transformation,[],[f539_D])).
fof(f539_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f351,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f123])).
fof(f123,axiom,(
  ! [X7] : s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.integer.INT_REM_REDUCE|split|7','thm.numeral.numeral_lte|split|2')).
fof(f519,plain,(
  ~p(s(bool,'F_0')) | $spl15),
  inference(cnf_transformation,[],[f519_D])).
fof(f519_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f517,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f329,f320])).
fof(f320,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f37])).
fof(f37,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integer.INT_REM_REDUCE|split|7','thm.bool.TRUTH')).
fof(f329,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f269])).
fof(f269,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f129])).
fof(f129,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f53])).
fof(f53,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.integer.INT_REM_REDUCE|split|7','thm.bool.NOT_CLAUSES|split|2')).
fof(f1346,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) ) | $spl352),
  inference(cnf_transformation,[],[f1346_D])).
fof(f1346_D,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) ) <=> ~$spl352),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl352])])).
fof(f1345,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) ) | ($spl15 | $spl46 | $spl180)),
  inference(subsumption_resolution,[],[f1305,f519])).
fof(f1305,plain,(
  ( ! [X1] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) ) | ($spl46 | $spl180)),
  inference(superposition,[],[f617,f539])).
fof(f613,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) ) | $spl172),
  inference(cnf_transformation,[],[f613_D])).
fof(f613_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) ) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f467,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f261])).
fof(f261,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))))),
  inference(ennf_transformation,[],[f234])).
fof(f234,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) => s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))))),
  inference(flattening,[],[f233])).
fof(f233,plain,(
  ! [X0,X1] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) => s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X9,X16] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X16) => s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X9),s('type.num.num',X16))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X9))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X16))))))),
  file('thm.integer.INT_REM_REDUCE|split|7','thm.integer.INT_REM')).
fof(f743,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X1)) ) | $spl292),
  inference(cnf_transformation,[],[f743_D])).
fof(f743_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X1)) ) <=> ~$spl292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl292])])).
fof(f705,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) ) | ($spl4 | $spl172)),
  inference(backward_demodulation,[],[f508,f613])).
fof(f20414,plain,(
  $false | ($spl292 | $spl352 | $spl1713)),
  inference(subsumption_resolution,[],[f20412,f1346])).
fof(f20412,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))) | ($spl292 | $spl1713)),
  inference(trivial_inequality_removal,[],[f20411])).
fof(f20411,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))) | ($spl292 | $spl1713)),
  inference(superposition,[],[f11776,f743])).
fof(f525,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl18),
  inference(cnf_transformation,[],[f525_D])).
fof(f525_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f334,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))),
  file('thm.integer.INT_REM_REDUCE|split|7','thm.arithmetic.NUMERAL_DEF')).
fof(f504,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))))))) | $spl1),
  inference(cnf_transformation,[],[f504_D])).
fof(f504_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f319,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))))))),
  inference(cnf_transformation,[],[f268])).
fof(f268,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f255])).
fof(f255,plain,(
  ? [X0,X1] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))))))),
  inference(ennf_transformation,[],[f128])).
fof(f128,plain,(
  ~! [X0,X1] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))))))))),
  file('thm.integer.INT_REM_REDUCE|split|7','thm.integer.INT_REM_REDUCE|split|7')).
fof(f763,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))))) | $spl311),
  inference(cnf_transformation,[],[f763_D])).
fof(f763_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))))) <=> ~$spl311),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl311])])).
fof(f761,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))))) | ($spl1 | $spl18)),
  inference(forward_demodulation,[],[f760,f525])).
fof(f760,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))))) | ($spl1 | $spl18)),
  inference(forward_demodulation,[],[f504,f525])).
fof(f614,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(cnf_transformation,[],[f614_D])).
fof(f614_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f469,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f262])).
fof(f262,plain,(
  ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))) & s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))))),
  inference(ennf_transformation,[],[f236])).
fof(f236,plain,(
  ! [X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))) & s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))))),
  inference(flattening,[],[f235])).
fof(f235,plain,(
  ! [X0,X1] : (~s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))) & s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))))),
  inference(rectify,[],[f63])).
fof(f63,axiom,(
  ! [X9,X16] : (~s('type.integer.int',X16) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X9),s('type.integer.int',X16))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))),s('type.integer.int',X16))) & s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X9),s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16)))))))),
  file('thm.integer.INT_REM_REDUCE|split|7','thm.integer.INT_REM_NEG')).
fof(f508,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl4),
  inference(cnf_transformation,[],[f508_D])).
fof(f508_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f322,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.integer.INT_REM_REDUCE|split|7','thm.arithmetic.ALT_ZERO')).
fof(f744,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl294),
  inference(cnf_transformation,[],[f744_D])).
fof(f744_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl294])])).
fof(f706,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) ) | ($spl4 | $spl174)),
  inference(backward_demodulation,[],[f508,f614])).
fof(f11774,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))) | $spl1710),
  inference(cnf_transformation,[],[f11774_D])).
fof(f11774_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))) <=> ~$spl1710),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1710])])).
fof(f11776,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) | $spl1713),
  inference(cnf_transformation,[],[f11776_D])).
fof(f11776_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) <=> ~$spl1713),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1713])])).
fof(f11759,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) != s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))) | ($spl294 | $spl311)),
  inference(superposition,[],[f763,f744])).
fof(f20430,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2826),
  inference(cnf_transformation,[],[f20430_D])).
fof(f20430_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl2826),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2826])])).
fof(f20424,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl1710 | $spl1712)),
  inference(backward_demodulation,[],[f11774,f11775])).
fof(f11775,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) | $spl1712),
  inference(cnf_transformation,[],[f11775_D])).
fof(f11775_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) = s('type.integer.int','const.integer.int_rem_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))))) <=> ~$spl1712),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1712])])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 242
% Passive clauses: 1398
% Generated clauses: 20080
% Final active clauses: 223
% Final passive clauses: 992
% Input formulas: 126
% Initial clauses: 181
% 
% Duplicate literals: 10
% Trivial inequalities: 63
% Fw subsumption resolutions: 392
% Fw demodulations: 4606
% Bw demodulations: 174
% Condensations: 9
% Global subsumptions: 15
% 
% Simple tautologies: 81
% Equational tautologies: 11
% Forward subsumptions: 11377
% Fw demodulations to eq. taut.: 19
% Bw demodulations to eq. taut.: 6
% 
% Binary resolution: 97
% Factoring: 2
% Forward superposition: 8969
% Backward superposition: 4013
% Self superposition: 82
% Equality factoring: 6
% Equality resolution: 20
% 
% Split clauses: 19
% Split components: 38
% SAT solver clauses: 2307
% SAT solver unit clauses: 276
% SAT solver binary clauses: 61
% SAT solver learnt clauses: 31
% SAT solver learnt literals: 2
% 
% Sat splits: 19
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 2242
% TWLsolver calls for satisfiability: 627
% 
% Memory used [KB]: 22771
% Time elapsed: 0.692 s
% ------------------------------
% ------------------------------
% Success in time 1.314 s
