Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.probability
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.probability
% SZS output start Proof for thm.probability
fof(f18743,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f18739,f7627,f386,f389,f388,f8554,f71,f112,f70,f114,f69,f116,f68,f118,f110,f451,f67,f119,f109])).
fof(f109,plain,(
  p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | $spl0),
  inference(cnf_transformation,[],[f109_D])).
fof(f109_D,plain,(
  p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f119,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),X4),s(fun(sK0,bool),X5)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X4),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X5),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),X4),s(fun(sK0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),X4))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),X5)))))) ) | $spl10),
  inference(cnf_transformation,[],[f119_D])).
fof(f119_D,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),X4),s(fun(sK0,bool),X5)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X4),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X5),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),X4),s(fun(sK0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),X4))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),X5)))))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f67,plain,(
  ( ! [X4,X5] : (s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),X4),s(fun(sK0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),X4))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),X5))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),X4),s(fun(sK0,bool),X5)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X5),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X4),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | ! [X4,X5] : (~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X4),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X5),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),X4),s(fun(sK0,bool),X5)))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),X4),s(fun(sK0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),X4))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),X5))))))) & (~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | (p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK3),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),sK3)))) & s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),sK3))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK3)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f55])).
fof(f55,plain,(
  ? [X0,X1] : ((p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ! [X4,X5] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5)))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X5))))))) & (~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))))))),
  inference(rectify,[],[f54])).
fof(f54,plain,(
  ? [X0,X1] : ((p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))))) & (~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))))))),
  inference(nnf_transformation,[],[f46])).
fof(f46,plain,(
  ? [X0,X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <~> ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ? [X0,X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <~> ! [X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ~! [X0,X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2,X3] : ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) => s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ~! [X0] : ! [X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2,X3] : ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) => s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) <=> ! [X8,X9] : ((p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X9),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X8),s(fun(X6,bool),X9))))) => s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X8),s(fun(X6,bool),X9))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X8))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X9)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) <=> ! [X8,X9] : ((p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X9),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X8),s(fun(X6,bool),X9))))) => s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X8),s(fun(X6,bool),X9))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X8))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X9)))))))),
  file('thm.probability.ADDITIVE_PROB','thm.probability.ADDITIVE_PROB')).
fof(f451,plain,(
  $false | $spl32),
  inference(subsumption_resolution,[],[f397,f72])).
fof(f72,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.probability.ADDITIVE_PROB','thm.bool.TRUTH')).
fof(f397,plain,(
  ~p(s(bool,'T_0')) | $spl32),
  inference(backward_demodulation,[],[f389,f74])).
fof(f74,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.probability.ADDITIVE_PROB',aHL_FALSITY)).
fof(f110,plain,(
  ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | $spl1),
  inference(cnf_transformation,[],[f110_D])).
fof(f110_D,plain,(
  ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f118,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | $spl8),
  inference(cnf_transformation,[],[f118_D])).
fof(f118_D,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f68,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))),
  inference(cnf_transformation,[],[f56])).
fof(f116,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK3),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | $spl6),
  inference(cnf_transformation,[],[f116_D])).
fof(f116_D,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK3),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f69,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK3),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))),
  inference(cnf_transformation,[],[f56])).
fof(f114,plain,(
  p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),sK3)))) | $spl4),
  inference(cnf_transformation,[],[f114_D])).
fof(f114_D,plain,(
  p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),sK3)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f70,plain,(
  p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),sK3)))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))),
  inference(cnf_transformation,[],[f56])).
fof(f112,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),sK3))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK3))))) | $spl3),
  inference(cnf_transformation,[],[f112_D])).
fof(f112_D,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),sK3))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK3))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f71,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),sK3))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK3))))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))),
  inference(cnf_transformation,[],[f56])).
fof(f8554,plain,(
  $false | ($spl3 | $spl4 | $spl6 | $spl8 | $spl10)),
  inference(subsumption_resolution,[],[f8553,f112])).
fof(f8553,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),sK3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK3))))) | ($spl4 | $spl6 | $spl8 | $spl10)),
  inference(subsumption_resolution,[],[f8552,f116])).
fof(f8552,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK3),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),sK3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK3))))) | ($spl4 | $spl8 | $spl10)),
  inference(subsumption_resolution,[],[f8551,f118])).
fof(f8551,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK3),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),sK3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK3))))) | ($spl4 | $spl10)),
  inference(subsumption_resolution,[],[f8543,f72])).
fof(f8543,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK3),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),sK3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK3))))) | ($spl4 | $spl10)),
  inference(superposition,[],[f119,f137])).
fof(f137,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),sK3))) | $spl4),
  inference(subsumption_resolution,[],[f134,f74])).
fof(f134,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),sK3))) | $spl4),
  inference(superposition,[],[f114,f77])).
fof(f77,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.probability.ADDITIVE_PROB',aHL_BOOL_CASES)).
fof(f388,plain,(
  s(bool,'T_0') = s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))) | $spl30),
  inference(cnf_transformation,[],[f388_D])).
fof(f388_D,plain,(
  s(bool,'T_0') = s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f389,plain,(
  ( ! [X22] : (s(bool,'T_0') = s(bool,X22)) ) | $spl32),
  inference(cnf_transformation,[],[f389_D])).
fof(f389_D,plain,(
  ( ! [X22] : (s(bool,'T_0') = s(bool,X22)) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f386,plain,(
  ( ! [X22] : (s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) ) | $spl0),
  inference(subsumption_resolution,[],[f248,f132])).
fof(f132,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f74,f77])).
fof(f248,plain,(
  ( ! [X22] : (p(s(bool,X22)) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) ) | $spl0),
  inference(superposition,[],[f109,f130])).
fof(f130,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f77,f77])).
fof(f7627,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X0),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),X1),s(fun(sK0,bool),X0))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),X1))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),X0))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),X1),s(fun(sK0,bool),X0)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X1),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))) ) | $spl30),
  inference(subsumption_resolution,[],[f7619,f72])).
fof(f7619,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X0),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),X1),s(fun(sK0,bool),X0))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),X1))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),X0))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),X1),s(fun(sK0,bool),X0)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X1),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))) ) | $spl30),
  inference(superposition,[],[f6057,f388])).
fof(f6057,plain,(
  ( ! [X4,X0,X5,X1] : (~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X5))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) )),
  inference(forward_demodulation,[],[f6056,f1792])).
fof(f1792,plain,(
  ( ! [X0,X1] : (s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) )),
  inference(forward_demodulation,[],[f1535,f80])).
fof(f80,plain,(
  ( ! [X0,X1] : (s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),bool),happ(s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),bool)),'const.probability.events_0'),s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),bool),happ(s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),bool)),'const.probability.events_0'),s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1] : s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),bool),happ(s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),bool)),'const.probability.events_0'),s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X18] : s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X18))) = s(fun(fun(X6,bool),bool),happ(s(fun('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),fun(fun(X6,bool),bool)),'const.probability.events_0'),s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X18)))),
  file('thm.probability.ADDITIVE_PROB','ARITY_0_1_const.probability.events')).
fof(f1535,plain,(
  ( ! [X0,X1] : (s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),bool),happ(s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),bool)),'const.probability.events_0'),s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) )),
  inference(forward_demodulation,[],[f78,f75])).
fof(f75,plain,(
  ( ! [X0] : (s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),bool)),'const.probability.events_0') = s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),bool)),'const.measure.measurable_sets_0')) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0] : s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),bool)),'const.probability.events_0') = s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),bool)),'const.measure.measurable_sets_0')),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : s(fun('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),fun(fun(X6,bool),bool)),'const.probability.events_0') = s(fun('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),fun(fun(X6,bool),bool)),'const.measure.measurable_sets_0')),
  file('thm.probability.ADDITIVE_PROB','thm.probability.events_def')).
fof(f78,plain,(
  ( ! [X0,X1] : (s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),bool),happ(s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),bool)),'const.measure.measurable_sets_0'),s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1] : s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),bool),happ(s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),bool)),'const.measure.measurable_sets_0'),s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0] : ! [X1] : s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),bool),happ(s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),bool)),'const.measure.measurable_sets_0'),s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : ! [X18] : s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X18))) = s(fun(fun(X6,bool),bool),happ(s(fun('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),fun(fun(X6,bool),bool)),'const.measure.measurable_sets_0'),s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X18)))),
  file('thm.probability.ADDITIVE_PROB','ARITY_0_1_const.measure.measurable_sets')).
fof(f6056,plain,(
  ( ! [X4,X0,X5,X1] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X5))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(forward_demodulation,[],[f6055,f1792])).
fof(f6055,plain,(
  ( ! [X4,X0,X5,X1] : (s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X5))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(forward_demodulation,[],[f6054,f2427])).
fof(f2427,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) = s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2)))) )),
  inference(backward_demodulation,[],[f2299,f88])).
fof(f88,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) = s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2] : s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) = s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),X2)))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0] : ! [X1,X2] : s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) = s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),X2)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X18,X19] : s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X18),s(fun(X6,bool),X19))) = s('type.realax.real',happ(s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X18))),s(fun(X6,bool),X19)))),
  file('thm.probability.ADDITIVE_PROB','ARITY_1_2_const.measure.measure')).
fof(f2299,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) = s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),X2)))) )),
  inference(forward_demodulation,[],[f89,f1536])).
fof(f1536,plain,(
  ( ! [X0,X1] : (s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),'type.realax.real'),happ(s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),'type.realax.real')),'const.probability.prob_0'),s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) )),
  inference(forward_demodulation,[],[f79,f76])).
fof(f76,plain,(
  ( ! [X0] : (s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),'type.realax.real')),'const.probability.prob_0') = s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),'type.realax.real')),'const.measure.measure_0')) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),'type.realax.real')),'const.probability.prob_0') = s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),'type.realax.real')),'const.measure.measure_0')),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : s(fun('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),fun(fun(X6,bool),'type.realax.real')),'const.probability.prob_0') = s(fun('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),fun(fun(X6,bool),'type.realax.real')),'const.measure.measure_0')),
  file('thm.probability.ADDITIVE_PROB','thm.probability.prob_def')).
fof(f79,plain,(
  ( ! [X0,X1] : (s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),'type.realax.real'),happ(s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),'type.realax.real')),'const.measure.measure_0'),s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1] : s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),'type.realax.real'),happ(s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),'type.realax.real')),'const.measure.measure_0'),s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0] : ! [X1] : s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),'type.realax.real'),happ(s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),'type.realax.real')),'const.measure.measure_0'),s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X18] : s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X18))) = s(fun(fun(X6,bool),'type.realax.real'),happ(s(fun('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),fun(fun(X6,bool),'type.realax.real')),'const.measure.measure_0'),s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X18)))),
  file('thm.probability.ADDITIVE_PROB','ARITY_0_1_const.measure.measure')).
fof(f89,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) = s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),happ(s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),'type.realax.real')),'const.probability.prob_0'),s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1,X2] : s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) = s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),happ(s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),'type.realax.real')),'const.probability.prob_0'),s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),X2)))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ! [X0] : ! [X1,X2] : s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))) = s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),happ(s(fun('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),fun(fun(X0,bool),'type.realax.real')),'const.probability.prob_0'),s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),X2)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X18,X19] : s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X18),s(fun(X6,bool),X19))) = s('type.realax.real',happ(s(fun(fun(X6,bool),'type.realax.real'),happ(s(fun('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),fun(fun(X6,bool),'type.realax.real')),'const.probability.prob_0'),s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X18))),s(fun(X6,bool),X19)))),
  file('thm.probability.ADDITIVE_PROB','ARITY_0_2_const.probability.prob')).
fof(f6054,plain,(
  ( ! [X4,X0,X5,X1] : (s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X5))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(forward_demodulation,[],[f6053,f2427])).
fof(f6053,plain,(
  ( ! [X4,X0,X5,X1] : (s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X5))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(forward_demodulation,[],[f83,f2427])).
fof(f83,plain,(
  ( ! [X4,X0,X5,X1] : (s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X5))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ! [X4,X5] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5)))) | s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X5))))))) & ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK4(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK5(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),sK4(X1,X0)),s(fun(X0,bool),sK5(X1,X0))))) & s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),sK4(X1,X0)),s(fun(X0,bool),sK5(X1,X0)))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),sK4(X1,X0)))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),sK5(X1,X0))))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4,sK5])],[f59])).
fof(f59,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ! [X4,X5] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5)))) | s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X5))))))) & (? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(rectify,[],[f58])).
fof(f58,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))))) & (? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(nnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) | s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))))),
  inference(ennf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2,X3] : ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) => s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2,X3] : ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) => s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X17] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17)))) <=> ! [X8,X9] : ((p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X9),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X8),s(fun(X6,bool),X9))))) => s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17),s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X8),s(fun(X6,bool),X9))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17),s(fun(X6,bool),X8))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X17),s(fun(X6,bool),X9)))))))),
  file('thm.probability.ADDITIVE_PROB','thm.measure.additive_def')).
fof(f18739,plain,(
  $false | ($spl1 | $spl10)),
  inference(subsumption_resolution,[],[f18738,f110])).
fof(f18738,plain,(
  p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | $spl10),
  inference(subsumption_resolution,[],[f18737,f4506])).
fof(f4506,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),sK4(X1,X0)),s(fun(X0,bool),sK5(X1,X0)))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),sK4(X1,X0)))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),sK5(X1,X0)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(forward_demodulation,[],[f4505,f2427])).
fof(f4505,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),sK4(X1,X0)),s(fun(X0,bool),sK5(X1,X0)))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),sK4(X1,X0)))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),sK5(X1,X0)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(forward_demodulation,[],[f4504,f2427])).
fof(f4504,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),sK4(X1,X0)),s(fun(X0,bool),sK5(X1,X0)))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),sK4(X1,X0)))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),sK5(X1,X0)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(forward_demodulation,[],[f87,f2427])).
fof(f87,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),sK4(X1,X0)),s(fun(X0,bool),sK5(X1,X0)))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),sK4(X1,X0)))),s('type.realax.real','const.measure.measure_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),sK5(X1,X0))))))) )),
  inference(cnf_transformation,[],[f60])).
fof(f18737,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),sK4(sK1,sK0)),s(fun(sK0,bool),sK5(sK1,sK0)))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK4(sK1,sK0)))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK5(sK1,sK0)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | $spl10),
  inference(subsumption_resolution,[],[f18736,f1939])).
fof(f1939,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK4(X1,X0)),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(backward_demodulation,[],[f1792,f84])).
fof(f84,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK4(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(cnf_transformation,[],[f60])).
fof(f18736,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK4(sK1,sK0)),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),sK4(sK1,sK0)),s(fun(sK0,bool),sK5(sK1,sK0)))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK4(sK1,sK0)))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK5(sK1,sK0)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | $spl10),
  inference(duplicate_literal_removal,[],[f18696])).
fof(f18696,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK4(sK1,sK0)),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),sK4(sK1,sK0)),s(fun(sK0,bool),sK5(sK1,sK0)))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK4(sK1,sK0)))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK5(sK1,sK0)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) | $spl10),
  inference(resolution,[],[f8523,f1938])).
fof(f1938,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK5(X1,X0)),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(backward_demodulation,[],[f1792,f85])).
fof(f85,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK5(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(cnf_transformation,[],[f60])).
fof(f8523,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK5(X0,sK0)),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),sK4(X0,sK0)),s(fun(fun(sK0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),'const.pred_set.UNION_2'(s(fun(sK0,bool),sK4(X0,sK0)),s(fun(sK0,bool),sK5(X0,sK0)))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK4(X0,sK0)))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1),s(fun(sK0,bool),sK5(X0,sK0)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0))))) ) | $spl10),
  inference(resolution,[],[f119,f86])).
fof(f86,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),sK4(X1,X0)),s(fun(X0,bool),sK5(X1,X0)))))) )),
  inference(cnf_transformation,[],[f60])).
% SZS output end Proof for thm.probability
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 197
% Passive clauses: 1481
% Generated clauses: 18464
% Final active clauses: 176
% Final passive clauses: 1133
% Input formulas: 18
% Initial clauses: 40
% 
% Duplicate literals: 1167
% Trivial inequalities: 309
% Fw subsumption resolutions: 2945
% Fw demodulations: 2740
% Bw demodulations: 11
% 
% Simple tautologies: 342
% Equational tautologies: 18
% Forward subsumptions: 8053
% 
% Binary resolution: 491
% Forward superposition: 6688
% Backward superposition: 3681
% Self superposition: 83
% Equality factoring: 32
% Equality resolution: 50
% 
% Split clauses: 809
% Split components: 1626
% SAT solver clauses: 1552
% SAT solver unit clauses: 13
% SAT solver binary clauses: 80
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 809
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 1550
% TWLsolver calls for satisfiability: 218
% 
% Memory used [KB]: 9210
% Time elapsed: 0.540 s
% ------------------------------
% ------------------------------
% Success in time 0.544 s
