Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.seq
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.seq
% SZS output start Proof for thm.seq
fof(f3450,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3429,f64,f99,f65,f101,f646,f644])).
fof(f644,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',sK2))) | $spl14),
  inference(cnf_transformation,[],[f644_D])).
fof(f644_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',sK2))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f646,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',sK2))) | ($spl2 | $spl5)),
  inference(subsumption_resolution,[],[f641,f101])).
fof(f641,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',sK2))) | $spl2),
  inference(superposition,[],[f623,f67])).
fof(f67,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.seq.SEQ_DIRECT',aHL_BOOL_CASES)).
fof(f623,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | $spl2),
  inference(resolution,[],[f619,f190])).
fof(f190,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f189,f92])).
fof(f92,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X9,X10] : s(bool,'const.arithmetic.>=_2'(s('type.num.num',X9),s('type.num.num',X10))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X9)))),
  file('thm.seq.SEQ_DIRECT','thm.arithmetic.GREATER_EQ')).
fof(f189,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f93,f92])).
fof(f93,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X10,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X9)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X10)))))),
  file('thm.seq.SEQ_DIRECT','thm.arithmetic.LESS_EQ_CASES')).
fof(f619,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK2),s('type.num.num',sK1)))) | $spl2),
  inference(subsumption_resolution,[],[f618,f99])).
fof(f618,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK2),s('type.num.num',sK1))))),
  inference(forward_demodulation,[],[f606,f106])).
fof(f106,plain,(
  s(bool,'T_0') = s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),sK0)))),
  inference(resolution,[],[f70,f62])).
fof(f62,plain,(
  p(s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),sK0))))),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  p(s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),sK0)))) & ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num',sK1)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',X3))),s('type.num.num',sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f41])).
fof(f41,plain,(
  ? [X0] : (p(s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),X0)))) & ? [X1,X2] : ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X3))),s('type.num.num',X2))))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ~! [X0] : (p(s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),X0)))) => ! [X1,X2] : ? [X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X3))),s('type.num.num',X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (p(s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),X6)))) => ! [X7,X8] : ? [X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X9),s('type.num.num',X7)))) & p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X6),s('type.num.num',X9))),s('type.num.num',X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (p(s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),X6)))) => ! [X7,X8] : ? [X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X9),s('type.num.num',X7)))) & p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X6),s('type.num.num',X9))),s('type.num.num',X8))))))),
  file('thm.seq.SEQ_DIRECT','thm.seq.SEQ_DIRECT')).
fof(f70,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.seq.SEQ_DIRECT','thm.bool.EQ_CLAUSES|split|1')).
fof(f606,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK2),s('type.num.num',sK1)))) | ~p(s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),sK0))))),
  inference(resolution,[],[f63,f486])).
fof(f486,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1))),s('type.num.num',X1)))) | ~p(s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),X0))))) )),
  inference(forward_demodulation,[],[f68,f92])).
fof(f68,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1)))))) | ~p(s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),X0))))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : (~p(s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),X0)))) | ! [X1] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1)))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : (p(s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),X0)))) => ! [X1] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1)))))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : (p(s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),X6)))) => ! [X9] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X6),s('type.num.num',X9)))))))),
  file('thm.seq.SEQ_DIRECT','thm.seq.SEQ_SUBLE')).
fof(f63,plain,(
  ( ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',X3))),s('type.num.num',sK2)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num',sK1))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f101,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f101_D])).
fof(f101_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f65,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.seq.SEQ_DIRECT',aHL_FALSITY)).
fof(f99,plain,(
  p(s(bool,'T_0')) | $spl2),
  inference(cnf_transformation,[],[f99_D])).
fof(f99_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f64,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.seq.SEQ_DIRECT',aHL_TRUTH)).
fof(f3429,plain,(
  $false | ($spl2 | $spl5 | $spl14)),
  inference(subsumption_resolution,[],[f3428,f99])).
fof(f3428,plain,(
  ~p(s(bool,'T_0')) | ($spl2 | $spl5 | $spl14)),
  inference(forward_demodulation,[],[f3427,f106])).
fof(f3427,plain,(
  ~p(s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),sK0)))) | ($spl2 | $spl5 | $spl14)),
  inference(subsumption_resolution,[],[f3381,f101])).
fof(f3381,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.seq.subseq_1'(s(fun('type.num.num','type.num.num'),sK0)))) | ($spl2 | $spl5 | $spl14)),
  inference(superposition,[],[f486,f3363])).
fof(f3363,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK1))),s('type.num.num',sK1))) | ($spl2 | $spl5 | $spl14)),
  inference(subsumption_resolution,[],[f3352,f101])).
fof(f3352,plain,(
  p(s(bool,'F_0')) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK1))),s('type.num.num',sK1))) | ($spl2 | $spl14)),
  inference(superposition,[],[f3331,f2810])).
fof(f2810,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | $spl2),
  inference(subsumption_resolution,[],[f2795,f99])).
fof(f2795,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))),
  inference(superposition,[],[f611,f155])).
fof(f155,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(superposition,[],[f92,f107])).
fof(f107,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(resolution,[],[f70,f66])).
fof(f66,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X10] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X10))))),
  file('thm.seq.SEQ_DIRECT','thm.arithmetic.LESS_EQ_REFL')).
fof(f611,plain,(
  ( ! [X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num',sK1)))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',X5))),s('type.num.num',sK2)))) )),
  inference(resolution,[],[f63,f74])).
fof(f74,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.seq.SEQ_DIRECT','thm.bool.EQ_CLAUSES|split|2')).
fof(f3331,plain,(
  ( ! [X11] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X11),s('type.num.num',sK2)))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X11),s('type.num.num',sK1)))) ) | ($spl2 | $spl14)),
  inference(subsumption_resolution,[],[f3314,f99])).
fof(f3314,plain,(
  ( ! [X11] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X11),s('type.num.num',sK2)))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X11),s('type.num.num',sK1)))) ) | $spl14),
  inference(superposition,[],[f1271,f644])).
fof(f1271,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X12),s('type.num.num',X13)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X14),s('type.num.num',X13)))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X14),s('type.num.num',X12)))) )),
  inference(resolution,[],[f692,f74])).
fof(f692,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f691,f92])).
fof(f691,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f690,f92])).
fof(f690,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f95,f92])).
fof(f95,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X10,X9,X11] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X9)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X11))))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X11)))))),
  file('thm.seq.SEQ_DIRECT','thm.arithmetic.LESS_EQ_TRANS')).
% SZS output end Proof for thm.seq
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 99
% Passive clauses: 482
% Generated clauses: 3359
% Final active clauses: 80
% Final passive clauses: 277
% Input formulas: 19
% Initial clauses: 34
% 
% Duplicate literals: 210
% Trivial inequalities: 130
% Fw subsumption resolutions: 392
% Fw demodulations: 211
% Bw demodulations: 17
% 
% Simple tautologies: 167
% Equational tautologies: 18
% Forward subsumptions: 1654
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 190
% Factoring: 2
% Forward superposition: 1024
% Backward superposition: 1031
% Self superposition: 28
% Equality factoring: 32
% Equality resolution: 15
% 
% Split clauses: 65
% Split components: 130
% SAT solver clauses: 201
% SAT solver unit clauses: 8
% SAT solver binary clauses: 41
% SAT solver learnt clauses: 1
% 
% Sat splits: 65
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 196
% TWLsolver calls for satisfiability: 73
% 
% Memory used [KB]: 1918
% Time elapsed: 0.063 s
% ------------------------------
% ------------------------------
% Success in time 0.065 s
