Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f614,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f605,f248,f242,f249,f597,f254,f586,f253,f328,f332,f263,f375,f43,f46,f44,f55,f599,f247])).
fof(f247,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(cnf_transformation,[],[f247_D])).
fof(f247_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f599,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X4)) ) | $spl19),
  inference(subsumption_resolution,[],[f399,f27])).
fof(f27,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f10])).
fof(f10,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.SUB_RIGHT_GREATER','thm.bool.TRUTH')).
fof(f399,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s(bool,X4) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X4)) ) | $spl19),
  inference(superposition,[],[f334,f38])).
fof(f38,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f30,f30])).
fof(f30,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.SUB_RIGHT_GREATER',aHL_BOOL_CASES)).
fof(f334,plain,(
  ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) | $spl19),
  inference(cnf_transformation,[],[f334_D])).
fof(f334_D,plain,(
  ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f55,plain,(
  $false | $spl0),
  inference(resolution,[],[f52,f27])).
fof(f52,plain,(
  ( ! [X2] : (~p(s(bool,X2))) ) | $spl0),
  inference(superposition,[],[f29,f44])).
fof(f29,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.SUB_RIGHT_GREATER',aHL_FALSITY)).
fof(f44,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f44_D])).
fof(f44_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f46,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f46_D])).
fof(f46_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f43,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f30])).
fof(f375,plain,(
  $false | ($spl3 | $spl14)),
  inference(trivial_inequality_removal,[],[f368])).
fof(f368,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl3 | $spl14)),
  inference(superposition,[],[f46,f263])).
fof(f263,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) | $spl14),
  inference(cnf_transformation,[],[f263_D])).
fof(f263_D,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f332,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | $spl16),
  inference(cnf_transformation,[],[f332_D])).
fof(f332_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f328,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(duplicate_literal_removal,[],[f290])).
fof(f290,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(superposition,[],[f247,f30])).
fof(f253,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | $spl12),
  inference(cnf_transformation,[],[f253_D])).
fof(f253_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f586,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | $spl16),
  inference(forward_demodulation,[],[f568,f34])).
fof(f34,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.arithmetic.SUB_RIGHT_GREATER','thm.arithmetic.ADD_SYM')).
fof(f568,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num',sK1))))) | $spl16),
  inference(superposition,[],[f332,f516])).
fof(f516,plain,(
  ( ! [X10,X11,X9] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X11))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num',X9)))) )),
  inference(superposition,[],[f255,f33])).
fof(f33,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : s(bool,'const.arithmetic.>_2'(s('type.num.num',X6),s('type.num.num',X7))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.arithmetic.SUB_RIGHT_GREATER','thm.arithmetic.GREATER_DEF')).
fof(f255,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f36,f33])).
fof(f36,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1,X2] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X1)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7,X8] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num',X8))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X8))),s('type.num.num',X7)))),
  file('thm.arithmetic.SUB_RIGHT_GREATER','thm.arithmetic.SUB_LEFT_LESS')).
fof(f254,plain,(
  s(bool,'F_0') != s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | $spl13),
  inference(cnf_transformation,[],[f254_D])).
fof(f254_D,plain,(
  s(bool,'F_0') != s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f597,plain,(
  s(bool,'F_0') != s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | $spl16),
  inference(forward_demodulation,[],[f26,f332])).
fof(f26,plain,(
  s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) != s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) != s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f21])).
fof(f21,plain,(
  ? [X0,X1,X2] : s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) != s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0,X1,X2] : s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : s(bool,'const.arithmetic.>_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : s(bool,'const.arithmetic.>_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X8)))),
  file('thm.arithmetic.SUB_RIGHT_GREATER','thm.arithmetic.SUB_RIGHT_GREATER')).
fof(f249,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | $spl7),
  inference(cnf_transformation,[],[f249_D])).
fof(f249_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f242,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | s(bool,X0) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f26,f38])).
fof(f248,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | $spl6),
  inference(cnf_transformation,[],[f248_D])).
fof(f248_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f605,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | $spl18),
  inference(resolution,[],[f604,f40])).
fof(f40,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f29,f30])).
fof(f604,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) | $spl18),
  inference(forward_demodulation,[],[f603,f34])).
fof(f603,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num',sK1)))))) | $spl18),
  inference(forward_demodulation,[],[f333,f516])).
fof(f333,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) | $spl18),
  inference(cnf_transformation,[],[f333_D])).
fof(f333_D,plain,(
  p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 29
% Passive clauses: 131
% Generated clauses: 584
% Final active clauses: 14
% Final passive clauses: 68
% Input formulas: 10
% Initial clauses: 11
% 
% Duplicate literals: 79
% Trivial inequalities: 9
% Fw subsumption resolutions: 17
% Fw demodulations: 33
% Bw demodulations: 6
% 
% Simple tautologies: 25
% Equational tautologies: 16
% Forward subsumptions: 246
% 
% Binary resolution: 7
% Forward superposition: 190
% Backward superposition: 141
% Self superposition: 32
% Equality factoring: 28
% Equality resolution: 1
% 
% Split clauses: 14
% Split components: 28
% SAT solver clauses: 37
% SAT solver unit clauses: 3
% SAT solver binary clauses: 21
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 14
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 32
% TWLsolver calls for satisfiability: 11
% 
% Memory used [KB]: 895
% Time elapsed: 0.025 s
% ------------------------------
% ------------------------------
% Success in time 0.027 s
