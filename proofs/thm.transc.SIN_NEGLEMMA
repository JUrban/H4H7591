Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.transc
% (87332)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 71
% Passive clauses: 2604
% Generated clauses: 11904
% Final active clauses: 66
% Final passive clauses: 2420
% Input formulas: 22
% Initial clauses: 22
% 
% Duplicate literals: 812
% Trivial inequalities: 116
% Fw subsumption resolutions: 1023
% Fw demodulations: 349
% Bw demodulations: 1
% 
% Simple tautologies: 238
% Equational tautologies: 97
% Forward subsumptions: 5257
% 
% Binary resolution: 33
% Forward superposition: 5188
% Backward superposition: 3598
% Self superposition: 381
% Equality factoring: 270
% Equality resolution: 6
% 
% Split clauses: 547
% Split components: 1098
% SAT solver clauses: 1387
% SAT solver unit clauses: 110
% SAT solver binary clauses: 535
% 
% Sat splits: 547
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1385
% TWLsolver calls for satisfiability: 53
% 
% Memory used [KB]: 12665
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.transc
% (87356)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 87
% Passive clauses: 1200
% Generated clauses: 9490
% Final active clauses: 73
% Final passive clauses: 949
% Input formulas: 22
% Initial clauses: 22
% 
% Duplicate literals: 412
% Trivial inequalities: 17
% Fw subsumption resolutions: 281
% Fw demodulations: 677
% Bw demodulations: 163
% Condensations: 532
% 
% Simple tautologies: 64
% Equational tautologies: 19
% Forward subsumptions: 4698
% Bw demodulations to eq. taut.: 13
% 
% Binary resolution: 17
% Forward superposition: 3622
% Backward superposition: 2331
% Self superposition: 165
% Equality factoring: 38
% Equality resolution: 1
% 
% Split clauses: 59
% Split components: 123
% SAT solver clauses: 1601
% SAT solver unit clauses: 40
% SAT solver binary clauses: 47
% 
% Sat splits: 59
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1601
% TWLsolver calls for satisfiability: 104
% 
% Memory used [KB]: 22643
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f4253,plain,(
  $false),
  inference(subsumption_resolution,[],[f2470,f2972])).
fof(f2972,plain,(
  ( ! [X0] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X0))))))),s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f84,f85])).
fof(f85,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) | p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),X0))),s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X1))))))) )),
  inference(forward_demodulation,[],[f72,f60])).
fof(f60,plain,(
  ( ! [X0] : (s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))) = s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))) = s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X9] : s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X9))) = s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real',X9)))),
  file('thm.transc.SIN_NEGLEMMA','ARITY_0_1_const.realax.real_neg')).
fof(f72,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),X0))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real',X1)))))) | ~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : (~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) | p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),X0))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real',X1)))))))),
  inference(ennf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) => p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),X0))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real',X1)))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X8] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X6),s('type.realax.real',X8)))) => p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),X6))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real',X8)))))))),
  file('thm.transc.SIN_NEGLEMMA','thm.seq.SER_NEG')).
fof(f84,plain,(
  ( ! [X0] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X0))))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))))))) )),
  inference(forward_demodulation,[],[f83,f62])).
fof(f62,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X9] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X9))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X9)))),
  file('thm.transc.SIN_NEGLEMMA','ARITY_0_1_const.real.real_of_num')).
fof(f83,plain,(
  ( ! [X0] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X0))))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))))))) )),
  inference(forward_demodulation,[],[f63,f62])).
fof(f63,plain,(
  ( ! [X0] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X0))))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X0))))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X6))))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))))))),
  file('thm.transc.SIN_NEGLEMMA','thm.transc.SIN_CONVERGES')).
fof(f2470,plain,(
  ~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK0))))))),s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))))))))),
  inference(unit_resulting_resolution,[],[f82,f71])).
fof(f71,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) | s('type.realax.real',X1) = s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),X0)))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : (~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) | s('type.realax.real',X1) = s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),X0))))),
  inference(ennf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) => s('type.realax.real',X1) = s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),X0))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7,X6] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X7),s('type.realax.real',X6)))) => s('type.realax.real',X6) = s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),X7))))),
  file('thm.transc.SIN_NEGLEMMA','thm.seq.SUM_UNIQ')).
fof(f82,plain,(
  s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))))) != s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK0)))))))))),
  inference(forward_demodulation,[],[f81,f62])).
fof(f81,plain,(
  s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))))) != s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK0)))))))))),
  inference(backward_demodulation,[],[f62,f80])).
fof(f80,plain,(
  s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))))) != s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK0)))))))))),
  inference(forward_demodulation,[],[f79,f60])).
fof(f79,plain,(
  s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))))) != s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK0)))))))))),
  inference(backward_demodulation,[],[f60,f57])).
fof(f57,plain,(
  s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))))) != s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK0)))))))))),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))))) != s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK0)))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f51])).
fof(f51,plain,(
  ? [X0] : s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))))) != s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X0)))))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0] : s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))))) = s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X0)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))))) = s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X6)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))))) = s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x0x1_4'(s(fun(bool,fun('type.realax.real',fun('type.realax.real','type.realax.real'))),'const.bool.COND_0'),s(fun('type.num.num',bool),'const.arithmetic.EVEN_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.real.|47|_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),'const.realax.real_neg_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.DIV_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.FACT_0'))))))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X6)))))))))),
  file('thm.transc.SIN_NEGLEMMA','thm.transc.SIN_NEGLEMMA')).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 61
% Passive clauses: 625
% Generated clauses: 4209
% Final active clauses: 44
% Final passive clauses: 435
% Input formulas: 22
% Initial clauses: 22
% 
% Duplicate literals: 274
% Trivial inequalities: 15
% Fw subsumption resolutions: 40
% Fw demodulations: 260
% Bw demodulations: 55
% Condensations: 318
% Global subsumptions: 2
% 
% Simple tautologies: 26
% Equational tautologies: 43
% Forward subsumptions: 2574
% Bw demodulations to eq. taut.: 3
% 
% Unit resulting resolution: 60
% Forward superposition: 1574
% Backward superposition: 1305
% Self superposition: 143
% Equality factoring: 52
% 
% Split clauses: 28
% Split components: 61
% SAT solver clauses: 686
% SAT solver unit clauses: 224
% SAT solver binary clauses: 115
% 
% Sat splits: 28
% Sat splitting refutations: 1
% 
% Memory used [KB]: 11513
% Time elapsed: 0.306 s
% ------------------------------
% ------------------------------
% Success in time 1.638 s
