Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (106730)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 959
% Passive clauses: 6794
% Generated clauses: 35107
% Final active clauses: 870
% Final passive clauses: 5469
% Input formulas: 517
% Initial clauses: 882
% 
% Duplicate literals: 142
% Trivial inequalities: 50
% Fw subsumption resolutions: 1693
% Fw demodulations: 3074
% Bw demodulations: 75
% 
% Simple tautologies: 304
% Equational tautologies: 27
% Forward subsumptions: 22887
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 5524
% Factoring: 515
% Forward superposition: 12389
% Backward superposition: 10595
% Self superposition: 43
% Equality factoring: 2
% Equality resolution: 9
% 
% Split clauses: 297
% Split components: 596
% SAT solver clauses: 479
% SAT solver unit clauses: 18
% SAT solver binary clauses: 83
% 
% Sat splits: 297
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 479
% TWLsolver calls for satisfiability: 320
% 
% Memory used [KB]: 18293
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (106740)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 602
% Passive clauses: 3746
% Generated clauses: 26969
% Final active clauses: 580
% Final passive clauses: 3009
% Input formulas: 517
% Initial clauses: 882
% 
% Duplicate literals: 107
% Trivial inequalities: 45
% Fw subsumption resolutions: 926
% Fw demodulations: 3074
% Bw demodulations: 154
% Condensations: 69
% Global subsumptions: 36
% 
% Simple tautologies: 309
% Equational tautologies: 16
% Forward subsumptions: 14352
% Fw demodulations to eq. taut.: 7
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 2321
% Factoring: 147
% Forward superposition: 9240
% Backward superposition: 6062
% Self superposition: 80
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 15
% Split components: 30
% SAT solver clauses: 5181
% SAT solver unit clauses: 1136
% SAT solver binary clauses: 285
% SAT solver learnt clauses: 72
% SAT solver learnt literals: 12
% 
% Sat splits: 15
% 
% TWLsolver clauses: 5037
% TWLsolver calls for satisfiability: 4783
% 
% Memory used [KB]: 24178
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f43997,plain,(
  $false),
  inference(subsumption_resolution,[],[f43839,f2140])).
fof(f2140,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))))))) )),
  inference(cnf_transformation,[],[f828])).
fof(f828,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))))))),
  inference(flattening,[],[f827])).
fof(f827,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X9] : s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X7),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X9)))))))),
  file('thm.rich_list.TAKE_REVERSE','thm.rich_list.LASTN_def')).
fof(f43839,plain,(
  s('type.list.list'(sK13),'const.rich_list.LASTN_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))) != s('type.list.list'(sK13),'const.list.REVERSE_1'(s('type.list.list'(sK13),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK13),'const.list.REVERSE_1'(s('type.list.list'(sK13),sK15)))))))),
  inference(unit_resulting_resolution,[],[f1865,f2218])).
fof(f2218,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f1659])).
fof(f1659,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))) & (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f968])).
fof(f968,plain,(
  ! [X0,X1,X2] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f967])).
fof(f967,plain,(
  ! [X0] : ! [X1,X2] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))),
  inference(rectify,[],[f118])).
fof(f118,axiom,(
  ! [X6] : ! [X23,X22] : (s('type.list.list'(X6),X22) = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X23))) <=> s('type.list.list'(X6),X23) = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X22))))),
  file('thm.rich_list.TAKE_REVERSE','thm.list.SWAP_REVERSE_SYM')).
fof(f1865,plain,(
  s('type.list.list'(sK13),'const.list.REVERSE_1'(s('type.list.list'(sK13),'const.rich_list.LASTN_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))))) != s('type.list.list'(sK13),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK13),'const.list.REVERSE_1'(s('type.list.list'(sK13),sK15)))))),
  inference(cnf_transformation,[],[f1557])).
fof(f1557,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK15)))))) & s('type.list.list'(sK13),'const.list.REVERSE_1'(s('type.list.list'(sK13),'const.rich_list.LASTN_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))))) != s('type.list.list'(sK13),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK13),'const.list.REVERSE_1'(s('type.list.list'(sK13),sK15)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14,sK15])],[f1369])).
fof(f1369,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) & s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))) != s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))))),
  inference(ennf_transformation,[],[f520])).
fof(f520,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f519])).
fof(f519,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))))) = s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))))) = s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8))))))),
  file('thm.rich_list.TAKE_REVERSE','thm.rich_list.TAKE_REVERSE')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 788
% Passive clauses: 5554
% Generated clauses: 42145
% Final active clauses: 750
% Final passive clauses: 3886
% Input formulas: 517
% Initial clauses: 882
% 
% Duplicate literals: 9
% Trivial inequalities: 59
% Fw subsumption resolutions: 1061
% Fw demodulations: 6047
% Bw demodulations: 204
% Condensations: 22
% 
% Simple tautologies: 156
% Equational tautologies: 43
% Forward subsumptions: 27396
% Fw demodulations to eq. taut.: 472
% Bw demodulations to eq. taut.: 26
% 
% Unit resulting resolution: 12201
% Factoring: 1
% Forward superposition: 11366
% Backward superposition: 10109
% Self superposition: 98
% Equality factoring: 2
% Equality resolution: 14
% 
% Split clauses: 22
% Split components: 44
% SAT solver clauses: 6808
% SAT solver unit clauses: 3200
% SAT solver binary clauses: 3016
% 
% Sat splits: 22
% Sat splitting refutations: 1208
% 
% Memory used [KB]: 28144
% Time elapsed: 1.056 s
% ------------------------------
% ------------------------------
% Success in time 2.411 s
