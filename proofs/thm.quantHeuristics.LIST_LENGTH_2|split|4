Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (98866)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1095
% Passive clauses: 8435
% Generated clauses: 40876
% Final active clauses: 1029
% Final passive clauses: 6823
% Input formulas: 515
% Initial clauses: 921
% 
% Duplicate literals: 159
% Trivial inequalities: 168
% Fw subsumption resolutions: 1839
% Fw demodulations: 6229
% Bw demodulations: 50
% 
% Simple tautologies: 334
% Equational tautologies: 26
% Forward subsumptions: 23608
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 7722
% Factoring: 400
% Forward superposition: 12811
% Backward superposition: 10352
% Self superposition: 52
% Equality factoring: 2
% Equality resolution: 18
% 
% Split clauses: 297
% Split components: 596
% SAT solver clauses: 522
% SAT solver unit clauses: 30
% SAT solver binary clauses: 140
% 
% Sat splits: 297
% Sat splitting refutations: 24
% 
% TWLsolver clauses: 522
% TWLsolver calls for satisfiability: 347
% 
% Memory used [KB]: 19573
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (98891)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 725
% Passive clauses: 4659
% Generated clauses: 37330
% Final active clauses: 637
% Final passive clauses: 3531
% Input formulas: 515
% Initial clauses: 921
% 
% Duplicate literals: 106
% Trivial inequalities: 50
% Fw subsumption resolutions: 1081
% Fw demodulations: 6293
% Bw demodulations: 464
% Condensations: 71
% Global subsumptions: 38
% 
% Simple tautologies: 360
% Equational tautologies: 15
% Forward subsumptions: 18933
% Fw demodulations to eq. taut.: 16
% Bw demodulations to eq. taut.: 6
% 
% Binary resolution: 3235
% Factoring: 68
% Forward superposition: 11396
% Backward superposition: 8630
% Self superposition: 95
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 44
% Split components: 88
% SAT solver clauses: 6700
% SAT solver unit clauses: 1217
% SAT solver binary clauses: 289
% SAT solver learnt clauses: 77
% SAT solver learnt literals: 18
% 
% Sat splits: 44
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 6547
% TWLsolver calls for satisfiability: 5385
% 
% Memory used [KB]: 36332
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% (98902)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 2150
% Passive clauses: 19614
% Generated clauses: 250590
% Final active clauses: 1777
% Final passive clauses: 4592
% Input formulas: 515
% Initial clauses: 921
% Discarded non-redundant clauses: 110206
% 
% Duplicate literals: 15
% Trivial inequalities: 189
% Fw subsumption resolutions: 4049
% Fw demodulations: 46677
% Bw demodulations: 6114
% Condensations: 165
% Global subsumptions: 11
% 
% Simple tautologies: 343
% Equational tautologies: 96
% Forward subsumptions: 108010
% Fw demodulations to eq. taut.: 2734
% Bw demodulations to eq. taut.: 67
% 
% Unit resulting resolution: 96281
% Factoring: 3
% Forward superposition: 49042
% Backward superposition: 41636
% Self superposition: 239
% Equality factoring: 2
% Equality resolution: 45
% 
% Split clauses: 41
% Split components: 82
% SAT solver clauses: 22555
% SAT solver unit clauses: 6181
% SAT solver binary clauses: 12839
% 
% Sat splits: 41
% Sat splitting refutations: 2846
% 
% Memory used [KB]: 170402
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f111959,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1544,f1547,f1548,f1546,f1550,f1560,f1562,f1563,f1565,f1567,f1679,f1826,f1832,f1834,f1835,f1836,f1839,f1841,f1842,f1888,f1894,f1900,f1930,f1934,f1942,f1947,f1950,f1954,f1958,f1962,f1976,f1977,f1978,f1980,f1982,f1983,f1984,f1987,f2098,f2261,f2265,f2267,f2269,f2270,f2272,f2273,f2274,f2275,f2299,f2303,f2307,f2317,f2319,f2331,f2333,f2340,f2343,f2346,f2350,f2353,f2356,f1843,f1914,f1906,f1925,f1912,f1918,f1928,f1844,f2527,f2516,f2513,f2690,f2691,f2692,f2693,f2699,f2700,f2701,f2702,f2703,f2704,f2712,f2714,f2715,f2717,f2719,f2831,f2866,f2868,f2869,f2870,f2873,f2984,f3021,f3023,f3024,f3026,f3028,f3140,f3168,f3170,f3171,f3173,f3175,f3287,f3325,f3327,f3328,f3330,f3332,f3444,f3595,f1829,f3598,f3599,f1840,f3683,f3685,f3686,f3687,f3690,f3801,f3832,f3834,f3835,f3837,f3839,f3951,f3979,f4013,f4014,f4015,f4017,f4019,f4020,f4021,f4024,f4135,f4554,f4558,f4560,f4562,f4572,f4576,f4578,f4580,f3613,f3610,f1860,f1855,f4581,f4583,f4584,f4585,f4588,f4699,f4738,f4740,f4741,f4743,f4745,f4857,f5344,f5349,f5351,f5352,f5355,f5358,f5364,f5368,f5370,f5372,f5373,f5376,f5385,f5390,f5504,f5511,f5513,f5515,f1545,f5517,f5523,f5518,f5527,f5531,f5536,f5539,f5544,f5537,f5589,f5387,f5592,f5597,f5392,f1915,f5600,f5391,f5647,f5648,f5649,f5651,f5653,f5654,f5655,f5658,f5769,f6166,f4556,f6168,f4559,f6169,f6170,f6180,f4573,f6183,f4577,f6184,f6185,f4579,f6275,f6277,f6278,f6280,f6282,f6394,f6398,f6399,f6400,f6401,f6569,f6402,f6403,f6568,f6570,f6164,f6645,f6646,f1959,f6648,f1955,f6649,f6650,f6651,f1944,f6003,f6000,f6653,f6655,f6656,f6657,f6658,f1902,f6659,f1896,f6660,f1890,f5936,f6663,f2268,f5929,f6664,f4552,f2315,f2326,f2311,f2329,f6665,f6666,f1908,f6673,f6675,f6676,f6677,f6680,f6791,f6921,f6922,f6916,f6952,f6953,f6912,f6955,f6976,f6978,f6979,f6981,f6983,f7095,f7832,f7833,f8362,f8363,f8380,f8381,f8382,f8385,f8387,f8388,f8158,f8389,f8391,f8395,f8396,f8397,f8398,f8399,f8400,f8402,f8403,f8404,f8097,f8407,f8090,f8408,f8080,f8411,f8414,f8415,f8416,f8419,f8438,f8439,f8440,f8441,f8442,f8443,f8444,f8445,f7810,f7809,f1827,f8446,f8383,f8448,f8392,f7762,f8450,f8409,f7736,f8451,f8452,f8453,f7729,f8455,f8454,f1828,f8462,f8464,f8465,f8466,f8469,f8580,f3014,f10867,f10868,f10892,f10895,f10893,f11087,f11140,f11142,f11143,f11145,f11147,f11259,f2858,f11319,f11320,f11321,f11323,f11325,f11326,f11327,f11330,f11441,f13037,f13040,f13041,f13044,f13062,f13065,f13912,f13916,f13913,f13919,f13920,f13923,f13924,f13927,f13928,f1856,f13995,f10870,f13996,f14016,f14019,f14017,f14107,f14108,f14111,f14112,f14115,f14116,f14119,f14123,f14195,f14197,f14196,f14208,f14210,f14120,f14211,f14212,f14213,f14214,f14220,f14223,f14225,f14221,f14227,f14228,f14230,f14231,f14317,f14318,f14321,f14322,f14325,f14326,f14329,f14333,f14405,f14407,f14406,f14418,f14420,f14330,f14421,f14422,f14423,f14424,f14430,f14433,f14435,f14431,f14437,f14438,f14440,f14441,f14442,f14469,f14471,f14472,f14473,f14476,f14587,f15030,f15069,f15072,f15073,f15074,f15091,f15093,f15096,f15353,f15359,f15396,f15476,f15482,f15488,f15541,f15542,f15551,f15552,f15581,f15583,f15584,f15585,f15588,f15699,f15089,f15086,f15083,f15070,f15058,f15056,f15943,f15052,f15944,f13060,f13057,f13054,f13038,f13026,f13024,f15945,f13020,f15946,f15948,f15950,f11610,f11608,f11604,f15952,f15954,f5940,f5938,f2271,f5934,f2262,f2289,f2286,f15956,f15958,f15959,f15961,f15962,f15964,f15966,f16078,f3314,f16957,f16961,f16959,f16963,f16964,f16966,f16967,f16974,f16978,f16981,f16975,f16984,f16985,f16988,f16989,f16958,f17046,f17049,f1857,f17050,f17051,f17071,f13063,f17073,f17338,f17342,f17346,f17322,f17321,f6951,f17318,f6954,f17068,f17064,f17060,f1837,f17047,f17036,f17035,f17351,f17032,f1838,f17352,f17359,f17361,f17362,f17363,f17366,f17477,f3831,f17526,f17528,f17529,f17531,f17533,f17645,f17759,f17761,f17762,f17763,f17766,f17877,f17931,f17980,f17982,f17983,f17985,f17987,f18099,f17696,f18884,f18885,f19911,f19915,f19943,f19947,f20008,f20013,f20016,f20010,f20019,f20009,f20022,f19913,f20046,f20048,f20049,f20294,f20299,f20303,f20308,f20316,f15354,f20471,f20472,f20523,f20525,f20526,f20528,f20530,f20642,f6564,f20841,f20843,f20844,f20846,f20848,f20960,f21114,f21179,f21181,f21182,f21183,f21186,f21297,f15877,f22167,f22170,f22171,f22174,f19916,f22190,f22192,f22168,f22612,f22614,f22615,f22616,f22619,f22730,f22893,f23647,f23650,f23651,f23670,f23672,f23648,f23731,f23734,f23749,f23750,f24772,f24775,f24776,f24795,f24797,f24773,f25877,f25921,f25924,f25956,f25960,f25964,f25967,f25970,f25878,f26007,f26011,f26287,f26290,f26292,f25957,f26295,f26298,f26301,f25961,f26305,f26309,f26313,f26314,f27138,f27141,f27142,f27161,f27163,f27139,f27220,f27221,f28301,f28304,f28302,f28305,f28325,f28327,f28330,f28395,f29508,f29511,f29509,f29512,f29533,f29535,f28306,f29542,f29626,f30716,f30719,f30720,f30741,f30743,f30717,f30759,f30803,f30806,f30813,f30821,f30847,f30851,f30855,f30858,f30861,f30760,f30898,f30902,f31160,f31169,f31207,f31210,f31212,f30848,f31215,f31218,f31221,f30852,f31225,f31229,f31237,f15099,f15097,f31404,f31406,f31407,f31409,f31411,f31523,f31680,f32152,f32154,f32155,f32157,f32159,f32271,f32428,f32468,f32473,f32474,f32495,f32497,f32469,f32634,f32636,f32637,f32639,f32641,f32753,f33012,f33344,f33346,f33347,f33349,f33351,f33463,f33722,f34004,f34006,f34007,f34008,f34011,f34122,f34284,f34321,f34324,f34325,f34322,f34932,f34934,f34935,f34936,f34939,f35050,f35247,f35520,f35522,f35523,f35524,f35527,f35638,f35835,f36061,f36063,f36064,f36066,f36068,f36180,f36439,f36684,f36686,f36687,f36689,f36691,f36803,f37062,f37350,f37352,f37353,f37355,f37357,f37469,f37687,f37840,f37842,f37843,f37845,f37847,f37959,f38177,f38695,f38697,f38698,f38700,f38702,f38814,f38971,f39009,f39012,f15098,f39013,f39010,f40294,f40282,f40699,f40702,f40704,f40705,f40722,f40724,f40725,f40726,f40729,f40840,f41030,f41059,f41060,f41062,f41402,f41735,f41736,f43937,f43940,f43939,f43941,f43942,f43943,f43944,f43960,f43961,f43963,f43964,f43938,f43971,f43974,f43973,f43975,f43976,f43977,f43978,f43995,f43996,f43998,f43999,f43972,f44039,f44061,f44063,f44040,f44395,f44397,f44398,f44400,f44402,f44514,f44673,f44520,f44521,f45076,f45078,f45079,f45081,f45083,f45195,f45360,f45359,f45358,f45844,f45780,f45767,f45764,f45745,f45940,f45941,f45942,f45943,f45944,f45945,f45946,f45947,f45953,f45954,f45955,f45956,f45957,f45958,f46259,f46250,f46233,f46221,f46214,f46420,f46421,f46422,f46425,f46426,f46427,f46428,f46429,f46786,f46788,f46789,f46791,f46793,f46905,f47070,f47069,f47068,f47111,f47113,f47114,f47116,f47118,f47230,f47389,f47236,f47237,f44675,f47565,f47567,f47568,f47569,f47572,f47683,f47872,f47935,f47937,f47938,f47939,f47942,f48053,f48242,f48429,f48431,f48432,f48433,f48436,f48547,f48737,f48804,f48806,f48807,f48808,f48811,f48922,f49112,f49238,f49253,f49259,f49351,f49674,f49766,f45362,f50086,f50176,f50491,f50581,f47072,f50816,f50818,f50849,f50848,f50870,f50871,f50872,f50873,f50879,f50881,f50883,f50885,f51139,f51528,f51530,f51531,f51533,f51535,f51647,f51975,f51141,f52025,f52027,f52028,f52029,f52032,f52143,f52238,f52550,f52552,f52553,f52555,f52557,f52669,f51739,f53364,f53552,f53554,f53555,f53557,f53559,f53671,f53960,f53962,f53963,f53964,f53967,f54078,f54171,f54423,f54425,f54426,f54428,f54430,f54542,f53761,f54727,f53365,f51140,f56052,f56056,f56138,f23732,f56151,f56152,f8401,f56408,f30816,f8405,f30814,f56446,f56452,f56053,f56461,f20304,f56465,f20309,f58723,f58725,f58726,f58728,f58730,f58842,f59060,f59126,f59128,f59129,f59131,f59133,f59245,f59420,f59434,f59436,f59437,f59439,f59441,f59553,f59985,f5348,f59986,f5354,f59987,f59988,f5357,f5346,f59995,f59996,f5375,f5366,f60080,f60081,f60084,f60085,f60087,f60753,f60756,f60759,f60648,f60537,f60534,f60533,f60532,f60530,f60819,f61406,f61410,f61412,f61415,f61876,f5386,f1916,f61911,f61937,f61939,f61940,f61942,f61944,f62056,f62624,f62625,f62626,f62627,f62711,f62713,f62715,f62717,f62719,f62721,f62723,f62731,f62734,f62736,f62751,f62895,f62897,f62898,f62900,f62902,f63014,f63188,f63190,f63191,f63192,f63195,f63306,f63487,f63560,f63562,f63563,f63565,f63567,f63679,f63834,f63836,f63837,f63838,f63841,f63952,f64053,f64093,f64155,f64157,f64158,f64160,f64162,f64274,f64428,f64430,f64431,f64433,f64435,f64547,f64710,f65023,f64800,f64802,f64803,f64804,f64807,f64918,f65322,f65323,f65327,f65385,f65386,f65387,f65389,f65391,f65392,f65393,f65396,f65507,f65826,f65827,f4561,f4555,f66152,f65929,f65931,f65932,f65933,f65936,f66047,f66780,f66782,f66783,f66785,f66787,f66899,f67000,f67127,f67129,f67130,f67132,f67134,f67246,f67345,f68752,f68774,f19944,f68776,f68753,f69181,f69183,f69202,f13066,f69495,f69497,f69833,f69856,f19948,f70432,f22173,f70951,f70953,f70954,f70956,f70969,f70970,f71400,f71401,f70952,f71402,f70955,f71403,f70957,f71524,f71526,f71527,f71528,f71531,f71642,f71835,f72204,f71892,f71894,f71895,f71896,f71899,f72010,f72205,f72262,f72264,f72265,f72266,f72269,f72380,f72574,f72942,f72631,f72633,f72634,f72635,f72638,f72749,f72944,f73002,f73004,f73005,f73006,f73009,f73120,f73313,f73371,f73373,f73374,f73375,f73378,f73489,f73681,f73739,f73741,f73742,f73743,f73746,f73857,f74049,f74107,f74109,f74110,f74111,f74114,f74225,f74419,f74477,f74479,f74480,f74481,f74484,f74595,f74789,f74846,f74848,f74849,f74850,f74853,f74964,f75157,f75526,f49239,f75214,f75216,f75217,f75218,f75221,f75332,f75527,f75835,f75568,f75570,f75572,f75573,f75575,f75577,f75689,f75970,f75972,f75973,f75974,f75977,f76088,f76283,f76539,f76540,f76554,f76914,f49352,f76602,f76604,f76605,f76606,f76609,f76720,f76916,f77176,f77177,f77235,f77237,f77238,f77239,f77242,f77353,f77547,f77590,f77592,f77593,f77595,f77597,f77709,f77991,f77993,f77994,f77995,f77998,f78109,f78303,f78361,f78363,f78364,f78365,f78368,f78479,f78673,f78731,f78733,f78734,f78735,f78738,f78849,f79045,f79227,f79229,f79269,f79271,f79309,f79311,f79312,f79313,f79316,f79427,f79623,f79805,f79807,f79847,f79849,f80012,f80014,f80054,f80056,f80219,f80221,f80261,f80263,f80426,f80428,f80468,f80470,f80632,f80634,f80674,f80676,f80838,f80840,f80880,f80882,f81044,f81046,f81086,f81088,f81251,f81253,f81293,f81295,f81314,f81315,f81316,f81317,f81469,f81471,f81511,f81513,f81721,f81712,f81711,f81696,f81682,f81675,f81882,f81883,f81884,f81887,f81888,f81889,f81890,f81891,f81897,f81900,f81901,f81904,f82048,f82050,f82090,f82092,f82111,f82113,f82115,f82117,f82262,f82264,f82304,f82306,f82585,f82586,f77588,f82683,f82685,f83354,f83355,f83361,f83769,f2242,f83770,f83771,f2246,f83773,f83775,f83776,f83777,f83780,f83891,f2248,f84143,f84145,f84146,f84148,f84150,f84262,f59345,f84455,f84457,f84458,f84460,f84462,f84574,f63778,f84980,f5505,f84757,f84759,f84760,f84761,f84764,f84875,f65026,f85048,f85050,f85051,f85053,f85055,f85167,f85350,f85196,f85197,f85352,f85391,f85393,f85394,f85396,f85398,f85510,f85693,f85539,f85540,f85695,f85794,f85796,f85797,f85799,f85801,f85913,f86096,f85942,f85943,f86098,f86332,f86334,f86335,f86337,f86339,f86451,f86634,f86480,f86481,f86636,f86675,f86677,f86678,f86680,f86682,f86794,f86977,f86823,f86824,f86979,f87018,f87020,f87021,f87023,f87025,f87137,f87320,f87166,f87167,f87322,f87361,f87363,f87364,f87366,f87368,f87480,f87663,f87509,f87510,f87665,f87704,f87706,f87707,f87709,f87711,f87823,f88006,f87852,f87853,f88008,f88047,f88049,f88050,f88052,f88054,f88166,f88349,f88195,f88196,f88351,f88390,f88392,f88393,f88395,f88397,f88509,f88692,f88538,f88539,f88694,f88733,f88735,f88736,f88738,f88740,f88852,f89035,f88881,f88882,f89037,f89356,f75837,f89082,f75839,f89084,f89086,f89087,f89089,f89091,f89203,f75840,f89464,f89466,f89467,f89469,f89471,f89583,f89766,f89612,f89613,f89768,f90028,f90029,f90043,f1963,f90069,f90071,f90072,f90074,f90076,f90188,f90371,f90217,f90218,f90373,f90637,f90638,f8406,f90673,f90675,f90676,f90678,f90680,f90792,f90975,f90821,f90822,f90977,f91024,f91026,f91027,f91029,f91031,f91143,f77859,f91405,f91407,f91408,f91410,f91412,f91524,f91707,f91553,f91554,f91709,f91895,f91896,f79228,f91936,f91937,f79270,f91952,f91954,f91955,f91957,f91959,f92071,f92254,f92100,f92101,f92256,f92442,f92443,f79806,f92483,f92484,f79848,f92499,f92501,f92502,f92504,f92506,f92618,f92801,f92647,f92648,f92803,f92990,f92991,f80013,f93031,f93032,f80055,f93047,f93049,f93050,f93052,f93054,f93166,f93349,f93195,f93196,f93351,f93538,f93539,f80220,f93579,f93580,f80262,f93595,f93597,f93598,f93600,f93602,f93714,f93897,f93743,f93744,f93899,f94086,f94087,f80427,f94127,f94128,f80469,f94143,f94145,f94146,f94148,f94150,f94262,f94445,f94291,f94292,f94447,f94633,f94634,f80633,f94674,f94675,f80675,f94690,f94692,f94693,f94695,f94697,f94809,f94992,f94838,f94839,f94994,f95180,f95181,f80839,f95221,f95222,f80881,f95237,f95239,f95240,f95242,f95244,f95356,f95539,f95385,f95386,f95541,f95727,f95728,f81045,f95768,f95769,f81087,f95784,f95786,f95787,f95789,f95791,f95903,f96086,f95932,f95933,f96088,f96275,f96276,f81252,f96316,f96317,f81294,f96332,f96334,f96335,f96337,f96339,f96451,f96634,f96480,f96481,f96636,f6566,f96679,f96680,f96681,f96682,f96830,f96831,f81470,f96871,f96872,f81512,f96891,f96894,f96895,f96898,f97042,f97043,f82049,f97083,f97084,f82091,f97103,f97105,f81423,f97107,f97109,f81425,f97254,f97255,f82263,f97295,f97296,f82305,f97603,f97607,f97605,f97322,f97324,f97325,f97326,f97329,f97440,f97608,f97708,f97710,f97711,f97713,f97715,f97827,f97978,f98510,f98514,f98236,f98512,f98516,f98238,f98240,f98241,f98243,f98245,f98357,f98517,f99071,f99248,f99524,f99249,f65025,f99526,f90636,f90635,f90027,f90026,f77175,f77174,f69496,f76538,f76537,f99615,f69182,f99624,f99625,f99630,f99631,f99632,f99775,f99777,f99778,f99780,f99782,f99894,f1808,f100601,f5529,f5524,f100602,f5521,f5519,f100604,f5508,f5506,f102466,f102304,f102193,f102190,f102189,f102188,f102186,f102569,f102185,f102573,f102571,f102796,f102798,f102799,f102801,f102803,f102915,f103068,f103434,f103436,f103435,f103476,f103478,f103477,f103719,f103721,f103720,f103761,f103763,f103762,f104070,f104072,f104071,f104112,f104114,f104113,f104380,f104382,f104381,f104422,f104424,f104423,f104731,f104733,f104732,f104773,f104775,f104774,f105028,f105030,f105029,f105070,f105072,f105071,f105392,f105394,f105393,f105434,f105436,f105435,f105759,f105761,f105760,f105801,f105803,f105802,f106023,f13043,f106025,f106024,f13045,f106065,f1932,f106067,f106066,f1935,f106876,f106882,f106880,f106884,f106886,f106888,f106889,f106897,f106902,f106905,f106899,f106908,f106909,f106912,f106913,f106878,f107573,f107575,f107576,f107577,f107580,f107691,f107851,f111616,f102793,f2244,f111707,f111708,f5533,f111709,f5541,f2243,f111450,f111339,f111336,f1812,f1811,f111335,f111334,f1810,f111332,f1809,f111710,f111958])).
fof(f111958,plain,(
  $false | ($spl3 | $spl52)),
  inference(subsumption_resolution,[],[f2244,f1557])).
fof(f1557,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl3),
  inference(resolution,[],[f1547,f1354])).
fof(f1354,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f992])).
fof(f992,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1)) & ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & s('type.num.num',X0) != s('type.num.num',X1)) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(flattening,[],[f991])).
fof(f991,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1))) & ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & s('type.num.num',X0) != s('type.num.num',X1)) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f632])).
fof(f632,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(rectify,[],[f492])).
fof(f492,axiom,(
  ! [X23,X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X16)))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X16)))) | s('type.num.num',X16) = s('type.num.num',X23)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.LESS_OR_EQ')).
fof(f111710,plain,(
  ( ! [X237] : (p(s(bool,X237)) | s(bool,X237) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl784),
  inference(cnf_transformation,[],[f111710_D])).
fof(f111710_D,plain,(
  ( ! [X237] : (p(s(bool,X237)) | s(bool,X237) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl784),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl784])])).
fof(f1809,plain,(
  ( ! [X4,X2] : (s(bool,X2) != s(bool,X4) | p(s(bool,X2))) ) | $spl8),
  inference(cnf_transformation,[],[f1809_D])).
fof(f1809_D,plain,(
  ( ! [X4,X2] : (s(bool,X2) != s(bool,X4) | p(s(bool,X2))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f111332,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl108),
  inference(resolution,[],[f5505,f1081])).
fof(f1081,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f854])).
fof(f854,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f853])).
fof(f853,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f782])).
fof(f782,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f781])).
fof(f781,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f519])).
fof(f519,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f169])).
fof(f169,axiom,(
  ! [X13,X42,X17,X43] : ((s(bool,X13) = s(bool,X42) & (p(s(bool,X42)) => s(bool,X17) = s(bool,X43))) => ((p(s(bool,X13)) => p(s(bool,X17))) <=> (p(s(bool,X42)) => p(s(bool,X43)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.bool.IMP_CONG')).
fof(f1810,plain,(
  ( ! [X10,X8] : (s(bool,X8) != s(bool,X10) | ~p(s(bool,X8))) ) | $spl10),
  inference(cnf_transformation,[],[f1810_D])).
fof(f1810_D,plain,(
  ( ! [X10,X8] : (s(bool,X8) != s(bool,X10) | ~p(s(bool,X8))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f111334,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X9) != s(bool,X10)) ) | $spl108),
  inference(resolution,[],[f5505,f1083])).
fof(f1083,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f854])).
fof(f111335,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl108),
  inference(resolution,[],[f5505,f1085])).
fof(f1085,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f854])).
fof(f1811,plain,(
  ( ! [X19] : (~p(s(bool,X19))) ) | $spl12),
  inference(cnf_transformation,[],[f1811_D])).
fof(f1811_D,plain,(
  ( ! [X19] : (~p(s(bool,X19))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f1812,plain,(
  ( ! [X17] : (p(s(bool,X17))) ) | $spl14),
  inference(cnf_transformation,[],[f1812_D])).
fof(f1812_D,plain,(
  ( ! [X17] : (p(s(bool,X17))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f111336,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | ~p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl108),
  inference(resolution,[],[f5505,f1086])).
fof(f1086,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f854])).
fof(f111339,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X24) != s(bool,X25)) ) | $spl108),
  inference(resolution,[],[f5505,f1087])).
fof(f1087,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f854])).
fof(f111450,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | p(s(bool,X237)) | s(bool,X237) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl108),
  inference(resolution,[],[f5505,f1535])).
fof(f1535,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f1084])).
fof(f1084,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f854])).
fof(f2243,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl53),
  inference(cnf_transformation,[],[f2243_D])).
fof(f2243_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) <=> ~$spl53),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl53])])).
fof(f5541,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK44('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK45('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl126),
  inference(cnf_transformation,[],[f5541_D])).
fof(f5541_D,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK44('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK45('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f111709,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK44('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK45('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl4),
  inference(forward_demodulation,[],[f100406,f1550])).
fof(f100406,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK44('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK45('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(superposition,[],[f11123,f1550])).
fof(f11123,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK44(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f1194,f1156])).
fof(f1156,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f552])).
fof(f552,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X13] : s('type.num.num',X13) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.NUMERAL_DEF')).
fof(f1194,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK44(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(cnf_transformation,[],[f915])).
fof(f915,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK44(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK44,sK45])],[f914])).
fof(f914,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ? [X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0')))))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f913])).
fof(f913,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0')))))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(nnf_transformation,[],[f588])).
fof(f588,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))))),
  inference(flattening,[],[f587])).
fof(f587,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ? [X9,X10] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.NIL_0'))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.quantHeuristics.LIST_LENGTH_2|split|1')).
fof(f5533,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK42('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK43('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl122),
  inference(cnf_transformation,[],[f5533_D])).
fof(f5533_D,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK42('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK43('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f111708,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK42('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK43('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl4),
  inference(forward_demodulation,[],[f100407,f1550])).
fof(f100407,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK42('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK43('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(superposition,[],[f11125,f1550])).
fof(f11125,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f1192,f1156])).
fof(f1192,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(cnf_transformation,[],[f912])).
fof(f912,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK42,sK43])],[f911])).
fof(f911,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ? [X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0')))))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f910])).
fof(f910,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0')))))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(nnf_transformation,[],[f586])).
fof(f586,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))))),
  inference(flattening,[],[f585])).
fof(f585,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ? [X9,X10] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.NIL_0'))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.quantHeuristics.LIST_LENGTH_2|split|0')).
fof(f111707,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | $spl783),
  inference(cnf_transformation,[],[f111707_D])).
fof(f111707_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) <=> ~$spl783),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl783])])).
fof(f2244,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl52),
  inference(cnf_transformation,[],[f2244_D])).
fof(f2244_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f102793,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | $spl3),
  inference(resolution,[],[f1556,f1349])).
fof(f1349,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f990])).
fof(f990,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | s('type.num.num',X0) = s('type.num.num',X1) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) & ((s('type.num.num',X0) != s('type.num.num',X1) & ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))),
  inference(flattening,[],[f989])).
fof(f989,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | (s('type.num.num',X0) = s('type.num.num',X1) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))))) & ((s('type.num.num',X0) != s('type.num.num',X1) & ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f631])).
fof(f631,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) <=> (s('type.num.num',X0) = s('type.num.num',X1) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(rectify,[],[f344])).
fof(f344,axiom,(
  ! [X23,X16] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num','const.num.SUC_1'(s('type.num.num',X16)))))) <=> (s('type.num.num',X16) = s('type.num.num',X23) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X16))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.prim_rec.LESS_THM')).
fof(f1556,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(resolution,[],[f1547,f1353])).
fof(f1353,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f992])).
fof(f111616,plain,(
  $false | ($spl3 | $spl53 | $spl108)),
  inference(subsumption_resolution,[],[f111615,f2243])).
fof(f111615,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ($spl3 | $spl108)),
  inference(forward_demodulation,[],[f111614,f1155])).
fof(f1155,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f551])).
fof(f551,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f144])).
fof(f144,axiom,(
  ! [X16] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_suc|split|1')).
fof(f111614,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl3 | $spl108)),
  inference(subsumption_resolution,[],[f111613,f1556])).
fof(f111613,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl108),
  inference(forward_demodulation,[],[f111331,f1155])).
fof(f111331,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl108),
  inference(resolution,[],[f5505,f1362])).
fof(f1362,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f813])).
fof(f813,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))))),
  inference(flattening,[],[f812])).
fof(f812,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f642])).
fof(f642,plain,(
  ! [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & s('type.num.num',X1) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))))),
  inference(flattening,[],[f641])).
fof(f641,plain,(
  ! [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & ~s('type.num.num',X1) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))))),
  inference(rectify,[],[f388])).
fof(f388,axiom,(
  ! [X23,X16] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X16)))) & ~s('type.num.num',X16) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X23)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))),s('type.num.num',X16)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.LESS_NOT_SUC')).
fof(f107851,plain,(
  ( ! [X6] : (p(s(bool,X6)) | s(bool,X6) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl780),
  inference(cnf_transformation,[],[f107851_D])).
fof(f107851_D,plain,(
  ( ! [X6] : (p(s(bool,X6)) | s(bool,X6) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl780),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl780])])).
fof(f107691,plain,(
  ( ! [X239,X240] : (p(s(bool,X239)) | p(s(bool,X240)) | s(bool,X240) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl54),
  inference(resolution,[],[f2245,f1535])).
fof(f2245,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl54),
  inference(cnf_transformation,[],[f2245_D])).
fof(f2245_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f107580,plain,(
  ( ! [X28,X26,X27] : (p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X27) != s(bool,X28)) ) | $spl54),
  inference(resolution,[],[f2245,f1087])).
fof(f107577,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X19) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl54),
  inference(resolution,[],[f2245,f1086])).
fof(f107576,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X14) != s(bool,X16) | s(bool,X15) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl54),
  inference(resolution,[],[f2245,f1085])).
fof(f107575,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X12) != s(bool,X13)) ) | $spl54),
  inference(resolution,[],[f2245,f1083])).
fof(f107573,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,X5)) | p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | s(bool,X6) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl54),
  inference(resolution,[],[f2245,f1081])).
fof(f106878,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl766),
  inference(cnf_transformation,[],[f106878_D])).
fof(f106878_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl766),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl766])])).
fof(f106913,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl778),
  inference(cnf_transformation,[],[f106913_D])).
fof(f106913_D,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) <=> ~$spl778),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl778])])).
fof(f106912,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl3),
  inference(forward_demodulation,[],[f106911,f1161])).
fof(f1161,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f47])).
fof(f47,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.ALT_ZERO')).
fof(f106911,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(forward_demodulation,[],[f106910,f1160])).
fof(f1160,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f146])).
fof(f146,axiom,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_suc|split|0')).
fof(f106910,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(forward_demodulation,[],[f106285,f1161])).
fof(f106285,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(superposition,[],[f1861,f1520])).
fof(f1520,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f1077])).
fof(f1077,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(flattening,[],[f1076])).
fof(f1076,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f766])).
fof(f766,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)))),
  inference(rectify,[],[f472])).
fof(f472,axiom,(
  ! [X23,X16] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X16))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X23) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X16)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.ADD_EQ_|48|')).
fof(f1861,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl3),
  inference(subsumption_resolution,[],[f1720,f1436])).
fof(f1436,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f692])).
fof(f692,plain,(
  ! [X0] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))),
  inference(rectify,[],[f337])).
fof(f337,axiom,(
  ! [X16] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X16))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.ZERO_LESS_EQ')).
fof(f1720,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl3),
  inference(superposition,[],[f1547,f1152])).
fof(f1152,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f886])).
fof(f886,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK26])],[f548])).
fof(f548,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f420])).
fof(f420,axiom,(
  ! [X23] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X23) | ? [X16] : s('type.num.num',X23) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.num_CASES')).
fof(f106909,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),s('type.num.num',X23)))) ) | $spl776),
  inference(cnf_transformation,[],[f106909_D])).
fof(f106909_D,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),s('type.num.num',X23)))) ) <=> ~$spl776),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl776])])).
fof(f106908,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),s('type.num.num',X23))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl3),
  inference(forward_demodulation,[],[f106907,f1161])).
fof(f106907,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),s('type.num.num',X23)))) ) | $spl3),
  inference(forward_demodulation,[],[f106906,f1160])).
fof(f106906,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),s('type.num.num',X23)))) ) | $spl3),
  inference(forward_demodulation,[],[f106284,f1161])).
fof(f106284,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),s('type.num.num',X23)))) ) | $spl3),
  inference(superposition,[],[f1861,f1519])).
fof(f1519,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f1077])).
fof(f106899,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl774),
  inference(cnf_transformation,[],[f106899_D])).
fof(f106899_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl774),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl774])])).
fof(f106905,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl3),
  inference(forward_demodulation,[],[f106904,f1161])).
fof(f106904,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(forward_demodulation,[],[f106903,f1160])).
fof(f106903,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(forward_demodulation,[],[f106281,f1161])).
fof(f106281,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(superposition,[],[f1861,f1432])).
fof(f1432,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f687])).
fof(f687,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))))),
  inference(rectify,[],[f504])).
fof(f504,axiom,(
  ! [X23] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X23) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.LESS_|48|_CASES')).
fof(f106902,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl3),
  inference(forward_demodulation,[],[f106901,f1161])).
fof(f106901,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(forward_demodulation,[],[f106900,f1160])).
fof(f106900,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(forward_demodulation,[],[f106280,f1161])).
fof(f106280,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(superposition,[],[f1861,f1417])).
fof(f1417,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f1045])).
fof(f1045,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)))),
  inference(nnf_transformation,[],[f680])).
fof(f680,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))))),
  inference(flattening,[],[f679])).
fof(f679,plain,(
  ! [X0] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))))),
  inference(rectify,[],[f308])).
fof(f308,axiom,(
  ! [X16] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X16) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X16)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.NOT_ZERO_LT_ZERO')).
fof(f106897,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl3),
  inference(forward_demodulation,[],[f106896,f1161])).
fof(f106896,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(forward_demodulation,[],[f106895,f1160])).
fof(f106895,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(forward_demodulation,[],[f106279,f1161])).
fof(f106279,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(superposition,[],[f1861,f1415])).
fof(f1415,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f1044])).
fof(f1044,plain,(
  ! [X0] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f678])).
fof(f678,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(flattening,[],[f677])).
fof(f677,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f351])).
fof(f351,axiom,(
  ! [X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X16)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X16))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.NOT_LT_ZERO_EQ_ZERO')).
fof(f106889,plain,(
  ( ! [X8,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X9)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl772),
  inference(cnf_transformation,[],[f106889_D])).
fof(f106889_D,plain,(
  ( ! [X8,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X9)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl772),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl772])])).
fof(f106888,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X9)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f106887,f1160])).
fof(f106887,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X9)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f106269,f1161])).
fof(f106269,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X9)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl3),
  inference(superposition,[],[f1861,f1297])).
fof(f1297,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f963])).
fof(f963,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1))))))))),
  inference(flattening,[],[f962])).
fof(f962,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f603])).
fof(f603,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))))),
  inference(rectify,[],[f385])).
fof(f385,axiom,(
  ! [X23,X16,X32] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X16))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X16)))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X16) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X32))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.LE_MULT_RCANCEL')).
fof(f106886,plain,(
  s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26(sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl770),
  inference(cnf_transformation,[],[f106886_D])).
fof(f106886_D,plain,(
  s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26(sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl770),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl770])])).
fof(f106884,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26(sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(forward_demodulation,[],[f106883,f1160])).
fof(f106883,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26(sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(forward_demodulation,[],[f106268,f1161])).
fof(f106268,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26(sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(superposition,[],[f1861,f1152])).
fof(f106880,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl769),
  inference(cnf_transformation,[],[f106880_D])).
fof(f106880_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl769),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl769])])).
fof(f106882,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl3),
  inference(forward_demodulation,[],[f106881,f1161])).
fof(f106881,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl3),
  inference(forward_demodulation,[],[f106267,f1160])).
fof(f106267,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl3),
  inference(superposition,[],[f1861,f1150])).
fof(f1150,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f885])).
fof(f885,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f547])).
fof(f547,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f100])).
fof(f100,axiom,(
  ! [X16] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X16))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_distrib|split|17')).
fof(f106876,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl3),
  inference(forward_demodulation,[],[f106875,f1161])).
fof(f106875,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl3),
  inference(forward_demodulation,[],[f106266,f1160])).
fof(f106266,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl3),
  inference(superposition,[],[f1861,f1148])).
fof(f1148,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f884])).
fof(f884,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f546])).
fof(f546,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f106])).
fof(f106,axiom,(
  ! [X16] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X16))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_distrib|split|18')).
fof(f1935,plain,(
  ( ! [X14,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl40),
  inference(cnf_transformation,[],[f1935_D])).
fof(f1935_D,plain,(
  ( ! [X14,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f106066,plain,(
  ( ! [X39,X38] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) | $spl764),
  inference(cnf_transformation,[],[f106066_D])).
fof(f106066_D,plain,(
  ( ! [X39,X38] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) <=> ~$spl764),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl764])])).
fof(f106067,plain,(
  ( ! [X43,X41,X42,X40] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f105960,f1161])).
fof(f105960,plain,(
  ( ! [X43,X41,X42,X40] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(superposition,[],[f1629,f1297])).
fof(f1629,plain,(
  ( ! [X138,X139] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X138,X139)) ) | $spl3),
  inference(resolution,[],[f1547,f1242])).
fof(f1242,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f938])).
fof(f938,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(flattening,[],[f937])).
fof(f937,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(nnf_transformation,[],[f839])).
fof(f839,plain,(
  ! [X0,X1,X2] : (sP8(X0,X1,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f1932,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl38),
  inference(cnf_transformation,[],[f1932_D])).
fof(f1932_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f106065,plain,(
  ( ! [X39,X38] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(forward_demodulation,[],[f105959,f1161])).
fof(f105959,plain,(
  ( ! [X39,X38] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(superposition,[],[f1629,f1152])).
fof(f13045,plain,(
  ( ! [X28,X29] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X28),s('type.num.num',X29)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl196),
  inference(cnf_transformation,[],[f13045_D])).
fof(f13045_D,plain,(
  ( ! [X28,X29] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X28),s('type.num.num',X29)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f106024,plain,(
  ( ! [X41,X40] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) | $spl762),
  inference(cnf_transformation,[],[f106024_D])).
fof(f106024_D,plain,(
  ( ! [X41,X40] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) <=> ~$spl762),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl762])])).
fof(f106025,plain,(
  ( ! [X45,X43,X44,X42] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f105920,f1161])).
fof(f105920,plain,(
  ( ! [X45,X43,X44,X42] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(superposition,[],[f1629,f1297])).
fof(f13043,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl194),
  inference(cnf_transformation,[],[f13043_D])).
fof(f13043_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f106023,plain,(
  ( ! [X41,X40] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(forward_demodulation,[],[f105919,f1161])).
fof(f105919,plain,(
  ( ! [X41,X40] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(superposition,[],[f1629,f1152])).
fof(f105802,plain,(
  ( ! [X39,X38] : (sP8(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39)) ) | $spl760),
  inference(cnf_transformation,[],[f105802_D])).
fof(f105802_D,plain,(
  ( ! [X39,X38] : (sP8(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39)) ) <=> ~$spl760),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl760])])).
fof(f105803,plain,(
  ( ! [X43,X41,X42,X40] : (sP8(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f105696,f1161])).
fof(f105696,plain,(
  ( ! [X43,X41,X42,X40] : (sP8(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(superposition,[],[f1628,f1297])).
fof(f1628,plain,(
  ( ! [X136,X137] : (sP8(X136,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X137)) ) | $spl3),
  inference(resolution,[],[f1547,f1241])).
fof(f1241,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f938])).
fof(f105801,plain,(
  ( ! [X39,X38] : (sP8(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(forward_demodulation,[],[f105695,f1161])).
fof(f105695,plain,(
  ( ! [X39,X38] : (sP8(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(superposition,[],[f1628,f1152])).
fof(f105760,plain,(
  ( ! [X41,X40] : (sP8(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) | $spl758),
  inference(cnf_transformation,[],[f105760_D])).
fof(f105760_D,plain,(
  ( ! [X41,X40] : (sP8(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) <=> ~$spl758),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl758])])).
fof(f105761,plain,(
  ( ! [X45,X43,X44,X42] : (sP8(X42,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f105656,f1161])).
fof(f105656,plain,(
  ( ! [X45,X43,X44,X42] : (sP8(X42,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(superposition,[],[f1628,f1297])).
fof(f105759,plain,(
  ( ! [X41,X40] : (sP8(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(forward_demodulation,[],[f105655,f1161])).
fof(f105655,plain,(
  ( ! [X41,X40] : (sP8(X40,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(superposition,[],[f1628,f1152])).
fof(f105435,plain,(
  ( ! [X39,X38] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) | $spl756),
  inference(cnf_transformation,[],[f105435_D])).
fof(f105435_D,plain,(
  ( ! [X39,X38] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) <=> ~$spl756),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl756])])).
fof(f105436,plain,(
  ( ! [X43,X41,X42,X40] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f105328,f1161])).
fof(f105328,plain,(
  ( ! [X43,X41,X42,X40] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(superposition,[],[f1615,f1297])).
fof(f1615,plain,(
  ( ! [X111,X110] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X110,X111)) ) | $spl3),
  inference(resolution,[],[f1547,f1225])).
fof(f1225,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f931])).
fof(f931,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(rectify,[],[f930])).
fof(f930,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP6(X2,X0,X1)))),
  inference(flattening,[],[f929])).
fof(f929,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP6(X2,X0,X1)))),
  inference(nnf_transformation,[],[f836])).
fof(f836,plain,(
  ! [X2,X0,X1] : (sP6(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f105434,plain,(
  ( ! [X39,X38] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(forward_demodulation,[],[f105327,f1161])).
fof(f105327,plain,(
  ( ! [X39,X38] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(superposition,[],[f1615,f1152])).
fof(f105393,plain,(
  ( ! [X41,X40] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) | $spl754),
  inference(cnf_transformation,[],[f105393_D])).
fof(f105393_D,plain,(
  ( ! [X41,X40] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) <=> ~$spl754),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl754])])).
fof(f105394,plain,(
  ( ! [X45,X43,X44,X42] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f105288,f1161])).
fof(f105288,plain,(
  ( ! [X45,X43,X44,X42] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(superposition,[],[f1615,f1297])).
fof(f105392,plain,(
  ( ! [X41,X40] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(forward_demodulation,[],[f105287,f1161])).
fof(f105287,plain,(
  ( ! [X41,X40] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(superposition,[],[f1615,f1152])).
fof(f105071,plain,(
  ( ! [X39,X38] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) | $spl752),
  inference(cnf_transformation,[],[f105071_D])).
fof(f105071_D,plain,(
  ( ! [X39,X38] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) <=> ~$spl752),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl752])])).
fof(f105072,plain,(
  ( ! [X43,X41,X42,X40] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f104965,f1161])).
fof(f104965,plain,(
  ( ! [X43,X41,X42,X40] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(superposition,[],[f1599,f1297])).
fof(f1599,plain,(
  ( ! [X78,X79] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X78,X79)) ) | $spl3),
  inference(resolution,[],[f1547,f1208])).
fof(f1208,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f923])).
fof(f923,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f922])).
fof(f922,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(flattening,[],[f921])).
fof(f921,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(nnf_transformation,[],[f833])).
fof(f833,plain,(
  ! [X2,X0,X1] : (sP4(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f105070,plain,(
  ( ! [X39,X38] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(forward_demodulation,[],[f104964,f1161])).
fof(f104964,plain,(
  ( ! [X39,X38] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(superposition,[],[f1599,f1152])).
fof(f105029,plain,(
  ( ! [X41,X40] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) | $spl750),
  inference(cnf_transformation,[],[f105029_D])).
fof(f105029_D,plain,(
  ( ! [X41,X40] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) <=> ~$spl750),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl750])])).
fof(f105030,plain,(
  ( ! [X45,X43,X44,X42] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f104925,f1161])).
fof(f104925,plain,(
  ( ! [X45,X43,X44,X42] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(superposition,[],[f1599,f1297])).
fof(f105028,plain,(
  ( ! [X41,X40] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(forward_demodulation,[],[f104924,f1161])).
fof(f104924,plain,(
  ( ! [X41,X40] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(superposition,[],[f1599,f1152])).
fof(f104774,plain,(
  ( ! [X39,X38] : (sP4(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl748),
  inference(cnf_transformation,[],[f104774_D])).
fof(f104774_D,plain,(
  ( ! [X39,X38] : (sP4(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl748),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl748])])).
fof(f104775,plain,(
  ( ! [X43,X41,X42,X40] : (sP4(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f104668,f1161])).
fof(f104668,plain,(
  ( ! [X43,X41,X42,X40] : (sP4(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(superposition,[],[f1598,f1297])).
fof(f1598,plain,(
  ( ! [X76,X77] : (sP4(X76,X77,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1206])).
fof(f1206,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f923])).
fof(f104773,plain,(
  ( ! [X39,X38] : (sP4(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(forward_demodulation,[],[f104667,f1161])).
fof(f104667,plain,(
  ( ! [X39,X38] : (sP4(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(superposition,[],[f1598,f1152])).
fof(f104732,plain,(
  ( ! [X41,X40] : (sP4(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl746),
  inference(cnf_transformation,[],[f104732_D])).
fof(f104732_D,plain,(
  ( ! [X41,X40] : (sP4(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl746),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl746])])).
fof(f104733,plain,(
  ( ! [X45,X43,X44,X42] : (sP4(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f104628,f1161])).
fof(f104628,plain,(
  ( ! [X45,X43,X44,X42] : (sP4(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(superposition,[],[f1598,f1297])).
fof(f104731,plain,(
  ( ! [X41,X40] : (sP4(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(forward_demodulation,[],[f104627,f1161])).
fof(f104627,plain,(
  ( ! [X41,X40] : (sP4(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(superposition,[],[f1598,f1152])).
fof(f104423,plain,(
  ( ! [X39,X38] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) | $spl744),
  inference(cnf_transformation,[],[f104423_D])).
fof(f104423_D,plain,(
  ( ! [X39,X38] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) <=> ~$spl744),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl744])])).
fof(f104424,plain,(
  ( ! [X43,X41,X42,X40] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f104315,f1161])).
fof(f104315,plain,(
  ( ! [X43,X41,X42,X40] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(superposition,[],[f1576,f1297])).
fof(f1576,plain,(
  ( ! [X43,X42] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43)) ) | $spl3),
  inference(resolution,[],[f1547,f1102])).
fof(f1102,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f863])).
fof(f863,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1,X2)))),
  inference(rectify,[],[f862])).
fof(f862,plain,(
  ! [X1,X0,X2] : ((~sP1(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0,X2)))),
  inference(flattening,[],[f861])).
fof(f861,plain,(
  ! [X1,X0,X2] : ((~sP1(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0,X2)))),
  inference(nnf_transformation,[],[f829])).
fof(f829,plain,(
  ! [X1,X0,X2] : (sP1(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f104422,plain,(
  ( ! [X39,X38] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(forward_demodulation,[],[f104314,f1161])).
fof(f104314,plain,(
  ( ! [X39,X38] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(superposition,[],[f1576,f1152])).
fof(f104381,plain,(
  ( ! [X41,X40] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) | $spl742),
  inference(cnf_transformation,[],[f104381_D])).
fof(f104381_D,plain,(
  ( ! [X41,X40] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) <=> ~$spl742),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl742])])).
fof(f104382,plain,(
  ( ! [X45,X43,X44,X42] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f104275,f1161])).
fof(f104275,plain,(
  ( ! [X45,X43,X44,X42] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(superposition,[],[f1576,f1297])).
fof(f104380,plain,(
  ( ! [X41,X40] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(forward_demodulation,[],[f104274,f1161])).
fof(f104274,plain,(
  ( ! [X41,X40] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(superposition,[],[f1576,f1152])).
fof(f104113,plain,(
  ( ! [X39,X38] : (sP1(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39)) ) | $spl740),
  inference(cnf_transformation,[],[f104113_D])).
fof(f104113_D,plain,(
  ( ! [X39,X38] : (sP1(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39)) ) <=> ~$spl740),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl740])])).
fof(f104114,plain,(
  ( ! [X43,X41,X42,X40] : (sP1(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f104005,f1161])).
fof(f104005,plain,(
  ( ! [X43,X41,X42,X40] : (sP1(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(superposition,[],[f1575,f1297])).
fof(f1575,plain,(
  ( ! [X41,X40] : (sP1(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) | $spl3),
  inference(resolution,[],[f1547,f1101])).
fof(f1101,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f863])).
fof(f104112,plain,(
  ( ! [X39,X38] : (sP1(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(forward_demodulation,[],[f104004,f1161])).
fof(f104004,plain,(
  ( ! [X39,X38] : (sP1(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(superposition,[],[f1575,f1152])).
fof(f104071,plain,(
  ( ! [X41,X40] : (sP1(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) | $spl738),
  inference(cnf_transformation,[],[f104071_D])).
fof(f104071_D,plain,(
  ( ! [X41,X40] : (sP1(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) <=> ~$spl738),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl738])])).
fof(f104072,plain,(
  ( ! [X45,X43,X44,X42] : (sP1(X42,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f103965,f1161])).
fof(f103965,plain,(
  ( ! [X45,X43,X44,X42] : (sP1(X42,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(superposition,[],[f1575,f1297])).
fof(f104070,plain,(
  ( ! [X41,X40] : (sP1(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(forward_demodulation,[],[f103964,f1161])).
fof(f103964,plain,(
  ( ! [X41,X40] : (sP1(X40,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(superposition,[],[f1575,f1152])).
fof(f103762,plain,(
  ( ! [X39,X38] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) | $spl736),
  inference(cnf_transformation,[],[f103762_D])).
fof(f103762_D,plain,(
  ( ! [X39,X38] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) <=> ~$spl736),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl736])])).
fof(f103763,plain,(
  ( ! [X43,X41,X42,X40] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f103654,f1161])).
fof(f103654,plain,(
  ( ! [X43,X41,X42,X40] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(superposition,[],[f1573,f1297])).
fof(f1573,plain,(
  ( ! [X37,X36] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X36,X37)) ) | $spl3),
  inference(resolution,[],[f1547,f1098])).
fof(f1098,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f860])).
fof(f860,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(rectify,[],[f859])).
fof(f859,plain,(
  ! [X2,X0,X1] : ((~sP2(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP2(X2,X0,X1)))),
  inference(flattening,[],[f858])).
fof(f858,plain,(
  ! [X2,X0,X1] : ((~sP2(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP2(X2,X0,X1)))),
  inference(nnf_transformation,[],[f830])).
fof(f830,plain,(
  ! [X2,X0,X1] : (sP2(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f103761,plain,(
  ( ! [X39,X38] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(forward_demodulation,[],[f103653,f1161])).
fof(f103653,plain,(
  ( ! [X39,X38] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(superposition,[],[f1573,f1152])).
fof(f103720,plain,(
  ( ! [X41,X40] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) | $spl734),
  inference(cnf_transformation,[],[f103720_D])).
fof(f103720_D,plain,(
  ( ! [X41,X40] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) <=> ~$spl734),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl734])])).
fof(f103721,plain,(
  ( ! [X45,X43,X44,X42] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f103614,f1161])).
fof(f103614,plain,(
  ( ! [X45,X43,X44,X42] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(superposition,[],[f1573,f1297])).
fof(f103719,plain,(
  ( ! [X41,X40] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(forward_demodulation,[],[f103613,f1161])).
fof(f103613,plain,(
  ( ! [X41,X40] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(superposition,[],[f1573,f1152])).
fof(f103477,plain,(
  ( ! [X39,X38] : (sP2(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39)) ) | $spl732),
  inference(cnf_transformation,[],[f103477_D])).
fof(f103477_D,plain,(
  ( ! [X39,X38] : (sP2(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39)) ) <=> ~$spl732),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl732])])).
fof(f103478,plain,(
  ( ! [X43,X41,X42,X40] : (sP2(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f103370,f1161])).
fof(f103370,plain,(
  ( ! [X43,X41,X42,X40] : (sP2(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(superposition,[],[f1572,f1297])).
fof(f1572,plain,(
  ( ! [X35,X34] : (sP2(X34,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X35)) ) | $spl3),
  inference(resolution,[],[f1547,f1097])).
fof(f1097,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f860])).
fof(f103476,plain,(
  ( ! [X39,X38] : (sP2(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(forward_demodulation,[],[f103369,f1161])).
fof(f103369,plain,(
  ( ! [X39,X38] : (sP2(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(superposition,[],[f1572,f1152])).
fof(f103435,plain,(
  ( ! [X41,X40] : (sP2(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) | $spl730),
  inference(cnf_transformation,[],[f103435_D])).
fof(f103435_D,plain,(
  ( ! [X41,X40] : (sP2(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) <=> ~$spl730),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl730])])).
fof(f103436,plain,(
  ( ! [X45,X43,X44,X42] : (sP2(X42,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f103330,f1161])).
fof(f103330,plain,(
  ( ! [X45,X43,X44,X42] : (sP2(X42,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl3),
  inference(superposition,[],[f1572,f1297])).
fof(f103434,plain,(
  ( ! [X41,X40] : (sP2(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(forward_demodulation,[],[f103329,f1161])).
fof(f103329,plain,(
  ( ! [X41,X40] : (sP2(X40,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(superposition,[],[f1572,f1152])).
fof(f103068,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl728),
  inference(cnf_transformation,[],[f103068_D])).
fof(f103068_D,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl728),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl728])])).
fof(f102915,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1556,f1535])).
fof(f102803,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X23) != s(bool,X25)) ) | $spl3),
  inference(resolution,[],[f1556,f1087])).
fof(f102801,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1556,f1086])).
fof(f102799,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1556,f1085])).
fof(f102798,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X8) != s(bool,X10)) ) | $spl3),
  inference(resolution,[],[f1556,f1083])).
fof(f102796,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1556,f1081])).
fof(f102571,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl724),
  inference(cnf_transformation,[],[f102571_D])).
fof(f102571_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) <=> ~$spl724),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl724])])).
fof(f102573,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl726),
  inference(cnf_transformation,[],[f102573_D])).
fof(f102573_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl726),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl726])])).
fof(f102185,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl3),
  inference(resolution,[],[f1553,f1362])).
fof(f1553,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl3),
  inference(resolution,[],[f1547,f1320])).
fof(f1320,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f975])).
fof(f975,plain,(
  ! [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f617])).
fof(f617,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f616])).
fof(f616,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f309])).
fof(f309,axiom,(
  ! [X23,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X16)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.NOT_LESS_EQUAL')).
fof(f102569,plain,(
  ( ! [X237] : (p(s(bool,X237)) | s(bool,X237) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl722),
  inference(cnf_transformation,[],[f102569_D])).
fof(f102569_D,plain,(
  ( ! [X237] : (p(s(bool,X237)) | s(bool,X237) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl722),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl722])])).
fof(f102186,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl3),
  inference(resolution,[],[f1553,f1081])).
fof(f102188,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X9) != s(bool,X10)) ) | $spl3),
  inference(resolution,[],[f1553,f1083])).
fof(f102189,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl3),
  inference(resolution,[],[f1553,f1085])).
fof(f102190,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | ~p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl3),
  inference(resolution,[],[f1553,f1086])).
fof(f102193,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X24) != s(bool,X25)) ) | $spl3),
  inference(resolution,[],[f1553,f1087])).
fof(f102304,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | p(s(bool,X237)) | s(bool,X237) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl3),
  inference(resolution,[],[f1553,f1535])).
fof(f102466,plain,(
  $false | ($spl3 | $spl55)),
  inference(subsumption_resolution,[],[f102184,f2246])).
fof(f102184,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl3),
  inference(resolution,[],[f1553,f1353])).
fof(f5506,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl109),
  inference(cnf_transformation,[],[f5506_D])).
fof(f5506_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) <=> ~$spl109),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl109])])).
fof(f5508,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK38('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK39('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK37('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))))) | $spl110),
  inference(cnf_transformation,[],[f5508_D])).
fof(f5508_D,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK38('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK39('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK37('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))))) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f100604,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK38('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK39('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK37('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl4),
  inference(forward_demodulation,[],[f100414,f1550])).
fof(f100414,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK38('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK39('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK37('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))))) | $spl4),
  inference(superposition,[],[f19333,f1550])).
fof(f19333,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(X1,X0)),s('type.list.list'(X0),sK37(X1,X0))))))) )),
  inference(forward_demodulation,[],[f1188,f1156])).
fof(f1188,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(X1,X0)),s('type.list.list'(X0),sK37(X1,X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f906])).
fof(f906,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(X1,X0)),s('type.list.list'(X0),sK37(X1,X0))))))) & (! [X2,X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK37,sK38,sK39])],[f905])).
fof(f905,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X5,X6,X7] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X5)))))) & (! [X2,X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f904])).
fof(f904,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X2,X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2)))))) & (! [X2,X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f582])).
fof(f582,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f581])).
fof(f581,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ? [X8,X9,X10] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),X8))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.quantHeuristics.LIST_LENGTH_2|split|2')).
fof(f5519,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl115),
  inference(cnf_transformation,[],[f5519_D])).
fof(f5519_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) <=> ~$spl115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl115])])).
fof(f5521,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK41('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK40('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))) | $spl116),
  inference(cnf_transformation,[],[f5521_D])).
fof(f5521_D,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK41('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK40('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f100602,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK41('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK40('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl4),
  inference(forward_demodulation,[],[f100412,f1550])).
fof(f100412,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK41('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK40('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))) | $spl4),
  inference(superposition,[],[f19331,f1550])).
fof(f19331,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK41(X1,X0)),s('type.list.list'(X0),sK40(X1,X0))))) )),
  inference(forward_demodulation,[],[f1190,f1156])).
fof(f1190,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK41(X1,X0)),s('type.list.list'(X0),sK40(X1,X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f909])).
fof(f909,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK41(X1,X0)),s('type.list.list'(X0),sK40(X1,X0))))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK40,sK41])],[f908])).
fof(f908,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X4)))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f907])).
fof(f907,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f584])).
fof(f584,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f583])).
fof(f583,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))))),
  inference(rectify,[],[f188])).
fof(f188,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ? [X8,X9] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X8))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.quantHeuristics.LIST_LENGTH_|49||split|4')).
fof(f5524,plain,(
  ( ! [X165,X166] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X165),s('type.list.list'(sK14),X166)))) ) | $spl118),
  inference(cnf_transformation,[],[f5524_D])).
fof(f5524_D,plain,(
  ( ! [X165,X166] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X165),s('type.list.list'(sK14),X166)))) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f5529,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | $spl120),
  inference(cnf_transformation,[],[f5529_D])).
fof(f5529_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f100601,plain,(
  ( ! [X120,X119] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X119),s('type.list.list'(sK14),X120)))) ) | $spl4),
  inference(forward_demodulation,[],[f100600,f1187])).
fof(f1187,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f580])).
fof(f580,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f579])).
fof(f579,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f480])).
fof(f480,axiom,(
  ! [X6] : ! [X28,X22] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X22))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X28),s('type.list.list'(X6),X22)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.list.LENGTH|split|1')).
fof(f100600,plain,(
  ( ! [X120,X119] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X119),s('type.list.list'(sK14),X120)))) ) | $spl4),
  inference(forward_demodulation,[],[f100410,f1187])).
fof(f100410,plain,(
  ( ! [X120,X119] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X119),s('type.list.list'(sK14),X120))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))))))) ) | $spl4),
  inference(superposition,[],[f19330,f1550])).
fof(f19330,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(forward_demodulation,[],[f1191,f1156])).
fof(f1191,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f909])).
fof(f1808,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl6),
  inference(cnf_transformation,[],[f1808_D])).
fof(f1808_D,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f99894,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1535])).
fof(f99782,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X23) != s(bool,X25)) ) | $spl3),
  inference(resolution,[],[f1547,f1087])).
fof(f99780,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1086])).
fof(f99778,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1085])).
fof(f99777,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X8) != s(bool,X10)) ) | $spl3),
  inference(resolution,[],[f1547,f1083])).
fof(f99775,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1081])).
fof(f99632,plain,(
  $false | ($spl3 | $spl50)),
  inference(subsumption_resolution,[],[f1556,f2242])).
fof(f99631,plain,(
  $false | ($spl3 | $spl50)),
  inference(subsumption_resolution,[],[f3321,f2242])).
fof(f3321,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(resolution,[],[f1547,f1353])).
fof(f99630,plain,(
  $false | ($spl3 | $spl50)),
  inference(subsumption_resolution,[],[f4734,f2242])).
fof(f4734,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(resolution,[],[f1547,f1353])).
fof(f99625,plain,(
  $false | ($spl3 | $spl50)),
  inference(subsumption_resolution,[],[f61933,f2242])).
fof(f61933,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(resolution,[],[f1547,f1353])).
fof(f99624,plain,(
  $false | ($spl3 | $spl50)),
  inference(subsumption_resolution,[],[f59430,f2242])).
fof(f59430,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(resolution,[],[f1547,f1353])).
fof(f69182,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)))) ) | $spl496),
  inference(cnf_transformation,[],[f69182_D])).
fof(f69182_D,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)))) ) <=> ~$spl496),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl496])])).
fof(f99615,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl721),
  inference(cnf_transformation,[],[f99615_D])).
fof(f99615_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) <=> ~$spl721),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl721])])).
fof(f76537,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)))) ) | $spl46),
  inference(forward_demodulation,[],[f76337,f1161])).
fof(f76337,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl46),
  inference(superposition,[],[f1959,f1148])).
fof(f76538,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24)))) ) | $spl46),
  inference(forward_demodulation,[],[f76338,f1161])).
fof(f76338,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl46),
  inference(superposition,[],[f1959,f1150])).
fof(f69496,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl498),
  inference(cnf_transformation,[],[f69496_D])).
fof(f69496_D,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl498),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl498])])).
fof(f77174,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl48),
  inference(forward_demodulation,[],[f77089,f1161])).
fof(f77089,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl48),
  inference(superposition,[],[f1963,f1148])).
fof(f77175,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl48),
  inference(forward_demodulation,[],[f77090,f1161])).
fof(f77090,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl48),
  inference(superposition,[],[f1963,f1150])).
fof(f90026,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)))) ) | $spl46),
  inference(forward_demodulation,[],[f89826,f1161])).
fof(f89826,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl46),
  inference(superposition,[],[f1959,f1148])).
fof(f90027,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24)))) ) | $spl46),
  inference(forward_demodulation,[],[f89827,f1161])).
fof(f89827,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl46),
  inference(superposition,[],[f1959,f1150])).
fof(f90635,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl48),
  inference(forward_demodulation,[],[f90550,f1161])).
fof(f90550,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl48),
  inference(superposition,[],[f1963,f1148])).
fof(f90636,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl48),
  inference(forward_demodulation,[],[f90551,f1161])).
fof(f90551,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl48),
  inference(superposition,[],[f1963,f1150])).
fof(f99526,plain,(
  $false | ($spl50 | $spl109)),
  inference(subsumption_resolution,[],[f99525,f2242])).
fof(f99525,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl109),
  inference(forward_demodulation,[],[f99250,f1155])).
fof(f99250,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl109),
  inference(resolution,[],[f5506,f1363])).
fof(f1363,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f814])).
fof(f814,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f643])).
fof(f643,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f389])).
fof(f389,axiom,(
  ! [X23,X16] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))),s('type.num.num',X16)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X16)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.prim_rec.SUC_LESS')).
fof(f65025,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl486),
  inference(cnf_transformation,[],[f65025_D])).
fof(f65025_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) <=> ~$spl486),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl486])])).
fof(f99249,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl109),
  inference(resolution,[],[f5506,f1352])).
fof(f1352,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f992])).
fof(f99524,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | $spl719),
  inference(cnf_transformation,[],[f99524_D])).
fof(f99524_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) <=> ~$spl719),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl719])])).
fof(f99248,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | $spl109),
  inference(resolution,[],[f5506,f1349])).
fof(f99071,plain,(
  $false | ($spl0 | $spl108)),
  inference(subsumption_resolution,[],[f98780,f1545])).
fof(f98780,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK38(sK15,sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK39(sK15,sK14)),s('type.list.list'(sK14),sK37(sK15,sK14)))))) | $spl108),
  inference(resolution,[],[f5505,f19333])).
fof(f98517,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl716),
  inference(cnf_transformation,[],[f98517_D])).
fof(f98517_D,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl716),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl716])])).
fof(f98357,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl91),
  inference(resolution,[],[f5351,f1535])).
fof(f98245,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X23) != s(bool,X25)) ) | $spl91),
  inference(resolution,[],[f5351,f1087])).
fof(f98243,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl91),
  inference(resolution,[],[f5351,f1086])).
fof(f98241,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl91),
  inference(resolution,[],[f5351,f1085])).
fof(f98240,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X8) != s(bool,X10)) ) | $spl91),
  inference(resolution,[],[f5351,f1083])).
fof(f98238,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl91),
  inference(resolution,[],[f5351,f1081])).
fof(f98516,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl715),
  inference(cnf_transformation,[],[f98516_D])).
fof(f98516_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl715),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl715])])).
fof(f98512,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) | $spl710),
  inference(cnf_transformation,[],[f98512_D])).
fof(f98512_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) <=> ~$spl710),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl710])])).
fof(f98236,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl91),
  inference(resolution,[],[f5351,f1352])).
fof(f98514,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl713),
  inference(cnf_transformation,[],[f98514_D])).
fof(f98514_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl713),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl713])])).
fof(f98510,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) | $spl91),
  inference(forward_demodulation,[],[f98235,f1155])).
fof(f98235,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl91),
  inference(resolution,[],[f5351,f1349])).
fof(f97978,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl708),
  inference(cnf_transformation,[],[f97978_D])).
fof(f97978_D,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl708),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl708])])).
fof(f97827,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl55),
  inference(resolution,[],[f2246,f1535])).
fof(f97715,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X23) != s(bool,X25)) ) | $spl55),
  inference(resolution,[],[f2246,f1087])).
fof(f97713,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl55),
  inference(resolution,[],[f2246,f1086])).
fof(f97711,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl55),
  inference(resolution,[],[f2246,f1085])).
fof(f97710,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X8) != s(bool,X10)) ) | $spl55),
  inference(resolution,[],[f2246,f1083])).
fof(f97708,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl55),
  inference(resolution,[],[f2246,f1081])).
fof(f97608,plain,(
  ( ! [X3] : (p(s(bool,X3)) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl706),
  inference(cnf_transformation,[],[f97608_D])).
fof(f97608_D,plain,(
  ( ! [X3] : (p(s(bool,X3)) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl706),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl706])])).
fof(f97440,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | p(s(bool,X237)) | s(bool,X237) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl50),
  inference(resolution,[],[f2242,f1535])).
fof(f97329,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X24) != s(bool,X25)) ) | $spl50),
  inference(resolution,[],[f2242,f1087])).
fof(f97326,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | ~p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl50),
  inference(resolution,[],[f2242,f1086])).
fof(f97325,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl50),
  inference(resolution,[],[f2242,f1085])).
fof(f97324,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X9) != s(bool,X10)) ) | $spl50),
  inference(resolution,[],[f2242,f1083])).
fof(f97322,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl50),
  inference(resolution,[],[f2242,f1081])).
fof(f97605,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl702),
  inference(cnf_transformation,[],[f97605_D])).
fof(f97605_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) <=> ~$spl702),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl702])])).
fof(f97607,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl704),
  inference(cnf_transformation,[],[f97607_D])).
fof(f97607_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl704),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl704])])).
fof(f97603,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl50),
  inference(forward_demodulation,[],[f97602,f1160])).
fof(f97602,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl50),
  inference(forward_demodulation,[],[f97601,f1154])).
fof(f1154,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f550])).
fof(f550,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f145])).
fof(f145,axiom,(
  ! [X16] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_suc|split|2')).
fof(f97601,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl50),
  inference(forward_demodulation,[],[f97600,f1160])).
fof(f97600,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl50),
  inference(forward_demodulation,[],[f97321,f1154])).
fof(f97321,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl50),
  inference(resolution,[],[f2242,f1362])).
fof(f82305,plain,(
  ( ! [X39,X38] : (sP12(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39)) ) | $spl602),
  inference(cnf_transformation,[],[f82305_D])).
fof(f82305_D,plain,(
  ( ! [X39,X38] : (sP12(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39)) ) <=> ~$spl602),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl602])])).
fof(f97296,plain,(
  ( ! [X43,X41,X42,X40] : (sP12(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f97192,f1161])).
fof(f97192,plain,(
  ( ! [X43,X41,X42,X40] : (sP12(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f2079,f1297])).
fof(f2079,plain,(
  ( ! [X210,X209] : (sP12(X209,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X210)) ) | $spl2),
  inference(resolution,[],[f1546,f1281])).
fof(f1281,plain,(
  ( ! [X2,X0,X1] : (sP12(X2,X0,X1) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f957])).
fof(f957,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X0)) & (~p(s(bool,X1)) | ~p(s(bool,X2)))) | sP12(X2,X0,X1)) & (~sP12(X2,X0,X1) | p(s(bool,X0)) | (p(s(bool,X1)) & p(s(bool,X2)))))),
  inference(flattening,[],[f956])).
fof(f956,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X0)) & (~p(s(bool,X1)) | ~p(s(bool,X2)))) | sP12(X2,X0,X1)) & (~sP12(X2,X0,X1) | (p(s(bool,X0)) | (p(s(bool,X1)) & p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f847])).
fof(f847,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X0)) | (p(s(bool,X1)) & p(s(bool,X2)))) <=> sP12(X2,X0,X1))),
  inference(definition_folding,[],[f600,f846])).
fof(f846,plain,(
  ! [X2,X0,X1] : (sP12(X2,X0,X1) <=> ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP12])])).
fof(f600,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X0)) | (p(s(bool,X1)) & p(s(bool,X2)))) <=> ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(rectify,[],[f441])).
fof(f441,axiom,(
  ! [X6,X19,X45] : ((p(s(bool,X6)) | (p(s(bool,X19)) & p(s(bool,X45)))) <=> ((p(s(bool,X6)) | p(s(bool,X19))) & (p(s(bool,X6)) | p(s(bool,X45)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.bool.LEFT_OR_OVER_AND')).
fof(f97295,plain,(
  ( ! [X39,X38] : (sP12(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f97191,f1161])).
fof(f97191,plain,(
  ( ! [X39,X38] : (sP12(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f2079,f1152])).
fof(f82263,plain,(
  ( ! [X41,X40] : (sP12(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) | $spl600),
  inference(cnf_transformation,[],[f82263_D])).
fof(f82263_D,plain,(
  ( ! [X41,X40] : (sP12(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) <=> ~$spl600),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl600])])).
fof(f97255,plain,(
  ( ! [X45,X43,X44,X42] : (sP12(X42,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f97152,f1161])).
fof(f97152,plain,(
  ( ! [X45,X43,X44,X42] : (sP12(X42,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f2079,f1297])).
fof(f97254,plain,(
  ( ! [X41,X40] : (sP12(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f97151,f1161])).
fof(f97151,plain,(
  ( ! [X41,X40] : (sP12(X40,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f2079,f1152])).
fof(f81425,plain,(
  sP13('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl590),
  inference(cnf_transformation,[],[f81425_D])).
fof(f81425_D,plain,(
  sP13('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) <=> ~$spl590),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl590])])).
fof(f97109,plain,(
  ( ! [X10] : (p(s(bool,X10)) | sP13('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2079,f20938])).
fof(f20938,plain,(
  ( ! [X290,X289,X291] : (~sP12(X290,X289,X291) | p(s(bool,X290)) | sP13('F_0',X289)) ) | $spl17),
  inference(resolution,[],[f11246,f1276])).
fof(f1276,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | ~sP12(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f955])).
fof(f955,plain,(
  ! [X0,X1,X2] : ((~sP12(X0,X1,X2) | ((p(s(bool,X1)) | p(s(bool,X2))) & (p(s(bool,X1)) | p(s(bool,X0))))) & ((~p(s(bool,X1)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) & ~p(s(bool,X0))) | sP12(X0,X1,X2)))),
  inference(rectify,[],[f954])).
fof(f954,plain,(
  ! [X2,X0,X1] : ((~sP12(X2,X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X2))) | sP12(X2,X0,X1)))),
  inference(flattening,[],[f953])).
fof(f953,plain,(
  ! [X2,X0,X1] : ((~sP12(X2,X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2))))) & (((~p(s(bool,X0)) & ~p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X2)))) | sP12(X2,X0,X1)))),
  inference(nnf_transformation,[],[f846])).
fof(f11246,plain,(
  ( ! [X215] : (~p(s(bool,X215)) | sP13('F_0',X215)) ) | $spl17),
  inference(resolution,[],[f1827,f1332])).
fof(f1332,plain,(
  ( ! [X0,X1] : (sP13(X0,X1) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f981])).
fof(f981,plain,(
  ! [X0,X1] : ((~sP13(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP13(X0,X1)))),
  inference(rectify,[],[f980])).
fof(f980,plain,(
  ! [X1,X0] : ((~sP13(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP13(X1,X0)))),
  inference(flattening,[],[f979])).
fof(f979,plain,(
  ! [X1,X0] : ((~sP13(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP13(X1,X0)))),
  inference(nnf_transformation,[],[f848])).
fof(f848,plain,(
  ! [X1,X0] : (sP13(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP13])])).
fof(f97107,plain,(
  ( ! [X8] : (p(s(bool,X8)) | sP13('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2079,f20936])).
fof(f20936,plain,(
  ( ! [X285,X283,X284] : (~sP12(X285,X283,X284) | p(s(bool,X284)) | sP13('F_0',X283)) ) | $spl17),
  inference(resolution,[],[f11246,f1275])).
fof(f1275,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | p(s(bool,X1)) | ~sP12(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f955])).
fof(f81423,plain,(
  sP13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),'F_0') | $spl588),
  inference(cnf_transformation,[],[f81423_D])).
fof(f81423_D,plain,(
  sP13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),'F_0') <=> ~$spl588),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl588])])).
fof(f97105,plain,(
  ( ! [X6] : (p(s(bool,X6)) | sP13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),'F_0')) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2079,f20620])).
fof(f20620,plain,(
  ( ! [X290,X289,X291] : (~sP12(X290,X289,X291) | p(s(bool,X290)) | sP13(X289,'F_0')) ) | $spl17),
  inference(resolution,[],[f11245,f1276])).
fof(f11245,plain,(
  ( ! [X214] : (~p(s(bool,X214)) | sP13(X214,'F_0')) ) | $spl17),
  inference(resolution,[],[f1827,f1329])).
fof(f1329,plain,(
  ( ! [X0,X1] : (sP13(X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f981])).
fof(f97103,plain,(
  ( ! [X4] : (p(s(bool,X4)) | sP13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),'F_0')) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2079,f20618])).
fof(f20618,plain,(
  ( ! [X285,X283,X284] : (~sP12(X285,X283,X284) | p(s(bool,X284)) | sP13(X283,'F_0')) ) | $spl17),
  inference(resolution,[],[f11245,f1275])).
fof(f82091,plain,(
  ( ! [X39,X38] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) | $spl598),
  inference(cnf_transformation,[],[f82091_D])).
fof(f82091_D,plain,(
  ( ! [X39,X38] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) <=> ~$spl598),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl598])])).
fof(f97084,plain,(
  ( ! [X43,X41,X42,X40] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f96980,f1161])).
fof(f96980,plain,(
  ( ! [X43,X41,X42,X40] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f2072,f1297])).
fof(f2072,plain,(
  ( ! [X196,X195] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X195,X196)) ) | $spl2),
  inference(resolution,[],[f1546,f1272])).
fof(f1272,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X2,X1) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f952])).
fof(f952,plain,(
  ! [X0,X1,X2] : ((((~p(s(bool,X1)) | ~p(s(bool,X2))) & ~p(s(bool,X0))) | sP11(X0,X2,X1)) & (~sP11(X0,X2,X1) | (p(s(bool,X1)) & p(s(bool,X2))) | p(s(bool,X0))))),
  inference(flattening,[],[f951])).
fof(f951,plain,(
  ! [X0,X1,X2] : ((((~p(s(bool,X1)) | ~p(s(bool,X2))) & ~p(s(bool,X0))) | sP11(X0,X2,X1)) & (~sP11(X0,X2,X1) | ((p(s(bool,X1)) & p(s(bool,X2))) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f845])).
fof(f845,plain,(
  ! [X0,X1,X2] : (((p(s(bool,X1)) & p(s(bool,X2))) | p(s(bool,X0))) <=> sP11(X0,X2,X1))),
  inference(definition_folding,[],[f599,f844])).
fof(f844,plain,(
  ! [X0,X2,X1] : (sP11(X0,X2,X1) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP11])])).
fof(f599,plain,(
  ! [X0,X1,X2] : (((p(s(bool,X1)) & p(s(bool,X2))) | p(s(bool,X0))) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0)))))),
  inference(rectify,[],[f340])).
fof(f340,axiom,(
  ! [X6,X19,X45] : (((p(s(bool,X19)) & p(s(bool,X45))) | p(s(bool,X6))) <=> ((p(s(bool,X19)) | p(s(bool,X6))) & (p(s(bool,X45)) | p(s(bool,X6)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.bool.RIGHT_OR_OVER_AND')).
fof(f97083,plain,(
  ( ! [X39,X38] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f96979,f1161])).
fof(f96979,plain,(
  ( ! [X39,X38] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f2072,f1152])).
fof(f82049,plain,(
  ( ! [X41,X40] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) | $spl596),
  inference(cnf_transformation,[],[f82049_D])).
fof(f82049_D,plain,(
  ( ! [X41,X40] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) <=> ~$spl596),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl596])])).
fof(f97043,plain,(
  ( ! [X45,X43,X44,X42] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f96940,f1161])).
fof(f96940,plain,(
  ( ! [X45,X43,X44,X42] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f2072,f1297])).
fof(f97042,plain,(
  ( ! [X41,X40] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f96939,f1161])).
fof(f96939,plain,(
  ( ! [X41,X40] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f2072,f1152])).
fof(f96898,plain,(
  ( ! [X11] : (p(s(bool,X11)) | sP13('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2072,f20931])).
fof(f20931,plain,(
  ( ! [X269,X268,X270] : (~sP11(X268,X269,X270) | p(s(bool,X269)) | sP13('F_0',X268)) ) | $spl17),
  inference(resolution,[],[f11246,f1266])).
fof(f1266,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | ~sP11(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f950])).
fof(f950,plain,(
  ! [X0,X1,X2] : ((~sP11(X0,X1,X2) | ((p(s(bool,X2)) | p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0))))) & ((~p(s(bool,X2)) & ~p(s(bool,X0))) | (~p(s(bool,X1)) & ~p(s(bool,X0))) | sP11(X0,X1,X2)))),
  inference(rectify,[],[f949])).
fof(f949,plain,(
  ! [X0,X2,X1] : ((~sP11(X0,X2,X1) | ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (~p(s(bool,X2)) & ~p(s(bool,X0))) | sP11(X0,X2,X1)))),
  inference(flattening,[],[f948])).
fof(f948,plain,(
  ! [X0,X2,X1] : ((~sP11(X0,X2,X1) | ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (~p(s(bool,X2)) & ~p(s(bool,X0)))) | sP11(X0,X2,X1)))),
  inference(nnf_transformation,[],[f844])).
fof(f96895,plain,(
  ( ! [X8] : (p(s(bool,X8)) | sP13('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2072,f20928])).
fof(f20928,plain,(
  ( ! [X261,X259,X260] : (~sP11(X259,X261,X260) | p(s(bool,X260)) | sP13('F_0',X259)) ) | $spl17),
  inference(resolution,[],[f11246,f1265])).
fof(f1265,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X2)) | ~sP11(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f950])).
fof(f96894,plain,(
  ( ! [X7] : (p(s(bool,X7)) | sP13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),'F_0')) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2072,f20613])).
fof(f20613,plain,(
  ( ! [X269,X268,X270] : (~sP11(X268,X269,X270) | p(s(bool,X269)) | sP13(X268,'F_0')) ) | $spl17),
  inference(resolution,[],[f11245,f1266])).
fof(f96891,plain,(
  ( ! [X4] : (p(s(bool,X4)) | sP13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),'F_0')) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2072,f20610])).
fof(f20610,plain,(
  ( ! [X261,X259,X260] : (~sP11(X259,X261,X260) | p(s(bool,X260)) | sP13(X259,'F_0')) ) | $spl17),
  inference(resolution,[],[f11245,f1265])).
fof(f81512,plain,(
  ( ! [X39,X38] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) | $spl594),
  inference(cnf_transformation,[],[f81512_D])).
fof(f81512_D,plain,(
  ( ! [X39,X38] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) <=> ~$spl594),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl594])])).
fof(f96872,plain,(
  ( ! [X43,X41,X42,X40] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f96768,f1161])).
fof(f96768,plain,(
  ( ! [X43,X41,X42,X40] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f2061,f1297])).
fof(f2061,plain,(
  ( ! [X173,X174] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X173,X174)) ) | $spl2),
  inference(resolution,[],[f1546,f1256])).
fof(f1256,plain,(
  ( ! [X2,X0,X1] : (sP10(X2,X1,X0) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f945])).
fof(f945,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X0)) | p(s(bool,X1))) & ~p(s(bool,X2))) | sP10(X2,X1,X0)) & (~sP10(X2,X1,X0) | (~p(s(bool,X0)) & ~p(s(bool,X1))) | p(s(bool,X2))))),
  inference(flattening,[],[f944])).
fof(f944,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X0)) | p(s(bool,X1))) & ~p(s(bool,X2))) | sP10(X2,X1,X0)) & (~sP10(X2,X1,X0) | ((~p(s(bool,X0)) & ~p(s(bool,X1))) | p(s(bool,X2)))))),
  inference(nnf_transformation,[],[f843])).
fof(f843,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X0)) & ~p(s(bool,X1))) | p(s(bool,X2))) <=> sP10(X2,X1,X0))),
  inference(definition_folding,[],[f792,f842])).
fof(f842,plain,(
  ! [X2,X1,X0] : (sP10(X2,X1,X0) <=> ((~p(s(bool,X0)) | p(s(bool,X2))) & (~p(s(bool,X1)) | p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP10])])).
fof(f792,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X0)) & ~p(s(bool,X1))) | p(s(bool,X2))) <=> ((~p(s(bool,X0)) | p(s(bool,X2))) & (~p(s(bool,X1)) | p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f597])).
fof(f597,plain,(
  ! [X0,X1,X2] : (((p(s(bool,X0)) | p(s(bool,X1))) => p(s(bool,X2))) <=> ((p(s(bool,X0)) => p(s(bool,X2))) & (p(s(bool,X1)) => p(s(bool,X2)))))),
  inference(rectify,[],[f501])).
fof(f501,axiom,(
  ! [X36,X37,X75] : (((p(s(bool,X36)) | p(s(bool,X37))) => p(s(bool,X75))) <=> ((p(s(bool,X36)) => p(s(bool,X75))) & (p(s(bool,X37)) => p(s(bool,X75)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.bool.DISJ_IMP_THM')).
fof(f96871,plain,(
  ( ! [X39,X38] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f96767,f1161])).
fof(f96767,plain,(
  ( ! [X39,X38] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f2061,f1152])).
fof(f81470,plain,(
  ( ! [X41,X40] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) | $spl592),
  inference(cnf_transformation,[],[f81470_D])).
fof(f81470_D,plain,(
  ( ! [X41,X40] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) <=> ~$spl592),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl592])])).
fof(f96831,plain,(
  ( ! [X45,X43,X44,X42] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f96728,f1161])).
fof(f96728,plain,(
  ( ! [X45,X43,X44,X42] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f2061,f1297])).
fof(f96830,plain,(
  ( ! [X41,X40] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f96727,f1161])).
fof(f96727,plain,(
  ( ! [X41,X40] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f2061,f1152])).
fof(f96682,plain,(
  ( ! [X7] : (~p(s(bool,X7)) | sP13('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2061,f20919])).
fof(f20919,plain,(
  ( ! [X233,X234,X232] : (~sP10(X232,X233,X234) | ~p(s(bool,X233)) | sP13('F_0',X232)) ) | $spl17),
  inference(resolution,[],[f11246,f1250])).
fof(f1250,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | ~sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f943])).
fof(f943,plain,(
  ! [X0,X1,X2] : ((~sP10(X0,X1,X2) | ((~p(s(bool,X2)) | p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0))))) & ((p(s(bool,X2)) & ~p(s(bool,X0))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | sP10(X0,X1,X2)))),
  inference(rectify,[],[f942])).
fof(f942,plain,(
  ! [X2,X1,X0] : ((~sP10(X2,X1,X0) | ((~p(s(bool,X0)) | p(s(bool,X2))) & (~p(s(bool,X1)) | p(s(bool,X2))))) & ((p(s(bool,X0)) & ~p(s(bool,X2))) | (p(s(bool,X1)) & ~p(s(bool,X2))) | sP10(X2,X1,X0)))),
  inference(flattening,[],[f941])).
fof(f941,plain,(
  ! [X2,X1,X0] : ((~sP10(X2,X1,X0) | ((~p(s(bool,X0)) | p(s(bool,X2))) & (~p(s(bool,X1)) | p(s(bool,X2))))) & (((p(s(bool,X0)) & ~p(s(bool,X2))) | (p(s(bool,X1)) & ~p(s(bool,X2)))) | sP10(X2,X1,X0)))),
  inference(nnf_transformation,[],[f842])).
fof(f96681,plain,(
  ( ! [X6] : (~p(s(bool,X6)) | sP13('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2061,f20918])).
fof(f20918,plain,(
  ( ! [X231,X229,X230] : (~sP10(X229,X231,X230) | ~p(s(bool,X230)) | sP13('F_0',X229)) ) | $spl17),
  inference(resolution,[],[f11246,f1249])).
fof(f1249,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X2)) | ~sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f943])).
fof(f96680,plain,(
  ( ! [X5] : (~p(s(bool,X5)) | sP13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),'F_0')) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2061,f20601])).
fof(f20601,plain,(
  ( ! [X233,X234,X232] : (~sP10(X232,X233,X234) | ~p(s(bool,X233)) | sP13(X232,'F_0')) ) | $spl17),
  inference(resolution,[],[f11245,f1250])).
fof(f96679,plain,(
  ( ! [X4] : (~p(s(bool,X4)) | sP13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),'F_0')) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2061,f20600])).
fof(f20600,plain,(
  ( ! [X231,X229,X230] : (~sP10(X229,X231,X230) | ~p(s(bool,X230)) | sP13(X229,'F_0')) ) | $spl17),
  inference(resolution,[],[f11245,f1249])).
fof(f6566,plain,(
  ( ! [X364,X365] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X364))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X365)))) ) | $spl130),
  inference(cnf_transformation,[],[f6566_D])).
fof(f6566_D,plain,(
  ( ! [X364,X365] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X364))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X365)))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f96636,plain,(
  ( ! [X893,X892,X891] : (sP12(X891,X892,X893) | sP13(X892,'F_0')) ) | $spl700),
  inference(cnf_transformation,[],[f96636_D])).
fof(f96636_D,plain,(
  ( ! [X893,X892,X891] : (sP12(X891,X892,X893) | sP13(X892,'F_0')) ) <=> ~$spl700),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl700])])).
fof(f96481,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP12(X896,X897,X898) | sP13(X897,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f52811,f1496])).
fof(f1496,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f1070])).
fof(f1070,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f749])).
fof(f749,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f405])).
fof(f405,axiom,(
  ! [X16,X23] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))) <=> p(s(bool,'F_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_eq|split|5')).
fof(f52811,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | sP12(X2,X0,X3) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f48034,f17461])).
fof(f17461,plain,(
  ( ! [X202] : (~sP13('T_0',X202) | ~p(s(bool,X202))) ) | $spl22),
  inference(resolution,[],[f1837,f1328])).
fof(f1328,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | ~p(s(bool,X1)) | ~sP13(X0,X1)) )),
  inference(cnf_transformation,[],[f981])).
fof(f48034,plain,(
  ( ! [X397,X395,X396,X394] : (sP13('T_0',X394) | sP13(X395,X394) | sP12(X396,X395,X397)) ) | $spl22),
  inference(resolution,[],[f21284,f1281])).
fof(f21284,plain,(
  ( ! [X310,X311] : (sP13('T_0',X310) | sP13(X311,X310) | p(s(bool,X311))) ) | $spl22),
  inference(resolution,[],[f17463,f1332])).
fof(f17463,plain,(
  ( ! [X204] : (p(s(bool,X204)) | sP13('T_0',X204)) ) | $spl22),
  inference(resolution,[],[f1837,f1329])).
fof(f96480,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP12(X891,X892,X893) | sP13(X892,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f52811,f1494])).
fof(f1494,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f1069])).
fof(f1069,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f748])).
fof(f748,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f404])).
fof(f404,axiom,(
  ! [X16,X23] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))) <=> p(s(bool,'F_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_eq|split|4')).
fof(f96634,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP12(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X1,X3)) ) | $spl698),
  inference(cnf_transformation,[],[f96634_D])).
fof(f96634_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP12(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X1,X3)) ) <=> ~$spl698),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl698])])).
fof(f96451,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP12(X712,X713,X714) | sP13(X713,X715) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f52811,f1535])).
fof(f96339,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP12(X49,X50,X51) | sP13(X50,X52) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f52811,f1087])).
fof(f96337,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP12(X35,X36,X37) | sP13(X36,X38) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f52811,f1086])).
fof(f96335,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP12(X21,X22,X23) | sP13(X22,X24) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f52811,f1085])).
fof(f96334,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP12(X14,X15,X16) | sP13(X15,X17) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f52811,f1083])).
fof(f96332,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP12(X0,X1,X2) | sP13(X1,X3) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f52811,f1081])).
fof(f81294,plain,(
  ( ! [X39,X38] : (sP8(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl586),
  inference(cnf_transformation,[],[f81294_D])).
fof(f81294_D,plain,(
  ( ! [X39,X38] : (sP8(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl586),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl586])])).
fof(f96317,plain,(
  ( ! [X43,X41,X42,X40] : (sP8(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f96211,f1161])).
fof(f96211,plain,(
  ( ! [X43,X41,X42,X40] : (sP8(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f2049,f1297])).
fof(f2049,plain,(
  ( ! [X149,X150] : (sP8(X149,X150,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1240])).
fof(f1240,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f938])).
fof(f96316,plain,(
  ( ! [X39,X38] : (sP8(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f96210,f1161])).
fof(f96210,plain,(
  ( ! [X39,X38] : (sP8(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f2049,f1152])).
fof(f81252,plain,(
  ( ! [X41,X40] : (sP8(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl584),
  inference(cnf_transformation,[],[f81252_D])).
fof(f81252_D,plain,(
  ( ! [X41,X40] : (sP8(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl584),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl584])])).
fof(f96276,plain,(
  ( ! [X45,X43,X44,X42] : (sP8(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f96171,f1161])).
fof(f96171,plain,(
  ( ! [X45,X43,X44,X42] : (sP8(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f2049,f1297])).
fof(f96275,plain,(
  ( ! [X41,X40] : (sP8(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f96170,f1161])).
fof(f96170,plain,(
  ( ! [X41,X40] : (sP8(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f2049,f1152])).
fof(f96088,plain,(
  ( ! [X893,X892,X891] : (sP11(X891,X892,X893) | sP13(X891,'F_0')) ) | $spl696),
  inference(cnf_transformation,[],[f96088_D])).
fof(f96088_D,plain,(
  ( ! [X893,X892,X891] : (sP11(X891,X892,X893) | sP13(X891,'F_0')) ) <=> ~$spl696),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl696])])).
fof(f95933,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP11(X896,X897,X898) | sP13(X896,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f52500,f1496])).
fof(f52500,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | sP11(X0,X2,X3) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f48027,f17461])).
fof(f48027,plain,(
  ( ! [X366,X368,X367,X369] : (sP13('T_0',X366) | sP13(X367,X366) | sP11(X367,X368,X369)) ) | $spl22),
  inference(resolution,[],[f21284,f1272])).
fof(f95932,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP11(X891,X892,X893) | sP13(X891,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f52500,f1494])).
fof(f96086,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP11(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X0,X3)) ) | $spl694),
  inference(cnf_transformation,[],[f96086_D])).
fof(f96086_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP11(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X0,X3)) ) <=> ~$spl694),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl694])])).
fof(f95903,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP11(X712,X713,X714) | sP13(X712,X715) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f52500,f1535])).
fof(f95791,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP11(X49,X50,X51) | sP13(X49,X52) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f52500,f1087])).
fof(f95789,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP11(X35,X36,X37) | sP13(X35,X38) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f52500,f1086])).
fof(f95787,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP11(X21,X22,X23) | sP13(X21,X24) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f52500,f1085])).
fof(f95786,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP11(X14,X15,X16) | sP13(X14,X17) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f52500,f1083])).
fof(f95784,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP11(X0,X1,X2) | sP13(X0,X3) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f52500,f1081])).
fof(f81087,plain,(
  ( ! [X39,X38] : (sP6(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39)) ) | $spl582),
  inference(cnf_transformation,[],[f81087_D])).
fof(f81087_D,plain,(
  ( ! [X39,X38] : (sP6(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39)) ) <=> ~$spl582),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl582])])).
fof(f95769,plain,(
  ( ! [X43,X41,X42,X40] : (sP6(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f95664,f1161])).
fof(f95664,plain,(
  ( ! [X43,X41,X42,X40] : (sP6(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f2033,f1297])).
fof(f2033,plain,(
  ( ! [X118,X117] : (sP6(X117,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X118)) ) | $spl2),
  inference(resolution,[],[f1546,f1224])).
fof(f1224,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f931])).
fof(f95768,plain,(
  ( ! [X39,X38] : (sP6(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f95663,f1161])).
fof(f95663,plain,(
  ( ! [X39,X38] : (sP6(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f2033,f1152])).
fof(f81045,plain,(
  ( ! [X41,X40] : (sP6(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) | $spl580),
  inference(cnf_transformation,[],[f81045_D])).
fof(f81045_D,plain,(
  ( ! [X41,X40] : (sP6(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) <=> ~$spl580),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl580])])).
fof(f95728,plain,(
  ( ! [X45,X43,X44,X42] : (sP6(X42,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f95624,f1161])).
fof(f95624,plain,(
  ( ! [X45,X43,X44,X42] : (sP6(X42,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f2033,f1297])).
fof(f95727,plain,(
  ( ! [X41,X40] : (sP6(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f95623,f1161])).
fof(f95623,plain,(
  ( ! [X41,X40] : (sP6(X40,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f2033,f1152])).
fof(f95541,plain,(
  ( ! [X893,X892,X891] : (sP10(X891,X892,X893) | sP13(X891,'F_0')) ) | $spl692),
  inference(cnf_transformation,[],[f95541_D])).
fof(f95541_D,plain,(
  ( ! [X893,X892,X891] : (sP10(X891,X892,X893) | sP13(X891,'F_0')) ) <=> ~$spl692),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl692])])).
fof(f95386,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP10(X896,X897,X898) | sP13(X896,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f52450,f1496])).
fof(f52450,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | sP10(X0,X2,X3) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f48016,f17461])).
fof(f48016,plain,(
  ( ! [X325,X323,X324,X322] : (sP13('T_0',X322) | sP13(X323,X322) | sP10(X323,X324,X325)) ) | $spl22),
  inference(resolution,[],[f21284,f1256])).
fof(f95385,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP10(X891,X892,X893) | sP13(X891,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f52450,f1494])).
fof(f95539,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP10(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X0,X3)) ) | $spl690),
  inference(cnf_transformation,[],[f95539_D])).
fof(f95539_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP10(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X0,X3)) ) <=> ~$spl690),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl690])])).
fof(f95356,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP10(X712,X713,X714) | sP13(X712,X715) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f52450,f1535])).
fof(f95244,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP10(X49,X50,X51) | sP13(X49,X52) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f52450,f1087])).
fof(f95242,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP10(X35,X36,X37) | sP13(X35,X38) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f52450,f1086])).
fof(f95240,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP10(X21,X22,X23) | sP13(X21,X24) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f52450,f1085])).
fof(f95239,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP10(X14,X15,X16) | sP13(X14,X17) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f52450,f1083])).
fof(f95237,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP10(X0,X1,X2) | sP13(X0,X3) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f52450,f1081])).
fof(f80881,plain,(
  ( ! [X39,X38] : (sP6(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl578),
  inference(cnf_transformation,[],[f80881_D])).
fof(f80881_D,plain,(
  ( ! [X39,X38] : (sP6(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl578),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl578])])).
fof(f95222,plain,(
  ( ! [X43,X41,X42,X40] : (sP6(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f95117,f1161])).
fof(f95117,plain,(
  ( ! [X43,X41,X42,X40] : (sP6(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f2032,f1297])).
fof(f2032,plain,(
  ( ! [X116,X115] : (sP6(X115,X116,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1223])).
fof(f1223,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f931])).
fof(f95221,plain,(
  ( ! [X39,X38] : (sP6(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f95116,f1161])).
fof(f95116,plain,(
  ( ! [X39,X38] : (sP6(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f2032,f1152])).
fof(f80839,plain,(
  ( ! [X41,X40] : (sP6(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl576),
  inference(cnf_transformation,[],[f80839_D])).
fof(f80839_D,plain,(
  ( ! [X41,X40] : (sP6(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl576),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl576])])).
fof(f95181,plain,(
  ( ! [X45,X43,X44,X42] : (sP6(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f95077,f1161])).
fof(f95077,plain,(
  ( ! [X45,X43,X44,X42] : (sP6(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f2032,f1297])).
fof(f95180,plain,(
  ( ! [X41,X40] : (sP6(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f95076,f1161])).
fof(f95076,plain,(
  ( ! [X41,X40] : (sP6(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f2032,f1152])).
fof(f94994,plain,(
  ( ! [X893,X892,X891] : (sP8(X891,X892,X893) | sP13(X893,'F_0')) ) | $spl688),
  inference(cnf_transformation,[],[f94994_D])).
fof(f94994_D,plain,(
  ( ! [X893,X892,X891] : (sP8(X891,X892,X893) | sP13(X893,'F_0')) ) <=> ~$spl688),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl688])])).
fof(f94839,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP8(X896,X897,X898) | sP13(X898,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f52404,f1496])).
fof(f52404,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | sP8(X2,X3,X0) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f48004,f17461])).
fof(f48004,plain,(
  ( ! [X277,X275,X276,X274] : (sP13('T_0',X274) | sP13(X275,X274) | sP8(X276,X277,X275)) ) | $spl22),
  inference(resolution,[],[f21284,f1240])).
fof(f94838,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP8(X891,X892,X893) | sP13(X893,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f52404,f1494])).
fof(f94992,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP8(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X2,X3)) ) | $spl686),
  inference(cnf_transformation,[],[f94992_D])).
fof(f94992_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP8(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X2,X3)) ) <=> ~$spl686),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl686])])).
fof(f94809,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP8(X712,X713,X714) | sP13(X714,X715) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f52404,f1535])).
fof(f94697,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP8(X49,X50,X51) | sP13(X51,X52) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f52404,f1087])).
fof(f94695,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP8(X35,X36,X37) | sP13(X37,X38) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f52404,f1086])).
fof(f94693,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP8(X21,X22,X23) | sP13(X23,X24) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f52404,f1085])).
fof(f94692,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP8(X14,X15,X16) | sP13(X16,X17) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f52404,f1083])).
fof(f94690,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP8(X0,X1,X2) | sP13(X2,X3) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f52404,f1081])).
fof(f80675,plain,(
  ( ! [X39,X38] : (sP4(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39)) ) | $spl574),
  inference(cnf_transformation,[],[f80675_D])).
fof(f80675_D,plain,(
  ( ! [X39,X38] : (sP4(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39)) ) <=> ~$spl574),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl574])])).
fof(f94675,plain,(
  ( ! [X43,X41,X42,X40] : (sP4(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f94570,f1161])).
fof(f94570,plain,(
  ( ! [X43,X41,X42,X40] : (sP4(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f2019,f1297])).
fof(f2019,plain,(
  ( ! [X90,X89] : (sP4(X89,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X90)) ) | $spl2),
  inference(resolution,[],[f1546,f1207])).
fof(f1207,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f923])).
fof(f94674,plain,(
  ( ! [X39,X38] : (sP4(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f94569,f1161])).
fof(f94569,plain,(
  ( ! [X39,X38] : (sP4(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f2019,f1152])).
fof(f80633,plain,(
  ( ! [X41,X40] : (sP4(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) | $spl572),
  inference(cnf_transformation,[],[f80633_D])).
fof(f80633_D,plain,(
  ( ! [X41,X40] : (sP4(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) <=> ~$spl572),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl572])])).
fof(f94634,plain,(
  ( ! [X45,X43,X44,X42] : (sP4(X42,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f94530,f1161])).
fof(f94530,plain,(
  ( ! [X45,X43,X44,X42] : (sP4(X42,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f2019,f1297])).
fof(f94633,plain,(
  ( ! [X41,X40] : (sP4(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f94529,f1161])).
fof(f94529,plain,(
  ( ! [X41,X40] : (sP4(X40,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f2019,f1152])).
fof(f94447,plain,(
  ( ! [X893,X892,X891] : (sP6(X891,X892,X893) | sP13(X892,'F_0')) ) | $spl684),
  inference(cnf_transformation,[],[f94447_D])).
fof(f94447_D,plain,(
  ( ! [X893,X892,X891] : (sP6(X891,X892,X893) | sP13(X892,'F_0')) ) <=> ~$spl684),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl684])])).
fof(f94292,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP6(X896,X897,X898) | sP13(X897,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f52357,f1496])).
fof(f52357,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | sP6(X2,X0,X3) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47988,f17461])).
fof(f47988,plain,(
  ( ! [X212,X210,X213,X211] : (sP13('T_0',X210) | sP13(X211,X210) | sP6(X212,X211,X213)) ) | $spl22),
  inference(resolution,[],[f21284,f1224])).
fof(f94291,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP6(X891,X892,X893) | sP13(X892,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f52357,f1494])).
fof(f94445,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X1,X3)) ) | $spl682),
  inference(cnf_transformation,[],[f94445_D])).
fof(f94445_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X1,X3)) ) <=> ~$spl682),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl682])])).
fof(f94262,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP6(X712,X713,X714) | sP13(X713,X715) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f52357,f1535])).
fof(f94150,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP6(X49,X50,X51) | sP13(X50,X52) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f52357,f1087])).
fof(f94148,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP6(X35,X36,X37) | sP13(X36,X38) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f52357,f1086])).
fof(f94146,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP6(X21,X22,X23) | sP13(X22,X24) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f52357,f1085])).
fof(f94145,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP6(X14,X15,X16) | sP13(X15,X17) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f52357,f1083])).
fof(f94143,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | sP13(X1,X3) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f52357,f1081])).
fof(f80469,plain,(
  ( ! [X39,X38] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) | $spl570),
  inference(cnf_transformation,[],[f80469_D])).
fof(f80469_D,plain,(
  ( ! [X39,X38] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39)) ) <=> ~$spl570),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl570])])).
fof(f94128,plain,(
  ( ! [X43,X41,X42,X40] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f94021,f1161])).
fof(f94021,plain,(
  ( ! [X43,X41,X42,X40] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f1999,f1297])).
fof(f1999,plain,(
  ( ! [X59,X60] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X59,X60)) ) | $spl2),
  inference(resolution,[],[f1546,f1106])).
fof(f1106,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f865])).
fof(f865,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP0(X0,X1,X2)))),
  inference(flattening,[],[f864])).
fof(f864,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP0(X0,X1,X2)))),
  inference(nnf_transformation,[],[f828])).
fof(f828,plain,(
  ! [X0,X1,X2] : (sP0(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f94127,plain,(
  ( ! [X39,X38] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f94020,f1161])).
fof(f94020,plain,(
  ( ! [X39,X38] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f1999,f1152])).
fof(f80427,plain,(
  ( ! [X41,X40] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) | $spl568),
  inference(cnf_transformation,[],[f80427_D])).
fof(f80427_D,plain,(
  ( ! [X41,X40] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41)) ) <=> ~$spl568),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl568])])).
fof(f94087,plain,(
  ( ! [X45,X43,X44,X42] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f93981,f1161])).
fof(f93981,plain,(
  ( ! [X45,X43,X44,X42] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f1999,f1297])).
fof(f94086,plain,(
  ( ! [X41,X40] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f93980,f1161])).
fof(f93980,plain,(
  ( ! [X41,X40] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f1999,f1152])).
fof(f93899,plain,(
  ( ! [X893,X892,X891] : (sP6(X891,X892,X893) | sP13(X893,'F_0')) ) | $spl680),
  inference(cnf_transformation,[],[f93899_D])).
fof(f93899_D,plain,(
  ( ! [X893,X892,X891] : (sP6(X891,X892,X893) | sP13(X893,'F_0')) ) <=> ~$spl680),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl680])])).
fof(f93744,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP6(X896,X897,X898) | sP13(X898,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f52309,f1496])).
fof(f52309,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | sP6(X2,X3,X0) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47987,f17461])).
fof(f47987,plain,(
  ( ! [X208,X206,X209,X207] : (sP13('T_0',X206) | sP13(X207,X206) | sP6(X208,X209,X207)) ) | $spl22),
  inference(resolution,[],[f21284,f1223])).
fof(f93743,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP6(X891,X892,X893) | sP13(X893,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f52309,f1494])).
fof(f93897,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X2,X3)) ) | $spl678),
  inference(cnf_transformation,[],[f93897_D])).
fof(f93897_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X2,X3)) ) <=> ~$spl678),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl678])])).
fof(f93714,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP6(X712,X713,X714) | sP13(X714,X715) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f52309,f1535])).
fof(f93602,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP6(X49,X50,X51) | sP13(X51,X52) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f52309,f1087])).
fof(f93600,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP6(X35,X36,X37) | sP13(X37,X38) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f52309,f1086])).
fof(f93598,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP6(X21,X22,X23) | sP13(X23,X24) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f52309,f1085])).
fof(f93597,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP6(X14,X15,X16) | sP13(X16,X17) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f52309,f1083])).
fof(f93595,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | sP13(X2,X3) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f52309,f1081])).
fof(f80262,plain,(
  ( ! [X39,X38] : (sP0(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39)) ) | $spl566),
  inference(cnf_transformation,[],[f80262_D])).
fof(f80262_D,plain,(
  ( ! [X39,X38] : (sP0(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39)) ) <=> ~$spl566),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl566])])).
fof(f93580,plain,(
  ( ! [X43,X41,X42,X40] : (sP0(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f93473,f1161])).
fof(f93473,plain,(
  ( ! [X43,X41,X42,X40] : (sP0(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f1998,f1297])).
fof(f1998,plain,(
  ( ! [X57,X58] : (sP0(X57,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X58)) ) | $spl2),
  inference(resolution,[],[f1546,f1105])).
fof(f1105,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f865])).
fof(f93579,plain,(
  ( ! [X39,X38] : (sP0(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f93472,f1161])).
fof(f93472,plain,(
  ( ! [X39,X38] : (sP0(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f1998,f1152])).
fof(f80220,plain,(
  ( ! [X41,X40] : (sP0(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) | $spl564),
  inference(cnf_transformation,[],[f80220_D])).
fof(f80220_D,plain,(
  ( ! [X41,X40] : (sP0(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41)) ) <=> ~$spl564),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl564])])).
fof(f93539,plain,(
  ( ! [X45,X43,X44,X42] : (sP0(X42,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f93433,f1161])).
fof(f93433,plain,(
  ( ! [X45,X43,X44,X42] : (sP0(X42,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f1998,f1297])).
fof(f93538,plain,(
  ( ! [X41,X40] : (sP0(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f93432,f1161])).
fof(f93432,plain,(
  ( ! [X41,X40] : (sP0(X40,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f1998,f1152])).
fof(f93351,plain,(
  ( ! [X893,X892,X891] : (sP4(X891,X892,X893) | sP13(X892,'F_0')) ) | $spl676),
  inference(cnf_transformation,[],[f93351_D])).
fof(f93351_D,plain,(
  ( ! [X893,X892,X891] : (sP4(X891,X892,X893) | sP13(X892,'F_0')) ) <=> ~$spl676),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl676])])).
fof(f93196,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP4(X896,X897,X898) | sP13(X897,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51978,f1496])).
fof(f51978,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | sP4(X2,X0,X3) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47974,f17461])).
fof(f47974,plain,(
  ( ! [X156,X154,X157,X155] : (sP13('T_0',X154) | sP13(X155,X154) | sP4(X156,X155,X157)) ) | $spl22),
  inference(resolution,[],[f21284,f1207])).
fof(f93195,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP4(X891,X892,X893) | sP13(X892,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51978,f1494])).
fof(f93349,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP4(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X1,X3)) ) | $spl674),
  inference(cnf_transformation,[],[f93349_D])).
fof(f93349_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP4(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X1,X3)) ) <=> ~$spl674),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl674])])).
fof(f93166,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP4(X712,X713,X714) | sP13(X713,X715) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51978,f1535])).
fof(f93054,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP4(X49,X50,X51) | sP13(X50,X52) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51978,f1087])).
fof(f93052,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP4(X35,X36,X37) | sP13(X36,X38) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51978,f1086])).
fof(f93050,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP4(X21,X22,X23) | sP13(X22,X24) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51978,f1085])).
fof(f93049,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP4(X14,X15,X16) | sP13(X15,X17) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51978,f1083])).
fof(f93047,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP4(X0,X1,X2) | sP13(X1,X3) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51978,f1081])).
fof(f80055,plain,(
  ( ! [X39,X38] : (sP0(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl562),
  inference(cnf_transformation,[],[f80055_D])).
fof(f80055_D,plain,(
  ( ! [X39,X38] : (sP0(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl562),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl562])])).
fof(f93032,plain,(
  ( ! [X43,X41,X42,X40] : (sP0(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f92925,f1161])).
fof(f92925,plain,(
  ( ! [X43,X41,X42,X40] : (sP0(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f1997,f1297])).
fof(f1997,plain,(
  ( ! [X56,X55] : (sP0(X55,X56,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1104])).
fof(f1104,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f865])).
fof(f93031,plain,(
  ( ! [X39,X38] : (sP0(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f92924,f1161])).
fof(f92924,plain,(
  ( ! [X39,X38] : (sP0(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f1997,f1152])).
fof(f80013,plain,(
  ( ! [X41,X40] : (sP0(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl560),
  inference(cnf_transformation,[],[f80013_D])).
fof(f80013_D,plain,(
  ( ! [X41,X40] : (sP0(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl560),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl560])])).
fof(f92991,plain,(
  ( ! [X45,X43,X44,X42] : (sP0(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f92885,f1161])).
fof(f92885,plain,(
  ( ! [X45,X43,X44,X42] : (sP0(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f1997,f1297])).
fof(f92990,plain,(
  ( ! [X41,X40] : (sP0(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f92884,f1161])).
fof(f92884,plain,(
  ( ! [X41,X40] : (sP0(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f1997,f1152])).
fof(f92803,plain,(
  ( ! [X893,X892,X891] : (sP0(X891,X892,X893) | sP13(X891,'F_0')) ) | $spl672),
  inference(cnf_transformation,[],[f92803_D])).
fof(f92803_D,plain,(
  ( ! [X893,X892,X891] : (sP0(X891,X892,X893) | sP13(X891,'F_0')) ) <=> ~$spl672),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl672])])).
fof(f92648,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP0(X896,X897,X898) | sP13(X896,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51930,f1496])).
fof(f51930,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | sP0(X0,X2,X3) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47954,f17461])).
fof(f47954,plain,(
  ( ! [X87,X85,X86,X84] : (sP13('T_0',X84) | sP13(X85,X84) | sP0(X85,X86,X87)) ) | $spl22),
  inference(resolution,[],[f21284,f1106])).
fof(f92647,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP0(X891,X892,X893) | sP13(X891,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51930,f1494])).
fof(f92801,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X0,X3)) ) | $spl670),
  inference(cnf_transformation,[],[f92801_D])).
fof(f92801_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X0,X3)) ) <=> ~$spl670),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl670])])).
fof(f92618,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP0(X712,X713,X714) | sP13(X712,X715) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51930,f1535])).
fof(f92506,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP0(X49,X50,X51) | sP13(X49,X52) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51930,f1087])).
fof(f92504,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP0(X35,X36,X37) | sP13(X35,X38) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51930,f1086])).
fof(f92502,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP0(X21,X22,X23) | sP13(X21,X24) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51930,f1085])).
fof(f92501,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP0(X14,X15,X16) | sP13(X14,X17) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51930,f1083])).
fof(f92499,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | sP13(X0,X3) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51930,f1081])).
fof(f79848,plain,(
  ( ! [X39,X38] : (sP1(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl558),
  inference(cnf_transformation,[],[f79848_D])).
fof(f79848_D,plain,(
  ( ! [X39,X38] : (sP1(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl558),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl558])])).
fof(f92484,plain,(
  ( ! [X43,X41,X42,X40] : (sP1(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f92378,f1161])).
fof(f92378,plain,(
  ( ! [X43,X41,X42,X40] : (sP1(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f1996,f1297])).
fof(f1996,plain,(
  ( ! [X54,X53] : (sP1(X53,X54,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1100])).
fof(f1100,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f863])).
fof(f92483,plain,(
  ( ! [X39,X38] : (sP1(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f92377,f1161])).
fof(f92377,plain,(
  ( ! [X39,X38] : (sP1(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f1996,f1152])).
fof(f79806,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl556),
  inference(cnf_transformation,[],[f79806_D])).
fof(f79806_D,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl556),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl556])])).
fof(f92443,plain,(
  ( ! [X45,X43,X44,X42] : (sP1(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f92338,f1161])).
fof(f92338,plain,(
  ( ! [X45,X43,X44,X42] : (sP1(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f1996,f1297])).
fof(f92442,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f92337,f1161])).
fof(f92337,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f1996,f1152])).
fof(f92256,plain,(
  ( ! [X893,X892,X891] : (sP0(X891,X892,X893) | sP13(X892,'F_0')) ) | $spl668),
  inference(cnf_transformation,[],[f92256_D])).
fof(f92256_D,plain,(
  ( ! [X893,X892,X891] : (sP0(X891,X892,X893) | sP13(X892,'F_0')) ) <=> ~$spl668),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl668])])).
fof(f92101,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP0(X896,X897,X898) | sP13(X897,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51883,f1496])).
fof(f51883,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | sP0(X2,X0,X3) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47953,f17461])).
fof(f47953,plain,(
  ( ! [X80,X83,X81,X82] : (sP13('T_0',X80) | sP13(X81,X80) | sP0(X82,X81,X83)) ) | $spl22),
  inference(resolution,[],[f21284,f1105])).
fof(f92100,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP0(X891,X892,X893) | sP13(X892,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51883,f1494])).
fof(f92254,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X1,X3)) ) | $spl666),
  inference(cnf_transformation,[],[f92254_D])).
fof(f92254_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X1,X3)) ) <=> ~$spl666),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl666])])).
fof(f92071,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP0(X712,X713,X714) | sP13(X713,X715) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51883,f1535])).
fof(f91959,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP0(X49,X50,X51) | sP13(X50,X52) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51883,f1087])).
fof(f91957,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP0(X35,X36,X37) | sP13(X36,X38) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51883,f1086])).
fof(f91955,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP0(X21,X22,X23) | sP13(X22,X24) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51883,f1085])).
fof(f91954,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP0(X14,X15,X16) | sP13(X15,X17) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51883,f1083])).
fof(f91952,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | sP13(X1,X3) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51883,f1081])).
fof(f79270,plain,(
  ( ! [X39,X38] : (sP2(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl552),
  inference(cnf_transformation,[],[f79270_D])).
fof(f79270_D,plain,(
  ( ! [X39,X38] : (sP2(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl552),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl552])])).
fof(f91937,plain,(
  ( ! [X43,X41,X42,X40] : (sP2(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f91831,f1161])).
fof(f91831,plain,(
  ( ! [X43,X41,X42,X40] : (sP2(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f1993,f1297])).
fof(f1993,plain,(
  ( ! [X47,X48] : (sP2(X47,X48,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1096])).
fof(f1096,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f860])).
fof(f91936,plain,(
  ( ! [X39,X38] : (sP2(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f91830,f1161])).
fof(f91830,plain,(
  ( ! [X39,X38] : (sP2(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f1993,f1152])).
fof(f79228,plain,(
  ( ! [X41,X40] : (sP2(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl550),
  inference(cnf_transformation,[],[f79228_D])).
fof(f79228_D,plain,(
  ( ! [X41,X40] : (sP2(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl550),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl550])])).
fof(f91896,plain,(
  ( ! [X45,X43,X44,X42] : (sP2(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f91791,f1161])).
fof(f91791,plain,(
  ( ! [X45,X43,X44,X42] : (sP2(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f1993,f1297])).
fof(f91895,plain,(
  ( ! [X41,X40] : (sP2(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f91790,f1161])).
fof(f91790,plain,(
  ( ! [X41,X40] : (sP2(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f1993,f1152])).
fof(f91709,plain,(
  ( ! [X893,X892,X891] : (sP0(X891,X892,X893) | sP13(X893,'F_0')) ) | $spl664),
  inference(cnf_transformation,[],[f91709_D])).
fof(f91709_D,plain,(
  ( ! [X893,X892,X891] : (sP0(X891,X892,X893) | sP13(X893,'F_0')) ) <=> ~$spl664),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl664])])).
fof(f91554,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP0(X896,X897,X898) | sP13(X898,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51836,f1496])).
fof(f51836,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | sP0(X2,X3,X0) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47952,f17461])).
fof(f47952,plain,(
  ( ! [X78,X76,X79,X77] : (sP13('T_0',X76) | sP13(X77,X76) | sP0(X78,X79,X77)) ) | $spl22),
  inference(resolution,[],[f21284,f1104])).
fof(f91553,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP0(X891,X892,X893) | sP13(X893,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51836,f1494])).
fof(f91707,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X2,X3)) ) | $spl662),
  inference(cnf_transformation,[],[f91707_D])).
fof(f91707_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X2,X3)) ) <=> ~$spl662),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl662])])).
fof(f91524,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP0(X712,X713,X714) | sP13(X714,X715) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51836,f1535])).
fof(f91412,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP0(X49,X50,X51) | sP13(X51,X52) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51836,f1087])).
fof(f91410,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP0(X35,X36,X37) | sP13(X37,X38) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51836,f1086])).
fof(f91408,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP0(X21,X22,X23) | sP13(X23,X24) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51836,f1085])).
fof(f91407,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP0(X14,X15,X16) | sP13(X16,X17) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51836,f1083])).
fof(f91405,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | sP13(X2,X3) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51836,f1081])).
fof(f77859,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl542),
  inference(cnf_transformation,[],[f77859_D])).
fof(f77859_D,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl542),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl542])])).
fof(f91143,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl2),
  inference(resolution,[],[f1972,f1535])).
fof(f1972,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl2),
  inference(resolution,[],[f1546,f1307])).
fof(f1307,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f799])).
fof(f799,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(ennf_transformation,[],[f609])).
fof(f609,plain,(
  ! [X0,X1] : ~(p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f415])).
fof(f415,axiom,(
  ! [X23,X16] : ~(p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X16)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.LESS_EQ_ANTISYM')).
fof(f91031,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X23) != s(bool,X25)) ) | $spl2),
  inference(resolution,[],[f1972,f1087])).
fof(f91029,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl2),
  inference(resolution,[],[f1972,f1086])).
fof(f91027,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl2),
  inference(resolution,[],[f1972,f1085])).
fof(f91026,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X8) != s(bool,X10)) ) | $spl2),
  inference(resolution,[],[f1972,f1083])).
fof(f91024,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl2),
  inference(resolution,[],[f1972,f1081])).
fof(f90977,plain,(
  ( ! [X893,X892,X891] : (sP1(X891,X892,X893) | sP13(X893,'F_0')) ) | $spl660),
  inference(cnf_transformation,[],[f90977_D])).
fof(f90977_D,plain,(
  ( ! [X893,X892,X891] : (sP1(X891,X892,X893) | sP13(X893,'F_0')) ) <=> ~$spl660),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl660])])).
fof(f90822,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP1(X896,X897,X898) | sP13(X898,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51790,f1496])).
fof(f51790,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | sP1(X2,X3,X0) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47951,f17461])).
fof(f47951,plain,(
  ( ! [X74,X72,X75,X73] : (sP13('T_0',X72) | sP13(X73,X72) | sP1(X74,X75,X73)) ) | $spl22),
  inference(resolution,[],[f21284,f1100])).
fof(f90821,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP1(X891,X892,X893) | sP13(X893,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51790,f1494])).
fof(f90975,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP1(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X2,X3)) ) | $spl658),
  inference(cnf_transformation,[],[f90975_D])).
fof(f90975_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP1(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X2,X3)) ) <=> ~$spl658),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl658])])).
fof(f90792,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP1(X712,X713,X714) | sP13(X714,X715) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51790,f1535])).
fof(f90680,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP1(X49,X50,X51) | sP13(X51,X52) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51790,f1087])).
fof(f90678,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP1(X35,X36,X37) | sP13(X37,X38) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51790,f1086])).
fof(f90676,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP1(X21,X22,X23) | sP13(X23,X24) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51790,f1085])).
fof(f90675,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP1(X14,X15,X16) | sP13(X16,X17) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51790,f1083])).
fof(f90673,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP1(X0,X1,X2) | sP13(X2,X3) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51790,f1081])).
fof(f8406,plain,(
  ( ! [X300] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X300)) ) | $spl166),
  inference(cnf_transformation,[],[f8406_D])).
fof(f8406_D,plain,(
  ( ! [X300] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X300)) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f90638,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X26) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X28)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl48),
  inference(forward_demodulation,[],[f90553,f1529])).
fof(f1529,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f774])).
fof(f774,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f111])).
fof(f111,axiom,(
  ! [X16] : s('type.num.num',X16) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_distrib|split|1')).
fof(f90553,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X28)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl48),
  inference(superposition,[],[f1963,f1297])).
fof(f90637,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl48),
  inference(forward_demodulation,[],[f90552,f1161])).
fof(f90552,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl48),
  inference(superposition,[],[f1963,f1152])).
fof(f90373,plain,(
  ( ! [X893,X892,X891] : (sP2(X891,X892,X893) | sP13(X893,'F_0')) ) | $spl656),
  inference(cnf_transformation,[],[f90373_D])).
fof(f90373_D,plain,(
  ( ! [X893,X892,X891] : (sP2(X891,X892,X893) | sP13(X893,'F_0')) ) <=> ~$spl656),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl656])])).
fof(f90218,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP2(X896,X897,X898) | sP13(X898,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51482,f1496])).
fof(f51482,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | sP2(X2,X3,X0) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47948,f17461])).
fof(f47948,plain,(
  ( ! [X61,X62,X60,X63] : (sP13('T_0',X60) | sP13(X61,X60) | sP2(X62,X63,X61)) ) | $spl22),
  inference(resolution,[],[f21284,f1096])).
fof(f90217,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP2(X891,X892,X893) | sP13(X893,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51482,f1494])).
fof(f90371,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP2(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X2,X3)) ) | $spl654),
  inference(cnf_transformation,[],[f90371_D])).
fof(f90371_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP2(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X2,X3)) ) <=> ~$spl654),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl654])])).
fof(f90188,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP2(X712,X713,X714) | sP13(X714,X715) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51482,f1535])).
fof(f90076,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP2(X49,X50,X51) | sP13(X51,X52) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51482,f1087])).
fof(f90074,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP2(X35,X36,X37) | sP13(X37,X38) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51482,f1086])).
fof(f90072,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP2(X21,X22,X23) | sP13(X23,X24) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51482,f1085])).
fof(f90071,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP2(X14,X15,X16) | sP13(X16,X17) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51482,f1083])).
fof(f90069,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP2(X0,X1,X2) | sP13(X2,X3) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51482,f1081])).
fof(f1963,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl48),
  inference(cnf_transformation,[],[f1963_D])).
fof(f1963_D,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f90043,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58)))) ) | $spl46),
  inference(forward_demodulation,[],[f90042,f1161])).
fof(f90042,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl46),
  inference(forward_demodulation,[],[f89845,f1161])).
fof(f89845,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl46),
  inference(superposition,[],[f1959,f1520])).
fof(f90029,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X26) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X28)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f89829,f1528])).
fof(f1528,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f773])).
fof(f773,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X16] : s('type.num.num',X16) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X16)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.ADD|split|0')).
fof(f89829,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X26))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X28)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl46),
  inference(superposition,[],[f1959,f1297])).
fof(f90028,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X25))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl46),
  inference(forward_demodulation,[],[f89828,f1161])).
fof(f89828,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X25))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl46),
  inference(superposition,[],[f1959,f1152])).
fof(f89768,plain,(
  ( ! [X893,X892,X891] : (sP12(X891,X892,X893) | sP13('F_0',X892)) ) | $spl652),
  inference(cnf_transformation,[],[f89768_D])).
fof(f89768_D,plain,(
  ( ! [X893,X892,X891] : (sP12(X891,X892,X893) | sP13('F_0',X892)) ) <=> ~$spl652),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl652])])).
fof(f89613,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP12(X896,X897,X898) | sP13('F_0',X897) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51432,f1496])).
fof(f51432,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X0)) | sP12(X2,X1,X3) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47664,f17461])).
fof(f47664,plain,(
  ( ! [X397,X395,X396,X394] : (sP13('T_0',X394) | sP13(X394,X395) | sP12(X396,X395,X397)) ) | $spl22),
  inference(resolution,[],[f21283,f1281])).
fof(f21283,plain,(
  ( ! [X308,X309] : (sP13('T_0',X308) | sP13(X308,X309) | p(s(bool,X309))) ) | $spl22),
  inference(resolution,[],[f17463,f1329])).
fof(f89612,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP12(X891,X892,X893) | sP13('F_0',X892) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51432,f1494])).
fof(f89766,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP12(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X1)) ) | $spl650),
  inference(cnf_transformation,[],[f89766_D])).
fof(f89766_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP12(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X1)) ) <=> ~$spl650),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl650])])).
fof(f89583,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP12(X712,X713,X714) | sP13(X715,X713) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51432,f1535])).
fof(f89471,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP12(X49,X50,X51) | sP13(X52,X50) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51432,f1087])).
fof(f89469,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP12(X35,X36,X37) | sP13(X38,X36) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51432,f1086])).
fof(f89467,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP12(X21,X22,X23) | sP13(X24,X22) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51432,f1085])).
fof(f89466,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP12(X14,X15,X16) | sP13(X17,X15) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51432,f1083])).
fof(f89464,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP12(X0,X1,X2) | sP13(X3,X1) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51432,f1081])).
fof(f75840,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl534),
  inference(cnf_transformation,[],[f75840_D])).
fof(f75840_D,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl534),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl534])])).
fof(f89203,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl31),
  inference(resolution,[],[f1896,f1535])).
fof(f89091,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X23) != s(bool,X25)) ) | $spl31),
  inference(resolution,[],[f1896,f1087])).
fof(f89089,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl31),
  inference(resolution,[],[f1896,f1086])).
fof(f89087,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl31),
  inference(resolution,[],[f1896,f1085])).
fof(f89086,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X8) != s(bool,X10)) ) | $spl31),
  inference(resolution,[],[f1896,f1083])).
fof(f89084,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl31),
  inference(resolution,[],[f1896,f1081])).
fof(f75839,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl533),
  inference(cnf_transformation,[],[f75839_D])).
fof(f75839_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl533),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl533])])).
fof(f89082,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl31),
  inference(resolution,[],[f1896,f1352])).
fof(f75837,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl531),
  inference(cnf_transformation,[],[f75837_D])).
fof(f75837_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl531),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl531])])).
fof(f89356,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl31),
  inference(forward_demodulation,[],[f89081,f1155])).
fof(f89081,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl31),
  inference(resolution,[],[f1896,f1349])).
fof(f89037,plain,(
  ( ! [X893,X892,X891] : (sP11(X891,X892,X893) | sP13('F_0',X891)) ) | $spl648),
  inference(cnf_transformation,[],[f89037_D])).
fof(f89037_D,plain,(
  ( ! [X893,X892,X891] : (sP11(X891,X892,X893) | sP13('F_0',X891)) ) <=> ~$spl648),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl648])])).
fof(f88882,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP11(X896,X897,X898) | sP13('F_0',X896) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51382,f1496])).
fof(f51382,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X0)) | sP11(X1,X2,X3) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47657,f17461])).
fof(f47657,plain,(
  ( ! [X366,X368,X367,X369] : (sP13('T_0',X366) | sP13(X366,X367) | sP11(X367,X368,X369)) ) | $spl22),
  inference(resolution,[],[f21283,f1272])).
fof(f88881,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP11(X891,X892,X893) | sP13('F_0',X891) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51382,f1494])).
fof(f89035,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP11(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X0)) ) | $spl646),
  inference(cnf_transformation,[],[f89035_D])).
fof(f89035_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP11(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X0)) ) <=> ~$spl646),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl646])])).
fof(f88852,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP11(X712,X713,X714) | sP13(X715,X712) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51382,f1535])).
fof(f88740,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP11(X49,X50,X51) | sP13(X52,X49) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51382,f1087])).
fof(f88738,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP11(X35,X36,X37) | sP13(X38,X35) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51382,f1086])).
fof(f88736,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP11(X21,X22,X23) | sP13(X24,X21) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51382,f1085])).
fof(f88735,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP11(X14,X15,X16) | sP13(X17,X14) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51382,f1083])).
fof(f88733,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP11(X0,X1,X2) | sP13(X3,X0) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51382,f1081])).
fof(f88694,plain,(
  ( ! [X893,X892,X891] : (sP10(X891,X892,X893) | sP13('F_0',X891)) ) | $spl644),
  inference(cnf_transformation,[],[f88694_D])).
fof(f88694_D,plain,(
  ( ! [X893,X892,X891] : (sP10(X891,X892,X893) | sP13('F_0',X891)) ) <=> ~$spl644),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl644])])).
fof(f88539,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP10(X896,X897,X898) | sP13('F_0',X896) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51332,f1496])).
fof(f51332,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X0)) | sP10(X1,X2,X3) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47646,f17461])).
fof(f47646,plain,(
  ( ! [X325,X323,X324,X322] : (sP13('T_0',X322) | sP13(X322,X323) | sP10(X323,X324,X325)) ) | $spl22),
  inference(resolution,[],[f21283,f1256])).
fof(f88538,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP10(X891,X892,X893) | sP13('F_0',X891) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51332,f1494])).
fof(f88692,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP10(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X0)) ) | $spl642),
  inference(cnf_transformation,[],[f88692_D])).
fof(f88692_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP10(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X0)) ) <=> ~$spl642),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl642])])).
fof(f88509,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP10(X712,X713,X714) | sP13(X715,X712) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51332,f1535])).
fof(f88397,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP10(X49,X50,X51) | sP13(X52,X49) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51332,f1087])).
fof(f88395,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP10(X35,X36,X37) | sP13(X38,X35) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51332,f1086])).
fof(f88393,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP10(X21,X22,X23) | sP13(X24,X21) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51332,f1085])).
fof(f88392,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP10(X14,X15,X16) | sP13(X17,X14) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51332,f1083])).
fof(f88390,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP10(X0,X1,X2) | sP13(X3,X0) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51332,f1081])).
fof(f88351,plain,(
  ( ! [X893,X892,X891] : (sP8(X891,X892,X893) | sP13('F_0',X893)) ) | $spl640),
  inference(cnf_transformation,[],[f88351_D])).
fof(f88351_D,plain,(
  ( ! [X893,X892,X891] : (sP8(X891,X892,X893) | sP13('F_0',X893)) ) <=> ~$spl640),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl640])])).
fof(f88196,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP8(X896,X897,X898) | sP13('F_0',X898) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51286,f1496])).
fof(f51286,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X0)) | sP8(X2,X3,X1) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47634,f17461])).
fof(f47634,plain,(
  ( ! [X277,X275,X276,X274] : (sP13('T_0',X274) | sP13(X274,X275) | sP8(X276,X277,X275)) ) | $spl22),
  inference(resolution,[],[f21283,f1240])).
fof(f88195,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP8(X891,X892,X893) | sP13('F_0',X893) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51286,f1494])).
fof(f88349,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP8(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X2)) ) | $spl638),
  inference(cnf_transformation,[],[f88349_D])).
fof(f88349_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP8(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X2)) ) <=> ~$spl638),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl638])])).
fof(f88166,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP8(X712,X713,X714) | sP13(X715,X714) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51286,f1535])).
fof(f88054,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP8(X49,X50,X51) | sP13(X52,X51) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51286,f1087])).
fof(f88052,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP8(X35,X36,X37) | sP13(X38,X37) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51286,f1086])).
fof(f88050,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP8(X21,X22,X23) | sP13(X24,X23) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51286,f1085])).
fof(f88049,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP8(X14,X15,X16) | sP13(X17,X16) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51286,f1083])).
fof(f88047,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP8(X0,X1,X2) | sP13(X3,X2) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51286,f1081])).
fof(f88008,plain,(
  ( ! [X893,X892,X891] : (sP6(X891,X892,X893) | sP13('F_0',X892)) ) | $spl636),
  inference(cnf_transformation,[],[f88008_D])).
fof(f88008_D,plain,(
  ( ! [X893,X892,X891] : (sP6(X891,X892,X893) | sP13('F_0',X892)) ) <=> ~$spl636),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl636])])).
fof(f87853,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP6(X896,X897,X898) | sP13('F_0',X897) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51239,f1496])).
fof(f51239,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X0)) | sP6(X2,X1,X3) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47618,f17461])).
fof(f47618,plain,(
  ( ! [X212,X210,X213,X211] : (sP13('T_0',X210) | sP13(X210,X211) | sP6(X212,X211,X213)) ) | $spl22),
  inference(resolution,[],[f21283,f1224])).
fof(f87852,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP6(X891,X892,X893) | sP13('F_0',X892) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51239,f1494])).
fof(f88006,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X1)) ) | $spl634),
  inference(cnf_transformation,[],[f88006_D])).
fof(f88006_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X1)) ) <=> ~$spl634),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl634])])).
fof(f87823,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP6(X712,X713,X714) | sP13(X715,X713) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51239,f1535])).
fof(f87711,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP6(X49,X50,X51) | sP13(X52,X50) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51239,f1087])).
fof(f87709,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP6(X35,X36,X37) | sP13(X38,X36) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51239,f1086])).
fof(f87707,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP6(X21,X22,X23) | sP13(X24,X22) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51239,f1085])).
fof(f87706,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP6(X14,X15,X16) | sP13(X17,X15) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51239,f1083])).
fof(f87704,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | sP13(X3,X1) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51239,f1081])).
fof(f87665,plain,(
  ( ! [X893,X892,X891] : (sP6(X891,X892,X893) | sP13('F_0',X893)) ) | $spl632),
  inference(cnf_transformation,[],[f87665_D])).
fof(f87665_D,plain,(
  ( ! [X893,X892,X891] : (sP6(X891,X892,X893) | sP13('F_0',X893)) ) <=> ~$spl632),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl632])])).
fof(f87510,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP6(X896,X897,X898) | sP13('F_0',X898) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51191,f1496])).
fof(f51191,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X0)) | sP6(X2,X3,X1) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47617,f17461])).
fof(f47617,plain,(
  ( ! [X208,X206,X209,X207] : (sP13('T_0',X206) | sP13(X206,X207) | sP6(X208,X209,X207)) ) | $spl22),
  inference(resolution,[],[f21283,f1223])).
fof(f87509,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP6(X891,X892,X893) | sP13('F_0',X893) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51191,f1494])).
fof(f87663,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X2)) ) | $spl630),
  inference(cnf_transformation,[],[f87663_D])).
fof(f87663_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X2)) ) <=> ~$spl630),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl630])])).
fof(f87480,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP6(X712,X713,X714) | sP13(X715,X714) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51191,f1535])).
fof(f87368,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP6(X49,X50,X51) | sP13(X52,X51) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51191,f1087])).
fof(f87366,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP6(X35,X36,X37) | sP13(X38,X37) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51191,f1086])).
fof(f87364,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP6(X21,X22,X23) | sP13(X24,X23) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51191,f1085])).
fof(f87363,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP6(X14,X15,X16) | sP13(X17,X16) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51191,f1083])).
fof(f87361,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | sP13(X3,X2) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51191,f1081])).
fof(f87322,plain,(
  ( ! [X893,X892,X891] : (sP4(X891,X892,X893) | sP13('F_0',X892)) ) | $spl628),
  inference(cnf_transformation,[],[f87322_D])).
fof(f87322_D,plain,(
  ( ! [X893,X892,X891] : (sP4(X891,X892,X893) | sP13('F_0',X892)) ) <=> ~$spl628),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl628])])).
fof(f87167,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP4(X896,X897,X898) | sP13('F_0',X897) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51144,f1496])).
fof(f51144,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X0)) | sP4(X2,X1,X3) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47604,f17461])).
fof(f47604,plain,(
  ( ! [X156,X154,X157,X155] : (sP13('T_0',X154) | sP13(X154,X155) | sP4(X156,X155,X157)) ) | $spl22),
  inference(resolution,[],[f21283,f1207])).
fof(f87166,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP4(X891,X892,X893) | sP13('F_0',X892) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51144,f1494])).
fof(f87320,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP4(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X1)) ) | $spl626),
  inference(cnf_transformation,[],[f87320_D])).
fof(f87320_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP4(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X1)) ) <=> ~$spl626),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl626])])).
fof(f87137,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP4(X712,X713,X714) | sP13(X715,X713) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51144,f1535])).
fof(f87025,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP4(X49,X50,X51) | sP13(X52,X50) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51144,f1087])).
fof(f87023,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP4(X35,X36,X37) | sP13(X38,X36) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51144,f1086])).
fof(f87021,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP4(X21,X22,X23) | sP13(X24,X22) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51144,f1085])).
fof(f87020,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP4(X14,X15,X16) | sP13(X17,X15) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51144,f1083])).
fof(f87018,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP4(X0,X1,X2) | sP13(X3,X1) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51144,f1081])).
fof(f86979,plain,(
  ( ! [X893,X892,X891] : (sP0(X891,X892,X893) | sP13('F_0',X891)) ) | $spl624),
  inference(cnf_transformation,[],[f86979_D])).
fof(f86979_D,plain,(
  ( ! [X893,X892,X891] : (sP0(X891,X892,X893) | sP13('F_0',X891)) ) <=> ~$spl624),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl624])])).
fof(f86824,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP0(X896,X897,X898) | sP13('F_0',X896) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51094,f1496])).
fof(f51094,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X0)) | sP0(X1,X2,X3) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47584,f17461])).
fof(f47584,plain,(
  ( ! [X87,X85,X86,X84] : (sP13('T_0',X84) | sP13(X84,X85) | sP0(X85,X86,X87)) ) | $spl22),
  inference(resolution,[],[f21283,f1106])).
fof(f86823,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP0(X891,X892,X893) | sP13('F_0',X891) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51094,f1494])).
fof(f86977,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X0)) ) | $spl622),
  inference(cnf_transformation,[],[f86977_D])).
fof(f86977_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X0)) ) <=> ~$spl622),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl622])])).
fof(f86794,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP0(X712,X713,X714) | sP13(X715,X712) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51094,f1535])).
fof(f86682,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP0(X49,X50,X51) | sP13(X52,X49) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51094,f1087])).
fof(f86680,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP0(X35,X36,X37) | sP13(X38,X35) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51094,f1086])).
fof(f86678,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP0(X21,X22,X23) | sP13(X24,X21) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51094,f1085])).
fof(f86677,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP0(X14,X15,X16) | sP13(X17,X14) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51094,f1083])).
fof(f86675,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | sP13(X3,X0) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51094,f1081])).
fof(f86636,plain,(
  ( ! [X893,X892,X891] : (sP0(X891,X892,X893) | sP13('F_0',X892)) ) | $spl620),
  inference(cnf_transformation,[],[f86636_D])).
fof(f86636_D,plain,(
  ( ! [X893,X892,X891] : (sP0(X891,X892,X893) | sP13('F_0',X892)) ) <=> ~$spl620),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl620])])).
fof(f86481,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP0(X896,X897,X898) | sP13('F_0',X897) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51047,f1496])).
fof(f51047,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X0)) | sP0(X2,X1,X3) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47583,f17461])).
fof(f47583,plain,(
  ( ! [X80,X83,X81,X82] : (sP13('T_0',X80) | sP13(X80,X81) | sP0(X82,X81,X83)) ) | $spl22),
  inference(resolution,[],[f21283,f1105])).
fof(f86480,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP0(X891,X892,X893) | sP13('F_0',X892) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51047,f1494])).
fof(f86634,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X1)) ) | $spl618),
  inference(cnf_transformation,[],[f86634_D])).
fof(f86634_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X1)) ) <=> ~$spl618),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl618])])).
fof(f86451,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP0(X712,X713,X714) | sP13(X715,X713) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51047,f1535])).
fof(f86339,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP0(X49,X50,X51) | sP13(X52,X50) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51047,f1087])).
fof(f86337,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP0(X35,X36,X37) | sP13(X38,X36) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51047,f1086])).
fof(f86335,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP0(X21,X22,X23) | sP13(X24,X22) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51047,f1085])).
fof(f86334,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP0(X14,X15,X16) | sP13(X17,X15) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51047,f1083])).
fof(f86332,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | sP13(X3,X1) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51047,f1081])).
fof(f86098,plain,(
  ( ! [X893,X892,X891] : (sP0(X891,X892,X893) | sP13('F_0',X893)) ) | $spl616),
  inference(cnf_transformation,[],[f86098_D])).
fof(f86098_D,plain,(
  ( ! [X893,X892,X891] : (sP0(X891,X892,X893) | sP13('F_0',X893)) ) <=> ~$spl616),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl616])])).
fof(f85943,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP0(X896,X897,X898) | sP13('F_0',X898) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f51000,f1496])).
fof(f51000,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X0)) | sP0(X2,X3,X1) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47582,f17461])).
fof(f47582,plain,(
  ( ! [X78,X76,X79,X77] : (sP13('T_0',X76) | sP13(X76,X77) | sP0(X78,X79,X77)) ) | $spl22),
  inference(resolution,[],[f21283,f1104])).
fof(f85942,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP0(X891,X892,X893) | sP13('F_0',X893) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f51000,f1494])).
fof(f86096,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X2)) ) | $spl614),
  inference(cnf_transformation,[],[f86096_D])).
fof(f86096_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X2)) ) <=> ~$spl614),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl614])])).
fof(f85913,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP0(X712,X713,X714) | sP13(X715,X714) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f51000,f1535])).
fof(f85801,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP0(X49,X50,X51) | sP13(X52,X51) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f51000,f1087])).
fof(f85799,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP0(X35,X36,X37) | sP13(X38,X37) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f51000,f1086])).
fof(f85797,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP0(X21,X22,X23) | sP13(X24,X23) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f51000,f1085])).
fof(f85796,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP0(X14,X15,X16) | sP13(X17,X16) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f51000,f1083])).
fof(f85794,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP0(X0,X1,X2) | sP13(X3,X2) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f51000,f1081])).
fof(f85695,plain,(
  ( ! [X893,X892,X891] : (sP1(X891,X892,X893) | sP13('F_0',X893)) ) | $spl612),
  inference(cnf_transformation,[],[f85695_D])).
fof(f85695_D,plain,(
  ( ! [X893,X892,X891] : (sP1(X891,X892,X893) | sP13('F_0',X893)) ) <=> ~$spl612),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl612])])).
fof(f85540,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP1(X896,X897,X898) | sP13('F_0',X898) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f50954,f1496])).
fof(f50954,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X0)) | sP1(X2,X3,X1) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47581,f17461])).
fof(f47581,plain,(
  ( ! [X74,X72,X75,X73] : (sP13('T_0',X72) | sP13(X72,X73) | sP1(X74,X75,X73)) ) | $spl22),
  inference(resolution,[],[f21283,f1100])).
fof(f85539,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP1(X891,X892,X893) | sP13('F_0',X893) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f50954,f1494])).
fof(f85693,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP1(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X2)) ) | $spl610),
  inference(cnf_transformation,[],[f85693_D])).
fof(f85693_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP1(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X2)) ) <=> ~$spl610),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl610])])).
fof(f85510,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP1(X712,X713,X714) | sP13(X715,X714) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f50954,f1535])).
fof(f85398,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP1(X49,X50,X51) | sP13(X52,X51) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f50954,f1087])).
fof(f85396,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP1(X35,X36,X37) | sP13(X38,X37) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f50954,f1086])).
fof(f85394,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP1(X21,X22,X23) | sP13(X24,X23) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f50954,f1085])).
fof(f85393,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP1(X14,X15,X16) | sP13(X17,X16) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f50954,f1083])).
fof(f85391,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP1(X0,X1,X2) | sP13(X3,X2) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f50954,f1081])).
fof(f85352,plain,(
  ( ! [X893,X892,X891] : (sP2(X891,X892,X893) | sP13('F_0',X893)) ) | $spl608),
  inference(cnf_transformation,[],[f85352_D])).
fof(f85352_D,plain,(
  ( ! [X893,X892,X891] : (sP2(X891,X892,X893) | sP13('F_0',X893)) ) <=> ~$spl608),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl608])])).
fof(f85197,plain,(
  ( ! [X899,X897,X898,X896,X900] : (sP2(X896,X897,X898) | sP13('F_0',X898) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X899))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X900)))) ) | $spl22),
  inference(resolution,[],[f50807,f1496])).
fof(f50807,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X0)) | sP2(X2,X3,X1) | sP13(X0,X1)) ) | $spl22),
  inference(resolution,[],[f47578,f17461])).
fof(f47578,plain,(
  ( ! [X61,X62,X60,X63] : (sP13('T_0',X60) | sP13(X60,X61) | sP2(X62,X63,X61)) ) | $spl22),
  inference(resolution,[],[f21283,f1096])).
fof(f85196,plain,(
  ( ! [X895,X893,X894,X892,X891] : (sP2(X891,X892,X893) | sP13('F_0',X893) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X894))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X895)))) ) | $spl22),
  inference(resolution,[],[f50807,f1494])).
fof(f85350,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP2(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X2)) ) | $spl606),
  inference(cnf_transformation,[],[f85350_D])).
fof(f85350_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP2(X0,X1,X2) | s(bool,X3) != s(bool,X5) | ~p(s(bool,X5)) | sP13(X3,X2)) ) <=> ~$spl606),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl606])])).
fof(f85167,plain,(
  ( ! [X716,X712,X714,X717,X713,X715] : (sP2(X712,X713,X714) | sP13(X715,X714) | p(s(bool,X716)) | ~p(s(bool,X717)) | s(bool,X715) != s(bool,X717)) ) | $spl22),
  inference(resolution,[],[f50807,f1535])).
fof(f85055,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP2(X49,X50,X51) | sP13(X52,X51) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,X55)) ) | $spl22),
  inference(resolution,[],[f50807,f1087])).
fof(f85053,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X40] : (sP2(X35,X36,X37) | sP13(X38,X37) | p(s(bool,X39)) | ~p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X38) != s(bool,X40)) ) | $spl22),
  inference(resolution,[],[f50807,f1086])).
fof(f85051,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP2(X21,X22,X23) | sP13(X24,X23) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) ) | $spl22),
  inference(resolution,[],[f50807,f1085])).
fof(f85050,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP2(X14,X15,X16) | sP13(X17,X16) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,X20)) ) | $spl22),
  inference(resolution,[],[f50807,f1083])).
fof(f85048,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP2(X0,X1,X2) | sP13(X3,X2) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) ) | $spl22),
  inference(resolution,[],[f50807,f1081])).
fof(f65026,plain,(
  ( ! [X3] : (p(s(bool,X3)) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl488),
  inference(cnf_transformation,[],[f65026_D])).
fof(f65026_D,plain,(
  ( ! [X3] : (p(s(bool,X3)) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl488),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl488])])).
fof(f84875,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | p(s(bool,X237)) | s(bool,X237) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl42),
  inference(resolution,[],[f1944,f1535])).
fof(f84764,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X24) != s(bool,X25)) ) | $spl42),
  inference(resolution,[],[f1944,f1087])).
fof(f84761,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | ~p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl42),
  inference(resolution,[],[f1944,f1086])).
fof(f84760,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl42),
  inference(resolution,[],[f1944,f1085])).
fof(f84759,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X9) != s(bool,X10)) ) | $spl42),
  inference(resolution,[],[f1944,f1083])).
fof(f84757,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl42),
  inference(resolution,[],[f1944,f1081])).
fof(f5505,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl108),
  inference(cnf_transformation,[],[f5505_D])).
fof(f5505_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f84980,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl42),
  inference(forward_demodulation,[],[f84979,f1160])).
fof(f84979,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl42),
  inference(forward_demodulation,[],[f84756,f1160])).
fof(f84756,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl42),
  inference(resolution,[],[f1944,f1362])).
fof(f63778,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl480),
  inference(cnf_transformation,[],[f63778_D])).
fof(f63778_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl480),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl480])])).
fof(f84574,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | ~p(s(bool,X237)) | s(bool,X237) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl33),
  inference(resolution,[],[f1902,f1535])).
fof(f84462,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X21) != s(bool,X23)) ) | $spl33),
  inference(resolution,[],[f1902,f1087])).
fof(f84460,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl33),
  inference(resolution,[],[f1902,f1086])).
fof(f84458,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl33),
  inference(resolution,[],[f1902,f1085])).
fof(f84457,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X6) != s(bool,X8)) ) | $spl33),
  inference(resolution,[],[f1902,f1083])).
fof(f84455,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl33),
  inference(resolution,[],[f1902,f1081])).
fof(f59345,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl474),
  inference(cnf_transformation,[],[f59345_D])).
fof(f59345_D,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl474),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl474])])).
fof(f84262,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl29),
  inference(resolution,[],[f1890,f1535])).
fof(f84150,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X23) != s(bool,X25)) ) | $spl29),
  inference(resolution,[],[f1890,f1087])).
fof(f84148,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl29),
  inference(resolution,[],[f1890,f1086])).
fof(f84146,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl29),
  inference(resolution,[],[f1890,f1085])).
fof(f84145,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X8) != s(bool,X10)) ) | $spl29),
  inference(resolution,[],[f1890,f1083])).
fof(f84143,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl29),
  inference(resolution,[],[f1890,f1081])).
fof(f2248,plain,(
  ( ! [X14] : (p(s(bool,X14)) | s(bool,X14) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl56),
  inference(cnf_transformation,[],[f2248_D])).
fof(f2248_D,plain,(
  ( ! [X14] : (p(s(bool,X14)) | s(bool,X14) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f83891,plain,(
  ( ! [X239,X240] : (p(s(bool,X239)) | p(s(bool,X240)) | s(bool,X240) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1535])).
fof(f83780,plain,(
  ( ! [X28,X26,X27] : (p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X27) != s(bool,X28)) ) | $spl2),
  inference(resolution,[],[f1546,f1087])).
fof(f83777,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X19) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1086])).
fof(f83776,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X14) != s(bool,X16) | s(bool,X15) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1085])).
fof(f83775,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X12) != s(bool,X13)) ) | $spl2),
  inference(resolution,[],[f1546,f1083])).
fof(f83773,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,X5)) | p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | s(bool,X6) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1081])).
fof(f2246,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl55),
  inference(cnf_transformation,[],[f2246_D])).
fof(f2246_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl55),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl55])])).
fof(f83771,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl2),
  inference(resolution,[],[f1546,f1357])).
fof(f1357,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f994])).
fof(f994,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(flattening,[],[f993])).
fof(f993,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f633])).
fof(f633,plain,(
  ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))))),
  inference(rectify,[],[f424])).
fof(f424,axiom,(
  ! [X23,X16] : (s('type.num.num',X16) = s('type.num.num',X23) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X16)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num',X23))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.EQ_LESS_EQ')).
fof(f83770,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl2),
  inference(resolution,[],[f1546,f1357])).
fof(f2242,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl50),
  inference(cnf_transformation,[],[f2242_D])).
fof(f2242_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f83769,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(resolution,[],[f1546,f1352])).
fof(f83361,plain,(
  $false | ($spl22 | $spl52 | $spl118)),
  inference(subsumption_resolution,[],[f83360,f1837])).
fof(f83360,plain,(
  ~p(s(bool,'T_0')) | ($spl52 | $spl118)),
  inference(forward_demodulation,[],[f83359,f1453])).
fof(f1453,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f710])).
fof(f710,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f363])).
fof(f363,axiom,(
  ! [X16] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X16)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_lte|split|0')).
fof(f83359,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl52 | $spl118)),
  inference(forward_demodulation,[],[f83358,f1444])).
fof(f1444,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f700])).
fof(f700,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f362])).
fof(f362,axiom,(
  ! [X16,X23] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num',X23))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_lte|split|4')).
fof(f83358,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl52 | $spl118)),
  inference(subsumption_resolution,[],[f82765,f5524])).
fof(f82765,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK41(sK15,sK14)),s('type.list.list'(sK14),sK40(sK15,sK14)))) | $spl52),
  inference(superposition,[],[f19331,f2244])).
fof(f83355,plain,(
  $false | ($spl0 | $spl52)),
  inference(subsumption_resolution,[],[f83249,f1545])).
fof(f83249,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK42(sK15,sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK43(sK15,sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl52),
  inference(trivial_inequality_removal,[],[f82763])).
fof(f82763,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK42(sK15,sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK43(sK15,sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl52),
  inference(superposition,[],[f11125,f2244])).
fof(f83354,plain,(
  $false | ($spl0 | $spl52)),
  inference(subsumption_resolution,[],[f83250,f1545])).
fof(f83250,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK44(sK15,sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK45(sK15,sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl52),
  inference(trivial_inequality_removal,[],[f82762])).
fof(f82762,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK44(sK15,sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK45(sK15,sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl52),
  inference(superposition,[],[f11123,f2244])).
fof(f82685,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl605),
  inference(cnf_transformation,[],[f82685_D])).
fof(f82685_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl605),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl605])])).
fof(f82683,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f82682,f1160])).
fof(f82682,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f77587,f1154])).
fof(f77587,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl2),
  inference(resolution,[],[f1972,f1349])).
fof(f77588,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl2),
  inference(resolution,[],[f1972,f1352])).
fof(f82586,plain,(
  $false | ($spl50 | $spl118)),
  inference(subsumption_resolution,[],[f82322,f5524])).
fof(f82322,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK30(sK15,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK14)),s('type.list.list'(sK14),sK29(sK15,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK14)))) | $spl50),
  inference(resolution,[],[f2242,f37307])).
fof(f37307,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),sK29(X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f37306,f1446])).
fof(f1446,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f702])).
fof(f702,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f137])).
fof(f137,axiom,(
  ! [X23,X16] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X16))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))),s('type.num.num',X16)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.LESS_EQ')).
fof(f37306,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),sK29(X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f19341,f19314])).
fof(f19314,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f1482,f1156])).
fof(f1482,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f737])).
fof(f737,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))),
  inference(rectify,[],[f366])).
fof(f366,axiom,(
  ! [X16] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X16)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.SUC_ONE_ADD')).
fof(f19341,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),sK29(X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f1176,f1156])).
fof(f1176,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),sK29(X2,X1,X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f894])).
fof(f894,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK29(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),sK29(X2,X1,X0)))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK29,sK30])],[f893])).
fof(f893,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X5,X6] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X5))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(rectify,[],[f892])).
fof(f892,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(nnf_transformation,[],[f572])).
fof(f572,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f571])).
fof(f571,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f187])).
fof(f187,axiom,(
  ! [X6] : ! [X13,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ? [X8,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) & s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X8)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.quantHeuristics.LIST_LENGTH_|49||split|6')).
fof(f82585,plain,(
  $false | ($spl50 | $spl118)),
  inference(subsumption_resolution,[],[f82321,f5524])).
fof(f82321,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK28(sK15,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK14)),s('type.list.list'(sK14),sK27(sK15,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK14)))) | $spl50),
  inference(resolution,[],[f2242,f37825])).
fof(f37825,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X2,X1,X0)),s('type.list.list'(X0),sK27(X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f37824,f1446])).
fof(f37824,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X2,X1,X0)),s('type.list.list'(X0),sK27(X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f19344,f19313])).
fof(f19313,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f1484,f1156])).
fof(f1484,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f739])).
fof(f739,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f336])).
fof(f336,axiom,(
  ! [X23] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.ADD|49|')).
fof(f19344,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X2,X1,X0)),s('type.list.list'(X0),sK27(X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f1173,f1156])).
fof(f1173,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X2,X1,X0)),s('type.list.list'(X0),sK27(X2,X1,X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f891])).
fof(f891,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK27(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X2,X1,X0)),s('type.list.list'(X0),sK27(X2,X1,X0)))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK27,sK28])],[f890])).
fof(f890,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X5,X6] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X5))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(rectify,[],[f889])).
fof(f889,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(nnf_transformation,[],[f570])).
fof(f570,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f569])).
fof(f569,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f185])).
fof(f185,axiom,(
  ! [X6] : ! [X13,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ? [X8,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) & s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X8)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.quantHeuristics.LIST_LENGTH_|49||split|8')).
fof(f82306,plain,(
  ( ! [X43,X41,X42,X40] : (sP12(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f82200,f1161])).
fof(f82200,plain,(
  ( ! [X43,X41,X42,X40] : (sP12(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f2079,f1297])).
fof(f82304,plain,(
  ( ! [X39,X38] : (sP12(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f82199,f1161])).
fof(f82199,plain,(
  ( ! [X39,X38] : (sP12(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f2079,f1152])).
fof(f82264,plain,(
  ( ! [X45,X43,X44,X42] : (sP12(X42,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f82160,f1161])).
fof(f82160,plain,(
  ( ! [X45,X43,X44,X42] : (sP12(X42,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f2079,f1297])).
fof(f82262,plain,(
  ( ! [X41,X40] : (sP12(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f82159,f1161])).
fof(f82159,plain,(
  ( ! [X41,X40] : (sP12(X40,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f2079,f1152])).
fof(f82117,plain,(
  ( ! [X10] : (p(s(bool,X10)) | sP13('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2079,f20938])).
fof(f82115,plain,(
  ( ! [X8] : (p(s(bool,X8)) | sP13('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2079,f20936])).
fof(f82113,plain,(
  ( ! [X6] : (p(s(bool,X6)) | sP13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),'F_0')) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2079,f20620])).
fof(f82111,plain,(
  ( ! [X4] : (p(s(bool,X4)) | sP13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),'F_0')) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2079,f20618])).
fof(f82092,plain,(
  ( ! [X43,X41,X42,X40] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f81986,f1161])).
fof(f81986,plain,(
  ( ! [X43,X41,X42,X40] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f2072,f1297])).
fof(f82090,plain,(
  ( ! [X39,X38] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f81985,f1161])).
fof(f81985,plain,(
  ( ! [X39,X38] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f2072,f1152])).
fof(f82050,plain,(
  ( ! [X45,X43,X44,X42] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f81946,f1161])).
fof(f81946,plain,(
  ( ! [X45,X43,X44,X42] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f2072,f1297])).
fof(f82048,plain,(
  ( ! [X41,X40] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f81945,f1161])).
fof(f81945,plain,(
  ( ! [X41,X40] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f2072,f1152])).
fof(f81904,plain,(
  ( ! [X11] : (p(s(bool,X11)) | sP13('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2072,f20931])).
fof(f81901,plain,(
  ( ! [X8] : (p(s(bool,X8)) | sP13('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2072,f20928])).
fof(f81900,plain,(
  ( ! [X7] : (p(s(bool,X7)) | sP13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),'F_0')) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2072,f20613])).
fof(f81897,plain,(
  ( ! [X4] : (p(s(bool,X4)) | sP13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),'F_0')) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2072,f20610])).
fof(f81891,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f81713,f1811])).
fof(f81713,plain,(
  ( ! [X512,X513] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X512),s('type.num.num',X513))))) ) | $spl12),
  inference(resolution,[],[f1811,f1346])).
fof(f1346,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f987])).
fof(f987,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f628])).
fof(f628,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f627])).
fof(f627,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f438])).
fof(f438,axiom,(
  ! [X16,X23] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X16)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_lt|split|5')).
fof(f81890,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f81705,f1811])).
fof(f81705,plain,(
  ( ! [X500,X501] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X500))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X501))))))) ) | $spl12),
  inference(resolution,[],[f1811,f1346])).
fof(f81889,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f81704,f1811])).
fof(f81704,plain,(
  ( ! [X499,X498] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X498),s('type.num.num',X499))))) ) | $spl12),
  inference(resolution,[],[f1811,f1322])).
fof(f1322,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f976])).
fof(f976,plain,(
  ! [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f619])).
fof(f619,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f618])).
fof(f618,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f339])).
fof(f339,axiom,(
  ! [X23,X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X16)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.NOT_LESS')).
fof(f81888,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f81703,f1811])).
fof(f81703,plain,(
  ( ! [X496,X497] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X496),s('type.num.num',X497))))) ) | $spl12),
  inference(resolution,[],[f1811,f1320])).
fof(f81887,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f81697,f1811])).
fof(f81697,plain,(
  ( ! [X484,X483] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X483),s('type.num.num',X484))))) ) | $spl12),
  inference(resolution,[],[f1811,f1348])).
fof(f1348,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f988])).
fof(f988,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f630])).
fof(f630,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f629])).
fof(f629,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f365])).
fof(f365,axiom,(
  ! [X16,X23] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))))) <=> ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X16)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_lte|split|5')).
fof(f81884,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f81687,f1811])).
fof(f81687,plain,(
  ( ! [X463,X464] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X463))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X464))))))) ) | $spl12),
  inference(resolution,[],[f1811,f1348])).
fof(f81883,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f81686,f1811])).
fof(f81686,plain,(
  ( ! [X461,X462] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X461),s('type.num.num',X462))))) ) | $spl12),
  inference(resolution,[],[f1811,f1322])).
fof(f81882,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f81685,f1811])).
fof(f81685,plain,(
  ( ! [X459,X460] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X459),s('type.num.num',X460))))) ) | $spl12),
  inference(resolution,[],[f1811,f1320])).
fof(f81675,plain,(
  $false | ($spl12 | $spl22)),
  inference(resolution,[],[f1811,f1837])).
fof(f81682,plain,(
  $false | $spl12),
  inference(resolution,[],[f1811,f1436])).
fof(f81696,plain,(
  $false | ($spl2 | $spl12)),
  inference(resolution,[],[f1811,f1546])).
fof(f81711,plain,(
  $false | $spl12),
  inference(resolution,[],[f1811,f1434])).
fof(f1434,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(cnf_transformation,[],[f690])).
fof(f690,plain,(
  ! [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f417])).
fof(f417,axiom,(
  ! [X16] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.prim_rec.LESS_SUC_REFL')).
fof(f81712,plain,(
  $false | ($spl12 | $spl42)),
  inference(resolution,[],[f1811,f1944])).
fof(f81721,plain,(
  $false | $spl12),
  inference(resolution,[],[f1811,f1435])).
fof(f1435,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(cnf_transformation,[],[f691])).
fof(f691,plain,(
  ! [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f181])).
fof(f181,axiom,(
  ! [X16] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.prim_rec.LESS_|48|')).
fof(f81513,plain,(
  ( ! [X43,X41,X42,X40] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f81403,f1161])).
fof(f81403,plain,(
  ( ! [X43,X41,X42,X40] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f2061,f1297])).
fof(f81511,plain,(
  ( ! [X39,X38] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f81402,f1161])).
fof(f81402,plain,(
  ( ! [X39,X38] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f2061,f1152])).
fof(f81471,plain,(
  ( ! [X45,X43,X44,X42] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f81363,f1161])).
fof(f81363,plain,(
  ( ! [X45,X43,X44,X42] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f2061,f1297])).
fof(f81469,plain,(
  ( ! [X41,X40] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f81362,f1161])).
fof(f81362,plain,(
  ( ! [X41,X40] : (sP10('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f2061,f1152])).
fof(f81317,plain,(
  ( ! [X7] : (~p(s(bool,X7)) | sP13('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2061,f20919])).
fof(f81316,plain,(
  ( ! [X6] : (~p(s(bool,X6)) | sP13('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2061,f20918])).
fof(f81315,plain,(
  ( ! [X5] : (~p(s(bool,X5)) | sP13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),'F_0')) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2061,f20601])).
fof(f81314,plain,(
  ( ! [X4] : (~p(s(bool,X4)) | sP13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),'F_0')) ) | ($spl2 | $spl17)),
  inference(resolution,[],[f2061,f20600])).
fof(f81295,plain,(
  ( ! [X43,X41,X42,X40] : (sP8(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f81187,f1161])).
fof(f81187,plain,(
  ( ! [X43,X41,X42,X40] : (sP8(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f2049,f1297])).
fof(f81293,plain,(
  ( ! [X39,X38] : (sP8(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f81186,f1161])).
fof(f81186,plain,(
  ( ! [X39,X38] : (sP8(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f2049,f1152])).
fof(f81253,plain,(
  ( ! [X45,X43,X44,X42] : (sP8(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f81147,f1161])).
fof(f81147,plain,(
  ( ! [X45,X43,X44,X42] : (sP8(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f2049,f1297])).
fof(f81251,plain,(
  ( ! [X41,X40] : (sP8(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f81146,f1161])).
fof(f81146,plain,(
  ( ! [X41,X40] : (sP8(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f2049,f1152])).
fof(f81088,plain,(
  ( ! [X43,X41,X42,X40] : (sP6(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80981,f1161])).
fof(f80981,plain,(
  ( ! [X43,X41,X42,X40] : (sP6(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f2033,f1297])).
fof(f81086,plain,(
  ( ! [X39,X38] : (sP6(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80980,f1161])).
fof(f80980,plain,(
  ( ! [X39,X38] : (sP6(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f2033,f1152])).
fof(f81046,plain,(
  ( ! [X45,X43,X44,X42] : (sP6(X42,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80941,f1161])).
fof(f80941,plain,(
  ( ! [X45,X43,X44,X42] : (sP6(X42,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f2033,f1297])).
fof(f81044,plain,(
  ( ! [X41,X40] : (sP6(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80940,f1161])).
fof(f80940,plain,(
  ( ! [X41,X40] : (sP6(X40,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f2033,f1152])).
fof(f80882,plain,(
  ( ! [X43,X41,X42,X40] : (sP6(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80775,f1161])).
fof(f80775,plain,(
  ( ! [X43,X41,X42,X40] : (sP6(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f2032,f1297])).
fof(f80880,plain,(
  ( ! [X39,X38] : (sP6(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80774,f1161])).
fof(f80774,plain,(
  ( ! [X39,X38] : (sP6(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f2032,f1152])).
fof(f80840,plain,(
  ( ! [X45,X43,X44,X42] : (sP6(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80735,f1161])).
fof(f80735,plain,(
  ( ! [X45,X43,X44,X42] : (sP6(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f2032,f1297])).
fof(f80838,plain,(
  ( ! [X41,X40] : (sP6(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80734,f1161])).
fof(f80734,plain,(
  ( ! [X41,X40] : (sP6(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f2032,f1152])).
fof(f80676,plain,(
  ( ! [X43,X41,X42,X40] : (sP4(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80569,f1161])).
fof(f80569,plain,(
  ( ! [X43,X41,X42,X40] : (sP4(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f2019,f1297])).
fof(f80674,plain,(
  ( ! [X39,X38] : (sP4(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80568,f1161])).
fof(f80568,plain,(
  ( ! [X39,X38] : (sP4(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f2019,f1152])).
fof(f80634,plain,(
  ( ! [X45,X43,X44,X42] : (sP4(X42,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80529,f1161])).
fof(f80529,plain,(
  ( ! [X45,X43,X44,X42] : (sP4(X42,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f2019,f1297])).
fof(f80632,plain,(
  ( ! [X41,X40] : (sP4(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80528,f1161])).
fof(f80528,plain,(
  ( ! [X41,X40] : (sP4(X40,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f2019,f1152])).
fof(f80470,plain,(
  ( ! [X43,X41,X42,X40] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80361,f1161])).
fof(f80361,plain,(
  ( ! [X43,X41,X42,X40] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X40,X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f1999,f1297])).
fof(f80468,plain,(
  ( ! [X39,X38] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80360,f1161])).
fof(f80360,plain,(
  ( ! [X39,X38] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X38,X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f1999,f1152])).
fof(f80428,plain,(
  ( ! [X45,X43,X44,X42] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80321,f1161])).
fof(f80321,plain,(
  ( ! [X45,X43,X44,X42] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X42,X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f1999,f1297])).
fof(f80426,plain,(
  ( ! [X41,X40] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80320,f1161])).
fof(f80320,plain,(
  ( ! [X41,X40] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X40,X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f1999,f1152])).
fof(f80263,plain,(
  ( ! [X43,X41,X42,X40] : (sP0(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80154,f1161])).
fof(f80154,plain,(
  ( ! [X43,X41,X42,X40] : (sP0(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X41) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f1998,f1297])).
fof(f80261,plain,(
  ( ! [X39,X38] : (sP0(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80153,f1161])).
fof(f80153,plain,(
  ( ! [X39,X38] : (sP0(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')),X39) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f1998,f1152])).
fof(f80221,plain,(
  ( ! [X45,X43,X44,X42] : (sP0(X42,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80114,f1161])).
fof(f80114,plain,(
  ( ! [X45,X43,X44,X42] : (sP0(X42,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f1998,f1297])).
fof(f80219,plain,(
  ( ! [X41,X40] : (sP0(X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f80113,f1161])).
fof(f80113,plain,(
  ( ! [X41,X40] : (sP0(X40,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))),X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f1998,f1152])).
fof(f80056,plain,(
  ( ! [X43,X41,X42,X40] : (sP0(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f79947,f1161])).
fof(f79947,plain,(
  ( ! [X43,X41,X42,X40] : (sP0(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f1997,f1297])).
fof(f80054,plain,(
  ( ! [X39,X38] : (sP0(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f79946,f1161])).
fof(f79946,plain,(
  ( ! [X39,X38] : (sP0(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f1997,f1152])).
fof(f80014,plain,(
  ( ! [X45,X43,X44,X42] : (sP0(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f79907,f1161])).
fof(f79907,plain,(
  ( ! [X45,X43,X44,X42] : (sP0(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f1997,f1297])).
fof(f80012,plain,(
  ( ! [X41,X40] : (sP0(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f79906,f1161])).
fof(f79906,plain,(
  ( ! [X41,X40] : (sP0(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f1997,f1152])).
fof(f79849,plain,(
  ( ! [X43,X41,X42,X40] : (sP1(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f79741,f1161])).
fof(f79741,plain,(
  ( ! [X43,X41,X42,X40] : (sP1(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f1996,f1297])).
fof(f79847,plain,(
  ( ! [X39,X38] : (sP1(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f79740,f1161])).
fof(f79740,plain,(
  ( ! [X39,X38] : (sP1(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f1996,f1152])).
fof(f79807,plain,(
  ( ! [X45,X43,X44,X42] : (sP1(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f79701,f1161])).
fof(f79701,plain,(
  ( ! [X45,X43,X44,X42] : (sP1(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f1996,f1297])).
fof(f79805,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f79700,f1161])).
fof(f79700,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f1996,f1152])).
fof(f79623,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP8(X1,X2,X3)) ) | $spl554),
  inference(cnf_transformation,[],[f79623_D])).
fof(f79623_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP8(X1,X2,X3)) ) <=> ~$spl554),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl554])])).
fof(f79427,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP8(X707,X708,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X706) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49968,f1535])).
fof(f49968,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP8(X1,X2,X3) | p(s(bool,X0))) ) | $spl17),
  inference(resolution,[],[f45145,f11243])).
fof(f11243,plain,(
  ( ! [X212] : (~sP13(X212,'F_0') | p(s(bool,X212))) ) | $spl17),
  inference(resolution,[],[f1827,f1327])).
fof(f1327,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | ~sP13(X0,X1)) )),
  inference(cnf_transformation,[],[f981])).
fof(f45145,plain,(
  ( ! [X277,X275,X276,X274] : (sP13(X274,X275) | sP13(X274,'F_0') | sP8(X275,X276,X277)) ) | $spl17),
  inference(resolution,[],[f20629,f1242])).
fof(f20629,plain,(
  ( ! [X313,X314] : (~p(s(bool,X314)) | sP13(X313,X314) | sP13(X313,'F_0')) ) | $spl17),
  inference(resolution,[],[f11245,f1332])).
fof(f79316,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP8(X50,X51,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X49) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49968,f1087])).
fof(f79313,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP8(X29,X30,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X28) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49968,f1086])).
fof(f79312,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP8(X22,X23,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X21) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49968,f1085])).
fof(f79311,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP8(X15,X16,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X14) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49968,f1083])).
fof(f79309,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP8(X1,X2,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X0) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49968,f1081])).
fof(f79271,plain,(
  ( ! [X43,X41,X42,X40] : (sP2(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f79163,f1161])).
fof(f79163,plain,(
  ( ! [X43,X41,X42,X40] : (sP2(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f1993,f1297])).
fof(f79269,plain,(
  ( ! [X39,X38] : (sP2(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f79162,f1161])).
fof(f79162,plain,(
  ( ! [X39,X38] : (sP2(X38,X39,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(superposition,[],[f1993,f1152])).
fof(f79229,plain,(
  ( ! [X45,X43,X44,X42] : (sP2(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f79123,f1161])).
fof(f79123,plain,(
  ( ! [X45,X43,X44,X42] : (sP2(X42,X43,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl2),
  inference(superposition,[],[f1993,f1297])).
fof(f79227,plain,(
  ( ! [X41,X40] : (sP2(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f79122,f1161])).
fof(f79122,plain,(
  ( ! [X41,X40] : (sP2(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f1993,f1152])).
fof(f79045,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP8(X2,X1,X3)) ) | $spl548),
  inference(cnf_transformation,[],[f79045_D])).
fof(f79045_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP8(X2,X1,X3)) ) <=> ~$spl548),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl548])])).
fof(f78849,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP8(X708,X707,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X706) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49921,f1535])).
fof(f49921,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP8(X2,X1,X3) | p(s(bool,X0))) ) | $spl17),
  inference(resolution,[],[f45144,f11243])).
fof(f45144,plain,(
  ( ! [X271,X273,X270,X272] : (sP13(X270,X271) | sP13(X270,'F_0') | sP8(X272,X271,X273)) ) | $spl17),
  inference(resolution,[],[f20629,f1241])).
fof(f78738,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP8(X51,X50,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X49) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49921,f1087])).
fof(f78735,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP8(X30,X29,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X28) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49921,f1086])).
fof(f78734,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP8(X23,X22,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X21) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49921,f1085])).
fof(f78733,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP8(X16,X15,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X14) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49921,f1083])).
fof(f78731,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP8(X2,X1,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X0) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49921,f1081])).
fof(f78673,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP6(X1,X2,X3)) ) | $spl546),
  inference(cnf_transformation,[],[f78673_D])).
fof(f78673_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP6(X1,X2,X3)) ) <=> ~$spl546),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl546])])).
fof(f78479,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP6(X707,X708,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X706) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49876,f1535])).
fof(f49876,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP6(X1,X2,X3) | p(s(bool,X0))) ) | $spl17),
  inference(resolution,[],[f45131,f11243])).
fof(f45131,plain,(
  ( ! [X218,X220,X219,X221] : (sP13(X218,X219) | sP13(X218,'F_0') | sP6(X219,X220,X221)) ) | $spl17),
  inference(resolution,[],[f20629,f1225])).
fof(f78368,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP6(X50,X51,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X49) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49876,f1087])).
fof(f78365,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP6(X29,X30,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X28) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49876,f1086])).
fof(f78364,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP6(X22,X23,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X21) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49876,f1085])).
fof(f78363,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP6(X15,X16,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X14) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49876,f1083])).
fof(f78361,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP6(X1,X2,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X0) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49876,f1081])).
fof(f78303,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP4(X1,X2,X3)) ) | $spl544),
  inference(cnf_transformation,[],[f78303_D])).
fof(f78303_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP4(X1,X2,X3)) ) <=> ~$spl544),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl544])])).
fof(f78109,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP4(X707,X708,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X706) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49831,f1535])).
fof(f49831,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP4(X1,X2,X3) | p(s(bool,X0))) ) | $spl17),
  inference(resolution,[],[f45115,f11243])).
fof(f45115,plain,(
  ( ! [X156,X154,X157,X155] : (sP13(X154,X155) | sP13(X154,'F_0') | sP4(X155,X156,X157)) ) | $spl17),
  inference(resolution,[],[f20629,f1208])).
fof(f77998,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP4(X50,X51,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X49) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49831,f1087])).
fof(f77995,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP4(X29,X30,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X28) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49831,f1086])).
fof(f77994,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP4(X22,X23,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X21) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49831,f1085])).
fof(f77993,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP4(X15,X16,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X14) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49831,f1083])).
fof(f77991,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP4(X1,X2,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X0) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49831,f1081])).
fof(f77709,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl2),
  inference(resolution,[],[f1972,f1535])).
fof(f77597,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X23) != s(bool,X25)) ) | $spl2),
  inference(resolution,[],[f1972,f1087])).
fof(f77595,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl2),
  inference(resolution,[],[f1972,f1086])).
fof(f77593,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl2),
  inference(resolution,[],[f1972,f1085])).
fof(f77592,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X8) != s(bool,X10)) ) | $spl2),
  inference(resolution,[],[f1972,f1083])).
fof(f77590,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl2),
  inference(resolution,[],[f1972,f1081])).
fof(f77547,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP4(X2,X3,X1)) ) | $spl540),
  inference(cnf_transformation,[],[f77547_D])).
fof(f77547_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP4(X2,X3,X1)) ) <=> ~$spl540),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl540])])).
fof(f77353,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP4(X708,X709,X707) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X706) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49785,f1535])).
fof(f49785,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP4(X2,X3,X1) | p(s(bool,X0))) ) | $spl17),
  inference(resolution,[],[f45114,f11243])).
fof(f45114,plain,(
  ( ! [X152,X151,X153,X150] : (sP13(X150,X151) | sP13(X150,'F_0') | sP4(X152,X153,X151)) ) | $spl17),
  inference(resolution,[],[f20629,f1206])).
fof(f77242,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP4(X51,X52,X50) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X49) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49785,f1087])).
fof(f77239,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP4(X30,X31,X29) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X28) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49785,f1086])).
fof(f77238,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP4(X23,X24,X22) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X21) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49785,f1085])).
fof(f77237,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP4(X16,X17,X15) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X14) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49785,f1083])).
fof(f77235,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP4(X2,X3,X1) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X0) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49785,f1081])).
fof(f77177,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X26) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X28)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl48),
  inference(forward_demodulation,[],[f77092,f1529])).
fof(f77092,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X28)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl48),
  inference(superposition,[],[f1963,f1297])).
fof(f77176,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl48),
  inference(forward_demodulation,[],[f77091,f1161])).
fof(f77091,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl48),
  inference(superposition,[],[f1963,f1152])).
fof(f76916,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP1(X1,X2,X3)) ) | $spl538),
  inference(cnf_transformation,[],[f76916_D])).
fof(f76916_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP1(X1,X2,X3)) ) <=> ~$spl538),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl538])])).
fof(f76720,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP1(X707,X708,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X706) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49738,f1535])).
fof(f49738,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP1(X1,X2,X3) | p(s(bool,X0))) ) | $spl17),
  inference(resolution,[],[f45092,f11243])).
fof(f45092,plain,(
  ( ! [X74,X72,X75,X73] : (sP13(X72,X73) | sP13(X72,'F_0') | sP1(X73,X74,X75)) ) | $spl17),
  inference(resolution,[],[f20629,f1102])).
fof(f76609,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP1(X50,X51,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X49) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49738,f1087])).
fof(f76606,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP1(X29,X30,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X28) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49738,f1086])).
fof(f76605,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP1(X22,X23,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X21) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49738,f1085])).
fof(f76604,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP1(X15,X16,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X14) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49738,f1083])).
fof(f76602,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP1(X1,X2,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X0) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49738,f1081])).
fof(f49352,plain,(
  ( ! [X10,X8,X11] : (sP3(X10,X8,X11) | ~sP0(X11,X8,X10) | ~sP2(X10,X11,X8) | p(s(bool,X8))) ) | $spl448),
  inference(cnf_transformation,[],[f49352_D])).
fof(f49352_D,plain,(
  ( ! [X10,X8,X11] : (sP3(X10,X8,X11) | ~sP0(X11,X8,X10) | ~sP2(X10,X11,X8) | p(s(bool,X8))) ) <=> ~$spl448),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl448])])).
fof(f76914,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X8)) | sP3(X10,X9,X11) | p(s(bool,X9)) | ~sP2(X10,X11,X9) | ~sP0(X11,X9,X10)) ) | $spl17),
  inference(subsumption_resolution,[],[f76600,f1327])).
fof(f76600,plain,(
  ( ! [X10,X8,X11,X9] : (sP13(X8,X9) | p(s(bool,X8)) | sP3(X10,X9,X11) | p(s(bool,X9)) | ~sP2(X10,X11,X9) | ~sP0(X11,X9,X10)) ) | $spl17),
  inference(resolution,[],[f49738,f1093])).
fof(f1093,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X1)) | ~sP2(X0,X2,X1) | ~sP1(X1,X2,X0) | ~sP0(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f857])).
fof(f857,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | (sP0(X2,X1,X0) & sP1(X1,X2,X0) & sP2(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP0(X2,X1,X0) | ~sP1(X1,X2,X0) | ~sP2(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f856])).
fof(f856,plain,(
  ! [X2,X1,X0] : ((~sP3(X2,X1,X0) | (sP0(X0,X1,X2) & sP1(X1,X0,X2) & sP2(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP0(X0,X1,X2) | ~sP1(X1,X0,X2) | ~sP2(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP3(X2,X1,X0)))),
  inference(flattening,[],[f855])).
fof(f855,plain,(
  ! [X2,X1,X0] : ((~sP3(X2,X1,X0) | (sP0(X0,X1,X2) & sP1(X1,X0,X2) & sP2(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP0(X0,X1,X2) | ~sP1(X1,X0,X2) | ~sP2(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP3(X2,X1,X0)))),
  inference(nnf_transformation,[],[f831])).
fof(f831,plain,(
  ! [X2,X1,X0] : (sP3(X2,X1,X0) <=> (sP0(X0,X1,X2) & sP1(X1,X0,X2) & sP2(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f76554,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58)))) ) | $spl46),
  inference(forward_demodulation,[],[f76553,f1161])).
fof(f76553,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl46),
  inference(forward_demodulation,[],[f76356,f1161])).
fof(f76356,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl46),
  inference(superposition,[],[f1959,f1520])).
fof(f76540,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X26) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X28)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f76340,f1528])).
fof(f76340,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X26))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X28)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl46),
  inference(superposition,[],[f1959,f1297])).
fof(f76539,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X25))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl46),
  inference(forward_demodulation,[],[f76339,f1161])).
fof(f76339,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X25))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl46),
  inference(superposition,[],[f1959,f1152])).
fof(f76283,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP1(X2,X1,X3)) ) | $spl536),
  inference(cnf_transformation,[],[f76283_D])).
fof(f76283_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP1(X2,X1,X3)) ) <=> ~$spl536),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl536])])).
fof(f76088,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP1(X708,X707,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X706) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49692,f1535])).
fof(f49692,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP1(X2,X1,X3) | p(s(bool,X0))) ) | $spl17),
  inference(resolution,[],[f45091,f11243])).
fof(f45091,plain,(
  ( ! [X70,X68,X71,X69] : (sP13(X68,X69) | sP13(X68,'F_0') | sP1(X70,X69,X71)) ) | $spl17),
  inference(resolution,[],[f20629,f1101])).
fof(f75977,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP1(X51,X50,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X49) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49692,f1087])).
fof(f75974,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP1(X30,X29,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X28) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49692,f1086])).
fof(f75973,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP1(X23,X22,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X21) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49692,f1085])).
fof(f75972,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP1(X16,X15,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X14) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49692,f1083])).
fof(f75970,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP1(X2,X1,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X0) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49692,f1081])).
fof(f75689,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl31),
  inference(resolution,[],[f1896,f1535])).
fof(f75577,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X23) != s(bool,X25)) ) | $spl31),
  inference(resolution,[],[f1896,f1087])).
fof(f75575,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl31),
  inference(resolution,[],[f1896,f1086])).
fof(f75573,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl31),
  inference(resolution,[],[f1896,f1085])).
fof(f75572,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X8) != s(bool,X10)) ) | $spl31),
  inference(resolution,[],[f1896,f1083])).
fof(f75570,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl31),
  inference(resolution,[],[f1896,f1081])).
fof(f75568,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl31),
  inference(resolution,[],[f1896,f1352])).
fof(f75835,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl31),
  inference(forward_demodulation,[],[f75567,f1155])).
fof(f75567,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl31),
  inference(resolution,[],[f1896,f1349])).
fof(f75527,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP2(X1,X2,X3)) ) | $spl528),
  inference(cnf_transformation,[],[f75527_D])).
fof(f75527_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP2(X1,X2,X3)) ) <=> ~$spl528),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl528])])).
fof(f75332,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP2(X707,X708,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X706) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49645,f1535])).
fof(f49645,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP2(X1,X2,X3) | p(s(bool,X0))) ) | $spl17),
  inference(resolution,[],[f45089,f11243])).
fof(f45089,plain,(
  ( ! [X61,X62,X60,X63] : (sP13(X60,X61) | sP13(X60,'F_0') | sP2(X61,X62,X63)) ) | $spl17),
  inference(resolution,[],[f20629,f1098])).
fof(f75221,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP2(X50,X51,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X49) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49645,f1087])).
fof(f75218,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP2(X29,X30,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X28) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49645,f1086])).
fof(f75217,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP2(X22,X23,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X21) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49645,f1085])).
fof(f75216,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP2(X15,X16,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X14) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49645,f1083])).
fof(f75214,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP2(X1,X2,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X0) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49645,f1081])).
fof(f49239,plain,(
  ( ! [X14,X12,X15] : (sP3(X12,X14,X15) | ~sP0(X15,X14,X12) | ~sP1(X14,X15,X12) | p(s(bool,X12))) ) | $spl446),
  inference(cnf_transformation,[],[f49239_D])).
fof(f49239_D,plain,(
  ( ! [X14,X12,X15] : (sP3(X12,X14,X15) | ~sP0(X15,X14,X12) | ~sP1(X14,X15,X12) | p(s(bool,X12))) ) <=> ~$spl446),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl446])])).
fof(f75526,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,X12)) | sP3(X13,X14,X15) | p(s(bool,X13)) | ~sP1(X14,X15,X13) | ~sP0(X15,X14,X13)) ) | $spl17),
  inference(subsumption_resolution,[],[f75213,f1327])).
fof(f75213,plain,(
  ( ! [X14,X12,X15,X13] : (sP13(X12,X13) | p(s(bool,X12)) | sP3(X13,X14,X15) | p(s(bool,X13)) | ~sP1(X14,X15,X13) | ~sP0(X15,X14,X13)) ) | $spl17),
  inference(resolution,[],[f49645,f1094])).
fof(f1094,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X0)) | ~sP2(X0,X2,X1) | ~sP1(X1,X2,X0) | ~sP0(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f857])).
fof(f75157,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP2(X2,X1,X3)) ) | $spl526),
  inference(cnf_transformation,[],[f75157_D])).
fof(f75157_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X5) | p(s(bool,X5)) | sP2(X2,X1,X3)) ) <=> ~$spl526),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl526])])).
fof(f74964,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP2(X708,X707,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X706) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49600,f1535])).
fof(f49600,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP2(X2,X1,X3) | p(s(bool,X0))) ) | $spl17),
  inference(resolution,[],[f45088,f11243])).
fof(f45088,plain,(
  ( ! [X59,X57,X58,X56] : (sP13(X56,X57) | sP13(X56,'F_0') | sP2(X58,X57,X59)) ) | $spl17),
  inference(resolution,[],[f20629,f1097])).
fof(f74853,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP2(X51,X50,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X49) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49600,f1087])).
fof(f74850,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP2(X30,X29,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X28) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49600,f1086])).
fof(f74849,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP2(X23,X22,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X21) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49600,f1085])).
fof(f74848,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP2(X16,X15,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X14) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49600,f1083])).
fof(f74846,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP2(X2,X1,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X0) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49600,f1081])).
fof(f74789,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP8(X0,X2,X3)) ) | $spl524),
  inference(cnf_transformation,[],[f74789_D])).
fof(f74789_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP8(X0,X2,X3)) ) <=> ~$spl524),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl524])])).
fof(f74595,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP8(X706,X708,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X707) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49554,f1535])).
fof(f49554,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP8(X0,X2,X3) | p(s(bool,X1))) ) | $spl17),
  inference(resolution,[],[f44464,f11243])).
fof(f44464,plain,(
  ( ! [X277,X275,X276,X274] : (sP13(X274,X275) | sP13(X275,'F_0') | sP8(X274,X276,X277)) ) | $spl17),
  inference(resolution,[],[f20628,f1242])).
fof(f20628,plain,(
  ( ! [X312,X311] : (~p(s(bool,X312)) | sP13(X312,X311) | sP13(X311,'F_0')) ) | $spl17),
  inference(resolution,[],[f11245,f1329])).
fof(f74484,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP8(X49,X51,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X50) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49554,f1087])).
fof(f74481,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP8(X28,X30,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X29) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49554,f1086])).
fof(f74480,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP8(X21,X23,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X22) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49554,f1085])).
fof(f74479,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP8(X14,X16,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X15) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49554,f1083])).
fof(f74477,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP8(X0,X2,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X1) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49554,f1081])).
fof(f74419,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP8(X2,X0,X3)) ) | $spl522),
  inference(cnf_transformation,[],[f74419_D])).
fof(f74419_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP8(X2,X0,X3)) ) <=> ~$spl522),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl522])])).
fof(f74225,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP8(X708,X706,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X707) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49507,f1535])).
fof(f49507,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP8(X2,X0,X3) | p(s(bool,X1))) ) | $spl17),
  inference(resolution,[],[f44463,f11243])).
fof(f44463,plain,(
  ( ! [X271,X273,X270,X272] : (sP13(X270,X271) | sP13(X271,'F_0') | sP8(X272,X270,X273)) ) | $spl17),
  inference(resolution,[],[f20628,f1241])).
fof(f74114,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP8(X51,X49,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X50) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49507,f1087])).
fof(f74111,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP8(X30,X28,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X29) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49507,f1086])).
fof(f74110,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP8(X23,X21,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X22) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49507,f1085])).
fof(f74109,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP8(X16,X14,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X15) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49507,f1083])).
fof(f74107,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP8(X2,X0,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X1) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49507,f1081])).
fof(f74049,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP6(X0,X2,X3)) ) | $spl520),
  inference(cnf_transformation,[],[f74049_D])).
fof(f74049_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP6(X0,X2,X3)) ) <=> ~$spl520),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl520])])).
fof(f73857,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP6(X706,X708,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X707) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49462,f1535])).
fof(f49462,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP6(X0,X2,X3) | p(s(bool,X1))) ) | $spl17),
  inference(resolution,[],[f44450,f11243])).
fof(f44450,plain,(
  ( ! [X218,X220,X219,X221] : (sP13(X218,X219) | sP13(X219,'F_0') | sP6(X218,X220,X221)) ) | $spl17),
  inference(resolution,[],[f20628,f1225])).
fof(f73746,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP6(X49,X51,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X50) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49462,f1087])).
fof(f73743,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP6(X28,X30,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X29) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49462,f1086])).
fof(f73742,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP6(X21,X23,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X22) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49462,f1085])).
fof(f73741,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP6(X14,X16,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X15) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49462,f1083])).
fof(f73739,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP6(X0,X2,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X1) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49462,f1081])).
fof(f73681,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP4(X0,X2,X3)) ) | $spl518),
  inference(cnf_transformation,[],[f73681_D])).
fof(f73681_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP4(X0,X2,X3)) ) <=> ~$spl518),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl518])])).
fof(f73489,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP4(X706,X708,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X707) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49417,f1535])).
fof(f49417,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP4(X0,X2,X3) | p(s(bool,X1))) ) | $spl17),
  inference(resolution,[],[f44434,f11243])).
fof(f44434,plain,(
  ( ! [X156,X154,X157,X155] : (sP13(X154,X155) | sP13(X155,'F_0') | sP4(X154,X156,X157)) ) | $spl17),
  inference(resolution,[],[f20628,f1208])).
fof(f73378,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP4(X49,X51,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X50) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49417,f1087])).
fof(f73375,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP4(X28,X30,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X29) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49417,f1086])).
fof(f73374,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP4(X21,X23,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X22) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49417,f1085])).
fof(f73373,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP4(X14,X16,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X15) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49417,f1083])).
fof(f73371,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP4(X0,X2,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X1) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49417,f1081])).
fof(f73313,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP4(X2,X3,X0)) ) | $spl516),
  inference(cnf_transformation,[],[f73313_D])).
fof(f73313_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP4(X2,X3,X0)) ) <=> ~$spl516),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl516])])).
fof(f73120,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP4(X708,X709,X706) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X707) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49371,f1535])).
fof(f49371,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP4(X2,X3,X0) | p(s(bool,X1))) ) | $spl17),
  inference(resolution,[],[f44433,f11243])).
fof(f44433,plain,(
  ( ! [X152,X151,X153,X150] : (sP13(X150,X151) | sP13(X151,'F_0') | sP4(X152,X153,X150)) ) | $spl17),
  inference(resolution,[],[f20628,f1206])).
fof(f73009,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP4(X51,X52,X49) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X50) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49371,f1087])).
fof(f73006,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP4(X30,X31,X28) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X29) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49371,f1086])).
fof(f73005,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP4(X23,X24,X21) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X22) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49371,f1085])).
fof(f73004,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP4(X16,X17,X14) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X15) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49371,f1083])).
fof(f73002,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP4(X2,X3,X0) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X1) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49371,f1081])).
fof(f72944,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP1(X0,X2,X3)) ) | $spl514),
  inference(cnf_transformation,[],[f72944_D])).
fof(f72944_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP1(X0,X2,X3)) ) <=> ~$spl514),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl514])])).
fof(f72749,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP1(X706,X708,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X707) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49323,f1535])).
fof(f49323,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP1(X0,X2,X3) | p(s(bool,X1))) ) | $spl17),
  inference(resolution,[],[f44411,f11243])).
fof(f44411,plain,(
  ( ! [X74,X72,X75,X73] : (sP13(X72,X73) | sP13(X73,'F_0') | sP1(X72,X74,X75)) ) | $spl17),
  inference(resolution,[],[f20628,f1102])).
fof(f72638,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP1(X49,X51,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X50) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49323,f1087])).
fof(f72635,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP1(X28,X30,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X29) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49323,f1086])).
fof(f72634,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP1(X21,X23,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X22) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49323,f1085])).
fof(f72633,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP1(X14,X16,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X15) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49323,f1083])).
fof(f72631,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP1(X0,X2,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X1) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49323,f1081])).
fof(f72942,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X9)) | sP3(X10,X8,X11) | p(s(bool,X8)) | ~sP2(X10,X11,X8) | ~sP0(X11,X8,X10)) ) | $spl17),
  inference(subsumption_resolution,[],[f72629,f1327])).
fof(f72629,plain,(
  ( ! [X10,X8,X11,X9] : (sP13(X8,X9) | p(s(bool,X9)) | sP3(X10,X8,X11) | p(s(bool,X8)) | ~sP2(X10,X11,X8) | ~sP0(X11,X8,X10)) ) | $spl17),
  inference(resolution,[],[f49323,f1093])).
fof(f72574,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP1(X2,X0,X3)) ) | $spl512),
  inference(cnf_transformation,[],[f72574_D])).
fof(f72574_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP1(X2,X0,X3)) ) <=> ~$spl512),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl512])])).
fof(f72380,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP1(X708,X706,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X707) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49277,f1535])).
fof(f49277,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP1(X2,X0,X3) | p(s(bool,X1))) ) | $spl17),
  inference(resolution,[],[f44410,f11243])).
fof(f44410,plain,(
  ( ! [X70,X68,X71,X69] : (sP13(X68,X69) | sP13(X69,'F_0') | sP1(X70,X68,X71)) ) | $spl17),
  inference(resolution,[],[f20628,f1101])).
fof(f72269,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP1(X51,X49,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X50) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49277,f1087])).
fof(f72266,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP1(X30,X28,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X29) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49277,f1086])).
fof(f72265,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP1(X23,X21,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X22) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49277,f1085])).
fof(f72264,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP1(X16,X14,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X15) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49277,f1083])).
fof(f72262,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP1(X2,X0,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X1) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49277,f1081])).
fof(f72205,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP2(X0,X2,X3)) ) | $spl510),
  inference(cnf_transformation,[],[f72205_D])).
fof(f72205_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP2(X0,X2,X3)) ) <=> ~$spl510),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl510])])).
fof(f72010,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP2(X706,X708,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X707) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49209,f1535])).
fof(f49209,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP2(X0,X2,X3) | p(s(bool,X1))) ) | $spl17),
  inference(resolution,[],[f44408,f11243])).
fof(f44408,plain,(
  ( ! [X61,X62,X60,X63] : (sP13(X60,X61) | sP13(X61,'F_0') | sP2(X60,X62,X63)) ) | $spl17),
  inference(resolution,[],[f20628,f1098])).
fof(f71899,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP2(X49,X51,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X50) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49209,f1087])).
fof(f71896,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP2(X28,X30,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X29) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49209,f1086])).
fof(f71895,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP2(X21,X23,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X22) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49209,f1085])).
fof(f71894,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP2(X14,X16,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X15) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49209,f1083])).
fof(f71892,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP2(X0,X2,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X1) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49209,f1081])).
fof(f72204,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,X13)) | sP3(X12,X14,X15) | p(s(bool,X12)) | ~sP1(X14,X15,X12) | ~sP0(X15,X14,X12)) ) | $spl17),
  inference(subsumption_resolution,[],[f71891,f1327])).
fof(f71891,plain,(
  ( ! [X14,X12,X15,X13] : (sP13(X12,X13) | p(s(bool,X13)) | sP3(X12,X14,X15) | p(s(bool,X12)) | ~sP1(X14,X15,X12) | ~sP0(X15,X14,X12)) ) | $spl17),
  inference(resolution,[],[f49209,f1094])).
fof(f71835,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP2(X2,X0,X3)) ) | $spl508),
  inference(cnf_transformation,[],[f71835_D])).
fof(f71835_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X5) | p(s(bool,X5)) | sP2(X2,X0,X3)) ) <=> ~$spl508),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl508])])).
fof(f71642,plain,(
  ( ! [X707,X708,X710,X706,X709,X711] : (sP13(X706,X707) | sP2(X708,X706,X709) | p(s(bool,X710)) | p(s(bool,X711)) | s(bool,X707) != s(bool,X711)) ) | $spl17),
  inference(resolution,[],[f49164,f1535])).
fof(f49164,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,X1) | sP2(X2,X0,X3) | p(s(bool,X1))) ) | $spl17),
  inference(resolution,[],[f44407,f11243])).
fof(f44407,plain,(
  ( ! [X59,X57,X58,X56] : (sP13(X56,X57) | sP13(X57,'F_0') | sP2(X58,X56,X59)) ) | $spl17),
  inference(resolution,[],[f20628,f1097])).
fof(f71531,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (sP13(X49,X50) | sP2(X51,X49,X52) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X50) != s(bool,X53) | s(bool,X54) != s(bool,X55)) ) | $spl17),
  inference(resolution,[],[f49164,f1087])).
fof(f71528,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (sP13(X28,X29) | sP2(X30,X28,X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X29) != s(bool,X34)) ) | $spl17),
  inference(resolution,[],[f49164,f1086])).
fof(f71527,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (sP13(X21,X22) | sP2(X23,X21,X24) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X22) != s(bool,X26)) ) | $spl17),
  inference(resolution,[],[f49164,f1085])).
fof(f71526,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (sP13(X14,X15) | sP2(X16,X14,X17) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X15) != s(bool,X18) | s(bool,X19) != s(bool,X20)) ) | $spl17),
  inference(resolution,[],[f49164,f1083])).
fof(f71524,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1) | sP2(X2,X0,X3) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X1) != s(bool,X5)) ) | $spl17),
  inference(resolution,[],[f49164,f1081])).
fof(f70957,plain,(
  ( ! [X66,X65,X63] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num',X66)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))))))))) ) | $spl504),
  inference(cnf_transformation,[],[f70957_D])).
fof(f70957_D,plain,(
  ( ! [X66,X65,X63] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num',X66)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))))))))) ) <=> ~$spl504),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl504])])).
fof(f71403,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X64) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num',X66)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))))))))) )),
  inference(forward_demodulation,[],[f71323,f1529])).
fof(f71323,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num',X66)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))))))))) )),
  inference(superposition,[],[f28385,f1297])).
fof(f28385,plain,(
  ( ! [X64,X63] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num','const.num.SUC_1'(s('type.num.num',X63)))))) )),
  inference(forward_demodulation,[],[f28384,f1161])).
fof(f28384,plain,(
  ( ! [X64,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num','const.num.SUC_1'(s('type.num.num',X63)))))) )),
  inference(forward_demodulation,[],[f28383,f19313])).
fof(f28383,plain,(
  ( ! [X64,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X63),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(subsumption_resolution,[],[f27797,f1146])).
fof(f1146,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f543])).
fof(f543,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(flattening,[],[f542])).
fof(f542,plain,(
  ! [X0] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f343])).
fof(f343,axiom,(
  ! [X16] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X16)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.SUC_NOT')).
fof(f27797,plain,(
  ( ! [X64,X63] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X63),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f19313,f1520])).
fof(f70955,plain,(
  ( ! [X61] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X61))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.num.SUC_1'(s('type.num.num',X61))))))) ) | $spl502),
  inference(cnf_transformation,[],[f70955_D])).
fof(f70955_D,plain,(
  ( ! [X61] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X61))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.num.SUC_1'(s('type.num.num',X61))))))) ) <=> ~$spl502),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl502])])).
fof(f71402,plain,(
  ( ! [X61,X62] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X61))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.num.SUC_1'(s('type.num.num',X61))))))) )),
  inference(forward_demodulation,[],[f71322,f1161])).
fof(f71322,plain,(
  ( ! [X61,X62] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X61))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.num.SUC_1'(s('type.num.num',X61))))))) )),
  inference(superposition,[],[f28385,f1152])).
fof(f70952,plain,(
  ( ! [X57] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X57)))))) ) | $spl500),
  inference(cnf_transformation,[],[f70952_D])).
fof(f70952_D,plain,(
  ( ! [X57] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X57)))))) ) <=> ~$spl500),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl500])])).
fof(f71401,plain,(
  ( ! [X59,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X59))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f71321,f1161])).
fof(f71321,plain,(
  ( ! [X59,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X59)))))) )),
  inference(superposition,[],[f28385,f1150])).
fof(f71400,plain,(
  ( ! [X57,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X57))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f71320,f1161])).
fof(f71320,plain,(
  ( ! [X57,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X57)))))) )),
  inference(superposition,[],[f28385,f1148])).
fof(f70970,plain,(
  ( ! [X111,X113] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.num.SUC_1'(s('type.num.num',X111)))))) ) | $spl506),
  inference(cnf_transformation,[],[f70970_D])).
fof(f70970_D,plain,(
  ( ! [X111,X113] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.num.SUC_1'(s('type.num.num',X111)))))) ) <=> ~$spl506),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl506])])).
fof(f70969,plain,(
  ( ! [X111,X112,X113] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.num.SUC_1'(s('type.num.num',X111))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X112)))) )),
  inference(forward_demodulation,[],[f70968,f1161])).
fof(f70968,plain,(
  ( ! [X111,X112,X113] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X112))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.num.SUC_1'(s('type.num.num',X111)))))) )),
  inference(forward_demodulation,[],[f70774,f1161])).
fof(f70774,plain,(
  ( ! [X111,X112,X113] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X112))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.num.SUC_1'(s('type.num.num',X111)))))) )),
  inference(superposition,[],[f28382,f1520])).
fof(f28382,plain,(
  ( ! [X61,X62] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X61))),s('type.num.num',X62)))) )),
  inference(forward_demodulation,[],[f28381,f1161])).
fof(f28381,plain,(
  ( ! [X61,X62] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X61))),s('type.num.num',X62)))) )),
  inference(forward_demodulation,[],[f28380,f19313])).
fof(f28380,plain,(
  ( ! [X61,X62] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X62)))) )),
  inference(subsumption_resolution,[],[f27796,f1146])).
fof(f27796,plain,(
  ( ! [X61,X62] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X61))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X62)))) )),
  inference(superposition,[],[f19313,f1519])).
fof(f70956,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X64) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num',X66)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))))))))) )),
  inference(forward_demodulation,[],[f70758,f1528])).
fof(f70758,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X64))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num',X66)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))))))))) )),
  inference(superposition,[],[f28382,f1297])).
fof(f70954,plain,(
  ( ! [X61,X62] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X62))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X61))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.num.SUC_1'(s('type.num.num',X61))))))) )),
  inference(forward_demodulation,[],[f70757,f1161])).
fof(f70757,plain,(
  ( ! [X61,X62] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X62))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X61))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.num.SUC_1'(s('type.num.num',X61))))))) )),
  inference(superposition,[],[f28382,f1152])).
fof(f70953,plain,(
  ( ! [X59,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X59))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60)))) )),
  inference(forward_demodulation,[],[f70756,f1161])).
fof(f70756,plain,(
  ( ! [X59,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X59)))))) )),
  inference(superposition,[],[f28382,f1150])).
fof(f70951,plain,(
  ( ! [X57,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X57))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58)))) )),
  inference(forward_demodulation,[],[f70755,f1161])).
fof(f70755,plain,(
  ( ! [X57,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X57)))))) )),
  inference(superposition,[],[f28382,f1148])).
fof(f22173,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl324),
  inference(cnf_transformation,[],[f22173_D])).
fof(f22173_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl324),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl324])])).
fof(f70432,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl310),
  inference(forward_demodulation,[],[f70323,f1161])).
fof(f70323,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl310),
  inference(superposition,[],[f19948,f1152])).
fof(f19948,plain,(
  ( ! [X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl310),
  inference(cnf_transformation,[],[f19948_D])).
fof(f19948_D,plain,(
  ( ! [X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl310])])).
fof(f69856,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60)))) ) | $spl308),
  inference(forward_demodulation,[],[f69855,f1161])).
fof(f69855,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl308),
  inference(forward_demodulation,[],[f69625,f1161])).
fof(f69625,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X60))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl308),
  inference(superposition,[],[f19944,f1520])).
fof(f69833,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl308),
  inference(forward_demodulation,[],[f69609,f1161])).
fof(f69609,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X28))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl308),
  inference(superposition,[],[f19944,f1152])).
fof(f69497,plain,(
  ( ! [X28,X29,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X27) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X28),s('type.num.num',X29)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl200),
  inference(forward_demodulation,[],[f69386,f1529])).
fof(f69386,plain,(
  ( ! [X28,X29,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X28),s('type.num.num',X29)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl200),
  inference(superposition,[],[f13066,f1297])).
fof(f69495,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl200),
  inference(forward_demodulation,[],[f69385,f1161])).
fof(f69385,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl200),
  inference(superposition,[],[f13066,f1152])).
fof(f13066,plain,(
  ( ! [X59] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl200),
  inference(cnf_transformation,[],[f13066_D])).
fof(f13066_D,plain,(
  ( ! [X59] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f69202,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58)))) ) | $spl198),
  inference(forward_demodulation,[],[f69201,f1161])).
fof(f69201,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl198),
  inference(forward_demodulation,[],[f68972,f1161])).
fof(f68972,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl198),
  inference(superposition,[],[f13063,f1520])).
fof(f69183,plain,(
  ( ! [X28,X29,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X27) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X28),s('type.num.num',X29)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl198),
  inference(forward_demodulation,[],[f68957,f1528])).
fof(f68957,plain,(
  ( ! [X28,X29,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X28),s('type.num.num',X29)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl198),
  inference(superposition,[],[f13063,f1297])).
fof(f69181,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl198),
  inference(forward_demodulation,[],[f68956,f1161])).
fof(f68956,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X26))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl198),
  inference(superposition,[],[f13063,f1152])).
fof(f68753,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28)))) ) | $spl494),
  inference(cnf_transformation,[],[f68753_D])).
fof(f68753_D,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28)))) ) <=> ~$spl494),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl494])])).
fof(f68776,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60)))) ) | $spl22),
  inference(forward_demodulation,[],[f68775,f1161])).
fof(f68775,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl22),
  inference(forward_demodulation,[],[f68554,f1161])).
fof(f68554,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X60))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl22),
  inference(superposition,[],[f31121,f1520])).
fof(f31121,plain,(
  ( ! [X491] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X491)))) ) | $spl22),
  inference(forward_demodulation,[],[f31120,f1161])).
fof(f31120,plain,(
  ( ! [X491] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X491)))) ) | $spl22),
  inference(subsumption_resolution,[],[f31119,f1837])).
fof(f31119,plain,(
  ( ! [X491] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X491)))) )),
  inference(forward_demodulation,[],[f31118,f1514])).
fof(f1514,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f762])).
fof(f762,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f440])).
fof(f440,axiom,(
  ! [X16] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_lt|split|0')).
fof(f31118,plain,(
  ( ! [X491] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X491)))) )),
  inference(forward_demodulation,[],[f30456,f1161])).
fof(f30456,plain,(
  ( ! [X491] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X491)))) )),
  inference(superposition,[],[f1416,f19315])).
fof(f19315,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f1480,f1156])).
fof(f1480,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f735])).
fof(f735,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))),
  inference(rectify,[],[f248])).
fof(f248,axiom,(
  ! [X16] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X16)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.EXP_|49||split|0')).
fof(f1416,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f1044])).
fof(f19944,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28)))) ) | $spl308),
  inference(cnf_transformation,[],[f19944_D])).
fof(f19944_D,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28)))) ) <=> ~$spl308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl308])])).
fof(f68774,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58)))) ) | $spl22),
  inference(forward_demodulation,[],[f68773,f1161])).
fof(f68773,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) ) | $spl22),
  inference(forward_demodulation,[],[f68553,f1161])).
fof(f68553,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) ) | $spl22),
  inference(superposition,[],[f31121,f1519])).
fof(f68752,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl22),
  inference(forward_demodulation,[],[f68538,f1161])).
fof(f68538,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X28))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl22),
  inference(superposition,[],[f31121,f1152])).
fof(f67345,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))) ) | $spl492),
  inference(cnf_transformation,[],[f67345_D])).
fof(f67345_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))) ) <=> ~$spl492),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl492])])).
fof(f67246,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | ~p(s(bool,X237)) | s(bool,X237) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))) ) | $spl93),
  inference(resolution,[],[f5354,f1535])).
fof(f67134,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))))) | s(bool,X21) != s(bool,X23)) ) | $spl93),
  inference(resolution,[],[f5354,f1087])).
fof(f67132,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))) ) | $spl93),
  inference(resolution,[],[f5354,f1086])).
fof(f67130,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))) ) | $spl93),
  inference(resolution,[],[f5354,f1085])).
fof(f67129,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))))) | s(bool,X6) != s(bool,X8)) ) | $spl93),
  inference(resolution,[],[f5354,f1083])).
fof(f67127,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))) ) | $spl93),
  inference(resolution,[],[f5354,f1081])).
fof(f67000,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl490),
  inference(cnf_transformation,[],[f67000_D])).
fof(f67000_D,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl490),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl490])])).
fof(f66899,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl89),
  inference(resolution,[],[f5348,f1535])).
fof(f66787,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X23) != s(bool,X25)) ) | $spl89),
  inference(resolution,[],[f5348,f1087])).
fof(f66785,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl89),
  inference(resolution,[],[f5348,f1086])).
fof(f66783,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl89),
  inference(resolution,[],[f5348,f1085])).
fof(f66782,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X8) != s(bool,X10)) ) | $spl89),
  inference(resolution,[],[f5348,f1083])).
fof(f66780,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl89),
  inference(resolution,[],[f5348,f1081])).
fof(f66047,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | p(s(bool,X237)) | s(bool,X237) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl42),
  inference(resolution,[],[f1944,f1535])).
fof(f65936,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X24) != s(bool,X25)) ) | $spl42),
  inference(resolution,[],[f1944,f1087])).
fof(f65933,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | ~p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl42),
  inference(resolution,[],[f1944,f1086])).
fof(f65932,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl42),
  inference(resolution,[],[f1944,f1085])).
fof(f65931,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X9) != s(bool,X10)) ) | $spl42),
  inference(resolution,[],[f1944,f1083])).
fof(f65929,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl42),
  inference(resolution,[],[f1944,f1081])).
fof(f66152,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl42),
  inference(forward_demodulation,[],[f66151,f1160])).
fof(f66151,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl42),
  inference(forward_demodulation,[],[f65928,f1160])).
fof(f65928,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl42),
  inference(resolution,[],[f1944,f1362])).
fof(f4555,plain,(
  ( ! [X56] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X56),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl72),
  inference(cnf_transformation,[],[f4555_D])).
fof(f4555_D,plain,(
  ( ! [X56] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X56),s('type.list.list'(sK14),'const.list.NIL_0')))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f4561,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X60),s('type.list.list'(sK14),X61)))))) ) | $spl78),
  inference(cnf_transformation,[],[f4561_D])).
fof(f4561_D,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X60),s('type.list.list'(sK14),X61)))))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f65827,plain,(
  ( ! [X41,X42,X40] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X40),s('type.list.list'(sK14),X41))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X42),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f65807,f1161])).
fof(f65807,plain,(
  ( ! [X41,X42,X40] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X42),s('type.list.list'(sK14),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X40),s('type.list.list'(sK14),X41)))))) ) | $spl0),
  inference(superposition,[],[f1545,f1467])).
fof(f1467,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f1064])).
fof(f1064,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f723])).
fof(f723,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f722])).
fof(f722,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.list.LENGTH_NIL')).
fof(f65826,plain,(
  ( ! [X39,X37,X38] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X37),s('type.list.list'(sK14),X38))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X39),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f65806,f1161])).
fof(f65806,plain,(
  ( ! [X39,X37,X38] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X39),s('type.list.list'(sK14),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X37),s('type.list.list'(sK14),X38)))))) ) | $spl0),
  inference(superposition,[],[f1545,f1465])).
fof(f1465,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f1063])).
fof(f1063,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f721])).
fof(f721,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f720])).
fof(f720,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f130])).
fof(f130,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.list.LENGTH_NIL_SYM')).
fof(f65507,plain,(
  ( ! [X239,X240] : (p(s(bool,X239)) | p(s(bool,X240)) | s(bool,X240) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1535])).
fof(f65396,plain,(
  ( ! [X28,X26,X27] : (p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X27) != s(bool,X28)) ) | $spl2),
  inference(resolution,[],[f1546,f1087])).
fof(f65393,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X19) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1086])).
fof(f65392,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X14) != s(bool,X16) | s(bool,X15) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1085])).
fof(f65391,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X12) != s(bool,X13)) ) | $spl2),
  inference(resolution,[],[f1546,f1083])).
fof(f65389,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,X5)) | p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | s(bool,X6) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1081])).
fof(f65387,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl2),
  inference(resolution,[],[f1546,f1357])).
fof(f65386,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl2),
  inference(resolution,[],[f1546,f1357])).
fof(f65385,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(resolution,[],[f1546,f1352])).
fof(f65327,plain,(
  $false | ($spl22 | $spl35 | $spl43)),
  inference(subsumption_resolution,[],[f65326,f1837])).
fof(f65326,plain,(
  ~p(s(bool,'T_0')) | ($spl35 | $spl43)),
  inference(forward_demodulation,[],[f65325,f1453])).
fof(f65325,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ($spl35 | $spl43)),
  inference(subsumption_resolution,[],[f65100,f1908])).
fof(f65100,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl43),
  inference(resolution,[],[f1943,f1352])).
fof(f1943,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl43),
  inference(cnf_transformation,[],[f1943_D])).
fof(f1943_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f65323,plain,(
  $false | ($spl29 | $spl43)),
  inference(subsumption_resolution,[],[f65097,f1890])).
fof(f65097,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl43),
  inference(resolution,[],[f1943,f1322])).
fof(f65322,plain,(
  $false | ($spl29 | $spl43)),
  inference(subsumption_resolution,[],[f65096,f1890])).
fof(f65096,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl43),
  inference(resolution,[],[f1943,f1320])).
fof(f64918,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | p(s(bool,X237)) | s(bool,X237) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl42),
  inference(resolution,[],[f1944,f1535])).
fof(f64807,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X24) != s(bool,X25)) ) | $spl42),
  inference(resolution,[],[f1944,f1087])).
fof(f64804,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | ~p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl42),
  inference(resolution,[],[f1944,f1086])).
fof(f64803,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl42),
  inference(resolution,[],[f1944,f1085])).
fof(f64802,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X9) != s(bool,X10)) ) | $spl42),
  inference(resolution,[],[f1944,f1083])).
fof(f64800,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl42),
  inference(resolution,[],[f1944,f1081])).
fof(f65023,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl42),
  inference(forward_demodulation,[],[f65022,f1160])).
fof(f65022,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl42),
  inference(forward_demodulation,[],[f64799,f1160])).
fof(f64799,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl42),
  inference(resolution,[],[f1944,f1362])).
fof(f64710,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) != s(bool,X2) | ~p(s(bool,X2))) ) | $spl484),
  inference(cnf_transformation,[],[f64710_D])).
fof(f64710_D,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) != s(bool,X2) | ~p(s(bool,X2))) ) <=> ~$spl484),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl484])])).
fof(f64547,plain,(
  ( ! [X356,X357,X355] : (s(bool,'T_0') = s(bool,X355) | p(s(bool,X356)) | ~p(s(bool,X357)) | s(bool,X355) != s(bool,X357)) ) | $spl22),
  inference(resolution,[],[f17383,f1535])).
fof(f17383,plain,(
  ( ! [X54] : (~p(s(bool,X54)) | s(bool,'T_0') = s(bool,X54)) ) | $spl22),
  inference(resolution,[],[f1837,f1124])).
fof(f1124,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f872])).
fof(f872,plain,(
  ! [X0,X1] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X0)) & p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X1)))) & (((~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X1)))) | s(bool,X0) = s(bool,X1)))),
  inference(flattening,[],[f871])).
fof(f871,plain,(
  ! [X0,X1] : ((s(bool,X0) != s(bool,X1) | ((p(s(bool,X0)) & p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X1))))) & (((~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X1)))) | s(bool,X0) = s(bool,X1)))),
  inference(nnf_transformation,[],[f529])).
fof(f529,plain,(
  ! [X0,X1] : (s(bool,X0) = s(bool,X1) <=> ((p(s(bool,X0)) & p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X1)))))),
  inference(flattening,[],[f528])).
fof(f528,plain,(
  ! [X0,X1] : (s(bool,X0) = s(bool,X1) <=> ((p(s(bool,X0)) & p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X1)))))),
  inference(rectify,[],[f423])).
fof(f423,axiom,(
  ! [X11,X12] : (s(bool,X11) = s(bool,X12) <=> ((p(s(bool,X11)) & p(s(bool,X12))) | (~p(s(bool,X11)) & ~p(s(bool,X12)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.bool.EQ_EXPAND')).
fof(f64435,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'T_0') = s(bool,X28) | ~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X30) | s(bool,X29) != s(bool,X31)) ) | $spl22),
  inference(resolution,[],[f17383,f1087])).
fof(f64433,plain,(
  ( ! [X23,X21,X22,X20] : (s(bool,'T_0') = s(bool,X20) | p(s(bool,X21)) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X20) != s(bool,X22)) ) | $spl22),
  inference(resolution,[],[f17383,f1086])).
fof(f64431,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,X12) | p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl22),
  inference(resolution,[],[f17383,f1085])).
fof(f64430,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,X8) | ~p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X10) | s(bool,X9) != s(bool,X11)) ) | $spl22),
  inference(resolution,[],[f17383,f1083])).
fof(f64428,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl22),
  inference(resolution,[],[f17383,f1081])).
fof(f64274,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | ~p(s(bool,X237)) | s(bool,X237) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl33),
  inference(resolution,[],[f1902,f1535])).
fof(f64162,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X21) != s(bool,X23)) ) | $spl33),
  inference(resolution,[],[f1902,f1087])).
fof(f64160,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl33),
  inference(resolution,[],[f1902,f1086])).
fof(f64158,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl33),
  inference(resolution,[],[f1902,f1085])).
fof(f64157,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X6) != s(bool,X8)) ) | $spl33),
  inference(resolution,[],[f1902,f1083])).
fof(f64155,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl33),
  inference(resolution,[],[f1902,f1081])).
fof(f64093,plain,(
  $false | ($spl32 | $spl191)),
  inference(subsumption_resolution,[],[f64092,f1901])).
fof(f1901,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl32),
  inference(cnf_transformation,[],[f1901_D])).
fof(f1901_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f64092,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ($spl32 | $spl191)),
  inference(forward_demodulation,[],[f64091,f1161])).
fof(f64091,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ($spl32 | $spl191)),
  inference(subsumption_resolution,[],[f64090,f10895])).
fof(f64090,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl32),
  inference(forward_demodulation,[],[f64089,f1161])).
fof(f64089,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl32),
  inference(forward_demodulation,[],[f63991,f1469])).
fof(f1469,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f724])).
fof(f724,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f481])).
fof(f481,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.list.LENGTH|split|0')).
fof(f63991,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl32),
  inference(superposition,[],[f1901,f1463])).
fof(f1463,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f1062])).
fof(f1062,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f719])).
fof(f719,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f718])).
fof(f718,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f126])).
fof(f126,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.quantHeuristics.LIST_LENGTH_COMPARE_|49||split|2')).
fof(f64053,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl482),
  inference(cnf_transformation,[],[f64053_D])).
fof(f64053_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) <=> ~$spl482),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl482])])).
fof(f63952,plain,(
  ( ! [X235,X234] : (p(s(bool,X234)) | p(s(bool,X235)) | s(bool,X235) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl32),
  inference(resolution,[],[f1901,f1535])).
fof(f63841,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X22) != s(bool,X23)) ) | $spl32),
  inference(resolution,[],[f1901,f1087])).
fof(f63838,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl32),
  inference(resolution,[],[f1901,f1086])).
fof(f63837,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl32),
  inference(resolution,[],[f1901,f1085])).
fof(f63836,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X7) != s(bool,X8)) ) | $spl32),
  inference(resolution,[],[f1901,f1083])).
fof(f63834,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl32),
  inference(resolution,[],[f1901,f1081])).
fof(f63679,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | ~p(s(bool,X237)) | s(bool,X237) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl33),
  inference(resolution,[],[f1902,f1535])).
fof(f63567,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X21) != s(bool,X23)) ) | $spl33),
  inference(resolution,[],[f1902,f1087])).
fof(f63565,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl33),
  inference(resolution,[],[f1902,f1086])).
fof(f63563,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl33),
  inference(resolution,[],[f1902,f1085])).
fof(f63562,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X6) != s(bool,X8)) ) | $spl33),
  inference(resolution,[],[f1902,f1083])).
fof(f63560,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl33),
  inference(resolution,[],[f1902,f1081])).
fof(f63487,plain,(
  ( ! [X2,X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) | $spl478),
  inference(cnf_transformation,[],[f63487_D])).
fof(f63487_D,plain,(
  ( ! [X2,X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) <=> ~$spl478),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl478])])).
fof(f63306,plain,(
  ( ! [X352,X354,X353] : (s(bool,'F_0') = s(bool,X352) | p(s(bool,X353)) | p(s(bool,X354)) | s(bool,X352) != s(bool,X354)) ) | $spl17),
  inference(resolution,[],[f11164,f1535])).
fof(f11164,plain,(
  ( ! [X62] : (p(s(bool,X62)) | s(bool,'F_0') = s(bool,X62)) ) | $spl17),
  inference(resolution,[],[f1827,f1125])).
fof(f1125,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f872])).
fof(f63195,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'F_0') = s(bool,X28) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X29) | s(bool,X30) != s(bool,X31)) ) | $spl17),
  inference(resolution,[],[f11164,f1087])).
fof(f63192,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'F_0') = s(bool,X16) | p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X16) != s(bool,X19)) ) | $spl17),
  inference(resolution,[],[f11164,f1086])).
fof(f63191,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') = s(bool,X12) | p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl17),
  inference(resolution,[],[f11164,f1085])).
fof(f63190,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') = s(bool,X8) | p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X9) | s(bool,X10) != s(bool,X11)) ) | $spl17),
  inference(resolution,[],[f11164,f1083])).
fof(f63188,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl17),
  inference(resolution,[],[f11164,f1081])).
fof(f63014,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl29),
  inference(resolution,[],[f1890,f1535])).
fof(f62902,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X23) != s(bool,X25)) ) | $spl29),
  inference(resolution,[],[f1890,f1087])).
fof(f62900,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl29),
  inference(resolution,[],[f1890,f1086])).
fof(f62898,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl29),
  inference(resolution,[],[f1890,f1085])).
fof(f62897,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X8) != s(bool,X10)) ) | $spl29),
  inference(resolution,[],[f1890,f1083])).
fof(f62895,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl29),
  inference(resolution,[],[f1890,f1081])).
fof(f62751,plain,(
  $false | ($spl22 | $spl68)),
  inference(subsumption_resolution,[],[f62699,f1837])).
fof(f62699,plain,(
  ~p(s(bool,'T_0')) | $spl68),
  inference(equality_resolution,[],[f3314])).
fof(f62736,plain,(
  $false | ($spl22 | $spl68)),
  inference(subsumption_resolution,[],[f62735,f1837])).
fof(f62735,plain,(
  ~p(s(bool,'T_0')) | $spl68),
  inference(forward_demodulation,[],[f62700,f1514])).
fof(f62700,plain,(
  ( ! [X58] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X58))))))) ) | $spl68),
  inference(trivial_inequality_removal,[],[f62682])).
fof(f62682,plain,(
  ( ! [X58] : (s(bool,'T_0') != s(bool,'T_0') | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X58))))))) ) | $spl68),
  inference(superposition,[],[f3314,f1514])).
fof(f62734,plain,(
  $false | ($spl22 | $spl68)),
  inference(subsumption_resolution,[],[f62733,f1837])).
fof(f62733,plain,(
  ~p(s(bool,'T_0')) | $spl68),
  inference(forward_demodulation,[],[f62701,f1507])).
fof(f1507,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f757])).
fof(f757,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f439])).
fof(f439,axiom,(
  ! [X16] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_lt|split|1')).
fof(f62701,plain,(
  ( ! [X57] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57))))))) ) | $spl68),
  inference(trivial_inequality_removal,[],[f62681])).
fof(f62681,plain,(
  ( ! [X57] : (s(bool,'T_0') != s(bool,'T_0') | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57))))))) ) | $spl68),
  inference(superposition,[],[f3314,f1507])).
fof(f62731,plain,(
  $false | $spl68),
  inference(subsumption_resolution,[],[f62702,f1436])).
fof(f62702,plain,(
  ( ! [X52] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X52))))) ) | $spl68),
  inference(trivial_inequality_removal,[],[f62678])).
fof(f62678,plain,(
  ( ! [X52] : (s(bool,'T_0') != s(bool,'T_0') | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X52))))) ) | $spl68),
  inference(superposition,[],[f3314,f1454])).
fof(f1454,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f711])).
fof(f711,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f110])).
fof(f110,axiom,(
  ! [X16] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X16)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_distrib|split|26')).
fof(f62723,plain,(
  $false | ($spl22 | $spl68)),
  inference(subsumption_resolution,[],[f62722,f1837])).
fof(f62722,plain,(
  ~p(s(bool,'T_0')) | $spl68),
  inference(forward_demodulation,[],[f62703,f1453])).
fof(f62703,plain,(
  ( ! [X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36))))) ) | $spl68),
  inference(trivial_inequality_removal,[],[f62668])).
fof(f62668,plain,(
  ( ! [X36] : (s(bool,'T_0') != s(bool,'T_0') | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36))))) ) | $spl68),
  inference(superposition,[],[f3314,f1453])).
fof(f62721,plain,(
  ( ! [X35,X34] : (~p(s(bool,X35)) | ~p(s(bool,X34))) ) | ($spl22 | $spl68)),
  inference(subsumption_resolution,[],[f62720,f1837])).
fof(f62720,plain,(
  ( ! [X35,X34] : (~p(s(bool,X35)) | ~p(s(bool,X34)) | ~p(s(bool,'T_0'))) ) | $spl68),
  inference(subsumption_resolution,[],[f62649,f1124])).
fof(f62649,plain,(
  ( ! [X35,X34] : (s(bool,X34) != s(bool,X35) | ~p(s(bool,X35)) | ~p(s(bool,X34)) | ~p(s(bool,'T_0'))) ) | $spl68),
  inference(superposition,[],[f3314,f1135])).
fof(f1135,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f785])).
fof(f785,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f784])).
fof(f784,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f531])).
fof(f531,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X11,X12] : ((p(s(bool,X11)) => p(s(bool,X12))) => ((p(s(bool,X12)) => p(s(bool,X11))) => s(bool,X11) = s(bool,X12)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.bool.IMP_ANTISYM_AX')).
fof(f62719,plain,(
  ( ! [X33,X32] : (~p(s(bool,X33)) | ~p(s(bool,X32))) ) | ($spl22 | $spl68)),
  inference(subsumption_resolution,[],[f62718,f1837])).
fof(f62718,plain,(
  ( ! [X33,X32] : (~p(s(bool,X33)) | ~p(s(bool,'T_0')) | ~p(s(bool,X32))) ) | $spl68),
  inference(subsumption_resolution,[],[f62648,f1124])).
fof(f62648,plain,(
  ( ! [X33,X32] : (s(bool,X32) != s(bool,X33) | ~p(s(bool,X33)) | ~p(s(bool,'T_0')) | ~p(s(bool,X32))) ) | $spl68),
  inference(superposition,[],[f3314,f1135])).
fof(f62717,plain,(
  ( ! [X26,X27] : (~p(s(bool,X27)) | ~p(s(bool,X26))) ) | ($spl22 | $spl68)),
  inference(subsumption_resolution,[],[f62716,f1837])).
fof(f62716,plain,(
  ( ! [X26,X27] : (~p(s(bool,X27)) | ~p(s(bool,X26)) | ~p(s(bool,'T_0'))) ) | $spl68),
  inference(subsumption_resolution,[],[f62645,f1124])).
fof(f62645,plain,(
  ( ! [X26,X27] : (s(bool,X26) != s(bool,X27) | ~p(s(bool,X27)) | ~p(s(bool,X26)) | ~p(s(bool,'T_0'))) ) | $spl68),
  inference(superposition,[],[f3314,f1131])).
fof(f1131,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f874])).
fof(f874,plain,(
  ! [X0,X1] : ((s(bool,X0) != s(bool,X1) | ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0))))) & ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(flattening,[],[f873])).
fof(f873,plain,(
  ! [X0,X1] : ((s(bool,X0) != s(bool,X1) | ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0))))) & (((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0)))) | s(bool,X0) = s(bool,X1)))),
  inference(nnf_transformation,[],[f783])).
fof(f783,plain,(
  ! [X0,X1] : (s(bool,X0) = s(bool,X1) <=> ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0)))))),
  inference(ennf_transformation,[],[f530])).
fof(f530,plain,(
  ! [X0,X1] : (s(bool,X0) = s(bool,X1) <=> ((p(s(bool,X0)) => p(s(bool,X1))) & (p(s(bool,X1)) => p(s(bool,X0)))))),
  inference(rectify,[],[f502])).
fof(f502,axiom,(
  ! [X11,X12] : (s(bool,X11) = s(bool,X12) <=> ((p(s(bool,X11)) => p(s(bool,X12))) & (p(s(bool,X12)) => p(s(bool,X11)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.bool.EQ_IMP_THM')).
fof(f62715,plain,(
  ( ! [X24,X25] : (~p(s(bool,X25)) | ~p(s(bool,X24))) ) | ($spl22 | $spl68)),
  inference(subsumption_resolution,[],[f62714,f1837])).
fof(f62714,plain,(
  ( ! [X24,X25] : (~p(s(bool,X25)) | ~p(s(bool,'T_0')) | ~p(s(bool,X24))) ) | $spl68),
  inference(subsumption_resolution,[],[f62644,f1124])).
fof(f62644,plain,(
  ( ! [X24,X25] : (s(bool,X24) != s(bool,X25) | ~p(s(bool,X25)) | ~p(s(bool,'T_0')) | ~p(s(bool,X24))) ) | $spl68),
  inference(superposition,[],[f3314,f1131])).
fof(f62713,plain,(
  ( ! [X14,X15] : (~p(s(bool,X15)) | ~p(s(bool,X14))) ) | ($spl22 | $spl68)),
  inference(subsumption_resolution,[],[f62712,f1837])).
fof(f62712,plain,(
  ( ! [X14,X15] : (~p(s(bool,X15)) | ~p(s(bool,'T_0')) | ~p(s(bool,X14))) ) | $spl68),
  inference(subsumption_resolution,[],[f62639,f1124])).
fof(f62639,plain,(
  ( ! [X14,X15] : (s(bool,X14) != s(bool,X15) | ~p(s(bool,X15)) | ~p(s(bool,'T_0')) | ~p(s(bool,X14))) ) | $spl68),
  inference(superposition,[],[f3314,f1124])).
fof(f62711,plain,(
  ( ! [X12,X13] : (~p(s(bool,X13)) | ~p(s(bool,X12))) ) | ($spl22 | $spl68)),
  inference(subsumption_resolution,[],[f62710,f1837])).
fof(f62710,plain,(
  ( ! [X12,X13] : (~p(s(bool,X13)) | ~p(s(bool,X12)) | ~p(s(bool,'T_0'))) ) | $spl68),
  inference(subsumption_resolution,[],[f62638,f1124])).
fof(f62638,plain,(
  ( ! [X12,X13] : (s(bool,X12) != s(bool,X13) | ~p(s(bool,X13)) | ~p(s(bool,X12)) | ~p(s(bool,'T_0'))) ) | $spl68),
  inference(superposition,[],[f3314,f1124])).
fof(f62627,plain,(
  $false | ($spl64 | $spl66)),
  inference(trivial_inequality_removal,[],[f62595])).
fof(f62595,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl64 | $spl66)),
  inference(superposition,[],[f62498,f1451])).
fof(f1451,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f708])).
fof(f708,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f359])).
fof(f359,axiom,(
  ! [X16] : s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_lte|split|2')).
fof(f62498,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,X9)) ) | ($spl64 | $spl66)),
  inference(subsumption_resolution,[],[f3014,f2858])).
fof(f62626,plain,(
  $false | ($spl64 | $spl66)),
  inference(trivial_inequality_removal,[],[f62600])).
fof(f62600,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl64 | $spl66)),
  inference(superposition,[],[f62498,f1452])).
fof(f1452,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f709])).
fof(f709,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f361])).
fof(f361,axiom,(
  ! [X16] : s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_lte|split|1')).
fof(f62625,plain,(
  $false | ($spl64 | $spl66)),
  inference(trivial_inequality_removal,[],[f62605])).
fof(f62605,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl64 | $spl66)),
  inference(superposition,[],[f62498,f1515])).
fof(f1515,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f763])).
fof(f763,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f437])).
fof(f437,axiom,(
  ! [X16] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_lt|split|2')).
fof(f62624,plain,(
  $false | ($spl64 | $spl66)),
  inference(equality_resolution,[],[f62498])).
fof(f62056,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1535])).
fof(f61944,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X23) != s(bool,X25)) ) | $spl3),
  inference(resolution,[],[f1547,f1087])).
fof(f61942,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1086])).
fof(f61940,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1085])).
fof(f61939,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X8) != s(bool,X10)) ) | $spl3),
  inference(resolution,[],[f1547,f1083])).
fof(f61937,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1081])).
fof(f61911,plain,(
  $false | $spl106),
  inference(subsumption_resolution,[],[f5391,f36493])).
fof(f36493,plain,(
  ( ! [X23] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))))))) )),
  inference(forward_demodulation,[],[f36492,f1161])).
fof(f36492,plain,(
  ( ! [X23] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))))))) )),
  inference(subsumption_resolution,[],[f36219,f1171])).
fof(f1171,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f568])).
fof(f568,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f567])).
fof(f567,plain,(
  ! [X0] : ! [X1,X2] : ~s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f138])).
fof(f138,axiom,(
  ! [X6] : ! [X39,X40] : ~s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X40),s('type.list.list'(X6),X39)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.list.NOT_CONS_NIL')).
fof(f36219,plain,(
  ( ! [X23,X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23)))))) | s('type.list.list'(X22),'const.list.NIL_0') = s('type.list.list'(X22),'const.list.CONS_2'(s(X22,sK84('const.list.NIL_0',X23,X22)),s('type.list.list'(X22),sK83('const.list.NIL_0',X23,X22))))) )),
  inference(superposition,[],[f36028,f1469])).
fof(f36028,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK84(X2,X1,X0)),s('type.list.list'(X0),sK83(X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f19325,f19313])).
fof(f19325,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK84(X2,X1,X0)),s('type.list.list'(X0),sK83(X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f1459,f1156])).
fof(f1459,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK84(X2,X1,X0)),s('type.list.list'(X0),sK83(X2,X1,X0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(cnf_transformation,[],[f1060])).
fof(f1060,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK83(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK84(X2,X1,X0)),s('type.list.list'(X0),sK83(X2,X1,X0)))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK83,sK84])],[f1059])).
fof(f1059,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X5,X6] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X5))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f1058])).
fof(f1058,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(nnf_transformation,[],[f715])).
fof(f715,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f714])).
fof(f714,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f186])).
fof(f186,axiom,(
  ! [X6] : ! [X13,X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X8,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) & s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X8)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.quantHeuristics.LIST_LENGTH_|49||split|9')).
fof(f1916,plain,(
  s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl37),
  inference(cnf_transformation,[],[f1916_D])).
fof(f1916_D,plain,(
  s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f5386,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl104),
  inference(cnf_transformation,[],[f5386_D])).
fof(f5386_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f61876,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f61875,f1187])).
fof(f61875,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f59892,f1187])).
fof(f59892,plain,(
  s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl4),
  inference(superposition,[],[f19322,f1550])).
fof(f19322,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f1462,f1156])).
fof(f1462,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f1061])).
fof(f1061,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(nnf_transformation,[],[f717])).
fof(f717,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f716])).
fof(f716,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f131])).
fof(f131,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.quantHeuristics.LIST_LENGTH_COMPARE_|49||split|0')).
fof(f61415,plain,(
  $false | ($spl22 | $spl34 | $spl37)),
  inference(subsumption_resolution,[],[f61414,f1837])).
fof(f61414,plain,(
  ~p(s(bool,'T_0')) | ($spl34 | $spl37)),
  inference(forward_demodulation,[],[f61413,f1514])).
fof(f61413,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl34 | $spl37)),
  inference(subsumption_resolution,[],[f60876,f1916])).
fof(f60876,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl34),
  inference(superposition,[],[f19323,f1907])).
fof(f1907,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl34),
  inference(cnf_transformation,[],[f1907_D])).
fof(f1907_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f19323,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(forward_demodulation,[],[f1461,f1156])).
fof(f1461,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(cnf_transformation,[],[f1061])).
fof(f61412,plain,(
  $false | ($spl34 | $spl37)),
  inference(subsumption_resolution,[],[f61411,f1916])).
fof(f61411,plain,(
  s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl34),
  inference(subsumption_resolution,[],[f60872,f1161])).
fof(f60872,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl34),
  inference(superposition,[],[f1467,f1907])).
fof(f61410,plain,(
  $false | ($spl34 | $spl37)),
  inference(subsumption_resolution,[],[f61409,f1916])).
fof(f61409,plain,(
  s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl34),
  inference(subsumption_resolution,[],[f60870,f1161])).
fof(f60870,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl34),
  inference(superposition,[],[f1465,f1907])).
fof(f61406,plain,(
  $false | ($spl22 | $spl34 | $spl37)),
  inference(subsumption_resolution,[],[f61405,f1837])).
fof(f61405,plain,(
  ~p(s(bool,'T_0')) | ($spl34 | $spl37)),
  inference(forward_demodulation,[],[f61404,f1453])).
fof(f61404,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.|48|_0')))) | ($spl34 | $spl37)),
  inference(subsumption_resolution,[],[f60866,f1916])).
fof(f60866,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl34),
  inference(superposition,[],[f1448,f1907])).
fof(f1448,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f1054])).
fof(f1054,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0'))))))),
  inference(nnf_transformation,[],[f706])).
fof(f706,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0')))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f705])).
fof(f705,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0')))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f127])).
fof(f127,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.num.|48|_0')))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.quantHeuristics.LIST_LENGTH_COMPARE_|49||split|3')).
fof(f60819,plain,(
  ( ! [X240] : (p(s(bool,X240)) | s(bool,X240) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl476),
  inference(cnf_transformation,[],[f60819_D])).
fof(f60819_D,plain,(
  ( ! [X240] : (p(s(bool,X240)) | s(bool,X240) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl476),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl476])])).
fof(f60530,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,X5)) | p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | s(bool,X6) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl28),
  inference(resolution,[],[f1889,f1081])).
fof(f1889,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl28),
  inference(cnf_transformation,[],[f1889_D])).
fof(f1889_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f60532,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X12) != s(bool,X13)) ) | $spl28),
  inference(resolution,[],[f1889,f1083])).
fof(f60533,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X14) != s(bool,X16) | s(bool,X15) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl28),
  inference(resolution,[],[f1889,f1085])).
fof(f60534,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X19) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl28),
  inference(resolution,[],[f1889,f1086])).
fof(f60537,plain,(
  ( ! [X28,X26,X27] : (p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X27) != s(bool,X28)) ) | $spl28),
  inference(resolution,[],[f1889,f1087])).
fof(f60648,plain,(
  ( ! [X239,X240] : (p(s(bool,X239)) | p(s(bool,X240)) | s(bool,X240) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl28),
  inference(resolution,[],[f1889,f1535])).
fof(f60759,plain,(
  $false | ($spl22 | $spl28 | $spl35)),
  inference(subsumption_resolution,[],[f60758,f1837])).
fof(f60758,plain,(
  ~p(s(bool,'T_0')) | ($spl28 | $spl35)),
  inference(forward_demodulation,[],[f60757,f1453])).
fof(f60757,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ($spl28 | $spl35)),
  inference(subsumption_resolution,[],[f60528,f1908])).
fof(f60528,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl28),
  inference(resolution,[],[f1889,f1357])).
fof(f60756,plain,(
  $false | ($spl22 | $spl28 | $spl35)),
  inference(subsumption_resolution,[],[f60755,f1837])).
fof(f60755,plain,(
  ~p(s(bool,'T_0')) | ($spl28 | $spl35)),
  inference(forward_demodulation,[],[f60754,f1453])).
fof(f60754,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ($spl28 | $spl35)),
  inference(subsumption_resolution,[],[f60527,f1908])).
fof(f60527,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl28),
  inference(resolution,[],[f1889,f1357])).
fof(f60753,plain,(
  $false | ($spl17 | $spl28 | $spl35)),
  inference(subsumption_resolution,[],[f60752,f1827])).
fof(f60752,plain,(
  p(s(bool,'F_0')) | ($spl28 | $spl35)),
  inference(forward_demodulation,[],[f60751,f1515])).
fof(f60751,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl28 | $spl35)),
  inference(subsumption_resolution,[],[f60526,f1908])).
fof(f60526,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl28),
  inference(resolution,[],[f1889,f1352])).
fof(f60087,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK38('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK39('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK37('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl4),
  inference(forward_demodulation,[],[f59898,f1550])).
fof(f59898,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK38('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK39('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK37('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))))) | $spl4),
  inference(superposition,[],[f19333,f1550])).
fof(f60085,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK41('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK40('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl4),
  inference(forward_demodulation,[],[f59896,f1550])).
fof(f59896,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK41('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK40('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))) | $spl4),
  inference(superposition,[],[f19331,f1550])).
fof(f60084,plain,(
  ( ! [X120,X119] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X119),s('type.list.list'(sK14),X120)))) ) | $spl4),
  inference(forward_demodulation,[],[f60083,f1187])).
fof(f60083,plain,(
  ( ! [X120,X119] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X119),s('type.list.list'(sK14),X120)))) ) | $spl4),
  inference(forward_demodulation,[],[f59894,f1187])).
fof(f59894,plain,(
  ( ! [X120,X119] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X119),s('type.list.list'(sK14),X120))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))))))) ) | $spl4),
  inference(superposition,[],[f19330,f1550])).
fof(f60081,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK42('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK43('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl4),
  inference(forward_demodulation,[],[f59891,f1550])).
fof(f59891,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK42('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK43('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(superposition,[],[f11125,f1550])).
fof(f60080,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK44('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK45('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl4),
  inference(forward_demodulation,[],[f59890,f1550])).
fof(f59890,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK44('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK45('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(superposition,[],[f11123,f1550])).
fof(f5366,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | $spl96),
  inference(cnf_transformation,[],[f5366_D])).
fof(f5366_D,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f5375,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) | $spl103),
  inference(cnf_transformation,[],[f5375_D])).
fof(f5375_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) <=> ~$spl103),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl103])])).
fof(f59996,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | $spl4),
  inference(forward_demodulation,[],[f59807,f1161])).
fof(f59807,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) | $spl4),
  inference(superposition,[],[f1550,f1467])).
fof(f59995,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | $spl4),
  inference(forward_demodulation,[],[f59806,f1161])).
fof(f59806,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) | $spl4),
  inference(superposition,[],[f1550,f1465])).
fof(f5346,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl86),
  inference(cnf_transformation,[],[f5346_D])).
fof(f5346_D,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f5357,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) | $spl95),
  inference(cnf_transformation,[],[f5357_D])).
fof(f5357_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) <=> ~$spl95),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl95])])).
fof(f59988,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(forward_demodulation,[],[f59797,f1161])).
fof(f59797,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) | $spl4),
  inference(superposition,[],[f1550,f1467])).
fof(f59987,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(forward_demodulation,[],[f59796,f1161])).
fof(f59796,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) | $spl4),
  inference(superposition,[],[f1550,f1465])).
fof(f5354,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))) | $spl93),
  inference(cnf_transformation,[],[f5354_D])).
fof(f5354_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))) <=> ~$spl93),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl93])])).
fof(f59986,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(forward_demodulation,[],[f59795,f1161])).
fof(f59795,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))) | $spl4),
  inference(superposition,[],[f1550,f1463])).
fof(f5348,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl89),
  inference(cnf_transformation,[],[f5348_D])).
fof(f5348_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl89),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl89])])).
fof(f59985,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(forward_demodulation,[],[f59794,f1161])).
fof(f59794,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(superposition,[],[f1550,f1448])).
fof(f59553,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1535])).
fof(f59441,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X23) != s(bool,X25)) ) | $spl3),
  inference(resolution,[],[f1547,f1087])).
fof(f59439,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1086])).
fof(f59437,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1085])).
fof(f59436,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X8) != s(bool,X10)) ) | $spl3),
  inference(resolution,[],[f1547,f1083])).
fof(f59434,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1081])).
fof(f59420,plain,(
  $false | ($spl0 | $spl4)),
  inference(subsumption_resolution,[],[f1550,f1545])).
fof(f59245,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl29),
  inference(resolution,[],[f1890,f1535])).
fof(f59133,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X23) != s(bool,X25)) ) | $spl29),
  inference(resolution,[],[f1890,f1087])).
fof(f59131,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl29),
  inference(resolution,[],[f1890,f1086])).
fof(f59129,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl29),
  inference(resolution,[],[f1890,f1085])).
fof(f59128,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X8) != s(bool,X10)) ) | $spl29),
  inference(resolution,[],[f1890,f1083])).
fof(f59126,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl29),
  inference(resolution,[],[f1890,f1081])).
fof(f59060,plain,(
  ( ! [X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) ) | $spl472),
  inference(cnf_transformation,[],[f59060_D])).
fof(f59060_D,plain,(
  ( ! [X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) ) <=> ~$spl472),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl472])])).
fof(f58842,plain,(
  ( ! [X356,X354,X355] : (p(s(bool,X354)) | ~p(s(bool,X355)) | s(bool,X355) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X356)))))) )),
  inference(resolution,[],[f36493,f1535])).
fof(f58730,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X28) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))))) | s(bool,X27) != s(bool,X30)) )),
  inference(resolution,[],[f36493,f1087])).
fof(f58728,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,X20)) | ~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23)))))) )),
  inference(resolution,[],[f36493,f1086])).
fof(f58726,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X13) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))))) )),
  inference(resolution,[],[f36493,f1085])).
fof(f58725,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))) | s(bool,X8) != s(bool,X11)) )),
  inference(resolution,[],[f36493,f1083])).
fof(f58723,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) )),
  inference(resolution,[],[f36493,f1081])).
fof(f20309,plain,(
  ( ! [X466] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X466) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X466),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl318),
  inference(cnf_transformation,[],[f20309_D])).
fof(f20309_D,plain,(
  ( ! [X466] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X466) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X466),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl318),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl318])])).
fof(f56465,plain,(
  ( ! [X771,X770] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X771) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X771),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X770)) ) | $spl322),
  inference(forward_demodulation,[],[f56464,f1161])).
fof(f56464,plain,(
  ( ! [X771,X770] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X771),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X770) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X771)) ) | $spl322),
  inference(forward_demodulation,[],[f56463,f1161])).
fof(f56463,plain,(
  ( ! [X771,X770] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X771),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X770) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X771)) ) | $spl322),
  inference(forward_demodulation,[],[f56462,f19309])).
fof(f19309,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f19308,f1156])).
fof(f19308,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f1489,f1161])).
fof(f1489,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f744])).
fof(f744,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f124])).
fof(f124,axiom,(
  ! [X23] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X23),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.EXP|split|0')).
fof(f56462,plain,(
  ( ! [X771,X770] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X770) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X771),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X770),s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X771)) ) | $spl322),
  inference(forward_demodulation,[],[f55830,f1161])).
fof(f55830,plain,(
  ( ! [X771,X770] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X770) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X771),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X770),s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X771)) ) | $spl322),
  inference(superposition,[],[f1521,f22168])).
fof(f1521,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f1077])).
fof(f20304,plain,(
  ( ! [X465] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X465) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X465)))) ) | $spl316),
  inference(cnf_transformation,[],[f20304_D])).
fof(f20304_D,plain,(
  ( ! [X465] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X465) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X465)))) ) <=> ~$spl316),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl316])])).
fof(f56461,plain,(
  ( ! [X769,X768] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X769) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X769))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X768)) ) | $spl322),
  inference(forward_demodulation,[],[f56460,f1161])).
fof(f56460,plain,(
  ( ! [X769,X768] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X769))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X768) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X769)) ) | $spl322),
  inference(forward_demodulation,[],[f56459,f1161])).
fof(f56459,plain,(
  ( ! [X769,X768] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X769))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X768) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X769)) ) | $spl322),
  inference(forward_demodulation,[],[f56458,f19309])).
fof(f56458,plain,(
  ( ! [X769,X768] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X768) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X768),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X769))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X769)) ) | $spl322),
  inference(forward_demodulation,[],[f55829,f1161])).
fof(f55829,plain,(
  ( ! [X769,X768] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X768) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X768),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X769))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X769)) ) | $spl322),
  inference(superposition,[],[f1521,f22168])).
fof(f56053,plain,(
  ( ! [X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X51)) ) | $spl468),
  inference(cnf_transformation,[],[f56053_D])).
fof(f56053_D,plain,(
  ( ! [X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X51)) ) <=> ~$spl468),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl468])])).
fof(f56452,plain,(
  ( ! [X763,X762] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X763),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X762)) ) | $spl322),
  inference(forward_demodulation,[],[f56451,f1161])).
fof(f56451,plain,(
  ( ! [X763,X762] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X763),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X762)) ) | $spl322),
  inference(forward_demodulation,[],[f56450,f19309])).
fof(f56450,plain,(
  ( ! [X763,X762] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X762) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X763),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X762),s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl322),
  inference(forward_demodulation,[],[f55826,f1161])).
fof(f55826,plain,(
  ( ! [X763,X762] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X762) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X763),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X762),s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl322),
  inference(superposition,[],[f1520,f22168])).
fof(f56446,plain,(
  ( ! [X757,X756] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X757))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X756)) ) | $spl322),
  inference(forward_demodulation,[],[f56445,f1161])).
fof(f56445,plain,(
  ( ! [X757,X756] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X757))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X756)) ) | $spl322),
  inference(forward_demodulation,[],[f56444,f19309])).
fof(f56444,plain,(
  ( ! [X757,X756] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X756) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X756),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X757)))) ) | $spl322),
  inference(forward_demodulation,[],[f55823,f1161])).
fof(f55823,plain,(
  ( ! [X757,X756] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X756) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X756),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X757)))) ) | $spl322),
  inference(superposition,[],[f1519,f22168])).
fof(f30814,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) | $spl358),
  inference(cnf_transformation,[],[f30814_D])).
fof(f30814_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) <=> ~$spl358),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl358])])).
fof(f8405,plain,(
  ( ! [X303] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X303))))) ) | $spl164),
  inference(cnf_transformation,[],[f8405_D])).
fof(f8405_D,plain,(
  ( ! [X303] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X303))))) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f30816,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl360),
  inference(cnf_transformation,[],[f30816_D])).
fof(f30816_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl360),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl360])])).
fof(f56408,plain,(
  ( ! [X532,X533,X531] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X531)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X533),s('type.num.num',X532))))) ) | $spl322),
  inference(forward_demodulation,[],[f56407,f19315])).
fof(f56407,plain,(
  ( ! [X532,X533,X531] : (s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X532),s('type.num.num',X533))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X531)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X533),s('type.num.num',X532))))) ) | $spl322),
  inference(forward_demodulation,[],[f56406,f19315])).
fof(f56406,plain,(
  ( ! [X532,X533,X531] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X532),s('type.num.num',X533))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X532))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X531)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X533),s('type.num.num',X532))))) ) | $spl322),
  inference(forward_demodulation,[],[f56405,f19315])).
fof(f56405,plain,(
  ( ! [X532,X533,X531] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X532),s('type.num.num',X533))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X532))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X533))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X531)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X533),s('type.num.num',X532))))) ) | $spl322),
  inference(forward_demodulation,[],[f56404,f19309])).
fof(f56404,plain,(
  ( ! [X532,X533,X531] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X531)))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X531),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X532),s('type.num.num',X533))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X531),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X532))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X531),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X533))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X533),s('type.num.num',X532))))) ) | $spl322),
  inference(forward_demodulation,[],[f55730,f1161])).
fof(f55730,plain,(
  ( ! [X532,X533,X531] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X531)))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X531),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X532),s('type.num.num',X533))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X531),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X532))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X531),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X533))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X533),s('type.num.num',X532))))) ) | $spl322),
  inference(superposition,[],[f1437,f22168])).
fof(f1437,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num',X1))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f823])).
fof(f823,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num',X1))))))),
  inference(flattening,[],[f822])).
fof(f822,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num',X1))))))),
  inference(ennf_transformation,[],[f693])).
fof(f693,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) => s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num',X1))))))),
  inference(rectify,[],[f493])).
fof(f493,axiom,(
  ! [X32,X33,X16] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X16)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X33),s('type.num.num',X32))))) => s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X32),s('type.num.num',X33))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num',X32))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num',X33))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.EXP_SUB')).
fof(f8401,plain,(
  ( ! [X307] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X307))))) ) | $spl160),
  inference(cnf_transformation,[],[f8401_D])).
fof(f8401_D,plain,(
  ( ! [X307] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X307))))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f56152,plain,(
  ( ! [X213,X214] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X213),s('type.num.num',X214))))) ) | $spl470),
  inference(cnf_transformation,[],[f56152_D])).
fof(f56152_D,plain,(
  ( ! [X213,X214] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X213),s('type.num.num',X214))))) ) <=> ~$spl470),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl470])])).
fof(f56151,plain,(
  ( ! [X212,X213,X214] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X213),s('type.num.num',X214)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X212))))) ) | $spl322),
  inference(forward_demodulation,[],[f56150,f19306])).
fof(f19306,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f1491,f1156])).
fof(f1491,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f746])).
fof(f746,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f149])).
fof(f149,axiom,(
  ! [X23] : s('type.num.num',X23) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.MULT_RIGHT_|49|')).
fof(f56150,plain,(
  ( ! [X212,X213,X214] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X213),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X214)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X212))))) ) | $spl322),
  inference(forward_demodulation,[],[f56149,f19306])).
fof(f56149,plain,(
  ( ! [X212,X213,X214] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X213),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X214),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X212))))) ) | $spl322),
  inference(forward_demodulation,[],[f56148,f19309])).
fof(f56148,plain,(
  ( ! [X212,X213,X214] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X212)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X213),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X212),s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X214),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X212),s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl322),
  inference(forward_demodulation,[],[f55577,f1161])).
fof(f55577,plain,(
  ( ! [X212,X213,X214] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X212)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X213),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X212),s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X214),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X212),s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl322),
  inference(superposition,[],[f1300,f22168])).
fof(f1300,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f965])).
fof(f965,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1))))))))),
  inference(flattening,[],[f964])).
fof(f964,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))))) & ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f604])).
fof(f604,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2))))))),
  inference(rectify,[],[f384])).
fof(f384,axiom,(
  ! [X23,X16,X32] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X16))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X16)))))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X16)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X32))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.LT_MULT_RCANCEL')).
fof(f23732,plain,(
  ( ! [X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5))))) ) | $spl330),
  inference(cnf_transformation,[],[f23732_D])).
fof(f23732_D,plain,(
  ( ! [X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5))))) ) <=> ~$spl330),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl330])])).
fof(f56138,plain,(
  ( ! [X187,X185,X186] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X186),s('type.num.num',X187)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X185)) ) | $spl322),
  inference(forward_demodulation,[],[f56137,f19306])).
fof(f56137,plain,(
  ( ! [X187,X185,X186] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X186),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X187)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X185)) ) | $spl322),
  inference(forward_demodulation,[],[f56136,f19306])).
fof(f56136,plain,(
  ( ! [X187,X185,X186] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X186),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X187),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X185)) ) | $spl322),
  inference(forward_demodulation,[],[f56135,f19309])).
fof(f56135,plain,(
  ( ! [X187,X185,X186] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X185) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X186),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X187),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl322),
  inference(forward_demodulation,[],[f55568,f1161])).
fof(f55568,plain,(
  ( ! [X187,X185,X186] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X185) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X186),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X187),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl322),
  inference(superposition,[],[f1298,f22168])).
fof(f1298,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f963])).
fof(f56056,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X53)) ) | $spl322),
  inference(forward_demodulation,[],[f56055,f1161])).
fof(f56055,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X53)) ) | $spl322),
  inference(forward_demodulation,[],[f56054,f19309])).
fof(f56054,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X53) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl322),
  inference(forward_demodulation,[],[f55488,f1161])).
fof(f55488,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X53) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl322),
  inference(superposition,[],[f22168,f1520])).
fof(f56052,plain,(
  ( ! [X52,X51] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X52))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X51)) ) | $spl322),
  inference(forward_demodulation,[],[f56051,f1161])).
fof(f56051,plain,(
  ( ! [X52,X51] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X52))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X51)) ) | $spl322),
  inference(forward_demodulation,[],[f56050,f19309])).
fof(f56050,plain,(
  ( ! [X52,X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X51) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X52)))) ) | $spl322),
  inference(forward_demodulation,[],[f55487,f1161])).
fof(f55487,plain,(
  ( ! [X52,X51] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X51) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X52)))) ) | $spl322),
  inference(superposition,[],[f22168,f1519])).
fof(f51140,plain,(
  ( ! [X6,X7,X5] : (sP3(X6,X7,X5) | ~sP1(X7,X5,X6) | ~sP2(X6,X5,X7) | ~p(s(bool,X5))) ) | $spl454),
  inference(cnf_transformation,[],[f51140_D])).
fof(f51140_D,plain,(
  ( ! [X6,X7,X5] : (sP3(X6,X7,X5) | ~sP1(X7,X5,X6) | ~sP2(X6,X5,X7) | ~p(s(bool,X5))) ) <=> ~$spl454),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl454])])).
fof(f53365,plain,(
  ( ! [X4] : (sP13(X4,'T_0')) ) | $spl462),
  inference(cnf_transformation,[],[f53365_D])).
fof(f53365_D,plain,(
  ( ! [X4] : (sP13(X4,'T_0')) ) <=> ~$spl462),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl462])])).
fof(f54727,plain,(
  ( ! [X6,X4,X7,X5] : (sP13(X4,'T_0') | sP3(X6,X7,X5) | ~p(s(bool,X5)) | ~sP2(X6,X5,X7) | ~sP1(X7,X5,X6)) ) | $spl22),
  inference(subsumption_resolution,[],[f54718,f22715])).
fof(f22715,plain,(
  ( ! [X306,X307] : (~sP13(X307,X306) | ~p(s(bool,X307)) | sP13(X306,'T_0')) ) | $spl22),
  inference(resolution,[],[f17464,f1328])).
fof(f17464,plain,(
  ( ! [X205] : (p(s(bool,X205)) | sP13(X205,'T_0')) ) | $spl22),
  inference(resolution,[],[f1837,f1332])).
fof(f54718,plain,(
  ( ! [X6,X4,X7,X5] : (sP13(X4,'T_0') | sP13(X5,X4) | sP3(X6,X7,X5) | ~p(s(bool,X5)) | ~sP2(X6,X5,X7) | ~sP1(X7,X5,X6)) ) | $spl22),
  inference(resolution,[],[f48823,f1092])).
fof(f1092,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X2)) | ~sP2(X0,X2,X1) | ~sP1(X1,X2,X0) | ~sP0(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f857])).
fof(f48823,plain,(
  ( ! [X87,X85,X86,X84] : (sP13(X84,'T_0') | sP13(X85,X84) | sP0(X85,X86,X87)) ) | $spl22),
  inference(resolution,[],[f22717,f1106])).
fof(f22717,plain,(
  ( ! [X310,X311] : (sP13(X310,'T_0') | sP13(X311,X310) | p(s(bool,X311))) ) | $spl22),
  inference(resolution,[],[f17464,f1332])).
fof(f53761,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl464),
  inference(cnf_transformation,[],[f53761_D])).
fof(f53761_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl464),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl464])])).
fof(f54542,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | ~p(s(bool,X237)) | s(bool,X237) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl215),
  inference(resolution,[],[f14019,f1535])).
fof(f54430,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X21) != s(bool,X23)) ) | $spl215),
  inference(resolution,[],[f14019,f1087])).
fof(f54428,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl215),
  inference(resolution,[],[f14019,f1086])).
fof(f54426,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl215),
  inference(resolution,[],[f14019,f1085])).
fof(f54425,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X6) != s(bool,X8)) ) | $spl215),
  inference(resolution,[],[f14019,f1083])).
fof(f54423,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl215),
  inference(resolution,[],[f14019,f1081])).
fof(f54171,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl466),
  inference(cnf_transformation,[],[f54171_D])).
fof(f54171_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl466),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl466])])).
fof(f54078,plain,(
  ( ! [X235,X234] : (p(s(bool,X234)) | p(s(bool,X235)) | s(bool,X235) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl214),
  inference(resolution,[],[f14018,f1535])).
fof(f14018,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl214),
  inference(cnf_transformation,[],[f14018_D])).
fof(f14018_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f53967,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X22) != s(bool,X23)) ) | $spl214),
  inference(resolution,[],[f14018,f1087])).
fof(f53964,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl214),
  inference(resolution,[],[f14018,f1086])).
fof(f53963,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl214),
  inference(resolution,[],[f14018,f1085])).
fof(f53962,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X7) != s(bool,X8)) ) | $spl214),
  inference(resolution,[],[f14018,f1083])).
fof(f53960,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl214),
  inference(resolution,[],[f14018,f1081])).
fof(f53671,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | ~p(s(bool,X237)) | s(bool,X237) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl215),
  inference(resolution,[],[f14019,f1535])).
fof(f53559,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X21) != s(bool,X23)) ) | $spl215),
  inference(resolution,[],[f14019,f1087])).
fof(f53557,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl215),
  inference(resolution,[],[f14019,f1086])).
fof(f53555,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl215),
  inference(resolution,[],[f14019,f1085])).
fof(f53554,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X6) != s(bool,X8)) ) | $spl215),
  inference(resolution,[],[f14019,f1083])).
fof(f53552,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl215),
  inference(resolution,[],[f14019,f1081])).
fof(f53364,plain,(
  ( ! [X6,X4,X7,X5] : (sP13(X4,'T_0') | sP3(X6,X7,X5) | ~p(s(bool,X5)) | ~sP2(X6,X5,X7) | ~sP1(X7,X5,X6)) ) | $spl22),
  inference(subsumption_resolution,[],[f53355,f22714])).
fof(f22714,plain,(
  ( ! [X304,X305] : (~sP13(X304,X305) | ~p(s(bool,X305)) | sP13(X304,'T_0')) ) | $spl22),
  inference(resolution,[],[f17464,f1328])).
fof(f53355,plain,(
  ( ! [X6,X4,X7,X5] : (sP13(X4,'T_0') | sP13(X4,X5) | sP3(X6,X7,X5) | ~p(s(bool,X5)) | ~sP2(X6,X5,X7) | ~sP1(X7,X5,X6)) ) | $spl22),
  inference(resolution,[],[f48448,f1092])).
fof(f48448,plain,(
  ( ! [X87,X85,X86,X84] : (sP13(X84,'T_0') | sP13(X84,X85) | sP0(X85,X86,X87)) ) | $spl22),
  inference(resolution,[],[f22716,f1106])).
fof(f22716,plain,(
  ( ! [X308,X309] : (sP13(X308,'T_0') | sP13(X308,X309) | p(s(bool,X309))) ) | $spl22),
  inference(resolution,[],[f17464,f1329])).
fof(f51739,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl458),
  inference(cnf_transformation,[],[f51739_D])).
fof(f51739_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl458),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl458])])).
fof(f52669,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | ~p(s(bool,X237)) | s(bool,X237) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl187),
  inference(resolution,[],[f10870,f1535])).
fof(f52557,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X21) != s(bool,X23)) ) | $spl187),
  inference(resolution,[],[f10870,f1087])).
fof(f52555,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl187),
  inference(resolution,[],[f10870,f1086])).
fof(f52553,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl187),
  inference(resolution,[],[f10870,f1085])).
fof(f52552,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X6) != s(bool,X8)) ) | $spl187),
  inference(resolution,[],[f10870,f1083])).
fof(f52550,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl187),
  inference(resolution,[],[f10870,f1081])).
fof(f52238,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl460),
  inference(cnf_transformation,[],[f52238_D])).
fof(f52238_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl460),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl460])])).
fof(f52143,plain,(
  ( ! [X235,X234] : (p(s(bool,X234)) | p(s(bool,X235)) | s(bool,X235) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl186),
  inference(resolution,[],[f10869,f1535])).
fof(f10869,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl186),
  inference(cnf_transformation,[],[f10869_D])).
fof(f10869_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f52032,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X22) != s(bool,X23)) ) | $spl186),
  inference(resolution,[],[f10869,f1087])).
fof(f52029,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl186),
  inference(resolution,[],[f10869,f1086])).
fof(f52028,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl186),
  inference(resolution,[],[f10869,f1085])).
fof(f52027,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X7) != s(bool,X8)) ) | $spl186),
  inference(resolution,[],[f10869,f1083])).
fof(f52025,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl186),
  inference(resolution,[],[f10869,f1081])).
fof(f51141,plain,(
  ( ! [X4] : (sP13('T_0',X4)) ) | $spl456),
  inference(cnf_transformation,[],[f51141_D])).
fof(f51141_D,plain,(
  ( ! [X4] : (sP13('T_0',X4)) ) <=> ~$spl456),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl456])])).
fof(f51975,plain,(
  ( ! [X6,X4,X7,X5] : (sP13('T_0',X4) | sP3(X6,X7,X5) | ~p(s(bool,X5)) | ~sP2(X6,X5,X7) | ~sP1(X7,X5,X6)) ) | $spl22),
  inference(subsumption_resolution,[],[f51965,f21282])).
fof(f21282,plain,(
  ( ! [X306,X307] : (~sP13(X307,X306) | ~p(s(bool,X307)) | sP13('T_0',X306)) ) | $spl22),
  inference(resolution,[],[f17463,f1328])).
fof(f51965,plain,(
  ( ! [X6,X4,X7,X5] : (sP13('T_0',X4) | sP13(X5,X4) | sP3(X6,X7,X5) | ~p(s(bool,X5)) | ~sP2(X6,X5,X7) | ~sP1(X7,X5,X6)) ) | $spl22),
  inference(resolution,[],[f47954,f1092])).
fof(f51647,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | ~p(s(bool,X237)) | s(bool,X237) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl187),
  inference(resolution,[],[f10870,f1535])).
fof(f51535,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X21) != s(bool,X23)) ) | $spl187),
  inference(resolution,[],[f10870,f1087])).
fof(f51533,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl187),
  inference(resolution,[],[f10870,f1086])).
fof(f51531,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl187),
  inference(resolution,[],[f10870,f1085])).
fof(f51530,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X6) != s(bool,X8)) ) | $spl187),
  inference(resolution,[],[f10870,f1083])).
fof(f51528,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl187),
  inference(resolution,[],[f10870,f1081])).
fof(f51139,plain,(
  ( ! [X6,X4,X7,X5] : (sP13('T_0',X4) | sP3(X6,X7,X5) | ~p(s(bool,X5)) | ~sP2(X6,X5,X7) | ~sP1(X7,X5,X6)) ) | $spl22),
  inference(subsumption_resolution,[],[f51129,f21281])).
fof(f21281,plain,(
  ( ! [X304,X305] : (~sP13(X304,X305) | ~p(s(bool,X305)) | sP13('T_0',X304)) ) | $spl22),
  inference(resolution,[],[f17463,f1328])).
fof(f51129,plain,(
  ( ! [X6,X4,X7,X5] : (sP13('T_0',X4) | sP13(X4,X5) | sP3(X6,X7,X5) | ~p(s(bool,X5)) | ~sP2(X6,X5,X7) | ~sP1(X7,X5,X6)) ) | $spl22),
  inference(resolution,[],[f47584,f1092])).
fof(f50885,plain,(
  $false | ($spl22 | $spl450)),
  inference(subsumption_resolution,[],[f50884,f1837])).
fof(f50884,plain,(
  ~p(s(bool,'T_0')) | ($spl22 | $spl450)),
  inference(subsumption_resolution,[],[f50865,f17461])).
fof(f50865,plain,(
  ~p(s(bool,'T_0')) | sP13('T_0','T_0') | ($spl22 | $spl450)),
  inference(resolution,[],[f50848,f22715])).
fof(f50883,plain,(
  $false | ($spl22 | $spl450)),
  inference(subsumption_resolution,[],[f50882,f1837])).
fof(f50882,plain,(
  ~p(s(bool,'T_0')) | ($spl22 | $spl450)),
  inference(subsumption_resolution,[],[f50864,f17461])).
fof(f50864,plain,(
  ~p(s(bool,'T_0')) | sP13('T_0','T_0') | ($spl22 | $spl450)),
  inference(resolution,[],[f50848,f22714])).
fof(f50881,plain,(
  $false | ($spl22 | $spl450)),
  inference(subsumption_resolution,[],[f50880,f1837])).
fof(f50880,plain,(
  ~p(s(bool,'T_0')) | ($spl22 | $spl450)),
  inference(subsumption_resolution,[],[f50863,f17461])).
fof(f50863,plain,(
  ~p(s(bool,'T_0')) | sP13('T_0','T_0') | ($spl22 | $spl450)),
  inference(resolution,[],[f50848,f21282])).
fof(f50879,plain,(
  $false | ($spl22 | $spl450)),
  inference(subsumption_resolution,[],[f50878,f1837])).
fof(f50878,plain,(
  ~p(s(bool,'T_0')) | ($spl22 | $spl450)),
  inference(subsumption_resolution,[],[f50862,f17461])).
fof(f50862,plain,(
  ~p(s(bool,'T_0')) | sP13('T_0','T_0') | ($spl22 | $spl450)),
  inference(resolution,[],[f50848,f21281])).
fof(f50873,plain,(
  $false | ($spl22 | $spl450)),
  inference(subsumption_resolution,[],[f50867,f1837])).
fof(f50867,plain,(
  ~p(s(bool,'T_0')) | $spl450),
  inference(duplicate_literal_removal,[],[f50856])).
fof(f50856,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'T_0')) | $spl450),
  inference(resolution,[],[f50848,f1335])).
fof(f1335,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | ~p(s(bool,X1)) | ~sP13(X1,X0)) )),
  inference(cnf_transformation,[],[f982])).
fof(f982,plain,(
  ! [X0,X1] : ((((p(s(bool,X1)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)))) | sP13(X1,X0)) & (~sP13(X1,X0) | ((~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X0)) | p(s(bool,X1))))))),
  inference(nnf_transformation,[],[f849])).
fof(f849,plain,(
  ! [X0,X1] : ((p(s(bool,X1)) <=> ~p(s(bool,X0))) <=> sP13(X1,X0))),
  inference(definition_folding,[],[f623,f848])).
fof(f623,plain,(
  ! [X0,X1] : ((p(s(bool,X1)) <=> ~p(s(bool,X0))) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  inference(flattening,[],[f622])).
fof(f622,plain,(
  ! [X0,X1] : ((p(s(bool,X1)) <=> ~p(s(bool,X0))) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  inference(rectify,[],[f208])).
fof(f208,axiom,(
  ! [X33,X32] : ((p(s(bool,X32)) <=> ~p(s(bool,X33))) <=> ((p(s(bool,X32)) | p(s(bool,X33))) & (~p(s(bool,X33)) | ~p(s(bool,X32)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.sat.sat_29_prove_ltb')).
fof(f50872,plain,(
  $false | ($spl22 | $spl450)),
  inference(subsumption_resolution,[],[f50868,f1837])).
fof(f50868,plain,(
  ~p(s(bool,'T_0')) | $spl450),
  inference(duplicate_literal_removal,[],[f50855])).
fof(f50855,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'T_0')) | $spl450),
  inference(resolution,[],[f50848,f1328])).
fof(f50871,plain,(
  $false | ($spl22 | $spl450)),
  inference(subsumption_resolution,[],[f50853,f1837])).
fof(f50853,plain,(
  ~p(s(bool,'T_0')) | ($spl22 | $spl450)),
  inference(resolution,[],[f50848,f17462])).
fof(f17462,plain,(
  ( ! [X203] : (~sP13(X203,'T_0') | ~p(s(bool,X203))) ) | $spl22),
  inference(resolution,[],[f1837,f1328])).
fof(f50870,plain,(
  $false | ($spl22 | $spl450)),
  inference(subsumption_resolution,[],[f50852,f1837])).
fof(f50852,plain,(
  ~p(s(bool,'T_0')) | ($spl22 | $spl450)),
  inference(resolution,[],[f50848,f17461])).
fof(f50848,plain,(
  sP13('T_0','T_0') | $spl450),
  inference(cnf_transformation,[],[f50848_D])).
fof(f50848_D,plain,(
  sP13('T_0','T_0') <=> ~$spl450),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl450])])).
fof(f50849,plain,(
  ( ! [X39,X37,X38,X36] : (sP13(X36,X37) | ~p(s(bool,X36)) | sP2(X38,X39,X37)) ) | $spl452),
  inference(cnf_transformation,[],[f50849_D])).
fof(f50849_D,plain,(
  ( ! [X39,X37,X38,X36] : (sP13(X36,X37) | ~p(s(bool,X36)) | sP2(X38,X39,X37)) ) <=> ~$spl452),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl452])])).
fof(f50818,plain,(
  ( ! [X47,X45,X46,X44] : (sP13(X44,X45) | sP2(X46,X47,X45) | ~p(s(bool,X44)) | sP13('T_0','T_0')) ) | $spl22),
  inference(resolution,[],[f47578,f22714])).
fof(f50816,plain,(
  ( ! [X39,X37,X38,X36] : (sP13(X36,X37) | sP2(X38,X39,X37) | ~p(s(bool,X36)) | sP13('T_0','T_0')) ) | $spl22),
  inference(resolution,[],[f47578,f21281])).
fof(f47072,plain,(
  ( ! [X491] : (sP13('F_0',X491)) ) | $spl434),
  inference(cnf_transformation,[],[f47072_D])).
fof(f47072_D,plain,(
  ( ! [X491] : (sP13('F_0',X491)) ) <=> ~$spl434),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl434])])).
fof(f50581,plain,(
  ( ! [X10,X8,X11,X9] : (sP13('F_0',X8) | sP3(X10,X9,X11) | p(s(bool,X9)) | ~sP2(X10,X11,X9) | ~sP0(X11,X9,X10)) ) | $spl17),
  inference(subsumption_resolution,[],[f50572,f20945])).
fof(f20945,plain,(
  ( ! [X310,X309] : (~sP13(X309,X310) | p(s(bool,X310)) | sP13('F_0',X309)) ) | $spl17),
  inference(resolution,[],[f11246,f1327])).
fof(f50572,plain,(
  ( ! [X10,X8,X11,X9] : (sP13(X8,X9) | sP13('F_0',X8) | sP3(X10,X9,X11) | p(s(bool,X9)) | ~sP2(X10,X11,X9) | ~sP0(X11,X9,X10)) ) | $spl17),
  inference(resolution,[],[f47127,f1093])).
fof(f47127,plain,(
  ( ! [X74,X72,X75,X73] : (sP13(X72,X73) | sP13('F_0',X72) | sP1(X73,X74,X75)) ) | $spl17),
  inference(resolution,[],[f20947,f1102])).
fof(f20947,plain,(
  ( ! [X313,X314] : (~p(s(bool,X314)) | sP13(X313,X314) | sP13('F_0',X313)) ) | $spl17),
  inference(resolution,[],[f11246,f1332])).
fof(f50491,plain,(
  ( ! [X14,X12,X15,X13] : (sP13('F_0',X12) | sP3(X13,X14,X15) | p(s(bool,X13)) | ~sP1(X14,X15,X13) | ~sP0(X15,X14,X13)) ) | $spl17),
  inference(subsumption_resolution,[],[f50482,f20945])).
fof(f50482,plain,(
  ( ! [X14,X12,X15,X13] : (sP13(X12,X13) | sP13('F_0',X12) | sP3(X13,X14,X15) | p(s(bool,X13)) | ~sP1(X14,X15,X13) | ~sP0(X15,X14,X13)) ) | $spl17),
  inference(resolution,[],[f47124,f1094])).
fof(f47124,plain,(
  ( ! [X61,X62,X60,X63] : (sP13(X60,X61) | sP13('F_0',X60) | sP2(X61,X62,X63)) ) | $spl17),
  inference(resolution,[],[f20947,f1098])).
fof(f50176,plain,(
  ( ! [X10,X8,X11,X9] : (sP13('F_0',X9) | sP3(X10,X8,X11) | p(s(bool,X8)) | ~sP2(X10,X11,X8) | ~sP0(X11,X8,X10)) ) | $spl17),
  inference(subsumption_resolution,[],[f50167,f20944])).
fof(f20944,plain,(
  ( ! [X308,X307] : (~sP13(X308,X307) | p(s(bool,X308)) | sP13('F_0',X307)) ) | $spl17),
  inference(resolution,[],[f11246,f1327])).
fof(f50167,plain,(
  ( ! [X10,X8,X11,X9] : (sP13(X8,X9) | sP13('F_0',X9) | sP3(X10,X8,X11) | p(s(bool,X8)) | ~sP2(X10,X11,X8) | ~sP0(X11,X8,X10)) ) | $spl17),
  inference(resolution,[],[f46802,f1093])).
fof(f46802,plain,(
  ( ! [X74,X72,X75,X73] : (sP13(X72,X73) | sP13('F_0',X73) | sP1(X72,X74,X75)) ) | $spl17),
  inference(resolution,[],[f20946,f1102])).
fof(f20946,plain,(
  ( ! [X312,X311] : (~p(s(bool,X312)) | sP13(X312,X311) | sP13('F_0',X311)) ) | $spl17),
  inference(resolution,[],[f11246,f1329])).
fof(f50086,plain,(
  ( ! [X14,X12,X15,X13] : (sP13('F_0',X13) | sP3(X12,X14,X15) | p(s(bool,X12)) | ~sP1(X14,X15,X12) | ~sP0(X15,X14,X12)) ) | $spl17),
  inference(subsumption_resolution,[],[f50077,f20944])).
fof(f50077,plain,(
  ( ! [X14,X12,X15,X13] : (sP13(X12,X13) | sP13('F_0',X13) | sP3(X12,X14,X15) | p(s(bool,X12)) | ~sP1(X14,X15,X12) | ~sP0(X15,X14,X12)) ) | $spl17),
  inference(resolution,[],[f46799,f1094])).
fof(f46799,plain,(
  ( ! [X61,X62,X60,X63] : (sP13(X60,X61) | sP13('F_0',X61) | sP2(X60,X62,X63)) ) | $spl17),
  inference(resolution,[],[f20946,f1098])).
fof(f45362,plain,(
  ( ! [X491] : (sP13(X491,'F_0')) ) | $spl430),
  inference(cnf_transformation,[],[f45362_D])).
fof(f45362_D,plain,(
  ( ! [X491] : (sP13(X491,'F_0')) ) <=> ~$spl430),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl430])])).
fof(f49766,plain,(
  ( ! [X10,X8,X11,X9] : (sP13(X8,'F_0') | sP3(X10,X9,X11) | p(s(bool,X9)) | ~sP2(X10,X11,X9) | ~sP0(X11,X9,X10)) ) | $spl17),
  inference(subsumption_resolution,[],[f49756,f20627])).
fof(f20627,plain,(
  ( ! [X310,X309] : (~sP13(X309,X310) | p(s(bool,X310)) | sP13(X309,'F_0')) ) | $spl17),
  inference(resolution,[],[f11245,f1327])).
fof(f49756,plain,(
  ( ! [X10,X8,X11,X9] : (sP13(X8,X9) | sP13(X8,'F_0') | sP3(X10,X9,X11) | p(s(bool,X9)) | ~sP2(X10,X11,X9) | ~sP0(X11,X9,X10)) ) | $spl17),
  inference(resolution,[],[f45092,f1093])).
fof(f49674,plain,(
  ( ! [X14,X12,X15,X13] : (sP13(X12,'F_0') | sP3(X13,X14,X15) | p(s(bool,X13)) | ~sP1(X14,X15,X13) | ~sP0(X15,X14,X13)) ) | $spl17),
  inference(subsumption_resolution,[],[f49664,f20627])).
fof(f49664,plain,(
  ( ! [X14,X12,X15,X13] : (sP13(X12,X13) | sP13(X12,'F_0') | sP3(X13,X14,X15) | p(s(bool,X13)) | ~sP1(X14,X15,X13) | ~sP0(X15,X14,X13)) ) | $spl17),
  inference(resolution,[],[f45089,f1094])).
fof(f49351,plain,(
  ( ! [X10,X8,X11,X9] : (sP13(X9,'F_0') | sP3(X10,X8,X11) | p(s(bool,X8)) | ~sP2(X10,X11,X8) | ~sP0(X11,X8,X10)) ) | $spl17),
  inference(subsumption_resolution,[],[f49341,f20626])).
fof(f20626,plain,(
  ( ! [X308,X307] : (~sP13(X308,X307) | p(s(bool,X308)) | sP13(X307,'F_0')) ) | $spl17),
  inference(resolution,[],[f11245,f1327])).
fof(f49341,plain,(
  ( ! [X10,X8,X11,X9] : (sP13(X8,X9) | sP13(X9,'F_0') | sP3(X10,X8,X11) | p(s(bool,X8)) | ~sP2(X10,X11,X8) | ~sP0(X11,X8,X10)) ) | $spl17),
  inference(resolution,[],[f44411,f1093])).
fof(f49259,plain,(
  $false | ($spl17 | $spl430)),
  inference(subsumption_resolution,[],[f49254,f1827])).
fof(f49254,plain,(
  p(s(bool,'F_0')) | ($spl17 | $spl430)),
  inference(resolution,[],[f45362,f11244])).
fof(f11244,plain,(
  ( ! [X213] : (~sP13('F_0',X213) | p(s(bool,X213))) ) | $spl17),
  inference(resolution,[],[f1827,f1327])).
fof(f49253,plain,(
  $false | ($spl133 | $spl430)),
  inference(resolution,[],[f45362,f6567])).
fof(f6567,plain,(
  ~sP13('F_0','F_0') | $spl133),
  inference(cnf_transformation,[],[f6567_D])).
fof(f6567_D,plain,(
  ~sP13('F_0','F_0') <=> ~$spl133),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl133])])).
fof(f49238,plain,(
  ( ! [X14,X12,X15,X13] : (sP13(X13,'F_0') | sP3(X12,X14,X15) | p(s(bool,X12)) | ~sP1(X14,X15,X12) | ~sP0(X15,X14,X12)) ) | $spl17),
  inference(subsumption_resolution,[],[f49228,f20626])).
fof(f49228,plain,(
  ( ! [X14,X12,X15,X13] : (sP13(X12,X13) | sP13(X13,'F_0') | sP3(X12,X14,X15) | p(s(bool,X12)) | ~sP1(X14,X15,X12) | ~sP0(X15,X14,X12)) ) | $spl17),
  inference(resolution,[],[f44408,f1094])).
fof(f49112,plain,(
  ( ! [X0,X3,X1] : (sP13(X0,'T_0') | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | sP13(X1,X0)) ) | $spl444),
  inference(cnf_transformation,[],[f49112_D])).
fof(f49112_D,plain,(
  ( ! [X0,X3,X1] : (sP13(X0,'T_0') | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | sP13(X1,X0)) ) <=> ~$spl444),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl444])])).
fof(f48922,plain,(
  ( ! [X472,X471,X473,X470] : (sP13(X470,'T_0') | sP13(X471,X470) | p(s(bool,X472)) | p(s(bool,X473)) | s(bool,X471) != s(bool,X473)) ) | $spl22),
  inference(resolution,[],[f22717,f1535])).
fof(f48811,plain,(
  ( ! [X39,X37,X35,X38,X36] : (sP13(X35,'T_0') | sP13(X36,X35) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X37) | s(bool,X38) != s(bool,X39)) ) | $spl22),
  inference(resolution,[],[f22717,f1087])).
fof(f48808,plain,(
  ( ! [X24,X23,X21,X22,X20] : (sP13(X20,'T_0') | sP13(X21,X20) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X21) != s(bool,X24)) ) | $spl22),
  inference(resolution,[],[f22717,f1086])).
fof(f48807,plain,(
  ( ! [X19,X17,X15,X18,X16] : (sP13(X15,'T_0') | sP13(X16,X15) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl22),
  inference(resolution,[],[f22717,f1085])).
fof(f48806,plain,(
  ( ! [X14,X12,X10,X13,X11] : (sP13(X10,'T_0') | sP13(X11,X10) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X12) | s(bool,X13) != s(bool,X14)) ) | $spl22),
  inference(resolution,[],[f22717,f1083])).
fof(f48804,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13(X0,'T_0') | sP13(X1,X0) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) ) | $spl22),
  inference(resolution,[],[f22717,f1081])).
fof(f48737,plain,(
  ( ! [X0,X3,X1] : (sP13(X0,'T_0') | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | sP13(X0,X1)) ) | $spl442),
  inference(cnf_transformation,[],[f48737_D])).
fof(f48737_D,plain,(
  ( ! [X0,X3,X1] : (sP13(X0,'T_0') | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | sP13(X0,X1)) ) <=> ~$spl442),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl442])])).
fof(f48547,plain,(
  ( ! [X472,X471,X473,X470] : (sP13(X470,'T_0') | sP13(X470,X471) | p(s(bool,X472)) | p(s(bool,X473)) | s(bool,X471) != s(bool,X473)) ) | $spl22),
  inference(resolution,[],[f22716,f1535])).
fof(f48436,plain,(
  ( ! [X39,X37,X35,X38,X36] : (sP13(X35,'T_0') | sP13(X35,X36) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X37) | s(bool,X38) != s(bool,X39)) ) | $spl22),
  inference(resolution,[],[f22716,f1087])).
fof(f48433,plain,(
  ( ! [X24,X23,X21,X22,X20] : (sP13(X20,'T_0') | sP13(X20,X21) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X21) != s(bool,X24)) ) | $spl22),
  inference(resolution,[],[f22716,f1086])).
fof(f48432,plain,(
  ( ! [X19,X17,X15,X18,X16] : (sP13(X15,'T_0') | sP13(X15,X16) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl22),
  inference(resolution,[],[f22716,f1085])).
fof(f48431,plain,(
  ( ! [X14,X12,X10,X13,X11] : (sP13(X10,'T_0') | sP13(X10,X11) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X12) | s(bool,X13) != s(bool,X14)) ) | $spl22),
  inference(resolution,[],[f22716,f1083])).
fof(f48429,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13(X0,'T_0') | sP13(X0,X1) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) ) | $spl22),
  inference(resolution,[],[f22716,f1081])).
fof(f48242,plain,(
  ( ! [X0,X3,X1] : (sP13('T_0',X0) | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | sP13(X1,X0)) ) | $spl440),
  inference(cnf_transformation,[],[f48242_D])).
fof(f48242_D,plain,(
  ( ! [X0,X3,X1] : (sP13('T_0',X0) | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | sP13(X1,X0)) ) <=> ~$spl440),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl440])])).
fof(f48053,plain,(
  ( ! [X472,X471,X473,X470] : (sP13('T_0',X470) | sP13(X471,X470) | p(s(bool,X472)) | p(s(bool,X473)) | s(bool,X471) != s(bool,X473)) ) | $spl22),
  inference(resolution,[],[f21284,f1535])).
fof(f47942,plain,(
  ( ! [X39,X37,X35,X38,X36] : (sP13('T_0',X35) | sP13(X36,X35) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X37) | s(bool,X38) != s(bool,X39)) ) | $spl22),
  inference(resolution,[],[f21284,f1087])).
fof(f47939,plain,(
  ( ! [X24,X23,X21,X22,X20] : (sP13('T_0',X20) | sP13(X21,X20) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X21) != s(bool,X24)) ) | $spl22),
  inference(resolution,[],[f21284,f1086])).
fof(f47938,plain,(
  ( ! [X19,X17,X15,X18,X16] : (sP13('T_0',X15) | sP13(X16,X15) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl22),
  inference(resolution,[],[f21284,f1085])).
fof(f47937,plain,(
  ( ! [X14,X12,X10,X13,X11] : (sP13('T_0',X10) | sP13(X11,X10) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X12) | s(bool,X13) != s(bool,X14)) ) | $spl22),
  inference(resolution,[],[f21284,f1083])).
fof(f47935,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('T_0',X0) | sP13(X1,X0) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) ) | $spl22),
  inference(resolution,[],[f21284,f1081])).
fof(f47872,plain,(
  ( ! [X0,X3,X1] : (sP13('T_0',X0) | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | sP13(X0,X1)) ) | $spl438),
  inference(cnf_transformation,[],[f47872_D])).
fof(f47872_D,plain,(
  ( ! [X0,X3,X1] : (sP13('T_0',X0) | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | sP13(X0,X1)) ) <=> ~$spl438),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl438])])).
fof(f47683,plain,(
  ( ! [X472,X471,X473,X470] : (sP13('T_0',X470) | sP13(X470,X471) | p(s(bool,X472)) | p(s(bool,X473)) | s(bool,X471) != s(bool,X473)) ) | $spl22),
  inference(resolution,[],[f21283,f1535])).
fof(f47572,plain,(
  ( ! [X39,X37,X35,X38,X36] : (sP13('T_0',X35) | sP13(X35,X36) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X37) | s(bool,X38) != s(bool,X39)) ) | $spl22),
  inference(resolution,[],[f21283,f1087])).
fof(f47569,plain,(
  ( ! [X24,X23,X21,X22,X20] : (sP13('T_0',X20) | sP13(X20,X21) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X21) != s(bool,X24)) ) | $spl22),
  inference(resolution,[],[f21283,f1086])).
fof(f47568,plain,(
  ( ! [X19,X17,X15,X18,X16] : (sP13('T_0',X15) | sP13(X15,X16) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl22),
  inference(resolution,[],[f21283,f1085])).
fof(f47567,plain,(
  ( ! [X14,X12,X10,X13,X11] : (sP13('T_0',X10) | sP13(X10,X11) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X12) | s(bool,X13) != s(bool,X14)) ) | $spl22),
  inference(resolution,[],[f21283,f1083])).
fof(f47565,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('T_0',X0) | sP13(X0,X1) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) ) | $spl22),
  inference(resolution,[],[f21283,f1081])).
fof(f44675,plain,(
  ( ! [X491] : (sP13('F_0',X491) | sP13(X491,'F_0')) ) | $spl426),
  inference(cnf_transformation,[],[f44675_D])).
fof(f44675_D,plain,(
  ( ! [X491] : (sP13('F_0',X491) | sP13(X491,'F_0')) ) <=> ~$spl426),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl426])])).
fof(f47237,plain,(
  ( ! [X494,X496,X495] : (sP13(X494,'F_0') | sP13('F_0',X494) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X495))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X496)))) ) | $spl17),
  inference(resolution,[],[f20947,f1496])).
fof(f47236,plain,(
  ( ! [X492,X493,X491] : (sP13(X491,'F_0') | sP13('F_0',X491) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X492))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X493)))) ) | $spl17),
  inference(resolution,[],[f20947,f1494])).
fof(f47389,plain,(
  ( ! [X0,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X3) | ~p(s(bool,X3)) | sP13('F_0',X0)) ) | $spl436),
  inference(cnf_transformation,[],[f47389_D])).
fof(f47389_D,plain,(
  ( ! [X0,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X3) | ~p(s(bool,X3)) | sP13('F_0',X0)) ) <=> ~$spl436),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl436])])).
fof(f47230,plain,(
  ( ! [X476,X474,X475,X477] : (sP13(X474,X475) | sP13('F_0',X474) | p(s(bool,X476)) | ~p(s(bool,X477)) | s(bool,X475) != s(bool,X477)) ) | $spl17),
  inference(resolution,[],[f20947,f1535])).
fof(f47118,plain,(
  ( ! [X39,X37,X35,X38,X36] : (sP13(X35,X36) | sP13('F_0',X35) | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X38) | s(bool,X37) != s(bool,X39)) ) | $spl17),
  inference(resolution,[],[f20947,f1087])).
fof(f47116,plain,(
  ( ! [X28,X26,X29,X27,X25] : (sP13(X25,X26) | sP13('F_0',X25) | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X26) != s(bool,X28)) ) | $spl17),
  inference(resolution,[],[f20947,f1086])).
fof(f47114,plain,(
  ( ! [X19,X17,X15,X18,X16] : (sP13(X15,X16) | sP13('F_0',X15) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl17),
  inference(resolution,[],[f20947,f1085])).
fof(f47113,plain,(
  ( ! [X14,X12,X10,X13,X11] : (sP13(X10,X11) | sP13('F_0',X10) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,X14)) ) | $spl17),
  inference(resolution,[],[f20947,f1083])).
fof(f47111,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13(X0,X1) | sP13('F_0',X0) | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) ) | $spl17),
  inference(resolution,[],[f20947,f1081])).
fof(f47068,plain,(
  ( ! [X494,X496,X495] : (sP13('F_0',X494) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X495))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X496)))) ) | $spl17),
  inference(duplicate_literal_removal,[],[f46912])).
fof(f46912,plain,(
  ( ! [X494,X496,X495] : (sP13('F_0',X494) | sP13('F_0',X494) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X495))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X496)))) ) | $spl17),
  inference(resolution,[],[f20946,f1496])).
fof(f47069,plain,(
  ( ! [X492,X493,X491] : (sP13('F_0',X491) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X492))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X493)))) ) | $spl17),
  inference(duplicate_literal_removal,[],[f46911])).
fof(f46911,plain,(
  ( ! [X492,X493,X491] : (sP13('F_0',X491) | sP13('F_0',X491) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X492))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X493)))) ) | $spl17),
  inference(resolution,[],[f20946,f1494])).
fof(f47070,plain,(
  ( ! [X0,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X3) | ~p(s(bool,X3)) | sP13('F_0',X1)) ) | $spl432),
  inference(cnf_transformation,[],[f47070_D])).
fof(f47070_D,plain,(
  ( ! [X0,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X3) | ~p(s(bool,X3)) | sP13('F_0',X1)) ) <=> ~$spl432),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl432])])).
fof(f46905,plain,(
  ( ! [X476,X474,X475,X477] : (sP13(X474,X475) | sP13('F_0',X475) | p(s(bool,X476)) | ~p(s(bool,X477)) | s(bool,X474) != s(bool,X477)) ) | $spl17),
  inference(resolution,[],[f20946,f1535])).
fof(f46793,plain,(
  ( ! [X39,X37,X35,X38,X36] : (sP13(X35,X36) | sP13('F_0',X36) | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X35) != s(bool,X38) | s(bool,X37) != s(bool,X39)) ) | $spl17),
  inference(resolution,[],[f20946,f1087])).
fof(f46791,plain,(
  ( ! [X28,X26,X29,X27,X25] : (sP13(X25,X26) | sP13('F_0',X26) | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X25) != s(bool,X28)) ) | $spl17),
  inference(resolution,[],[f20946,f1086])).
fof(f46789,plain,(
  ( ! [X19,X17,X15,X18,X16] : (sP13(X15,X16) | sP13('F_0',X16) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X15) != s(bool,X18)) ) | $spl17),
  inference(resolution,[],[f20946,f1085])).
fof(f46788,plain,(
  ( ! [X14,X12,X10,X13,X11] : (sP13(X10,X11) | sP13('F_0',X11) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X10) != s(bool,X13) | s(bool,X12) != s(bool,X14)) ) | $spl17),
  inference(resolution,[],[f20946,f1083])).
fof(f46786,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13(X0,X1) | sP13('F_0',X1) | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X0) != s(bool,X3)) ) | $spl17),
  inference(resolution,[],[f20946,f1081])).
fof(f46429,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f46251,f46054])).
fof(f46054,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl10),
  inference(equality_resolution,[],[f1810])).
fof(f46251,plain,(
  ( ! [X432,X431] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X431),s('type.num.num',X432))))) ) | $spl10),
  inference(resolution,[],[f46054,f1346])).
fof(f46428,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f46244,f46054])).
fof(f46244,plain,(
  ( ! [X420,X419] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X419))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X420))))))) ) | $spl10),
  inference(resolution,[],[f46054,f1346])).
fof(f46427,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f46243,f46054])).
fof(f46243,plain,(
  ( ! [X418,X417] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X417),s('type.num.num',X418))))) ) | $spl10),
  inference(resolution,[],[f46054,f1322])).
fof(f46426,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f46242,f46054])).
fof(f46242,plain,(
  ( ! [X416,X415] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X415),s('type.num.num',X416))))) ) | $spl10),
  inference(resolution,[],[f46054,f1320])).
fof(f46425,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f46236,f46054])).
fof(f46236,plain,(
  ( ! [X403,X402] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X402),s('type.num.num',X403))))) ) | $spl10),
  inference(resolution,[],[f46054,f1348])).
fof(f46422,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f46226,f46054])).
fof(f46226,plain,(
  ( ! [X383,X382] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X382))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X383))))))) ) | $spl10),
  inference(resolution,[],[f46054,f1348])).
fof(f46421,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f46225,f46054])).
fof(f46225,plain,(
  ( ! [X380,X381] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X380),s('type.num.num',X381))))) ) | $spl10),
  inference(resolution,[],[f46054,f1322])).
fof(f46420,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f46224,f46054])).
fof(f46224,plain,(
  ( ! [X379,X378] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X378),s('type.num.num',X379))))) ) | $spl10),
  inference(resolution,[],[f46054,f1320])).
fof(f46214,plain,(
  $false | ($spl10 | $spl22)),
  inference(resolution,[],[f46054,f1837])).
fof(f46221,plain,(
  $false | $spl10),
  inference(resolution,[],[f46054,f1436])).
fof(f46233,plain,(
  $false | ($spl2 | $spl10)),
  inference(resolution,[],[f46054,f1546])).
fof(f46250,plain,(
  $false | $spl10),
  inference(resolution,[],[f46054,f1434])).
fof(f46259,plain,(
  $false | $spl10),
  inference(resolution,[],[f46054,f1435])).
fof(f45958,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f45782,f45576])).
fof(f45576,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl8),
  inference(equality_resolution,[],[f1809])).
fof(f45782,plain,(
  ( ! [X467,X468] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X467),s('type.num.num',X468))))) ) | $spl8),
  inference(resolution,[],[f45576,f1345])).
fof(f1345,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f987])).
fof(f45957,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f45773,f45576])).
fof(f45773,plain,(
  ( ! [X449,X450] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X449))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X450))))))) ) | $spl8),
  inference(resolution,[],[f45576,f1345])).
fof(f45956,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f45772,f45576])).
fof(f45772,plain,(
  ( ! [X447,X448] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X447),s('type.num.num',X448))))) ) | $spl8),
  inference(resolution,[],[f45576,f1323])).
fof(f1323,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f976])).
fof(f45955,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f45771,f45576])).
fof(f45771,plain,(
  ( ! [X445,X446] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X445),s('type.num.num',X446))))) ) | $spl8),
  inference(resolution,[],[f45576,f1321])).
fof(f1321,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f975])).
fof(f45954,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f45770,f45576])).
fof(f45770,plain,(
  ( ! [X443,X444] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X443),s('type.num.num',X444))))) ) | $spl8),
  inference(resolution,[],[f45576,f1307])).
fof(f45953,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f45763,f45576])).
fof(f45763,plain,(
  ( ! [X430,X431] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X430),s('type.num.num',X431))))) ) | $spl8),
  inference(resolution,[],[f45576,f1347])).
fof(f1347,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f988])).
fof(f45947,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f45753,f45576])).
fof(f45753,plain,(
  ( ! [X401,X402] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X401))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X402))))))) ) | $spl8),
  inference(resolution,[],[f45576,f1347])).
fof(f45946,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f45752,f45576])).
fof(f45752,plain,(
  ( ! [X399,X400] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X399),s('type.num.num',X400))))) ) | $spl8),
  inference(resolution,[],[f45576,f1323])).
fof(f45945,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f45751,f45576])).
fof(f45751,plain,(
  ( ! [X397,X398] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X397),s('type.num.num',X398))))) ) | $spl8),
  inference(resolution,[],[f45576,f1321])).
fof(f45944,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f45750,f45576])).
fof(f45750,plain,(
  ( ! [X395,X396] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X395),s('type.num.num',X396))))) ) | $spl8),
  inference(resolution,[],[f45576,f1307])).
fof(f45943,plain,(
  $false | ($spl8 | $spl17)),
  inference(subsumption_resolution,[],[f45744,f11138])).
fof(f11138,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))) ) | $spl17),
  inference(resolution,[],[f1827,f1508])).
fof(f1508,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f1073])).
fof(f1073,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f758])).
fof(f758,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f409])).
fof(f409,axiom,(
  ! [X16] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))) <=> p(s(bool,'F_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_eq|split|1')).
fof(f45744,plain,(
  ( ! [X382] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X382)))) ) | $spl8),
  inference(resolution,[],[f45576,f1511])).
fof(f1511,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f1074])).
fof(f1074,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f759])).
fof(f759,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f411])).
fof(f411,axiom,(
  ! [X16] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))) <=> p(s(bool,'F_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_eq|split|0')).
fof(f45942,plain,(
  $false | ($spl8 | $spl17)),
  inference(subsumption_resolution,[],[f45743,f11138])).
fof(f45743,plain,(
  ( ! [X381] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X381)))) ) | $spl8),
  inference(resolution,[],[f45576,f1509])).
fof(f1509,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f1073])).
fof(f45941,plain,(
  $false | ($spl8 | $spl17)),
  inference(subsumption_resolution,[],[f45742,f11136])).
fof(f11136,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4)))) ) | $spl17),
  inference(resolution,[],[f1827,f1502])).
fof(f1502,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f1071])).
fof(f1071,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f754])).
fof(f754,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f408])).
fof(f408,axiom,(
  ! [X16] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))) <=> p(s(bool,'F_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_eq|split|2')).
fof(f45742,plain,(
  ( ! [X380] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X380)))) ) | $spl8),
  inference(resolution,[],[f45576,f1505])).
fof(f1505,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f1072])).
fof(f1072,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f755])).
fof(f755,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f406])).
fof(f406,axiom,(
  ! [X16] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))) <=> p(s(bool,'F_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_eq|split|3')).
fof(f45940,plain,(
  $false | ($spl8 | $spl17)),
  inference(subsumption_resolution,[],[f45741,f11136])).
fof(f45741,plain,(
  ( ! [X379] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X379)))) ) | $spl8),
  inference(resolution,[],[f45576,f1503])).
fof(f1503,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f1071])).
fof(f45745,plain,(
  $false | ($spl8 | $spl17)),
  inference(resolution,[],[f45576,f1827])).
fof(f45764,plain,(
  $false | $spl8),
  inference(resolution,[],[f45576,f1410])).
fof(f1410,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f670])).
fof(f670,plain,(
  ! [X0] : ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f669])).
fof(f669,plain,(
  ! [X0] : ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f293])).
fof(f293,axiom,(
  ! [X16] : ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))),s('type.num.num','const.num.|48|_0'))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.NOT_SUC_LESS_EQ_|48|')).
fof(f45767,plain,(
  $false | $spl8),
  inference(resolution,[],[f45576,f1411])).
fof(f1411,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f672])).
fof(f672,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X0))))),
  inference(flattening,[],[f671])).
fof(f671,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X0))))),
  inference(rectify,[],[f352])).
fof(f352,axiom,(
  ! [X16] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num',X16))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.prim_rec.LESS_REFL')).
fof(f45780,plain,(
  $false | $spl8),
  inference(resolution,[],[f45576,f1412])).
fof(f1412,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f674])).
fof(f674,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f673])).
fof(f673,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f296])).
fof(f296,axiom,(
  ! [X16] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num','const.num.|48|_0'))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.prim_rec.NOT_LESS_|48|')).
fof(f45844,plain,(
  $false | ($spl8 | $spl191)),
  inference(resolution,[],[f45576,f10895])).
fof(f45358,plain,(
  ( ! [X494,X496,X495] : (sP13(X494,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X495))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X496)))) ) | $spl17),
  inference(duplicate_literal_removal,[],[f45202])).
fof(f45202,plain,(
  ( ! [X494,X496,X495] : (sP13(X494,'F_0') | sP13(X494,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X495))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X496)))) ) | $spl17),
  inference(resolution,[],[f20629,f1496])).
fof(f45359,plain,(
  ( ! [X492,X493,X491] : (sP13(X491,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X492))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X493)))) ) | $spl17),
  inference(duplicate_literal_removal,[],[f45201])).
fof(f45201,plain,(
  ( ! [X492,X493,X491] : (sP13(X491,'F_0') | sP13(X491,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X492))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X493)))) ) | $spl17),
  inference(resolution,[],[f20629,f1494])).
fof(f45360,plain,(
  ( ! [X0,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X3) | ~p(s(bool,X3)) | sP13(X0,'F_0')) ) | $spl428),
  inference(cnf_transformation,[],[f45360_D])).
fof(f45360_D,plain,(
  ( ! [X0,X3,X1] : (sP13(X0,X1) | s(bool,X1) != s(bool,X3) | ~p(s(bool,X3)) | sP13(X0,'F_0')) ) <=> ~$spl428),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl428])])).
fof(f45195,plain,(
  ( ! [X476,X474,X475,X477] : (sP13(X474,X475) | sP13(X474,'F_0') | p(s(bool,X476)) | ~p(s(bool,X477)) | s(bool,X475) != s(bool,X477)) ) | $spl17),
  inference(resolution,[],[f20629,f1535])).
fof(f45083,plain,(
  ( ! [X39,X37,X35,X38,X36] : (sP13(X35,X36) | sP13(X35,'F_0') | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X38) | s(bool,X37) != s(bool,X39)) ) | $spl17),
  inference(resolution,[],[f20629,f1087])).
fof(f45081,plain,(
  ( ! [X28,X26,X29,X27,X25] : (sP13(X25,X26) | sP13(X25,'F_0') | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X26) != s(bool,X28)) ) | $spl17),
  inference(resolution,[],[f20629,f1086])).
fof(f45079,plain,(
  ( ! [X19,X17,X15,X18,X16] : (sP13(X15,X16) | sP13(X15,'F_0') | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl17),
  inference(resolution,[],[f20629,f1085])).
fof(f45078,plain,(
  ( ! [X14,X12,X10,X13,X11] : (sP13(X10,X11) | sP13(X10,'F_0') | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,X14)) ) | $spl17),
  inference(resolution,[],[f20629,f1083])).
fof(f45076,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13(X0,X1) | sP13(X0,'F_0') | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) ) | $spl17),
  inference(resolution,[],[f20629,f1081])).
fof(f44521,plain,(
  ( ! [X494,X496,X495] : (sP13('F_0',X494) | sP13(X494,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X495))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X496)))) ) | $spl17),
  inference(resolution,[],[f20628,f1496])).
fof(f44520,plain,(
  ( ! [X492,X493,X491] : (sP13('F_0',X491) | sP13(X491,'F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X492))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X493)))) ) | $spl17),
  inference(resolution,[],[f20628,f1494])).
fof(f44673,plain,(
  ( ! [X0,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X3) | ~p(s(bool,X3)) | sP13(X1,'F_0')) ) | $spl424),
  inference(cnf_transformation,[],[f44673_D])).
fof(f44673_D,plain,(
  ( ! [X0,X3,X1] : (sP13(X0,X1) | s(bool,X0) != s(bool,X3) | ~p(s(bool,X3)) | sP13(X1,'F_0')) ) <=> ~$spl424),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl424])])).
fof(f44514,plain,(
  ( ! [X476,X474,X475,X477] : (sP13(X474,X475) | sP13(X475,'F_0') | p(s(bool,X476)) | ~p(s(bool,X477)) | s(bool,X474) != s(bool,X477)) ) | $spl17),
  inference(resolution,[],[f20628,f1535])).
fof(f44402,plain,(
  ( ! [X39,X37,X35,X38,X36] : (sP13(X35,X36) | sP13(X36,'F_0') | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X35) != s(bool,X38) | s(bool,X37) != s(bool,X39)) ) | $spl17),
  inference(resolution,[],[f20628,f1087])).
fof(f44400,plain,(
  ( ! [X28,X26,X29,X27,X25] : (sP13(X25,X26) | sP13(X26,'F_0') | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X25) != s(bool,X28)) ) | $spl17),
  inference(resolution,[],[f20628,f1086])).
fof(f44398,plain,(
  ( ! [X19,X17,X15,X18,X16] : (sP13(X15,X16) | sP13(X16,'F_0') | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X15) != s(bool,X18)) ) | $spl17),
  inference(resolution,[],[f20628,f1085])).
fof(f44397,plain,(
  ( ! [X14,X12,X10,X13,X11] : (sP13(X10,X11) | sP13(X11,'F_0') | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X10) != s(bool,X13) | s(bool,X12) != s(bool,X14)) ) | $spl17),
  inference(resolution,[],[f20628,f1083])).
fof(f44395,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13(X0,X1) | sP13(X1,'F_0') | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X0) != s(bool,X3)) ) | $spl17),
  inference(resolution,[],[f20628,f1081])).
fof(f44040,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.list.list'(X92),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.list.list'(X92),X96))) = s('type.list.list'(X92),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.list.list'(X92),'const.list.CONS_2'(s(X92,X95),s('type.list.list'(X92),X96)))))) ) | $spl422),
  inference(cnf_transformation,[],[f44040_D])).
fof(f44040_D,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.list.list'(X92),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.list.list'(X92),X96))) = s('type.list.list'(X92),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.list.list'(X92),'const.list.CONS_2'(s(X92,X95),s('type.list.list'(X92),X96)))))) ) <=> ~$spl422),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl422])])).
fof(f44063,plain,(
  ( ! [X191,X189,X192,X190,X188,X193] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X193),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X190))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.list.list'(X188),X192))) = s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X190))),s('type.list.list'(X188),'const.list.CONS_2'(s(X188,X191),s('type.list.list'(X188),X192)))))) )),
  inference(forward_demodulation,[],[f44062,f1161])).
fof(f44062,plain,(
  ( ! [X191,X189,X192,X190,X188,X193] : (s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X190))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.list.list'(X188),X192))) = s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X190))),s('type.list.list'(X188),'const.list.CONS_2'(s(X188,X191),s('type.list.list'(X188),X192))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X193),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f43546,f1161])).
fof(f43546,plain,(
  ( ! [X191,X189,X192,X190,X188,X193] : (s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X190))),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(X188),X192))) = s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X190))),s('type.list.list'(X188),'const.list.CONS_2'(s(X188,X191),s('type.list.list'(X188),X192))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X193),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19349,f1520])).
fof(f19349,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))) = s('type.list.list'(X0),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X0),X4)))) )),
  inference(forward_demodulation,[],[f19348,f1156])).
fof(f19348,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))) = s('type.list.list'(X0),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X0),X4)))) )),
  inference(forward_demodulation,[],[f19347,f1156])).
fof(f19347,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X0),X4))) = s('type.list.list'(X0),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))) )),
  inference(forward_demodulation,[],[f19346,f1156])).
fof(f19346,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))) = s('type.list.list'(X0),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X4)))) )),
  inference(forward_demodulation,[],[f1165,f1473])).
fof(f1473,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f729])).
fof(f729,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f94])).
fof(f94,axiom,(
  ! [X16,X23] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X16),s('type.num.num',X23))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_distrib|split|8')).
fof(f1165,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))) = s('type.list.list'(X0),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f556])).
fof(f556,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.list.list'(X0),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))) = s('type.list.list'(X0),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X4)))),
  inference(flattening,[],[f555])).
fof(f555,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : s('type.list.list'(X0),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))) = s('type.list.list'(X0),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X4)))),
  inference(rectify,[],[f180])).
fof(f180,axiom,(
  ! [X6] : ! [X23,X41,X13,X7] : s('type.list.list'(X6),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41))))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X7))))) = s('type.list.list'(X6),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X6),X7)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.rich_list.SEG_compute|split|4')).
fof(f44061,plain,(
  ( ! [X187,X185,X182,X186,X184,X183] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X187))) | s('type.list.list'(X182),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X183))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X184))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.list.list'(X182),X186))) = s('type.list.list'(X182),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X183))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X184))),s('type.list.list'(X182),'const.list.CONS_2'(s(X182,X185),s('type.list.list'(X182),X186)))))) )),
  inference(forward_demodulation,[],[f44060,f1161])).
fof(f44060,plain,(
  ( ! [X187,X185,X182,X186,X184,X183] : (s('type.list.list'(X182),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X183))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X184))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.list.list'(X182),X186))) = s('type.list.list'(X182),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X183))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X184))),s('type.list.list'(X182),'const.list.CONS_2'(s(X182,X185),s('type.list.list'(X182),X186))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X187)))) )),
  inference(forward_demodulation,[],[f43545,f1161])).
fof(f43545,plain,(
  ( ! [X187,X185,X182,X186,X184,X183] : (s('type.list.list'(X182),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X183))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X184))),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(X182),X186))) = s('type.list.list'(X182),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X183))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X184))),s('type.list.list'(X182),'const.list.CONS_2'(s(X182,X185),s('type.list.list'(X182),X186))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X187)))) )),
  inference(superposition,[],[f19349,f1519])).
fof(f44039,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.list.list'(X92),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.list.list'(X92),X96))) = s('type.list.list'(X92),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.list.list'(X92),'const.list.CONS_2'(s(X92,X95),s('type.list.list'(X92),X96))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f43530,f1161])).
fof(f43530,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.list.list'(X92),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(X92),X96))) = s('type.list.list'(X92),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.list.list'(X92),'const.list.CONS_2'(s(X92,X95),s('type.list.list'(X92),X96))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f19349,f1152])).
fof(f43972,plain,(
  ( ! [X85,X83,X86,X84] : (s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'(X83),'const.list.CONS_2'(s(X83,X85),s('type.list.list'(X83),X86))))) = s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X83),X86)))) ) | $spl410),
  inference(cnf_transformation,[],[f43972_D])).
fof(f43972_D,plain,(
  ( ! [X85,X83,X86,X84] : (s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'(X83),'const.list.CONS_2'(s(X83,X85),s('type.list.list'(X83),X86))))) = s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X83),X86)))) ) <=> ~$spl410),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl410])])).
fof(f43999,plain,(
  ( ! [X198,X193] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X193)))))) ) | $spl420),
  inference(cnf_transformation,[],[f43999_D])).
fof(f43999_D,plain,(
  ( ! [X198,X193] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X193)))))) ) <=> ~$spl420),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl420])])).
fof(f43998,plain,(
  ( ! [X198,X196,X194,X197,X195,X193] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X193))))) | s('type.list.list'(X194),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X195))),s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'(X194),'const.list.CONS_2'(s(X194,X196),s('type.list.list'(X194),X197))))) = s('type.list.list'(X194),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X195))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X194),X197)))) )),
  inference(forward_demodulation,[],[f43997,f1161])).
fof(f43997,plain,(
  ( ! [X198,X196,X194,X197,X195,X193] : (s('type.list.list'(X194),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X195))),s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'(X194),'const.list.CONS_2'(s(X194,X196),s('type.list.list'(X194),X197))))) = s('type.list.list'(X194),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X195))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X194),X197))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X193)))))) )),
  inference(forward_demodulation,[],[f43487,f1161])).
fof(f43487,plain,(
  ( ! [X198,X196,X194,X197,X195,X193] : (s('type.list.list'(X194),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X195))),s('type.num.num','const.num.|48|_0'),s('type.list.list'(X194),'const.list.CONS_2'(s(X194,X196),s('type.list.list'(X194),X197))))) = s('type.list.list'(X194),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X195))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X194),X197))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X193)))))) )),
  inference(superposition,[],[f19349,f1520])).
fof(f43996,plain,(
  ( ! [X187,X192] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X187))),s('type.num.num',X192)))) ) | $spl418),
  inference(cnf_transformation,[],[f43996_D])).
fof(f43996_D,plain,(
  ( ! [X187,X192] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X187))),s('type.num.num',X192)))) ) <=> ~$spl418),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl418])])).
fof(f43995,plain,(
  ( ! [X191,X189,X187,X192,X190,X188] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X187))),s('type.num.num',X192))) | s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'(X188),'const.list.CONS_2'(s(X188,X190),s('type.list.list'(X188),X191))))) = s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X188),X191)))) )),
  inference(forward_demodulation,[],[f43994,f1161])).
fof(f43994,plain,(
  ( ! [X191,X189,X187,X192,X190,X188] : (s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'(X188),'const.list.CONS_2'(s(X188,X190),s('type.list.list'(X188),X191))))) = s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X188),X191))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X187))),s('type.num.num',X192)))) )),
  inference(forward_demodulation,[],[f43486,f1161])).
fof(f43486,plain,(
  ( ! [X191,X189,X187,X192,X190,X188] : (s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X189))),s('type.num.num','const.num.|48|_0'),s('type.list.list'(X188),'const.list.CONS_2'(s(X188,X190),s('type.list.list'(X188),X191))))) = s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X188),X191))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X187))),s('type.num.num',X192)))) )),
  inference(superposition,[],[f19349,f1519])).
fof(f43978,plain,(
  ( ! [X103,X97,X102] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X102),s('type.num.num',X103)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X102),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X103),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))))))))) ) | $spl416),
  inference(cnf_transformation,[],[f43978_D])).
fof(f43978_D,plain,(
  ( ! [X103,X97,X102] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X102),s('type.num.num',X103)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X102),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X103),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))))))))) ) <=> ~$spl416),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl416])])).
fof(f43977,plain,(
  ( ! [X103,X101,X99,X97,X102,X100,X98] : (s('type.list.list'(X98),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X99))),s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,X100),s('type.list.list'(X98),X101))))) = s('type.list.list'(X98),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X99))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X98),X101))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X102),s('type.num.num',X103)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X102),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X103),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))))))))) )),
  inference(forward_demodulation,[],[f43471,f1161])).
fof(f43471,plain,(
  ( ! [X103,X101,X99,X97,X102,X100,X98] : (s('type.list.list'(X98),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X99))),s('type.num.num','const.num.|48|_0'),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,X100),s('type.list.list'(X98),X101))))) = s('type.list.list'(X98),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X99))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X98),X101))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X102),s('type.num.num',X103)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X102),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X103),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))))))))) )),
  inference(superposition,[],[f19349,f1297])).
fof(f43976,plain,(
  ( ! [X92] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num',X92))))))) ) | $spl414),
  inference(cnf_transformation,[],[f43976_D])).
fof(f43976_D,plain,(
  ( ! [X92] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num',X92))))))) ) <=> ~$spl414),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl414])])).
fof(f43975,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.list.list'(X93),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X94))),s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'(X93),'const.list.CONS_2'(s(X93,X95),s('type.list.list'(X93),X96))))) = s('type.list.list'(X93),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X94))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X93),X96))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num',X92))))))) )),
  inference(forward_demodulation,[],[f43470,f1161])).
fof(f43470,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.list.list'(X93),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X94))),s('type.num.num','const.num.|48|_0'),s('type.list.list'(X93),'const.list.CONS_2'(s(X93,X95),s('type.list.list'(X93),X96))))) = s('type.list.list'(X93),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X94))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X93),X96))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num',X92))))))) )),
  inference(superposition,[],[f19349,f1152])).
fof(f43973,plain,(
  ( ! [X82] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X82)))))) ) | $spl412),
  inference(cnf_transformation,[],[f43973_D])).
fof(f43973_D,plain,(
  ( ! [X82] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X82)))))) ) <=> ~$spl412),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl412])])).
fof(f43974,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X87))))) | s('type.list.list'(X88),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X89))),s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X90),s('type.list.list'(X88),X91))))) = s('type.list.list'(X88),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X89))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X88),X91)))) )),
  inference(forward_demodulation,[],[f43469,f1161])).
fof(f43469,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s('type.list.list'(X88),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X89))),s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X90),s('type.list.list'(X88),X91))))) = s('type.list.list'(X88),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X89))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X88),X91))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X87)))))) )),
  inference(superposition,[],[f19349,f1150])).
fof(f43971,plain,(
  ( ! [X85,X83,X86,X84,X82] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X82))))) | s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'(X83),'const.list.CONS_2'(s(X83,X85),s('type.list.list'(X83),X86))))) = s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X83),X86)))) )),
  inference(forward_demodulation,[],[f43468,f1161])).
fof(f43468,plain,(
  ( ! [X85,X83,X86,X84,X82] : (s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'(X83),'const.list.CONS_2'(s(X83,X85),s('type.list.list'(X83),X86))))) = s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X83),X86))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X82)))))) )),
  inference(superposition,[],[f19349,f1148])).
fof(f43938,plain,(
  ( ! [X85,X83,X86,X84] : (s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X84))),s('type.list.list'(X83),'const.list.CONS_2'(s(X83,X85),s('type.list.list'(X83),X86))))) = s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X83),X86)))) ) | $spl398),
  inference(cnf_transformation,[],[f43938_D])).
fof(f43938_D,plain,(
  ( ! [X85,X83,X86,X84] : (s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X84))),s('type.list.list'(X83),'const.list.CONS_2'(s(X83,X85),s('type.list.list'(X83),X86))))) = s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X83),X86)))) ) <=> ~$spl398),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl398])])).
fof(f43964,plain,(
  ( ! [X198,X193] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X193)))))) ) | $spl408),
  inference(cnf_transformation,[],[f43964_D])).
fof(f43964_D,plain,(
  ( ! [X198,X193] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X193)))))) ) <=> ~$spl408),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl408])])).
fof(f43963,plain,(
  ( ! [X198,X196,X194,X197,X195,X193] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X193))))) | s('type.list.list'(X194),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X195))),s('type.list.list'(X194),'const.list.CONS_2'(s(X194,X196),s('type.list.list'(X194),X197))))) = s('type.list.list'(X194),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X195))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X194),X197)))) )),
  inference(forward_demodulation,[],[f43962,f1161])).
fof(f43962,plain,(
  ( ! [X198,X196,X194,X197,X195,X193] : (s('type.list.list'(X194),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X195))),s('type.list.list'(X194),'const.list.CONS_2'(s(X194,X196),s('type.list.list'(X194),X197))))) = s('type.list.list'(X194),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X195))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X194),X197))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X193)))))) )),
  inference(forward_demodulation,[],[f43332,f1161])).
fof(f43332,plain,(
  ( ! [X198,X196,X194,X197,X195,X193] : (s('type.list.list'(X194),'const.rich_list.SEG_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X195))),s('type.list.list'(X194),'const.list.CONS_2'(s(X194,X196),s('type.list.list'(X194),X197))))) = s('type.list.list'(X194),'const.rich_list.SEG_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X195))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X194),X197))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X193)))))) )),
  inference(superposition,[],[f19349,f1520])).
fof(f43961,plain,(
  ( ! [X187,X192] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X187))),s('type.num.num',X192)))) ) | $spl406),
  inference(cnf_transformation,[],[f43961_D])).
fof(f43961_D,plain,(
  ( ! [X187,X192] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X187))),s('type.num.num',X192)))) ) <=> ~$spl406),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl406])])).
fof(f43960,plain,(
  ( ! [X191,X189,X187,X192,X190,X188] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X187))),s('type.num.num',X192))) | s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X189))),s('type.list.list'(X188),'const.list.CONS_2'(s(X188,X190),s('type.list.list'(X188),X191))))) = s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X188),X191)))) )),
  inference(forward_demodulation,[],[f43959,f1161])).
fof(f43959,plain,(
  ( ! [X191,X189,X187,X192,X190,X188] : (s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X189))),s('type.list.list'(X188),'const.list.CONS_2'(s(X188,X190),s('type.list.list'(X188),X191))))) = s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X188),X191))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X187))),s('type.num.num',X192)))) )),
  inference(forward_demodulation,[],[f43331,f1161])).
fof(f43331,plain,(
  ( ! [X191,X189,X187,X192,X190,X188] : (s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X189))),s('type.list.list'(X188),'const.list.CONS_2'(s(X188,X190),s('type.list.list'(X188),X191))))) = s('type.list.list'(X188),'const.rich_list.SEG_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X188),X191))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X187))),s('type.num.num',X192)))) )),
  inference(superposition,[],[f19349,f1519])).
fof(f43944,plain,(
  ( ! [X103,X97,X102] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X102),s('type.num.num',X103)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X102),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X103),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))))))))) ) | $spl404),
  inference(cnf_transformation,[],[f43944_D])).
fof(f43944_D,plain,(
  ( ! [X103,X97,X102] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X102),s('type.num.num',X103)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X102),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X103),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))))))))) ) <=> ~$spl404),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl404])])).
fof(f43943,plain,(
  ( ! [X103,X101,X99,X97,X102,X100,X98] : (s('type.list.list'(X98),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X99))),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,X100),s('type.list.list'(X98),X101))))) = s('type.list.list'(X98),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X99))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X98),X101))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X102),s('type.num.num',X103)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X102),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X103),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))))))))) )),
  inference(forward_demodulation,[],[f43316,f1161])).
fof(f43316,plain,(
  ( ! [X103,X101,X99,X97,X102,X100,X98] : (s('type.list.list'(X98),'const.rich_list.SEG_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X99))),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,X100),s('type.list.list'(X98),X101))))) = s('type.list.list'(X98),'const.rich_list.SEG_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X99))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X98),X101))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X102),s('type.num.num',X103)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X102),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X103),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))))))))) )),
  inference(superposition,[],[f19349,f1297])).
fof(f43942,plain,(
  ( ! [X92] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num',X92))))))) ) | $spl402),
  inference(cnf_transformation,[],[f43942_D])).
fof(f43942_D,plain,(
  ( ! [X92] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num',X92))))))) ) <=> ~$spl402),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl402])])).
fof(f43941,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.list.list'(X93),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.list.list'(X93),'const.list.CONS_2'(s(X93,X95),s('type.list.list'(X93),X96))))) = s('type.list.list'(X93),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X93),X96))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num',X92))))))) )),
  inference(forward_demodulation,[],[f43315,f1161])).
fof(f43315,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.list.list'(X93),'const.rich_list.SEG_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.list.list'(X93),'const.list.CONS_2'(s(X93,X95),s('type.list.list'(X93),X96))))) = s('type.list.list'(X93),'const.rich_list.SEG_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X93),X96))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num',X92))))))) )),
  inference(superposition,[],[f19349,f1152])).
fof(f43939,plain,(
  ( ! [X82] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X82)))))) ) | $spl400),
  inference(cnf_transformation,[],[f43939_D])).
fof(f43939_D,plain,(
  ( ! [X82] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X82)))))) ) <=> ~$spl400),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl400])])).
fof(f43940,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87))))) | s('type.list.list'(X88),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89))),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X90),s('type.list.list'(X88),X91))))) = s('type.list.list'(X88),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X88),X91)))) )),
  inference(forward_demodulation,[],[f43314,f1161])).
fof(f43314,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s('type.list.list'(X88),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89))),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X90),s('type.list.list'(X88),X91))))) = s('type.list.list'(X88),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X88),X91))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87)))))) )),
  inference(superposition,[],[f19349,f1150])).
fof(f43937,plain,(
  ( ! [X85,X83,X86,X84,X82] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X82))))) | s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X84))),s('type.list.list'(X83),'const.list.CONS_2'(s(X83,X85),s('type.list.list'(X83),X86))))) = s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X83),X86)))) )),
  inference(forward_demodulation,[],[f43313,f1161])).
fof(f43313,plain,(
  ( ! [X85,X83,X86,X84,X82] : (s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X84))),s('type.list.list'(X83),'const.list.CONS_2'(s(X83,X85),s('type.list.list'(X83),X86))))) = s('type.list.list'(X83),'const.rich_list.SEG_3'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(X83),X86))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X82)))))) )),
  inference(superposition,[],[f19349,f1148])).
fof(f41736,plain,(
  $false | ($spl22 | $spl164)),
  inference(subsumption_resolution,[],[f41671,f1837])).
fof(f41671,plain,(
  ~p(s(bool,'T_0')) | $spl164),
  inference(superposition,[],[f8405,f1514])).
fof(f41735,plain,(
  $false | ($spl22 | $spl164)),
  inference(subsumption_resolution,[],[f41670,f1837])).
fof(f41670,plain,(
  ~p(s(bool,'T_0')) | $spl164),
  inference(superposition,[],[f8405,f1507])).
fof(f41402,plain,(
  $false | $spl164),
  inference(resolution,[],[f8405,f1434])).
fof(f41062,plain,(
  $false | ($spl17 | $spl146)),
  inference(subsumption_resolution,[],[f41061,f1827])).
fof(f41061,plain,(
  p(s(bool,'F_0')) | $spl146),
  inference(forward_demodulation,[],[f40994,f1515])).
fof(f40994,plain,(
  ( ! [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl146),
  inference(superposition,[],[f8381,f1446])).
fof(f41060,plain,(
  $false | ($spl17 | $spl146)),
  inference(subsumption_resolution,[],[f40993,f1827])).
fof(f40993,plain,(
  p(s(bool,'F_0')) | $spl146),
  inference(superposition,[],[f8381,f1452])).
fof(f41059,plain,(
  $false | ($spl17 | $spl146)),
  inference(subsumption_resolution,[],[f40992,f1827])).
fof(f40992,plain,(
  p(s(bool,'F_0')) | $spl146),
  inference(superposition,[],[f8381,f1451])).
fof(f41030,plain,(
  ( ! [X27,X25] : (p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl396),
  inference(cnf_transformation,[],[f41030_D])).
fof(f41030_D,plain,(
  ( ! [X27,X25] : (p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl396),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl396])])).
fof(f40840,plain,(
  ( ! [X377,X376,X375] : (p(s(bool,X375)) | p(s(bool,X376)) | s(bool,X376) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X377),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl146),
  inference(resolution,[],[f8381,f1535])).
fof(f40729,plain,(
  ( ! [X54,X52,X53,X51] : (p(s(bool,X51)) | ~p(s(bool,X52)) | s(bool,X51) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X52) != s(bool,X54)) ) | $spl146),
  inference(resolution,[],[f8381,f1087])).
fof(f40726,plain,(
  ( ! [X43,X41,X42,X40] : (p(s(bool,X40)) | ~p(s(bool,X41)) | p(s(bool,X42)) | s(bool,X42) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl146),
  inference(resolution,[],[f8381,f1086])).
fof(f40725,plain,(
  ( ! [X39,X37,X38,X36] : (p(s(bool,X36)) | p(s(bool,X37)) | s(bool,X36) != s(bool,X38) | s(bool,X37) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl146),
  inference(resolution,[],[f8381,f1085])).
fof(f40724,plain,(
  ( ! [X35,X33,X34,X32] : (p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X32) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X33) != s(bool,X35)) ) | $spl146),
  inference(resolution,[],[f8381,f1083])).
fof(f40722,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X24) != s(bool,X26) | s(bool,X25) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl146),
  inference(resolution,[],[f8381,f1081])).
fof(f40705,plain,(
  $false | ($spl22 | $spl358)),
  inference(subsumption_resolution,[],[f40673,f1837])).
fof(f40673,plain,(
  ~p(s(bool,'T_0')) | $spl358),
  inference(superposition,[],[f30814,f1454])).
fof(f40704,plain,(
  $false | ($spl22 | $spl358)),
  inference(subsumption_resolution,[],[f40663,f1837])).
fof(f40663,plain,(
  ~p(s(bool,'T_0')) | $spl358),
  inference(superposition,[],[f30814,f1453])).
fof(f40702,plain,(
  $false | $spl358),
  inference(subsumption_resolution,[],[f40297,f30814])).
fof(f40297,plain,(
  ( ! [X30,X31] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num',X31))))) ) | $spl358),
  inference(resolution,[],[f30814,f1348])).
fof(f40699,plain,(
  $false | $spl358),
  inference(subsumption_resolution,[],[f40287,f30814])).
fof(f40287,plain,(
  ( ! [X10,X11] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))))))) ) | $spl358),
  inference(resolution,[],[f30814,f1348])).
fof(f40282,plain,(
  $false | $spl358),
  inference(resolution,[],[f30814,f1436])).
fof(f40294,plain,(
  $false | ($spl2 | $spl358)),
  inference(resolution,[],[f30814,f1546])).
fof(f39010,plain,(
  ( ! [X41,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X41)))))) | s('type.list.list'(X40),X41) = s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK38(X41,X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK39(X41,X40)),s('type.list.list'(X40),sK37(X41,X40))))))) ) | $spl394),
  inference(cnf_transformation,[],[f39010_D])).
fof(f39010_D,plain,(
  ( ! [X41,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X41)))))) | s('type.list.list'(X40),X41) = s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK38(X41,X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK39(X41,X40)),s('type.list.list'(X40),sK37(X41,X40))))))) ) <=> ~$spl394),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl394])])).
fof(f39013,plain,(
  ( ! [X45,X44] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45)))))) | s('type.list.list'(X44),X45) = s('type.list.list'(X44),'const.list.CONS_2'(s(X44,sK38(X45,X44)),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,sK39(X45,X44)),s('type.list.list'(X44),sK37(X45,X44)))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f38859,f1161])).
fof(f38859,plain,(
  ( ! [X45,X44] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45)))))) | s('type.list.list'(X44),X45) = s('type.list.list'(X44),'const.list.CONS_2'(s(X44,sK38(X45,X44)),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,sK39(X45,X44)),s('type.list.list'(X44),sK37(X45,X44)))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f19333,f1152])).
fof(f15098,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl263),
  inference(cnf_transformation,[],[f15098_D])).
fof(f15098_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl263),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl263])])).
fof(f39012,plain,(
  ( ! [X43,X42] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),X43)))))) | s('type.list.list'(X42),X43) = s('type.list.list'(X42),'const.list.CONS_2'(s(X42,sK38(X43,X42)),s('type.list.list'(X42),'const.list.CONS_2'(s(X42,sK39(X43,X42)),s('type.list.list'(X42),sK37(X43,X42))))))) )),
  inference(forward_demodulation,[],[f39011,f1161])).
fof(f39011,plain,(
  ( ! [X43,X42] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),X43)))))) | s('type.list.list'(X42),X43) = s('type.list.list'(X42),'const.list.CONS_2'(s(X42,sK38(X43,X42)),s('type.list.list'(X42),'const.list.CONS_2'(s(X42,sK39(X43,X42)),s('type.list.list'(X42),sK37(X43,X42))))))) )),
  inference(forward_demodulation,[],[f38858,f1156])).
fof(f38858,plain,(
  ( ! [X43,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),X43)))))) | s('type.list.list'(X42),X43) = s('type.list.list'(X42),'const.list.CONS_2'(s(X42,sK38(X43,X42)),s('type.list.list'(X42),'const.list.CONS_2'(s(X42,sK39(X43,X42)),s('type.list.list'(X42),sK37(X43,X42)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19333,f1150])).
fof(f39009,plain,(
  ( ! [X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X41)))))) | s('type.list.list'(X40),X41) = s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK38(X41,X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK39(X41,X40)),s('type.list.list'(X40),sK37(X41,X40))))))) )),
  inference(forward_demodulation,[],[f39008,f1161])).
fof(f39008,plain,(
  ( ! [X41,X40] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X41)))))) | s('type.list.list'(X40),X41) = s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK38(X41,X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK39(X41,X40)),s('type.list.list'(X40),sK37(X41,X40))))))) )),
  inference(forward_demodulation,[],[f38857,f1156])).
fof(f38857,plain,(
  ( ! [X41,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X41)))))) | s('type.list.list'(X40),X41) = s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK38(X41,X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK39(X41,X40)),s('type.list.list'(X40),sK37(X41,X40)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19333,f1148])).
fof(f38971,plain,(
  ( ! [X26,X24,X23] : (s('type.list.list'(X23),X24) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK38(X24,X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK39(X24,X23)),s('type.list.list'(X23),sK37(X24,X23)))))) | s(bool,X26) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))))) | ~p(s(bool,X26))) ) | $spl392),
  inference(cnf_transformation,[],[f38971_D])).
fof(f38971_D,plain,(
  ( ! [X26,X24,X23] : (s('type.list.list'(X23),X24) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK38(X24,X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK39(X24,X23)),s('type.list.list'(X23),sK37(X24,X23)))))) | s(bool,X26) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))))) | ~p(s(bool,X26))) ) <=> ~$spl392),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl392])])).
fof(f38814,plain,(
  ( ! [X499,X500,X498,X497] : (s('type.list.list'(X497),X498) = s('type.list.list'(X497),'const.list.CONS_2'(s(X497,sK38(X498,X497)),s('type.list.list'(X497),'const.list.CONS_2'(s(X497,sK39(X498,X497)),s('type.list.list'(X497),sK37(X498,X497)))))) | p(s(bool,X499)) | ~p(s(bool,X500)) | s(bool,X500) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X497),X498)))))) )),
  inference(resolution,[],[f19333,f1535])).
fof(f38702,plain,(
  ( ! [X61,X59,X62,X60,X58] : (s('type.list.list'(X58),X59) = s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK38(X59,X58)),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK39(X59,X58)),s('type.list.list'(X58),sK37(X59,X58)))))) | ~p(s(bool,X60)) | ~p(s(bool,X61)) | s(bool,X61) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X59))))) | s(bool,X60) != s(bool,X62)) )),
  inference(resolution,[],[f19333,f1087])).
fof(f38700,plain,(
  ( ! [X52,X50,X48,X51,X49] : (s('type.list.list'(X48),X49) = s('type.list.list'(X48),'const.list.CONS_2'(s(X48,sK38(X49,X48)),s('type.list.list'(X48),'const.list.CONS_2'(s(X48,sK39(X49,X48)),s('type.list.list'(X48),sK37(X49,X48)))))) | p(s(bool,X50)) | ~p(s(bool,X51)) | ~p(s(bool,X52)) | s(bool,X51) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49)))))) )),
  inference(resolution,[],[f19333,f1086])).
fof(f38698,plain,(
  ( ! [X39,X41,X38,X42,X40] : (s('type.list.list'(X38),X39) = s('type.list.list'(X38),'const.list.CONS_2'(s(X38,sK38(X39,X38)),s('type.list.list'(X38),'const.list.CONS_2'(s(X38,sK39(X39,X38)),s('type.list.list'(X38),sK37(X39,X38)))))) | p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X40) != s(bool,X42) | s(bool,X41) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39)))))) )),
  inference(resolution,[],[f19333,f1085])).
fof(f38697,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.list.list'(X33),X34) = s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK38(X34,X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK39(X34,X33)),s('type.list.list'(X33),sK37(X34,X33)))))) | ~p(s(bool,X35)) | ~p(s(bool,X36)) | s(bool,X36) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))))) | s(bool,X35) != s(bool,X37)) )),
  inference(resolution,[],[f19333,f1083])).
fof(f38695,plain,(
  ( ! [X26,X24,X23,X27,X25] : (s('type.list.list'(X23),X24) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK38(X24,X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK39(X24,X23)),s('type.list.list'(X23),sK37(X24,X23)))))) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X26) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24)))))) )),
  inference(resolution,[],[f19333,f1081])).
fof(f38177,plain,(
  ( ! [X45,X48,X46,X44] : (s('type.list.list'(X44),X45) = s('type.list.list'(X44),'const.list.CONS_2'(s(X44,sK28(X45,X46,X44)),s('type.list.list'(X44),sK27(X45,X46,X44)))) | s(bool,X48) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))))) | ~p(s(bool,X48))) ) | $spl390),
  inference(cnf_transformation,[],[f38177_D])).
fof(f38177_D,plain,(
  ( ! [X45,X48,X46,X44] : (s('type.list.list'(X44),X45) = s('type.list.list'(X44),'const.list.CONS_2'(s(X44,sK28(X45,X46,X44)),s('type.list.list'(X44),sK27(X45,X46,X44)))) | s(bool,X48) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))))) | ~p(s(bool,X48))) ) <=> ~$spl390),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl390])])).
fof(f37959,plain,(
  ( ! [X639,X640,X638,X641,X637] : (s('type.list.list'(X637),X638) = s('type.list.list'(X637),'const.list.CONS_2'(s(X637,sK28(X638,X639,X637)),s('type.list.list'(X637),sK27(X638,X639,X637)))) | p(s(bool,X640)) | ~p(s(bool,X641)) | s(bool,X641) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X639),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X637),X638)))))) )),
  inference(resolution,[],[f37825,f1535])).
fof(f37847,plain,(
  ( ! [X90,X88,X87,X91,X89,X86] : (s('type.list.list'(X86),X87) = s('type.list.list'(X86),'const.list.CONS_2'(s(X86,sK28(X87,X88,X86)),s('type.list.list'(X86),sK27(X87,X88,X86)))) | ~p(s(bool,X89)) | ~p(s(bool,X90)) | s(bool,X90) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X88),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87))))) | s(bool,X89) != s(bool,X91)) )),
  inference(resolution,[],[f37825,f1087])).
fof(f37845,plain,(
  ( ! [X78,X76,X74,X79,X77,X75] : (s('type.list.list'(X74),X75) = s('type.list.list'(X74),'const.list.CONS_2'(s(X74,sK28(X75,X76,X74)),s('type.list.list'(X74),sK27(X75,X76,X74)))) | p(s(bool,X77)) | ~p(s(bool,X78)) | ~p(s(bool,X79)) | s(bool,X78) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X76),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75)))))) )),
  inference(resolution,[],[f37825,f1086])).
fof(f37843,plain,(
  ( ! [X66,X64,X62,X67,X65,X63] : (s('type.list.list'(X62),X63) = s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK28(X63,X64,X62)),s('type.list.list'(X62),sK27(X63,X64,X62)))) | p(s(bool,X65)) | ~p(s(bool,X66)) | s(bool,X65) != s(bool,X67) | s(bool,X66) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X64),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63)))))) )),
  inference(resolution,[],[f37825,f1085])).
fof(f37842,plain,(
  ( ! [X61,X59,X57,X60,X58,X56] : (s('type.list.list'(X56),X57) = s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK28(X57,X58,X56)),s('type.list.list'(X56),sK27(X57,X58,X56)))) | ~p(s(bool,X59)) | ~p(s(bool,X60)) | s(bool,X60) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X58),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))))) | s(bool,X59) != s(bool,X61)) )),
  inference(resolution,[],[f37825,f1083])).
fof(f37840,plain,(
  ( ! [X47,X45,X48,X46,X44,X49] : (s('type.list.list'(X44),X45) = s('type.list.list'(X44),'const.list.CONS_2'(s(X44,sK28(X45,X46,X44)),s('type.list.list'(X44),sK27(X45,X46,X44)))) | p(s(bool,X47)) | ~p(s(bool,X48)) | s(bool,X47) != s(bool,X49) | s(bool,X48) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45)))))) )),
  inference(resolution,[],[f37825,f1081])).
fof(f37687,plain,(
  ( ! [X45,X48,X46,X44] : (s('type.list.list'(X44),X45) = s('type.list.list'(X44),'const.list.CONS_2'(s(X44,sK30(X45,X46,X44)),s('type.list.list'(X44),sK29(X45,X46,X44)))) | s(bool,X48) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))))) | ~p(s(bool,X48))) ) | $spl388),
  inference(cnf_transformation,[],[f37687_D])).
fof(f37687_D,plain,(
  ( ! [X45,X48,X46,X44] : (s('type.list.list'(X44),X45) = s('type.list.list'(X44),'const.list.CONS_2'(s(X44,sK30(X45,X46,X44)),s('type.list.list'(X44),sK29(X45,X46,X44)))) | s(bool,X48) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))))) | ~p(s(bool,X48))) ) <=> ~$spl388),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl388])])).
fof(f37469,plain,(
  ( ! [X639,X640,X638,X641,X637] : (s('type.list.list'(X637),X638) = s('type.list.list'(X637),'const.list.CONS_2'(s(X637,sK30(X638,X639,X637)),s('type.list.list'(X637),sK29(X638,X639,X637)))) | p(s(bool,X640)) | ~p(s(bool,X641)) | s(bool,X641) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X639),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X637),X638)))))) )),
  inference(resolution,[],[f37307,f1535])).
fof(f37357,plain,(
  ( ! [X90,X88,X87,X91,X89,X86] : (s('type.list.list'(X86),X87) = s('type.list.list'(X86),'const.list.CONS_2'(s(X86,sK30(X87,X88,X86)),s('type.list.list'(X86),sK29(X87,X88,X86)))) | ~p(s(bool,X89)) | ~p(s(bool,X90)) | s(bool,X90) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X88),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87))))) | s(bool,X89) != s(bool,X91)) )),
  inference(resolution,[],[f37307,f1087])).
fof(f37355,plain,(
  ( ! [X78,X76,X74,X79,X77,X75] : (s('type.list.list'(X74),X75) = s('type.list.list'(X74),'const.list.CONS_2'(s(X74,sK30(X75,X76,X74)),s('type.list.list'(X74),sK29(X75,X76,X74)))) | p(s(bool,X77)) | ~p(s(bool,X78)) | ~p(s(bool,X79)) | s(bool,X78) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X76),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75)))))) )),
  inference(resolution,[],[f37307,f1086])).
fof(f37353,plain,(
  ( ! [X66,X64,X62,X67,X65,X63] : (s('type.list.list'(X62),X63) = s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK30(X63,X64,X62)),s('type.list.list'(X62),sK29(X63,X64,X62)))) | p(s(bool,X65)) | ~p(s(bool,X66)) | s(bool,X65) != s(bool,X67) | s(bool,X66) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X64),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63)))))) )),
  inference(resolution,[],[f37307,f1085])).
fof(f37352,plain,(
  ( ! [X61,X59,X57,X60,X58,X56] : (s('type.list.list'(X56),X57) = s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK30(X57,X58,X56)),s('type.list.list'(X56),sK29(X57,X58,X56)))) | ~p(s(bool,X59)) | ~p(s(bool,X60)) | s(bool,X60) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X58),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))))) | s(bool,X59) != s(bool,X61)) )),
  inference(resolution,[],[f37307,f1083])).
fof(f37350,plain,(
  ( ! [X47,X45,X48,X46,X44,X49] : (s('type.list.list'(X44),X45) = s('type.list.list'(X44),'const.list.CONS_2'(s(X44,sK30(X45,X46,X44)),s('type.list.list'(X44),sK29(X45,X46,X44)))) | p(s(bool,X47)) | ~p(s(bool,X48)) | s(bool,X47) != s(bool,X49) | s(bool,X48) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45)))))) )),
  inference(resolution,[],[f37307,f1081])).
fof(f37062,plain,(
  ( ! [X4,X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK82(X1,X2,X0)),s('type.list.list'(X0),sK81(X1,X2,X0)))) | s(bool,X4) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) | ~p(s(bool,X4))) ) | $spl386),
  inference(cnf_transformation,[],[f37062_D])).
fof(f37062_D,plain,(
  ( ! [X4,X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK82(X1,X2,X0)),s('type.list.list'(X0),sK81(X1,X2,X0)))) | s(bool,X4) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) | ~p(s(bool,X4))) ) <=> ~$spl386),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl386])])).
fof(f36803,plain,(
  ( ! [X596,X594,X597,X593,X595] : (s('type.list.list'(X593),X594) = s('type.list.list'(X593),'const.list.CONS_2'(s(X593,sK82(X594,X595,X593)),s('type.list.list'(X593),sK81(X594,X595,X593)))) | p(s(bool,X596)) | ~p(s(bool,X597)) | s(bool,X597) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X593),X594))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X595)))))) )),
  inference(resolution,[],[f36676,f1535])).
fof(f36676,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK82(X2,X1,X0)),s('type.list.list'(X0),sK81(X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f19328,f19314])).
fof(f19328,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK82(X2,X1,X0)),s('type.list.list'(X0),sK81(X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f1456,f1156])).
fof(f1456,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK82(X2,X1,X0)),s('type.list.list'(X0),sK81(X2,X1,X0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f1057])).
fof(f1057,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK81(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK82(X2,X1,X0)),s('type.list.list'(X0),sK81(X2,X1,X0)))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK81,sK82])],[f1056])).
fof(f1056,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) | ? [X5,X6] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X5))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))))),
  inference(rectify,[],[f1055])).
fof(f1055,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) | ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f713])).
fof(f713,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) <=> ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f712])).
fof(f712,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) <=> ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f183])).
fof(f183,axiom,(
  ! [X6] : ! [X13,X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X13)))))) <=> ? [X8,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) & s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X8)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.quantHeuristics.LIST_LENGTH_|49||split|7')).
fof(f36691,plain,(
  ( ! [X47,X45,X43,X46,X44,X42] : (s('type.list.list'(X42),X43) = s('type.list.list'(X42),'const.list.CONS_2'(s(X42,sK82(X43,X44,X42)),s('type.list.list'(X42),sK81(X43,X44,X42)))) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X46) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),X43))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X44))))) | s(bool,X45) != s(bool,X47)) )),
  inference(resolution,[],[f36676,f1087])).
fof(f36689,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (s('type.list.list'(X30),X31) = s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK82(X31,X32,X30)),s('type.list.list'(X30),sK81(X31,X32,X30)))) | p(s(bool,X33)) | ~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X32)))))) )),
  inference(resolution,[],[f36676,f1086])).
fof(f36687,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (s('type.list.list'(X18),X19) = s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK82(X19,X20,X18)),s('type.list.list'(X18),sK81(X19,X20,X18)))) | p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X22) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X20)))))) )),
  inference(resolution,[],[f36676,f1085])).
fof(f36686,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK82(X13,X14,X12)),s('type.list.list'(X12),sK81(X13,X14,X12)))) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X16) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))))) | s(bool,X15) != s(bool,X17)) )),
  inference(resolution,[],[f36676,f1083])).
fof(f36684,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK82(X1,X2,X0)),s('type.list.list'(X0),sK81(X1,X2,X0)))) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(resolution,[],[f36676,f1081])).
fof(f36439,plain,(
  ( ! [X4,X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK84(X1,X2,X0)),s('type.list.list'(X0),sK83(X1,X2,X0)))) | s(bool,X4) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) | ~p(s(bool,X4))) ) | $spl384),
  inference(cnf_transformation,[],[f36439_D])).
fof(f36439_D,plain,(
  ( ! [X4,X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK84(X1,X2,X0)),s('type.list.list'(X0),sK83(X1,X2,X0)))) | s(bool,X4) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) | ~p(s(bool,X4))) ) <=> ~$spl384),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl384])])).
fof(f36180,plain,(
  ( ! [X596,X594,X597,X593,X595] : (s('type.list.list'(X593),X594) = s('type.list.list'(X593),'const.list.CONS_2'(s(X593,sK84(X594,X595,X593)),s('type.list.list'(X593),sK83(X594,X595,X593)))) | p(s(bool,X596)) | ~p(s(bool,X597)) | s(bool,X597) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X593),X594))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X595)))))) )),
  inference(resolution,[],[f36028,f1535])).
fof(f36068,plain,(
  ( ! [X47,X45,X43,X46,X44,X42] : (s('type.list.list'(X42),X43) = s('type.list.list'(X42),'const.list.CONS_2'(s(X42,sK84(X43,X44,X42)),s('type.list.list'(X42),sK83(X43,X44,X42)))) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X46) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),X43))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X44))))) | s(bool,X45) != s(bool,X47)) )),
  inference(resolution,[],[f36028,f1087])).
fof(f36066,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (s('type.list.list'(X30),X31) = s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK84(X31,X32,X30)),s('type.list.list'(X30),sK83(X31,X32,X30)))) | p(s(bool,X33)) | ~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X32)))))) )),
  inference(resolution,[],[f36028,f1086])).
fof(f36064,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (s('type.list.list'(X18),X19) = s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK84(X19,X20,X18)),s('type.list.list'(X18),sK83(X19,X20,X18)))) | p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X22) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X20)))))) )),
  inference(resolution,[],[f36028,f1085])).
fof(f36063,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK84(X13,X14,X12)),s('type.list.list'(X12),sK83(X13,X14,X12)))) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X16) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))))) | s(bool,X15) != s(bool,X17)) )),
  inference(resolution,[],[f36028,f1083])).
fof(f36061,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK84(X1,X2,X0)),s('type.list.list'(X0),sK83(X1,X2,X0)))) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(resolution,[],[f36028,f1081])).
fof(f35835,plain,(
  ( ! [X66,X64,X62,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X62),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64)))))) | s(bool,X66) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X62),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK27(X64,X62,X63)))))) | p(s(bool,X66))) ) | $spl382),
  inference(cnf_transformation,[],[f35835_D])).
fof(f35835_D,plain,(
  ( ! [X66,X64,X62,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X62),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64)))))) | s(bool,X66) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X62),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK27(X64,X62,X63)))))) | p(s(bool,X66))) ) <=> ~$spl382),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl382])])).
fof(f35638,plain,(
  ( ! [X652,X654,X650,X653,X651] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X650),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X651),X652)))))) | p(s(bool,X653)) | p(s(bool,X654)) | s(bool,X654) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X650),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X651),sK27(X652,X650,X651))))))) )),
  inference(resolution,[],[f35463,f1535])).
fof(f35463,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK27(X2,X1,X0))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(forward_demodulation,[],[f35462,f1446])).
fof(f35462,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK27(X2,X1,X0)))))))) )),
  inference(forward_demodulation,[],[f19345,f19313])).
fof(f19345,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK27(X2,X1,X0)))))))) )),
  inference(forward_demodulation,[],[f1172,f1156])).
fof(f1172,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK27(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f891])).
fof(f35527,plain,(
  ( ! [X109,X107,X105,X108,X106,X104] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X104),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),X106)))))) | p(s(bool,X107)) | ~p(s(bool,X108)) | s(bool,X107) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X104),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),sK27(X106,X104,X105)))))) | s(bool,X108) != s(bool,X109)) )),
  inference(resolution,[],[f35463,f1087])).
fof(f35524,plain,(
  ( ! [X90,X88,X87,X91,X89,X86] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X86),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88)))))) | p(s(bool,X89)) | ~p(s(bool,X90)) | p(s(bool,X91)) | s(bool,X91) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X86),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK27(X88,X86,X87))))))) )),
  inference(resolution,[],[f35463,f1086])).
fof(f35523,plain,(
  ( ! [X80,X85,X83,X81,X84,X82] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X80),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82)))))) | p(s(bool,X83)) | p(s(bool,X84)) | s(bool,X83) != s(bool,X85) | s(bool,X84) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X80),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),sK27(X82,X80,X81))))))) )),
  inference(resolution,[],[f35463,f1085])).
fof(f35522,plain,(
  ( ! [X78,X76,X74,X79,X77,X75] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X74),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),X76)))))) | p(s(bool,X77)) | ~p(s(bool,X78)) | s(bool,X77) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X74),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),sK27(X76,X74,X75)))))) | s(bool,X78) != s(bool,X79)) )),
  inference(resolution,[],[f35463,f1083])).
fof(f35520,plain,(
  ( ! [X66,X64,X62,X67,X65,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X62),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64)))))) | p(s(bool,X65)) | p(s(bool,X66)) | s(bool,X65) != s(bool,X67) | s(bool,X66) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X62),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK27(X64,X62,X63))))))) )),
  inference(resolution,[],[f35463,f1081])).
fof(f35247,plain,(
  ( ! [X66,X64,X62,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X62),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64)))))) | s(bool,X66) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X62),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK29(X64,X62,X63)))))) | p(s(bool,X66))) ) | $spl380),
  inference(cnf_transformation,[],[f35247_D])).
fof(f35247_D,plain,(
  ( ! [X66,X64,X62,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X62),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64)))))) | s(bool,X66) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X62),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK29(X64,X62,X63)))))) | p(s(bool,X66))) ) <=> ~$spl380),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl380])])).
fof(f35050,plain,(
  ( ! [X652,X654,X650,X653,X651] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X650),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X651),X652)))))) | p(s(bool,X653)) | p(s(bool,X654)) | s(bool,X654) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X650),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X651),sK29(X652,X650,X651))))))) )),
  inference(resolution,[],[f34905,f1535])).
fof(f34905,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK29(X2,X1,X0))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(forward_demodulation,[],[f34904,f1446])).
fof(f34904,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK29(X2,X1,X0)))))))) )),
  inference(forward_demodulation,[],[f19342,f19314])).
fof(f19342,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK29(X2,X1,X0)))))))) )),
  inference(forward_demodulation,[],[f1175,f1156])).
fof(f1175,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK29(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f894])).
fof(f34939,plain,(
  ( ! [X109,X107,X105,X108,X106,X104] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X104),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),X106)))))) | p(s(bool,X107)) | ~p(s(bool,X108)) | s(bool,X107) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X104),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),sK29(X106,X104,X105)))))) | s(bool,X108) != s(bool,X109)) )),
  inference(resolution,[],[f34905,f1087])).
fof(f34936,plain,(
  ( ! [X90,X88,X87,X91,X89,X86] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X86),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88)))))) | p(s(bool,X89)) | ~p(s(bool,X90)) | p(s(bool,X91)) | s(bool,X91) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X86),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK29(X88,X86,X87))))))) )),
  inference(resolution,[],[f34905,f1086])).
fof(f34935,plain,(
  ( ! [X80,X85,X83,X81,X84,X82] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X80),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82)))))) | p(s(bool,X83)) | p(s(bool,X84)) | s(bool,X83) != s(bool,X85) | s(bool,X84) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X80),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),sK29(X82,X80,X81))))))) )),
  inference(resolution,[],[f34905,f1085])).
fof(f34934,plain,(
  ( ! [X78,X76,X74,X79,X77,X75] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X74),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),X76)))))) | p(s(bool,X77)) | ~p(s(bool,X78)) | s(bool,X77) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X74),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),sK29(X76,X74,X75)))))) | s(bool,X78) != s(bool,X79)) )),
  inference(resolution,[],[f34905,f1083])).
fof(f34932,plain,(
  ( ! [X66,X64,X62,X67,X65,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X62),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64)))))) | p(s(bool,X65)) | p(s(bool,X66)) | s(bool,X65) != s(bool,X67) | s(bool,X66) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X62),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK29(X64,X62,X63))))))) )),
  inference(resolution,[],[f34905,f1081])).
fof(f34322,plain,(
  ( ! [X85,X83,X86,X84,X82] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83)))))) | s('type.list.list'(X82),X83) != s('type.list.list'(X82),'const.list.CONS_2'(s(X82,X84),s('type.list.list'(X82),'const.list.CONS_2'(s(X82,X85),s('type.list.list'(X82),X86)))))) ) | $spl378),
  inference(cnf_transformation,[],[f34322_D])).
fof(f34322_D,plain,(
  ( ! [X85,X83,X86,X84,X82] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83)))))) | s('type.list.list'(X82),X83) != s('type.list.list'(X82),'const.list.CONS_2'(s(X82,X84),s('type.list.list'(X82),'const.list.CONS_2'(s(X82,X85),s('type.list.list'(X82),X86)))))) ) <=> ~$spl378),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl378])])).
fof(f34325,plain,(
  ( ! [X94,X92,X95,X93,X96] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93)))))) | s('type.list.list'(X92),X93) != s('type.list.list'(X92),'const.list.CONS_2'(s(X92,X94),s('type.list.list'(X92),'const.list.CONS_2'(s(X92,X95),s('type.list.list'(X92),X96))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f34170,f1161])).
fof(f34170,plain,(
  ( ! [X94,X92,X95,X93,X96] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93)))))) | s('type.list.list'(X92),X93) != s('type.list.list'(X92),'const.list.CONS_2'(s(X92,X94),s('type.list.list'(X92),'const.list.CONS_2'(s(X92,X95),s('type.list.list'(X92),X96))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f19332,f1152])).
fof(f19332,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2)))))) )),
  inference(forward_demodulation,[],[f1189,f1156])).
fof(f1189,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f906])).
fof(f34324,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88)))))) | s('type.list.list'(X87),X88) != s('type.list.list'(X87),'const.list.CONS_2'(s(X87,X89),s('type.list.list'(X87),'const.list.CONS_2'(s(X87,X90),s('type.list.list'(X87),X91)))))) )),
  inference(forward_demodulation,[],[f34323,f1161])).
fof(f34323,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88)))))) | s('type.list.list'(X87),X88) != s('type.list.list'(X87),'const.list.CONS_2'(s(X87,X89),s('type.list.list'(X87),'const.list.CONS_2'(s(X87,X90),s('type.list.list'(X87),X91)))))) )),
  inference(forward_demodulation,[],[f34169,f1156])).
fof(f34169,plain,(
  ( ! [X90,X88,X87,X91,X89] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88)))))) | s('type.list.list'(X87),X88) != s('type.list.list'(X87),'const.list.CONS_2'(s(X87,X89),s('type.list.list'(X87),'const.list.CONS_2'(s(X87,X90),s('type.list.list'(X87),X91))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19332,f1150])).
fof(f34321,plain,(
  ( ! [X85,X83,X86,X84,X82] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83)))))) | s('type.list.list'(X82),X83) != s('type.list.list'(X82),'const.list.CONS_2'(s(X82,X84),s('type.list.list'(X82),'const.list.CONS_2'(s(X82,X85),s('type.list.list'(X82),X86)))))) )),
  inference(forward_demodulation,[],[f34320,f1161])).
fof(f34320,plain,(
  ( ! [X85,X83,X86,X84,X82] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83)))))) | s('type.list.list'(X82),X83) != s('type.list.list'(X82),'const.list.CONS_2'(s(X82,X84),s('type.list.list'(X82),'const.list.CONS_2'(s(X82,X85),s('type.list.list'(X82),X86)))))) )),
  inference(forward_demodulation,[],[f34168,f1156])).
fof(f34168,plain,(
  ( ! [X85,X83,X86,X84,X82] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83)))))) | s('type.list.list'(X82),X83) != s('type.list.list'(X82),'const.list.CONS_2'(s(X82,X84),s('type.list.list'(X82),'const.list.CONS_2'(s(X82,X85),s('type.list.list'(X82),X86))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19332,f1148])).
fof(f34284,plain,(
  ( ! [X47,X50,X48,X53,X51,X49] : (s('type.list.list'(X47),X48) != s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X49),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X50),s('type.list.list'(X47),X51))))) | s(bool,X53) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))))) | p(s(bool,X53))) ) | $spl376),
  inference(cnf_transformation,[],[f34284_D])).
fof(f34284_D,plain,(
  ( ! [X47,X50,X48,X53,X51,X49] : (s('type.list.list'(X47),X48) != s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X49),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X50),s('type.list.list'(X47),X51))))) | s(bool,X53) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))))) | p(s(bool,X53))) ) <=> ~$spl376),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl376])])).
fof(f34122,plain,(
  ( ! [X874,X872,X876,X875,X873,X877,X871] : (s('type.list.list'(X871),X872) != s('type.list.list'(X871),'const.list.CONS_2'(s(X871,X873),s('type.list.list'(X871),'const.list.CONS_2'(s(X871,X874),s('type.list.list'(X871),X875))))) | p(s(bool,X876)) | p(s(bool,X877)) | s(bool,X877) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X871),X872)))))) )),
  inference(resolution,[],[f19332,f1535])).
fof(f34011,plain,(
  ( ! [X103,X109,X107,X105,X110,X108,X106,X104] : (s('type.list.list'(X103),X104) != s('type.list.list'(X103),'const.list.CONS_2'(s(X103,X105),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,X106),s('type.list.list'(X103),X107))))) | p(s(bool,X108)) | ~p(s(bool,X109)) | s(bool,X108) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))))) | s(bool,X109) != s(bool,X110)) )),
  inference(resolution,[],[f19332,f1087])).
fof(f34008,plain,(
  ( ! [X80,X85,X83,X81,X79,X86,X84,X82] : (s('type.list.list'(X79),X80) != s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X81),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X82),s('type.list.list'(X79),X83))))) | p(s(bool,X84)) | ~p(s(bool,X85)) | p(s(bool,X86)) | s(bool,X86) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80)))))) )),
  inference(resolution,[],[f19332,f1086])).
fof(f34007,plain,(
  ( ! [X78,X76,X74,X72,X71,X77,X75,X73] : (s('type.list.list'(X71),X72) != s('type.list.list'(X71),'const.list.CONS_2'(s(X71,X73),s('type.list.list'(X71),'const.list.CONS_2'(s(X71,X74),s('type.list.list'(X71),X75))))) | p(s(bool,X76)) | p(s(bool,X77)) | s(bool,X76) != s(bool,X78) | s(bool,X77) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72)))))) )),
  inference(resolution,[],[f19332,f1085])).
fof(f34006,plain,(
  ( ! [X70,X68,X66,X64,X69,X67,X65,X63] : (s('type.list.list'(X63),X64) != s('type.list.list'(X63),'const.list.CONS_2'(s(X63,X65),s('type.list.list'(X63),'const.list.CONS_2'(s(X63,X66),s('type.list.list'(X63),X67))))) | p(s(bool,X68)) | ~p(s(bool,X69)) | s(bool,X68) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64))))) | s(bool,X69) != s(bool,X70)) )),
  inference(resolution,[],[f19332,f1083])).
fof(f34004,plain,(
  ( ! [X47,X54,X52,X50,X48,X53,X51,X49] : (s('type.list.list'(X47),X48) != s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X49),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X50),s('type.list.list'(X47),X51))))) | p(s(bool,X52)) | p(s(bool,X53)) | s(bool,X52) != s(bool,X54) | s(bool,X53) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48)))))) )),
  inference(resolution,[],[f19332,f1081])).
fof(f33722,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK81(X2,X0,X1))))))) | s(bool,X4) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) | ~p(s(bool,X4))) ) | $spl374),
  inference(cnf_transformation,[],[f33722_D])).
fof(f33722_D,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK81(X2,X0,X1))))))) | s(bool,X4) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) | ~p(s(bool,X4))) ) <=> ~$spl374),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl374])])).
fof(f33463,plain,(
  ( ! [X596,X594,X597,X593,X595] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X593),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X594),sK81(X595,X593,X594))))))) | p(s(bool,X596)) | ~p(s(bool,X597)) | s(bool,X597) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X594),X595))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X593)))))) )),
  inference(resolution,[],[f33315,f1535])).
fof(f33315,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK81(X2,X1,X0)))))))) )),
  inference(forward_demodulation,[],[f19329,f19314])).
fof(f19329,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK81(X2,X1,X0)))))))) )),
  inference(forward_demodulation,[],[f1455,f1156])).
fof(f1455,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK81(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f1057])).
fof(f33351,plain,(
  ( ! [X47,X45,X43,X46,X44,X42] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK81(X44,X42,X43))))))) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X46) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X42))))) | s(bool,X45) != s(bool,X47)) )),
  inference(resolution,[],[f33315,f1087])).
fof(f33349,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK81(X32,X30,X31))))))) | p(s(bool,X33)) | ~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30)))))) )),
  inference(resolution,[],[f33315,f1086])).
fof(f33347,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),sK81(X20,X18,X19))))))) | p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X22) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),X20))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))))) )),
  inference(resolution,[],[f33315,f1085])).
fof(f33346,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),sK81(X14,X12,X13))))))) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X16) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))))) | s(bool,X15) != s(bool,X17)) )),
  inference(resolution,[],[f33315,f1083])).
fof(f33344,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK81(X2,X0,X1))))))) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(resolution,[],[f33315,f1081])).
fof(f33012,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK83(X2,X0,X1))))))) | s(bool,X4) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) | ~p(s(bool,X4))) ) | $spl372),
  inference(cnf_transformation,[],[f33012_D])).
fof(f33012_D,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK83(X2,X0,X1))))))) | s(bool,X4) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) | ~p(s(bool,X4))) ) <=> ~$spl372),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl372])])).
fof(f32753,plain,(
  ( ! [X596,X594,X597,X593,X595] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X593),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X594),sK83(X595,X593,X594))))))) | p(s(bool,X596)) | ~p(s(bool,X597)) | s(bool,X597) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X594),X595))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X593)))))) )),
  inference(resolution,[],[f32605,f1535])).
fof(f32605,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK83(X2,X1,X0)))))))) )),
  inference(forward_demodulation,[],[f19326,f19313])).
fof(f19326,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK83(X2,X1,X0)))))))) )),
  inference(forward_demodulation,[],[f1458,f1156])).
fof(f1458,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK83(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(cnf_transformation,[],[f1060])).
fof(f32641,plain,(
  ( ! [X47,X45,X43,X46,X44,X42] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK83(X44,X42,X43))))))) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X46) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X42))))) | s(bool,X45) != s(bool,X47)) )),
  inference(resolution,[],[f32605,f1087])).
fof(f32639,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK83(X32,X30,X31))))))) | p(s(bool,X33)) | ~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30)))))) )),
  inference(resolution,[],[f32605,f1086])).
fof(f32637,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),sK83(X20,X18,X19))))))) | p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X22) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),X20))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))))) )),
  inference(resolution,[],[f32605,f1085])).
fof(f32636,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),sK83(X14,X12,X13))))))) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X16) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))))) | s(bool,X15) != s(bool,X17)) )),
  inference(resolution,[],[f32605,f1083])).
fof(f32634,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK83(X2,X0,X1))))))) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(resolution,[],[f32605,f1081])).
fof(f32469,plain,(
  ( ! [X41,X40] : (s('type.list.list'(X40),X41) = s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK41(X41,X40)),s('type.list.list'(X40),sK40(X41,X40))))) ) | $spl370),
  inference(cnf_transformation,[],[f32469_D])).
fof(f32469_D,plain,(
  ( ! [X41,X40] : (s('type.list.list'(X40),X41) = s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK41(X41,X40)),s('type.list.list'(X40),sK40(X41,X40))))) ) <=> ~$spl370),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl370])])).
fof(f32497,plain,(
  ( ! [X94,X92,X93] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X92),X93) = s('type.list.list'(X92),'const.list.CONS_2'(s(X92,sK41(X93,X92)),s('type.list.list'(X92),sK40(X93,X92))))) )),
  inference(forward_demodulation,[],[f32496,f1161])).
fof(f32496,plain,(
  ( ! [X94,X92,X93] : (s('type.list.list'(X92),X93) = s('type.list.list'(X92),'const.list.CONS_2'(s(X92,sK41(X93,X92)),s('type.list.list'(X92),sK40(X93,X92)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(subsumption_resolution,[],[f32332,f1436])).
fof(f32332,plain,(
  ( ! [X94,X92,X93] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93)))))) | s('type.list.list'(X92),X93) = s('type.list.list'(X92),'const.list.CONS_2'(s(X92,sK41(X93,X92)),s('type.list.list'(X92),sK40(X93,X92)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19331,f1520])).
fof(f32495,plain,(
  ( ! [X90,X91,X89] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X91))) | s('type.list.list'(X89),X90) = s('type.list.list'(X89),'const.list.CONS_2'(s(X89,sK41(X90,X89)),s('type.list.list'(X89),sK40(X90,X89))))) )),
  inference(forward_demodulation,[],[f32494,f1161])).
fof(f32494,plain,(
  ( ! [X90,X91,X89] : (s('type.list.list'(X89),X90) = s('type.list.list'(X89),'const.list.CONS_2'(s(X89,sK41(X90,X89)),s('type.list.list'(X89),sK40(X90,X89)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X91)))) )),
  inference(subsumption_resolution,[],[f32331,f1436])).
fof(f32331,plain,(
  ( ! [X90,X91,X89] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90)))))) | s('type.list.list'(X89),X90) = s('type.list.list'(X89),'const.list.CONS_2'(s(X89,sK41(X90,X89)),s('type.list.list'(X89),sK40(X90,X89)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X91)))) )),
  inference(superposition,[],[f19331,f1519])).
fof(f32474,plain,(
  ( ! [X45,X44] : (s('type.list.list'(X44),X45) = s('type.list.list'(X44),'const.list.CONS_2'(s(X44,sK41(X45,X44)),s('type.list.list'(X44),sK40(X45,X44)))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(subsumption_resolution,[],[f32316,f1436])).
fof(f32316,plain,(
  ( ! [X45,X44] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45)))))) | s('type.list.list'(X44),X45) = s('type.list.list'(X44),'const.list.CONS_2'(s(X44,sK41(X45,X44)),s('type.list.list'(X44),sK40(X45,X44)))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f19331,f1152])).
fof(f32473,plain,(
  ( ! [X43,X42] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X42),X43) = s('type.list.list'(X42),'const.list.CONS_2'(s(X42,sK41(X43,X42)),s('type.list.list'(X42),sK40(X43,X42))))) ) | $spl22),
  inference(forward_demodulation,[],[f32472,f1161])).
fof(f32472,plain,(
  ( ! [X43,X42] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X42),X43) = s('type.list.list'(X42),'const.list.CONS_2'(s(X42,sK41(X43,X42)),s('type.list.list'(X42),sK40(X43,X42))))) ) | $spl22),
  inference(forward_demodulation,[],[f32471,f1156])).
fof(f32471,plain,(
  ( ! [X43,X42] : (s('type.list.list'(X42),X43) = s('type.list.list'(X42),'const.list.CONS_2'(s(X42,sK41(X43,X42)),s('type.list.list'(X42),sK40(X43,X42)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl22),
  inference(subsumption_resolution,[],[f32470,f1837])).
fof(f32470,plain,(
  ( ! [X43,X42] : (~p(s(bool,'T_0')) | s('type.list.list'(X42),X43) = s('type.list.list'(X42),'const.list.CONS_2'(s(X42,sK41(X43,X42)),s('type.list.list'(X42),sK40(X43,X42)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f32315,f1453])).
fof(f32315,plain,(
  ( ! [X43,X42] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),X43)))))) | s('type.list.list'(X42),X43) = s('type.list.list'(X42),'const.list.CONS_2'(s(X42,sK41(X43,X42)),s('type.list.list'(X42),sK40(X43,X42)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19331,f1150])).
fof(f32468,plain,(
  ( ! [X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X40),X41) = s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK41(X41,X40)),s('type.list.list'(X40),sK40(X41,X40))))) ) | $spl22),
  inference(forward_demodulation,[],[f32467,f1161])).
fof(f32467,plain,(
  ( ! [X41,X40] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X40),X41) = s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK41(X41,X40)),s('type.list.list'(X40),sK40(X41,X40))))) ) | $spl22),
  inference(forward_demodulation,[],[f32466,f1156])).
fof(f32466,plain,(
  ( ! [X41,X40] : (s('type.list.list'(X40),X41) = s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK41(X41,X40)),s('type.list.list'(X40),sK40(X41,X40)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl22),
  inference(subsumption_resolution,[],[f32465,f1837])).
fof(f32465,plain,(
  ( ! [X41,X40] : (~p(s(bool,'T_0')) | s('type.list.list'(X40),X41) = s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK41(X41,X40)),s('type.list.list'(X40),sK40(X41,X40)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f32314,f1453])).
fof(f32314,plain,(
  ( ! [X41,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X41)))))) | s('type.list.list'(X40),X41) = s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK41(X41,X40)),s('type.list.list'(X40),sK40(X41,X40)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19331,f1148])).
fof(f32428,plain,(
  ( ! [X23,X21,X20] : (s('type.list.list'(X20),X21) = s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK41(X21,X20)),s('type.list.list'(X20),sK40(X21,X20)))) | s(bool,X23) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))))) | ~p(s(bool,X23))) ) | $spl368),
  inference(cnf_transformation,[],[f32428_D])).
fof(f32428_D,plain,(
  ( ! [X23,X21,X20] : (s('type.list.list'(X20),X21) = s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK41(X21,X20)),s('type.list.list'(X20),sK40(X21,X20)))) | s(bool,X23) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))))) | ~p(s(bool,X23))) ) <=> ~$spl368),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl368])])).
fof(f32271,plain,(
  ( ! [X494,X496,X495,X497] : (s('type.list.list'(X494),X495) = s('type.list.list'(X494),'const.list.CONS_2'(s(X494,sK41(X495,X494)),s('type.list.list'(X494),sK40(X495,X494)))) | p(s(bool,X496)) | ~p(s(bool,X497)) | s(bool,X497) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X494),X495)))))) )),
  inference(resolution,[],[f19331,f1535])).
fof(f32159,plain,(
  ( ! [X59,X57,X58,X56,X55] : (s('type.list.list'(X55),X56) = s('type.list.list'(X55),'const.list.CONS_2'(s(X55,sK41(X56,X55)),s('type.list.list'(X55),sK40(X56,X55)))) | ~p(s(bool,X57)) | ~p(s(bool,X58)) | s(bool,X58) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))))) | s(bool,X57) != s(bool,X59)) )),
  inference(resolution,[],[f19331,f1087])).
fof(f32157,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s('type.list.list'(X45),X46) = s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK41(X46,X45)),s('type.list.list'(X45),sK40(X46,X45)))) | p(s(bool,X47)) | ~p(s(bool,X48)) | ~p(s(bool,X49)) | s(bool,X48) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46)))))) )),
  inference(resolution,[],[f19331,f1086])).
fof(f32155,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s('type.list.list'(X35),X36) = s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK41(X36,X35)),s('type.list.list'(X35),sK40(X36,X35)))) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X37) != s(bool,X39) | s(bool,X38) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36)))))) )),
  inference(resolution,[],[f19331,f1085])).
fof(f32154,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.list.list'(X30),X31) = s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK41(X31,X30)),s('type.list.list'(X30),sK40(X31,X30)))) | ~p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X33) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))))) | s(bool,X32) != s(bool,X34)) )),
  inference(resolution,[],[f19331,f1083])).
fof(f32152,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s('type.list.list'(X20),X21) = s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK41(X21,X20)),s('type.list.list'(X20),sK40(X21,X20)))) | p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,X24) | s(bool,X23) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21)))))) )),
  inference(resolution,[],[f19331,f1081])).
fof(f31680,plain,(
  ( ! [X21,X19,X18] : (s('type.list.list'(X18),'const.list.NIL_0') = s('type.list.list'(X18),X19) | s(bool,X21) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,X21))) ) | $spl366),
  inference(cnf_transformation,[],[f31680_D])).
fof(f31680_D,plain,(
  ( ! [X21,X19,X18] : (s('type.list.list'(X18),'const.list.NIL_0') = s('type.list.list'(X18),X19) | s(bool,X21) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,X21))) ) <=> ~$spl366),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl366])])).
fof(f31523,plain,(
  ( ! [X492,X494,X493,X495] : (s('type.list.list'(X492),'const.list.NIL_0') = s('type.list.list'(X492),X493) | p(s(bool,X494)) | ~p(s(bool,X495)) | s(bool,X495) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X492),X493))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(resolution,[],[f19323,f1535])).
fof(f31411,plain,(
  ( ! [X57,X54,X56,X55,X53] : (s('type.list.list'(X53),'const.list.NIL_0') = s('type.list.list'(X53),X54) | ~p(s(bool,X55)) | ~p(s(bool,X56)) | s(bool,X56) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X55) != s(bool,X57)) )),
  inference(resolution,[],[f19323,f1087])).
fof(f31409,plain,(
  ( ! [X47,X45,X43,X46,X44] : (s('type.list.list'(X43),'const.list.NIL_0') = s('type.list.list'(X43),X44) | p(s(bool,X45)) | ~p(s(bool,X46)) | ~p(s(bool,X47)) | s(bool,X46) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(resolution,[],[f19323,f1086])).
fof(f31407,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.list.list'(X33),'const.list.NIL_0') = s('type.list.list'(X33),X34) | p(s(bool,X35)) | ~p(s(bool,X36)) | s(bool,X35) != s(bool,X37) | s(bool,X36) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(resolution,[],[f19323,f1085])).
fof(f31406,plain,(
  ( ! [X30,X28,X31,X29,X32] : (s('type.list.list'(X28),'const.list.NIL_0') = s('type.list.list'(X28),X29) | ~p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X31) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X29))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X30) != s(bool,X32)) )),
  inference(resolution,[],[f19323,f1083])).
fof(f31404,plain,(
  ( ! [X21,X19,X22,X20,X18] : (s('type.list.list'(X18),'const.list.NIL_0') = s('type.list.list'(X18),X19) | p(s(bool,X20)) | ~p(s(bool,X21)) | s(bool,X20) != s(bool,X22) | s(bool,X21) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(resolution,[],[f19323,f1081])).
fof(f15097,plain,(
  ( ! [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl260),
  inference(cnf_transformation,[],[f15097_D])).
fof(f15097_D,plain,(
  ( ! [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) <=> ~$spl260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl260])])).
fof(f15099,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl262),
  inference(cnf_transformation,[],[f15099_D])).
fof(f15099_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl262),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl262])])).
fof(f31237,plain,(
  ( ! [X818] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f31236,f19315])).
fof(f31236,plain,(
  ( ! [X817,X818] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X817)))) )),
  inference(forward_demodulation,[],[f31235,f1155])).
fof(f31235,plain,(
  ( ! [X817,X818] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X817)))) )),
  inference(forward_demodulation,[],[f31234,f19313])).
fof(f31234,plain,(
  ( ! [X817,X818] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X817)))) )),
  inference(forward_demodulation,[],[f31233,f11115])).
fof(f11115,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f1481,f1156])).
fof(f1481,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f736])).
fof(f736,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X16] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X16))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X16)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.TIMES2')).
fof(f31233,plain,(
  ( ! [X817,X818] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X817)))) )),
  inference(forward_demodulation,[],[f31232,f19315])).
fof(f31232,plain,(
  ( ! [X817,X818] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X817)))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X817)))) )),
  inference(forward_demodulation,[],[f31231,f1155])).
fof(f31231,plain,(
  ( ! [X817,X818] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X817)))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X817)))) )),
  inference(forward_demodulation,[],[f31230,f19313])).
fof(f31230,plain,(
  ( ! [X817,X818] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X817)))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X817)))) )),
  inference(forward_demodulation,[],[f30604,f11115])).
fof(f30604,plain,(
  ( ! [X817,X818] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X817)))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X817)))) )),
  inference(superposition,[],[f11121,f19315])).
fof(f11121,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f11120,f1161])).
fof(f11120,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f11119,f1156])).
fof(f11119,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f1470,f1156])).
fof(f1470,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f827])).
fof(f827,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0)))))))),
  inference(flattening,[],[f826])).
fof(f826,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0)))))))),
  inference(ennf_transformation,[],[f726])).
fof(f726,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0)))))))),
  inference(flattening,[],[f725])).
fof(f725,plain,(
  ! [X0,X1] : ((~s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0)))))))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X16,X23] : ((~s('type.num.num','const.num.|48|_0') = s('type.num.num',X16) & ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X16))))))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X16))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X23),s('type.num.num',X16)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.arithmetic_4|48|6_prove_ltb')).
fof(f31229,plain,(
  ( ! [X769] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X769) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X769),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f31228,f1161])).
fof(f31228,plain,(
  ( ! [X769] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X769),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X769)) )),
  inference(forward_demodulation,[],[f31227,f1161])).
fof(f31227,plain,(
  ( ! [X769] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X769),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X769)) )),
  inference(forward_demodulation,[],[f31226,f19315])).
fof(f31226,plain,(
  ( ! [X769,X768] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X769),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X768))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X769)) )),
  inference(forward_demodulation,[],[f30578,f1161])).
fof(f30578,plain,(
  ( ! [X769,X768] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X769),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X768))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X769)) )),
  inference(superposition,[],[f1521,f19315])).
fof(f31225,plain,(
  ( ! [X767] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X767) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X767))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f31224,f1161])).
fof(f31224,plain,(
  ( ! [X767] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X767))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X767)) )),
  inference(forward_demodulation,[],[f31223,f1161])).
fof(f31223,plain,(
  ( ! [X767] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X767))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X767)) )),
  inference(forward_demodulation,[],[f31222,f19315])).
fof(f31222,plain,(
  ( ! [X767,X766] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X766))),s('type.num.num',X767))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X767)) )),
  inference(forward_demodulation,[],[f30577,f1161])).
fof(f30577,plain,(
  ( ! [X767,X766] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X766))),s('type.num.num',X767))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X767)) )),
  inference(superposition,[],[f1521,f19315])).
fof(f30852,plain,(
  ( ! [X72] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X72)))) ) | $spl364),
  inference(cnf_transformation,[],[f30852_D])).
fof(f30852_D,plain,(
  ( ! [X72] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X72)))) ) <=> ~$spl364),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl364])])).
fof(f31221,plain,(
  ( ! [X765,X764] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X765) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X764))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X765),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f31220,f1161])).
fof(f31220,plain,(
  ( ! [X765,X764] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X764))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X765),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X765)) )),
  inference(forward_demodulation,[],[f31219,f1161])).
fof(f31219,plain,(
  ( ! [X765,X764] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X765),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X764))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X765)) )),
  inference(forward_demodulation,[],[f30576,f1161])).
fof(f30576,plain,(
  ( ! [X765,X764] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X765),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X764))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X765)) )),
  inference(superposition,[],[f1521,f19315])).
fof(f31218,plain,(
  ( ! [X763,X762] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X762))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X763) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X763)))) )),
  inference(forward_demodulation,[],[f31217,f1161])).
fof(f31217,plain,(
  ( ! [X763,X762] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X763) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X763))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X762)))) )),
  inference(forward_demodulation,[],[f31216,f1161])).
fof(f31216,plain,(
  ( ! [X763,X762] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X763))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X763) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X762)))) )),
  inference(forward_demodulation,[],[f30575,f1161])).
fof(f30575,plain,(
  ( ! [X763,X762] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X763))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X763) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X762)))) )),
  inference(superposition,[],[f1521,f19315])).
fof(f31215,plain,(
  ( ! [X761] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X761),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f31214,f1161])).
fof(f31214,plain,(
  ( ! [X761] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X761),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f31213,f19315])).
fof(f31213,plain,(
  ( ! [X761,X760] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X761),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X760)))))) )),
  inference(forward_demodulation,[],[f30574,f1161])).
fof(f30574,plain,(
  ( ! [X761,X760] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X761),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X760)))))) )),
  inference(superposition,[],[f1520,f19315])).
fof(f30848,plain,(
  ( ! [X70] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X70)))) ) | $spl362),
  inference(cnf_transformation,[],[f30848_D])).
fof(f30848_D,plain,(
  ( ! [X70] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X70)))) ) <=> ~$spl362),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl362])])).
fof(f31212,plain,(
  ( ! [X759,X758] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X758))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X759),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f31211,f1161])).
fof(f31211,plain,(
  ( ! [X759,X758] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X759),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X758)))) )),
  inference(forward_demodulation,[],[f30573,f1161])).
fof(f30573,plain,(
  ( ! [X759,X758] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X759),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X758)))) )),
  inference(superposition,[],[f1520,f19315])).
fof(f31210,plain,(
  ( ! [X755] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X755))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f31209,f1161])).
fof(f31209,plain,(
  ( ! [X755] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X755))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f31208,f19315])).
fof(f31208,plain,(
  ( ! [X755,X754] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X754))),s('type.num.num',X755)))) )),
  inference(forward_demodulation,[],[f30571,f1161])).
fof(f30571,plain,(
  ( ! [X755,X754] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X754))),s('type.num.num',X755)))) )),
  inference(superposition,[],[f1519,f19315])).
fof(f31207,plain,(
  ( ! [X751,X750] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X750))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X751)))) )),
  inference(forward_demodulation,[],[f31206,f1161])).
fof(f31206,plain,(
  ( ! [X751,X750] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X751))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X750)))) )),
  inference(forward_demodulation,[],[f30569,f1161])).
fof(f30569,plain,(
  ( ! [X751,X750] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X751))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X750)))) )),
  inference(superposition,[],[f1519,f19315])).
fof(f31169,plain,(
  ( ! [X530,X531] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X531),s('type.num.num',X530))))) ) | $spl22),
  inference(forward_demodulation,[],[f31168,f19315])).
fof(f31168,plain,(
  ( ! [X530,X531] : (s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X530),s('type.num.num',X531))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X531),s('type.num.num',X530))))) ) | $spl22),
  inference(forward_demodulation,[],[f31167,f19315])).
fof(f31167,plain,(
  ( ! [X530,X531] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X530),s('type.num.num',X531))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X530))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X531),s('type.num.num',X530))))) ) | $spl22),
  inference(forward_demodulation,[],[f31166,f19315])).
fof(f31166,plain,(
  ( ! [X530,X531] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X530),s('type.num.num',X531))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X530))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X531))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X531),s('type.num.num',X530))))) ) | $spl22),
  inference(forward_demodulation,[],[f31165,f19315])).
fof(f31165,plain,(
  ( ! [X530,X529,X531] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X529))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X530),s('type.num.num',X531))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X529))),s('type.num.num',X530))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X529))),s('type.num.num',X531))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X531),s('type.num.num',X530))))) ) | $spl22),
  inference(subsumption_resolution,[],[f31164,f1837])).
fof(f31164,plain,(
  ( ! [X530,X529,X531] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X529))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X530),s('type.num.num',X531))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X529))),s('type.num.num',X530))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X529))),s('type.num.num',X531))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X531),s('type.num.num',X530))))) )),
  inference(forward_demodulation,[],[f31163,f1514])).
fof(f31163,plain,(
  ( ! [X530,X529,X531] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X529))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X530),s('type.num.num',X531))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X529))),s('type.num.num',X530))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X529))),s('type.num.num',X531))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X531),s('type.num.num',X530))))) )),
  inference(forward_demodulation,[],[f30478,f1161])).
fof(f30478,plain,(
  ( ! [X530,X529,X531] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X529))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X530),s('type.num.num',X531))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X529))),s('type.num.num',X530))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X529))),s('type.num.num',X531))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X531),s('type.num.num',X530))))) )),
  inference(superposition,[],[f1437,f19315])).
fof(f31160,plain,(
  ( ! [X522,X521] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X522),s('type.num.num',X521))))) ) | $spl22),
  inference(subsumption_resolution,[],[f31159,f1837])).
fof(f31159,plain,(
  ( ! [X522,X521] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X522),s('type.num.num',X521))))) )),
  inference(forward_demodulation,[],[f31158,f1514])).
fof(f31158,plain,(
  ( ! [X522,X521] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X522),s('type.num.num',X521))))) )),
  inference(forward_demodulation,[],[f31157,f1161])).
fof(f31157,plain,(
  ( ! [X522,X521] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X522),s('type.num.num',X521))))) )),
  inference(forward_demodulation,[],[f31156,f19315])).
fof(f31156,plain,(
  ( ! [X520,X522,X521] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X522),s('type.num.num',X521)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X520))))))) )),
  inference(forward_demodulation,[],[f31155,f19315])).
fof(f31155,plain,(
  ( ! [X520,X522,X521] : (s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X521),s('type.num.num',X522))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X522),s('type.num.num',X521)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X520))))))) )),
  inference(forward_demodulation,[],[f31154,f19315])).
fof(f31154,plain,(
  ( ! [X520,X522,X521] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X521),s('type.num.num',X522))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X521))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X522),s('type.num.num',X521)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X520))))))) )),
  inference(forward_demodulation,[],[f30475,f19315])).
fof(f30475,plain,(
  ( ! [X520,X522,X521] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X521),s('type.num.num',X522))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X521))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X522))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X522),s('type.num.num',X521)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X520))))))) )),
  inference(superposition,[],[f1437,f19315])).
fof(f30902,plain,(
  ( ! [X185,X184] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X184),s('type.num.num',X185)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f30901,f19306])).
fof(f30901,plain,(
  ( ! [X185,X184] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X184),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X185)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f30900,f19306])).
fof(f30900,plain,(
  ( ! [X185,X184] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X184),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f30899,f19315])).
fof(f30899,plain,(
  ( ! [X185,X184,X183] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X184),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X183))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X183))))))))) )),
  inference(forward_demodulation,[],[f30316,f1161])).
fof(f30316,plain,(
  ( ! [X185,X184,X183] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X184),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X183))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X183))))))))) )),
  inference(superposition,[],[f1298,f19315])).
fof(f30898,plain,(
  ( ! [X178,X179] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X178),s('type.num.num',X179))))) )),
  inference(forward_demodulation,[],[f30897,f1161])).
fof(f30897,plain,(
  ( ! [X178,X179] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X178),s('type.num.num',X179))))) )),
  inference(forward_demodulation,[],[f30896,f19315])).
fof(f30896,plain,(
  ( ! [X177,X178,X179] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X178),s('type.num.num',X179)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X177)))) )),
  inference(forward_demodulation,[],[f30895,f19306])).
fof(f30895,plain,(
  ( ! [X177,X178,X179] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X178),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X179)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X177)))) )),
  inference(forward_demodulation,[],[f30314,f19306])).
fof(f30314,plain,(
  ( ! [X177,X178,X179] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X178),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X179),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X177)))) )),
  inference(superposition,[],[f1298,f19315])).
fof(f30760,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X19))))))) ) | $spl356),
  inference(cnf_transformation,[],[f30760_D])).
fof(f30760_D,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X19))))))) ) <=> ~$spl356),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl356])])).
fof(f30861,plain,(
  ( ! [X78] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X78)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f30860,f19315])).
fof(f30860,plain,(
  ( ! [X78] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X78))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X78))))))) )),
  inference(forward_demodulation,[],[f30285,f1161])).
fof(f30285,plain,(
  ( ! [X78] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X78))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X78))))))) )),
  inference(superposition,[],[f1152,f19315])).
fof(f30858,plain,(
  ( ! [X76] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X76)))) )),
  inference(forward_demodulation,[],[f30857,f1161])).
fof(f30857,plain,(
  ( ! [X76] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X76)))) )),
  inference(forward_demodulation,[],[f30283,f1156])).
fof(f30283,plain,(
  ( ! [X76] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X76)))) )),
  inference(superposition,[],[f1151,f19315])).
fof(f1151,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f885])).
fof(f30855,plain,(
  ( ! [X74] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X74)))) )),
  inference(forward_demodulation,[],[f30854,f1161])).
fof(f30854,plain,(
  ( ! [X74] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X74)))) )),
  inference(forward_demodulation,[],[f30281,f1156])).
fof(f30281,plain,(
  ( ! [X74] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X74)))) )),
  inference(superposition,[],[f1150,f19315])).
fof(f30851,plain,(
  ( ! [X72] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X72)))) )),
  inference(forward_demodulation,[],[f30850,f1161])).
fof(f30850,plain,(
  ( ! [X72] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X72)))) )),
  inference(forward_demodulation,[],[f30279,f1156])).
fof(f30279,plain,(
  ( ! [X72] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X72)))) )),
  inference(superposition,[],[f1149,f19315])).
fof(f1149,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f884])).
fof(f30847,plain,(
  ( ! [X70] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X70)))) )),
  inference(forward_demodulation,[],[f30846,f1161])).
fof(f30846,plain,(
  ( ! [X70] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X70)))) )),
  inference(forward_demodulation,[],[f30277,f1156])).
fof(f30277,plain,(
  ( ! [X70] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X70)))) )),
  inference(superposition,[],[f1148,f19315])).
fof(f30821,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X2))))) ) | $spl22),
  inference(subsumption_resolution,[],[f30820,f1837])).
fof(f30820,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X2))))) )),
  inference(forward_demodulation,[],[f30819,f1514])).
fof(f30819,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X2))))) )),
  inference(forward_demodulation,[],[f30818,f1161])).
fof(f30818,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f30817,f19315])).
fof(f30817,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X3))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f30242,f19315])).
fof(f30242,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X3))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f1437,f19315])).
fof(f30813,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) | $spl22),
  inference(subsumption_resolution,[],[f30812,f1837])).
fof(f30812,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f30811,f1514])).
fof(f30811,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f30810,f1161])).
fof(f30810,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f30809,f19315])).
fof(f30809,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f30241,f19315])).
fof(f30241,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f1437,f19315])).
fof(f30806,plain,(
  ( ! [X53] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f30805,f1161])).
fof(f30805,plain,(
  ( ! [X53] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f30804,f19315])).
fof(f30804,plain,(
  ( ! [X52,X53] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X52)))))) )),
  inference(forward_demodulation,[],[f30238,f1161])).
fof(f30238,plain,(
  ( ! [X52,X53] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X52)))))) )),
  inference(superposition,[],[f19315,f1520])).
fof(f30803,plain,(
  ( ! [X51] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X51))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f30802,f1161])).
fof(f30802,plain,(
  ( ! [X51] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X51))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f30801,f19315])).
fof(f30801,plain,(
  ( ! [X50,X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X50))),s('type.num.num',X51)))) )),
  inference(forward_demodulation,[],[f30237,f1161])).
fof(f30237,plain,(
  ( ! [X50,X51] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X50))),s('type.num.num',X51)))) )),
  inference(superposition,[],[f19315,f1519])).
fof(f30759,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X19)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f30758,f19315])).
fof(f30758,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X19))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f30221,f1161])).
fof(f30221,plain,(
  ( ! [X19] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X19))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X19))))))) )),
  inference(superposition,[],[f19315,f1152])).
fof(f30717,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)))) ) | $spl354),
  inference(cnf_transformation,[],[f30717_D])).
fof(f30717_D,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)))) ) <=> ~$spl354),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl354])])).
fof(f30743,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60)))) )),
  inference(forward_demodulation,[],[f30742,f1161])).
fof(f30742,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f30089,f1161])).
fof(f30089,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X60))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19315,f1520])).
fof(f30741,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58)))) )),
  inference(forward_demodulation,[],[f30740,f1161])).
fof(f30740,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) )),
  inference(forward_demodulation,[],[f30088,f1161])).
fof(f30088,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) )),
  inference(superposition,[],[f19315,f1519])).
fof(f30720,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f30073,f1161])).
fof(f30073,plain,(
  ( ! [X28] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X28))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f19315,f1152])).
fof(f30719,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27)))) )),
  inference(forward_demodulation,[],[f30718,f1161])).
fof(f30718,plain,(
  ( ! [X27] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27)))) )),
  inference(forward_demodulation,[],[f30072,f1156])).
fof(f30072,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19315,f1150])).
fof(f30716,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f30715,f1161])).
fof(f30715,plain,(
  ( ! [X26] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f30071,f1156])).
fof(f30071,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19315,f1148])).
fof(f29626,plain,(
  ( ! [X32] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X32)) )),
  inference(forward_demodulation,[],[f29625,f1161])).
fof(f29625,plain,(
  ( ! [X32] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X32) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f29624,f1161])).
fof(f29624,plain,(
  ( ! [X32] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X32) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(subsumption_resolution,[],[f29023,f1146])).
fof(f29023,plain,(
  ( ! [X32] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X32) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f1521,f19314])).
fof(f29542,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X3)) )),
  inference(forward_demodulation,[],[f29541,f1161])).
fof(f29541,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X3) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f29540,f1161])).
fof(f29540,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X3) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(subsumption_resolution,[],[f28970,f1146])).
fof(f28970,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X3) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f19314,f1521])).
fof(f28306,plain,(
  ( ! [X28] : (s('type.num.num',X28) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X28)))) ) | $spl350),
  inference(cnf_transformation,[],[f28306_D])).
fof(f28306_D,plain,(
  ( ! [X28] : (s('type.num.num',X28) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X28)))) ) <=> ~$spl350),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl350])])).
fof(f29535,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X60) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X60)))) )),
  inference(forward_demodulation,[],[f29534,f1161])).
fof(f29534,plain,(
  ( ! [X61,X60] : (s('type.num.num',X60) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f28847,f1528])).
fof(f28847,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X60))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19314,f1520])).
fof(f29533,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59))) | s('type.num.num',X58) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X58)))) )),
  inference(forward_demodulation,[],[f29532,f1161])).
fof(f29532,plain,(
  ( ! [X59,X58] : (s('type.num.num',X58) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) )),
  inference(forward_demodulation,[],[f28846,f1528])).
fof(f28846,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X58))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) )),
  inference(superposition,[],[f19314,f1519])).
fof(f29512,plain,(
  ( ! [X28] : (s('type.num.num',X28) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f28831,f1528])).
fof(f28831,plain,(
  ( ! [X28] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X28))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f19314,f1152])).
fof(f29509,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)))) ) | $spl352),
  inference(cnf_transformation,[],[f29509_D])).
fof(f29509_D,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)))) ) <=> ~$spl352),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl352])])).
fof(f29511,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27)))) )),
  inference(forward_demodulation,[],[f29510,f1161])).
fof(f29510,plain,(
  ( ! [X27] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27)))) )),
  inference(forward_demodulation,[],[f28830,f1156])).
fof(f28830,plain,(
  ( ! [X27] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19314,f1150])).
fof(f29508,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f29507,f1161])).
fof(f29507,plain,(
  ( ! [X26] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f28829,f1156])).
fof(f28829,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19314,f1148])).
fof(f28395,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X30) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f28394,f1161])).
fof(f28394,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X30)) )),
  inference(forward_demodulation,[],[f28393,f1161])).
fof(f28393,plain,(
  ( ! [X30] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X30)) )),
  inference(subsumption_resolution,[],[f27813,f1146])).
fof(f27813,plain,(
  ( ! [X30] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X30)) )),
  inference(superposition,[],[f1521,f19313])).
fof(f28330,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X3) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f28329,f1161])).
fof(f28329,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X3)) )),
  inference(forward_demodulation,[],[f28328,f1161])).
fof(f28328,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X3)) )),
  inference(subsumption_resolution,[],[f27762,f1146])).
fof(f27762,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X3)) )),
  inference(superposition,[],[f19313,f1521])).
fof(f28327,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X60) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X60)))) )),
  inference(forward_demodulation,[],[f28326,f1161])).
fof(f28326,plain,(
  ( ! [X61,X60] : (s('type.num.num',X60) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f27757,f1529])).
fof(f27757,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X60),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19313,f1520])).
fof(f28325,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59))) | s('type.num.num',X58) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X58)))) )),
  inference(forward_demodulation,[],[f28324,f1161])).
fof(f28324,plain,(
  ( ! [X59,X58] : (s('type.num.num',X58) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) )),
  inference(forward_demodulation,[],[f27756,f1529])).
fof(f27756,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X58))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) )),
  inference(superposition,[],[f19313,f1519])).
fof(f28305,plain,(
  ( ! [X28] : (s('type.num.num',X28) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f27741,f1529])).
fof(f27741,plain,(
  ( ! [X28] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f19313,f1152])).
fof(f28302,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl348),
  inference(cnf_transformation,[],[f28302_D])).
fof(f28302_D,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl348),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl348])])).
fof(f28304,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f28303,f1161])).
fof(f28303,plain,(
  ( ! [X27] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f27740,f1156])).
fof(f27740,plain,(
  ( ! [X27] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19313,f1150])).
fof(f28301,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f28300,f1161])).
fof(f28300,plain,(
  ( ! [X26] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f27739,f1156])).
fof(f27739,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19313,f1148])).
fof(f27221,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X0))))) ) | $spl346),
  inference(cnf_transformation,[],[f27221_D])).
fof(f27221_D,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X0))))) ) <=> ~$spl346),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl346])])).
fof(f27220,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f27219,f11115])).
fof(f27219,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26638,f11115])).
fof(f26638,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f11121,f19312])).
fof(f19312,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f1485,f1156])).
fof(f1485,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f740])).
fof(f740,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f479])).
fof(f479,axiom,(
  ! [X23] : s('type.num.num',X23) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.SUC_SUB|49|')).
fof(f27139,plain,(
  ( ! [X26] : (s('type.num.num',X26) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl344),
  inference(cnf_transformation,[],[f27139_D])).
fof(f27139_D,plain,(
  ( ! [X26] : (s('type.num.num',X26) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl344),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl344])])).
fof(f27163,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X60) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f27162,f1161])).
fof(f27162,plain,(
  ( ! [X61,X60] : (s('type.num.num',X60) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f26605,f1161])).
fof(f26605,plain,(
  ( ! [X61,X60] : (s('type.num.num',X60) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19312,f1520])).
fof(f27161,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59))) | s('type.num.num',X58) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f27160,f1161])).
fof(f27160,plain,(
  ( ! [X59,X58] : (s('type.num.num',X58) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) )),
  inference(forward_demodulation,[],[f26604,f1161])).
fof(f26604,plain,(
  ( ! [X59,X58] : (s('type.num.num',X58) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X58))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) )),
  inference(superposition,[],[f19312,f1519])).
fof(f27142,plain,(
  ( ! [X28] : (s('type.num.num',X28) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f26589,f1161])).
fof(f26589,plain,(
  ( ! [X28] : (s('type.num.num',X28) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f19312,f1152])).
fof(f27141,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f27140,f1161])).
fof(f27140,plain,(
  ( ! [X27] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26588,f1156])).
fof(f26588,plain,(
  ( ! [X27] : (s('type.num.num',X27) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19312,f1150])).
fof(f27138,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f27137,f1161])).
fof(f27137,plain,(
  ( ! [X26] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26587,f1156])).
fof(f26587,plain,(
  ( ! [X26] : (s('type.num.num',X26) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19312,f1148])).
fof(f26314,plain,(
  ( ! [X818] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl342),
  inference(cnf_transformation,[],[f26314_D])).
fof(f26314_D,plain,(
  ( ! [X818] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) <=> ~$spl342),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl342])])).
fof(f26313,plain,(
  ( ! [X818] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f26312,f19309])).
fof(f26312,plain,(
  ( ! [X817,X818] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X817),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26311,f11115])).
fof(f26311,plain,(
  ( ! [X817,X818] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X817),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26310,f19309])).
fof(f26310,plain,(
  ( ! [X817,X818] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X817),s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X817),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25761,f11115])).
fof(f25761,plain,(
  ( ! [X817,X818] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X818),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X817),s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X817),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f11121,f19309])).
fof(f26309,plain,(
  ( ! [X769] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X769) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X769),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26308,f1161])).
fof(f26308,plain,(
  ( ! [X769] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X769),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X769)) )),
  inference(forward_demodulation,[],[f26307,f1161])).
fof(f26307,plain,(
  ( ! [X769] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X769),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X769)) )),
  inference(forward_demodulation,[],[f26306,f19309])).
fof(f26306,plain,(
  ( ! [X769,X768] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X769),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X768),s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X769)) )),
  inference(forward_demodulation,[],[f25735,f1161])).
fof(f25735,plain,(
  ( ! [X769,X768] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X769),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X768),s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X769)) )),
  inference(superposition,[],[f1521,f19309])).
fof(f26305,plain,(
  ( ! [X767] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X767) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X767))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26304,f1161])).
fof(f26304,plain,(
  ( ! [X767] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X767))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X767)) )),
  inference(forward_demodulation,[],[f26303,f1161])).
fof(f26303,plain,(
  ( ! [X767] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X767))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X767)) )),
  inference(forward_demodulation,[],[f26302,f19309])).
fof(f26302,plain,(
  ( ! [X767,X766] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X766),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X767))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X767)) )),
  inference(forward_demodulation,[],[f25734,f1161])).
fof(f25734,plain,(
  ( ! [X767,X766] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X766),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X767))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X767)) )),
  inference(superposition,[],[f1521,f19309])).
fof(f25961,plain,(
  ( ! [X72] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X72),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl340),
  inference(cnf_transformation,[],[f25961_D])).
fof(f25961_D,plain,(
  ( ! [X72] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X72),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl340),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl340])])).
fof(f26301,plain,(
  ( ! [X765,X764] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X765) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X764),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X765),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f26300,f1161])).
fof(f26300,plain,(
  ( ! [X765,X764] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X764),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X765),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X765)) )),
  inference(forward_demodulation,[],[f26299,f1161])).
fof(f26299,plain,(
  ( ! [X765,X764] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X765),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X764),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X765)) )),
  inference(forward_demodulation,[],[f25733,f1161])).
fof(f25733,plain,(
  ( ! [X765,X764] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X765),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X764),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X765)) )),
  inference(superposition,[],[f1521,f19309])).
fof(f26298,plain,(
  ( ! [X763,X762] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X762),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X763) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X763)))) )),
  inference(forward_demodulation,[],[f26297,f1161])).
fof(f26297,plain,(
  ( ! [X763,X762] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X763) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X763))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X762),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26296,f1161])).
fof(f26296,plain,(
  ( ! [X763,X762] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X763))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X763) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X762),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25732,f1161])).
fof(f25732,plain,(
  ( ! [X763,X762] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X763))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X763) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X762),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f1521,f19309])).
fof(f26295,plain,(
  ( ! [X761] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X761),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26294,f1161])).
fof(f26294,plain,(
  ( ! [X761] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X761),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26293,f19309])).
fof(f26293,plain,(
  ( ! [X761,X760] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X761),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X760),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f25731,f1161])).
fof(f25731,plain,(
  ( ! [X761,X760] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X761),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X760),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f1520,f19309])).
fof(f25957,plain,(
  ( ! [X70] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl338),
  inference(cnf_transformation,[],[f25957_D])).
fof(f25957_D,plain,(
  ( ! [X70] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl338),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl338])])).
fof(f26292,plain,(
  ( ! [X759,X758] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X758),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X759),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f26291,f1161])).
fof(f26291,plain,(
  ( ! [X759,X758] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X759),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X758),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25730,f1161])).
fof(f25730,plain,(
  ( ! [X759,X758] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X759),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X758),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f1520,f19309])).
fof(f26290,plain,(
  ( ! [X755] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X755))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26289,f1161])).
fof(f26289,plain,(
  ( ! [X755] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X755))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26288,f19309])).
fof(f26288,plain,(
  ( ! [X755,X754] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X754),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X755)))) )),
  inference(forward_demodulation,[],[f25728,f1161])).
fof(f25728,plain,(
  ( ! [X755,X754] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X754),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X755)))) )),
  inference(superposition,[],[f1519,f19309])).
fof(f26287,plain,(
  ( ! [X751,X750] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X750),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X751)))) )),
  inference(forward_demodulation,[],[f26286,f1161])).
fof(f26286,plain,(
  ( ! [X751,X750] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X751))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X750),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25726,f1161])).
fof(f25726,plain,(
  ( ! [X751,X750] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X751))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X750),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f1519,f19309])).
fof(f26011,plain,(
  ( ! [X185,X184] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X184),s('type.num.num',X185)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26010,f19306])).
fof(f26010,plain,(
  ( ! [X185,X184] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X184),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X185)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26009,f19306])).
fof(f26009,plain,(
  ( ! [X185,X184] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X184),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26008,f19309])).
fof(f26008,plain,(
  ( ! [X185,X184,X183] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X184),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X183),s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X183),s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f25473,f1161])).
fof(f25473,plain,(
  ( ! [X185,X184,X183] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X184),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X183),s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X183),s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(superposition,[],[f1298,f19309])).
fof(f26007,plain,(
  ( ! [X178,X179] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X178),s('type.num.num',X179))))) )),
  inference(forward_demodulation,[],[f26006,f1161])).
fof(f26006,plain,(
  ( ! [X178,X179] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X178),s('type.num.num',X179))))) )),
  inference(forward_demodulation,[],[f26005,f19309])).
fof(f26005,plain,(
  ( ! [X177,X178,X179] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X178),s('type.num.num',X179)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X177),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f26004,f19306])).
fof(f26004,plain,(
  ( ! [X177,X178,X179] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X178),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X179)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X177),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25471,f19306])).
fof(f25471,plain,(
  ( ! [X177,X178,X179] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X178),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X179),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X177),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f1298,f19309])).
fof(f25878,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl336),
  inference(cnf_transformation,[],[f25878_D])).
fof(f25878_D,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.ZERO_0'))))))) ) <=> ~$spl336),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl336])])).
fof(f25970,plain,(
  ( ! [X78] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num',X78),s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25969,f19309])).
fof(f25969,plain,(
  ( ! [X78] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X78),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num',X78),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f25442,f1161])).
fof(f25442,plain,(
  ( ! [X78] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X78),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num',X78),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f1152,f19309])).
fof(f25967,plain,(
  ( ! [X76] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X76),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25966,f1161])).
fof(f25966,plain,(
  ( ! [X76] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X76),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25440,f1156])).
fof(f25440,plain,(
  ( ! [X76] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X76),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f1151,f19309])).
fof(f25964,plain,(
  ( ! [X74] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X74),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25963,f1161])).
fof(f25963,plain,(
  ( ! [X74] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X74),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25438,f1156])).
fof(f25438,plain,(
  ( ! [X74] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X74),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f1150,f19309])).
fof(f25960,plain,(
  ( ! [X72] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X72),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25959,f1161])).
fof(f25959,plain,(
  ( ! [X72] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X72),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25436,f1156])).
fof(f25436,plain,(
  ( ! [X72] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X72),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f1149,f19309])).
fof(f25956,plain,(
  ( ! [X70] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25955,f1161])).
fof(f25955,plain,(
  ( ! [X70] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25434,f1156])).
fof(f25434,plain,(
  ( ! [X70] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f1148,f19309])).
fof(f25924,plain,(
  ( ! [X53] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25923,f1161])).
fof(f25923,plain,(
  ( ! [X53] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25922,f19309])).
fof(f25922,plain,(
  ( ! [X52,X53] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f25395,f1161])).
fof(f25395,plain,(
  ( ! [X52,X53] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19309,f1520])).
fof(f25921,plain,(
  ( ! [X51] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X51))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25920,f1161])).
fof(f25920,plain,(
  ( ! [X51] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X51))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25919,f19309])).
fof(f25919,plain,(
  ( ! [X50,X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X50),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X51)))) )),
  inference(forward_demodulation,[],[f25394,f1161])).
fof(f25394,plain,(
  ( ! [X50,X51] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X50),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X51)))) )),
  inference(superposition,[],[f19309,f1519])).
fof(f25877,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f25876,f19309])).
fof(f25876,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f25378,f1161])).
fof(f25378,plain,(
  ( ! [X19] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.EXP_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f19309,f1152])).
fof(f24773,plain,(
  ( ! [X26] : (s('type.num.num',X26) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)))) ) | $spl334),
  inference(cnf_transformation,[],[f24773_D])).
fof(f24773_D,plain,(
  ( ! [X26] : (s('type.num.num',X26) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)))) ) <=> ~$spl334),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl334])])).
fof(f24797,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X60) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60)))) )),
  inference(forward_demodulation,[],[f24796,f1161])).
fof(f24796,plain,(
  ( ! [X61,X60] : (s('type.num.num',X60) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f24145,f1161])).
fof(f24145,plain,(
  ( ! [X61,X60] : (s('type.num.num',X60) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X60))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19307,f1520])).
fof(f19307,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f1490,f1156])).
fof(f1490,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f745])).
fof(f745,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))),
  inference(rectify,[],[f122])).
fof(f122,axiom,(
  ! [X23] : s('type.num.num',X23) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X23)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.MULT_LEFT_|49|')).
fof(f24795,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59))) | s('type.num.num',X58) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58)))) )),
  inference(forward_demodulation,[],[f24794,f1161])).
fof(f24794,plain,(
  ( ! [X59,X58] : (s('type.num.num',X58) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) )),
  inference(forward_demodulation,[],[f24144,f1161])).
fof(f24144,plain,(
  ( ! [X59,X58] : (s('type.num.num',X58) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) )),
  inference(superposition,[],[f19307,f1519])).
fof(f24776,plain,(
  ( ! [X28] : (s('type.num.num',X28) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f24129,f1161])).
fof(f24129,plain,(
  ( ! [X28] : (s('type.num.num',X28) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X28))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f19307,f1152])).
fof(f24775,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27)))) )),
  inference(forward_demodulation,[],[f24774,f1161])).
fof(f24774,plain,(
  ( ! [X27] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27)))) )),
  inference(forward_demodulation,[],[f24128,f1156])).
fof(f24128,plain,(
  ( ! [X27] : (s('type.num.num',X27) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19307,f1150])).
fof(f24772,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f24771,f1161])).
fof(f24771,plain,(
  ( ! [X26] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f24127,f1156])).
fof(f24127,plain,(
  ( ! [X26] : (s('type.num.num',X26) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19307,f1148])).
fof(f23750,plain,(
  ( ! [X26] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl332),
  inference(cnf_transformation,[],[f23750_D])).
fof(f23750_D,plain,(
  ( ! [X26] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) <=> ~$spl332),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl332])])).
fof(f23749,plain,(
  ( ! [X26] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f23174,f11115])).
fof(f23174,plain,(
  ( ! [X26] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f11121,f19306])).
fof(f23734,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6))))) )),
  inference(forward_demodulation,[],[f23733,f1161])).
fof(f23733,plain,(
  ( ! [X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f23163,f19306])).
fof(f23163,plain,(
  ( ! [X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f1298,f19306])).
fof(f23731,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5))))) )),
  inference(forward_demodulation,[],[f23730,f1161])).
fof(f23730,plain,(
  ( ! [X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f23162,f19306])).
fof(f23162,plain,(
  ( ! [X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f1298,f19306])).
fof(f23648,plain,(
  ( ! [X26] : (s('type.num.num',X26) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl328),
  inference(cnf_transformation,[],[f23648_D])).
fof(f23648_D,plain,(
  ( ! [X26] : (s('type.num.num',X26) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl328),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl328])])).
fof(f23672,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X60) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f23671,f1161])).
fof(f23671,plain,(
  ( ! [X61,X60] : (s('type.num.num',X60) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f23126,f1161])).
fof(f23126,plain,(
  ( ! [X61,X60] : (s('type.num.num',X60) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X60),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19306,f1520])).
fof(f23670,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59))) | s('type.num.num',X58) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f23669,f1161])).
fof(f23669,plain,(
  ( ! [X59,X58] : (s('type.num.num',X58) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) )),
  inference(forward_demodulation,[],[f23125,f1161])).
fof(f23125,plain,(
  ( ! [X59,X58] : (s('type.num.num',X58) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) )),
  inference(superposition,[],[f19306,f1519])).
fof(f23651,plain,(
  ( ! [X28] : (s('type.num.num',X28) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f23110,f1161])).
fof(f23110,plain,(
  ( ! [X28] : (s('type.num.num',X28) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f19306,f1152])).
fof(f23650,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f23649,f1161])).
fof(f23649,plain,(
  ( ! [X27] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f23109,f1156])).
fof(f23109,plain,(
  ( ! [X27] : (s('type.num.num',X27) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19306,f1150])).
fof(f23647,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f23646,f1161])).
fof(f23646,plain,(
  ( ! [X26] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f23108,f1156])).
fof(f23108,plain,(
  ( ! [X26] : (s('type.num.num',X26) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19306,f1148])).
fof(f22893,plain,(
  ( ! [X2,X0] : (sP13(X0,'T_0') | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) | $spl326),
  inference(cnf_transformation,[],[f22893_D])).
fof(f22893_D,plain,(
  ( ! [X2,X0] : (sP13(X0,'T_0') | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) <=> ~$spl326),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl326])])).
fof(f22730,plain,(
  ( ! [X352,X354,X353] : (sP13(X352,'T_0') | p(s(bool,X353)) | p(s(bool,X354)) | s(bool,X352) != s(bool,X354)) ) | $spl22),
  inference(resolution,[],[f17464,f1535])).
fof(f22619,plain,(
  ( ! [X30,X28,X31,X29] : (sP13(X28,'T_0') | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X29) | s(bool,X30) != s(bool,X31)) ) | $spl22),
  inference(resolution,[],[f17464,f1087])).
fof(f22616,plain,(
  ( ! [X19,X17,X18,X16] : (sP13(X16,'T_0') | p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X16) != s(bool,X19)) ) | $spl22),
  inference(resolution,[],[f17464,f1086])).
fof(f22615,plain,(
  ( ! [X14,X12,X15,X13] : (sP13(X12,'T_0') | p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl22),
  inference(resolution,[],[f17464,f1085])).
fof(f22614,plain,(
  ( ! [X10,X8,X11,X9] : (sP13(X8,'T_0') | p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X9) | s(bool,X10) != s(bool,X11)) ) | $spl22),
  inference(resolution,[],[f17464,f1083])).
fof(f22612,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,'T_0') | p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl22),
  inference(resolution,[],[f17464,f1081])).
fof(f22168,plain,(
  ( ! [X26] : (s('type.num.num',X26) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl322),
  inference(cnf_transformation,[],[f22168_D])).
fof(f22168_D,plain,(
  ( ! [X26] : (s('type.num.num',X26) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl322),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl322])])).
fof(f22192,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X60) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f22191,f1161])).
fof(f22191,plain,(
  ( ! [X61,X60] : (s('type.num.num',X60) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f21662,f1161])).
fof(f21662,plain,(
  ( ! [X61,X60] : (s('type.num.num',X60) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X60),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19305,f1520])).
fof(f19305,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f1492,f1156])).
fof(f1492,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f747])).
fof(f747,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f249])).
fof(f249,axiom,(
  ! [X16] : s('type.num.num',X16) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.EXP_|49||split|1')).
fof(f22190,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59))) | s('type.num.num',X58) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f22189,f1161])).
fof(f22189,plain,(
  ( ! [X59,X58] : (s('type.num.num',X58) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) )),
  inference(forward_demodulation,[],[f21661,f1161])).
fof(f21661,plain,(
  ( ! [X59,X58] : (s('type.num.num',X58) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X58),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)))) )),
  inference(superposition,[],[f19305,f1519])).
fof(f19916,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14))))) ) | $spl306),
  inference(cnf_transformation,[],[f19916_D])).
fof(f19916_D,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14))))) ) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f22174,plain,(
  ( ! [X30,X31,X29] : (s('type.num.num',X29) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num',X31)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f21647,f1161])).
fof(f21647,plain,(
  ( ! [X30,X31,X29] : (s('type.num.num',X29) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num',X31)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(superposition,[],[f19305,f1297])).
fof(f22171,plain,(
  ( ! [X28] : (s('type.num.num',X28) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f21646,f1161])).
fof(f21646,plain,(
  ( ! [X28] : (s('type.num.num',X28) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X28),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f19305,f1152])).
fof(f22170,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f22169,f1161])).
fof(f22169,plain,(
  ( ! [X27] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f21645,f1156])).
fof(f21645,plain,(
  ( ! [X27] : (s('type.num.num',X27) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19305,f1150])).
fof(f22167,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f22166,f1161])).
fof(f22166,plain,(
  ( ! [X26] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f21644,f1156])).
fof(f21644,plain,(
  ( ! [X26] : (s('type.num.num',X26) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f19305,f1148])).
fof(f15877,plain,(
  ( ! [X2,X0] : (sP13('T_0',X0) | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) | $spl270),
  inference(cnf_transformation,[],[f15877_D])).
fof(f15877_D,plain,(
  ( ! [X2,X0] : (sP13('T_0',X0) | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) <=> ~$spl270),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl270])])).
fof(f21297,plain,(
  ( ! [X352,X354,X353] : (sP13('T_0',X352) | p(s(bool,X353)) | p(s(bool,X354)) | s(bool,X352) != s(bool,X354)) ) | $spl22),
  inference(resolution,[],[f17463,f1535])).
fof(f21186,plain,(
  ( ! [X30,X28,X31,X29] : (sP13('T_0',X28) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X29) | s(bool,X30) != s(bool,X31)) ) | $spl22),
  inference(resolution,[],[f17463,f1087])).
fof(f21183,plain,(
  ( ! [X19,X17,X18,X16] : (sP13('T_0',X16) | p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X16) != s(bool,X19)) ) | $spl22),
  inference(resolution,[],[f17463,f1086])).
fof(f21182,plain,(
  ( ! [X14,X12,X15,X13] : (sP13('T_0',X12) | p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl22),
  inference(resolution,[],[f17463,f1085])).
fof(f21181,plain,(
  ( ! [X10,X8,X11,X9] : (sP13('T_0',X8) | p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X9) | s(bool,X10) != s(bool,X11)) ) | $spl22),
  inference(resolution,[],[f17463,f1083])).
fof(f21179,plain,(
  ( ! [X2,X0,X3,X1] : (sP13('T_0',X0) | p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl22),
  inference(resolution,[],[f17463,f1081])).
fof(f21114,plain,(
  ( ! [X2,X0] : (sP13('F_0',X0) | s(bool,X0) != s(bool,X2) | ~p(s(bool,X2))) ) | $spl320),
  inference(cnf_transformation,[],[f21114_D])).
fof(f21114_D,plain,(
  ( ! [X2,X0] : (sP13('F_0',X0) | s(bool,X0) != s(bool,X2) | ~p(s(bool,X2))) ) <=> ~$spl320),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl320])])).
fof(f20960,plain,(
  ( ! [X356,X357,X355] : (sP13('F_0',X355) | p(s(bool,X356)) | ~p(s(bool,X357)) | s(bool,X355) != s(bool,X357)) ) | $spl17),
  inference(resolution,[],[f11246,f1535])).
fof(f20848,plain,(
  ( ! [X30,X28,X31,X29] : (sP13('F_0',X28) | ~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X30) | s(bool,X29) != s(bool,X31)) ) | $spl17),
  inference(resolution,[],[f11246,f1087])).
fof(f20846,plain,(
  ( ! [X23,X21,X22,X20] : (sP13('F_0',X20) | p(s(bool,X21)) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X20) != s(bool,X22)) ) | $spl17),
  inference(resolution,[],[f11246,f1086])).
fof(f20844,plain,(
  ( ! [X14,X12,X15,X13] : (sP13('F_0',X12) | p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl17),
  inference(resolution,[],[f11246,f1085])).
fof(f20843,plain,(
  ( ! [X10,X8,X11,X9] : (sP13('F_0',X8) | ~p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X10) | s(bool,X9) != s(bool,X11)) ) | $spl17),
  inference(resolution,[],[f11246,f1083])).
fof(f20841,plain,(
  ( ! [X2,X0,X3,X1] : (sP13('F_0',X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl17),
  inference(resolution,[],[f11246,f1081])).
fof(f6564,plain,(
  ( ! [X2,X0] : (sP13(X0,'F_0') | s(bool,X0) != s(bool,X2) | ~p(s(bool,X2))) ) | $spl128),
  inference(cnf_transformation,[],[f6564_D])).
fof(f6564_D,plain,(
  ( ! [X2,X0] : (sP13(X0,'F_0') | s(bool,X0) != s(bool,X2) | ~p(s(bool,X2))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f20642,plain,(
  ( ! [X356,X357,X355] : (sP13(X355,'F_0') | p(s(bool,X356)) | ~p(s(bool,X357)) | s(bool,X355) != s(bool,X357)) ) | $spl17),
  inference(resolution,[],[f11245,f1535])).
fof(f20530,plain,(
  ( ! [X30,X28,X31,X29] : (sP13(X28,'F_0') | ~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X30) | s(bool,X29) != s(bool,X31)) ) | $spl17),
  inference(resolution,[],[f11245,f1087])).
fof(f20528,plain,(
  ( ! [X23,X21,X22,X20] : (sP13(X20,'F_0') | p(s(bool,X21)) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X20) != s(bool,X22)) ) | $spl17),
  inference(resolution,[],[f11245,f1086])).
fof(f20526,plain,(
  ( ! [X14,X12,X15,X13] : (sP13(X12,'F_0') | p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl17),
  inference(resolution,[],[f11245,f1085])).
fof(f20525,plain,(
  ( ! [X10,X8,X11,X9] : (sP13(X8,'F_0') | ~p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X10) | s(bool,X9) != s(bool,X11)) ) | $spl17),
  inference(resolution,[],[f11245,f1083])).
fof(f20523,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,'F_0') | p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl17),
  inference(resolution,[],[f11245,f1081])).
fof(f20472,plain,(
  $false | $spl166),
  inference(trivial_inequality_removal,[],[f20432])).
fof(f20432,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | $spl166),
  inference(superposition,[],[f8406,f1161])).
fof(f20471,plain,(
  $false | $spl166),
  inference(equality_resolution,[],[f8406])).
fof(f15354,plain,(
  ( ! [X113] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl264),
  inference(cnf_transformation,[],[f15354_D])).
fof(f15354_D,plain,(
  ( ! [X113] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) <=> ~$spl264),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl264])])).
fof(f20316,plain,(
  ( ! [X489] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f20315,f1160])).
fof(f20315,plain,(
  ( ! [X489] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f20314,f1155])).
fof(f20314,plain,(
  ( ! [X489] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X489),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f20313,f1160])).
fof(f20313,plain,(
  ( ! [X489] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X489),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f20312,f1512])).
fof(f1512,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(cnf_transformation,[],[f760])).
fof(f760,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(rectify,[],[f316])).
fof(f316,axiom,(
  ! [X16] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_add|split|7')).
fof(f20312,plain,(
  ( ! [X489] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X489),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f20311,f1524])).
fof(f1524,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f769])).
fof(f769,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X16,X23] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X16))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num','const.num.SUC_1'(s('type.num.num',X16)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f20311,plain,(
  ( ! [X489] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f20310,f11115])).
fof(f20310,plain,(
  ( ! [X489] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f19801,f11115])).
fof(f19801,plain,(
  ( ! [X489] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X489),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f11121,f1160])).
fof(f20308,plain,(
  ( ! [X466] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X466) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X466),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f20307,f1161])).
fof(f20307,plain,(
  ( ! [X466] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X466),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X466)) )),
  inference(forward_demodulation,[],[f20306,f1161])).
fof(f20306,plain,(
  ( ! [X466] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X466),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X466)) )),
  inference(forward_demodulation,[],[f20305,f1160])).
fof(f20305,plain,(
  ( ! [X466] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X466),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X466)) )),
  inference(forward_demodulation,[],[f19775,f1161])).
fof(f19775,plain,(
  ( ! [X466] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X466),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X466)) )),
  inference(superposition,[],[f1521,f1160])).
fof(f20303,plain,(
  ( ! [X465] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X465) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X465))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f20302,f1161])).
fof(f20302,plain,(
  ( ! [X465] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X465))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X465)) )),
  inference(forward_demodulation,[],[f20301,f1161])).
fof(f20301,plain,(
  ( ! [X465] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X465))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X465)) )),
  inference(forward_demodulation,[],[f20300,f1160])).
fof(f20300,plain,(
  ( ! [X465] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X465))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X465)) )),
  inference(forward_demodulation,[],[f19774,f1161])).
fof(f19774,plain,(
  ( ! [X465] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X465))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X465)) )),
  inference(superposition,[],[f1521,f1160])).
fof(f20299,plain,(
  ( ! [X462] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X462),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f20298,f1161])).
fof(f20298,plain,(
  ( ! [X462] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X462),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f20297,f1160])).
fof(f20297,plain,(
  ( ! [X462] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X462),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f19771,f1161])).
fof(f19771,plain,(
  ( ! [X462] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X462),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f1520,f1160])).
fof(f20294,plain,(
  ( ! [X459] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X459))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f20293,f1161])).
fof(f20293,plain,(
  ( ! [X459] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X459))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f20292,f1160])).
fof(f20292,plain,(
  ( ! [X459] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X459)))) )),
  inference(forward_demodulation,[],[f19768,f1161])).
fof(f19768,plain,(
  ( ! [X459] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X459)))) )),
  inference(superposition,[],[f1519,f1160])).
fof(f20049,plain,(
  ( ! [X144,X143] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X143),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X144),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl314),
  inference(cnf_transformation,[],[f20049_D])).
fof(f20049_D,plain,(
  ( ! [X144,X143] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X143),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X144),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) <=> ~$spl314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl314])])).
fof(f20048,plain,(
  ( ! [X144,X143] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X143),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X144),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f20047,f1160])).
fof(f20047,plain,(
  ( ! [X144,X143] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X143),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X144),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f19513,f1161])).
fof(f19513,plain,(
  ( ! [X144,X143] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X143),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X144),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(superposition,[],[f1298,f1160])).
fof(f20046,plain,(
  ( ! [X136,X135] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X135),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X136),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X135),s('type.num.num',X136))))) )),
  inference(forward_demodulation,[],[f20045,f1160])).
fof(f20045,plain,(
  ( ! [X136,X135] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X135),s('type.num.num',X136)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X135),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X136),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f19509,f1161])).
fof(f19509,plain,(
  ( ! [X136,X135] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X135),s('type.num.num',X136)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X135),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X136),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(superposition,[],[f1297,f1160])).
fof(f19913,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl304),
  inference(cnf_transformation,[],[f19913_D])).
fof(f19913_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl304),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl304])])).
fof(f20022,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f20021,f1160])).
fof(f20021,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(forward_demodulation,[],[f19483,f1161])).
fof(f19483,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(superposition,[],[f1152,f1160])).
fof(f20009,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl312),
  inference(cnf_transformation,[],[f20009_D])).
fof(f20009_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f20019,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f20018,f1160])).
fof(f20018,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f19481,f1161])).
fof(f19481,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f1151,f1160])).
fof(f20010,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl313),
  inference(cnf_transformation,[],[f20010_D])).
fof(f20010_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl313),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl313])])).
fof(f20016,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f20015,f1160])).
fof(f20015,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f19479,f1161])).
fof(f19479,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f1150,f1160])).
fof(f20013,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f20012,f1160])).
fof(f20012,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f19477,f1161])).
fof(f19477,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f1149,f1160])).
fof(f20008,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f20007,f1160])).
fof(f20007,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f19475,f1161])).
fof(f19475,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f1148,f1160])).
fof(f19947,plain,(
  ( ! [X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f19946,f1161])).
fof(f19946,plain,(
  ( ! [X29] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f19945,f1160])).
fof(f19945,plain,(
  ( ! [X29] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f19408,f1161])).
fof(f19408,plain,(
  ( ! [X29] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f1160,f1520])).
fof(f19943,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f19942,f1161])).
fof(f19942,plain,(
  ( ! [X28] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f19941,f1160])).
fof(f19941,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28)))) )),
  inference(forward_demodulation,[],[f19407,f1161])).
fof(f19407,plain,(
  ( ! [X28] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28)))) )),
  inference(superposition,[],[f1160,f1519])).
fof(f19915,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14))))) )),
  inference(forward_demodulation,[],[f19914,f1160])).
fof(f19914,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f19392,f1161])).
fof(f19392,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(superposition,[],[f1160,f1297])).
fof(f19911,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f19910,f1160])).
fof(f19910,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(forward_demodulation,[],[f19391,f1161])).
fof(f19391,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(superposition,[],[f1160,f1152])).
fof(f18885,plain,(
  $false | ($spl17 | $spl262)),
  inference(subsumption_resolution,[],[f18730,f1827])).
fof(f18730,plain,(
  p(s(bool,'F_0')) | $spl262),
  inference(trivial_inequality_removal,[],[f18296])).
fof(f18296,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | p(s(bool,'F_0')) | $spl262),
  inference(superposition,[],[f1510,f15099])).
fof(f1510,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f1074])).
fof(f18884,plain,(
  $false | ($spl17 | $spl262)),
  inference(subsumption_resolution,[],[f18731,f1827])).
fof(f18731,plain,(
  p(s(bool,'F_0')) | $spl262),
  inference(trivial_inequality_removal,[],[f18295])).
fof(f18295,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | p(s(bool,'F_0')) | $spl262),
  inference(superposition,[],[f1508,f15099])).
fof(f17696,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl300),
  inference(cnf_transformation,[],[f17696_D])).
fof(f17696_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f18099,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | ~p(s(bool,X237)) | s(bool,X237) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl191),
  inference(resolution,[],[f10895,f1535])).
fof(f17987,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X21) != s(bool,X23)) ) | $spl191),
  inference(resolution,[],[f10895,f1087])).
fof(f17985,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl191),
  inference(resolution,[],[f10895,f1086])).
fof(f17983,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl191),
  inference(resolution,[],[f10895,f1085])).
fof(f17982,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X6) != s(bool,X8)) ) | $spl191),
  inference(resolution,[],[f10895,f1083])).
fof(f17980,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl191),
  inference(resolution,[],[f10895,f1081])).
fof(f17931,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl302),
  inference(cnf_transformation,[],[f17931_D])).
fof(f17931_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl302])])).
fof(f17877,plain,(
  ( ! [X235,X234] : (p(s(bool,X234)) | p(s(bool,X235)) | s(bool,X235) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl190),
  inference(resolution,[],[f10894,f1535])).
fof(f10894,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl190),
  inference(cnf_transformation,[],[f10894_D])).
fof(f10894_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f17766,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl190),
  inference(resolution,[],[f10894,f1087])).
fof(f17763,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl190),
  inference(resolution,[],[f10894,f1086])).
fof(f17762,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl190),
  inference(resolution,[],[f10894,f1085])).
fof(f17761,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl190),
  inference(resolution,[],[f10894,f1083])).
fof(f17759,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl190),
  inference(resolution,[],[f10894,f1081])).
fof(f17645,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | ~p(s(bool,X237)) | s(bool,X237) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl191),
  inference(resolution,[],[f10895,f1535])).
fof(f17533,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X21) != s(bool,X23)) ) | $spl191),
  inference(resolution,[],[f10895,f1087])).
fof(f17531,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl191),
  inference(resolution,[],[f10895,f1086])).
fof(f17529,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl191),
  inference(resolution,[],[f10895,f1085])).
fof(f17528,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X6) != s(bool,X8)) ) | $spl191),
  inference(resolution,[],[f10895,f1083])).
fof(f17526,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl191),
  inference(resolution,[],[f10895,f1081])).
fof(f3831,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | p(s(bool,X1))) ) | $spl70),
  inference(cnf_transformation,[],[f3831_D])).
fof(f3831_D,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | p(s(bool,X1))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f17477,plain,(
  ( ! [X235,X234] : (p(s(bool,X234)) | p(s(bool,X235)) | s(bool,'T_0') != s(bool,X235)) ) | $spl22),
  inference(resolution,[],[f1837,f1535])).
fof(f17366,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,'T_0') != s(bool,X21) | s(bool,X22) != s(bool,X23)) ) | $spl22),
  inference(resolution,[],[f1837,f1087])).
fof(f17363,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,'T_0') != s(bool,X14)) ) | $spl22),
  inference(resolution,[],[f1837,f1086])).
fof(f17362,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,'T_0') != s(bool,X10)) ) | $spl22),
  inference(resolution,[],[f1837,f1085])).
fof(f17361,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,'T_0') != s(bool,X6) | s(bool,X7) != s(bool,X8)) ) | $spl22),
  inference(resolution,[],[f1837,f1083])).
fof(f17359,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,'T_0') != s(bool,X1)) ) | $spl22),
  inference(resolution,[],[f1837,f1081])).
fof(f17352,plain,(
  ( ! [X47,X48,X46] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X47))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X48))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X47))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X48))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46))))) ) | $spl298),
  inference(cnf_transformation,[],[f17352_D])).
fof(f17352_D,plain,(
  ( ! [X47,X48,X46] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X47))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X48))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X47))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X48))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46))))) ) <=> ~$spl298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl298])])).
fof(f1838,plain,(
  ~p(s(bool,'T_0')) | $spl23),
  inference(cnf_transformation,[],[f1838_D])).
fof(f1838_D,plain,(
  ~p(s(bool,'T_0')) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f17032,plain,(
  ( ! [X47,X48,X46] : (~p(s(bool,'T_0')) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X47))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X48))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X47))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X48))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46))))) )),
  inference(forward_demodulation,[],[f16338,f1453])).
fof(f16338,plain,(
  ( ! [X47,X48,X46] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X47))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X48))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X47))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X48))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46))))) )),
  inference(superposition,[],[f11118,f1352])).
fof(f11118,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f11117,f1484])).
fof(f11117,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f1471,f1156])).
fof(f1471,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f727])).
fof(f727,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X32,X33] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X32))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X33))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X32))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X33)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.DOUBLE_LT')).
fof(f17351,plain,(
  ( ! [X57,X56,X55] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X56))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X57))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X56))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X57))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl296),
  inference(cnf_transformation,[],[f17351_D])).
fof(f17351_D,plain,(
  ( ! [X57,X56,X55] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X56))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X57))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X56))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X57))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0'))))) ) <=> ~$spl296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl296])])).
fof(f17035,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,'T_0')) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52))),s('type.num.num',X53))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52))),s('type.num.num',X54))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52))),s('type.num.num',X53))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52))),s('type.num.num',X54))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f16340,f1453])).
fof(f16340,plain,(
  ( ! [X54,X52,X53] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52))),s('type.num.num',X53))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52))),s('type.num.num',X54))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52))),s('type.num.num',X53))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52))),s('type.num.num',X54))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X52))))) )),
  inference(superposition,[],[f11118,f1357])).
fof(f17036,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,'T_0')) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X56))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X57))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X56))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X57))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f16341,f1453])).
fof(f16341,plain,(
  ( ! [X57,X56,X55] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X56))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X57))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X56))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X57))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X55)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(superposition,[],[f11118,f1357])).
fof(f17047,plain,(
  ( ! [X37,X36] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)))))) ) | $spl294),
  inference(cnf_transformation,[],[f17047_D])).
fof(f17047_D,plain,(
  ( ! [X37,X36] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)))))) ) <=> ~$spl294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl294])])).
fof(f1837,plain,(
  p(s(bool,'T_0')) | $spl22),
  inference(cnf_transformation,[],[f1837_D])).
fof(f1837_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f17060,plain,(
  ( ! [X72,X71] : (p(s(bool,'T_0')) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X71))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X71))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72)))))) )),
  inference(forward_demodulation,[],[f17059,f1507])).
fof(f17059,plain,(
  ( ! [X72,X71] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X71))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X71))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72)))))) )),
  inference(forward_demodulation,[],[f17058,f1161])).
fof(f17058,plain,(
  ( ! [X72,X71] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X71))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X71))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f16370,f1161])).
fof(f16370,plain,(
  ( ! [X72,X71] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X71))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X72))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X71))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X72))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f11118,f1415])).
fof(f17064,plain,(
  ( ! [X74,X73] : (p(s(bool,'T_0')) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X74))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X74)))))) )),
  inference(forward_demodulation,[],[f17063,f1507])).
fof(f17063,plain,(
  ( ! [X74,X73] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X74))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X74)))))) )),
  inference(forward_demodulation,[],[f17062,f1161])).
fof(f17062,plain,(
  ( ! [X74,X73] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X74))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X74))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f16371,f1161])).
fof(f16371,plain,(
  ( ! [X74,X73] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X73))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X73))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f11118,f1417])).
fof(f17068,plain,(
  ( ! [X76,X75] : (p(s(bool,'T_0')) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X75))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X75))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76)))))) )),
  inference(forward_demodulation,[],[f17067,f1507])).
fof(f17067,plain,(
  ( ! [X76,X75] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X75))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X75))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76)))))) )),
  inference(forward_demodulation,[],[f17066,f1161])).
fof(f17066,plain,(
  ( ! [X76,X75] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X75))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X75))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f16372,f1161])).
fof(f16372,plain,(
  ( ! [X76,X75] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X75))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X76))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X75))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X76))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f11118,f1432])).
fof(f6954,plain,(
  ( ! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | s('type.num.num',X11) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) ) | $spl142),
  inference(cnf_transformation,[],[f6954_D])).
fof(f6954_D,plain,(
  ( ! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | s('type.num.num',X11) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f17318,plain,(
  ( ! [X14] : (~p(s(bool,'T_0')) | s('type.num.num',X14) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14))))) ) | $spl27),
  inference(forward_demodulation,[],[f17256,f1453])).
fof(f17256,plain,(
  ( ! [X14] : (s('type.num.num',X14) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14))))) ) | $spl27),
  inference(superposition,[],[f1857,f1352])).
fof(f6951,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl138),
  inference(cnf_transformation,[],[f6951_D])).
fof(f6951_D,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f17321,plain,(
  ( ! [X16] : (~p(s(bool,'T_0')) | s('type.num.num',X16) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl27),
  inference(forward_demodulation,[],[f17258,f1453])).
fof(f17258,plain,(
  ( ! [X16] : (s('type.num.num',X16) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X16))))) ) | $spl27),
  inference(superposition,[],[f1857,f1357])).
fof(f17322,plain,(
  ( ! [X17] : (~p(s(bool,'T_0')) | s('type.num.num',X17) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl27),
  inference(forward_demodulation,[],[f17259,f1453])).
fof(f17259,plain,(
  ( ! [X17] : (s('type.num.num',X17) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl27),
  inference(superposition,[],[f1857,f1357])).
fof(f17346,plain,(
  $false | ($spl23 | $spl27)),
  inference(subsumption_resolution,[],[f17345,f1838])).
fof(f17345,plain,(
  p(s(bool,'T_0')) | $spl27),
  inference(forward_demodulation,[],[f17344,f1507])).
fof(f17344,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl27),
  inference(forward_demodulation,[],[f17343,f1161])).
fof(f17343,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl27),
  inference(subsumption_resolution,[],[f17290,f1161])).
fof(f17290,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl27),
  inference(superposition,[],[f1857,f1432])).
fof(f17342,plain,(
  $false | ($spl23 | $spl27)),
  inference(subsumption_resolution,[],[f17341,f1838])).
fof(f17341,plain,(
  p(s(bool,'T_0')) | $spl27),
  inference(forward_demodulation,[],[f17340,f1507])).
fof(f17340,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl27),
  inference(forward_demodulation,[],[f17339,f1161])).
fof(f17339,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl27),
  inference(subsumption_resolution,[],[f17289,f1161])).
fof(f17289,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl27),
  inference(superposition,[],[f1857,f1417])).
fof(f17338,plain,(
  $false | ($spl23 | $spl27)),
  inference(subsumption_resolution,[],[f17337,f1838])).
fof(f17337,plain,(
  p(s(bool,'T_0')) | $spl27),
  inference(forward_demodulation,[],[f17336,f1507])).
fof(f17336,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl27),
  inference(forward_demodulation,[],[f17335,f1161])).
fof(f17335,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl27),
  inference(subsumption_resolution,[],[f17288,f1161])).
fof(f17288,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl27),
  inference(superposition,[],[f1857,f1415])).
fof(f17073,plain,(
  ( ! [X90,X88,X89] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X90),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X88))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X89))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X88))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X89)))))) )),
  inference(forward_demodulation,[],[f17072,f1161])).
fof(f17072,plain,(
  ( ! [X90,X88,X89] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X88))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X89))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X88))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X89))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X90),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f16376,f1161])).
fof(f16376,plain,(
  ( ! [X90,X88,X89] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X88))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X89))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X88))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X89))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X90),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f11118,f1520])).
fof(f13063,plain,(
  ( ! [X57] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X57)))) ) | $spl198),
  inference(cnf_transformation,[],[f13063_D])).
fof(f13063_D,plain,(
  ( ! [X57] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X57)))) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f17071,plain,(
  ( ! [X87,X85,X86] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X87))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X85))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X85))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)))))) )),
  inference(forward_demodulation,[],[f17070,f1161])).
fof(f17070,plain,(
  ( ! [X87,X85,X86] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X85))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X85))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X87)))) )),
  inference(forward_demodulation,[],[f16375,f1161])).
fof(f16375,plain,(
  ( ! [X87,X85,X86] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X85))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X86))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X85))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X86))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X87)))) )),
  inference(superposition,[],[f11118,f1519])).
fof(f17051,plain,(
  ( ! [X45,X43,X44,X42] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X42))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X43))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X42))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X43))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f16361,f1161])).
fof(f16361,plain,(
  ( ! [X45,X43,X44,X42] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X42))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X43))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X42))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X43))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(superposition,[],[f11118,f1297])).
fof(f17050,plain,(
  ( ! [X41,X40] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X40))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X41))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X40))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X41))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f16360,f1161])).
fof(f16360,plain,(
  ( ! [X41,X40] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X40))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X41))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X40))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X41))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f11118,f1152])).
fof(f1857,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl27),
  inference(cnf_transformation,[],[f1857_D])).
fof(f1857_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f17049,plain,(
  ( ! [X39,X38] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X38))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X39))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X38))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X39)))))) )),
  inference(forward_demodulation,[],[f17048,f1161])).
fof(f17048,plain,(
  ( ! [X39,X38] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X38))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X39))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X38))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X39)))))) )),
  inference(forward_demodulation,[],[f16359,f1156])).
fof(f16359,plain,(
  ( ! [X39,X38] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X38))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X39))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X38))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X39))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f11118,f1150])).
fof(f17046,plain,(
  ( ! [X37,X36] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)))))) )),
  inference(forward_demodulation,[],[f17045,f1161])).
fof(f17045,plain,(
  ( ! [X37,X36] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)))))) )),
  inference(forward_demodulation,[],[f16358,f1156])).
fof(f16358,plain,(
  ( ! [X37,X36] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f11118,f1148])).
fof(f16958,plain,(
  ( ! [X28] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28)))))) ) | $spl280),
  inference(cnf_transformation,[],[f16958_D])).
fof(f16958_D,plain,(
  ( ! [X28] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28)))))) ) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f16989,plain,(
  ( ! [X83,X81] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X83),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X81)))))) ) | $spl292),
  inference(cnf_transformation,[],[f16989_D])).
fof(f16989_D,plain,(
  ( ! [X83,X81] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X83),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X81)))))) ) <=> ~$spl292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl292])])).
fof(f16988,plain,(
  ( ! [X83,X81,X82] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X83),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X81))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X82))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X82)))))) )),
  inference(forward_demodulation,[],[f16987,f1161])).
fof(f16987,plain,(
  ( ! [X83,X81,X82] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X82))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X82))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X83),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X81)))))) )),
  inference(forward_demodulation,[],[f16986,f1160])).
fof(f16986,plain,(
  ( ! [X83,X81,X82] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X82))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X82))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X83),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X81)))))) )),
  inference(forward_demodulation,[],[f16285,f1161])).
fof(f16285,plain,(
  ( ! [X83,X81,X82] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X82))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X82))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X83),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X81)))))) )),
  inference(superposition,[],[f11118,f1520])).
fof(f16985,plain,(
  ( ! [X80,X78] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X78))),s('type.num.num',X80)))) ) | $spl290),
  inference(cnf_transformation,[],[f16985_D])).
fof(f16985_D,plain,(
  ( ! [X80,X78] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X78))),s('type.num.num',X80)))) ) <=> ~$spl290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl290])])).
fof(f16984,plain,(
  ( ! [X80,X78,X79] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X78))),s('type.num.num',X80))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X79))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X79)))))) )),
  inference(forward_demodulation,[],[f16983,f1161])).
fof(f16983,plain,(
  ( ! [X80,X78,X79] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X79))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X79))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X78))),s('type.num.num',X80)))) )),
  inference(forward_demodulation,[],[f16982,f1160])).
fof(f16982,plain,(
  ( ! [X80,X78,X79] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X79))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X79))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X78))),s('type.num.num',X80)))) )),
  inference(forward_demodulation,[],[f16284,f1161])).
fof(f16284,plain,(
  ( ! [X80,X78,X79] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X79))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X79))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X78))),s('type.num.num',X80)))) )),
  inference(superposition,[],[f11118,f1519])).
fof(f16975,plain,(
  ( ! [X64] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X64))))))) ) | $spl288),
  inference(cnf_transformation,[],[f16975_D])).
fof(f16975_D,plain,(
  ( ! [X64] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X64))))))) ) <=> ~$spl288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl288])])).
fof(f16981,plain,(
  ( ! [X68,X69] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X68)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X69))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X69)))))) )),
  inference(forward_demodulation,[],[f16980,f1161])).
fof(f16980,plain,(
  ( ! [X68,X69] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X69))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X69))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X68))))))) )),
  inference(forward_demodulation,[],[f16979,f1160])).
fof(f16979,plain,(
  ( ! [X68,X69] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X69))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X69))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X68))))))) )),
  inference(forward_demodulation,[],[f16281,f1161])).
fof(f16281,plain,(
  ( ! [X68,X69] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X69))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X69))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X68))))))) )),
  inference(superposition,[],[f11118,f1432])).
fof(f16978,plain,(
  ( ! [X66,X67] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X66)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X67))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X67)))))) )),
  inference(forward_demodulation,[],[f16977,f1161])).
fof(f16977,plain,(
  ( ! [X66,X67] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X67))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X67))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X66))))))) )),
  inference(forward_demodulation,[],[f16976,f1160])).
fof(f16976,plain,(
  ( ! [X66,X67] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X67))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X67))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X66))))))) )),
  inference(forward_demodulation,[],[f16280,f1161])).
fof(f16280,plain,(
  ( ! [X66,X67] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X67))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X67))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X66))))))) )),
  inference(superposition,[],[f11118,f1417])).
fof(f16974,plain,(
  ( ! [X64,X65] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X64)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X65))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X65)))))) )),
  inference(forward_demodulation,[],[f16973,f1161])).
fof(f16973,plain,(
  ( ! [X64,X65] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X65))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X65))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X64))))))) )),
  inference(forward_demodulation,[],[f16972,f1160])).
fof(f16972,plain,(
  ( ! [X64,X65] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X65))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X65))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X64))))))) )),
  inference(forward_demodulation,[],[f16279,f1161])).
fof(f16279,plain,(
  ( ! [X64,X65] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X65))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X65))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X64))))))) )),
  inference(superposition,[],[f11118,f1415])).
fof(f16967,plain,(
  ( ! [X35,X33,X36] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X35),s('type.num.num',X36)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X33))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X33))))))))) ) | $spl286),
  inference(cnf_transformation,[],[f16967_D])).
fof(f16967_D,plain,(
  ( ! [X35,X33,X36] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X35),s('type.num.num',X36)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X33))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X33))))))))) ) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f16966,plain,(
  ( ! [X35,X33,X36,X34] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X34))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X34))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X35),s('type.num.num',X36)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X33))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X33))))))))) )),
  inference(forward_demodulation,[],[f16965,f1160])).
fof(f16965,plain,(
  ( ! [X35,X33,X36,X34] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X34))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X34))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X35),s('type.num.num',X36)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X33))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X33))))))))) )),
  inference(forward_demodulation,[],[f16269,f1161])).
fof(f16269,plain,(
  ( ! [X35,X33,X36,X34] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X34))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X34))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X35),s('type.num.num',X36)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X33))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X33))))))))) )),
  inference(superposition,[],[f11118,f1297])).
fof(f16964,plain,(
  ( ! [X31] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X31))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X31))))))) ) | $spl284),
  inference(cnf_transformation,[],[f16964_D])).
fof(f16964_D,plain,(
  ( ! [X31] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X31))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X31))))))) ) <=> ~$spl284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl284])])).
fof(f16963,plain,(
  ( ! [X31,X32] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X32))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X32))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X31))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X31))))))) )),
  inference(forward_demodulation,[],[f16962,f1160])).
fof(f16962,plain,(
  ( ! [X31,X32] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X32))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X32))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X31))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X31))))))) )),
  inference(forward_demodulation,[],[f16268,f1161])).
fof(f16268,plain,(
  ( ! [X31,X32] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X32))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X32))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X31))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X31))))))) )),
  inference(superposition,[],[f11118,f1152])).
fof(f16959,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X27)))))) ) | $spl282),
  inference(cnf_transformation,[],[f16959_D])).
fof(f16959_D,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X27)))))) ) <=> ~$spl282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl282])])).
fof(f16961,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X29))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X30))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X30)))))) )),
  inference(forward_demodulation,[],[f16960,f1161])).
fof(f16960,plain,(
  ( ! [X30,X29] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X30))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X30))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X29)))))) )),
  inference(forward_demodulation,[],[f16267,f1160])).
fof(f16267,plain,(
  ( ! [X30,X29] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X30))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X30))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X29)))))) )),
  inference(superposition,[],[f11118,f1150])).
fof(f16957,plain,(
  ( ! [X28,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X27))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28)))))) )),
  inference(forward_demodulation,[],[f16956,f1161])).
fof(f16956,plain,(
  ( ! [X28,X27] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X27)))))) )),
  inference(forward_demodulation,[],[f16266,f1160])).
fof(f16266,plain,(
  ( ! [X28,X27] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X27)))))) )),
  inference(superposition,[],[f11118,f1148])).
fof(f3314,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | ~p(s(bool,X1))) ) | $spl68),
  inference(cnf_transformation,[],[f3314_D])).
fof(f3314_D,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | ~p(s(bool,X1))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f16078,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | ~p(s(bool,X237)) | s(bool,'T_0') != s(bool,X237)) ) | $spl23),
  inference(resolution,[],[f1838,f1535])).
fof(f15966,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,'T_0') != s(bool,X22) | s(bool,X21) != s(bool,X23)) ) | $spl23),
  inference(resolution,[],[f1838,f1087])).
fof(f15964,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,'T_0') != s(bool,X16)) ) | $spl23),
  inference(resolution,[],[f1838,f1086])).
fof(f15962,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,'T_0') != s(bool,X10)) ) | $spl23),
  inference(resolution,[],[f1838,f1085])).
fof(f15961,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,'T_0') != s(bool,X7) | s(bool,X6) != s(bool,X8)) ) | $spl23),
  inference(resolution,[],[f1838,f1083])).
fof(f15959,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,'T_0') != s(bool,X1)) ) | $spl23),
  inference(resolution,[],[f1838,f1081])).
fof(f15958,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f15957,f1161])).
fof(f15957,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f4316,f1156])).
fof(f4316,plain,(
  p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(forward_demodulation,[],[f4178,f1453])).
fof(f4178,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(superposition,[],[f1546,f1150])).
fof(f15956,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f15955,f1161])).
fof(f15955,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f4313,f1156])).
fof(f4313,plain,(
  p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(forward_demodulation,[],[f4177,f1453])).
fof(f4177,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(superposition,[],[f1546,f1148])).
fof(f2286,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f2285,f1161])).
fof(f2285,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f2284,f1156])).
fof(f2284,plain,(
  p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(forward_demodulation,[],[f2140,f1453])).
fof(f2140,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(superposition,[],[f1546,f1148])).
fof(f2289,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f2288,f1161])).
fof(f2288,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f2287,f1156])).
fof(f2287,plain,(
  p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(forward_demodulation,[],[f2141,f1453])).
fof(f2141,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(superposition,[],[f1546,f1150])).
fof(f2262,plain,(
  ( ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl58),
  inference(cnf_transformation,[],[f2262_D])).
fof(f2262_D,plain,(
  ( ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f5934,plain,(
  ( ! [X14] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14))))) ) | $spl2),
  inference(forward_demodulation,[],[f5791,f1453])).
fof(f5791,plain,(
  ( ! [X14] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14))))) ) | $spl2),
  inference(superposition,[],[f1546,f1352])).
fof(f2271,plain,(
  ( ! [X15] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl62),
  inference(cnf_transformation,[],[f2271_D])).
fof(f2271_D,plain,(
  ( ! [X15] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f5938,plain,(
  ( ! [X16] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(forward_demodulation,[],[f5793,f1453])).
fof(f5793,plain,(
  ( ! [X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X16))))) ) | $spl2),
  inference(superposition,[],[f1546,f1357])).
fof(f5940,plain,(
  ( ! [X17] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(forward_demodulation,[],[f5794,f1453])).
fof(f5794,plain,(
  ( ! [X17] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(superposition,[],[f1546,f1357])).
fof(f15954,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f15953,f1161])).
fof(f15953,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f5950,f1156])).
fof(f5950,plain,(
  p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(forward_demodulation,[],[f5811,f1453])).
fof(f5811,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(superposition,[],[f1546,f1148])).
fof(f15952,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f15951,f1161])).
fof(f15951,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f5951,f1156])).
fof(f5951,plain,(
  p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(forward_demodulation,[],[f5812,f1453])).
fof(f5812,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(superposition,[],[f1546,f1150])).
fof(f11604,plain,(
  ( ! [X14] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14))))) ) | $spl2),
  inference(forward_demodulation,[],[f11463,f1453])).
fof(f11463,plain,(
  ( ! [X14] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14))))) ) | $spl2),
  inference(superposition,[],[f1546,f1352])).
fof(f11608,plain,(
  ( ! [X16] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(forward_demodulation,[],[f11465,f1453])).
fof(f11465,plain,(
  ( ! [X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X16))))) ) | $spl2),
  inference(superposition,[],[f1546,f1357])).
fof(f11610,plain,(
  ( ! [X17] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(forward_demodulation,[],[f11466,f1453])).
fof(f11466,plain,(
  ( ! [X17] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(superposition,[],[f1546,f1357])).
fof(f15950,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f15949,f1161])).
fof(f15949,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f11620,f1156])).
fof(f11620,plain,(
  p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(forward_demodulation,[],[f11483,f1453])).
fof(f11483,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(superposition,[],[f1546,f1148])).
fof(f15948,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f15947,f1161])).
fof(f15947,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'T_0')) | $spl2),
  inference(forward_demodulation,[],[f11621,f1156])).
fof(f11621,plain,(
  p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(forward_demodulation,[],[f11484,f1453])).
fof(f11484,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(superposition,[],[f1546,f1150])).
fof(f15946,plain,(
  ( ! [X30,X31] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30))),s('type.num.num',X31))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X30))))) ) | $spl278),
  inference(cnf_transformation,[],[f15946_D])).
fof(f15946_D,plain,(
  ( ! [X30,X31] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30))),s('type.num.num',X31))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X30))))) ) <=> ~$spl278),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl278])])).
fof(f13020,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30))),s('type.num.num',X31))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X30))))) )),
  inference(forward_demodulation,[],[f11782,f1453])).
fof(f11782,plain,(
  ( ! [X30,X31] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30))),s('type.num.num',X31))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X30)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X30))))) )),
  inference(superposition,[],[f11115,f1352])).
fof(f15945,plain,(
  ( ! [X37,X36] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X37))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36))),s('type.num.num',X37))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl276),
  inference(cnf_transformation,[],[f15945_D])).
fof(f15945_D,plain,(
  ( ! [X37,X36] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X37))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36))),s('type.num.num',X37))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.ZERO_0'))))) ) <=> ~$spl276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl276])])).
fof(f13024,plain,(
  ( ! [X35,X34] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X35))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34))),s('type.num.num',X35))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f11784,f1453])).
fof(f11784,plain,(
  ( ! [X35,X34] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X35))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34))),s('type.num.num',X35))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X34))))) )),
  inference(superposition,[],[f11115,f1357])).
fof(f13026,plain,(
  ( ! [X37,X36] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X37))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36))),s('type.num.num',X37))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f11785,f1453])).
fof(f11785,plain,(
  ( ! [X37,X36] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X37))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36))),s('type.num.num',X37))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(superposition,[],[f11115,f1357])).
fof(f13038,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X24)))) ) | $spl192),
  inference(cnf_transformation,[],[f13038_D])).
fof(f13038_D,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X24)))) ) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f13054,plain,(
  ( ! [X47] : (p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num',X47)))) )),
  inference(forward_demodulation,[],[f13053,f1507])).
fof(f13053,plain,(
  ( ! [X47] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num',X47)))) )),
  inference(forward_demodulation,[],[f13052,f1161])).
fof(f13052,plain,(
  ( ! [X47] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num',X47))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f11814,f1161])).
fof(f11814,plain,(
  ( ! [X47] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X47))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num',X47))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f11115,f1415])).
fof(f13057,plain,(
  ( ! [X48] : (p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X48))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X48),s('type.num.num',X48)))) )),
  inference(forward_demodulation,[],[f13056,f1507])).
fof(f13056,plain,(
  ( ! [X48] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X48))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X48),s('type.num.num',X48)))) )),
  inference(forward_demodulation,[],[f13055,f1161])).
fof(f13055,plain,(
  ( ! [X48] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X48))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X48),s('type.num.num',X48))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f11815,f1161])).
fof(f11815,plain,(
  ( ! [X48] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X48))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X48),s('type.num.num',X48))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f11115,f1417])).
fof(f13060,plain,(
  ( ! [X49] : (p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X49))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X49)))) )),
  inference(forward_demodulation,[],[f13059,f1507])).
fof(f13059,plain,(
  ( ! [X49] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X49))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X49)))) )),
  inference(forward_demodulation,[],[f13058,f1161])).
fof(f13058,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X49))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X49))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f11816,f1161])).
fof(f11816,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X49))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X49))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f11115,f1432])).
fof(f15944,plain,(
  ( ! [X47,X48,X46] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X48))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X47),s('type.num.num',X48)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X48) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X48))))))) ) | $spl274),
  inference(cnf_transformation,[],[f15944_D])).
fof(f15944_D,plain,(
  ( ! [X47,X48,X46] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X48))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X47),s('type.num.num',X48)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X48) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X48))))))) ) <=> ~$spl274),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl274])])).
fof(f15052,plain,(
  ( ! [X47,X48,X46] : (~p(s(bool,'T_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X48))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X47),s('type.num.num',X48)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X48)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X48) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46))))) )),
  inference(forward_demodulation,[],[f14609,f1453])).
fof(f14609,plain,(
  ( ! [X47,X48,X46] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num',X48))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X47),s('type.num.num',X48)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X48)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X48) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46))))) )),
  inference(superposition,[],[f11121,f1352])).
fof(f15943,plain,(
  ( ! [X57,X56,X55] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X57))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X56),s('type.num.num',X57)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X57) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X57))))))) ) | $spl272),
  inference(cnf_transformation,[],[f15943_D])).
fof(f15943_D,plain,(
  ( ! [X57,X56,X55] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X57))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X56),s('type.num.num',X57)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X57) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X57))))))) ) <=> ~$spl272),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl272])])).
fof(f15056,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,'T_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52))),s('type.num.num',X54))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X53),s('type.num.num',X54)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X54)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X54) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f14611,f1453])).
fof(f14611,plain,(
  ( ! [X54,X52,X53] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52))),s('type.num.num',X54))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X53),s('type.num.num',X54)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X54)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X54) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X52))))) )),
  inference(superposition,[],[f11121,f1357])).
fof(f15058,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,'T_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X57))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X56),s('type.num.num',X57)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X57)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X57) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f14612,f1453])).
fof(f14612,plain,(
  ( ! [X57,X56,X55] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num',X57))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X56),s('type.num.num',X57)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X57)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X57) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X55)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(superposition,[],[f11121,f1357])).
fof(f15070,plain,(
  ( ! [X37,X36] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X36),s('type.num.num',X37)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X37) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X37))))))) ) | $spl258),
  inference(cnf_transformation,[],[f15070_D])).
fof(f15070_D,plain,(
  ( ! [X37,X36] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X36),s('type.num.num',X37)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X37) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X37))))))) ) <=> ~$spl258),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl258])])).
fof(f15083,plain,(
  ( ! [X72,X71] : (p(s(bool,'T_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X71),s('type.num.num',X72)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X72)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X72)) )),
  inference(forward_demodulation,[],[f15082,f1507])).
fof(f15082,plain,(
  ( ! [X72,X71] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X71),s('type.num.num',X72)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X72)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X72)) )),
  inference(forward_demodulation,[],[f15081,f1161])).
fof(f15081,plain,(
  ( ! [X72,X71] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X71),s('type.num.num',X72)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X72)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X72) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f14641,f1161])).
fof(f14641,plain,(
  ( ! [X72,X71] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X72))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X71),s('type.num.num',X72)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X72)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X72) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f11121,f1415])).
fof(f15086,plain,(
  ( ! [X74,X73] : (p(s(bool,'T_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X74))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X73),s('type.num.num',X74)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X74)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X74)) )),
  inference(forward_demodulation,[],[f15085,f1507])).
fof(f15085,plain,(
  ( ! [X74,X73] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X74))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X73),s('type.num.num',X74)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X74)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X74)) )),
  inference(forward_demodulation,[],[f15084,f1161])).
fof(f15084,plain,(
  ( ! [X74,X73] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X74))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X73),s('type.num.num',X74)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X74)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X74) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f14642,f1161])).
fof(f14642,plain,(
  ( ! [X74,X73] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X73),s('type.num.num',X74)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X74)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X74) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f11121,f1417])).
fof(f15089,plain,(
  ( ! [X76,X75] : (p(s(bool,'T_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X75),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X75),s('type.num.num',X76)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X75),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X76)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X76)) )),
  inference(forward_demodulation,[],[f15088,f1507])).
fof(f15088,plain,(
  ( ! [X76,X75] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X75),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X75),s('type.num.num',X76)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X75),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X76)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X76)) )),
  inference(forward_demodulation,[],[f15087,f1161])).
fof(f15087,plain,(
  ( ! [X76,X75] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X75),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X75),s('type.num.num',X76)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X75),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X76)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X76) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f14643,f1161])).
fof(f14643,plain,(
  ( ! [X76,X75] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X75),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X76))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X75),s('type.num.num',X76)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X75),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X76)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X76) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f11121,f1432])).
fof(f15699,plain,(
  ( ! [X352,X354,X353] : (sP13('T_0',X352) | p(s(bool,X353)) | p(s(bool,X354)) | s(bool,X352) != s(bool,X354)) ) | $spl22),
  inference(resolution,[],[f4685,f1535])).
fof(f4685,plain,(
  ( ! [X204] : (p(s(bool,X204)) | sP13('T_0',X204)) ) | $spl22),
  inference(resolution,[],[f1837,f1329])).
fof(f15588,plain,(
  ( ! [X30,X28,X31,X29] : (sP13('T_0',X28) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X29) | s(bool,X30) != s(bool,X31)) ) | $spl22),
  inference(resolution,[],[f4685,f1087])).
fof(f15585,plain,(
  ( ! [X19,X17,X18,X16] : (sP13('T_0',X16) | p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X16) != s(bool,X19)) ) | $spl22),
  inference(resolution,[],[f4685,f1086])).
fof(f15584,plain,(
  ( ! [X14,X12,X15,X13] : (sP13('T_0',X12) | p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl22),
  inference(resolution,[],[f4685,f1085])).
fof(f15583,plain,(
  ( ! [X10,X8,X11,X9] : (sP13('T_0',X8) | p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X9) | s(bool,X10) != s(bool,X11)) ) | $spl22),
  inference(resolution,[],[f4685,f1083])).
fof(f15581,plain,(
  ( ! [X2,X0,X3,X1] : (sP13('T_0',X0) | p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl22),
  inference(resolution,[],[f4685,f1081])).
fof(f15552,plain,(
  ( ! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X5))))) ) | $spl268),
  inference(cnf_transformation,[],[f15552_D])).
fof(f15552_D,plain,(
  ( ! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X5))))) ) <=> ~$spl268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl268])])).
fof(f15551,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X5))))) )),
  inference(forward_demodulation,[],[f15550,f1156])).
fof(f15550,plain,(
  ( ! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X5)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f15549,f1491])).
fof(f15549,plain,(
  ( ! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X5)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f14974,f1491])).
fof(f14974,plain,(
  ( ! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X5)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f11121,f1485])).
fof(f15542,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK32(X0,X2,X1))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl266),
  inference(cnf_transformation,[],[f15542_D])).
fof(f15542_D,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK32(X0,X2,X1))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) <=> ~$spl266),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl266])])).
fof(f15541,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK32(X0,X2,X1)))))))) )),
  inference(forward_demodulation,[],[f15540,f1156])).
fof(f15540,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK32(X0,X2,X1))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f15539,f1156])).
fof(f15539,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK32(X0,X2,X1))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f15538,f1156])).
fof(f15538,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK32(X0,X2,X1))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f15537,f1491])).
fof(f15537,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK32(X0,X2,X1))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f15536,f1156])).
fof(f15536,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK32(X0,X2,X1))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f14972,f1491])).
fof(f14972,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK32(X0,X2,X1))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f11121,f1178])).
fof(f1178,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK32(X2,X1,X0)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f897])).
fof(f897,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK32(X2,X1,X0)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X2,X1,X0)),s('type.list.list'(X0),sK32(X2,X1,X0)))))) & (! [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK31,sK32])],[f896])).
fof(f896,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | ? [X5,X6] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))) & (! [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))))),
  inference(rectify,[],[f895])).
fof(f895,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | ? [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))) & (! [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))))),
  inference(nnf_transformation,[],[f574])).
fof(f574,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) <=> ? [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f573])).
fof(f573,plain,(
  ! [X0] : ! [X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) <=> ? [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(rectify,[],[f129])).
fof(f129,axiom,(
  ! [X6] : ! [X7,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))))) <=> ? [X28,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X28),s('type.list.list'(X6),X8)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.list.LENGTH_EQ_NUM_compute|split|1')).
fof(f15488,plain,(
  ( ! [X315] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f15487,f1156])).
fof(f15487,plain,(
  ( ! [X315] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f15486,f1486])).
fof(f1486,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f741])).
fof(f741,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f102])).
fof(f102,axiom,(
  ! [X16] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_distrib|split|11')).
fof(f15486,plain,(
  ( ! [X315,X314] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X314),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f15485,f1491])).
fof(f15485,plain,(
  ( ! [X315,X314] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X314),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f15484,f1486])).
fof(f15484,plain,(
  ( ! [X315,X314] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X314),s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X314),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f15483,f11115])).
fof(f15483,plain,(
  ( ! [X315,X314] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X314),s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X314),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f14953,f1156])).
fof(f14953,plain,(
  ( ! [X315,X314] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X315),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X314),s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X314),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f11121,f1486])).
fof(f15482,plain,(
  ( ! [X313] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f15481,f1156])).
fof(f15481,plain,(
  ( ! [X313] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f15480,f1486])).
fof(f15480,plain,(
  ( ! [X313,X312] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X312),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f15479,f1491])).
fof(f15479,plain,(
  ( ! [X313,X312] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X312),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f15478,f1486])).
fof(f15478,plain,(
  ( ! [X313,X312] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X312),s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X312),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f15477,f11115])).
fof(f15477,plain,(
  ( ! [X313,X312] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X312),s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X312),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f14952,f1156])).
fof(f14952,plain,(
  ( ! [X313,X312] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X313),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X312),s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X312),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f11121,f1489])).
fof(f15476,plain,(
  ( ! [X311] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f15475,f1156])).
fof(f15475,plain,(
  ( ! [X311] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f15474,f1480])).
fof(f15474,plain,(
  ( ! [X310,X311] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X310)))) )),
  inference(forward_demodulation,[],[f15473,f1491])).
fof(f15473,plain,(
  ( ! [X310,X311] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X310)))) )),
  inference(forward_demodulation,[],[f15472,f1480])).
fof(f15472,plain,(
  ( ! [X310,X311] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X310)))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X310)))) )),
  inference(forward_demodulation,[],[f15471,f11115])).
fof(f15471,plain,(
  ( ! [X310,X311] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X310)))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X310)))) )),
  inference(forward_demodulation,[],[f14951,f1156])).
fof(f14951,plain,(
  ( ! [X310,X311] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X311),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X310)))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X310)))) )),
  inference(superposition,[],[f11121,f1480])).
fof(f15396,plain,(
  ( ! [X200] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f15395,f1160])).
fof(f15395,plain,(
  ( ! [X200] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f15394,f1155])).
fof(f15394,plain,(
  ( ! [X200] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X200),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f15393,f1160])).
fof(f15393,plain,(
  ( ! [X200] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X200),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f15392,f1512])).
fof(f15392,plain,(
  ( ! [X200] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X200),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f15391,f1524])).
fof(f15391,plain,(
  ( ! [X200] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f15390,f11115])).
fof(f15390,plain,(
  ( ! [X200] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f14907,f11115])).
fof(f14907,plain,(
  ( ! [X200] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f11121,f1160])).
fof(f15359,plain,(
  ( ! [X114] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f15358,f1156])).
fof(f15358,plain,(
  ( ! [X114] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f15357,f1491])).
fof(f15357,plain,(
  ( ! [X114] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f15356,f11115])).
fof(f15356,plain,(
  ( ! [X114] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f15355,f1160])).
fof(f15355,plain,(
  ( ! [X114] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X114),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f14884,f1161])).
fof(f14884,plain,(
  ( ! [X114] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X114),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f11121,f1158])).
fof(f1158,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f59])).
fof(f59,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.ONE')).
fof(f15353,plain,(
  ( ! [X113] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f15352,f1156])).
fof(f15352,plain,(
  ( ! [X113] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f15351,f1491])).
fof(f15351,plain,(
  ( ! [X113] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f15350,f11115])).
fof(f15350,plain,(
  ( ! [X113] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f15349,f1160])).
fof(f15349,plain,(
  ( ! [X113] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f14883,f1161])).
fof(f14883,plain,(
  ( ! [X113] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X113),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f11121,f1159])).
fof(f1159,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f115])).
fof(f115,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.numeral.numeral_distrib|split|13')).
fof(f15096,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f15095,f1156])).
fof(f15095,plain,(
  ( ! [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f15094,f1491])).
fof(f15094,plain,(
  ( ! [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f14651,f1156])).
fof(f14651,plain,(
  ( ! [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f11121,f1491])).
fof(f15093,plain,(
  ( ! [X90,X88,X89] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X90),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X88),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X89))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X88),s('type.num.num',X89)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X88),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X89)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X89)) )),
  inference(forward_demodulation,[],[f15092,f1161])).
fof(f15092,plain,(
  ( ! [X90,X88,X89] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X88),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X89))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X88),s('type.num.num',X89)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X88),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X89)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X89) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X90),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f14647,f1161])).
fof(f14647,plain,(
  ( ! [X90,X88,X89] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X88),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X89))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X88),s('type.num.num',X89)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X88),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X89)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X89) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X90),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f11121,f1520])).
fof(f15091,plain,(
  ( ! [X87,X85,X86] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X87))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X85),s('type.num.num',X86)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X86)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X86)) )),
  inference(forward_demodulation,[],[f15090,f1161])).
fof(f15090,plain,(
  ( ! [X87,X85,X86] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X85),s('type.num.num',X86)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X86)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X86) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X87)))) )),
  inference(forward_demodulation,[],[f14646,f1161])).
fof(f14646,plain,(
  ( ! [X87,X85,X86] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X86))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X85),s('type.num.num',X86)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X86)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X86) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X87)))) )),
  inference(superposition,[],[f11121,f1519])).
fof(f15074,plain,(
  ( ! [X45,X43,X44,X42] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X43))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X43)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X42),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X43)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f14632,f1161])).
fof(f14632,plain,(
  ( ! [X45,X43,X44,X42] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X43))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X43)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X42),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X43)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X43) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(superposition,[],[f11121,f1297])).
fof(f15073,plain,(
  ( ! [X41,X40] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X41))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num',X41)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X40),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X41)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f14631,f1161])).
fof(f14631,plain,(
  ( ! [X41,X40] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X41))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num',X41)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X40),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X41)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X41) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f11121,f1152])).
fof(f15072,plain,(
  ( ! [X39,X38] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X39))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X38),s('type.num.num',X39)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X39)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X39)) )),
  inference(forward_demodulation,[],[f15071,f1161])).
fof(f15071,plain,(
  ( ! [X39,X38] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X39))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X38),s('type.num.num',X39)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X39)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X39)) )),
  inference(forward_demodulation,[],[f14630,f1156])).
fof(f14630,plain,(
  ( ! [X39,X38] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X39))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X38),s('type.num.num',X39)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X39)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X39) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f11121,f1150])).
fof(f15069,plain,(
  ( ! [X37,X36] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X36),s('type.num.num',X37)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X37)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X37)) )),
  inference(forward_demodulation,[],[f15068,f1161])).
fof(f15068,plain,(
  ( ! [X37,X36] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X36),s('type.num.num',X37)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X37)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X37)) )),
  inference(forward_demodulation,[],[f14629,f1156])).
fof(f14629,plain,(
  ( ! [X37,X36] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X36),s('type.num.num',X37)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X37)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X37) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f11121,f1148])).
fof(f15030,plain,(
  ( ! [X23,X21,X20] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X21)))))) | s(bool,X23) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X21))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X20),s('type.num.num',X21))))) | p(s(bool,X23)) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X21)) ) | $spl256),
  inference(cnf_transformation,[],[f15030_D])).
fof(f15030_D,plain,(
  ( ! [X23,X21,X20] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X21)))))) | s(bool,X23) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X21))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X20),s('type.num.num',X21))))) | p(s(bool,X23)) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X21)) ) <=> ~$spl256),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl256])])).
fof(f14587,plain,(
  ( ! [X492,X490,X493,X491] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X490),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X491)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X491) | p(s(bool,X492)) | p(s(bool,X493)) | s(bool,X493) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X490),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X491))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X490),s('type.num.num',X491)))))) )),
  inference(resolution,[],[f11121,f1535])).
fof(f14476,plain,(
  ( ! [X59,X57,X58,X56,X55] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X56)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X56) | p(s(bool,X57)) | ~p(s(bool,X58)) | s(bool,X57) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X56))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X55),s('type.num.num',X56))))) | s(bool,X58) != s(bool,X59)) )),
  inference(resolution,[],[f11121,f1087])).
fof(f14473,plain,(
  ( ! [X43,X41,X44,X42,X40] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X40),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X41)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X41) | p(s(bool,X42)) | ~p(s(bool,X43)) | p(s(bool,X44)) | s(bool,X44) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X41))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num',X41)))))) )),
  inference(resolution,[],[f11121,f1086])).
fof(f14472,plain,(
  ( ! [X39,X37,X35,X38,X36] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X36)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X36) | p(s(bool,X37)) | p(s(bool,X38)) | s(bool,X37) != s(bool,X39) | s(bool,X38) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X36))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X35),s('type.num.num',X36)))))) )),
  inference(resolution,[],[f11121,f1085])).
fof(f14471,plain,(
  ( ! [X30,X33,X31,X34,X32] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X31)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X31) | p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X32) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X31))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X30),s('type.num.num',X31))))) | s(bool,X33) != s(bool,X34)) )),
  inference(resolution,[],[f11121,f1083])).
fof(f14469,plain,(
  ( ! [X24,X23,X21,X22,X20] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X21)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X21) | p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X22) != s(bool,X24) | s(bool,X23) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X21))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X20),s('type.num.num',X21)))))) )),
  inference(resolution,[],[f11121,f1081])).
fof(f14442,plain,(
  $false | ($spl17 | $spl132)),
  inference(subsumption_resolution,[],[f6967,f1827])).
fof(f6967,plain,(
  p(s(bool,'F_0')) | $spl132),
  inference(duplicate_literal_removal,[],[f6964])).
fof(f6964,plain,(
  p(s(bool,'F_0')) | p(s(bool,'F_0')) | $spl132),
  inference(resolution,[],[f6568,f1327])).
fof(f14441,plain,(
  ( ! [X111,X112,X110] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK42(X111,X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK43(X111,X110)),s('type.list.list'(X110),'const.list.NIL_0')))))) ) | $spl254),
  inference(cnf_transformation,[],[f14441_D])).
fof(f14441_D,plain,(
  ( ! [X111,X112,X110] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK42(X111,X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK43(X111,X110)),s('type.list.list'(X110),'const.list.NIL_0')))))) ) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f14440,plain,(
  ( ! [X111,X112,X110] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK42(X111,X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK43(X111,X110)),s('type.list.list'(X110),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14439,f1161])).
fof(f14439,plain,(
  ( ! [X111,X112,X110] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK42(X111,X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK43(X111,X110)),s('type.list.list'(X110),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111)))))) )),
  inference(forward_demodulation,[],[f14312,f1161])).
fof(f14312,plain,(
  ( ! [X111,X112,X110] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK42(X111,X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK43(X111,X110)),s('type.list.list'(X110),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111)))))) )),
  inference(superposition,[],[f11125,f1520])).
fof(f14438,plain,(
  ( ! [X109,X107,X108] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num',X109))) | s('type.list.list'(X107),X108) = s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK42(X108,X107)),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK43(X108,X107)),s('type.list.list'(X107),'const.list.NIL_0')))))) ) | $spl252),
  inference(cnf_transformation,[],[f14438_D])).
fof(f14438_D,plain,(
  ( ! [X109,X107,X108] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num',X109))) | s('type.list.list'(X107),X108) = s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK42(X108,X107)),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK43(X108,X107)),s('type.list.list'(X107),'const.list.NIL_0')))))) ) <=> ~$spl252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl252])])).
fof(f14437,plain,(
  ( ! [X109,X107,X108] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num',X109))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X107),X108) = s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK42(X108,X107)),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK43(X108,X107)),s('type.list.list'(X107),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14436,f1161])).
fof(f14436,plain,(
  ( ! [X109,X107,X108] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X107),X108) = s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK42(X108,X107)),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK43(X108,X107)),s('type.list.list'(X107),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num',X109)))) )),
  inference(forward_demodulation,[],[f14311,f1161])).
fof(f14311,plain,(
  ( ! [X109,X107,X108] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X107),X108) = s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK42(X108,X107)),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK43(X108,X107)),s('type.list.list'(X107),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num',X109)))) )),
  inference(superposition,[],[f11125,f1519])).
fof(f14431,plain,(
  ( ! [X94,X93] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94)))))) | s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK42(X94,X93)),s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK43(X94,X93)),s('type.list.list'(X93),'const.list.NIL_0')))))) ) | $spl250),
  inference(cnf_transformation,[],[f14431_D])).
fof(f14431_D,plain,(
  ( ! [X94,X93] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94)))))) | s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK42(X94,X93)),s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK43(X94,X93)),s('type.list.list'(X93),'const.list.NIL_0')))))) ) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f14435,plain,(
  ( ! [X97,X98] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X98)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X97),X98) = s('type.list.list'(X97),'const.list.CONS_2'(s(X97,sK42(X98,X97)),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,sK43(X98,X97)),s('type.list.list'(X97),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14434,f1161])).
fof(f14434,plain,(
  ( ! [X97,X98] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X97),X98) = s('type.list.list'(X97),'const.list.CONS_2'(s(X97,sK42(X98,X97)),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,sK43(X98,X97)),s('type.list.list'(X97),'const.list.NIL_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X98))))))) )),
  inference(forward_demodulation,[],[f14308,f1161])).
fof(f14308,plain,(
  ( ! [X97,X98] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X97),X98) = s('type.list.list'(X97),'const.list.CONS_2'(s(X97,sK42(X98,X97)),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,sK43(X98,X97)),s('type.list.list'(X97),'const.list.NIL_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X98))))))) )),
  inference(superposition,[],[f11125,f1432])).
fof(f14433,plain,(
  ( ! [X95,X96] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X95),X96) = s('type.list.list'(X95),'const.list.CONS_2'(s(X95,sK42(X96,X95)),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,sK43(X96,X95)),s('type.list.list'(X95),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14432,f1161])).
fof(f14432,plain,(
  ( ! [X95,X96] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X95),X96) = s('type.list.list'(X95),'const.list.CONS_2'(s(X95,sK42(X96,X95)),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,sK43(X96,X95)),s('type.list.list'(X95),'const.list.NIL_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96))))))) )),
  inference(forward_demodulation,[],[f14307,f1161])).
fof(f14307,plain,(
  ( ! [X95,X96] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X95),X96) = s('type.list.list'(X95),'const.list.CONS_2'(s(X95,sK42(X96,X95)),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,sK43(X96,X95)),s('type.list.list'(X95),'const.list.NIL_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96))))))) )),
  inference(superposition,[],[f11125,f1417])).
fof(f14430,plain,(
  ( ! [X94,X93] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK42(X94,X93)),s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK43(X94,X93)),s('type.list.list'(X93),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14429,f1161])).
fof(f14429,plain,(
  ( ! [X94,X93] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK42(X94,X93)),s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK43(X94,X93)),s('type.list.list'(X93),'const.list.NIL_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94))))))) )),
  inference(forward_demodulation,[],[f14306,f1161])).
fof(f14306,plain,(
  ( ! [X94,X93] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK42(X94,X93)),s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK43(X94,X93)),s('type.list.list'(X93),'const.list.NIL_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94))))))) )),
  inference(superposition,[],[f11125,f1415])).
fof(f14424,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.list.list'(X62),X63) = s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK42(X63,X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK43(X63,X62)),s('type.list.list'(X62),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X64),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num',X65))))) ) | $spl248),
  inference(cnf_transformation,[],[f14424_D])).
fof(f14424_D,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.list.list'(X62),X63) = s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK42(X63,X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK43(X63,X62)),s('type.list.list'(X62),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X64),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num',X65))))) ) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f14423,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X62),X63) = s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK42(X63,X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK43(X63,X62)),s('type.list.list'(X62),'const.list.NIL_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num',X65)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X64),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))))))))) )),
  inference(forward_demodulation,[],[f14296,f1161])).
fof(f14296,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X62),X63) = s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK42(X63,X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK43(X63,X62)),s('type.list.list'(X62),'const.list.NIL_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num',X65)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X64),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))))))))) )),
  inference(superposition,[],[f11125,f1297])).
fof(f14422,plain,(
  ( ! [X61,X60] : (s('type.list.list'(X60),X61) = s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK42(X61,X60)),s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK43(X61,X60)),s('type.list.list'(X60),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(X60),X61))))))) ) | $spl246),
  inference(cnf_transformation,[],[f14422_D])).
fof(f14422_D,plain,(
  ( ! [X61,X60] : (s('type.list.list'(X60),X61) = s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK42(X61,X60)),s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK43(X61,X60)),s('type.list.list'(X60),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(X60),X61))))))) ) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f14421,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X60),X61) = s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK42(X61,X60)),s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK43(X61,X60)),s('type.list.list'(X60),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(X60),X61))))))) )),
  inference(forward_demodulation,[],[f14295,f1161])).
fof(f14295,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X60),X61) = s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK42(X61,X60)),s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK43(X61,X60)),s('type.list.list'(X60),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(X60),X61))))))) )),
  inference(superposition,[],[f11125,f1152])).
fof(f14330,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK42(X17,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK43(X17,X16)),s('type.list.list'(X16),'const.list.NIL_0')))))) ) | $spl242),
  inference(cnf_transformation,[],[f14330_D])).
fof(f14330_D,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK42(X17,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK43(X17,X16)),s('type.list.list'(X16),'const.list.NIL_0')))))) ) <=> ~$spl242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl242])])).
fof(f14420,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X59))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X58),X59) = s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK42(X59,X58)),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK43(X59,X58)),s('type.list.list'(X58),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14419,f1161])).
fof(f14419,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X59))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X58),X59) = s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK42(X59,X58)),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK43(X59,X58)),s('type.list.list'(X58),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14294,f1156])).
fof(f14294,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X58),X59) = s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK42(X59,X58)),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK43(X59,X58)),s('type.list.list'(X58),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X59)))))) )),
  inference(superposition,[],[f11125,f1150])).
fof(f14418,plain,(
  ( ! [X57,X56] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X56),X57) = s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK42(X57,X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK43(X57,X56)),s('type.list.list'(X56),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14417,f1161])).
fof(f14417,plain,(
  ( ! [X57,X56] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X56),X57) = s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK42(X57,X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK43(X57,X56)),s('type.list.list'(X56),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14293,f1156])).
fof(f14293,plain,(
  ( ! [X57,X56] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X56),X57) = s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK42(X57,X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK43(X57,X56)),s('type.list.list'(X56),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57)))))) )),
  inference(superposition,[],[f11125,f1148])).
fof(f14406,plain,(
  ( ! [X15,X16] : (s('type.list.list'(X15),X16) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK42(X16,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK43(X16,X15)),s('type.list.list'(X15),'const.list.NIL_0'))))) | s('type.list.list'(X15),'const.list.NIL_0') != s('type.list.list'(X15),X16)) ) | $spl244),
  inference(cnf_transformation,[],[f14406_D])).
fof(f14406_D,plain,(
  ( ! [X15,X16] : (s('type.list.list'(X15),X16) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK42(X16,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK43(X16,X15)),s('type.list.list'(X15),'const.list.NIL_0'))))) | s('type.list.list'(X15),'const.list.NIL_0') != s('type.list.list'(X15),X16)) ) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f14407,plain,(
  ( ! [X17,X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X17),X18) = s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK42(X18,X17)),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK43(X18,X17)),s('type.list.list'(X17),'const.list.NIL_0'))))) | s('type.list.list'(X17),'const.list.NIL_0') != s('type.list.list'(X17),X18)) )),
  inference(forward_demodulation,[],[f14279,f1161])).
fof(f14279,plain,(
  ( ! [X17,X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X17),X18) = s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK42(X18,X17)),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK43(X18,X17)),s('type.list.list'(X17),'const.list.NIL_0'))))) | s('type.list.list'(X17),'const.list.NIL_0') != s('type.list.list'(X17),X18)) )),
  inference(superposition,[],[f11125,f1468])).
fof(f1468,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f1064])).
fof(f14405,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X15),X16) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK42(X16,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK43(X16,X15)),s('type.list.list'(X15),'const.list.NIL_0'))))) | s('type.list.list'(X15),'const.list.NIL_0') != s('type.list.list'(X15),X16)) )),
  inference(forward_demodulation,[],[f14278,f1161])).
fof(f14278,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X15),X16) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK42(X16,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK43(X16,X15)),s('type.list.list'(X15),'const.list.NIL_0'))))) | s('type.list.list'(X15),'const.list.NIL_0') != s('type.list.list'(X15),X16)) )),
  inference(superposition,[],[f11125,f1466])).
fof(f1466,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f1063])).
fof(f14333,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X18),X19) = s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK42(X19,X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK43(X19,X18)),s('type.list.list'(X18),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14332,f1161])).
fof(f14332,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X18),X19) = s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK42(X19,X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK43(X19,X18)),s('type.list.list'(X18),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19)))) )),
  inference(forward_demodulation,[],[f14331,f1161])).
fof(f14331,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X18),X19) = s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK42(X19,X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK43(X19,X18)),s('type.list.list'(X18),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19)))) )),
  inference(forward_demodulation,[],[f14238,f1469])).
fof(f14238,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),'const.list.NIL_0'))) | s('type.list.list'(X18),X19) = s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK42(X19,X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK43(X19,X18)),s('type.list.list'(X18),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19)))) )),
  inference(superposition,[],[f11125,f1467])).
fof(f14329,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK42(X17,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK43(X17,X16)),s('type.list.list'(X16),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14328,f1161])).
fof(f14328,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK42(X17,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK43(X17,X16)),s('type.list.list'(X16),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17)))) )),
  inference(forward_demodulation,[],[f14327,f1161])).
fof(f14327,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK42(X17,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK43(X17,X16)),s('type.list.list'(X16),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17)))) )),
  inference(forward_demodulation,[],[f14237,f1469])).
fof(f14237,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.NIL_0'))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK42(X17,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK43(X17,X16)),s('type.list.list'(X16),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17)))) )),
  inference(superposition,[],[f11125,f1465])).
fof(f14326,plain,(
  ( ! [X14,X15] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15)))))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK42(X15,X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK43(X15,X14)),s('type.list.list'(X14),'const.list.NIL_0')))))) ) | $spl240),
  inference(cnf_transformation,[],[f14326_D])).
fof(f14326_D,plain,(
  ( ! [X14,X15] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15)))))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK42(X15,X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK43(X15,X14)),s('type.list.list'(X14),'const.list.NIL_0')))))) ) <=> ~$spl240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl240])])).
fof(f14325,plain,(
  ( ! [X14,X15] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK42(X15,X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK43(X15,X14)),s('type.list.list'(X14),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14324,f1161])).
fof(f14324,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK42(X15,X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK43(X15,X14)),s('type.list.list'(X14),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))))))) )),
  inference(forward_demodulation,[],[f14323,f1161])).
fof(f14323,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK42(X15,X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK43(X15,X14)),s('type.list.list'(X14),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))))))) )),
  inference(forward_demodulation,[],[f14236,f1469])).
fof(f14236,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),'const.list.NIL_0'))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK42(X15,X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK43(X15,X14)),s('type.list.list'(X14),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))))))) )),
  inference(superposition,[],[f11125,f1463])).
fof(f14322,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK42(X13,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK43(X13,X12)),s('type.list.list'(X12),'const.list.NIL_0')))))) ) | $spl238),
  inference(cnf_transformation,[],[f14322_D])).
fof(f14322_D,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK42(X13,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK43(X13,X12)),s('type.list.list'(X12),'const.list.NIL_0')))))) ) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f14321,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK42(X13,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK43(X13,X12)),s('type.list.list'(X12),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14320,f1156])).
fof(f14320,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK42(X13,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK43(X13,X12)),s('type.list.list'(X12),'const.list.NIL_0'))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f14319,f1161])).
fof(f14319,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK42(X13,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK43(X13,X12)),s('type.list.list'(X12),'const.list.NIL_0'))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f14235,f1469])).
fof(f14235,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.NIL_0'))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK42(X13,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK43(X13,X12)),s('type.list.list'(X12),'const.list.NIL_0'))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(superposition,[],[f11125,f1461])).
fof(f14318,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X10),X11) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK42(X11,X10)),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK43(X11,X10)),s('type.list.list'(X10),'const.list.NIL_0')))))) ) | $spl236),
  inference(cnf_transformation,[],[f14318_D])).
fof(f14318_D,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X10),X11) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK42(X11,X10)),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK43(X11,X10)),s('type.list.list'(X10),'const.list.NIL_0')))))) ) <=> ~$spl236),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl236])])).
fof(f14317,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X10),X11) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK42(X11,X10)),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK43(X11,X10)),s('type.list.list'(X10),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14316,f1161])).
fof(f14316,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X10),X11) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK42(X11,X10)),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK43(X11,X10)),s('type.list.list'(X10),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f14315,f1161])).
fof(f14315,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X10),X11) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK42(X11,X10)),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK43(X11,X10)),s('type.list.list'(X10),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f14234,f1469])).
fof(f14234,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),'const.list.NIL_0'))) | s('type.list.list'(X10),X11) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK42(X11,X10)),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK43(X11,X10)),s('type.list.list'(X10),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f11125,f1448])).
fof(f14231,plain,(
  ( ! [X111,X112,X110] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK44(X111,X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK45(X111,X110)),s('type.list.list'(X110),'const.list.NIL_0')))))) ) | $spl234),
  inference(cnf_transformation,[],[f14231_D])).
fof(f14231_D,plain,(
  ( ! [X111,X112,X110] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK44(X111,X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK45(X111,X110)),s('type.list.list'(X110),'const.list.NIL_0')))))) ) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f14230,plain,(
  ( ! [X111,X112,X110] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK44(X111,X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK45(X111,X110)),s('type.list.list'(X110),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14229,f1161])).
fof(f14229,plain,(
  ( ! [X111,X112,X110] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK44(X111,X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK45(X111,X110)),s('type.list.list'(X110),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111)))))) )),
  inference(forward_demodulation,[],[f14102,f1161])).
fof(f14102,plain,(
  ( ! [X111,X112,X110] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK44(X111,X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK45(X111,X110)),s('type.list.list'(X110),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111)))))) )),
  inference(superposition,[],[f11123,f1520])).
fof(f14228,plain,(
  ( ! [X109,X107,X108] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num',X109))) | s('type.list.list'(X107),X108) = s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK44(X108,X107)),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK45(X108,X107)),s('type.list.list'(X107),'const.list.NIL_0')))))) ) | $spl232),
  inference(cnf_transformation,[],[f14228_D])).
fof(f14228_D,plain,(
  ( ! [X109,X107,X108] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num',X109))) | s('type.list.list'(X107),X108) = s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK44(X108,X107)),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK45(X108,X107)),s('type.list.list'(X107),'const.list.NIL_0')))))) ) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f14227,plain,(
  ( ! [X109,X107,X108] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num',X109))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X107),X108) = s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK44(X108,X107)),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK45(X108,X107)),s('type.list.list'(X107),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14226,f1161])).
fof(f14226,plain,(
  ( ! [X109,X107,X108] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X107),X108) = s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK44(X108,X107)),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK45(X108,X107)),s('type.list.list'(X107),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num',X109)))) )),
  inference(forward_demodulation,[],[f14101,f1161])).
fof(f14101,plain,(
  ( ! [X109,X107,X108] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X107),X108) = s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK44(X108,X107)),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK45(X108,X107)),s('type.list.list'(X107),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num',X109)))) )),
  inference(superposition,[],[f11123,f1519])).
fof(f14221,plain,(
  ( ! [X94,X93] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94)))))) | s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK44(X94,X93)),s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK45(X94,X93)),s('type.list.list'(X93),'const.list.NIL_0')))))) ) | $spl230),
  inference(cnf_transformation,[],[f14221_D])).
fof(f14221_D,plain,(
  ( ! [X94,X93] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94)))))) | s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK44(X94,X93)),s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK45(X94,X93)),s('type.list.list'(X93),'const.list.NIL_0')))))) ) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f14225,plain,(
  ( ! [X97,X98] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X98)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X97),X98) = s('type.list.list'(X97),'const.list.CONS_2'(s(X97,sK44(X98,X97)),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,sK45(X98,X97)),s('type.list.list'(X97),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14224,f1161])).
fof(f14224,plain,(
  ( ! [X97,X98] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X97),X98) = s('type.list.list'(X97),'const.list.CONS_2'(s(X97,sK44(X98,X97)),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,sK45(X98,X97)),s('type.list.list'(X97),'const.list.NIL_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X98))))))) )),
  inference(forward_demodulation,[],[f14098,f1161])).
fof(f14098,plain,(
  ( ! [X97,X98] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X97),X98) = s('type.list.list'(X97),'const.list.CONS_2'(s(X97,sK44(X98,X97)),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,sK45(X98,X97)),s('type.list.list'(X97),'const.list.NIL_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X98))))))) )),
  inference(superposition,[],[f11123,f1432])).
fof(f14223,plain,(
  ( ! [X95,X96] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X95),X96) = s('type.list.list'(X95),'const.list.CONS_2'(s(X95,sK44(X96,X95)),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,sK45(X96,X95)),s('type.list.list'(X95),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14222,f1161])).
fof(f14222,plain,(
  ( ! [X95,X96] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X95),X96) = s('type.list.list'(X95),'const.list.CONS_2'(s(X95,sK44(X96,X95)),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,sK45(X96,X95)),s('type.list.list'(X95),'const.list.NIL_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96))))))) )),
  inference(forward_demodulation,[],[f14097,f1161])).
fof(f14097,plain,(
  ( ! [X95,X96] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X95),X96) = s('type.list.list'(X95),'const.list.CONS_2'(s(X95,sK44(X96,X95)),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,sK45(X96,X95)),s('type.list.list'(X95),'const.list.NIL_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96))))))) )),
  inference(superposition,[],[f11123,f1417])).
fof(f14220,plain,(
  ( ! [X94,X93] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK44(X94,X93)),s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK45(X94,X93)),s('type.list.list'(X93),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14219,f1161])).
fof(f14219,plain,(
  ( ! [X94,X93] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK44(X94,X93)),s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK45(X94,X93)),s('type.list.list'(X93),'const.list.NIL_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94))))))) )),
  inference(forward_demodulation,[],[f14096,f1161])).
fof(f14096,plain,(
  ( ! [X94,X93] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK44(X94,X93)),s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK45(X94,X93)),s('type.list.list'(X93),'const.list.NIL_0'))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94))))))) )),
  inference(superposition,[],[f11123,f1415])).
fof(f14214,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.list.list'(X62),X63) = s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK44(X63,X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK45(X63,X62)),s('type.list.list'(X62),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X64),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num',X65))))) ) | $spl228),
  inference(cnf_transformation,[],[f14214_D])).
fof(f14214_D,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.list.list'(X62),X63) = s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK44(X63,X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK45(X63,X62)),s('type.list.list'(X62),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X64),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num',X65))))) ) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f14213,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X62),X63) = s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK44(X63,X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK45(X63,X62)),s('type.list.list'(X62),'const.list.NIL_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num',X65)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X64),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))))))))) )),
  inference(forward_demodulation,[],[f14086,f1161])).
fof(f14086,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X62),X63) = s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK44(X63,X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK45(X63,X62)),s('type.list.list'(X62),'const.list.NIL_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num',X65)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X64),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))))))))) )),
  inference(superposition,[],[f11123,f1297])).
fof(f14212,plain,(
  ( ! [X61,X60] : (s('type.list.list'(X60),X61) = s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK44(X61,X60)),s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK45(X61,X60)),s('type.list.list'(X60),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(X60),X61))))))) ) | $spl226),
  inference(cnf_transformation,[],[f14212_D])).
fof(f14212_D,plain,(
  ( ! [X61,X60] : (s('type.list.list'(X60),X61) = s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK44(X61,X60)),s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK45(X61,X60)),s('type.list.list'(X60),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(X60),X61))))))) ) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f14211,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X60),X61) = s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK44(X61,X60)),s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK45(X61,X60)),s('type.list.list'(X60),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(X60),X61))))))) )),
  inference(forward_demodulation,[],[f14085,f1161])).
fof(f14085,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X60),X61) = s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK44(X61,X60)),s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK45(X61,X60)),s('type.list.list'(X60),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(X60),X61))))))) )),
  inference(superposition,[],[f11123,f1152])).
fof(f14120,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK44(X17,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK45(X17,X16)),s('type.list.list'(X16),'const.list.NIL_0')))))) ) | $spl222),
  inference(cnf_transformation,[],[f14120_D])).
fof(f14120_D,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK44(X17,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK45(X17,X16)),s('type.list.list'(X16),'const.list.NIL_0')))))) ) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f14210,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X59))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X58),X59) = s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK44(X59,X58)),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK45(X59,X58)),s('type.list.list'(X58),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14209,f1161])).
fof(f14209,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X59))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X58),X59) = s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK44(X59,X58)),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK45(X59,X58)),s('type.list.list'(X58),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14084,f1156])).
fof(f14084,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X58),X59) = s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK44(X59,X58)),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK45(X59,X58)),s('type.list.list'(X58),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X59)))))) )),
  inference(superposition,[],[f11123,f1150])).
fof(f14208,plain,(
  ( ! [X57,X56] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X56),X57) = s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK44(X57,X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK45(X57,X56)),s('type.list.list'(X56),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14207,f1161])).
fof(f14207,plain,(
  ( ! [X57,X56] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X56),X57) = s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK44(X57,X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK45(X57,X56)),s('type.list.list'(X56),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14083,f1156])).
fof(f14083,plain,(
  ( ! [X57,X56] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X56),X57) = s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK44(X57,X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK45(X57,X56)),s('type.list.list'(X56),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57)))))) )),
  inference(superposition,[],[f11123,f1148])).
fof(f14196,plain,(
  ( ! [X15,X16] : (s('type.list.list'(X15),X16) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK44(X16,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK45(X16,X15)),s('type.list.list'(X15),'const.list.NIL_0'))))) | s('type.list.list'(X15),'const.list.NIL_0') != s('type.list.list'(X15),X16)) ) | $spl224),
  inference(cnf_transformation,[],[f14196_D])).
fof(f14196_D,plain,(
  ( ! [X15,X16] : (s('type.list.list'(X15),X16) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK44(X16,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK45(X16,X15)),s('type.list.list'(X15),'const.list.NIL_0'))))) | s('type.list.list'(X15),'const.list.NIL_0') != s('type.list.list'(X15),X16)) ) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f14197,plain,(
  ( ! [X17,X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X17),X18) = s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK44(X18,X17)),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK45(X18,X17)),s('type.list.list'(X17),'const.list.NIL_0'))))) | s('type.list.list'(X17),'const.list.NIL_0') != s('type.list.list'(X17),X18)) )),
  inference(forward_demodulation,[],[f14069,f1161])).
fof(f14069,plain,(
  ( ! [X17,X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X17),X18) = s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK44(X18,X17)),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK45(X18,X17)),s('type.list.list'(X17),'const.list.NIL_0'))))) | s('type.list.list'(X17),'const.list.NIL_0') != s('type.list.list'(X17),X18)) )),
  inference(superposition,[],[f11123,f1468])).
fof(f14195,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X15),X16) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK44(X16,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK45(X16,X15)),s('type.list.list'(X15),'const.list.NIL_0'))))) | s('type.list.list'(X15),'const.list.NIL_0') != s('type.list.list'(X15),X16)) )),
  inference(forward_demodulation,[],[f14068,f1161])).
fof(f14068,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X15),X16) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK44(X16,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK45(X16,X15)),s('type.list.list'(X15),'const.list.NIL_0'))))) | s('type.list.list'(X15),'const.list.NIL_0') != s('type.list.list'(X15),X16)) )),
  inference(superposition,[],[f11123,f1466])).
fof(f14123,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X18),X19) = s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK44(X19,X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK45(X19,X18)),s('type.list.list'(X18),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14122,f1161])).
fof(f14122,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X18),X19) = s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK44(X19,X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK45(X19,X18)),s('type.list.list'(X18),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19)))) )),
  inference(forward_demodulation,[],[f14121,f1161])).
fof(f14121,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X18),X19) = s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK44(X19,X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK45(X19,X18)),s('type.list.list'(X18),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19)))) )),
  inference(forward_demodulation,[],[f14028,f1469])).
fof(f14028,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),'const.list.NIL_0'))) | s('type.list.list'(X18),X19) = s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK44(X19,X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK45(X19,X18)),s('type.list.list'(X18),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19)))) )),
  inference(superposition,[],[f11123,f1467])).
fof(f14119,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK44(X17,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK45(X17,X16)),s('type.list.list'(X16),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14118,f1161])).
fof(f14118,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK44(X17,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK45(X17,X16)),s('type.list.list'(X16),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17)))) )),
  inference(forward_demodulation,[],[f14117,f1161])).
fof(f14117,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK44(X17,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK45(X17,X16)),s('type.list.list'(X16),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17)))) )),
  inference(forward_demodulation,[],[f14027,f1469])).
fof(f14027,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.NIL_0'))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK44(X17,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK45(X17,X16)),s('type.list.list'(X16),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17)))) )),
  inference(superposition,[],[f11123,f1465])).
fof(f14116,plain,(
  ( ! [X14,X15] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15)))))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK44(X15,X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK45(X15,X14)),s('type.list.list'(X14),'const.list.NIL_0')))))) ) | $spl220),
  inference(cnf_transformation,[],[f14116_D])).
fof(f14116_D,plain,(
  ( ! [X14,X15] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15)))))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK44(X15,X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK45(X15,X14)),s('type.list.list'(X14),'const.list.NIL_0')))))) ) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f14115,plain,(
  ( ! [X14,X15] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK44(X15,X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK45(X15,X14)),s('type.list.list'(X14),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14114,f1161])).
fof(f14114,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK44(X15,X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK45(X15,X14)),s('type.list.list'(X14),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))))))) )),
  inference(forward_demodulation,[],[f14113,f1161])).
fof(f14113,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK44(X15,X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK45(X15,X14)),s('type.list.list'(X14),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))))))) )),
  inference(forward_demodulation,[],[f14026,f1469])).
fof(f14026,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),'const.list.NIL_0'))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK44(X15,X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK45(X15,X14)),s('type.list.list'(X14),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))))))) )),
  inference(superposition,[],[f11123,f1463])).
fof(f14112,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK44(X13,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK45(X13,X12)),s('type.list.list'(X12),'const.list.NIL_0')))))) ) | $spl218),
  inference(cnf_transformation,[],[f14112_D])).
fof(f14112_D,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK44(X13,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK45(X13,X12)),s('type.list.list'(X12),'const.list.NIL_0')))))) ) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f14111,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK44(X13,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK45(X13,X12)),s('type.list.list'(X12),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14110,f1156])).
fof(f14110,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK44(X13,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK45(X13,X12)),s('type.list.list'(X12),'const.list.NIL_0'))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f14109,f1161])).
fof(f14109,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK44(X13,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK45(X13,X12)),s('type.list.list'(X12),'const.list.NIL_0'))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f14025,f1469])).
fof(f14025,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.NIL_0'))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK44(X13,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK45(X13,X12)),s('type.list.list'(X12),'const.list.NIL_0'))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(superposition,[],[f11123,f1461])).
fof(f14108,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X10),X11) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK44(X11,X10)),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK45(X11,X10)),s('type.list.list'(X10),'const.list.NIL_0')))))) ) | $spl216),
  inference(cnf_transformation,[],[f14108_D])).
fof(f14108_D,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X10),X11) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK44(X11,X10)),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK45(X11,X10)),s('type.list.list'(X10),'const.list.NIL_0')))))) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f14107,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X10),X11) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK44(X11,X10)),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK45(X11,X10)),s('type.list.list'(X10),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f14106,f1161])).
fof(f14106,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X10),X11) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK44(X11,X10)),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK45(X11,X10)),s('type.list.list'(X10),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f14105,f1161])).
fof(f14105,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X10),X11) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK44(X11,X10)),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK45(X11,X10)),s('type.list.list'(X10),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f14024,f1469])).
fof(f14024,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),'const.list.NIL_0'))) | s('type.list.list'(X10),X11) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK44(X11,X10)),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK45(X11,X10)),s('type.list.list'(X10),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f11123,f1448])).
fof(f14017,plain,(
  ( ! [X37,X34] : (s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) ) | $spl212),
  inference(cnf_transformation,[],[f14017_D])).
fof(f14017_D,plain,(
  ( ! [X37,X34] : (s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) ) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f14019,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl215),
  inference(cnf_transformation,[],[f14019_D])).
fof(f14019_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl215),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl215])])).
fof(f14016,plain,(
  ( ! [X37,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) )),
  inference(forward_demodulation,[],[f14015,f1155])).
fof(f14015,plain,(
  ( ! [X37,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) )),
  inference(forward_demodulation,[],[f14014,f1160])).
fof(f14014,plain,(
  ( ! [X37,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) )),
  inference(forward_demodulation,[],[f14013,f1161])).
fof(f14013,plain,(
  ( ! [X37,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) )),
  inference(forward_demodulation,[],[f14012,f1469])).
fof(f14012,plain,(
  ( ! [X37,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),'const.list.NIL_0')))))))))) | s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) )),
  inference(forward_demodulation,[],[f14011,f1187])).
fof(f14011,plain,(
  ( ! [X37,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X36),s('type.list.list'(X34),'const.list.NIL_0')))))))))) | s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) )),
  inference(forward_demodulation,[],[f13890,f1187])).
fof(f13890,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X35),s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X36),s('type.list.list'(X34),'const.list.NIL_0'))))))))))) )),
  inference(superposition,[],[f11122,f1463])).
fof(f11122,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(forward_demodulation,[],[f1195,f1156])).
fof(f1195,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f915])).
fof(f13996,plain,(
  ( ! [X37,X36,X34] : (s('type.list.list'(X34),X36) != s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X37),s('type.list.list'(X34),'const.list.NIL_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36)))) ) | $spl210),
  inference(cnf_transformation,[],[f13996_D])).
fof(f13996_D,plain,(
  ( ! [X37,X36,X34] : (s('type.list.list'(X34),X36) != s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X37),s('type.list.list'(X34),'const.list.NIL_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36)))) ) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f10870,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl187),
  inference(cnf_transformation,[],[f10870_D])).
fof(f10870_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl187),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl187])])).
fof(f13995,plain,(
  ( ! [X37,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X34),X36) != s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X37),s('type.list.list'(X34),'const.list.NIL_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36)))) )),
  inference(forward_demodulation,[],[f13994,f1160])).
fof(f13994,plain,(
  ( ! [X37,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X34),X36) != s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X37),s('type.list.list'(X34),'const.list.NIL_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36)))) )),
  inference(forward_demodulation,[],[f13993,f1161])).
fof(f13993,plain,(
  ( ! [X37,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.list.list'(X34),X36) != s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X37),s('type.list.list'(X34),'const.list.NIL_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36)))) )),
  inference(forward_demodulation,[],[f13992,f1469])).
fof(f13992,plain,(
  ( ! [X37,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),'const.list.NIL_0')))))))) | s('type.list.list'(X34),X36) != s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X37),s('type.list.list'(X34),'const.list.NIL_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36)))) )),
  inference(forward_demodulation,[],[f13879,f1187])).
fof(f13879,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.list.list'(X34),X36) != s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X37),s('type.list.list'(X34),'const.list.NIL_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X35),s('type.list.list'(X34),'const.list.NIL_0'))))))))) )),
  inference(superposition,[],[f11122,f1463])).
fof(f1856,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl26),
  inference(cnf_transformation,[],[f1856_D])).
fof(f1856_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f13928,plain,(
  ( ! [X109,X107,X110,X108] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X107),X108) != s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X109),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X110),s('type.list.list'(X107),X108)))))) ) | $spl208),
  inference(cnf_transformation,[],[f13928_D])).
fof(f13928_D,plain,(
  ( ! [X109,X107,X110,X108] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X107),X108) != s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X109),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X110),s('type.list.list'(X107),X108)))))) ) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f13927,plain,(
  ( ! [X109,X107,X110,X108] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X107),X108) != s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X109),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X110),s('type.list.list'(X107),X108)))))) )),
  inference(forward_demodulation,[],[f13926,f1161])).
fof(f13926,plain,(
  ( ! [X109,X107,X110,X108] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X107),X108) != s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X109),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X110),s('type.list.list'(X107),X108))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f13925,f1161])).
fof(f13925,plain,(
  ( ! [X109,X107,X110,X108] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X107),X108) != s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X109),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X110),s('type.list.list'(X107),X108))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f13440,f1469])).
fof(f13440,plain,(
  ( ! [X109,X107,X110,X108] : (s('type.list.list'(X107),X108) != s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X109),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X110),s('type.list.list'(X107),X108))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f11122,f1448])).
fof(f13924,plain,(
  ( ! [X103,X105,X106,X104] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X103),X104) != s('type.list.list'(X103),'const.list.CONS_2'(s(X103,X105),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,X106),s('type.list.list'(X103),X104)))))) ) | $spl206),
  inference(cnf_transformation,[],[f13924_D])).
fof(f13924_D,plain,(
  ( ! [X103,X105,X106,X104] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X103),X104) != s('type.list.list'(X103),'const.list.CONS_2'(s(X103,X105),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,X106),s('type.list.list'(X103),X104)))))) ) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f13923,plain,(
  ( ! [X103,X105,X106,X104] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X103),X104) != s('type.list.list'(X103),'const.list.CONS_2'(s(X103,X105),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,X106),s('type.list.list'(X103),X104)))))) )),
  inference(forward_demodulation,[],[f13922,f1156])).
fof(f13922,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X103),X104) != s('type.list.list'(X103),'const.list.CONS_2'(s(X103,X105),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,X106),s('type.list.list'(X103),X104))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f13921,f1161])).
fof(f13921,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X103),X104) != s('type.list.list'(X103),'const.list.CONS_2'(s(X103,X105),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,X106),s('type.list.list'(X103),X104))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f13439,f1469])).
fof(f13439,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.list.list'(X103),X104) != s('type.list.list'(X103),'const.list.CONS_2'(s(X103,X105),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,X106),s('type.list.list'(X103),X104))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),'const.list.NIL_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(superposition,[],[f11122,f1461])).
fof(f13920,plain,(
  ( ! [X101,X99,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100)))))) | s('type.list.list'(X99),X100) != s('type.list.list'(X99),'const.list.CONS_2'(s(X99,X101),s('type.list.list'(X99),'const.list.CONS_2'(s(X99,X102),s('type.list.list'(X99),X100)))))) ) | $spl204),
  inference(cnf_transformation,[],[f13920_D])).
fof(f13920_D,plain,(
  ( ! [X101,X99,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100)))))) | s('type.list.list'(X99),X100) != s('type.list.list'(X99),'const.list.CONS_2'(s(X99,X101),s('type.list.list'(X99),'const.list.CONS_2'(s(X99,X102),s('type.list.list'(X99),X100)))))) ) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f13919,plain,(
  ( ! [X101,X99,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X99),X100) != s('type.list.list'(X99),'const.list.CONS_2'(s(X99,X101),s('type.list.list'(X99),'const.list.CONS_2'(s(X99,X102),s('type.list.list'(X99),X100)))))) )),
  inference(forward_demodulation,[],[f13918,f1161])).
fof(f13918,plain,(
  ( ! [X101,X99,X102,X100] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X99),X100) != s('type.list.list'(X99),'const.list.CONS_2'(s(X99,X101),s('type.list.list'(X99),'const.list.CONS_2'(s(X99,X102),s('type.list.list'(X99),X100))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))))))) )),
  inference(forward_demodulation,[],[f13917,f1161])).
fof(f13917,plain,(
  ( ! [X101,X99,X102,X100] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X99),X100) != s('type.list.list'(X99),'const.list.CONS_2'(s(X99,X101),s('type.list.list'(X99),'const.list.CONS_2'(s(X99,X102),s('type.list.list'(X99),X100))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))))))) )),
  inference(forward_demodulation,[],[f13438,f1469])).
fof(f13438,plain,(
  ( ! [X101,X99,X102,X100] : (s('type.list.list'(X99),X100) != s('type.list.list'(X99),'const.list.CONS_2'(s(X99,X101),s('type.list.list'(X99),'const.list.CONS_2'(s(X99,X102),s('type.list.list'(X99),X100))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))))))) )),
  inference(superposition,[],[f11122,f1463])).
fof(f13913,plain,(
  ( ! [X94,X92,X93,X91] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))) | s('type.list.list'(X91),X92) != s('type.list.list'(X91),'const.list.CONS_2'(s(X91,X93),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,X94),s('type.list.list'(X91),X92)))))) ) | $spl202),
  inference(cnf_transformation,[],[f13913_D])).
fof(f13913_D,plain,(
  ( ! [X94,X92,X93,X91] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))) | s('type.list.list'(X91),X92) != s('type.list.list'(X91),'const.list.CONS_2'(s(X91,X93),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,X94),s('type.list.list'(X91),X92)))))) ) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f13916,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X95),X96) != s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X97),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X98),s('type.list.list'(X95),X96)))))) )),
  inference(forward_demodulation,[],[f13915,f1161])).
fof(f13915,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X95),X96) != s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X97),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X98),s('type.list.list'(X95),X96))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96)))) )),
  inference(forward_demodulation,[],[f13914,f1161])).
fof(f13914,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X95),X96) != s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X97),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X98),s('type.list.list'(X95),X96))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96)))) )),
  inference(forward_demodulation,[],[f13437,f1469])).
fof(f13437,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.list.list'(X95),X96) != s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X97),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X98),s('type.list.list'(X95),X96))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96)))) )),
  inference(superposition,[],[f11122,f1465])).
fof(f13912,plain,(
  ( ! [X94,X92,X93,X91] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X91),X92) != s('type.list.list'(X91),'const.list.CONS_2'(s(X91,X93),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,X94),s('type.list.list'(X91),X92)))))) )),
  inference(forward_demodulation,[],[f13911,f1161])).
fof(f13911,plain,(
  ( ! [X94,X92,X93,X91] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X91),X92) != s('type.list.list'(X91),'const.list.CONS_2'(s(X91,X93),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,X94),s('type.list.list'(X91),X92))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92)))) )),
  inference(forward_demodulation,[],[f13910,f1161])).
fof(f13910,plain,(
  ( ! [X94,X92,X93,X91] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.list.list'(X91),X92) != s('type.list.list'(X91),'const.list.CONS_2'(s(X91,X93),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,X94),s('type.list.list'(X91),X92))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92)))) )),
  inference(forward_demodulation,[],[f13436,f1469])).
fof(f13436,plain,(
  ( ! [X94,X92,X93,X91] : (s('type.list.list'(X91),X92) != s('type.list.list'(X91),'const.list.CONS_2'(s(X91,X93),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,X94),s('type.list.list'(X91),X92))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92)))) )),
  inference(superposition,[],[f11122,f1467])).
fof(f13065,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num',X58)))) )),
  inference(forward_demodulation,[],[f13064,f1161])).
fof(f13064,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f11820,f1161])).
fof(f11820,plain,(
  ( ! [X59,X58] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X58))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f11115,f1520])).
fof(f13062,plain,(
  ( ! [X57,X56] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X57))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X56))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X56),s('type.num.num',X56)))) )),
  inference(forward_demodulation,[],[f13061,f1161])).
fof(f13061,plain,(
  ( ! [X57,X56] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X56))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X56),s('type.num.num',X56))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X57)))) )),
  inference(forward_demodulation,[],[f11819,f1161])).
fof(f11819,plain,(
  ( ! [X57,X56] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X56))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X56),s('type.num.num',X56))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X57)))) )),
  inference(superposition,[],[f11115,f1519])).
fof(f13044,plain,(
  ( ! [X28,X29,X27] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X27))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X28),s('type.num.num',X29)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f11805,f1161])).
fof(f11805,plain,(
  ( ! [X28,X29,X27] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X27))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X28),s('type.num.num',X29)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(superposition,[],[f11115,f1297])).
fof(f13041,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f11804,f1161])).
fof(f11804,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X26))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f11115,f1152])).
fof(f13040,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X25))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25)))) )),
  inference(forward_demodulation,[],[f13039,f1161])).
fof(f13039,plain,(
  ( ! [X25] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X25))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25)))) )),
  inference(forward_demodulation,[],[f11803,f1156])).
fof(f11803,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X25))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f11115,f1150])).
fof(f13037,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X24)))) )),
  inference(forward_demodulation,[],[f13036,f1161])).
fof(f13036,plain,(
  ( ! [X24] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X24)))) )),
  inference(forward_demodulation,[],[f11802,f1156])).
fof(f11802,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X24))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f11115,f1148])).
fof(f11441,plain,(
  ( ! [X248,X247] : (p(s(bool,X247)) | p(s(bool,X248)) | s(bool,X248) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1535])).
fof(f11330,plain,(
  ( ! [X35,X36,X34] : (p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X35) != s(bool,X36)) ) | $spl2),
  inference(resolution,[],[f1546,f1087])).
fof(f11327,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | p(s(bool,X27)) | s(bool,X27) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1086])).
fof(f11326,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X22) != s(bool,X24) | s(bool,X23) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1085])).
fof(f11325,plain,(
  ( ! [X21,X19,X20] : (p(s(bool,X19)) | ~p(s(bool,X20)) | s(bool,X19) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X20) != s(bool,X21)) ) | $spl2),
  inference(resolution,[],[f1546,f1083])).
fof(f11323,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1081])).
fof(f11321,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl2),
  inference(resolution,[],[f1546,f1357])).
fof(f11320,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl2),
  inference(resolution,[],[f1546,f1357])).
fof(f11319,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(resolution,[],[f1546,f1352])).
fof(f2858,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,X9) | ~p(s(bool,X9))) ) | $spl64),
  inference(cnf_transformation,[],[f2858_D])).
fof(f2858_D,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,X9) | ~p(s(bool,X9))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f11259,plain,(
  ( ! [X244,X245] : (p(s(bool,X244)) | ~p(s(bool,X245)) | s(bool,'F_0') != s(bool,X245)) ) | $spl17),
  inference(resolution,[],[f1827,f1535])).
fof(f11147,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,'F_0') != s(bool,X30) | s(bool,X29) != s(bool,X31)) ) | $spl17),
  inference(resolution,[],[f1827,f1087])).
fof(f11145,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,'F_0') != s(bool,X24)) ) | $spl17),
  inference(resolution,[],[f1827,f1086])).
fof(f11143,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,'F_0') != s(bool,X18)) ) | $spl17),
  inference(resolution,[],[f1827,f1085])).
fof(f11142,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,'F_0') != s(bool,X15) | s(bool,X14) != s(bool,X16)) ) | $spl17),
  inference(resolution,[],[f1827,f1083])).
fof(f11140,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,'F_0') != s(bool,X9)) ) | $spl17),
  inference(resolution,[],[f1827,f1081])).
fof(f11087,plain,(
  $false | $spl26),
  inference(subsumption_resolution,[],[f11086,f1171])).
fof(f11086,plain,(
  ( ! [X22] : (s('type.list.list'(X22),'const.list.NIL_0') = s('type.list.list'(X22),'const.list.CONS_2'(s(X22,sK42('const.list.NIL_0',X22)),s('type.list.list'(X22),'const.list.CONS_2'(s(X22,sK43('const.list.NIL_0',X22)),s('type.list.list'(X22),'const.list.NIL_0')))))) ) | $spl26),
  inference(subsumption_resolution,[],[f10959,f1161])).
fof(f10959,plain,(
  ( ! [X22] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(X22),'const.list.NIL_0') = s('type.list.list'(X22),'const.list.CONS_2'(s(X22,sK42('const.list.NIL_0',X22)),s('type.list.list'(X22),'const.list.CONS_2'(s(X22,sK43('const.list.NIL_0',X22)),s('type.list.list'(X22),'const.list.NIL_0')))))) ) | $spl26),
  inference(superposition,[],[f7702,f1469])).
fof(f7702,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl26),
  inference(forward_demodulation,[],[f7137,f1156])).
fof(f7137,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl26),
  inference(backward_demodulation,[],[f1856,f1192])).
fof(f10893,plain,(
  ( ! [X37,X34] : (s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) ) | $spl188),
  inference(cnf_transformation,[],[f10893_D])).
fof(f10893_D,plain,(
  ( ! [X37,X34] : (s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) ) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f10895,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl191),
  inference(cnf_transformation,[],[f10895_D])).
fof(f10895_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl191),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl191])])).
fof(f10892,plain,(
  ( ! [X37,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) ) | $spl26),
  inference(forward_demodulation,[],[f10891,f1856])).
fof(f10891,plain,(
  ( ! [X37,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) ) | $spl26),
  inference(forward_demodulation,[],[f10890,f1155])).
fof(f10890,plain,(
  ( ! [X37,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) ) | $spl26),
  inference(forward_demodulation,[],[f10889,f1160])).
fof(f10889,plain,(
  ( ! [X37,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) ) | $spl26),
  inference(forward_demodulation,[],[f10888,f1161])).
fof(f10888,plain,(
  ( ! [X37,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) ) | $spl26),
  inference(forward_demodulation,[],[f10887,f1469])).
fof(f10887,plain,(
  ( ! [X37,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),'const.list.NIL_0')))))))))) | s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) ) | $spl26),
  inference(forward_demodulation,[],[f10886,f1187])).
fof(f10886,plain,(
  ( ! [X37,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X36),s('type.list.list'(X34),'const.list.NIL_0')))))))))) | s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37)))) ) | $spl26),
  inference(forward_demodulation,[],[f10775,f1187])).
fof(f10775,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.list.list'(X34),'const.list.NIL_0') != s('type.list.list'(X34),X37) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X37))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X35),s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X36),s('type.list.list'(X34),'const.list.NIL_0'))))))))))) ) | $spl26),
  inference(superposition,[],[f7703,f1463])).
fof(f7703,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) ) | $spl26),
  inference(forward_demodulation,[],[f7138,f1156])).
fof(f7138,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl26),
  inference(backward_demodulation,[],[f1856,f1193])).
fof(f1193,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f912])).
fof(f10868,plain,(
  ( ! [X37,X36,X34] : (s('type.list.list'(X34),X36) != s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X37),s('type.list.list'(X34),'const.list.NIL_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36)))) ) | $spl184),
  inference(cnf_transformation,[],[f10868_D])).
fof(f10868_D,plain,(
  ( ! [X37,X36,X34] : (s('type.list.list'(X34),X36) != s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X37),s('type.list.list'(X34),'const.list.NIL_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36)))) ) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f10867,plain,(
  ( ! [X37,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X34),X36) != s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X37),s('type.list.list'(X34),'const.list.NIL_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36)))) ) | $spl26),
  inference(forward_demodulation,[],[f10866,f1160])).
fof(f10866,plain,(
  ( ! [X37,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X34),X36) != s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X37),s('type.list.list'(X34),'const.list.NIL_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36)))) ) | $spl26),
  inference(forward_demodulation,[],[f10865,f1161])).
fof(f10865,plain,(
  ( ! [X37,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.list.list'(X34),X36) != s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X37),s('type.list.list'(X34),'const.list.NIL_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36)))) ) | $spl26),
  inference(forward_demodulation,[],[f10864,f1469])).
fof(f10864,plain,(
  ( ! [X37,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),'const.list.NIL_0')))))))) | s('type.list.list'(X34),X36) != s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X37),s('type.list.list'(X34),'const.list.NIL_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36)))) ) | $spl26),
  inference(forward_demodulation,[],[f10764,f1187])).
fof(f10764,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.list.list'(X34),X36) != s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X37),s('type.list.list'(X34),'const.list.NIL_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),'const.list.CONS_2'(s(X34,X35),s('type.list.list'(X34),'const.list.NIL_0'))))))))) ) | $spl26),
  inference(superposition,[],[f7703,f1463])).
fof(f3014,plain,(
  ( ! [X9] : (p(s(bool,X9)) | s(bool,'F_0') != s(bool,X9)) ) | $spl66),
  inference(cnf_transformation,[],[f3014_D])).
fof(f3014_D,plain,(
  ( ! [X9] : (p(s(bool,X9)) | s(bool,'F_0') != s(bool,X9)) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f8580,plain,(
  ( ! [X243,X242] : (p(s(bool,X242)) | p(s(bool,X243)) | s(bool,'F_0') != s(bool,X243)) ) | $spl16),
  inference(resolution,[],[f1828,f1535])).
fof(f8469,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,'F_0') != s(bool,X29) | s(bool,X30) != s(bool,X31)) ) | $spl16),
  inference(resolution,[],[f1828,f1087])).
fof(f8466,plain,(
  ( ! [X21,X22,X20] : (p(s(bool,X20)) | ~p(s(bool,X21)) | p(s(bool,X22)) | s(bool,'F_0') != s(bool,X22)) ) | $spl16),
  inference(resolution,[],[f1828,f1086])).
fof(f8465,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,'F_0') != s(bool,X18)) ) | $spl16),
  inference(resolution,[],[f1828,f1085])).
fof(f8464,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,'F_0') != s(bool,X14) | s(bool,X15) != s(bool,X16)) ) | $spl16),
  inference(resolution,[],[f1828,f1083])).
fof(f8462,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,'F_0') != s(bool,X9)) ) | $spl16),
  inference(resolution,[],[f1828,f1081])).
fof(f1828,plain,(
  p(s(bool,'F_0')) | $spl16),
  inference(cnf_transformation,[],[f1828_D])).
fof(f1828_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f8454,plain,(
  ( ! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) ) | $spl182),
  inference(cnf_transformation,[],[f8454_D])).
fof(f8454_D,plain,(
  ( ! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) ) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f8455,plain,(
  ( ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) | p(s(bool,'F_0')) | s('type.num.num',X10) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10)))) ) | $spl26),
  inference(forward_demodulation,[],[f7724,f1446])).
fof(f7724,plain,(
  ( ! [X10] : (p(s(bool,'F_0')) | s('type.num.num',X10) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl26),
  inference(forward_demodulation,[],[f7723,f1515])).
fof(f7723,plain,(
  ( ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num',X10) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl26),
  inference(forward_demodulation,[],[f7159,f1446])).
fof(f7159,plain,(
  ( ! [X10] : (s('type.num.num',X10) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl26),
  inference(superposition,[],[f1856,f1324])).
fof(f1324,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f978])).
fof(f978,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) = s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) | s('type.num.num',X0) != s('type.num.num',X1)))),
  inference(flattening,[],[f977])).
fof(f977,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) = s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) | s('type.num.num',X0) != s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f621])).
fof(f621,plain,(
  ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))))),
  inference(flattening,[],[f620])).
fof(f620,plain,(
  ! [X0,X1] : (~s('type.num.num',X0) = s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))))),
  inference(rectify,[],[f358])).
fof(f358,axiom,(
  ! [X23,X16] : (~s('type.num.num',X16) = s('type.num.num',X23) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))),s('type.num.num',X16)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))),s('type.num.num',X23))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.arithmetic.NOT_NUM_EQ')).
fof(f7729,plain,(
  ( ! [X11] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) ) | $spl26),
  inference(forward_demodulation,[],[f7728,f1515])).
fof(f7728,plain,(
  ( ! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) ) | $spl26),
  inference(forward_demodulation,[],[f7727,f1446])).
fof(f7727,plain,(
  ( ! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl26),
  inference(forward_demodulation,[],[f7160,f1446])).
fof(f7160,plain,(
  ( ! [X11] : (s('type.num.num',X11) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl26),
  inference(superposition,[],[f1856,f1324])).
fof(f8453,plain,(
  ( ! [X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13)))) ) | $spl180),
  inference(cnf_transformation,[],[f8453_D])).
fof(f8453_D,plain,(
  ( ! [X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13)))) ) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f8452,plain,(
  ( ! [X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'F_0')) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13)))) ) | $spl26),
  inference(forward_demodulation,[],[f7731,f1160])).
fof(f7731,plain,(
  ( ! [X13] : (p(s(bool,'F_0')) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7162,f1515])).
fof(f7162,plain,(
  ( ! [X13] : (s('type.num.num',X13) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(superposition,[],[f1856,f1349])).
fof(f8451,plain,(
  ( ! [X15] : (s('type.num.num',X15) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl178),
  inference(cnf_transformation,[],[f8451_D])).
fof(f8451_D,plain,(
  ( ! [X15] : (s('type.num.num',X15) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f7736,plain,(
  ( ! [X15] : (p(s(bool,'F_0')) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl26),
  inference(forward_demodulation,[],[f7164,f1515])).
fof(f7164,plain,(
  ( ! [X15] : (s('type.num.num',X15) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl26),
  inference(superposition,[],[f1856,f1352])).
fof(f8409,plain,(
  ( ! [X293] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X293)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X293)) ) | $spl168),
  inference(cnf_transformation,[],[f8409_D])).
fof(f8409_D,plain,(
  ( ! [X293] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X293)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X293)) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f8450,plain,(
  ( ! [X14] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14)))) | p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X14)) ) | $spl26),
  inference(forward_demodulation,[],[f8449,f1856])).
fof(f8449,plain,(
  ( ! [X14] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X14)))) | p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X14)) ) | $spl26),
  inference(forward_demodulation,[],[f7754,f1446])).
fof(f7754,plain,(
  ( ! [X14] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X14) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X14))))) ) | $spl26),
  inference(forward_demodulation,[],[f7753,f1515])).
fof(f7753,plain,(
  ( ! [X14] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X14) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X14))))) ) | $spl26),
  inference(forward_demodulation,[],[f7752,f1856])).
fof(f7752,plain,(
  ( ! [X14] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X14) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X14))))) ) | $spl26),
  inference(forward_demodulation,[],[f7183,f1446])).
fof(f7183,plain,(
  ( ! [X14] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X14) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X14))))) ) | $spl26),
  inference(superposition,[],[f1856,f1324])).
fof(f7762,plain,(
  ( ! [X15] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X15)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X15)) ) | $spl26),
  inference(forward_demodulation,[],[f7761,f1515])).
fof(f7761,plain,(
  ( ! [X15] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X15)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X15)) ) | $spl26),
  inference(forward_demodulation,[],[f7760,f1856])).
fof(f7760,plain,(
  ( ! [X15] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X15)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X15)) ) | $spl26),
  inference(forward_demodulation,[],[f7759,f1446])).
fof(f7759,plain,(
  ( ! [X15] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X15)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X15) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7758,f1856])).
fof(f7758,plain,(
  ( ! [X15] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X15)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X15) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7184,f1446])).
fof(f7184,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X15) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X15)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(superposition,[],[f1856,f1324])).
fof(f8392,plain,(
  ( ! [X323] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X323),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X323)) ) | $spl154),
  inference(cnf_transformation,[],[f8392_D])).
fof(f8392_D,plain,(
  ( ! [X323] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X323),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X323)) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f8448,plain,(
  ( ! [X17] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X17)) ) | $spl26),
  inference(forward_demodulation,[],[f8447,f1160])).
fof(f8447,plain,(
  ( ! [X17] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X17)) ) | $spl26),
  inference(forward_demodulation,[],[f7767,f1154])).
fof(f7767,plain,(
  ( ! [X17] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X17) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7766,f1515])).
fof(f7766,plain,(
  ( ! [X17] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X17) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7186,f1856])).
fof(f7186,plain,(
  ( ! [X17] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X17) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl26),
  inference(superposition,[],[f1856,f1349])).
fof(f8383,plain,(
  ( ! [X337] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X337),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X337)) ) | $spl148),
  inference(cnf_transformation,[],[f8383_D])).
fof(f8383_D,plain,(
  ( ! [X337] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X337),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X337)) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f8446,plain,(
  ( ! [X19] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X19)) ) | $spl26),
  inference(forward_demodulation,[],[f7774,f1856])).
fof(f7774,plain,(
  ( ! [X19] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X19) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7773,f1515])).
fof(f7773,plain,(
  ( ! [X19] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X19) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7188,f1856])).
fof(f7188,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X19) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(superposition,[],[f1856,f1352])).
fof(f1827,plain,(
  ~p(s(bool,'F_0')) | $spl17),
  inference(cnf_transformation,[],[f1827_D])).
fof(f1827_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f7809,plain,(
  ( ! [X31] : (~p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X31))))) ) | $spl26),
  inference(forward_demodulation,[],[f7213,f1515])).
fof(f7213,plain,(
  ( ! [X31] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X31))))) ) | $spl26),
  inference(superposition,[],[f1345,f1856])).
fof(f7810,plain,(
  ( ! [X32] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X32))))) ) | $spl26),
  inference(forward_demodulation,[],[f7214,f1515])).
fof(f7214,plain,(
  ( ! [X32] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X32))))) ) | $spl26),
  inference(superposition,[],[f1346,f1856])).
fof(f8445,plain,(
  ( ! [X220,X221] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X220),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X221),s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl176),
  inference(cnf_transformation,[],[f8445_D])).
fof(f8445_D,plain,(
  ( ! [X220,X221] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X220),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X221),s('type.num.num','const.arithmetic.ZERO_0'))))))) ) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f8444,plain,(
  ( ! [X220,X221] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X220),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X221),s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f7974,f1856])).
fof(f7974,plain,(
  ( ! [X220,X221] : (p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X220),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X221),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7326,f1515])).
fof(f7326,plain,(
  ( ! [X220,X221] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X220),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X221),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl26),
  inference(superposition,[],[f1300,f1856])).
fof(f8443,plain,(
  ( ! [X231,X230] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X230),s('type.num.num',X231))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X231))))))) ) | $spl174),
  inference(cnf_transformation,[],[f8443_D])).
fof(f8443_D,plain,(
  ( ! [X231,X230] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X230),s('type.num.num',X231))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X231))))))) ) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f8442,plain,(
  ( ! [X231,X230] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X230),s('type.num.num',X231))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X231)))))) | p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f7980,f1856])).
fof(f7980,plain,(
  ( ! [X231,X230] : (p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X230),s('type.num.num',X231))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X231))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7331,f1515])).
fof(f7331,plain,(
  ( ! [X231,X230] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X230),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X230),s('type.num.num',X231))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X231))))))) ) | $spl26),
  inference(superposition,[],[f1301,f1856])).
fof(f1301,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f965])).
fof(f8441,plain,(
  ( ! [X239,X238] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X238),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X239),s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X238),s('type.num.num',X239))))) ) | $spl172),
  inference(cnf_transformation,[],[f8441_D])).
fof(f8441_D,plain,(
  ( ! [X239,X238] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X238),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X239),s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X238),s('type.num.num',X239))))) ) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f8440,plain,(
  ( ! [X239,X238] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X238),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X239),s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X238),s('type.num.num',X239))))) ) | $spl26),
  inference(forward_demodulation,[],[f7986,f1856])).
fof(f7986,plain,(
  ( ! [X239,X238] : (~p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X238),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X239),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X238),s('type.num.num',X239))))) ) | $spl26),
  inference(forward_demodulation,[],[f7335,f1515])).
fof(f7335,plain,(
  ( ! [X239,X238] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X238),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X239),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X238),s('type.num.num',X239))))) ) | $spl26),
  inference(superposition,[],[f1302,f1856])).
fof(f1302,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f965])).
fof(f8439,plain,(
  ( ! [X243,X242] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X243)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X242),s('type.num.num',X243))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X243))))))) ) | $spl170),
  inference(cnf_transformation,[],[f8439_D])).
fof(f8439_D,plain,(
  ( ! [X243,X242] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X243)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X242),s('type.num.num',X243))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X243))))))) ) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f8438,plain,(
  ( ! [X243,X242] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X243)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X242),s('type.num.num',X243))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X243)))))) | ~p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8437,f1161])).
fof(f8437,plain,(
  ( ! [X243,X242] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X242),s('type.num.num',X243))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X243)))))) | ~p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X243))))) ) | $spl26),
  inference(forward_demodulation,[],[f7988,f1856])).
fof(f7988,plain,(
  ( ! [X243,X242] : (~p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X242),s('type.num.num',X243))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X243)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X243))))) ) | $spl26),
  inference(forward_demodulation,[],[f7337,f1515])).
fof(f7337,plain,(
  ( ! [X243,X242] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X242),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X242),s('type.num.num',X243))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X243)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X243))))) ) | $spl26),
  inference(superposition,[],[f1302,f1856])).
fof(f8419,plain,(
  ( ! [X288] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X288) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X288)))) | p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8418,f1856])).
fof(f8418,plain,(
  ( ! [X288] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X288)))) | p(s(bool,'F_0')) | s('type.num.num',X288) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8417,f1856])).
fof(f8417,plain,(
  ( ! [X288] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X288)))) | p(s(bool,'F_0')) | s('type.num.num',X288) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8047,f1446])).
fof(f8047,plain,(
  ( ! [X288] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X288)))) | s('type.num.num',X288) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8046,f1515])).
fof(f8046,plain,(
  ( ! [X288] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X288),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X288)))) | s('type.num.num',X288) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f7370,f1446])).
fof(f7370,plain,(
  ( ! [X288] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X288))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X288)))) | s('type.num.num',X288) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(superposition,[],[f1324,f1856])).
fof(f8416,plain,(
  ( ! [X289] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X289) | p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X289))))) ) | $spl26),
  inference(forward_demodulation,[],[f8055,f1856])).
fof(f8055,plain,(
  ( ! [X289] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X289)))) | s('type.num.num',X289) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8054,f1515])).
fof(f8054,plain,(
  ( ! [X289] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X289),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X289)))) | s('type.num.num',X289) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8053,f1856])).
fof(f8053,plain,(
  ( ! [X289] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X289),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X289)))) | s('type.num.num',X289) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8052,f1446])).
fof(f8052,plain,(
  ( ! [X289] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X289)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X289))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X289) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f7371,f1446])).
fof(f7371,plain,(
  ( ! [X289] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X289)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X289))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X289) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(superposition,[],[f1324,f1856])).
fof(f8415,plain,(
  ( ! [X290] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X290) | p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X290))))) ) | $spl26),
  inference(forward_demodulation,[],[f8061,f1856])).
fof(f8061,plain,(
  ( ! [X290] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X290)))) | s('type.num.num',X290) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8060,f1515])).
fof(f8060,plain,(
  ( ! [X290] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X290),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X290)))) | s('type.num.num',X290) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8059,f1856])).
fof(f8059,plain,(
  ( ! [X290] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X290),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X290)))) | s('type.num.num',X290) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8058,f1446])).
fof(f8058,plain,(
  ( ! [X290] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X290)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X290))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X290) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f7372,f1446])).
fof(f7372,plain,(
  ( ! [X290] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X290)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X290))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X290) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(superposition,[],[f1324,f1856])).
fof(f8414,plain,(
  ( ! [X291] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X291) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X291)))) | p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8413,f1856])).
fof(f8413,plain,(
  ( ! [X291] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X291)))) | p(s(bool,'F_0')) | s('type.num.num',X291) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8412,f1856])).
fof(f8412,plain,(
  ( ! [X291] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X291)))) | p(s(bool,'F_0')) | s('type.num.num',X291) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8065,f1446])).
fof(f8065,plain,(
  ( ! [X291] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X291)))) | s('type.num.num',X291) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8064,f1515])).
fof(f8064,plain,(
  ( ! [X291] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X291),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X291)))) | s('type.num.num',X291) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f7373,f1446])).
fof(f7373,plain,(
  ( ! [X291] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X291))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X291)))) | s('type.num.num',X291) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(superposition,[],[f1324,f1856])).
fof(f8411,plain,(
  ( ! [X292] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X292)))) | p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X292)) ) | $spl26),
  inference(forward_demodulation,[],[f8410,f1856])).
fof(f8410,plain,(
  ( ! [X292] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X292)))) | p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X292)) ) | $spl26),
  inference(forward_demodulation,[],[f8072,f1446])).
fof(f8072,plain,(
  ( ! [X292] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X292) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X292))))) ) | $spl26),
  inference(forward_demodulation,[],[f8071,f1515])).
fof(f8071,plain,(
  ( ! [X292] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X292),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X292) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X292))))) ) | $spl26),
  inference(forward_demodulation,[],[f8070,f1856])).
fof(f8070,plain,(
  ( ! [X292] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X292),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X292) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X292))))) ) | $spl26),
  inference(forward_demodulation,[],[f7374,f1446])).
fof(f7374,plain,(
  ( ! [X292] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X292) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X292))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X292))))) ) | $spl26),
  inference(superposition,[],[f1324,f1856])).
fof(f8080,plain,(
  ( ! [X293] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X293)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X293)) ) | $spl26),
  inference(forward_demodulation,[],[f8079,f1515])).
fof(f8079,plain,(
  ( ! [X293] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X293),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X293)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X293)) ) | $spl26),
  inference(forward_demodulation,[],[f8078,f1856])).
fof(f8078,plain,(
  ( ! [X293] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X293),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X293)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X293)) ) | $spl26),
  inference(forward_demodulation,[],[f8077,f1446])).
fof(f8077,plain,(
  ( ! [X293] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X293)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X293) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X293))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f8076,f1856])).
fof(f8076,plain,(
  ( ! [X293] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X293)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X293) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X293))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7375,f1446])).
fof(f7375,plain,(
  ( ! [X293] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X293) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X293)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X293))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(superposition,[],[f1324,f1856])).
fof(f8408,plain,(
  ( ! [X295] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X295) | ~p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8085,f1856])).
fof(f8085,plain,(
  ( ! [X295] : (~p(s(bool,'F_0')) | s('type.num.num',X295) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8084,f1515])).
fof(f8084,plain,(
  ( ! [X295] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X295),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num',X295) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f7377,f1446])).
fof(f7377,plain,(
  ( ! [X295] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X295))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num',X295) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(superposition,[],[f1325,f1856])).
fof(f1325,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f978])).
fof(f8090,plain,(
  ( ! [X297] : (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X297)) ) | $spl26),
  inference(forward_demodulation,[],[f8089,f1515])).
fof(f8089,plain,(
  ( ! [X297] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X297),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X297)) ) | $spl26),
  inference(forward_demodulation,[],[f8088,f1856])).
fof(f8088,plain,(
  ( ! [X297] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X297),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X297)) ) | $spl26),
  inference(forward_demodulation,[],[f7379,f1446])).
fof(f7379,plain,(
  ( ! [X297] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X297) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X297))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(superposition,[],[f1325,f1856])).
fof(f8407,plain,(
  ( ! [X298] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X298) | ~p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8092,f1856])).
fof(f8092,plain,(
  ( ! [X298] : (~p(s(bool,'F_0')) | s('type.num.num',X298) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8091,f1515])).
fof(f8091,plain,(
  ( ! [X298] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X298),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num',X298) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f7380,f1446])).
fof(f7380,plain,(
  ( ! [X298] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X298))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num',X298) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(superposition,[],[f1326,f1856])).
fof(f1326,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f978])).
fof(f8097,plain,(
  ( ! [X300] : (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X300)) ) | $spl26),
  inference(forward_demodulation,[],[f8096,f1515])).
fof(f8096,plain,(
  ( ! [X300] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X300),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X300)) ) | $spl26),
  inference(forward_demodulation,[],[f8095,f1856])).
fof(f8095,plain,(
  ( ! [X300] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X300),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X300)) ) | $spl26),
  inference(forward_demodulation,[],[f7382,f1446])).
fof(f7382,plain,(
  ( ! [X300] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X300) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X300))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(superposition,[],[f1326,f1856])).
fof(f8404,plain,(
  ( ! [X303] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X303)))) | ~p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8102,f1856])).
fof(f8102,plain,(
  ( ! [X303] : (~p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X303))))) ) | $spl26),
  inference(forward_demodulation,[],[f8101,f1515])).
fof(f8101,plain,(
  ( ! [X303] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X303))))) ) | $spl26),
  inference(forward_demodulation,[],[f7385,f1856])).
fof(f7385,plain,(
  ( ! [X303] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X303))))) ) | $spl26),
  inference(superposition,[],[f1345,f1856])).
fof(f8403,plain,(
  ( ! [X304] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X304))))))) ) | $spl162),
  inference(cnf_transformation,[],[f8403_D])).
fof(f8403_D,plain,(
  ( ! [X304] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X304))))))) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f8402,plain,(
  ( ! [X304] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X304)))))) | ~p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8103,f1856])).
fof(f8103,plain,(
  ( ! [X304] : (~p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X304))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7386,f1515])).
fof(f7386,plain,(
  ( ! [X304] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X304),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X304))))))) ) | $spl26),
  inference(superposition,[],[f1345,f1856])).
fof(f8400,plain,(
  ( ! [X307] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X307)))) | p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8107,f1856])).
fof(f8107,plain,(
  ( ! [X307] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X307))))) ) | $spl26),
  inference(forward_demodulation,[],[f8106,f1515])).
fof(f8106,plain,(
  ( ! [X307] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X307))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X307))))) ) | $spl26),
  inference(forward_demodulation,[],[f7389,f1856])).
fof(f7389,plain,(
  ( ! [X307] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X307))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X307))))) ) | $spl26),
  inference(superposition,[],[f1346,f1856])).
fof(f8399,plain,(
  ( ! [X308] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X308))))))) ) | $spl158),
  inference(cnf_transformation,[],[f8399_D])).
fof(f8399_D,plain,(
  ( ! [X308] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X308))))))) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f8398,plain,(
  ( ! [X308] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X308)))))) | p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8110,f1856])).
fof(f8110,plain,(
  ( ! [X308] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X308))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7390,f1515])).
fof(f7390,plain,(
  ( ! [X308] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X308),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X308))))))) ) | $spl26),
  inference(superposition,[],[f1346,f1856])).
fof(f8397,plain,(
  ( ! [X319] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X319) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X319),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl156),
  inference(cnf_transformation,[],[f8397_D])).
fof(f8397_D,plain,(
  ( ! [X319] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X319) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X319),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f8396,plain,(
  ( ! [X319] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X319) | p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X319),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f8132,f1856])).
fof(f8132,plain,(
  ( ! [X319] : (p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X319),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X319) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8131,f1515])).
fof(f8131,plain,(
  ( ! [X319] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X319),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X319),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X319) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f8130,f1856])).
fof(f8130,plain,(
  ( ! [X319] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X319),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X319),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X319) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(forward_demodulation,[],[f7401,f1160])).
fof(f7401,plain,(
  ( ! [X319] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X319),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X319),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X319) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(superposition,[],[f1349,f1856])).
fof(f8395,plain,(
  ( ! [X321] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X321),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X321) | p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8394,f1160])).
fof(f8394,plain,(
  ( ! [X321] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X321),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X321) | p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8393,f1154])).
fof(f8393,plain,(
  ( ! [X321] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X321) | p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X321),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl26),
  inference(forward_demodulation,[],[f8137,f1856])).
fof(f8137,plain,(
  ( ! [X321] : (p(s(bool,'F_0')) | s('type.num.num',X321) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X321),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7403,f1515])).
fof(f7403,plain,(
  ( ! [X321] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X321),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num',X321) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X321),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl26),
  inference(superposition,[],[f1349,f1856])).
fof(f8391,plain,(
  ( ! [X323] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X323),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X323)) ) | $spl26),
  inference(forward_demodulation,[],[f8390,f1160])).
fof(f8390,plain,(
  ( ! [X323] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X323),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X323)) ) | $spl26),
  inference(forward_demodulation,[],[f8145,f1154])).
fof(f8145,plain,(
  ( ! [X323] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X323) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X323),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl26),
  inference(forward_demodulation,[],[f8144,f1515])).
fof(f8144,plain,(
  ( ! [X323] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X323),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X323) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X323),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7405,f1856])).
fof(f7405,plain,(
  ( ! [X323] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X323) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X323),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X323),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl26),
  inference(superposition,[],[f1349,f1856])).
fof(f8389,plain,(
  ( ! [X329] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X329),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl152),
  inference(cnf_transformation,[],[f8389_D])).
fof(f8389_D,plain,(
  ( ! [X329] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X329),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f8158,plain,(
  ( ! [X329] : (~p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X329),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f8157,f1515])).
fof(f8157,plain,(
  ( ! [X329] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X329),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X329),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f8156,f1856])).
fof(f8156,plain,(
  ( ! [X329] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X329),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X329),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7411,f1160])).
fof(f7411,plain,(
  ( ! [X329] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X329),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X329),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(superposition,[],[f1351,f1856])).
fof(f1351,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f990])).
fof(f8388,plain,(
  ( ! [X331] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X331),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl150),
  inference(cnf_transformation,[],[f8388_D])).
fof(f8388_D,plain,(
  ( ! [X331] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X331),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f8387,plain,(
  ( ! [X331] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X331),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8386,f1160])).
fof(f8386,plain,(
  ( ! [X331] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X331),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8160,f1154])).
fof(f8160,plain,(
  ( ! [X331] : (~p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X331),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7413,f1515])).
fof(f7413,plain,(
  ( ! [X331] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X331),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X331),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl26),
  inference(superposition,[],[f1351,f1856])).
fof(f8385,plain,(
  ( ! [X333] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X333),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X333) | p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8384,f1856])).
fof(f8384,plain,(
  ( ! [X333] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X333) | p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X333),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f8163,f1856])).
fof(f8163,plain,(
  ( ! [X333] : (p(s(bool,'F_0')) | s('type.num.num',X333) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X333),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7415,f1515])).
fof(f7415,plain,(
  ( ! [X333] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X333),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num',X333) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X333),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(superposition,[],[f1352,f1856])).
fof(f8382,plain,(
  ( ! [X337] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X337),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X337)) ) | $spl26),
  inference(forward_demodulation,[],[f8176,f1856])).
fof(f8176,plain,(
  ( ! [X337] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X337) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X337),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f8175,f1515])).
fof(f8175,plain,(
  ( ! [X337] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X337),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X337) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X337),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7419,f1856])).
fof(f7419,plain,(
  ( ! [X337] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X337) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X337),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X337),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(superposition,[],[f1352,f1856])).
fof(f8381,plain,(
  ( ! [X341] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X341),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl146),
  inference(cnf_transformation,[],[f8381_D])).
fof(f8381_D,plain,(
  ( ! [X341] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X341),s('type.num.num','const.arithmetic.ZERO_0'))))) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f8380,plain,(
  ( ! [X341] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X341),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'F_0'))) ) | $spl26),
  inference(forward_demodulation,[],[f8182,f1856])).
fof(f8182,plain,(
  ( ! [X341] : (~p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X341),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(forward_demodulation,[],[f7423,f1515])).
fof(f7423,plain,(
  ( ! [X341] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X341),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X341),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl26),
  inference(superposition,[],[f1353,f1856])).
fof(f8363,plain,(
  ( ! [X387,X386] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X386),s('type.num.num',X387))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X386))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X387))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X387),s('type.num.num',X386))))) ) | $spl144),
  inference(cnf_transformation,[],[f8363_D])).
fof(f8363_D,plain,(
  ( ! [X387,X386] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X386),s('type.num.num',X387))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X386))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X387))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X387),s('type.num.num',X386))))) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f8362,plain,(
  ( ! [X387,X386] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X386),s('type.num.num',X387))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X386))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X387))))) | ~p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X387),s('type.num.num',X386))))) ) | $spl26),
  inference(forward_demodulation,[],[f8265,f1856])).
fof(f8265,plain,(
  ( ! [X387,X386] : (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X386),s('type.num.num',X387))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X386))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X387))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X387),s('type.num.num',X386))))) ) | $spl26),
  inference(forward_demodulation,[],[f7478,f1515])).
fof(f7478,plain,(
  ( ! [X387,X386] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X386),s('type.num.num',X387))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X386))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X387))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X387),s('type.num.num',X386))))) ) | $spl26),
  inference(superposition,[],[f1437,f1856])).
fof(f7833,plain,(
  $false | ($spl17 | $spl26)),
  inference(subsumption_resolution,[],[f7697,f1827])).
fof(f7697,plain,(
  p(s(bool,'F_0')) | $spl26),
  inference(trivial_inequality_removal,[],[f7229])).
fof(f7229,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | p(s(bool,'F_0')) | $spl26),
  inference(superposition,[],[f1504,f1856])).
fof(f1504,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f1072])).
fof(f7832,plain,(
  $false | ($spl17 | $spl26)),
  inference(subsumption_resolution,[],[f7698,f1827])).
fof(f7698,plain,(
  p(s(bool,'F_0')) | $spl26),
  inference(trivial_inequality_removal,[],[f7228])).
fof(f7228,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | p(s(bool,'F_0')) | $spl26),
  inference(superposition,[],[f1502,f1856])).
fof(f7095,plain,(
  ( ! [X244,X245] : (p(s(bool,X244)) | ~p(s(bool,X245)) | s(bool,'F_0') != s(bool,X245)) ) | $spl17),
  inference(resolution,[],[f1827,f1535])).
fof(f6983,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,'F_0') != s(bool,X30) | s(bool,X29) != s(bool,X31)) ) | $spl17),
  inference(resolution,[],[f1827,f1087])).
fof(f6981,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,'F_0') != s(bool,X24)) ) | $spl17),
  inference(resolution,[],[f1827,f1086])).
fof(f6979,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,'F_0') != s(bool,X18)) ) | $spl17),
  inference(resolution,[],[f1827,f1085])).
fof(f6978,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,'F_0') != s(bool,X15) | s(bool,X14) != s(bool,X16)) ) | $spl17),
  inference(resolution,[],[f1827,f1083])).
fof(f6976,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,'F_0') != s(bool,X9)) ) | $spl17),
  inference(resolution,[],[f1827,f1081])).
fof(f6955,plain,(
  ( ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) | p(s(bool,'F_0')) | s('type.num.num',X10) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10)))) ) | $spl27),
  inference(forward_demodulation,[],[f6909,f1446])).
fof(f6909,plain,(
  ( ! [X10] : (p(s(bool,'F_0')) | s('type.num.num',X10) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl27),
  inference(forward_demodulation,[],[f6908,f1515])).
fof(f6908,plain,(
  ( ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num',X10) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl27),
  inference(forward_demodulation,[],[f6852,f1446])).
fof(f6852,plain,(
  ( ! [X10] : (s('type.num.num',X10) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl27),
  inference(superposition,[],[f1857,f1324])).
fof(f6912,plain,(
  ( ! [X11] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | s('type.num.num',X11) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) ) | $spl27),
  inference(forward_demodulation,[],[f6911,f1515])).
fof(f6911,plain,(
  ( ! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | s('type.num.num',X11) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) ) | $spl27),
  inference(forward_demodulation,[],[f6910,f1446])).
fof(f6910,plain,(
  ( ! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | s('type.num.num',X11) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl27),
  inference(forward_demodulation,[],[f6853,f1446])).
fof(f6853,plain,(
  ( ! [X11] : (s('type.num.num',X11) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl27),
  inference(superposition,[],[f1857,f1324])).
fof(f6953,plain,(
  ( ! [X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X13) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13)))) ) | $spl140),
  inference(cnf_transformation,[],[f6953_D])).
fof(f6953_D,plain,(
  ( ! [X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X13) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13)))) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f6952,plain,(
  ( ! [X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'F_0')) | s('type.num.num',X13) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13)))) ) | $spl27),
  inference(forward_demodulation,[],[f6913,f1160])).
fof(f6913,plain,(
  ( ! [X13] : (p(s(bool,'F_0')) | s('type.num.num',X13) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl27),
  inference(forward_demodulation,[],[f6855,f1515])).
fof(f6855,plain,(
  ( ! [X13] : (s('type.num.num',X13) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl27),
  inference(superposition,[],[f1857,f1349])).
fof(f6916,plain,(
  ( ! [X15] : (p(s(bool,'F_0')) | s('type.num.num',X15) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl27),
  inference(forward_demodulation,[],[f6857,f1515])).
fof(f6857,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl27),
  inference(superposition,[],[f1857,f1352])).
fof(f6922,plain,(
  $false | ($spl16 | $spl27)),
  inference(subsumption_resolution,[],[f6900,f1828])).
fof(f6900,plain,(
  ~p(s(bool,'F_0')) | $spl27),
  inference(trivial_inequality_removal,[],[f6865])).
fof(f6865,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | ~p(s(bool,'F_0')) | $spl27),
  inference(superposition,[],[f1857,f1503])).
fof(f6921,plain,(
  $false | ($spl16 | $spl27)),
  inference(subsumption_resolution,[],[f6901,f1828])).
fof(f6901,plain,(
  ~p(s(bool,'F_0')) | $spl27),
  inference(trivial_inequality_removal,[],[f6864])).
fof(f6864,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | ~p(s(bool,'F_0')) | $spl27),
  inference(superposition,[],[f1857,f1505])).
fof(f6791,plain,(
  ( ! [X243,X242] : (p(s(bool,X242)) | p(s(bool,X243)) | s(bool,'F_0') != s(bool,X243)) ) | $spl16),
  inference(resolution,[],[f1828,f1535])).
fof(f6680,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,'F_0') != s(bool,X29) | s(bool,X30) != s(bool,X31)) ) | $spl16),
  inference(resolution,[],[f1828,f1087])).
fof(f6677,plain,(
  ( ! [X21,X22,X20] : (p(s(bool,X20)) | ~p(s(bool,X21)) | p(s(bool,X22)) | s(bool,'F_0') != s(bool,X22)) ) | $spl16),
  inference(resolution,[],[f1828,f1086])).
fof(f6676,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,'F_0') != s(bool,X18)) ) | $spl16),
  inference(resolution,[],[f1828,f1085])).
fof(f6675,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,'F_0') != s(bool,X14) | s(bool,X15) != s(bool,X16)) ) | $spl16),
  inference(resolution,[],[f1828,f1083])).
fof(f6673,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,'F_0') != s(bool,X9)) ) | $spl16),
  inference(resolution,[],[f1828,f1081])).
fof(f1908,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl35),
  inference(cnf_transformation,[],[f1908_D])).
fof(f1908_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f6666,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f4342,f1161])).
fof(f4342,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f4341,f1451])).
fof(f4341,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f4340,f1161])).
fof(f4340,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f4204,f1469])).
fof(f4204,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(superposition,[],[f1546,f1465])).
fof(f6665,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f4347,f1161])).
fof(f4347,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f4346,f1451])).
fof(f4346,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f4345,f1161])).
fof(f4345,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f4205,f1469])).
fof(f4205,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(superposition,[],[f1546,f1467])).
fof(f2329,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f2328,f1161])).
fof(f2328,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f2327,f1156])).
fof(f2327,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl2),
  inference(forward_demodulation,[],[f2183,f1451])).
fof(f2183,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl2),
  inference(superposition,[],[f1546,f1150])).
fof(f2311,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f2310,f1161])).
fof(f2310,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f2309,f1451])).
fof(f2309,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f2308,f1161])).
fof(f2308,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f2167,f1469])).
fof(f2167,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(superposition,[],[f1546,f1465])).
fof(f2326,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f2325,f1161])).
fof(f2325,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f2324,f1156])).
fof(f2324,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl2),
  inference(forward_demodulation,[],[f2182,f1451])).
fof(f2182,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl2),
  inference(superposition,[],[f1546,f1148])).
fof(f2315,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f2314,f1161])).
fof(f2314,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f2313,f1451])).
fof(f2313,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f2312,f1161])).
fof(f2312,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f2168,f1469])).
fof(f2168,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(superposition,[],[f1546,f1467])).
fof(f4552,plain,(
  ( ! [X53] : (~p(s(bool,'F_0')) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X53),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f4551,f1515])).
fof(f4551,plain,(
  ( ! [X52,X53] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X52))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X53),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f4550,f1446])).
fof(f4550,plain,(
  ( ! [X52,X53] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X52))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X53),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f4549,f1187])).
fof(f4549,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X51),s('type.list.list'(sK14),X52))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X53),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f4518,f1161])).
fof(f4518,plain,(
  ( ! [X52,X53,X51] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X53),s('type.list.list'(sK14),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X51),s('type.list.list'(sK14),X52))))),s('type.num.num','const.num.|48|_0'))))) ) | $spl0),
  inference(superposition,[],[f1545,f1448])).
fof(f6664,plain,(
  ( ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) | p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f5924,f1446])).
fof(f5924,plain,(
  ( ! [X10] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl2),
  inference(forward_demodulation,[],[f5923,f1515])).
fof(f5923,plain,(
  ( ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl2),
  inference(forward_demodulation,[],[f5787,f1446])).
fof(f5787,plain,(
  ( ! [X10] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl2),
  inference(superposition,[],[f1546,f1324])).
fof(f5929,plain,(
  ( ! [X11] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f5928,f1515])).
fof(f5928,plain,(
  ( ! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f5927,f1446])).
fof(f5927,plain,(
  ( ! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(forward_demodulation,[],[f5788,f1446])).
fof(f5788,plain,(
  ( ! [X11] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(superposition,[],[f1546,f1324])).
fof(f2268,plain,(
  ( ! [X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl60),
  inference(cnf_transformation,[],[f2268_D])).
fof(f2268_D,plain,(
  ( ! [X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f6663,plain,(
  ( ! [X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f5931,f1160])).
fof(f5931,plain,(
  ( ! [X13] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f5790,f1515])).
fof(f5790,plain,(
  ( ! [X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f1546,f1349])).
fof(f5936,plain,(
  ( ! [X15] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(forward_demodulation,[],[f5792,f1515])).
fof(f5792,plain,(
  ( ! [X15] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(superposition,[],[f1546,f1352])).
fof(f1890,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl29),
  inference(cnf_transformation,[],[f1890_D])).
fof(f1890_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f6660,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f5960,f1161])).
fof(f5960,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.|48|_0')))) | $spl2),
  inference(forward_demodulation,[],[f5959,f1451])).
fof(f5959,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.|48|_0')))) | $spl2),
  inference(forward_demodulation,[],[f5958,f1161])).
fof(f5958,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.|48|_0')))) | $spl2),
  inference(forward_demodulation,[],[f5835,f1469])).
fof(f5835,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.|48|_0')))) | $spl2),
  inference(superposition,[],[f1546,f1448])).
fof(f1896,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl31),
  inference(cnf_transformation,[],[f1896_D])).
fof(f1896_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f6659,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f5965,f1156])).
fof(f5965,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl2),
  inference(forward_demodulation,[],[f5964,f1451])).
fof(f5964,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl2),
  inference(forward_demodulation,[],[f5963,f1161])).
fof(f5963,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl2),
  inference(forward_demodulation,[],[f5836,f1469])).
fof(f5836,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl2),
  inference(superposition,[],[f1546,f1461])).
fof(f1902,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl33),
  inference(cnf_transformation,[],[f1902_D])).
fof(f1902_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f6658,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f5970,f1161])).
fof(f5970,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f5969,f1451])).
fof(f5969,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f5968,f1161])).
fof(f5968,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f5837,f1469])).
fof(f5837,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(superposition,[],[f1546,f1463])).
fof(f6657,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f5975,f1161])).
fof(f5975,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f5974,f1451])).
fof(f5974,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f5973,f1161])).
fof(f5973,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f5838,f1469])).
fof(f5838,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(superposition,[],[f1546,f1465])).
fof(f6656,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f5980,f1161])).
fof(f5980,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f5979,f1451])).
fof(f5979,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f5978,f1161])).
fof(f5978,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(forward_demodulation,[],[f5839,f1469])).
fof(f5839,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl2),
  inference(superposition,[],[f1546,f1467])).
fof(f6655,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f6654,f1161])).
fof(f6654,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f5993,f1156])).
fof(f5993,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl2),
  inference(forward_demodulation,[],[f5853,f1451])).
fof(f5853,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl2),
  inference(superposition,[],[f1546,f1148])).
fof(f6653,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f6652,f1161])).
fof(f6652,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f5996,f1156])).
fof(f5996,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl2),
  inference(forward_demodulation,[],[f5854,f1451])).
fof(f5854,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl2),
  inference(superposition,[],[f1546,f1150])).
fof(f6000,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f5999,f1451])).
fof(f5999,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f5855,f1161])).
fof(f5855,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(superposition,[],[f1546,f1152])).
fof(f6003,plain,(
  ( ! [X14,X13] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f6002,f1451])).
fof(f6002,plain,(
  ( ! [X14,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f5856,f1161])).
fof(f5856,plain,(
  ( ! [X14,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f1546,f1297])).
fof(f1944,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl42),
  inference(cnf_transformation,[],[f1944_D])).
fof(f1944_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f6651,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f6010,f1161])).
fof(f6010,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f6009,f1451])).
fof(f6009,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f5866,f1161])).
fof(f5866,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(superposition,[],[f1546,f1415])).
fof(f6650,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f6014,f1161])).
fof(f6014,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f6013,f1451])).
fof(f6013,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f5867,f1161])).
fof(f5867,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(superposition,[],[f1546,f1417])).
fof(f6649,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f6018,f1161])).
fof(f6018,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f6017,f1451])).
fof(f6017,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f5868,f1161])).
fof(f5868,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(superposition,[],[f1546,f1432])).
fof(f1955,plain,(
  ( ! [X24] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl44),
  inference(cnf_transformation,[],[f1955_D])).
fof(f1955_D,plain,(
  ( ! [X24] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f6648,plain,(
  ( ! [X24] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'F_0'))) ) | $spl2),
  inference(forward_demodulation,[],[f6647,f1481])).
fof(f6647,plain,(
  ( ! [X24] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f6022,f1481])).
fof(f6022,plain,(
  ( ! [X24] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f6021,f1451])).
fof(f6021,plain,(
  ( ! [X24] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f5869,f1161])).
fof(f5869,plain,(
  ( ! [X24] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f1546,f1470])).
fof(f1959,plain,(
  ( ! [X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num',X29)))) ) | $spl46),
  inference(cnf_transformation,[],[f1959_D])).
fof(f1959_D,plain,(
  ( ! [X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num',X29)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f6646,plain,(
  ( ! [X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num',X29))) | p(s(bool,'F_0'))) ) | $spl2),
  inference(forward_demodulation,[],[f6027,f1161])).
fof(f6027,plain,(
  ( ! [X29] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num',X29)))) ) | $spl2),
  inference(forward_demodulation,[],[f6026,f1451])).
fof(f6026,plain,(
  ( ! [X29] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num',X29)))) ) | $spl2),
  inference(forward_demodulation,[],[f5872,f1161])).
fof(f5872,plain,(
  ( ! [X29] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num',X29)))) ) | $spl2),
  inference(superposition,[],[f1546,f1519])).
fof(f6645,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'F_0'))) ) | $spl2),
  inference(forward_demodulation,[],[f6031,f1161])).
fof(f6031,plain,(
  ( ! [X30] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(forward_demodulation,[],[f6030,f1451])).
fof(f6030,plain,(
  ( ! [X30] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(forward_demodulation,[],[f5873,f1161])).
fof(f5873,plain,(
  ( ! [X30] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(superposition,[],[f1546,f1520])).
fof(f6164,plain,(
  ( ! [X53] : (~p(s(bool,'F_0')) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X53),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f6163,f1515])).
fof(f6163,plain,(
  ( ! [X52,X53] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X52))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X53),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f6162,f1446])).
fof(f6162,plain,(
  ( ! [X52,X53] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X52))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X53),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f6161,f1187])).
fof(f6161,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X51),s('type.list.list'(sK14),X52))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X53),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f6130,f1161])).
fof(f6130,plain,(
  ( ! [X52,X53,X51] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X53),s('type.list.list'(sK14),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X51),s('type.list.list'(sK14),X52))))),s('type.num.num','const.num.|48|_0'))))) ) | $spl0),
  inference(superposition,[],[f1545,f1448])).
fof(f6570,plain,(
  ( ! [X370] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X370)))) ) | $spl136),
  inference(cnf_transformation,[],[f6570_D])).
fof(f6570_D,plain,(
  ( ! [X370] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X370)))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f6568,plain,(
  sP13('F_0','F_0') | $spl132),
  inference(cnf_transformation,[],[f6568_D])).
fof(f6568_D,plain,(
  sP13('F_0','F_0') <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f6403,plain,(
  ( ! [X371] : (sP13('F_0','F_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X371)))) ) | $spl17),
  inference(resolution,[],[f3126,f1510])).
fof(f3126,plain,(
  ( ! [X214] : (~p(s(bool,X214)) | sP13(X214,'F_0')) ) | $spl17),
  inference(resolution,[],[f1827,f1329])).
fof(f6402,plain,(
  ( ! [X370] : (sP13('F_0','F_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X370)))) ) | $spl17),
  inference(resolution,[],[f3126,f1508])).
fof(f6569,plain,(
  ( ! [X368] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X368)))) ) | $spl134),
  inference(cnf_transformation,[],[f6569_D])).
fof(f6569_D,plain,(
  ( ! [X368] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X368)))) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f6401,plain,(
  ( ! [X369] : (sP13('F_0','F_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X369)))) ) | $spl17),
  inference(resolution,[],[f3126,f1504])).
fof(f6400,plain,(
  ( ! [X368] : (sP13('F_0','F_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X368)))) ) | $spl17),
  inference(resolution,[],[f3126,f1502])).
fof(f6399,plain,(
  ( ! [X366,X367] : (sP13('F_0','F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X366))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X367)))) ) | $spl17),
  inference(resolution,[],[f3126,f1496])).
fof(f6398,plain,(
  ( ! [X364,X365] : (sP13('F_0','F_0') | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X364))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X365)))) ) | $spl17),
  inference(resolution,[],[f3126,f1494])).
fof(f6394,plain,(
  ( ! [X356,X357,X355] : (sP13(X355,'F_0') | p(s(bool,X356)) | ~p(s(bool,X357)) | s(bool,X355) != s(bool,X357)) ) | $spl17),
  inference(resolution,[],[f3126,f1535])).
fof(f6282,plain,(
  ( ! [X30,X28,X31,X29] : (sP13(X28,'F_0') | ~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X30) | s(bool,X29) != s(bool,X31)) ) | $spl17),
  inference(resolution,[],[f3126,f1087])).
fof(f6280,plain,(
  ( ! [X23,X21,X22,X20] : (sP13(X20,'F_0') | p(s(bool,X21)) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X20) != s(bool,X22)) ) | $spl17),
  inference(resolution,[],[f3126,f1086])).
fof(f6278,plain,(
  ( ! [X14,X12,X15,X13] : (sP13(X12,'F_0') | p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl17),
  inference(resolution,[],[f3126,f1085])).
fof(f6277,plain,(
  ( ! [X10,X8,X11,X9] : (sP13(X8,'F_0') | ~p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X10) | s(bool,X9) != s(bool,X11)) ) | $spl17),
  inference(resolution,[],[f3126,f1083])).
fof(f6275,plain,(
  ( ! [X2,X0,X3,X1] : (sP13(X0,'F_0') | p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl17),
  inference(resolution,[],[f3126,f1081])).
fof(f4579,plain,(
  ( ! [X35,X36,X34] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X34),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X35),s('type.list.list'(sK14),X36)))))))) ) | $spl84),
  inference(cnf_transformation,[],[f4579_D])).
fof(f4579_D,plain,(
  ( ! [X35,X36,X34] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X34),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X35),s('type.list.list'(sK14),X36)))))))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f6185,plain,(
  ( ! [X39,X37,X38] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X37),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X38),s('type.list.list'(sK14),X39))))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f6148,f1161])).
fof(f6148,plain,(
  ( ! [X39,X37,X38] : (s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X37),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X38),s('type.list.list'(sK14),X39)))))))) ) | $spl0),
  inference(superposition,[],[f1545,f1467])).
fof(f6184,plain,(
  ( ! [X35,X36,X34] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X34),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X35),s('type.list.list'(sK14),X36))))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f6147,f1161])).
fof(f6147,plain,(
  ( ! [X35,X36,X34] : (s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X34),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X35),s('type.list.list'(sK14),X36)))))))) ) | $spl0),
  inference(superposition,[],[f1545,f1465])).
fof(f4577,plain,(
  ( ! [X33] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X33))))))))))) ) | $spl82),
  inference(cnf_transformation,[],[f4577_D])).
fof(f4577_D,plain,(
  ( ! [X33] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X33))))))))))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f6183,plain,(
  ( ! [X33] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X33)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f6182,f1161])).
fof(f6182,plain,(
  ( ! [X33] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X33)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f6181,f1187])).
fof(f6181,plain,(
  ( ! [X33,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X32),s('type.list.list'(sK14),X33)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f6146,f1187])).
fof(f6146,plain,(
  ( ! [X33,X31,X32] : (s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X31),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X32),s('type.list.list'(sK14),X33))))))))))) ) | $spl0),
  inference(superposition,[],[f1545,f1463])).
fof(f4573,plain,(
  ( ! [X30] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X30))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl80),
  inference(cnf_transformation,[],[f4573_D])).
fof(f4573_D,plain,(
  ( ! [X30] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X30))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f6180,plain,(
  ( ! [X30] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X30))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f6179,f1187])).
fof(f6179,plain,(
  ( ! [X30,X29] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X29),s('type.list.list'(sK14),X30))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f6178,f1187])).
fof(f6178,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X28),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X29),s('type.list.list'(sK14),X30))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f6145,f1156])).
fof(f6145,plain,(
  ( ! [X30,X28,X29] : (s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X28),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X29),s('type.list.list'(sK14),X30))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl0),
  inference(superposition,[],[f1545,f1461])).
fof(f6170,plain,(
  ( ! [X64,X65,X63] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X63),s('type.list.list'(sK14),X64))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X65),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f6134,f1161])).
fof(f6134,plain,(
  ( ! [X64,X65,X63] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X65),s('type.list.list'(sK14),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X63),s('type.list.list'(sK14),X64)))))) ) | $spl0),
  inference(superposition,[],[f1545,f1467])).
fof(f6169,plain,(
  ( ! [X61,X62,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X60),s('type.list.list'(sK14),X61))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X62),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f6133,f1161])).
fof(f6133,plain,(
  ( ! [X61,X62,X60] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X62),s('type.list.list'(sK14),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X60),s('type.list.list'(sK14),X61)))))) ) | $spl0),
  inference(superposition,[],[f1545,f1465])).
fof(f4559,plain,(
  ( ! [X58] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X58))))))))) ) | $spl76),
  inference(cnf_transformation,[],[f4559_D])).
fof(f4559_D,plain,(
  ( ! [X58] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X58))))))))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f6168,plain,(
  ( ! [X59,X58] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X58)))))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X59),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f6167,f1161])).
fof(f6167,plain,(
  ( ! [X59,X58] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X58)))))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X59),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f6132,f1187])).
fof(f6132,plain,(
  ( ! [X59,X57,X58] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X59),s('type.list.list'(sK14),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X57),s('type.list.list'(sK14),X58))))))))) ) | $spl0),
  inference(superposition,[],[f1545,f1463])).
fof(f4556,plain,(
  ( ! [X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X55))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl74),
  inference(cnf_transformation,[],[f4556_D])).
fof(f4556_D,plain,(
  ( ! [X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X55))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f6166,plain,(
  ( ! [X56,X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X55))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X56),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f6165,f1187])).
fof(f6165,plain,(
  ( ! [X54,X56,X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X54),s('type.list.list'(sK14),X55))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X56),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f6131,f1156])).
fof(f6131,plain,(
  ( ! [X54,X56,X55] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X56),s('type.list.list'(sK14),'const.list.NIL_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X54),s('type.list.list'(sK14),X55))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl0),
  inference(superposition,[],[f1545,f1461])).
fof(f5769,plain,(
  ( ! [X248,X247] : (p(s(bool,X247)) | p(s(bool,X248)) | s(bool,X248) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1535])).
fof(f5658,plain,(
  ( ! [X35,X36,X34] : (p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X35) != s(bool,X36)) ) | $spl2),
  inference(resolution,[],[f1546,f1087])).
fof(f5655,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | p(s(bool,X27)) | s(bool,X27) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1086])).
fof(f5654,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X22) != s(bool,X24) | s(bool,X23) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1085])).
fof(f5653,plain,(
  ( ! [X21,X19,X20] : (p(s(bool,X19)) | ~p(s(bool,X20)) | s(bool,X19) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X20) != s(bool,X21)) ) | $spl2),
  inference(resolution,[],[f1546,f1083])).
fof(f5651,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1081])).
fof(f5649,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl2),
  inference(resolution,[],[f1546,f1357])).
fof(f5648,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl2),
  inference(resolution,[],[f1546,f1357])).
fof(f5647,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(resolution,[],[f1546,f1352])).
fof(f5391,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | $spl106),
  inference(cnf_transformation,[],[f5391_D])).
fof(f5391_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f5600,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5599,f1161])).
fof(f5599,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5598,f1187])).
fof(f5598,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5257,f1187])).
fof(f5257,plain,(
  s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))))))) | $spl4),
  inference(superposition,[],[f1464,f1550])).
fof(f1464,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f1062])).
fof(f1915,plain,(
  s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl36),
  inference(cnf_transformation,[],[f1915_D])).
fof(f1915_D,plain,(
  s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f5392,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | $spl107),
  inference(cnf_transformation,[],[f5392_D])).
fof(f5392_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) <=> ~$spl107),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl107])])).
fof(f5597,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5596,f1161])).
fof(f5596,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5595,f1187])).
fof(f5595,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5255,f1187])).
fof(f5255,plain,(
  s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))))))) | $spl4),
  inference(superposition,[],[f1463,f1550])).
fof(f5592,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5591,f1187])).
fof(f5591,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5590,f1187])).
fof(f5590,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5253,f1156])).
fof(f5253,plain,(
  s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(superposition,[],[f1462,f1550])).
fof(f5387,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl105),
  inference(cnf_transformation,[],[f5387_D])).
fof(f5387_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl105),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl105])])).
fof(f5589,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5588,f1187])).
fof(f5588,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5587,f1187])).
fof(f5587,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5251,f1156])).
fof(f5251,plain,(
  s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(superposition,[],[f1461,f1550])).
fof(f5537,plain,(
  ( ! [X173,X174] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X173),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X174),s('type.list.list'(sK14),'const.list.NIL_0')))))) ) | $spl124),
  inference(cnf_transformation,[],[f5537_D])).
fof(f5537_D,plain,(
  ( ! [X173,X174] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X173),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X174),s('type.list.list'(sK14),'const.list.NIL_0')))))) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f5544,plain,(
  ( ! [X177,X178] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X177),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X178),s('type.list.list'(sK14),'const.list.NIL_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))) ) | $spl4),
  inference(forward_demodulation,[],[f5543,f1550])).
fof(f5543,plain,(
  ( ! [X177,X178] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X177),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X178),s('type.list.list'(sK14),'const.list.NIL_0')))))) ) | $spl4),
  inference(forward_demodulation,[],[f5229,f1156])).
fof(f5229,plain,(
  ( ! [X177,X178] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X177),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X178),s('type.list.list'(sK14),'const.list.NIL_0')))))) ) | $spl4),
  inference(superposition,[],[f1195,f1550])).
fof(f5539,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK44('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK45('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl4),
  inference(forward_demodulation,[],[f5538,f1550])).
fof(f5538,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK44('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK45('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(forward_demodulation,[],[f5227,f1156])).
fof(f5227,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK44('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK45('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(superposition,[],[f1194,f1550])).
fof(f5536,plain,(
  ( ! [X173,X174] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X173),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X174),s('type.list.list'(sK14),'const.list.NIL_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))) ) | $spl4),
  inference(forward_demodulation,[],[f5535,f1550])).
fof(f5535,plain,(
  ( ! [X173,X174] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X173),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X174),s('type.list.list'(sK14),'const.list.NIL_0')))))) ) | $spl4),
  inference(forward_demodulation,[],[f5226,f1156])).
fof(f5226,plain,(
  ( ! [X173,X174] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X173),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X174),s('type.list.list'(sK14),'const.list.NIL_0')))))) ) | $spl4),
  inference(superposition,[],[f1193,f1550])).
fof(f5531,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK42('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK43('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl4),
  inference(forward_demodulation,[],[f5530,f1550])).
fof(f5530,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK42('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK43('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(forward_demodulation,[],[f5224,f1156])).
fof(f5224,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK42('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK43('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(superposition,[],[f1192,f1550])).
fof(f5527,plain,(
  ( ! [X167,X168] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X167),s('type.list.list'(sK14),X168)))) ) | $spl4),
  inference(forward_demodulation,[],[f5526,f1156])).
fof(f5526,plain,(
  ( ! [X167,X168] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X167),s('type.list.list'(sK14),X168)))) ) | $spl4),
  inference(forward_demodulation,[],[f5525,f1187])).
fof(f5525,plain,(
  ( ! [X167,X168] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X167),s('type.list.list'(sK14),X168)))) ) | $spl4),
  inference(forward_demodulation,[],[f5222,f1187])).
fof(f5222,plain,(
  ( ! [X167,X168] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X167),s('type.list.list'(sK14),X168))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))))))) ) | $spl4),
  inference(superposition,[],[f1191,f1550])).
fof(f5518,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl114),
  inference(cnf_transformation,[],[f5518_D])).
fof(f5518_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f5523,plain,(
  ( ! [X165,X166] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X165),s('type.list.list'(sK14),X166))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl4),
  inference(forward_demodulation,[],[f5522,f1550])).
fof(f5522,plain,(
  ( ! [X165,X166] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X165),s('type.list.list'(sK14),X166))) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))) ) | $spl4),
  inference(forward_demodulation,[],[f5221,f1156])).
fof(f5221,plain,(
  ( ! [X165,X166] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X165),s('type.list.list'(sK14),X166))) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))) ) | $spl4),
  inference(superposition,[],[f1191,f1550])).
fof(f5517,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK41('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK40('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl4),
  inference(forward_demodulation,[],[f5516,f1550])).
fof(f5516,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK41('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK40('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))) | $spl4),
  inference(forward_demodulation,[],[f5220,f1156])).
fof(f5220,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK41('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK40('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))) | $spl4),
  inference(superposition,[],[f1190,f1550])).
fof(f1545,plain,(
  ( ! [X4,X2,X3] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X3),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X4),s('type.list.list'(sK14),X2)))))) ) | $spl0),
  inference(cnf_transformation,[],[f1545_D])).
fof(f1545_D,plain,(
  ( ! [X4,X2,X3] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X3),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X4),s('type.list.list'(sK14),X2)))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f5515,plain,(
  ( ! [X163,X164,X162] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X162),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X163),s('type.list.list'(sK14),X164))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl4),
  inference(forward_demodulation,[],[f5514,f1550])).
fof(f5514,plain,(
  ( ! [X163,X164,X162] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X162),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X163),s('type.list.list'(sK14),X164)))))) ) | $spl4),
  inference(forward_demodulation,[],[f5219,f1156])).
fof(f5219,plain,(
  ( ! [X163,X164,X162] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X162),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X163),s('type.list.list'(sK14),X164)))))) ) | $spl4),
  inference(superposition,[],[f1189,f1550])).
fof(f5513,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | $spl112),
  inference(cnf_transformation,[],[f5513_D])).
fof(f5513_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f5511,plain,(
  ( ! [X158,X156,X157] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X156),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X157),s('type.list.list'(sK14),X158)))))) ) | $spl4),
  inference(forward_demodulation,[],[f5510,f1156])).
fof(f5510,plain,(
  ( ! [X158,X156,X157] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X156),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X157),s('type.list.list'(sK14),X158)))))) ) | $spl4),
  inference(forward_demodulation,[],[f5509,f1187])).
fof(f5509,plain,(
  ( ! [X158,X156,X157] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X156),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X157),s('type.list.list'(sK14),X158)))))) ) | $spl4),
  inference(forward_demodulation,[],[f5217,f1187])).
fof(f5217,plain,(
  ( ! [X158,X156,X157] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X156),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X157),s('type.list.list'(sK14),X158))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))))))) ) | $spl4),
  inference(superposition,[],[f1189,f1550])).
fof(f5504,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK38('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK39('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK37('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl4),
  inference(forward_demodulation,[],[f5503,f1550])).
fof(f5503,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK38('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK39('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK37('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))))) | $spl4),
  inference(forward_demodulation,[],[f5216,f1156])).
fof(f5216,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK38('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK39('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)),s('type.list.list'(sK14),sK37('const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))),sK14)))))) | $spl4),
  inference(superposition,[],[f1188,f1550])).
fof(f5390,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5389,f1161])).
fof(f5389,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5388,f1187])).
fof(f5388,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5141,f1187])).
fof(f5141,plain,(
  s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))))))) | $spl4),
  inference(superposition,[],[f1550,f1463])).
fof(f5385,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5384,f1187])).
fof(f5384,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5383,f1187])).
fof(f5383,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | $spl4),
  inference(forward_demodulation,[],[f5140,f1156])).
fof(f5140,plain,(
  s('type.list.list'(sK14),'const.list.NIL_0') = s('type.list.list'(sK14),sK15) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(superposition,[],[f1550,f1461])).
fof(f5376,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | $spl4),
  inference(forward_demodulation,[],[f5132,f1161])).
fof(f5132,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) | $spl4),
  inference(superposition,[],[f1550,f1467])).
fof(f5373,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | $spl4),
  inference(forward_demodulation,[],[f5131,f1161])).
fof(f5131,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) | $spl4),
  inference(superposition,[],[f1550,f1465])).
fof(f5372,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))) | $spl101),
  inference(cnf_transformation,[],[f5372_D])).
fof(f5372_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))) <=> ~$spl101),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl101])])).
fof(f5370,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | $spl4),
  inference(forward_demodulation,[],[f5369,f1161])).
fof(f5369,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | $spl4),
  inference(forward_demodulation,[],[f5130,f1187])).
fof(f5130,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))))) | $spl4),
  inference(superposition,[],[f1550,f1463])).
fof(f5368,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl99),
  inference(cnf_transformation,[],[f5368_D])).
fof(f5368_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl99),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl99])])).
fof(f5364,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | $spl4),
  inference(forward_demodulation,[],[f5363,f1187])).
fof(f5363,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | $spl4),
  inference(forward_demodulation,[],[f5129,f1156])).
fof(f5129,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.NIL_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(superposition,[],[f1550,f1461])).
fof(f5358,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(forward_demodulation,[],[f5121,f1161])).
fof(f5121,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) | $spl4),
  inference(superposition,[],[f1550,f1467])).
fof(f5355,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(forward_demodulation,[],[f5120,f1161])).
fof(f5120,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))) | $spl4),
  inference(superposition,[],[f1550,f1465])).
fof(f5352,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(forward_demodulation,[],[f5119,f1161])).
fof(f5119,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16)))))) | $spl4),
  inference(superposition,[],[f1550,f1463])).
fof(f5351,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl91),
  inference(cnf_transformation,[],[f5351_D])).
fof(f5351_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl91),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl91])])).
fof(f5349,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(forward_demodulation,[],[f5118,f1156])).
fof(f5118,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(superposition,[],[f1550,f1461])).
fof(f5344,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | $spl4),
  inference(forward_demodulation,[],[f5117,f1161])).
fof(f5117,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK16))),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(superposition,[],[f1550,f1448])).
fof(f4857,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1535])).
fof(f4745,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X23) != s(bool,X25)) ) | $spl3),
  inference(resolution,[],[f1547,f1087])).
fof(f4743,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1086])).
fof(f4741,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1085])).
fof(f4740,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X8) != s(bool,X10)) ) | $spl3),
  inference(resolution,[],[f1547,f1083])).
fof(f4738,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1081])).
fof(f4699,plain,(
  ( ! [X235,X234] : (p(s(bool,X234)) | p(s(bool,X235)) | s(bool,'T_0') != s(bool,X235)) ) | $spl22),
  inference(resolution,[],[f1837,f1535])).
fof(f4588,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,'T_0') != s(bool,X21) | s(bool,X22) != s(bool,X23)) ) | $spl22),
  inference(resolution,[],[f1837,f1087])).
fof(f4585,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,'T_0') != s(bool,X14)) ) | $spl22),
  inference(resolution,[],[f1837,f1086])).
fof(f4584,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,'T_0') != s(bool,X10)) ) | $spl22),
  inference(resolution,[],[f1837,f1085])).
fof(f4583,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,'T_0') != s(bool,X6) | s(bool,X7) != s(bool,X8)) ) | $spl22),
  inference(resolution,[],[f1837,f1083])).
fof(f4581,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,'T_0') != s(bool,X1)) ) | $spl22),
  inference(resolution,[],[f1837,f1081])).
fof(f1855,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'T_0')) | $spl3),
  inference(forward_demodulation,[],[f1854,f1161])).
fof(f1854,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'T_0')) | $spl3),
  inference(forward_demodulation,[],[f1853,f1156])).
fof(f1853,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl3),
  inference(forward_demodulation,[],[f1718,f1453])).
fof(f1718,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl3),
  inference(superposition,[],[f1547,f1148])).
fof(f1860,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'T_0')) | $spl3),
  inference(forward_demodulation,[],[f1859,f1161])).
fof(f1859,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'T_0')) | $spl3),
  inference(forward_demodulation,[],[f1858,f1156])).
fof(f1858,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl3),
  inference(forward_demodulation,[],[f1719,f1453])).
fof(f1719,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl3),
  inference(superposition,[],[f1547,f1150])).
fof(f3610,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'T_0')) | $spl3),
  inference(forward_demodulation,[],[f3609,f1161])).
fof(f3609,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'T_0')) | $spl3),
  inference(forward_demodulation,[],[f3608,f1156])).
fof(f3608,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl3),
  inference(forward_demodulation,[],[f3483,f1453])).
fof(f3483,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl3),
  inference(superposition,[],[f1547,f1148])).
fof(f3613,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'T_0')) | $spl3),
  inference(forward_demodulation,[],[f3612,f1161])).
fof(f3612,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'T_0')) | $spl3),
  inference(forward_demodulation,[],[f3611,f1156])).
fof(f3611,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl3),
  inference(forward_demodulation,[],[f3484,f1453])).
fof(f3484,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl3),
  inference(superposition,[],[f1547,f1150])).
fof(f4580,plain,(
  ( ! [X39,X37,X38] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X37),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X38),s('type.list.list'(sK14),X39))))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f4536,f1161])).
fof(f4536,plain,(
  ( ! [X39,X37,X38] : (s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X37),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X38),s('type.list.list'(sK14),X39)))))))) ) | $spl0),
  inference(superposition,[],[f1545,f1467])).
fof(f4578,plain,(
  ( ! [X35,X36,X34] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X34),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X35),s('type.list.list'(sK14),X36))))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f4535,f1161])).
fof(f4535,plain,(
  ( ! [X35,X36,X34] : (s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X34),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X35),s('type.list.list'(sK14),X36)))))))) ) | $spl0),
  inference(superposition,[],[f1545,f1465])).
fof(f4576,plain,(
  ( ! [X33] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X33)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f4575,f1161])).
fof(f4575,plain,(
  ( ! [X33] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X33)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f4574,f1187])).
fof(f4574,plain,(
  ( ! [X33,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X32),s('type.list.list'(sK14),X33)))))))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f4534,f1187])).
fof(f4534,plain,(
  ( ! [X33,X31,X32] : (s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X31),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X32),s('type.list.list'(sK14),X33))))))))))) ) | $spl0),
  inference(superposition,[],[f1545,f1463])).
fof(f4572,plain,(
  ( ! [X30] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X30))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f4571,f1187])).
fof(f4571,plain,(
  ( ! [X30,X29] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X29),s('type.list.list'(sK14),X30))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f4570,f1187])).
fof(f4570,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X28),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X29),s('type.list.list'(sK14),X30))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15)) ) | $spl0),
  inference(forward_demodulation,[],[f4533,f1156])).
fof(f4533,plain,(
  ( ! [X30,X28,X29] : (s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X28),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X29),s('type.list.list'(sK14),X30))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl0),
  inference(superposition,[],[f1545,f1461])).
fof(f4562,plain,(
  ( ! [X64,X65,X63] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X63),s('type.list.list'(sK14),X64))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X65),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f4522,f1161])).
fof(f4522,plain,(
  ( ! [X64,X65,X63] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X65),s('type.list.list'(sK14),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X63),s('type.list.list'(sK14),X64)))))) ) | $spl0),
  inference(superposition,[],[f1545,f1467])).
fof(f4560,plain,(
  ( ! [X61,X62,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X60),s('type.list.list'(sK14),X61))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X62),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f4521,f1161])).
fof(f4521,plain,(
  ( ! [X61,X62,X60] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X62),s('type.list.list'(sK14),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X60),s('type.list.list'(sK14),X61)))))) ) | $spl0),
  inference(superposition,[],[f1545,f1465])).
fof(f4558,plain,(
  ( ! [X59,X58] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X58)))))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X59),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f4557,f1161])).
fof(f4557,plain,(
  ( ! [X59,X58] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X58)))))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X59),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f4520,f1187])).
fof(f4520,plain,(
  ( ! [X59,X57,X58] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X59),s('type.list.list'(sK14),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X57),s('type.list.list'(sK14),X58))))))))) ) | $spl0),
  inference(superposition,[],[f1545,f1463])).
fof(f4554,plain,(
  ( ! [X56,X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),X55))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X56),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f4553,f1187])).
fof(f4553,plain,(
  ( ! [X54,X56,X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X54),s('type.list.list'(sK14),X55))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X56),s('type.list.list'(sK14),'const.list.NIL_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f4519,f1156])).
fof(f4519,plain,(
  ( ! [X54,X56,X55] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X56),s('type.list.list'(sK14),'const.list.NIL_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X54),s('type.list.list'(sK14),X55))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl0),
  inference(superposition,[],[f1545,f1461])).
fof(f4135,plain,(
  ( ! [X248,X247] : (p(s(bool,X247)) | p(s(bool,X248)) | s(bool,X248) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1535])).
fof(f4024,plain,(
  ( ! [X35,X36,X34] : (p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X35) != s(bool,X36)) ) | $spl2),
  inference(resolution,[],[f1546,f1087])).
fof(f4021,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | p(s(bool,X27)) | s(bool,X27) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1086])).
fof(f4020,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X22) != s(bool,X24) | s(bool,X23) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1085])).
fof(f4019,plain,(
  ( ! [X21,X19,X20] : (p(s(bool,X19)) | ~p(s(bool,X20)) | s(bool,X19) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X20) != s(bool,X21)) ) | $spl2),
  inference(resolution,[],[f1546,f1083])).
fof(f4017,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1081])).
fof(f4015,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl2),
  inference(resolution,[],[f1546,f1357])).
fof(f4014,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl2),
  inference(resolution,[],[f1546,f1357])).
fof(f4013,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(resolution,[],[f1546,f1352])).
fof(f3979,plain,(
  $false | ($spl3 | $spl23)),
  inference(subsumption_resolution,[],[f1871,f1838])).
fof(f1871,plain,(
  p(s(bool,'T_0')) | $spl3),
  inference(forward_demodulation,[],[f1870,f1507])).
fof(f1870,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl3),
  inference(forward_demodulation,[],[f1869,f1161])).
fof(f1869,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl3),
  inference(subsumption_resolution,[],[f1730,f1436])).
fof(f1730,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl3),
  inference(superposition,[],[f1547,f1415])).
fof(f3951,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | ~p(s(bool,X237)) | s(bool,'T_0') != s(bool,X237)) ) | $spl23),
  inference(resolution,[],[f1838,f1535])).
fof(f3839,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,'T_0') != s(bool,X22) | s(bool,X21) != s(bool,X23)) ) | $spl23),
  inference(resolution,[],[f1838,f1087])).
fof(f3837,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,'T_0') != s(bool,X16)) ) | $spl23),
  inference(resolution,[],[f1838,f1086])).
fof(f3835,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,'T_0') != s(bool,X10)) ) | $spl23),
  inference(resolution,[],[f1838,f1085])).
fof(f3834,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,'T_0') != s(bool,X7) | s(bool,X6) != s(bool,X8)) ) | $spl23),
  inference(resolution,[],[f1838,f1083])).
fof(f3832,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,'T_0') != s(bool,X1)) ) | $spl23),
  inference(resolution,[],[f1838,f1081])).
fof(f3801,plain,(
  ( ! [X235,X234] : (p(s(bool,X234)) | p(s(bool,X235)) | s(bool,'T_0') != s(bool,X235)) ) | $spl22),
  inference(resolution,[],[f1837,f1535])).
fof(f3690,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,'T_0') != s(bool,X21) | s(bool,X22) != s(bool,X23)) ) | $spl22),
  inference(resolution,[],[f1837,f1087])).
fof(f3687,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,'T_0') != s(bool,X14)) ) | $spl22),
  inference(resolution,[],[f1837,f1086])).
fof(f3686,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,'T_0') != s(bool,X10)) ) | $spl22),
  inference(resolution,[],[f1837,f1085])).
fof(f3685,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,'T_0') != s(bool,X6) | s(bool,X7) != s(bool,X8)) ) | $spl22),
  inference(resolution,[],[f1837,f1083])).
fof(f3683,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,'T_0') != s(bool,X1)) ) | $spl22),
  inference(resolution,[],[f1837,f1081])).
fof(f1840,plain,(
  ( ! [X15] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl24),
  inference(cnf_transformation,[],[f1840_D])).
fof(f1840_D,plain,(
  ( ! [X15] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f3599,plain,(
  ( ! [X17] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl3),
  inference(forward_demodulation,[],[f3466,f1453])).
fof(f3466,plain,(
  ( ! [X17] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl3),
  inference(superposition,[],[f1547,f1357])).
fof(f3598,plain,(
  ( ! [X16] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl3),
  inference(forward_demodulation,[],[f3465,f1453])).
fof(f3465,plain,(
  ( ! [X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X16))))) ) | $spl3),
  inference(superposition,[],[f1547,f1357])).
fof(f1829,plain,(
  ( ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl18),
  inference(cnf_transformation,[],[f1829_D])).
fof(f1829_D,plain,(
  ( ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f3595,plain,(
  ( ! [X14] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14))))) ) | $spl3),
  inference(forward_demodulation,[],[f3463,f1453])).
fof(f3463,plain,(
  ( ! [X14] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14))))) ) | $spl3),
  inference(superposition,[],[f1547,f1352])).
fof(f3444,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1535])).
fof(f3332,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X23) != s(bool,X25)) ) | $spl3),
  inference(resolution,[],[f1547,f1087])).
fof(f3330,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1086])).
fof(f3328,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1085])).
fof(f3327,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X8) != s(bool,X10)) ) | $spl3),
  inference(resolution,[],[f1547,f1083])).
fof(f3325,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1081])).
fof(f3287,plain,(
  ( ! [X237,X236] : (p(s(bool,X236)) | ~p(s(bool,X237)) | s(bool,'T_0') != s(bool,X237)) ) | $spl23),
  inference(resolution,[],[f1838,f1535])).
fof(f3175,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,'T_0') != s(bool,X22) | s(bool,X21) != s(bool,X23)) ) | $spl23),
  inference(resolution,[],[f1838,f1087])).
fof(f3173,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,'T_0') != s(bool,X16)) ) | $spl23),
  inference(resolution,[],[f1838,f1086])).
fof(f3171,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,'T_0') != s(bool,X10)) ) | $spl23),
  inference(resolution,[],[f1838,f1085])).
fof(f3170,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,'T_0') != s(bool,X7) | s(bool,X6) != s(bool,X8)) ) | $spl23),
  inference(resolution,[],[f1838,f1083])).
fof(f3168,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,'T_0') != s(bool,X1)) ) | $spl23),
  inference(resolution,[],[f1838,f1081])).
fof(f3140,plain,(
  ( ! [X244,X245] : (p(s(bool,X244)) | ~p(s(bool,X245)) | s(bool,'F_0') != s(bool,X245)) ) | $spl17),
  inference(resolution,[],[f1827,f1535])).
fof(f3028,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,'F_0') != s(bool,X30) | s(bool,X29) != s(bool,X31)) ) | $spl17),
  inference(resolution,[],[f1827,f1087])).
fof(f3026,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,'F_0') != s(bool,X24)) ) | $spl17),
  inference(resolution,[],[f1827,f1086])).
fof(f3024,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,'F_0') != s(bool,X18)) ) | $spl17),
  inference(resolution,[],[f1827,f1085])).
fof(f3023,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,'F_0') != s(bool,X15) | s(bool,X14) != s(bool,X16)) ) | $spl17),
  inference(resolution,[],[f1827,f1083])).
fof(f3021,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,'F_0') != s(bool,X9)) ) | $spl17),
  inference(resolution,[],[f1827,f1081])).
fof(f2984,plain,(
  ( ! [X243,X242] : (p(s(bool,X242)) | p(s(bool,X243)) | s(bool,'F_0') != s(bool,X243)) ) | $spl16),
  inference(resolution,[],[f1828,f1535])).
fof(f2873,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,'F_0') != s(bool,X29) | s(bool,X30) != s(bool,X31)) ) | $spl16),
  inference(resolution,[],[f1828,f1087])).
fof(f2870,plain,(
  ( ! [X21,X22,X20] : (p(s(bool,X20)) | ~p(s(bool,X21)) | p(s(bool,X22)) | s(bool,'F_0') != s(bool,X22)) ) | $spl16),
  inference(resolution,[],[f1828,f1086])).
fof(f2869,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,'F_0') != s(bool,X18)) ) | $spl16),
  inference(resolution,[],[f1828,f1085])).
fof(f2868,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,'F_0') != s(bool,X14) | s(bool,X15) != s(bool,X16)) ) | $spl16),
  inference(resolution,[],[f1828,f1083])).
fof(f2866,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,'F_0') != s(bool,X9)) ) | $spl16),
  inference(resolution,[],[f1828,f1081])).
fof(f2831,plain,(
  ( ! [X244,X245] : (p(s(bool,X244)) | ~p(s(bool,X245)) | s(bool,'F_0') != s(bool,X245)) ) | $spl17),
  inference(resolution,[],[f1827,f1535])).
fof(f2719,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,'F_0') != s(bool,X30) | s(bool,X29) != s(bool,X31)) ) | $spl17),
  inference(resolution,[],[f1827,f1087])).
fof(f2717,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,'F_0') != s(bool,X24)) ) | $spl17),
  inference(resolution,[],[f1827,f1086])).
fof(f2715,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,'F_0') != s(bool,X18)) ) | $spl17),
  inference(resolution,[],[f1827,f1085])).
fof(f2714,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,'F_0') != s(bool,X15) | s(bool,X14) != s(bool,X16)) ) | $spl17),
  inference(resolution,[],[f1827,f1083])).
fof(f2712,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,'F_0') != s(bool,X9)) ) | $spl17),
  inference(resolution,[],[f1827,f1081])).
fof(f2704,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f2530,f1812])).
fof(f2530,plain,(
  ( ! [X490,X489] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X489),s('type.num.num',X490))))) ) | $spl14),
  inference(resolution,[],[f1812,f1345])).
fof(f2703,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f2522,f1812])).
fof(f2522,plain,(
  ( ! [X476,X475] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X475))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X476))))))) ) | $spl14),
  inference(resolution,[],[f1812,f1345])).
fof(f2702,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f2521,f1812])).
fof(f2521,plain,(
  ( ! [X474,X473] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X473),s('type.num.num',X474))))) ) | $spl14),
  inference(resolution,[],[f1812,f1323])).
fof(f2701,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f2520,f1812])).
fof(f2520,plain,(
  ( ! [X472,X471] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X471),s('type.num.num',X472))))) ) | $spl14),
  inference(resolution,[],[f1812,f1321])).
fof(f2700,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f2519,f1812])).
fof(f2519,plain,(
  ( ! [X469,X470] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X469),s('type.num.num',X470))))) ) | $spl14),
  inference(resolution,[],[f1812,f1307])).
fof(f2699,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f2512,f1812])).
fof(f2512,plain,(
  ( ! [X457,X456] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X456),s('type.num.num',X457))))) ) | $spl14),
  inference(resolution,[],[f1812,f1347])).
fof(f2693,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f2494,f1812])).
fof(f2494,plain,(
  ( ! [X395,X396] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X395))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X396))))))) ) | $spl14),
  inference(resolution,[],[f1812,f1347])).
fof(f2692,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f2493,f1812])).
fof(f2493,plain,(
  ( ! [X393,X394] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X393),s('type.num.num',X394))))) ) | $spl14),
  inference(resolution,[],[f1812,f1323])).
fof(f2691,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f2492,f1812])).
fof(f2492,plain,(
  ( ! [X391,X392] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X391),s('type.num.num',X392))))) ) | $spl14),
  inference(resolution,[],[f1812,f1321])).
fof(f2690,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f2491,f1812])).
fof(f2491,plain,(
  ( ! [X389,X390] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X389),s('type.num.num',X390))))) ) | $spl14),
  inference(resolution,[],[f1812,f1307])).
fof(f2513,plain,(
  $false | $spl14),
  inference(resolution,[],[f1812,f1410])).
fof(f2516,plain,(
  $false | $spl14),
  inference(resolution,[],[f1812,f1411])).
fof(f2527,plain,(
  $false | $spl14),
  inference(resolution,[],[f1812,f1412])).
fof(f1844,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f1707,f1453])).
fof(f1707,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'F_0')) | $spl3),
  inference(superposition,[],[f1547,f1503])).
fof(f1928,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f1927,f1161])).
fof(f1927,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f1926,f1156])).
fof(f1926,plain,(
  ~p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl3),
  inference(forward_demodulation,[],[f1761,f1451])).
fof(f1761,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl3),
  inference(superposition,[],[f1547,f1150])).
fof(f1918,plain,(
  ~p(s(bool,'F_0')) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl3),
  inference(forward_demodulation,[],[f1917,f1451])).
fof(f1917,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl3),
  inference(forward_demodulation,[],[f1751,f1161])).
fof(f1751,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl3),
  inference(superposition,[],[f1547,f1468])).
fof(f1912,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f1911,f1161])).
fof(f1911,plain,(
  ~p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl3),
  inference(forward_demodulation,[],[f1910,f1451])).
fof(f1910,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl3),
  inference(forward_demodulation,[],[f1909,f1161])).
fof(f1909,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl3),
  inference(forward_demodulation,[],[f1746,f1469])).
fof(f1746,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl3),
  inference(superposition,[],[f1547,f1467])).
fof(f1925,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f1924,f1161])).
fof(f1924,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f1923,f1156])).
fof(f1923,plain,(
  ~p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl3),
  inference(forward_demodulation,[],[f1760,f1451])).
fof(f1760,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | $spl3),
  inference(superposition,[],[f1547,f1148])).
fof(f1906,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f1905,f1161])).
fof(f1905,plain,(
  ~p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl3),
  inference(forward_demodulation,[],[f1904,f1451])).
fof(f1904,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl3),
  inference(forward_demodulation,[],[f1903,f1161])).
fof(f1903,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl3),
  inference(forward_demodulation,[],[f1745,f1469])).
fof(f1745,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | $spl3),
  inference(superposition,[],[f1547,f1465])).
fof(f1914,plain,(
  ~p(s(bool,'F_0')) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl3),
  inference(forward_demodulation,[],[f1913,f1451])).
fof(f1913,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl3),
  inference(forward_demodulation,[],[f1750,f1161])).
fof(f1750,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl3),
  inference(superposition,[],[f1547,f1466])).
fof(f1843,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f1706,f1453])).
fof(f1706,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'F_0')) | $spl3),
  inference(superposition,[],[f1547,f1505])).
fof(f2356,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | p(s(bool,'F_0'))) ) | $spl2),
  inference(forward_demodulation,[],[f2355,f1161])).
fof(f2355,plain,(
  ( ! [X30] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(forward_demodulation,[],[f2354,f1451])).
fof(f2354,plain,(
  ( ! [X30] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(forward_demodulation,[],[f2202,f1161])).
fof(f2202,plain,(
  ( ! [X30] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(superposition,[],[f1546,f1520])).
fof(f2353,plain,(
  ( ! [X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num',X29))) | p(s(bool,'F_0'))) ) | $spl2),
  inference(forward_demodulation,[],[f2352,f1161])).
fof(f2352,plain,(
  ( ! [X29] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num',X29)))) ) | $spl2),
  inference(forward_demodulation,[],[f2351,f1451])).
fof(f2351,plain,(
  ( ! [X29] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num',X29)))) ) | $spl2),
  inference(forward_demodulation,[],[f2201,f1161])).
fof(f2201,plain,(
  ( ! [X29] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num',X29)))) ) | $spl2),
  inference(superposition,[],[f1546,f1519])).
fof(f2350,plain,(
  ( ! [X24] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'F_0'))) ) | $spl2),
  inference(forward_demodulation,[],[f2349,f1481])).
fof(f2349,plain,(
  ( ! [X24] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2348,f1481])).
fof(f2348,plain,(
  ( ! [X24] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2347,f1451])).
fof(f2347,plain,(
  ( ! [X24] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2198,f1161])).
fof(f2198,plain,(
  ( ! [X24] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f1546,f1470])).
fof(f2346,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f2345,f1161])).
fof(f2345,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f2344,f1451])).
fof(f2344,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f2197,f1161])).
fof(f2197,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(superposition,[],[f1546,f1432])).
fof(f2343,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f2342,f1161])).
fof(f2342,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f2341,f1451])).
fof(f2341,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f2196,f1161])).
fof(f2196,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(superposition,[],[f1546,f1417])).
fof(f2340,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f2339,f1161])).
fof(f2339,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f2338,f1451])).
fof(f2338,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f2195,f1161])).
fof(f2195,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(superposition,[],[f1546,f1415])).
fof(f2333,plain,(
  ( ! [X14,X13] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2332,f1451])).
fof(f2332,plain,(
  ( ! [X14,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2185,f1161])).
fof(f2185,plain,(
  ( ! [X14,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl2),
  inference(superposition,[],[f1546,f1297])).
fof(f2331,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f2330,f1451])).
fof(f2330,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f2184,f1161])).
fof(f2184,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(superposition,[],[f1546,f1152])).
fof(f2319,plain,(
  p(s(bool,'F_0')) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl2),
  inference(forward_demodulation,[],[f2318,f1451])).
fof(f2318,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl2),
  inference(forward_demodulation,[],[f2173,f1161])).
fof(f2173,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl2),
  inference(superposition,[],[f1546,f1468])).
fof(f2317,plain,(
  p(s(bool,'F_0')) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl2),
  inference(forward_demodulation,[],[f2316,f1451])).
fof(f2316,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl2),
  inference(forward_demodulation,[],[f2172,f1161])).
fof(f2172,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK14),'const.list.NIL_0') != s('type.list.list'(sK14),sK15) | $spl2),
  inference(superposition,[],[f1546,f1466])).
fof(f2307,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f2306,f1161])).
fof(f2306,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f2305,f1451])).
fof(f2305,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f2304,f1161])).
fof(f2304,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(forward_demodulation,[],[f2166,f1469])).
fof(f2166,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(superposition,[],[f1546,f1463])).
fof(f2303,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f2302,f1156])).
fof(f2302,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl2),
  inference(forward_demodulation,[],[f2301,f1451])).
fof(f2301,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl2),
  inference(forward_demodulation,[],[f2300,f1161])).
fof(f2300,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl2),
  inference(forward_demodulation,[],[f2165,f1469])).
fof(f2165,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl2),
  inference(superposition,[],[f1546,f1461])).
fof(f2299,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f2298,f1161])).
fof(f2298,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.|48|_0')))) | $spl2),
  inference(forward_demodulation,[],[f2297,f1451])).
fof(f2297,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.|48|_0')))) | $spl2),
  inference(forward_demodulation,[],[f2296,f1161])).
fof(f2296,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.|48|_0')))) | $spl2),
  inference(forward_demodulation,[],[f2164,f1469])).
fof(f2164,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.|48|_0')))) | $spl2),
  inference(superposition,[],[f1546,f1448])).
fof(f2275,plain,(
  p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f2129,f1453])).
fof(f2129,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'F_0')) | $spl2),
  inference(superposition,[],[f1546,f1503])).
fof(f2274,plain,(
  p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | $spl2),
  inference(forward_demodulation,[],[f2128,f1453])).
fof(f2128,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'F_0')) | $spl2),
  inference(superposition,[],[f1546,f1505])).
fof(f2273,plain,(
  ( ! [X17] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(forward_demodulation,[],[f2123,f1453])).
fof(f2123,plain,(
  ( ! [X17] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(superposition,[],[f1546,f1357])).
fof(f2272,plain,(
  ( ! [X16] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(forward_demodulation,[],[f2122,f1453])).
fof(f2122,plain,(
  ( ! [X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X16))))) ) | $spl2),
  inference(superposition,[],[f1546,f1357])).
fof(f2270,plain,(
  ( ! [X15] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(forward_demodulation,[],[f2121,f1515])).
fof(f2121,plain,(
  ( ! [X15] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(superposition,[],[f1546,f1352])).
fof(f2269,plain,(
  ( ! [X14] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14))))) ) | $spl2),
  inference(forward_demodulation,[],[f2120,f1453])).
fof(f2120,plain,(
  ( ! [X14] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14))))) ) | $spl2),
  inference(superposition,[],[f1546,f1352])).
fof(f2267,plain,(
  ( ! [X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2266,f1160])).
fof(f2266,plain,(
  ( ! [X13] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2119,f1515])).
fof(f2119,plain,(
  ( ! [X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl2),
  inference(superposition,[],[f1546,f1349])).
fof(f2265,plain,(
  ( ! [X11] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2264,f1515])).
fof(f2264,plain,(
  ( ! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2263,f1446])).
fof(f2263,plain,(
  ( ! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(forward_demodulation,[],[f2117,f1446])).
fof(f2117,plain,(
  ( ! [X11] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl2),
  inference(superposition,[],[f1546,f1324])).
fof(f2261,plain,(
  ( ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) | p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2260,f1446])).
fof(f2260,plain,(
  ( ! [X10] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl2),
  inference(forward_demodulation,[],[f2259,f1515])).
fof(f2259,plain,(
  ( ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl2),
  inference(forward_demodulation,[],[f2116,f1446])).
fof(f2116,plain,(
  ( ! [X10] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl2),
  inference(superposition,[],[f1546,f1324])).
fof(f2098,plain,(
  ( ! [X248,X247] : (p(s(bool,X247)) | p(s(bool,X248)) | s(bool,X248) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1535])).
fof(f1987,plain,(
  ( ! [X35,X36,X34] : (p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X35) != s(bool,X36)) ) | $spl2),
  inference(resolution,[],[f1546,f1087])).
fof(f1984,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | p(s(bool,X27)) | s(bool,X27) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1086])).
fof(f1983,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X22) != s(bool,X24) | s(bool,X23) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1085])).
fof(f1982,plain,(
  ( ! [X21,X19,X20] : (p(s(bool,X19)) | ~p(s(bool,X20)) | s(bool,X19) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X20) != s(bool,X21)) ) | $spl2),
  inference(resolution,[],[f1546,f1083])).
fof(f1980,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl2),
  inference(resolution,[],[f1546,f1081])).
fof(f1978,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl2),
  inference(resolution,[],[f1546,f1357])).
fof(f1977,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl2),
  inference(resolution,[],[f1546,f1357])).
fof(f1976,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(resolution,[],[f1546,f1352])).
fof(f1962,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | ~p(s(bool,'F_0'))) ) | $spl3),
  inference(forward_demodulation,[],[f1961,f1161])).
fof(f1961,plain,(
  ( ! [X30] : (~p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(forward_demodulation,[],[f1960,f1451])).
fof(f1960,plain,(
  ( ! [X30] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(forward_demodulation,[],[f1780,f1161])).
fof(f1780,plain,(
  ( ! [X30] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(superposition,[],[f1547,f1520])).
fof(f1958,plain,(
  ( ! [X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num',X29))) | ~p(s(bool,'F_0'))) ) | $spl3),
  inference(forward_demodulation,[],[f1957,f1161])).
fof(f1957,plain,(
  ( ! [X29] : (~p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num',X29)))) ) | $spl3),
  inference(forward_demodulation,[],[f1956,f1451])).
fof(f1956,plain,(
  ( ! [X29] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num',X29)))) ) | $spl3),
  inference(forward_demodulation,[],[f1779,f1161])).
fof(f1779,plain,(
  ( ! [X29] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num',X29)))) ) | $spl3),
  inference(superposition,[],[f1547,f1519])).
fof(f1954,plain,(
  ( ! [X24] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | ~p(s(bool,'F_0'))) ) | $spl3),
  inference(forward_demodulation,[],[f1953,f1481])).
fof(f1953,plain,(
  ( ! [X24] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | ~p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f1952,f1481])).
fof(f1952,plain,(
  ( ! [X24] : (~p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f1951,f1451])).
fof(f1951,plain,(
  ( ! [X24] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f1776,f1161])).
fof(f1776,plain,(
  ( ! [X24] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X24),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(superposition,[],[f1547,f1470])).
fof(f1950,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f1949,f1161])).
fof(f1949,plain,(
  ~p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(forward_demodulation,[],[f1948,f1451])).
fof(f1948,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(forward_demodulation,[],[f1775,f1161])).
fof(f1775,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(superposition,[],[f1547,f1432])).
fof(f1947,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f1946,f1161])).
fof(f1946,plain,(
  ~p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(forward_demodulation,[],[f1945,f1451])).
fof(f1945,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(forward_demodulation,[],[f1774,f1161])).
fof(f1774,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(superposition,[],[f1547,f1417])).
fof(f1942,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f1941,f1161])).
fof(f1941,plain,(
  ~p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(forward_demodulation,[],[f1940,f1451])).
fof(f1940,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(forward_demodulation,[],[f1773,f1161])).
fof(f1773,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(superposition,[],[f1547,f1415])).
fof(f1934,plain,(
  ( ! [X14,X13] : (~p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f1933,f1451])).
fof(f1933,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(forward_demodulation,[],[f1763,f1161])).
fof(f1763,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))))) ) | $spl3),
  inference(superposition,[],[f1547,f1297])).
fof(f1930,plain,(
  ~p(s(bool,'F_0')) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(forward_demodulation,[],[f1929,f1451])).
fof(f1929,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(forward_demodulation,[],[f1762,f1161])).
fof(f1762,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK26('const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(superposition,[],[f1547,f1152])).
fof(f1900,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f1899,f1161])).
fof(f1899,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(forward_demodulation,[],[f1898,f1451])).
fof(f1898,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(forward_demodulation,[],[f1897,f1161])).
fof(f1897,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(forward_demodulation,[],[f1744,f1469])).
fof(f1744,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(superposition,[],[f1547,f1463])).
fof(f1894,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f1893,f1156])).
fof(f1893,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl3),
  inference(forward_demodulation,[],[f1892,f1451])).
fof(f1892,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl3),
  inference(forward_demodulation,[],[f1891,f1161])).
fof(f1891,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl3),
  inference(forward_demodulation,[],[f1743,f1469])).
fof(f1743,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl3),
  inference(superposition,[],[f1547,f1461])).
fof(f1888,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f1887,f1161])).
fof(f1887,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.|48|_0')))) | $spl3),
  inference(forward_demodulation,[],[f1886,f1451])).
fof(f1886,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.|48|_0')))) | $spl3),
  inference(forward_demodulation,[],[f1885,f1161])).
fof(f1885,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.|48|_0')))) | $spl3),
  inference(forward_demodulation,[],[f1742,f1469])).
fof(f1742,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))),s('type.num.num','const.num.|48|_0')))) | $spl3),
  inference(superposition,[],[f1547,f1448])).
fof(f1842,plain,(
  ( ! [X17] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl3),
  inference(forward_demodulation,[],[f1701,f1453])).
fof(f1701,plain,(
  ( ! [X17] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl3),
  inference(superposition,[],[f1547,f1357])).
fof(f1841,plain,(
  ( ! [X16] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl3),
  inference(forward_demodulation,[],[f1700,f1453])).
fof(f1700,plain,(
  ( ! [X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X16))))) ) | $spl3),
  inference(superposition,[],[f1547,f1357])).
fof(f1839,plain,(
  ( ! [X15] : (p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl3),
  inference(forward_demodulation,[],[f1699,f1515])).
fof(f1699,plain,(
  ( ! [X15] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl3),
  inference(superposition,[],[f1547,f1352])).
fof(f1836,plain,(
  ( ! [X14] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14))))) ) | $spl3),
  inference(forward_demodulation,[],[f1698,f1453])).
fof(f1698,plain,(
  ( ! [X14] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14))))) ) | $spl3),
  inference(superposition,[],[f1547,f1352])).
fof(f1835,plain,(
  ( ! [X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl20),
  inference(cnf_transformation,[],[f1835_D])).
fof(f1835_D,plain,(
  ( ! [X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1834,plain,(
  ( ! [X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(forward_demodulation,[],[f1833,f1160])).
fof(f1833,plain,(
  ( ! [X13] : (p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(forward_demodulation,[],[f1697,f1515])).
fof(f1697,plain,(
  ( ! [X13] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl3),
  inference(superposition,[],[f1547,f1349])).
fof(f1832,plain,(
  ( ! [X11] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(forward_demodulation,[],[f1831,f1515])).
fof(f1831,plain,(
  ( ! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(forward_demodulation,[],[f1830,f1446])).
fof(f1830,plain,(
  ( ! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl3),
  inference(forward_demodulation,[],[f1695,f1446])).
fof(f1695,plain,(
  ( ! [X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl3),
  inference(superposition,[],[f1547,f1324])).
fof(f1826,plain,(
  ( ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) | p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) ) | $spl3),
  inference(forward_demodulation,[],[f1825,f1446])).
fof(f1825,plain,(
  ( ! [X10] : (p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl3),
  inference(forward_demodulation,[],[f1824,f1515])).
fof(f1824,plain,(
  ( ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl3),
  inference(forward_demodulation,[],[f1694,f1446])).
fof(f1694,plain,(
  ( ! [X10] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) ) | $spl3),
  inference(superposition,[],[f1547,f1324])).
fof(f1679,plain,(
  ( ! [X239,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | s(bool,X239) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1535])).
fof(f1567,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X23) != s(bool,X25)) ) | $spl3),
  inference(resolution,[],[f1547,f1087])).
fof(f1565,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1086])).
fof(f1563,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1085])).
fof(f1562,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))) | s(bool,X8) != s(bool,X10)) ) | $spl3),
  inference(resolution,[],[f1547,f1083])).
fof(f1560,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) ) | $spl3),
  inference(resolution,[],[f1547,f1081])).
fof(f1550,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) | $spl4),
  inference(cnf_transformation,[],[f1550_D])).
fof(f1550_D,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f1546,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl2),
  inference(cnf_transformation,[],[f1546_D])).
fof(f1546_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f1548,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))),
  inference(forward_demodulation,[],[f1078,f1156])).
fof(f1078,plain,(
  s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))),
  inference(cnf_transformation,[],[f852])).
fof(f852,plain,(
  (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),sK15) = s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK17),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK18),s('type.list.list'(sK14),sK16)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | ! [X2,X3,X4] : s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X3),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X4),s('type.list.list'(sK14),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14,sK15,sK16,sK17,sK18])],[f851])).
fof(f851,plain,(
  ? [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X5,X6,X7] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X5)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ! [X2,X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2)))))))),
  inference(rectify,[],[f850])).
fof(f850,plain,(
  ? [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X2,X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ! [X2,X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2)))))))),
  inference(nnf_transformation,[],[f780])).
fof(f780,plain,(
  ? [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <~> ? [X2,X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))))),
  inference(ennf_transformation,[],[f518])).
fof(f518,plain,(
  ~! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f517])).
fof(f517,plain,(
  ~! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ? [X8,X9,X10] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ? [X8,X9,X10] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),X8))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|split|4','thm.quantHeuristics.LIST_LENGTH_2|split|4')).
fof(f1547,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | $spl3),
  inference(cnf_transformation,[],[f1547_D])).
fof(f1547_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f1544,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15)))))) | s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X3),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X4),s('type.list.list'(sK14),X2)))))) )),
  inference(forward_demodulation,[],[f1079,f1156])).
fof(f1079,plain,(
  ( ! [X4,X2,X3] : (s('type.list.list'(sK14),sK15) != s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X3),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X4),s('type.list.list'(sK14),X2))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK14),sK15))))))) )),
  inference(cnf_transformation,[],[f852])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1279
% Passive clauses: 41526
% Generated clauses: 112567
% Final active clauses: 1068
% Final passive clauses: 28537
% Input formulas: 515
% Initial clauses: 457
% 
% Selected by SInE selection: 191
% SInE iterations: 1
% 
% Duplicate literals: 1327
% Trivial inequalities: 120
% Fw subsumption resolutions: 4585
% Fw demodulations: 24959
% Bw demodulations: 69
% 
% Simple tautologies: 1764
% Equational tautologies: 24
% Forward subsumptions: 34969
% Fw demodulations to eq. taut.: 20
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 39793
% Factoring: 128
% Forward superposition: 27844
% Backward superposition: 11100
% Self superposition: 20
% Equality resolution: 14
% 
% Split clauses: 1563
% Split components: 3258
% SAT solver clauses: 1702
% SAT solver unit clauses: 57
% SAT solver binary clauses: 363
% 
% Sat splits: 1563
% Sat splitting refutations: 132
% 
% Memory used [KB]: 52834
% Time elapsed: 2.438 s
% ------------------------------
% ------------------------------
% Success in time 14.21 s
