Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.int_arith
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.int_arith
% SZS output start Proof for thm.int_arith
fof(f336,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f333,f227,f212,f222,f210,f208,f216,f213,f291])).
fof(f291,plain,(
  $false | ($spl6 | $spl9)),
  inference(subsumption_resolution,[],[f290,f210])).
fof(f290,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) | $spl9),
  inference(forward_demodulation,[],[f281,f23])).
fof(f23,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f11])).
fof(f11,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7,X6] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X6)))),
  file('thm.int_arith.lt_move_left_right','thm.integer.INT_ADD_SYM')).
fof(f281,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int',sK2))) | $spl9),
  inference(superposition,[],[f212,f25])).
fof(f25,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))),s('type.integer.int',X0))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2)))))))) )),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ! [X0,X1,X2] : s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))),s('type.integer.int',X0))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2)))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7,X8] : s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X8))),s('type.integer.int',X6))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8)))))))),
  file('thm.int_arith.lt_move_left_right','thm.integer.INT_LT_ADDNEG')).
fof(f213,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))))))) | $spl8),
  inference(cnf_transformation,[],[f213_D])).
fof(f213_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f216,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) | $spl13),
  inference(cnf_transformation,[],[f216_D])).
fof(f216_D,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f208,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0)))))))),
  inference(superposition,[],[f19,f22])).
fof(f22,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.int_arith.lt_move_left_right',aHL_BOOL_CASES)).
fof(f19,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0)))))))),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f15])).
fof(f15,plain,(
  ? [X0,X1,X2] : s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2))) != s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))))),
  inference(ennf_transformation,[],[f9])).
fof(f9,plain,(
  ~! [X0,X1,X2] : s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X8))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X8))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6)))))))),
  file('thm.int_arith.lt_move_left_right','thm.int_arith.lt_move_left_right')).
fof(f210,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) | $spl6),
  inference(cnf_transformation,[],[f210_D])).
fof(f210_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f222,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) | $spl13),
  inference(trivial_inequality_removal,[],[f221])).
fof(f221,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) | $spl13),
  inference(superposition,[],[f216,f22])).
fof(f212,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))))))) | $spl9),
  inference(cnf_transformation,[],[f212_D])).
fof(f212_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))))))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f227,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))))))) | $spl6),
  inference(backward_demodulation,[],[f210,f19])).
fof(f333,plain,(
  $false | ($spl7 | $spl8)),
  inference(subsumption_resolution,[],[f332,f211])).
fof(f211,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) | $spl7),
  inference(cnf_transformation,[],[f211_D])).
fof(f211_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f332,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) | $spl8),
  inference(forward_demodulation,[],[f318,f23])).
fof(f318,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int',sK2))) | $spl8),
  inference(superposition,[],[f213,f25])).
% SZS output end Proof for thm.int_arith
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 20
% Passive clauses: 62
% Generated clauses: 311
% Final active clauses: 13
% Final passive clauses: 35
% Input formulas: 7
% Initial clauses: 7
% 
% Duplicate literals: 48
% Trivial inequalities: 8
% Fw subsumption resolutions: 13
% Fw demodulations: 7
% Bw demodulations: 2
% 
% Simple tautologies: 23
% Equational tautologies: 14
% Forward subsumptions: 116
% 
% Binary resolution: 4
% Forward superposition: 93
% Backward superposition: 56
% Self superposition: 28
% Equality factoring: 26
% Equality resolution: 1
% 
% Split clauses: 12
% Split components: 26
% SAT solver clauses: 25
% SAT solver unit clauses: 2
% SAT solver binary clauses: 14
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 12
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 20
% TWLsolver calls for satisfiability: 8
% 
% Memory used [KB]: 767
% Time elapsed: 0.018 s
% ------------------------------
% ------------------------------
% Success in time 0.02 s
