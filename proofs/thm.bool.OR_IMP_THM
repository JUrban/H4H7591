Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.bool
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bool
% SZS output start Proof for thm.bool
fof(f141,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f140,f126,f68,f110,f67,f112,f108,f66,f109,f111,f107,f130])).
fof(f130,plain,(
  $false | ($spl1 | $spl2)),
  inference(resolution,[],[f129,f108])).
fof(f129,plain,(
  ( ! [X0] : (sP0(sK1,X0)) ) | $spl2),
  inference(resolution,[],[f109,f106])).
fof(f106,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(duplicate_literal_removal,[],[f65])).
fof(f65,plain,(
  ( ! [X0,X1] : (sP0(X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | ((~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X0))))) & (((p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP0(X0,X1)))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | ((~p(s(bool,X0)) | (p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X0))))) & (((p(s(bool,X0)) | (p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X0)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,X0)) <=> (p(s(bool,X1)) | p(s(bool,X0)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f107,plain,(
  sP0(sK1,sK2) | $spl0),
  inference(cnf_transformation,[],[f107_D])).
fof(f107_D,plain,(
  sP0(sK1,sK2) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f111,plain,(
  ~p(s(bool,sK2)) | $spl5),
  inference(cnf_transformation,[],[f111_D])).
fof(f111_D,plain,(
  ~p(s(bool,sK2)) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f109,plain,(
  p(s(bool,sK1)) | $spl2),
  inference(cnf_transformation,[],[f109_D])).
fof(f109_D,plain,(
  p(s(bool,sK1)) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f66,plain,(
  p(s(bool,sK1)) | ~p(s(bool,sK2)) | sP0(sK1,sK2)),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  (sP0(sK1,sK2) | ~p(s(bool,sK2)) | p(s(bool,sK1))) & (~sP0(sK1,sK2) | (p(s(bool,sK2)) & ~p(s(bool,sK1))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2])],[f41])).
fof(f41,plain,(
  ? [X0,X1] : ((sP0(X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0))) & (~sP0(X0,X1) | (p(s(bool,X1)) & ~p(s(bool,X0)))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ? [X0,X1] : ((sP0(X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)))) & (~sP0(X0,X1) | (p(s(bool,X1)) & ~p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f37])).
fof(f37,plain,(
  ? [X0,X1] : (sP0(X0,X1) <~> (~p(s(bool,X1)) | p(s(bool,X0))))),
  inference(definition_folding,[],[f30,f36])).
fof(f30,plain,(
  ? [X0,X1] : ((p(s(bool,X0)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <~> (~p(s(bool,X1)) | p(s(bool,X0))))),
  inference(ennf_transformation,[],[f17])).
fof(f17,plain,(
  ~! [X0,X1] : ((p(s(bool,X0)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> (p(s(bool,X1)) => p(s(bool,X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ((p(s(bool,X6)) <=> (p(s(bool,X7)) | p(s(bool,X6)))) <=> (p(s(bool,X7)) => p(s(bool,X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ((p(s(bool,X6)) <=> (p(s(bool,X7)) | p(s(bool,X6)))) <=> (p(s(bool,X7)) => p(s(bool,X6))))),
  file('thm.bool.OR_IMP_THM','thm.bool.OR_IMP_THM')).
fof(f108,plain,(
  ~sP0(sK1,sK2) | $spl1),
  inference(cnf_transformation,[],[f108_D])).
fof(f108_D,plain,(
  ~sP0(sK1,sK2) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f112,plain,(
  p(s(bool,sK2)) | $spl4),
  inference(cnf_transformation,[],[f112_D])).
fof(f112_D,plain,(
  p(s(bool,sK2)) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f67,plain,(
  p(s(bool,sK2)) | ~sP0(sK1,sK2)),
  inference(cnf_transformation,[],[f42])).
fof(f110,plain,(
  ~p(s(bool,sK1)) | $spl3),
  inference(cnf_transformation,[],[f110_D])).
fof(f110_D,plain,(
  ~p(s(bool,sK1)) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f68,plain,(
  ~p(s(bool,sK1)) | ~sP0(sK1,sK2)),
  inference(cnf_transformation,[],[f42])).
fof(f126,plain,(
  $false | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f125,f110])).
fof(f125,plain,(
  p(s(bool,sK1)) | ($spl0 | $spl4)),
  inference(subsumption_resolution,[],[f124,f112])).
fof(f124,plain,(
  ~p(s(bool,sK2)) | p(s(bool,sK1)) | $spl0),
  inference(resolution,[],[f61,f107])).
fof(f61,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f39])).
fof(f140,plain,(
  $false | ($spl1 | $spl5)),
  inference(subsumption_resolution,[],[f134,f111])).
fof(f134,plain,(
  p(s(bool,sK2)) | $spl1),
  inference(resolution,[],[f132,f108])).
fof(f132,plain,(
  ( ! [X0,X1] : (sP0(X0,X1) | p(s(bool,X1))) )),
  inference(subsumption_resolution,[],[f105,f106])).
fof(f105,plain,(
  ( ! [X0,X1] : (sP0(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(duplicate_literal_removal,[],[f63])).
fof(f63,plain,(
  ( ! [X0,X1] : (sP0(X0,X1) | p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f39])).
% SZS output end Proof for thm.bool
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 16
% Passive clauses: 34
% Generated clauses: 77
% Final active clauses: 10
% Final passive clauses: 14
% Input formulas: 15
% Initial clauses: 43
% 
% Duplicate literals: 4
% Fw subsumption resolutions: 4
% 
% Simple tautologies: 19
% Forward subsumptions: 4
% 
% Binary resolution: 15
% 
% Split clauses: 10
% Split components: 21
% SAT solver clauses: 18
% SAT solver unit clauses: 4
% SAT solver binary clauses: 11
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 10
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 16
% TWLsolver calls for satisfiability: 5
% 
% Memory used [KB]: 639
% Time elapsed: 0.013 s
% ------------------------------
% ------------------------------
% Success in time 0.016 s
