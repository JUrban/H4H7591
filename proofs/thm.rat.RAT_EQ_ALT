Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f18940,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f18896,f38,f59,f57,f300,f37,f58,f56])).
fof(f56,plain,(
  s('type.rat.rat',sK0) = s('type.rat.rat',sK1) | $spl0),
  inference(cnf_transformation,[],[f56_D])).
fof(f56_D,plain,(
  s('type.rat.rat',sK0) = s('type.rat.rat',sK1) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f58,plain,(
  s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK0))))) | $spl2),
  inference(cnf_transformation,[],[f58_D])).
fof(f58_D,plain,(
  s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK0))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f37,plain,(
  s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK0))))) | s('type.rat.rat',sK0) = s('type.rat.rat',sK1)),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  (s('type.rat.rat',sK0) = s('type.rat.rat',sK1) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK0)))))) & (s('type.rat.rat',sK0) != s('type.rat.rat',sK1) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f30])).
fof(f30,plain,(
  ? [X0,X1] : ((s('type.rat.rat',X0) = s('type.rat.rat',X1) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X0)))))) & (s('type.rat.rat',X0) != s('type.rat.rat',X1) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X0)))))))),
  inference(nnf_transformation,[],[f28])).
fof(f28,plain,(
  ? [X0,X1] : (s('type.rat.rat',X0) = s('type.rat.rat',X1) <~> s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X0))))))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1] : (s('type.rat.rat',X0) = s('type.rat.rat',X1) <=> s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X0))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (s('type.rat.rat',X6) = s('type.rat.rat',X7) <=> s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X6))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X7))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X7))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X6))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (s('type.rat.rat',X6) = s('type.rat.rat',X7) <=> s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X6))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X7))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X7))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X6))))))),
  file('thm.rat.RAT_EQ_ALT','thm.rat.RAT_EQ_ALT')).
fof(f300,plain,(
  $false | ($spl0 | $spl3)),
  inference(trivial_inequality_removal,[],[f299])).
fof(f299,plain,(
  s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK0))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK0))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f59,f56])).
fof(f57,plain,(
  s('type.rat.rat',sK0) != s('type.rat.rat',sK1) | $spl1),
  inference(cnf_transformation,[],[f57_D])).
fof(f57_D,plain,(
  s('type.rat.rat',sK0) != s('type.rat.rat',sK1) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f59,plain,(
  s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK0))))) | $spl3),
  inference(cnf_transformation,[],[f59_D])).
fof(f59_D,plain,(
  s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK0))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f38,plain,(
  s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK0))))) | s('type.rat.rat',sK0) != s('type.rat.rat',sK1)),
  inference(cnf_transformation,[],[f31])).
fof(f18896,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f18895,f57])).
fof(f18895,plain,(
  s('type.rat.rat',sK0) = s('type.rat.rat',sK1) | $spl2),
  inference(forward_demodulation,[],[f18894,f42])).
fof(f42,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0] : s('type.rat.rat',X0) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X13] : s('type.rat.rat',X13) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X13)))))),
  file('thm.rat.RAT_EQ_ALT','thm.rat.rat_type_thm|split|0')).
fof(f18894,plain,(
  s('type.rat.rat',sK1) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',sK0))))) | $spl2),
  inference(forward_demodulation,[],[f18849,f42])).
fof(f18849,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',sK0))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',sK1))))) | $spl2),
  inference(resolution,[],[f18843,f50])).
fof(f50,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))) & (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))))),
  inference(nnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) <=> s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X14,X15] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X14),s('type.frac.frac',X15)))) <=> s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X14))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X15))))),
  file('thm.rat.RAT_EQ_ALT','thm.rat.rat_type_thm|split|1')).
fof(f18843,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',sK1))),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',sK0)))))) | $spl2),
  inference(trivial_inequality_removal,[],[f18841])).
fof(f18841,plain,(
  s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',sK1))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',sK1))),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',sK0)))))) | $spl2),
  inference(superposition,[],[f3575,f58])).
fof(f3575,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X1))),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0))))))) )),
  inference(forward_demodulation,[],[f3572,f44])).
fof(f44,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0] : s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X14] : s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X14)))))),
  file('thm.rat.RAT_EQ_ALT','thm.rat.rat_nmr_def')).
fof(f3572,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X0))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0))))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X1))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X1))),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0))))))) )),
  inference(superposition,[],[f2136,f43])).
fof(f43,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0] : s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X14] : s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X14)))))),
  file('thm.rat.RAT_EQ_ALT','thm.rat.rat_dnm_def')).
fof(f2136,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.rat.rat_dnm_1'(s('type.rat.rat',X0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0))),s('type.frac.frac',X1))))) )),
  inference(forward_demodulation,[],[f2131,f43])).
fof(f2131,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0))))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0))),s('type.frac.frac',X1))))) )),
  inference(superposition,[],[f53,f44])).
fof(f53,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) & (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) <=> s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X11,X12] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X11),s('type.frac.frac',X12)))) <=> s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X11))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X12))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X11))))))),
  file('thm.rat.RAT_EQ_ALT','thm.rat.rat_equiv_def')).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 112
% Passive clauses: 1397
% Generated clauses: 18372
% Final active clauses: 98
% Final passive clauses: 1174
% Input formulas: 13
% Initial clauses: 18
% 
% Duplicate literals: 1022
% Trivial inequalities: 290
% Fw subsumption resolutions: 2616
% Fw demodulations: 2307
% Bw demodulations: 9
% 
% Simple tautologies: 323
% Equational tautologies: 62
% Forward subsumptions: 8827
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 45
% Forward superposition: 7177
% Backward superposition: 4234
% Self superposition: 265
% Equality factoring: 174
% Equality resolution: 25
% 
% Split clauses: 1088
% Split components: 2214
% SAT solver clauses: 1640
% SAT solver unit clauses: 24
% SAT solver binary clauses: 187
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 1088
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1614
% TWLsolver calls for satisfiability: 116
% 
% Memory used [KB]: 8059
% Time elapsed: 0.469 s
% ------------------------------
% ------------------------------
% Success in time 0.459 s
