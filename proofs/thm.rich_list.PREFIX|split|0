Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f4398,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f4388])).
fof(f4388,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.NIL_0')),
  inference(superposition,[],[f65,f4373])).
fof(f4373,plain,(
  ( ! [X4,X3] : (s('type.list.list'(X3),'const.list.NIL_0') = s('type.list.list'(X3),'const.rich_list.PREFIX_2'(s(fun(X3,bool),X4),s('type.list.list'(X3),'const.list.NIL_0')))) )),
  inference(superposition,[],[f89,f91])).
fof(f91,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X3) = s(X1,'const.list.FOLDR_3'(s(fun(X0,fun(X1,X1)),X2),s(X1,X3),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1,X2,X3] : s(X1,X3) = s(X1,'const.list.FOLDR_3'(s(fun(X0,fun(X1,X1)),X2),s(X1,X3),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X3) = s(X1,'const.list.FOLDR_3'(s(fun(X0,fun(X1,X1)),X2),s(X1,X3),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6,X10] : ! [X11,X12] : s(X10,X12) = s(X10,'const.list.FOLDR_3'(s(fun(X6,fun(X10,X10)),X11),s(X10,X12),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.rich_list.PREFIX|split|0','thm.list.FOLDR|split|0')).
fof(f89,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.rich_list.PREFIX_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.FOLDR_3'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'_dst_x00x10x11x00_4'(s(fun(bool,fun('type.list.list'(X0),fun('type.list.list'(X0),'type.list.list'(X0)))),'const.bool.COND_0'),s(fun(X0,bool),X1),s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.rich_list.PREFIX_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.FOLDR_3'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'_dst_x00x10x11x00_4'(s(fun(bool,fun('type.list.list'(X0),fun('type.list.list'(X0),'type.list.list'(X0)))),'const.bool.COND_0'),s(fun(X0,bool),X1),s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.rich_list.PREFIX_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.FOLDR_3'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'_dst_x00x10x11x00_4'(s(fun(bool,fun('type.list.list'(X0),fun('type.list.list'(X0),'type.list.list'(X0)))),'const.bool.COND_0'),s(fun(X0,bool),X1),s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.CONS_0'),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : ! [X7,X13] : s('type.list.list'(X6),'const.rich_list.PREFIX_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),X13))) = s('type.list.list'(X6),'const.list.FOLDR_3'(s(fun(X6,fun('type.list.list'(X6),'type.list.list'(X6))),'_dst_x00x10x11x00_4'(s(fun(bool,fun('type.list.list'(X6),fun('type.list.list'(X6),'type.list.list'(X6)))),'const.bool.COND_0'),s(fun(X6,bool),X7),s(fun(X6,fun('type.list.list'(X6),'type.list.list'(X6))),'const.list.CONS_0'),s('type.list.list'(X6),'const.list.NIL_0'))),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X6),X13)))),
  file('thm.rich_list.PREFIX|split|0','thm.rich_list.PREFIX_FOLDR')).
fof(f65,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.rich_list.PREFIX_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.rich_list.PREFIX_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),'const.list.NIL_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f48])).
fof(f48,plain,(
  ? [X0,X1] : s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.rich_list.PREFIX_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(ennf_transformation,[],[f22])).
fof(f22,plain,(
  ~! [X0,X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.rich_list.PREFIX_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ~! [X0] : ! [X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.rich_list.PREFIX_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.rich_list.PREFIX_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),'const.list.NIL_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.rich_list.PREFIX_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.rich_list.PREFIX|split|0','thm.rich_list.PREFIX|split|0')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 31
% Passive clauses: 810
% Generated clauses: 4165
% Final active clauses: 29
% Final passive clauses: 764
% Input formulas: 19
% Initial clauses: 31
% 
% Duplicate literals: 416
% Trivial inequalities: 56
% Fw subsumption resolutions: 203
% Fw demodulations: 46
% 
% Simple tautologies: 137
% Equational tautologies: 82
% Forward subsumptions: 1796
% 
% Binary resolution: 12
% Forward superposition: 1413
% Backward superposition: 1480
% Self superposition: 257
% Equality factoring: 216
% Equality resolution: 4
% 
% Split clauses: 188
% Split components: 382
% SAT solver clauses: 625
% SAT solver unit clauses: 345
% SAT solver binary clauses: 141
% 
% Sat splits: 188
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 621
% TWLsolver calls for satisfiability: 23
% 
% Memory used [KB]: 2942
% Time elapsed: 0.196 s
% ------------------------------
% ------------------------------
% Success in time 0.198 s
