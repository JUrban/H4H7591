Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% (65803)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 221
% Passive clauses: 2333
% Generated clauses: 26001
% Final active clauses: 192
% Final passive clauses: 1948
% Input formulas: 17
% Initial clauses: 19
% 
% Duplicate literals: 1133
% Trivial inequalities: 20
% Fw subsumption resolutions: 1409
% Fw demodulations: 4165
% Bw demodulations: 24
% 
% Simple tautologies: 106
% Equational tautologies: 19
% Forward subsumptions: 16306
% Fw demodulations to eq. taut.: 63
% 
% Binary resolution: 30
% Forward superposition: 9974
% Backward superposition: 9003
% Self superposition: 158
% Equality factoring: 36
% Equality resolution: 3
% 
% Split clauses: 382
% Split components: 765
% SAT solver clauses: 564
% SAT solver unit clauses: 1
% SAT solver binary clauses: 62
% 
% Sat splits: 382
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 564
% TWLsolver calls for satisfiability: 71
% 
% Memory used [KB]: 20724
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f15235,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f15234,f97,f105,f103,f52,f75,f112,f44,f66,f47,f70,f452,f459,f457,f373,f374,f45,f64,f46,f68,f90,f98,f473,f15219,f15220,f53,f76,f143,f145,f60,f83,f100,f102,f14993,f15093,f2746,f2809,f125,f126,f57,f80,f809,f847,f59,f82,f62,f85,f4019,f4020,f1048,f1049,f55,f79])).
fof(f79,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0)))))) ) | $spl22),
  inference(cnf_transformation,[],[f79_D])).
fof(f79_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0)))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f55,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))))),
  inference(ennf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => ! [X7] : (s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X6))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X6))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X6))))))),
  file('thm.arithmetic.DIV_LESS_EQ','thm.arithmetic.DIVISION')).
fof(f1049,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X13)))) | s('type.num.num',X14) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X13)))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X13)))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X13))))))))) ) | $spl170),
  inference(cnf_transformation,[],[f1049_D])).
fof(f1049_D,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X13)))) | s('type.num.num',X14) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X13)))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X13)))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X13))))))))) ) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f1048,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X13)))) | s('type.num.num',X14) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X13)))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X13)))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X13))))))))) ) | ($spl18 | $spl22 | $spl30)),
  inference(subsumption_resolution,[],[f1029,f83])).
fof(f1029,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X13)))) | s('type.num.num',X14) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X13)))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X13)))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X13)))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X13)) ) | ($spl18 | $spl22)),
  inference(superposition,[],[f79,f76])).
fof(f4020,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0)))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0)))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0))))))))) ) | $spl534),
  inference(cnf_transformation,[],[f4020_D])).
fof(f4020_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0)))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0)))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0))))))))) ) <=> ~$spl534),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl534])])).
fof(f4019,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0)))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0)))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0))))))))) ) | ($spl4 | $spl40 | $spl170)),
  inference(subsumption_resolution,[],[f3986,f68])).
fof(f3986,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0)))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0)))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0))))))))) ) | ($spl40 | $spl170)),
  inference(superposition,[],[f1049,f102])).
fof(f85,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) ) | $spl34),
  inference(cnf_transformation,[],[f85_D])).
fof(f85_D,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f62,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8,X6,X9] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X6))),s('type.num.num',X9)))),
  file('thm.arithmetic.DIV_LESS_EQ','thm.arithmetic.ADD_ASSOC')).
fof(f82,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | $spl28),
  inference(cnf_transformation,[],[f82_D])).
fof(f82_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f59,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X8,X6] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X6)))))),
  file('thm.arithmetic.DIV_LESS_EQ','thm.arithmetic.MULT_SUC')).
fof(f847,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))))) ) | $spl102),
  inference(cnf_transformation,[],[f847_D])).
fof(f847_D,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))))) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f809,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))))) ) | ($spl28 | $spl34)),
  inference(superposition,[],[f85,f82])).
fof(f80,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) ) | $spl24),
  inference(cnf_transformation,[],[f80_D])).
fof(f80_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f57,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X8,X6] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X6))))))),
  file('thm.arithmetic.DIV_LESS_EQ','thm.arithmetic.LESS_EQ_ADD')).
fof(f126,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | $spl46),
  inference(cnf_transformation,[],[f126_D])).
fof(f126_D,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f125,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | ($spl7 | $spl16 | $spl24)),
  inference(subsumption_resolution,[],[f124,f70])).
fof(f124,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | ($spl16 | $spl24)),
  inference(superposition,[],[f80,f75])).
fof(f2809,plain,(
  ( ! [X6,X8,X7] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))),s('type.num.num',X8)))))) ) | $spl396),
  inference(cnf_transformation,[],[f2809_D])).
fof(f2809_D,plain,(
  ( ! [X6,X8,X7] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))),s('type.num.num',X8)))))) ) <=> ~$spl396),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl396])])).
fof(f2746,plain,(
  ( ! [X6,X8,X7] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))),s('type.num.num',X8)))))) ) | ($spl46 | $spl102)),
  inference(superposition,[],[f126,f847])).
fof(f15093,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0)))))),s('type.num.num',X5)))) ) | $spl944),
  inference(cnf_transformation,[],[f15093_D])).
fof(f15093_D,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0)))))),s('type.num.num',X5)))) ) <=> ~$spl944),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl944])])).
fof(f14993,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(sK0)))))),s('type.num.num',X5)))) ) | ($spl396 | $spl534)),
  inference(superposition,[],[f2809,f4020])).
fof(f102,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | $spl40),
  inference(cnf_transformation,[],[f102_D])).
fof(f102_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f100,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | ($spl2 | $spl7 | $spl16)),
  inference(subsumption_resolution,[],[f94,f70])).
fof(f94,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | ($spl2 | $spl16)),
  inference(superposition,[],[f66,f75])).
fof(f83,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) != s('type.num.num',X1)) ) | $spl30),
  inference(cnf_transformation,[],[f83_D])).
fof(f83_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) != s('type.num.num',X1)) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f60,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) != s('type.num.num',X1))),
  inference(ennf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) => s('type.num.num',X0) != s('type.num.num',X1))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) => ~s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X8,X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X6)))) => ~s('type.num.num',X6) = s('type.num.num',X8))),
  file('thm.arithmetic.DIV_LESS_EQ','thm.prim_rec.LESS_NOT_EQ')).
fof(f145,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) | $spl49),
  inference(cnf_transformation,[],[f145_D])).
fof(f145_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f143,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) | ($spl4 | $spl30 | $spl40)),
  inference(subsumption_resolution,[],[f137,f68])).
fof(f137,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) | ($spl30 | $spl40)),
  inference(superposition,[],[f83,f102])).
fof(f76,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl18),
  inference(cnf_transformation,[],[f76_D])).
fof(f76_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f53,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2])],[f25])).
fof(f25,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X8) | ? [X6] : s('type.num.num',X8) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),
  file('thm.arithmetic.DIV_LESS_EQ','thm.arithmetic.num_CASES')).
fof(f15220,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',sK0))),s('type.num.num',X0)))) ) | $spl958),
  inference(cnf_transformation,[],[f15220_D])).
fof(f15220_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',sK0))),s('type.num.num',X0)))) ) <=> ~$spl958),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl958])])).
fof(f15219,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',sK0))),s('type.num.num',X0)))) ) | ($spl18 | $spl49 | $spl944)),
  inference(subsumption_resolution,[],[f15113,f145])).
fof(f15113,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',sK0))),s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0)) ) | ($spl18 | $spl944)),
  inference(superposition,[],[f15093,f76])).
fof(f473,plain,(
  $false | ($spl4 | $spl7 | $spl68)),
  inference(subsumption_resolution,[],[f463,f68])).
fof(f463,plain,(
  ~p(s(bool,'T_0')) | ($spl7 | $spl68)),
  inference(backward_demodulation,[],[f457,f70])).
fof(f98,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl36),
  inference(cnf_transformation,[],[f98_D])).
fof(f98_D,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f90,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(superposition,[],[f75,f75])).
fof(f68,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f68_D])).
fof(f68_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f46,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.DIV_LESS_EQ',aHL_TRUTH)).
fof(f64,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK1)))) | $spl1),
  inference(cnf_transformation,[],[f64_D])).
fof(f64_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK1)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f45,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK1))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f36])).
fof(f36,plain,(
  ? [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) & ? [X1] : ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f19])).
fof(f19,plain,(
  ~! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => ! [X1] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => ! [X7] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => ! [X7] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X7)))))),
  file('thm.arithmetic.DIV_LESS_EQ','thm.arithmetic.DIV_LESS_EQ')).
fof(f374,plain,(
  ( ! [X12] : (s(bool,X12) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X12)) ) | $spl60),
  inference(cnf_transformation,[],[f374_D])).
fof(f374_D,plain,(
  ( ! [X12] : (s(bool,X12) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X12)) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f373,plain,(
  ( ! [X12] : (s(bool,X12) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X12)) ) | ($spl1 | $spl4 | $spl36)),
  inference(subsumption_resolution,[],[f256,f68])).
fof(f256,plain,(
  ( ! [X12] : (~p(s(bool,'T_0')) | s(bool,X12) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X12)) ) | ($spl1 | $spl36)),
  inference(superposition,[],[f64,f98])).
fof(f457,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) | $spl68),
  inference(cnf_transformation,[],[f457_D])).
fof(f457_D,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f459,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK1))) | $spl70),
  inference(cnf_transformation,[],[f459_D])).
fof(f459_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK1))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f452,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X9)) ) | ($spl16 | $spl60)),
  inference(duplicate_literal_removal,[],[f410])).
fof(f410,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | ($spl16 | $spl60)),
  inference(superposition,[],[f374,f75])).
fof(f70,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f70_D])).
fof(f70_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f47,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.DIV_LESS_EQ',aHL_FALSITY)).
fof(f66,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | $spl2),
  inference(cnf_transformation,[],[f66_D])).
fof(f66_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f44,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f41])).
fof(f112,plain,(
  $false | ($spl2 | $spl7 | $spl42)),
  inference(subsumption_resolution,[],[f109,f70])).
fof(f109,plain,(
  p(s(bool,'F_0')) | ($spl2 | $spl42)),
  inference(backward_demodulation,[],[f103,f66])).
fof(f75,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f75_D])).
fof(f75_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f52,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.DIV_LESS_EQ',aHL_BOOL_CASES)).
fof(f103,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl42),
  inference(cnf_transformation,[],[f103_D])).
fof(f103_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f105,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl45),
  inference(cnf_transformation,[],[f105_D])).
fof(f105_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f97,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) ) | $spl16),
  inference(equality_factoring,[],[f75])).
fof(f15234,plain,(
  $false | ($spl45 | $spl70 | $spl958)),
  inference(subsumption_resolution,[],[f15233,f105])).
fof(f15233,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl70 | $spl958)),
  inference(backward_demodulation,[],[f15220,f459])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 126
% Passive clauses: 485
% Generated clauses: 15054
% Final active clauses: 117
% Final passive clauses: 341
% Input formulas: 17
% Initial clauses: 19
% 
% Duplicate literals: 1046
% Trivial inequalities: 24
% Fw subsumption resolutions: 1129
% Fw demodulations: 2620
% Bw demodulations: 24
% Condensations: 898
% Global subsumptions: 1
% 
% Simple tautologies: 148
% Equational tautologies: 18
% Forward subsumptions: 8071
% Fw demodulations to eq. taut.: 17
% 
% Binary resolution: 19
% Forward superposition: 5528
% Backward superposition: 3096
% Self superposition: 121
% Equality factoring: 34
% Equality resolution: 6
% 
% Split clauses: 32
% Split components: 76
% SAT solver clauses: 614
% SAT solver unit clauses: 34
% SAT solver binary clauses: 20
% SAT solver learnt clauses: 3
% 
% Sat splits: 32
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 609
% TWLsolver calls for satisfiability: 144
% 
% Memory used [KB]: 10362
% Time elapsed: 0.385 s
% ------------------------------
% ------------------------------
% Success in time 1.007 s
