Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.real
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.real
% SZS output start Proof for thm.real
fof(f1509,plain,(
  $false),
  inference(subsumption_resolution,[],[f66,f605])).
fof(f605,plain,(
  ( ! [X0,X1] : (s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.real.NUM_FLOOR_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1)))) )),
  inference(superposition,[],[f90,f92])).
fof(f92,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s(bool,'const.realax.real_lt_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',X2)))))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2] : s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s(bool,'const.realax.real_lt_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',X2)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6,X10,X16] : s(bool,'const.realax.real_lt_2'(s('type.realax.real',X6),s('type.realax.real',X10))) = s(bool,'const.realax.real_lt_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X16))),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X10),s('type.realax.real',X16)))))),
  file('thm.real.NUM_FLOOR_LOWER_BOUND','thm.real.REAL_LT_RADD')).
fof(f90,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.real.NUM_FLOOR_1'(s('type.realax.real',X1))),s('type.num.num',X0))) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.real.NUM_FLOOR_1'(s('type.realax.real',X1))),s('type.num.num',X0))) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X10,X6] : s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.real.NUM_FLOOR_1'(s('type.realax.real',X6))),s('type.num.num',X10))) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X6),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X10))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  file('thm.real.NUM_FLOOR_LOWER_BOUND','thm.real.NUM_FLOOR_LET')).
fof(f66,plain,(
  s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',sK1))))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.real.NUM_FLOOR_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',sK1)))),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',sK1))))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.real.NUM_FLOOR_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',sK1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f37])).
fof(f37,plain,(
  ? [X0,X1] : s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.real.NUM_FLOOR_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1)))),
  inference(ennf_transformation,[],[f19])).
fof(f19,plain,(
  ~! [X0,X1] : s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.real.NUM_FLOOR_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s(bool,'const.realax.real_lt_2'(s('type.realax.real',X6),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X7))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.real.NUM_FLOOR_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s(bool,'const.realax.real_lt_2'(s('type.realax.real',X6),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X7))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.real.NUM_FLOOR_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7)))),
  file('thm.real.NUM_FLOOR_LOWER_BOUND','thm.real.NUM_FLOOR_LOWER_BOUND')).
% SZS output end Proof for thm.real
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 48
% Passive clauses: 261
% Generated clauses: 1397
% Final active clauses: 39
% Final passive clauses: 167
% Input formulas: 17
% Initial clauses: 41
% 
% Duplicate literals: 120
% Trivial inequalities: 60
% Fw subsumption resolutions: 134
% Fw demodulations: 82
% Bw demodulations: 5
% 
% Simple tautologies: 88
% Equational tautologies: 16
% Forward subsumptions: 547
% 
% Binary resolution: 31
% Forward superposition: 477
% Backward superposition: 334
% Self superposition: 28
% Equality factoring: 28
% Equality resolution: 11
% 
% Split clauses: 72
% Split components: 153
% SAT solver clauses: 122
% SAT solver unit clauses: 6
% SAT solver binary clauses: 38
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 72
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 119
% TWLsolver calls for satisfiability: 37
% 
% Memory used [KB]: 1407
% Time elapsed: 0.043 s
% ------------------------------
% ------------------------------
% Success in time 0.044 s
