Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f1553,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1543,f227,f234,f297,f233,f832,f834,f404,f406,f867,f395,f399,f229,f237,f236,f534,f55,f58,f56,f67,f452,f1532,f887,f727,f729,f247,f1450,f283,f232,f1410,f1495])).
fof(f1495,plain,(
  $false | ($spl7 | $spl38)),
  inference(subsumption_resolution,[],[f1461,f79])).
fof(f79,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(resolution,[],[f78,f52])).
fof(f52,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f36,f37])).
fof(f37,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.LESS_EQ_MONO',aHL_BOOL_CASES)).
fof(f36,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.LESS_EQ_MONO',aHL_FALSITY)).
fof(f78,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))) )),
  inference(equality_resolution,[],[f45])).
fof(f45,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1)) & ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & s('type.num.num',X0) != s('type.num.num',X1)) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1))) & ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & s('type.num.num',X0) != s('type.num.num',X1)) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7,X6] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))) | s('type.num.num',X6) = s('type.num.num',X7)))),
  file('thm.arithmetic.LESS_EQ_MONO','thm.arithmetic.LESS_OR_EQ')).
fof(f1461,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK0))) | ($spl7 | $spl38)),
  inference(backward_demodulation,[],[f834,f234])).
fof(f1410,plain,(
  $false | ($spl39 | $spl46)),
  inference(subsumption_resolution,[],[f1408,f833])).
fof(f833,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | $spl39),
  inference(cnf_transformation,[],[f833_D])).
fof(f833_D,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f1408,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | $spl46),
  inference(equality_resolution,[],[f1235])).
fof(f1235,plain,(
  ( ! [X2] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) | s('type.num.num',sK1) = s('type.num.num',X2)) ) | $spl46),
  inference(superposition,[],[f46,f1225])).
fof(f1225,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))) | $spl46),
  inference(cnf_transformation,[],[f1225_D])).
fof(f1225_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f46,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X7,X6] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  file('thm.arithmetic.LESS_EQ_MONO','thm.prim_rec.INV_SUC_EQ')).
fof(f232,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(cnf_transformation,[],[f232_D])).
fof(f232_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f283,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl9),
  inference(trivial_inequality_removal,[],[f277])).
fof(f277,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl9),
  inference(superposition,[],[f235,f50])).
fof(f50,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f37,f37])).
fof(f235,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | $spl9),
  inference(cnf_transformation,[],[f235_D])).
fof(f235_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f1450,plain,(
  $false | ($spl8 | $spl32 | $spl47)),
  inference(subsumption_resolution,[],[f1449,f36])).
fof(f1449,plain,(
  p(s(bool,'F_0')) | ($spl8 | $spl32 | $spl47)),
  inference(forward_demodulation,[],[f1448,f729])).
fof(f1448,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | ($spl8 | $spl47)),
  inference(subsumption_resolution,[],[f1447,f1224])).
fof(f1224,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))) != s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))) | $spl47),
  inference(cnf_transformation,[],[f1224_D])).
fof(f1224_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))) != s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f1447,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl8),
  inference(subsumption_resolution,[],[f1437,f34])).
fof(f34,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.LESS_EQ_MONO',aHL_TRUTH)).
fof(f1437,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl8),
  inference(superposition,[],[f325,f236])).
fof(f325,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(superposition,[],[f43,f42])).
fof(f42,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7,X6] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))),
  file('thm.arithmetic.LESS_EQ_MONO','thm.prim_rec.LESS_MONO_EQ')).
fof(f43,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f247,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) | $spl14),
  inference(cnf_transformation,[],[f247_D])).
fof(f247_D,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f729,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl32),
  inference(cnf_transformation,[],[f729_D])).
fof(f729_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f727,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl27),
  inference(duplicate_literal_removal,[],[f671])).
fof(f671,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl27),
  inference(superposition,[],[f475,f37])).
fof(f475,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl27),
  inference(resolution,[],[f406,f143])).
fof(f143,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f34,f50])).
fof(f887,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl40),
  inference(cnf_transformation,[],[f887_D])).
fof(f887_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f1532,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl26),
  inference(resolution,[],[f405,f44])).
fof(f44,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f405,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl26),
  inference(cnf_transformation,[],[f405_D])).
fof(f405_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f452,plain,(
  $false | ($spl3 | $spl14)),
  inference(trivial_inequality_removal,[],[f444])).
fof(f444,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl3 | $spl14)),
  inference(superposition,[],[f58,f247])).
fof(f67,plain,(
  $false | $spl0),
  inference(resolution,[],[f64,f34])).
fof(f64,plain,(
  ( ! [X2] : (~p(s(bool,X2))) ) | $spl0),
  inference(superposition,[],[f36,f56])).
fof(f56,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f56_D])).
fof(f56_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f58,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f58_D])).
fof(f58_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f55,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f37])).
fof(f534,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | ($spl4 | $spl8)),
  inference(duplicate_literal_removal,[],[f517])).
fof(f517,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | ($spl4 | $spl8)),
  inference(superposition,[],[f236,f232])).
fof(f236,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | $spl8),
  inference(cnf_transformation,[],[f236_D])).
fof(f236_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f237,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X2)) ) | $spl10),
  inference(cnf_transformation,[],[f237_D])).
fof(f237_D,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f229,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f33,f50])).
fof(f33,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f23])).
fof(f23,plain,(
  ? [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f13])).
fof(f13,plain,(
  ~! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))),
  file('thm.arithmetic.LESS_EQ_MONO','thm.arithmetic.LESS_EQ_MONO')).
fof(f399,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | $spl20),
  inference(cnf_transformation,[],[f399_D])).
fof(f399_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f395,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(duplicate_literal_removal,[],[f350])).
fof(f350,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(superposition,[],[f232,f37])).
fof(f867,plain,(
  $false | ($spl3 | $spl20 | $spl38)),
  inference(subsumption_resolution,[],[f866,f58])).
fof(f866,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl20 | $spl38)),
  inference(forward_demodulation,[],[f846,f79])).
fof(f846,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))) | ($spl20 | $spl38)),
  inference(backward_demodulation,[],[f834,f399])).
fof(f406,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl27),
  inference(cnf_transformation,[],[f406_D])).
fof(f406_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f404,plain,(
  ( ! [X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | s(bool,'T_0') = s(bool,X1)) ) | $spl4),
  inference(subsumption_resolution,[],[f375,f52])).
fof(f375,plain,(
  ( ! [X1] : (p(s(bool,X1)) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | s(bool,'T_0') = s(bool,X1)) ) | $spl4),
  inference(superposition,[],[f311,f232])).
fof(f311,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(superposition,[],[f44,f42])).
fof(f834,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | $spl38),
  inference(cnf_transformation,[],[f834_D])).
fof(f834_D,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f832,plain,(
  ( ! [X0] : (s('type.num.num',sK0) = s('type.num.num',sK1) | s(bool,'T_0') = s(bool,X0)) ) | ($spl6 | $spl27)),
  inference(subsumption_resolution,[],[f831,f34])).
fof(f831,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num',sK0) = s('type.num.num',sK1) | s(bool,'T_0') = s(bool,X0)) ) | ($spl6 | $spl27)),
  inference(forward_demodulation,[],[f830,f233])).
fof(f830,plain,(
  ( ! [X0] : (s('type.num.num',sK0) = s('type.num.num',sK1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | s(bool,'T_0') = s(bool,X0)) ) | $spl27),
  inference(subsumption_resolution,[],[f818,f52])).
fof(f818,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s('type.num.num',sK0) = s('type.num.num',sK1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | s(bool,'T_0') = s(bool,X0)) ) | $spl27),
  inference(superposition,[],[f43,f475])).
fof(f233,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl6),
  inference(cnf_transformation,[],[f233_D])).
fof(f233_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f297,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl10),
  inference(equality_resolution,[],[f237])).
fof(f234,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl7),
  inference(cnf_transformation,[],[f234_D])).
fof(f234_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f227,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f33,f50])).
fof(f1543,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl40),
  inference(resolution,[],[f887,f52])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 77
% Passive clauses: 266
% Generated clauses: 1554
% Final active clauses: 26
% Final passive clauses: 66
% Input formulas: 11
% Initial clauses: 16
% 
% Duplicate literals: 141
% Trivial inequalities: 23
% Fw subsumption resolutions: 127
% Fw demodulations: 165
% Bw demodulations: 31
% 
% Simple tautologies: 52
% Equational tautologies: 21
% Forward subsumptions: 670
% 
% Binary resolution: 36
% Forward superposition: 436
% Backward superposition: 407
% Self superposition: 36
% Equality factoring: 34
% Equality resolution: 7
% 
% Split clauses: 56
% Split components: 115
% SAT solver clauses: 126
% SAT solver unit clauses: 12
% SAT solver binary clauses: 42
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 56
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 119
% TWLsolver calls for satisfiability: 34
% 
% Memory used [KB]: 1151
% Time elapsed: 0.038 s
% ------------------------------
% ------------------------------
% Success in time 0.04 s
