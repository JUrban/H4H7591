Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f3748,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f3747])).
fof(f3747,plain,(
  s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK2),s('type.list.list'(sK1),sK3))) != s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK2),s('type.list.list'(sK1),sK3)))),
  inference(forward_demodulation,[],[f3722,f319])).
fof(f319,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f100])).
fof(f100,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f59])).
fof(f59,axiom,(
  ! [X6] : ! [X8] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X6),X8)))),
  file('thm.rich_list.CONS_APPEND','thm.list.APPEND|split|0')).
fof(f3722,plain,(
  s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK2),s('type.list.list'(sK1),sK3))) != s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK2),s('type.list.list'(sK1),'const.list.APPEND_2'(s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK1),sK3)))))),
  inference(superposition,[],[f266,f348])).
fof(f348,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f145])).
fof(f145,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X9,X10,X11] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X10))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),X9))),s('type.list.list'(X6),X10)))),
  file('thm.rich_list.CONS_APPEND','thm.list.APPEND|split|1')).
fof(f266,plain,(
  s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK2),s('type.list.list'(sK1),sK3))) != s('type.list.list'(sK1),'const.list.APPEND_2'(s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK2),s('type.list.list'(sK1),'const.list.NIL_0'))),s('type.list.list'(sK1),sK3)))),
  inference(cnf_transformation,[],[f215])).
fof(f215,plain,(
  s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK2),s('type.list.list'(sK1),sK3))) != s('type.list.list'(sK1),'const.list.APPEND_2'(s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK2),s('type.list.list'(sK1),'const.list.NIL_0'))),s('type.list.list'(sK1),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3])],[f181])).
fof(f181,plain,(
  ? [X0,X1,X2] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X2)))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.NIL_0'))),s('type.list.list'(X6),X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.NIL_0'))),s('type.list.list'(X6),X8)))),
  file('thm.rich_list.CONS_APPEND','thm.rich_list.CONS_APPEND')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 190
% Passive clauses: 1190
% Generated clauses: 3478
% Final active clauses: 189
% Final passive clauses: 916
% Input formulas: 69
% Initial clauses: 135
% 
% Duplicate literals: 80
% Trivial inequalities: 12
% Fw subsumption resolutions: 236
% Fw demodulations: 90
% Bw demodulations: 1
% 
% Simple tautologies: 82
% Equational tautologies: 23
% Forward subsumptions: 1806
% Fw demodulations to eq. taut.: 4
% 
% Binary resolution: 1578
% Factoring: 479
% Forward superposition: 461
% Backward superposition: 370
% Self superposition: 20
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 17
% Split components: 35
% SAT solver clauses: 21
% SAT solver unit clauses: 4
% SAT solver binary clauses: 16
% 
% Sat splits: 17
% 
% TWLsolver clauses: 21
% TWLsolver calls for satisfiability: 3
% 
% Memory used [KB]: 2686
% Time elapsed: 0.078 s
% ------------------------------
% ------------------------------
% Success in time 0.082 s
