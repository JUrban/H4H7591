Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f10693,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f10599,f160,f248,f243,f250,f252,f1013,f1033,f10558,f9995,f9993])).
fof(f9993,plain,(
  ( ! [X25] : (s(bool,'F_0') = s(bool,sK1('_dst_x0_1'(s(bool,'F_0')),X25))) ) | $spl122),
  inference(cnf_transformation,[],[f9993_D])).
fof(f9993_D,plain,(
  ( ! [X25] : (s(bool,'F_0') = s(bool,sK1('_dst_x0_1'(s(bool,'F_0')),X25))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f9995,plain,(
  ( ! [X28] : (s(bool,'F_0') = s(bool,sK1('_dst_x0_1'(s(bool,'F_0')),X28))) ) | $spl3),
  inference(forward_demodulation,[],[f9994,f202])).
fof(f202,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0')))))) )),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0,X1] : s(bool,'F_0') = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0')))))),
  inference(flattening,[],[f67])).
fof(f67,plain,(
  ! [X0] : ! [X1] : s(bool,'F_0') = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0')))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7] : s(bool,'F_0') = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'_dst_x0_1'(s(bool,'F_0')))))),
  file('thm.option.some_F','thm.bool.RES_EXISTS_FALSE')).
fof(f9994,plain,(
  ( ! [X28,X26,X27] : (s(bool,'F_0') = s(bool,sK1('_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X26,bool),X27),s(fun(X26,bool),'_dst_x0_1'(s(bool,'F_0')))))),X28))) ) | $spl3),
  inference(subsumption_resolution,[],[f9927,f248])).
fof(f9927,plain,(
  ( ! [X28,X26,X27] : (p(s(bool,'F_0')) | s(bool,'F_0') = s(bool,sK1('_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X26,bool),X27),s(fun(X26,bool),'_dst_x0_1'(s(bool,'F_0')))))),X28))) )),
  inference(superposition,[],[f9876,f202])).
fof(f9876,plain,(
  ( ! [X19,X18] : (p(s(bool,X19)) | s(bool,'F_0') = s(bool,sK1('_dst_x0_1'(s(bool,X19)),X18))) )),
  inference(superposition,[],[f875,f227])).
fof(f227,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(flattening,[],[f86])).
fof(f86,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X12,X13] : ! [X14,X15] : s(X13,X14) = s(X13,happ(s(fun(X12,X13),'_dst_x0_1'(s(X13,X14))),s(X12,X15)))),
  file('thm.option.some_F','_dst_x0_ax')).
fof(f875,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK2(X5,X4))))) | s(bool,'F_0') = s(bool,sK1(X5,X4))) )),
  inference(resolution,[],[f205,f170])).
fof(f170,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X16] : (s(bool,'F_0') = s(bool,X16) <=> ~p(s(bool,X16)))),
  file('thm.option.some_F','thm.bool.EQ_CLAUSES|split|2')).
fof(f205,plain,(
  ( ! [X0,X1] : (~p(s(bool,sK1(X1,X0))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK2(X1,X0)))))) )),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1] : ((~p(s(bool,sK1(X1,X0))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK2(X1,X0)))))) & (! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,sK1(X1,X0)))) & s('type.option.option'(X0),'const.option.some_1'(s(fun(X0,bool),X1))) = s('type.option.option'(X0),'const.bool.COND_3'(s(bool,sK1(X1,X0)),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,'const.min.@_1'(s(fun(X0,bool),X1))))),s('type.option.option'(X0),'const.option.NONE_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2])],[f136])).
fof(f136,plain,(
  ! [X0,X1] : ? [X2] : ((~p(s(bool,X2)) | ? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) & (! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,X2))) & s('type.option.option'(X0),'const.option.some_1'(s(fun(X0,bool),X1))) = s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X2),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,'const.min.@_1'(s(fun(X0,bool),X1))))),s('type.option.option'(X0),'const.option.NONE_0'))))),
  inference(rectify,[],[f135])).
fof(f135,plain,(
  ! [X0,X1] : ? [X2] : ((~p(s(bool,X2)) | ? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & (! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,X2))) & s('type.option.option'(X0),'const.option.some_1'(s(fun(X0,bool),X1))) = s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X2),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,'const.min.@_1'(s(fun(X0,bool),X1))))),s('type.option.option'(X0),'const.option.NONE_0'))))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ! [X0,X1] : ? [X2] : (((~p(s(bool,X2)) | ? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & (! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,X2)))) & s('type.option.option'(X0),'const.option.some_1'(s(fun(X0,bool),X1))) = s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X2),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,'const.min.@_1'(s(fun(X0,bool),X1))))),s('type.option.option'(X0),'const.option.NONE_0'))))),
  inference(nnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : ? [X2] : ((p(s(bool,X2)) <=> ? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & s('type.option.option'(X0),'const.option.some_1'(s(fun(X0,bool),X1))) = s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X2),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,'const.min.@_1'(s(fun(X0,bool),X1))))),s('type.option.option'(X0),'const.option.NONE_0'))))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ! [X0] : ! [X1] : ? [X2] : ((p(s(bool,X2)) <=> ? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & s('type.option.option'(X0),'const.option.some_1'(s(fun(X0,bool),X1))) = s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X2),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,'const.min.@_1'(s(fun(X0,bool),X1))))),s('type.option.option'(X0),'const.option.NONE_0'))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X7] : ? [X8] : ((p(s(bool,X8)) <=> ? [X9] : p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X9))))) & s('type.option.option'(X6),'const.option.some_1'(s(fun(X6,bool),X7))) = s('type.option.option'(X6),'const.bool.COND_3'(s(bool,X8),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,'const.min.@_1'(s(fun(X6,bool),X7))))),s('type.option.option'(X6),'const.option.NONE_0'))))),
  file('thm.option.some_F','thm.option.some_def')).
fof(f10558,plain,(
  $false | ($spl22 | $spl122)),
  inference(subsumption_resolution,[],[f10557,f10170])).
fof(f10170,plain,(
  ( ! [X80] : (s(bool,'T_0') != s(bool,sK1('_dst_x0_1'(s(bool,'F_0')),X80))) ) | ($spl22 | $spl122)),
  inference(trivial_inequality_removal,[],[f10140])).
fof(f10140,plain,(
  ( ! [X80] : (s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,sK1('_dst_x0_1'(s(bool,'F_0')),X80))) ) | ($spl22 | $spl122)),
  inference(superposition,[],[f1033,f9993])).
fof(f10557,plain,(
  s(bool,'T_0') = s(bool,sK1('_dst_x0_1'(s(bool,'F_0')),sK0))),
  inference(trivial_inequality_removal,[],[f10544])).
fof(f10544,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.NONE_0') | s(bool,'T_0') = s(bool,sK1('_dst_x0_1'(s(bool,'F_0')),sK0))),
  inference(superposition,[],[f154,f1889])).
fof(f1889,plain,(
  ( ! [X4,X3] : (s('type.option.option'(X4),'const.option.NONE_0') = s('type.option.option'(X4),'const.option.some_1'(s(fun(X4,bool),X3))) | s(bool,'T_0') = s(bool,sK1(X3,X4))) )),
  inference(forward_demodulation,[],[f1875,f209])).
fof(f209,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f74])).
fof(f74,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : ! [X17,X18] : s(X6,X18) = s(X6,'const.bool.COND_3'(s(bool,'F_0'),s(X6,X17),s(X6,X18)))),
  file('thm.option.some_F','thm.bool.COND_CLAUSES|split|1')).
fof(f1875,plain,(
  ( ! [X4,X3] : (s('type.option.option'(X4),'const.option.some_1'(s(fun(X4,bool),X3))) = s('type.option.option'(X4),'const.bool.COND_3'(s(bool,'F_0'),s('type.option.option'(X4),'const.option.SOME_1'(s(X4,'const.min.@_1'(s(fun(X4,bool),X3))))),s('type.option.option'(X4),'const.option.NONE_0'))) | s(bool,'T_0') = s(bool,sK1(X3,X4))) )),
  inference(superposition,[],[f207,f161])).
fof(f161,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.option.some_F',aHL_BOOL_CASES)).
fof(f207,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.some_1'(s(fun(X0,bool),X1))) = s('type.option.option'(X0),'const.bool.COND_3'(s(bool,sK1(X1,X0)),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,'const.min.@_1'(s(fun(X0,bool),X1))))),s('type.option.option'(X0),'const.option.NONE_0')))) )),
  inference(cnf_transformation,[],[f137])).
fof(f154,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.some_1'(s(fun(sK0,bool),'_dst_x0_1'(s(bool,'F_0')))))),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.some_1'(s(fun(sK0,bool),'_dst_x0_1'(s(bool,'F_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f92])).
fof(f92,plain,(
  ? [X0] : s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.some_1'(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0')))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.some_1'(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.some_1'(s(fun(X6,bool),'_dst_x0_1'(s(bool,'F_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.some_1'(s(fun(X6,bool),'_dst_x0_1'(s(bool,'F_0')))))),
  file('thm.option.some_F','thm.option.some_F')).
fof(f1033,plain,(
  ( ! [X3] : (s(bool,'F_0') != s(bool,X3) | s(bool,'T_0') != s(bool,X3)) ) | $spl22),
  inference(cnf_transformation,[],[f1033_D])).
fof(f1033_D,plain,(
  ( ! [X3] : (s(bool,'F_0') != s(bool,X3) | s(bool,'T_0') != s(bool,X3)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f1013,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13) | s(bool,'T_0') != s(bool,X13)) ) | ($spl3 | $spl10)),
  inference(resolution,[],[f390,f248])).
fof(f390,plain,(
  ( ! [X4,X3] : (p(s(bool,X3)) | s(bool,X3) != s(bool,X4) | s(bool,'T_0') != s(bool,X4)) ) | $spl10),
  inference(resolution,[],[f252,f165])).
fof(f165,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X16] : (s(bool,'T_0') = s(bool,X16) <=> p(s(bool,X16)))),
  file('thm.option.some_F','thm.bool.EQ_CLAUSES|split|1')).
fof(f252,plain,(
  ( ! [X2,X3] : (~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | p(s(bool,X2))) ) | $spl10),
  inference(cnf_transformation,[],[f252_D])).
fof(f252_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | p(s(bool,X2))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f250,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl6),
  inference(cnf_transformation,[],[f250_D])).
fof(f250_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f243,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f239])).
fof(f239,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f152])).
fof(f152,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f104])).
fof(f104,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X9,X23,X24,X25] : ((s(bool,X9) = s(bool,X23) & (p(s(bool,X23)) => s(bool,X24) = s(bool,X25))) => ((p(s(bool,X9)) => p(s(bool,X24))) <=> (p(s(bool,X23)) => p(s(bool,X25)))))),
  file('thm.option.some_F','thm.bool.IMP_CONG')).
fof(f248,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f248_D])).
fof(f248_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f160,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.option.some_F',aHL_FALSITY)).
fof(f10599,plain,(
  $false | ($spl3 | $spl6)),
  inference(resolution,[],[f250,f248])).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 170
% Passive clauses: 2037
% Generated clauses: 10492
% Final active clauses: 129
% Final passive clauses: 1402
% Input formulas: 37
% Initial clauses: 89
% 
% Duplicate literals: 198
% Trivial inequalities: 190
% Fw subsumption resolutions: 1306
% Fw demodulations: 1573
% Bw demodulations: 6
% 
% Simple tautologies: 197
% Equational tautologies: 17
% Forward subsumptions: 4851
% 
% Binary resolution: 532
% Forward superposition: 2406
% Backward superposition: 3980
% Self superposition: 43
% Equality factoring: 30
% Equality resolution: 12
% 
% Split clauses: 126
% Split components: 256
% SAT solver clauses: 277
% SAT solver unit clauses: 4
% SAT solver binary clauses: 63
% SAT solver learnt clauses: 1
% 
% Sat splits: 126
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 269
% TWLsolver calls for satisfiability: 53
% 
% Memory used [KB]: 5756
% Time elapsed: 0.193 s
% ------------------------------
% ------------------------------
% Success in time 0.181 s
