Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.list
% (117761)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 133
% Passive clauses: 3858
% Generated clauses: 16674
% Final active clauses: 123
% Final passive clauses: 3533
% Input formulas: 69
% Initial clauses: 145
% 
% Duplicate literals: 634
% Trivial inequalities: 289
% Fw subsumption resolutions: 2207
% Fw demodulations: 1025
% Bw demodulations: 5
% 
% Simple tautologies: 401
% Equational tautologies: 83
% Forward subsumptions: 6978
% Fw demodulations to eq. taut.: 9
% Bw demodulations to eq. taut.: 4
% 
% Binary resolution: 365
% Factoring: 2
% Forward superposition: 5530
% Backward superposition: 5846
% Self superposition: 285
% Equality factoring: 197
% Equality resolution: 36
% 
% Split clauses: 478
% Split components: 969
% SAT solver clauses: 1199
% SAT solver unit clauses: 35
% SAT solver binary clauses: 372
% 
% Sat splits: 478
% 
% TWLsolver clauses: 1198
% TWLsolver calls for satisfiability: 194
% 
% Memory used [KB]: 12281
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.list
% (117776)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 118
% Passive clauses: 814
% Generated clauses: 17029
% Final active clauses: 112
% Final passive clauses: 678
% Input formulas: 69
% Initial clauses: 145
% 
% Duplicate literals: 597
% Trivial inequalities: 269
% Fw subsumption resolutions: 1498
% Fw demodulations: 2528
% Bw demodulations: 18
% Condensations: 1187
% Global subsumptions: 17
% 
% Simple tautologies: 300
% Equational tautologies: 45
% Forward subsumptions: 7921
% Fw demodulations to eq. taut.: 9
% 
% Binary resolution: 60
% Factoring: 1
% Forward superposition: 4712
% Backward superposition: 4835
% Self superposition: 184
% Equality factoring: 89
% Equality resolution: 33
% 
% Split clauses: 28
% Split components: 56
% SAT solver clauses: 1748
% SAT solver unit clauses: 166
% SAT solver binary clauses: 77
% SAT solver learnt clauses: 34
% 
% Sat splits: 28
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1680
% TWLsolver calls for satisfiability: 521
% 
% Memory used [KB]: 16758
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f944,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f943])).
fof(f943,plain,(
  s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))),
  inference(forward_demodulation,[],[f942,f326])).
fof(f326,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f107])).
fof(f107,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X8] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8)))))),
  file('thm.list.REVERSE_SNOC','thm.list.REVERSE_REVERSE')).
fof(f942,plain,(
  s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),sK2)))))))),
  inference(forward_demodulation,[],[f941,f326])).
fof(f941,plain,(
  s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))))))),
  inference(forward_demodulation,[],[f919,f338])).
fof(f338,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f122])).
fof(f122,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X7),s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8))))) = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8)))))),
  file('thm.list.REVERSE_SNOC','thm.list.REVERSE_SNOC_DEF|split|1')).
fof(f919,plain,(
  s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),sK2)))))))),
  inference(unit_resulting_resolution,[],[f256,f349])).
fof(f349,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2)) )),
  inference(cnf_transformation,[],[f244])).
fof(f244,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2)) & (s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2) | s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))))),
  inference(nnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1,X2] : (s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))) <=> s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2))),
  inference(flattening,[],[f138])).
fof(f138,plain,(
  ! [X0] : ! [X1,X2] : (s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2))) <=> s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X11,X12] : (s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X11))) = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X12))) <=> s('type.list.list'(X6),X11) = s('type.list.list'(X6),X12))),
  file('thm.list.REVERSE_SNOC','thm.list.REVERSE_|49||49|')).
fof(f256,plain,(
  s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),sK2)))))),
  inference(cnf_transformation,[],[f196])).
fof(f196,plain,(
  s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f176])).
fof(f176,plain,(
  ? [X0,X1,X2] : s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2] : s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X7),s('type.list.list'(X6),X8))))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X7),s('type.list.list'(X6),X8))))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8)))))),
  file('thm.list.REVERSE_SNOC','thm.list.REVERSE_SNOC')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 26
% Passive clauses: 91
% Generated clauses: 675
% Final active clauses: 26
% Final passive clauses: 65
% Input formulas: 69
% Initial clauses: 145
% 
% Duplicate literals: 47
% Trivial inequalities: 9
% Fw subsumption resolutions: 27
% Fw demodulations: 29
% Condensations: 60
% 
% Simple tautologies: 80
% Equational tautologies: 30
% Forward subsumptions: 282
% 
% Unit resulting resolution: 36
% Factoring: 1
% Forward superposition: 104
% Backward superposition: 159
% Self superposition: 29
% Equality factoring: 26
% Equality resolution: 3
% 
% SAT solver clauses: 93
% SAT solver unit clauses: 23
% SAT solver binary clauses: 26
% 
% Memory used [KB]: 1279
% Time elapsed: 0.020 s
% ------------------------------
% ------------------------------
% Success in time 1.352 s
