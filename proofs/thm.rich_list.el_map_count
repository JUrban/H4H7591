Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (37097)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 694
% Passive clauses: 3582
% Generated clauses: 14421
% Final active clauses: 677
% Final passive clauses: 2720
% Input formulas: 261
% Initial clauses: 485
% 
% Duplicate literals: 142
% Trivial inequalities: 36
% Fw subsumption resolutions: 1317
% Fw demodulations: 1142
% Bw demodulations: 11
% 
% Simple tautologies: 245
% Equational tautologies: 22
% Forward subsumptions: 7757
% 
% Binary resolution: 3723
% Factoring: 371
% Forward superposition: 3334
% Backward superposition: 3828
% Self superposition: 22
% Equality factoring: 2
% Equality resolution: 6
% 
% Split clauses: 210
% Split components: 422
% SAT solver clauses: 346
% SAT solver unit clauses: 16
% SAT solver binary clauses: 67
% 
% Sat splits: 210
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 346
% TWLsolver calls for satisfiability: 254
% 
% Memory used [KB]: 7164
% Time elapsed: 0.610 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (37124)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 479
% Passive clauses: 1925
% Generated clauses: 14726
% Final active clauses: 418
% Final passive clauses: 1336
% Input formulas: 261
% Initial clauses: 485
% 
% Duplicate literals: 99
% Trivial inequalities: 14
% Fw subsumption resolutions: 653
% Fw demodulations: 1258
% Bw demodulations: 161
% Condensations: 65
% Global subsumptions: 24
% 
% Simple tautologies: 246
% Equational tautologies: 10
% Forward subsumptions: 8261
% Bw demodulations to eq. taut.: 8
% 
% Binary resolution: 1527
% Factoring: 100
% Forward superposition: 4616
% Backward superposition: 3729
% Self superposition: 51
% Equality factoring: 2
% Equality resolution: 6
% 
% Split clauses: 6
% Split components: 12
% SAT solver clauses: 2678
% SAT solver unit clauses: 636
% SAT solver binary clauses: 132
% SAT solver learnt clauses: 48
% SAT solver learnt literals: 12
% 
% Sat splits: 6
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2582
% TWLsolver calls for satisfiability: 2683
% 
% Memory used [KB]: 12792
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% (37155)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1901
% Passive clauses: 21915
% Generated clauses: 139995
% Final active clauses: 1036
% Final passive clauses: 3971
% Input formulas: 261
% Initial clauses: 485
% Discarded non-redundant clauses: 84640
% 
% Duplicate literals: 9
% Trivial inequalities: 33
% Fw subsumption resolutions: 2776
% Fw demodulations: 16883
% Bw demodulations: 3778
% Condensations: 21
% Global subsumptions: 1
% 
% Simple tautologies: 101
% Equational tautologies: 81
% Forward subsumptions: 54901
% Fw demodulations to eq. taut.: 728
% Bw demodulations to eq. taut.: 10
% 
% Unit resulting resolution: 77840
% Factoring: 2
% Forward superposition: 23399
% Backward superposition: 11541
% Self superposition: 78
% Equality factoring: 2
% Equality resolution: 20
% 
% Split clauses: 11
% Split components: 22
% SAT solver clauses: 25115
% SAT solver unit clauses: 17694
% SAT solver binary clauses: 6531
% 
% Sat splits: 11
% Sat splitting refutations: 3175
% 
% Memory used [KB]: 66907
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f46020,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f46019])).
fof(f46019,plain,(
  s(sK13,happ(s(fun('type.num.num',sK13),sK15),s('type.num.num',sK14))) != s(sK13,happ(s(fun('type.num.num',sK13),sK15),s('type.num.num',sK14)))),
  inference(forward_demodulation,[],[f1206,f972])).
fof(f972,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.list.EL_2'(s('type.num.num',sK14),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',sK16)))))),
  inference(resolution,[],[f641,f703])).
fof(f703,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num','const.list.EL_2'(s('type.num.num',X0),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X1))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f437])).
fof(f437,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num','const.list.EL_2'(s('type.num.num',X0),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X1))))))),
  inference(ennf_transformation,[],[f287])).
fof(f287,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) => s('type.num.num',X0) = s('type.num.num','const.list.EL_2'(s('type.num.num',X0),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X1))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X9,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num',X7)))) => s('type.num.num',X9) = s('type.num.num','const.list.EL_2'(s('type.num.num',X9),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X7))))))),
  file('thm.rich_list.el_map_count','thm.rich_list.EL_COUNT_LIST')).
fof(f641,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK16))))),
  inference(cnf_transformation,[],[f506])).
fof(f506,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK16)))) & s(sK13,happ(s(fun('type.num.num',sK13),sK15),s('type.num.num',sK14))) != s(sK13,'const.list.EL_2'(s('type.num.num',sK14),s('type.list.list'(sK13),'const.list.MAP_2'(s(fun('type.num.num',sK13),sK15),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',sK16)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14,sK15,sK16])],[f429])).
fof(f429,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X3)))) & s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) != s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.num.num',X0),X2),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X3))))))))),
  inference(ennf_transformation,[],[f264])).
fof(f264,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X3)))) => s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.num.num',X0),X2),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X3))))))))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ~! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X3)))) => s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.num.num',X0),X2),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X3))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X9)))) => s(X6,happ(s(fun('type.num.num',X6),X8),s('type.num.num',X7))) = s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.num.num',X6),X8),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X9))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X9)))) => s(X6,happ(s(fun('type.num.num',X6),X8),s('type.num.num',X7))) = s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.num.num',X6),X8),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X9))))))))),
  file('thm.rich_list.el_map_count','thm.rich_list.el_map_count')).
fof(f1206,plain,(
  s(sK13,happ(s(fun('type.num.num',sK13),sK15),s('type.num.num',sK14))) != s(sK13,happ(s(fun('type.num.num',sK13),sK15),s('type.num.num','const.list.EL_2'(s('type.num.num',sK14),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',sK16)))))))),
  inference(subsumption_resolution,[],[f1205,f641])).
fof(f1205,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK16)))) | s(sK13,happ(s(fun('type.num.num',sK13),sK15),s('type.num.num',sK14))) != s(sK13,happ(s(fun('type.num.num',sK13),sK15),s('type.num.num','const.list.EL_2'(s('type.num.num',sK14),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',sK16)))))))),
  inference(forward_demodulation,[],[f1177,f729])).
fof(f729,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f324])).
fof(f324,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X7)))))),
  file('thm.rich_list.el_map_count','thm.rich_list.LENGTH_COUNT_LIST')).
fof(f1177,plain,(
  s(sK13,happ(s(fun('type.num.num',sK13),sK15),s('type.num.num',sK14))) != s(sK13,happ(s(fun('type.num.num',sK13),sK15),s('type.num.num','const.list.EL_2'(s('type.num.num',sK14),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',sK16))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',sK16))))))))),
  inference(superposition,[],[f642,f702])).
fof(f702,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun(X1,X0),X4),s(X1,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X1),X3))))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X3))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X3))))))) )),
  inference(cnf_transformation,[],[f436])).
fof(f436,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X3)))))) | ! [X4] : s(X0,happ(s(fun(X1,X0),X4),s(X1,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X1),X3))))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X3))))))),
  inference(ennf_transformation,[],[f286])).
fof(f286,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X3)))))) => ! [X4] : s(X0,happ(s(fun(X1,X0),X4),s(X1,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X1),X3))))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X3))))))),
  inference(flattening,[],[f285])).
fof(f285,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X3)))))) => ! [X4] : s(X0,happ(s(fun(X1,X0),X4),s(X1,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X1),X3))))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X3))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X13,X6] : ! [X7,X14] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X14)))))) => ! [X8] : s(X13,happ(s(fun(X6,X13),X8),s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),X14))))) = s(X13,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X13),'const.list.MAP_2'(s(fun(X6,X13),X8),s('type.list.list'(X6),X14))))))),
  file('thm.rich_list.el_map_count','thm.list.EL_MAP')).
fof(f642,plain,(
  s(sK13,happ(s(fun('type.num.num',sK13),sK15),s('type.num.num',sK14))) != s(sK13,'const.list.EL_2'(s('type.num.num',sK14),s('type.list.list'(sK13),'const.list.MAP_2'(s(fun('type.num.num',sK13),sK15),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',sK16)))))))),
  inference(cnf_transformation,[],[f506])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 785
% Passive clauses: 14849
% Generated clauses: 44978
% Final active clauses: 620
% Final passive clauses: 10966
% Input formulas: 261
% Initial clauses: 320
% 
% Selected by SInE selection: 115
% SInE iterations: 1
% 
% Duplicate literals: 555
% Trivial inequalities: 106
% Fw subsumption resolutions: 3909
% Fw demodulations: 11913
% Bw demodulations: 86
% 
% Simple tautologies: 1251
% Equational tautologies: 2
% Forward subsumptions: 11962
% 
% Binary resolution: 7407
% Factoring: 2
% Forward superposition: 13107
% Backward superposition: 7476
% Self superposition: 1
% Equality resolution: 12
% 
% Split clauses: 1011
% Split components: 2055
% SAT solver clauses: 1068
% SAT solver unit clauses: 48
% SAT solver binary clauses: 411
% 
% Sat splits: 1011
% Sat splitting refutations: 54
% 
% Memory used [KB]: 16247
% Time elapsed: 1.785 s
% ------------------------------
% ------------------------------
% Success in time 13.553 s
