Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% (86549)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 143
% Passive clauses: 2324
% Generated clauses: 25521
% Final active clauses: 130
% Final passive clauses: 1911
% Input formulas: 22
% Initial clauses: 39
% 
% Duplicate literals: 805
% Trivial inequalities: 326
% Fw subsumption resolutions: 4025
% Fw demodulations: 5034
% Bw demodulations: 11
% 
% Simple tautologies: 369
% Equational tautologies: 51
% Forward subsumptions: 11833
% Fw demodulations to eq. taut.: 6
% 
% Binary resolution: 270
% Factoring: 3
% Forward superposition: 9125
% Backward superposition: 5794
% Self superposition: 269
% Equality factoring: 122
% Equality resolution: 37
% 
% Split clauses: 387
% Split components: 790
% SAT solver clauses: 1007
% SAT solver unit clauses: 4
% SAT solver binary clauses: 52
% 
% Sat splits: 387
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1007
% TWLsolver calls for satisfiability: 187
% 
% Memory used [KB]: 11257
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.transc
% (86563)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 73
% Passive clauses: 226
% Generated clauses: 11365
% Final active clauses: 67
% Final passive clauses: 139
% Input formulas: 22
% Initial clauses: 39
% 
% Duplicate literals: 1105
% Trivial inequalities: 151
% Fw subsumption resolutions: 1195
% Fw demodulations: 790
% Bw demodulations: 19
% Condensations: 2078
% Global subsumptions: 4
% 
% Simple tautologies: 231
% Equational tautologies: 88
% Forward subsumptions: 4823
% Fw demodulations to eq. taut.: 6
% 
% Binary resolution: 86
% Factoring: 2
% Forward superposition: 3018
% Backward superposition: 3161
% Self superposition: 258
% Equality factoring: 234
% Equality resolution: 21
% 
% Split clauses: 101
% Split components: 202
% SAT solver clauses: 546
% SAT solver unit clauses: 53
% SAT solver binary clauses: 37
% SAT solver learnt clauses: 8
% 
% Sat splits: 101
% 
% TWLsolver clauses: 530
% TWLsolver calls for satisfiability: 154
% 
% Memory used [KB]: 6780
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.transc
% (86579)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 398
% Passive clauses: 4774
% Generated clauses: 154522
% Final active clauses: 73
% Final passive clauses: 433
% Input formulas: 22
% Initial clauses: 39
% 
% Duplicate literals: 6467
% Trivial inequalities: 844
% Fw subsumption resolutions: 13896
% Fw demodulations: 24203
% Bw demodulations: 3374
% Condensations: 14362
% Global subsumptions: 1532
% 
% Simple tautologies: 1068
% Equational tautologies: 3239
% Forward subsumptions: 81970
% Fw demodulations to eq. taut.: 17
% Bw demodulations to eq. taut.: 62
% 
% Unit resulting resolution: 12146
% Factoring: 1
% Forward superposition: 27315
% Backward superposition: 20473
% Self superposition: 708
% Equality factoring: 436
% Equality resolution: 78
% 
% Split clauses: 820
% Split components: 1707
% SAT solver clauses: 9435
% SAT solver unit clauses: 62
% SAT solver binary clauses: 927
% 
% Sat splits: 820
% Sat splitting refutations: 1486
% 
% Memory used [KB]: 86992
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.transc
% (86849)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit

% Active clauses: 1108
% Passive clauses: 26864
% Generated clauses: 178597
% Final active clauses: 161
% Final passive clauses: 11059
% Input formulas: 22
% Initial clauses: 38
% 
% Selected by SInE selection: 21
% SInE iterations: 1
% 
% Duplicate literals: 5051
% Trivial inequalities: 3412
% Fw subsumption resolutions: 24770
% Fw demodulations: 32718
% Bw demodulations: 593
% 
% Simple tautologies: 3818
% Equational tautologies: 237
% Forward subsumptions: 78705
% Bw demodulations to eq. taut.: 17
% 
% Binary resolution: 7858
% Factoring: 8
% Forward superposition: 48707
% Backward superposition: 37513
% Self superposition: 528
% Equality factoring: 358
% Equality resolution: 299
% 
% Split clauses: 7748
% Split components: 15900
% SAT solver clauses: 8294
% SAT solver unit clauses: 19
% SAT solver binary clauses: 988
% 
% Sat splits: 7748
% Sat splitting refutations: 381
% 
% Memory used [KB]: 51939
% Time elapsed: 4.018 s
% ------------------------------
% ------------------------------
% remaining time: 142 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f12617,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f124,f172,f170,f168,f309,f320,f396,f427,f432,f434,f438,f440,f442,f467,f472,f473,f474,f475,f476,f73,f539,f537,f294,f426,f1361,f1862,f2063,f2255,f2303,f2414,f2520,f2701,f2684,f1368,f3862,f4554,f1388,f3882,f2075,f5910,f2254,f6637,f7218,f6643,f7956,f425,f3864,f4727,f4591,f308,f4653,f5033,f8551,f925,f8923,f927,f9275,f9274,f913,f9627,f10196,f10453,f8430,f1145,f11074,f8922,f12249,f12261,f12352,f12354,f12573])).
fof(f12573,plain,(
  $false | ($spl13 | $spl14)),
  inference(subsumption_resolution,[],[f12572,f75])).
fof(f75,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f15])).
fof(f15,axiom,(
  p(s(bool,'T_0'))),
  file('thm.transc.transc_78_prove_ltb','thm.bool.TRUTH')).
fof(f12572,plain,(
  ~p(s(bool,'T_0')) | ($spl13 | $spl14)),
  inference(forward_demodulation,[],[f12571,f259])).
fof(f259,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(unit_resulting_resolution,[],[f77,f121])).
fof(f121,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(superposition,[],[f78,f81])).
fof(f81,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.transc.transc_78_prove_ltb',aHL_BOOL_CASES)).
fof(f78,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.transc.transc_78_prove_ltb',aHL_FALSITY)).
fof(f77,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(cnf_transformation,[],[f23])).
fof(f23,axiom,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  file('thm.transc.transc_78_prove_ltb','thm.transc.transc_77_prove_ltb')).
fof(f12571,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ($spl13 | $spl14)),
  inference(subsumption_resolution,[],[f12570,f12359])).
fof(f12359,plain,(
  ( ! [X0] : (s('type.num.num',sK0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) ) | $spl13),
  inference(unit_resulting_resolution,[],[f536,f86])).
fof(f86,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X0))))) & (! [X1] : s('type.num.num',X0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1])],[f59])).
fof(f59,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | ? [X2] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) & (! [X1] : s('type.num.num',X0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f58])).
fof(f58,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) & (! [X1] : s('type.num.num',X0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) <=> ? [X1] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))) <=> ? [X7] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X7))))),
  file('thm.transc.transc_78_prove_ltb','thm.arithmetic.EVEN_EXISTS')).
fof(f536,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) | $spl13),
  inference(cnf_transformation,[],[f536_D])).
fof(f536_D,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f12570,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl14),
  inference(forward_demodulation,[],[f12482,f80])).
fof(f80,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.transc_78_prove_ltb','thm.arithmetic.ADD_|48|')).
fof(f12482,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl14),
  inference(superposition,[],[f113,f539])).
fof(f113,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(backward_demodulation,[],[f104,f83])).
fof(f83,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => ! [X8] : (s('type.num.num',X8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X8),s('type.num.num',X6))),s('type.num.num',X6))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X8),s('type.num.num',X6))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X8),s('type.num.num',X6))),s('type.num.num',X6))))))),
  file('thm.transc.transc_78_prove_ltb','thm.arithmetic.DIVISION')).
fof(f104,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7,X6] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.transc.transc_78_prove_ltb','thm.arithmetic.MULT_SYM')).
fof(f12354,plain,(
  $false | ($spl3 | $spl13 | $spl22 | $spl30 | $spl40 | $spl46)),
  inference(subsumption_resolution,[],[f12353,f75])).
fof(f12353,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl13 | $spl22 | $spl30 | $spl40 | $spl46)),
  inference(forward_demodulation,[],[f536,f12291])).
fof(f12291,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | ($spl3 | $spl22 | $spl30 | $spl40 | $spl46)),
  inference(subsumption_resolution,[],[f10026,f9843])).
fof(f9843,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl22 | $spl40 | $spl46)),
  inference(superposition,[],[f8950,f9627])).
fof(f8950,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) ) | ($spl3 | $spl22 | $spl40)),
  inference(unit_resulting_resolution,[],[f172,f8923,f3882])).
fof(f10026,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl22 | $spl30 | $spl40 | $spl46)),
  inference(superposition,[],[f7218,f9843])).
fof(f12352,plain,(
  $false | ($spl3 | $spl22 | $spl30 | $spl40 | $spl46)),
  inference(subsumption_resolution,[],[f12351,f75])).
fof(f12351,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl22 | $spl30 | $spl40 | $spl46)),
  inference(forward_demodulation,[],[f12350,f12291])).
fof(f12350,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))))),
  inference(subsumption_resolution,[],[f74,f1514])).
fof(f1514,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X3))))) )),
  inference(subsumption_resolution,[],[f1513,f75])).
fof(f1513,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X3))))) )),
  inference(forward_demodulation,[],[f1489,f259])).
fof(f1489,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X3))))) )),
  inference(superposition,[],[f82,f810])).
fof(f810,plain,(
  ( ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))))) )),
  inference(superposition,[],[f85,f104])).
fof(f85,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X0)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f60])).
fof(f82,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ! [X1] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => ! [X1] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => ! [X8] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X6))),s('type.num.num',X6))))),
  file('thm.transc.transc_78_prove_ltb','thm.arithmetic.MOD_EQ_|48|')).
fof(f74,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) & (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f56])).
fof(f56,plain,(
  ? [X0] : ((p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) & (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(nnf_transformation,[],[f45])).
fof(f45,plain,(
  ? [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) <~> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  file('thm.transc.transc_78_prove_ltb','thm.transc.transc_78_prove_ltb')).
fof(f12261,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f12260,f75])).
fof(f12260,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(forward_demodulation,[],[f12247,f545])).
fof(f545,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | $spl12),
  inference(unit_resulting_resolution,[],[f537,f121])).
fof(f12247,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) | $spl12),
  inference(trivial_inequality_removal,[],[f12168])).
fof(f12168,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) | $spl12),
  inference(superposition,[],[f557,f1514])).
fof(f557,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl12),
  inference(subsumption_resolution,[],[f556,f75])).
fof(f556,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl12),
  inference(backward_demodulation,[],[f545,f74])).
fof(f12249,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f12248,f75])).
fof(f12248,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(forward_demodulation,[],[f12143,f545])).
fof(f12143,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) | $spl12),
  inference(unit_resulting_resolution,[],[f557,f1514])).
fof(f8922,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X7)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7))))) ) | $spl38),
  inference(cnf_transformation,[],[f8922_D])).
fof(f8922_D,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X7)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7))))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f11074,plain,(
  ( ! [X2] : (s('type.num.num',X2) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))))) ) | $spl50),
  inference(cnf_transformation,[],[f11074_D])).
fof(f11074_D,plain,(
  ( ! [X2] : (s('type.num.num',X2) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f1145,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(superposition,[],[f113,f82])).
fof(f8430,plain,(
  ( ! [X54] : (s(bool,'T_0') != s(bool,X54)) ) | $spl34),
  inference(cnf_transformation,[],[f8430_D])).
fof(f8430_D,plain,(
  ( ! [X54] : (s(bool,'T_0') != s(bool,X54)) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f10453,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) | $spl49),
  inference(cnf_transformation,[],[f10453_D])).
fof(f10453_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f10196,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) | s(bool,'T_0') != s(bool,X4)) ) | ($spl16 | $spl30 | $spl44)),
  inference(subsumption_resolution,[],[f10136,f2260])).
fof(f2260,plain,(
  ( ! [X53] : (s(bool,'T_0') != s(bool,X53) | p(s(bool,X53))) ) | $spl16),
  inference(subsumption_resolution,[],[f2042,f75])).
fof(f2042,plain,(
  ( ! [X53] : (p(s(bool,X53)) | ~p(s(bool,'T_0')) | s(bool,'T_0') != s(bool,X53)) ) | $spl16),
  inference(superposition,[],[f75,f1862])).
fof(f10136,plain,(
  ( ! [X4] : (~p(s(bool,X4)) | s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) | s(bool,'T_0') != s(bool,X4)) ) | ($spl30 | $spl44)),
  inference(superposition,[],[f9295,f7218])).
fof(f9295,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl44),
  inference(superposition,[],[f9275,f85])).
fof(f9627,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(cnf_transformation,[],[f9627_D])).
fof(f9627_D,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f913,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(superposition,[],[f82,f82])).
fof(f9274,plain,(
  ( ! [X12,X13] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13))),s('type.num.num',X13)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X13))))) ) | $spl42),
  inference(cnf_transformation,[],[f9274_D])).
fof(f9274_D,plain,(
  ( ! [X12,X13] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13))),s('type.num.num',X13)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X13))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f9275,plain,(
  ( ! [X14] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X14)))) ) | $spl44),
  inference(cnf_transformation,[],[f9275_D])).
fof(f9275_D,plain,(
  ( ! [X14] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X14)))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f927,plain,(
  ( ! [X14,X12,X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X14))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13))),s('type.num.num',X13)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X13))))) )),
  inference(superposition,[],[f86,f82])).
fof(f8923,plain,(
  ( ! [X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))))) ) | $spl40),
  inference(cnf_transformation,[],[f8923_D])).
fof(f8923_D,plain,(
  ( ! [X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f925,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X7)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7))))) )),
  inference(superposition,[],[f84,f82])).
fof(f84,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f47])).
fof(f8551,plain,(
  ( ! [X102,X100] : (s(bool,X100) = s(bool,X102)) ) | $spl36),
  inference(cnf_transformation,[],[f8551_D])).
fof(f8551_D,plain,(
  ( ! [X102,X100] : (s(bool,X100) = s(bool,X102)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f5033,plain,(
  ( ! [X31,X32] : (s(bool,'F_0') = s(bool,X31) | s(bool,X31) != s(bool,X32) | p(s(bool,X32))) ) | $spl26),
  inference(cnf_transformation,[],[f5033_D])).
fof(f5033_D,plain,(
  ( ! [X31,X32] : (s(bool,'F_0') = s(bool,X31) | s(bool,X31) != s(bool,X32) | p(s(bool,X32))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f4653,plain,(
  ( ! [X103,X101,X102,X100] : (s(bool,'F_0') = s(bool,X101) | s(bool,X100) = s(bool,X102) | p(s(bool,X103)) | s(bool,X101) != s(bool,X103)) ) | ($spl6 | $spl16 | $spl22)),
  inference(subsumption_resolution,[],[f4652,f4554])).
fof(f4652,plain,(
  ( ! [X103,X101,X102,X100] : (s(bool,'F_0') = s(bool,X101) | ~p(s(bool,X102)) | s(bool,X100) = s(bool,X102) | p(s(bool,X103)) | s(bool,X101) != s(bool,X103)) ) | ($spl16 | $spl22)),
  inference(subsumption_resolution,[],[f4516,f110])).
fof(f110,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X9,X10] : ((p(s(bool,X9)) => p(s(bool,X10))) => ((p(s(bool,X10)) => p(s(bool,X9))) => s(bool,X9) = s(bool,X10)))),
  file('thm.transc.transc_78_prove_ltb','thm.bool.IMP_ANTISYM_AX')).
fof(f4516,plain,(
  ( ! [X103,X101,X102,X100] : (s(bool,'F_0') = s(bool,X101) | ~p(s(bool,X102)) | s(bool,X100) = s(bool,X102) | p(s(bool,X103)) | p(s(bool,X100)) | s(bool,X101) != s(bool,X103)) ) | ($spl16 | $spl22)),
  inference(superposition,[],[f3882,f3002])).
fof(f3002,plain,(
  ( ! [X4,X5,X3] : (s(bool,X3) = s(bool,X5) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X3) != s(bool,X4)) ) | $spl16),
  inference(superposition,[],[f2260,f169])).
fof(f169,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') = s(bool,X12) | p(s(bool,X13)) | s(bool,X12) = s(bool,X13)) )),
  inference(subsumption_resolution,[],[f143,f78])).
fof(f143,plain,(
  ( ! [X12,X13] : (s(bool,X12) = s(bool,X13) | p(s(bool,X13)) | p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f107,f81])).
fof(f107,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f54])).
fof(f308,plain,(
  ( ! [X8] : (s(bool,'T_0') = s(bool,X8)) ) | $spl4),
  inference(cnf_transformation,[],[f308_D])).
fof(f308_D,plain,(
  ( ! [X8] : (s(bool,'T_0') = s(bool,X8)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f4591,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | p(s(bool,X2)) | s(bool,X1) != s(bool,X2) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(subsumption_resolution,[],[f4406,f121])).
fof(f4406,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | p(s(bool,X2)) | p(s(bool,X0)) | s(bool,X1) != s(bool,X2) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(superposition,[],[f3002,f81])).
fof(f4727,plain,(
  ( ! [X35,X34] : (s(bool,'F_0') != s(bool,X34) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,X35)) ) | $spl24),
  inference(cnf_transformation,[],[f4727_D])).
fof(f4727_D,plain,(
  ( ! [X35,X34] : (s(bool,'F_0') != s(bool,X34) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,X35)) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f3864,plain,(
  ( ! [X54,X56,X55] : (s(bool,'F_0') != s(bool,X55) | s(bool,'T_0') != s(bool,X54) | s(bool,X55) != s(bool,X56) | ~p(s(bool,X56))) ) | ($spl10 | $spl20)),
  inference(subsumption_resolution,[],[f3752,f426])).
fof(f3752,plain,(
  ( ! [X54,X56,X55] : (s(bool,'F_0') != s(bool,X55) | s(bool,'T_0') != s(bool,X54) | s(bool,X55) != s(bool,X56) | p(s(bool,X55)) | ~p(s(bool,X56))) ) | $spl20),
  inference(superposition,[],[f2255,f1356])).
fof(f1356,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) != s(bool,X2) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(equality_factoring,[],[f655])).
fof(f655,plain,(
  ( ! [X6,X4,X5] : (s(bool,X5) = s(bool,X6) | p(s(bool,X6)) | s(bool,X4) = s(bool,X5) | ~p(s(bool,X4))) )),
  inference(superposition,[],[f169,f121])).
fof(f425,plain,(
  ( ! [X13] : (p(s(bool,X13))) ) | $spl8),
  inference(cnf_transformation,[],[f425_D])).
fof(f425_D,plain,(
  ( ! [X13] : (p(s(bool,X13))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f7956,plain,(
  ( ! [X2,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') != s(bool,X2) | s(bool,X1) = s(bool,X2)) ) | $spl32),
  inference(cnf_transformation,[],[f7956_D])).
fof(f7956_D,plain,(
  ( ! [X2,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') != s(bool,X2) | s(bool,X1) = s(bool,X2)) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f6643,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | p(s(bool,X0)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') != s(bool,X2)) ) | $spl16),
  inference(subsumption_resolution,[],[f6406,f2260])).
fof(f6406,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | p(s(bool,X0)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') != s(bool,X2) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(superposition,[],[f2258,f81])).
fof(f2258,plain,(
  ( ! [X61,X59,X60] : (s(bool,X60) = s(bool,X61) | p(s(bool,X61)) | s(bool,X59) = s(bool,X60) | s(bool,'T_0') != s(bool,X59)) ) | $spl16),
  inference(subsumption_resolution,[],[f2045,f75])).
fof(f2045,plain,(
  ( ! [X61,X59,X60] : (s(bool,X59) = s(bool,X60) | p(s(bool,X61)) | s(bool,X60) = s(bool,X61) | ~p(s(bool,'T_0')) | s(bool,'T_0') != s(bool,X59)) ) | $spl16),
  inference(superposition,[],[f169,f1862])).
fof(f7218,plain,(
  ( ! [X164] : (s(bool,X164) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | s(bool,'T_0') != s(bool,X164)) ) | $spl30),
  inference(cnf_transformation,[],[f7218_D])).
fof(f7218_D,plain,(
  ( ! [X164] : (s(bool,X164) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | s(bool,'T_0') != s(bool,X164)) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f6637,plain,(
  ( ! [X163,X164] : (s(bool,'T_0') = s(bool,X163) | s(bool,X164) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | s(bool,'T_0') != s(bool,X164)) ) | ($spl12 | $spl16)),
  inference(subsumption_resolution,[],[f6400,f121])).
fof(f6400,plain,(
  ( ! [X163,X164] : (s(bool,'T_0') = s(bool,X163) | p(s(bool,X163)) | s(bool,X164) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | s(bool,'T_0') != s(bool,X164)) ) | ($spl12 | $spl16)),
  inference(superposition,[],[f2258,f545])).
fof(f2254,plain,(
  ( ! [X35] : (~p(s(bool,X35))) ) | $spl18),
  inference(cnf_transformation,[],[f2254_D])).
fof(f2254_D,plain,(
  ( ! [X35] : (~p(s(bool,X35))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f5910,plain,(
  ( ! [X47,X48] : (s(bool,X47) = s(bool,X48) | s(bool,'T_0') != s(bool,X47) | s(bool,'T_0') != s(bool,X48)) ) | $spl28),
  inference(cnf_transformation,[],[f5910_D])).
fof(f5910_D,plain,(
  ( ! [X47,X48] : (s(bool,X47) = s(bool,X48) | s(bool,'T_0') != s(bool,X47) | s(bool,'T_0') != s(bool,X48)) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f2075,plain,(
  ( ! [X47,X48,X46] : (s(bool,X47) = s(bool,X48) | ~p(s(bool,X46)) | s(bool,'T_0') != s(bool,X48) | s(bool,'T_0') != s(bool,X47)) ) | $spl16),
  inference(duplicate_literal_removal,[],[f1974])).
fof(f1974,plain,(
  ( ! [X47,X48,X46] : (s(bool,X47) = s(bool,X48) | ~p(s(bool,X46)) | s(bool,'T_0') != s(bool,X48) | ~p(s(bool,X46)) | s(bool,'T_0') != s(bool,X47)) ) | $spl16),
  inference(superposition,[],[f1862,f1862])).
fof(f3882,plain,(
  ( ! [X35,X36] : (s(bool,'F_0') = s(bool,X35) | ~p(s(bool,X36)) | s(bool,X35) = s(bool,X36)) ) | $spl22),
  inference(cnf_transformation,[],[f3882_D])).
fof(f3882_D,plain,(
  ( ! [X35,X36] : (s(bool,'F_0') = s(bool,X35) | ~p(s(bool,X36)) | s(bool,X35) = s(bool,X36)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f1388,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,X2) | ~p(s(bool,X2)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f1273,f121])).
fof(f1273,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | p(s(bool,X0)) | s(bool,X1) = s(bool,X2) | ~p(s(bool,X2)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f655,f81])).
fof(f4554,plain,(
  ( ! [X30,X31,X32] : (s(bool,'F_0') = s(bool,X31) | p(s(bool,X32)) | p(s(bool,X30)) | s(bool,X31) != s(bool,X32)) ) | ($spl6 | $spl16)),
  inference(duplicate_literal_removal,[],[f4414])).
fof(f4414,plain,(
  ( ! [X30,X31,X32] : (s(bool,'F_0') = s(bool,X31) | p(s(bool,X32)) | p(s(bool,X30)) | s(bool,X31) != s(bool,X32) | p(s(bool,X30))) ) | ($spl6 | $spl16)),
  inference(superposition,[],[f3002,f309])).
fof(f3862,plain,(
  ( ! [X35,X33,X34] : (s(bool,'F_0') != s(bool,X34) | ~p(s(bool,X33)) | s(bool,X34) != s(bool,X35) | ~p(s(bool,X35))) ) | $spl10),
  inference(subsumption_resolution,[],[f3747,f426])).
fof(f3747,plain,(
  ( ! [X35,X33,X34] : (s(bool,'F_0') != s(bool,X34) | ~p(s(bool,X33)) | s(bool,X34) != s(bool,X35) | p(s(bool,X34)) | ~p(s(bool,X35))) ) | $spl10),
  inference(superposition,[],[f426,f1356])).
fof(f1368,plain,(
  ( ! [X35,X36,X34] : (s(bool,'F_0') = s(bool,X35) | p(s(bool,X34)) | s(bool,X35) = s(bool,X36) | ~p(s(bool,X36))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f1282])).
fof(f1282,plain,(
  ( ! [X35,X36,X34] : (s(bool,'F_0') = s(bool,X35) | p(s(bool,X34)) | s(bool,X35) = s(bool,X36) | ~p(s(bool,X36)) | p(s(bool,X34))) ) | $spl6),
  inference(superposition,[],[f655,f309])).
fof(f2684,plain,(
  $false | ($spl0 | $spl16)),
  inference(unit_resulting_resolution,[],[f104,f2663])).
fof(f2663,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) ) | ($spl0 | $spl16)),
  inference(subsumption_resolution,[],[f2662,f2523])).
fof(f2523,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl16)),
  inference(global_subsumption,[],[f2522,f75,f77,f79,f80,f81,f83,f104,f105,f114,f110,f107,f111,f119,f121,f124,f168,f169,f259,f353,f408,f82,f84,f113,f74,f73,f86,f85,f78,f635,f650,f654,f655,f721,f737,f726,f734,f810,f812,f817,f836,f861,f853,f910,f912,f913,f919,f921,f925,f927,f950,f942,f995,f996,f998,f1000,f1001,f1004,f1005,f1007,f1009,f1010,f1053,f1055,f1056,f1106,f1107,f1145,f1150,f1152,f1154,f1178,f1156,f1159,f1161,f1163,f1179,f1184,f1186,f1207,f1212,f1217,f1219,f1388,f1367,f1365,f1364,f1322,f1323,f1353,f1354,f1514,f1494,f1496,f1504,f1595,f1600,f1602,f1604,f1605,f1637,f1879,f1880,f1885,f1887,f1889,f1890,f1926,f1896,f1898,f1900,f1906,f1912,f1914,f1915,f2109,f2110,f2111,f2154,f2155,f2156,f2157,f2116,f2158,f2118,f2160,f2162,f2163,f2127,f2129,f2131,f2137,f2143,f2145,f2146,f2149,f1356])).
fof(f2149,plain,(
  ( ! [X47,X48] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X48))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X47),s('type.num.num',sK1(X47))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X47))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X47))))) )),
  inference(superposition,[],[f910,f912])).
fof(f2146,plain,(
  ( ! [X43,X42] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | s('type.num.num',X43) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X42),s('type.num.num',sK1(X42)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X43)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X42))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X42))))) )),
  inference(superposition,[],[f812,f912])).
fof(f2145,plain,(
  ( ! [X41,X40] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X40),s('type.num.num',sK1(X40))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X40))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X40))))) )),
  inference(superposition,[],[f734,f912])).
fof(f2143,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X37),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X36),s('type.num.num',sK1(X36))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X36))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X36))))) )),
  inference(superposition,[],[f650,f912])).
fof(f2137,plain,(
  ( ! [X26,X25] : (s('type.num.num',X26) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X25),s('type.num.num',sK1(X25))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X25))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X25))))) )),
  inference(superposition,[],[f113,f912])).
fof(f2131,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X14))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X13),s('type.num.num',sK1(X13))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X13))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X13))))) )),
  inference(superposition,[],[f86,f912])).
fof(f2129,plain,(
  ( ! [X10,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X9),s('type.num.num',sK1(X9))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X9))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9))))) )),
  inference(superposition,[],[f84,f912])).
fof(f2127,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X5),s('type.num.num',sK1(X5))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X5))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5))))) )),
  inference(superposition,[],[f82,f912])).
fof(f2163,plain,(
  ( ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X1)),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',sK1(X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X1))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f2152,f80])).
fof(f2152,plain,(
  ( ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X1)),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',sK1(X1)))))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X1))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))))) )),
  inference(duplicate_literal_removal,[],[f2123])).
fof(f2123,plain,(
  ( ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X1)),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',sK1(X1)))))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X1))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X1))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))))) )),
  inference(superposition,[],[f113,f912])).
fof(f2162,plain,(
  ( ! [X19] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X19),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',sK1(X19)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',sK1(X19)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X19))))) )),
  inference(subsumption_resolution,[],[f2161,f75])).
fof(f2161,plain,(
  ( ! [X19] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X19),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',sK1(X19)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',sK1(X19)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X19))))) )),
  inference(forward_demodulation,[],[f2121,f861])).
fof(f2121,plain,(
  ( ! [X19] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X19),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',sK1(X19)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',sK1(X19)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X19)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X19))))) )),
  inference(superposition,[],[f912,f810])).
fof(f2160,plain,(
  ( ! [X18] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X18),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X18))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X18)))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X18))))) )),
  inference(subsumption_resolution,[],[f2159,f75])).
fof(f2159,plain,(
  ( ! [X18] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X18),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X18))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X18)))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X18))))) )),
  inference(forward_demodulation,[],[f2120,f950])).
fof(f2120,plain,(
  ( ! [X18] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X18),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X18))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X18)))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X18))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X18))))) )),
  inference(superposition,[],[f912,f85])).
fof(f2118,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X14))),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15))))))) )),
  inference(superposition,[],[f912,f104])).
fof(f2158,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.num.SUC_1'(s('type.num.num',X13)))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))),s('type.num.num',sK1('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)))))))))) )),
  inference(forward_demodulation,[],[f2117,f105])).
fof(f2117,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))),s('type.num.num',sK1('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13))))))))) )),
  inference(superposition,[],[f912,f105])).
fof(f2116,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X11),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X10)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X11),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X10))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X11),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X10)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10))))) )),
  inference(superposition,[],[f912,f113])).
fof(f2157,plain,(
  ( ! [X8,X9] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X9)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X9)))))))) )),
  inference(forward_demodulation,[],[f2115,f114])).
fof(f2115,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X9)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X9))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X9))))))) )),
  inference(superposition,[],[f912,f114])).
fof(f2156,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))))))) )),
  inference(forward_demodulation,[],[f2114,f79])).
fof(f2114,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7))))))) )),
  inference(superposition,[],[f912,f79])).
fof(f2155,plain,(
  ( ! [X6] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(forward_demodulation,[],[f2113,f353])).
fof(f2113,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) )),
  inference(superposition,[],[f912,f353])).
fof(f2154,plain,(
  ( ! [X5] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X5),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f2112,f80])).
fof(f2112,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X5),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f912,f80])).
fof(f2111,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4)))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X4))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4))))) )),
  inference(superposition,[],[f912,f912])).
fof(f2110,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X2))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))))) )),
  inference(superposition,[],[f912,f910])).
fof(f2109,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(superposition,[],[f912,f82])).
fof(f1915,plain,(
  ( ! [X68,X69,X67] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | s('type.num.num',X69) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X67),s('type.num.num',X68))),s('type.num.num',X67))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X69)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X67))))) )),
  inference(superposition,[],[f812,f910])).
fof(f1914,plain,(
  ( ! [X66,X64,X65] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X64),s('type.num.num',X65))),s('type.num.num',X64)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X64))))) )),
  inference(superposition,[],[f734,f910])).
fof(f1912,plain,(
  ( ! [X59,X60,X58] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X60),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num',X59))),s('type.num.num',X58)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X58))))) )),
  inference(superposition,[],[f650,f910])).
fof(f1906,plain,(
  ( ! [X43,X41,X42] : (s('type.num.num',X43) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X43),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X43),s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X41),s('type.num.num',X42))),s('type.num.num',X41)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X41))))) )),
  inference(superposition,[],[f113,f910])).
fof(f1900,plain,(
  ( ! [X24,X23,X25] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X25))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.num.num',X23)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X23))))) )),
  inference(superposition,[],[f86,f910])).
fof(f1898,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X18))),s('type.num.num',X17)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17))))) )),
  inference(superposition,[],[f84,f910])).
fof(f1896,plain,(
  ( ! [X12,X13,X11] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12))),s('type.num.num',X11)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11))))) )),
  inference(superposition,[],[f82,f910])).
fof(f1926,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.num.num',X3))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3))))) )),
  inference(forward_demodulation,[],[f1919,f80])).
fof(f1919,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.num.num',X3))))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3))))) )),
  inference(duplicate_literal_removal,[],[f1892])).
fof(f1892,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.num.num',X3))))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3))))) )),
  inference(superposition,[],[f113,f910])).
fof(f1890,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num',X30))),s('type.num.num',X29))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X29)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X29))))) )),
  inference(superposition,[],[f910,f810])).
fof(f1889,plain,(
  ( ! [X28,X27] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',X28))),s('type.num.num',X27))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X27))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27))))) )),
  inference(superposition,[],[f910,f85])).
fof(f1887,plain,(
  ( ! [X23,X21,X22] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X21))),s('type.num.num',X23))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X21))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22))))))) )),
  inference(superposition,[],[f910,f104])).
fof(f1885,plain,(
  ( ! [X17,X15,X16] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17))),s('type.num.num',X16))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X16),s('type.num.num',X15))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X16),s('type.num.num',X15)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15))))) )),
  inference(superposition,[],[f910,f113])).
fof(f1880,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.num.num',X3)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3))))) )),
  inference(superposition,[],[f910,f910])).
fof(f1879,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(superposition,[],[f910,f82])).
fof(f1637,plain,(
  ( ! [X28,X26,X29,X27] : (s(bool,'T_0') = s(bool,X28) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27)))) | s(bool,X29) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.num.num',X27))) | ~p(s(bool,X29))) )),
  inference(subsumption_resolution,[],[f1612,f121])).
fof(f1612,plain,(
  ( ! [X28,X26,X29,X27] : (s(bool,'T_0') = s(bool,X28) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27)))) | p(s(bool,X28)) | s(bool,X29) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.num.num',X27))) | ~p(s(bool,X29))) )),
  inference(superposition,[],[f650,f655])).
fof(f1605,plain,(
  ( ! [X26,X27] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X27),s('type.num.num',X26))),s('type.num.num',X26))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X26)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X26))))) )),
  inference(superposition,[],[f650,f810])).
fof(f1604,plain,(
  ( ! [X24,X25] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X25),s('type.num.num',X24))),s('type.num.num',X24))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X24))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24))))) )),
  inference(superposition,[],[f650,f85])).
fof(f1602,plain,(
  ( ! [X19,X20,X18] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X18))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X18))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(superposition,[],[f650,f104])).
fof(f1600,plain,(
  ( ! [X14,X12,X13] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X14),s('type.num.num',X13))),s('type.num.num',X13))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X13),s('type.num.num',X12))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X13),s('type.num.num',X12)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X12))))) )),
  inference(superposition,[],[f650,f113])).
fof(f1595,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(superposition,[],[f650,f82])).
fof(f1504,plain,(
  ( ! [X28,X29] : (s('type.num.num',X29) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X29),s('type.num.num',X28))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X29),s('type.num.num',X28))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X28)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X28))))) )),
  inference(superposition,[],[f113,f810])).
fof(f1496,plain,(
  ( ! [X12,X13] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X13),s('type.num.num',X12))),s('type.num.num',X12)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X12)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X12))))) )),
  inference(superposition,[],[f84,f810])).
fof(f1494,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X8))),s('type.num.num',X8))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X8)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X8))))) )),
  inference(superposition,[],[f82,f810])).
fof(f1354,plain,(
  ( ! [X109,X107,X110,X108,X106] : (s(bool,X109) != s(bool,f(s(X106,sK2(X107,X108,bool,X106)))) | s(fun(X106,bool),X107) = s(fun(X106,bool),X108) | p(s(bool,g(s(X106,sK2(X107,X108,bool,X106))))) | s(bool,X109) = s(bool,X110) | ~p(s(bool,X110))) )),
  inference(superposition,[],[f111,f655])).
fof(f1353,plain,(
  ( ! [X103,X101,X105,X102,X104] : (s(X103,f(s(bool,X104))) != s(X103,g(s(bool,X104))) | s(fun(bool,X103),X101) = s(fun(bool,X103),X102) | p(s(bool,sK2(X101,X102,X103,bool))) | s(bool,X104) = s(bool,X105) | ~p(s(bool,X105))) )),
  inference(superposition,[],[f111,f655])).
fof(f1323,plain,(
  ( ! [X109,X107,X110,X108,X106] : (s(bool,X109) != s(bool,f(s(X106,sK2(X107,X108,bool,X106)))) | s(fun(X106,bool),X107) = s(fun(X106,bool),X108) | p(s(bool,X109)) | s(bool,X110) = s(bool,g(s(X106,sK2(X107,X108,bool,X106)))) | ~p(s(bool,X110))) )),
  inference(superposition,[],[f111,f655])).
fof(f1322,plain,(
  ( ! [X103,X101,X105,X102,X104] : (s(X103,f(s(bool,X104))) != s(X103,g(s(bool,X104))) | s(fun(bool,X103),X101) = s(fun(bool,X103),X102) | p(s(bool,X104)) | s(bool,X105) = s(bool,sK2(X101,X102,X103,bool)) | ~p(s(bool,X105))) )),
  inference(superposition,[],[f111,f655])).
fof(f1364,plain,(
  ( ! [X94,X92,X93,X91] : (p(s(bool,X93)) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X92)))) | s(bool,X94) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X91),s('type.num.num',X92))),s('type.num.num',X92))) | ~p(s(bool,X94))) )),
  inference(duplicate_literal_removal,[],[f1320])).
fof(f1320,plain,(
  ( ! [X94,X92,X93,X91] : (p(s(bool,X93)) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X92)))) | p(s(bool,X93)) | s(bool,X94) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X91),s('type.num.num',X92))),s('type.num.num',X92))) | ~p(s(bool,X94))) )),
  inference(superposition,[],[f84,f655])).
fof(f1365,plain,(
  ( ! [X90,X88,X87,X89] : (p(s(bool,X88)) | s('type.num.num',X87) != s('type.num.num',X89) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X89)))) | s(bool,X90) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X87))) | ~p(s(bool,X90))) )),
  inference(duplicate_literal_removal,[],[f1319])).
fof(f1319,plain,(
  ( ! [X90,X88,X87,X89] : (p(s(bool,X88)) | s('type.num.num',X87) != s('type.num.num',X89) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X89)))) | p(s(bool,X88)) | s(bool,X90) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X87))) | ~p(s(bool,X90))) )),
  inference(superposition,[],[f812,f655])).
fof(f1367,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s(bool,X43) = s(bool,X44) | p(s(bool,X42)) | s(bool,X44) = s(bool,X45) | ~p(s(bool,X45)) | s(bool,X43) = s(bool,X46) | ~p(s(bool,X46))) )),
  inference(duplicate_literal_removal,[],[f1284])).
fof(f1284,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s(bool,X43) = s(bool,X44) | p(s(bool,X42)) | s(bool,X44) = s(bool,X45) | ~p(s(bool,X45)) | p(s(bool,X42)) | s(bool,X43) = s(bool,X46) | ~p(s(bool,X46))) )),
  inference(superposition,[],[f655,f655])).
fof(f1219,plain,(
  ( ! [X19,X20,X18] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X18))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(superposition,[],[f734,f104])).
fof(f1217,plain,(
  ( ! [X14,X12,X13] : (s('type.num.num',X13) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X13),s('type.num.num',X12))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X13),s('type.num.num',X12)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X12))))) )),
  inference(superposition,[],[f734,f113])).
fof(f1212,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(superposition,[],[f734,f82])).
fof(f1207,plain,(
  ( ! [X2,X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | s('type.num.num',X1) != s('type.num.num',X2)) )),
  inference(subsumption_resolution,[],[f1190,f78])).
fof(f1190,plain,(
  ( ! [X2,X1] : (p(s(bool,'F_0')) | s('type.num.num',X1) != s('type.num.num',X2) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f812,f81])).
fof(f1186,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X18)))))) | s('type.num.num',X20) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X19))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X20))))) )),
  inference(superposition,[],[f812,f104])).
fof(f1184,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X13)))) | s('type.num.num',X14) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X13),s('type.num.num',X12))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X13),s('type.num.num',X12))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X12))))) )),
  inference(superposition,[],[f812,f113])).
fof(f1179,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | s('type.num.num',X2) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(superposition,[],[f812,f82])).
fof(f1163,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X19),s('type.num.num',X18))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X19),s('type.num.num',X18)))))))) | s('type.num.num',X19) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X20))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18))))) )),
  inference(superposition,[],[f86,f113])).
fof(f1161,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X13),s('type.num.num',X12))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X13),s('type.num.num',X12)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X14),s('type.num.num',X13))),s('type.num.num',X13)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X12))))) )),
  inference(superposition,[],[f84,f113])).
fof(f1159,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X7),s('type.num.num',X6))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X6)))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X7))),s('type.num.num',X7))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))))) )),
  inference(superposition,[],[f82,f113])).
fof(f1156,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(superposition,[],[f105,f113])).
fof(f1178,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f1172,f80])).
fof(f1172,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1))))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(duplicate_literal_removal,[],[f1155])).
fof(f1155,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1))))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(superposition,[],[f113,f82])).
fof(f1154,plain,(
  ( ! [X24,X25] : (s('type.num.num',X25) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X25),s('type.num.num',X24))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X25),s('type.num.num',X24))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X24))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24))))) )),
  inference(superposition,[],[f113,f85])).
fof(f1152,plain,(
  ( ! [X19,X20,X18] : (s('type.num.num',X20) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X18))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X18))))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X18))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(superposition,[],[f113,f104])).
fof(f1150,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X13),s('type.num.num',X12))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X13),s('type.num.num',X12)))))))) | s('type.num.num',X14) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X14),s('type.num.num',X13))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X14),s('type.num.num',X13))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X12))))) )),
  inference(superposition,[],[f113,f113])).
fof(f1107,plain,(
  ( ! [X61,X59,X60,X58] : (s(bool,'T_0') != s(bool,f(s(X58,sK2(X59,X60,bool,X58)))) | s(fun(X58,bool),X59) = s(fun(X58,bool),X60) | s(bool,X61) = s(bool,g(s(X58,sK2(X59,X60,bool,X58)))) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f111,f119])).
fof(f1106,plain,(
  ( ! [X57,X54,X56,X55] : (s(X56,f(s(bool,'T_0'))) != s(X56,g(s(bool,'T_0'))) | s(fun(bool,X56),X54) = s(fun(bool,X56),X55) | s(bool,X57) = s(bool,sK2(X54,X55,X56,bool)) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f111,f119])).
fof(f1056,plain,(
  ( ! [X14,X12,X13] : (s(bool,'T_0') = s(bool,X14) | s(bool,X13) = s(bool,X14) | s(bool,X12) = s(bool,X13) | ~p(s(bool,X12))) )),
  inference(superposition,[],[f119,f121])).
fof(f1055,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X8) = s(bool,X9) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10) | p(s(bool,X11)) | s(bool,X8) = s(bool,X11)) )),
  inference(superposition,[],[f119,f169])).
fof(f1053,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f119,f119])).
fof(f1010,plain,(
  ( ! [X24,X23,X25,X22] : (s(bool,'T_0') != s(bool,f(s(X22,sK2(X23,X24,bool,X22)))) | s(fun(X22,bool),X23) = s(fun(X22,bool),X24) | p(s(bool,X25)) | s(bool,X25) = s(bool,g(s(X22,sK2(X23,X24,bool,X22))))) )),
  inference(superposition,[],[f111,f169])).
fof(f1009,plain,(
  ( ! [X21,X19,X20] : (s(bool,'T_0') != s(bool,f(s(X19,sK2(X20,X21,bool,X19)))) | s(fun(X19,bool),X20) = s(fun(X19,bool),X21) | ~p(s(bool,g(s(X19,sK2(X20,X21,bool,X19)))))) )),
  inference(superposition,[],[f111,f121])).
fof(f1007,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,X14) != s(bool,f(s(X11,sK2(X12,X13,bool,X11)))) | s(fun(X11,bool),X12) = s(fun(X11,bool),X13) | ~p(s(bool,g(s(X11,sK2(X12,X13,bool,X11))))) | ~p(s(bool,X14))) )),
  inference(superposition,[],[f111,f110])).
fof(f1005,plain,(
  ( ! [X6,X4,X5,X3] : (s(bool,X6) != s(bool,f(s(X3,sK2(X4,X5,bool,X3)))) | s(fun(X3,bool),X4) = s(fun(X3,bool),X5) | p(s(bool,X6)) | p(s(bool,g(s(X3,sK2(X4,X5,bool,X3)))))) )),
  inference(superposition,[],[f111,f107])).
fof(f1004,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK2(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'F_0') != s(bool,f(s(X0,sK2(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f111,f81])).
fof(f1001,plain,(
  ( ! [X24,X23,X25,X22] : (s(X24,f(s(bool,'T_0'))) != s(X24,g(s(bool,'T_0'))) | s(fun(bool,X24),X22) = s(fun(bool,X24),X23) | p(s(bool,X25)) | s(bool,X25) = s(bool,sK2(X22,X23,X24,bool))) )),
  inference(superposition,[],[f111,f169])).
fof(f1000,plain,(
  ( ! [X21,X19,X20] : (s(X21,f(s(bool,'T_0'))) != s(X21,g(s(bool,'T_0'))) | s(fun(bool,X21),X19) = s(fun(bool,X21),X20) | ~p(s(bool,sK2(X19,X20,X21,bool)))) )),
  inference(superposition,[],[f111,f121])).
fof(f998,plain,(
  ( ! [X14,X12,X13,X11] : (s(X13,f(s(bool,X14))) != s(X13,g(s(bool,X14))) | s(fun(bool,X13),X11) = s(fun(bool,X13),X12) | ~p(s(bool,sK2(X11,X12,X13,bool))) | ~p(s(bool,X14))) )),
  inference(superposition,[],[f111,f110])).
fof(f996,plain,(
  ( ! [X6,X4,X5,X3] : (s(X5,f(s(bool,X6))) != s(X5,g(s(bool,X6))) | s(fun(bool,X5),X3) = s(fun(bool,X5),X4) | p(s(bool,X6)) | p(s(bool,sK2(X3,X4,X5,bool)))) )),
  inference(superposition,[],[f111,f107])).
fof(f995,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK2(X0,X1,X2,bool))) )),
  inference(superposition,[],[f111,f81])).
fof(f942,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))))) )),
  inference(unit_resulting_resolution,[],[f737,f85])).
fof(f950,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f737,f121])).
fof(f921,plain,(
  ( ! [X21,X22] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X21))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X21))),s('type.num.num',X21))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X21))))) )),
  inference(superposition,[],[f82,f85])).
fof(f919,plain,(
  ( ! [X17,X15,X16] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X15))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X15))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X16))))))) )),
  inference(superposition,[],[f82,f104])).
fof(f912,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X4))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4))))) )),
  inference(superposition,[],[f82,f85])).
fof(f910,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X1))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(superposition,[],[f82,f104])).
fof(f853,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(unit_resulting_resolution,[],[f721,f85])).
fof(f861,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(unit_resulting_resolution,[],[f721,f121])).
fof(f836,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f353,f114])).
fof(f817,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X6))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X6)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6))))) )),
  inference(superposition,[],[f84,f85])).
fof(f812,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) | s('type.num.num',X0) != s('type.num.num',X1) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) )),
  inference(superposition,[],[f86,f85])).
fof(f734,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))))) )),
  inference(superposition,[],[f86,f104])).
fof(f726,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X10))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X12))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))))))) )),
  inference(superposition,[],[f86,f104])).
fof(f737,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))))) )),
  inference(forward_demodulation,[],[f720,f80])).
fof(f720,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))),s('type.num.num','const.num.|48|_0'))))))) )),
  inference(unit_resulting_resolution,[],[f80,f86])).
fof(f721,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(unit_resulting_resolution,[],[f104,f86])).
fof(f654,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X2)) | s(bool,X1) = s(bool,X2) | p(s(bool,X3)) | s(bool,X0) = s(bool,X3)) )),
  inference(superposition,[],[f169,f169])).
fof(f650,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(subsumption_resolution,[],[f637,f78])).
fof(f637,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(superposition,[],[f84,f81])).
fof(f635,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X10)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))))))) )),
  inference(superposition,[],[f84,f104])).
fof(f408,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f114,f105])).
fof(f353,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f105,f80])).
fof(f119,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X1) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f81,f81])).
fof(f111,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK2(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK2(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK2(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK2(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2])],[f55])).
fof(f55,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.transc.transc_78_prove_ltb',aHL_EXT)).
fof(f114,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f106,f105])).
fof(f106,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.transc.transc_78_prove_ltb','thm.arithmetic.ADD_CLAUSES|split|2')).
fof(f105,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.transc.transc_78_prove_ltb','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f79,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))),
  file('thm.transc.transc_78_prove_ltb','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f2522,plain,(
  ( ! [X97,X95,X98,X96] : (~p(s(bool,'F_0')) | s(X97,f(s(bool,X98))) != s(X97,g(s(bool,X98))) | s(fun(bool,X97),X95) = s(fun(bool,X97),X96) | s(bool,'T_0') != s(bool,X98)) ) | ($spl0 | $spl16)),
  inference(forward_demodulation,[],[f2060,f170])).
fof(f2060,plain,(
  ( ! [X97,X95,X98,X96] : (s(X97,f(s(bool,X98))) != s(X97,g(s(bool,X98))) | s(fun(bool,X97),X95) = s(fun(bool,X97),X96) | ~p(s(bool,sK2(X95,X96,X97,bool))) | s(bool,'T_0') != s(bool,X98)) ) | $spl16),
  inference(superposition,[],[f111,f1862])).
fof(f2662,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) ) | $spl0),
  inference(forward_demodulation,[],[f86,f170])).
fof(f2701,plain,(
  $false | ($spl0 | $spl16)),
  inference(equality_resolution,[],[f2663])).
fof(f2520,plain,(
  $false | ($spl2 | $spl6 | $spl16)),
  inference(global_subsumption,[],[f75,f77,f79,f80,f81,f83,f104,f105,f114,f110,f107,f111,f119,f121,f124,f168,f169,f259,f353,f408,f82,f84,f113,f74,f73,f86,f85,f78,f309,f635,f650,f654,f655,f721,f737,f726,f734,f810,f812,f817,f836,f861,f853,f910,f912,f913,f919,f921,f925,f927,f950,f942,f995,f996,f998,f1000,f1001,f1003,f1004,f1005,f1007,f1009,f1010,f1012,f1053,f1055,f1056,f1106,f1107,f1145,f1150,f1152,f1154,f1178,f1156,f1159,f1161,f1163,f1179,f1184,f1186,f1207,f1212,f1217,f1219,f1388,f1368,f1367,f1365,f1364,f1322,f1323,f1353,f1354,f1514,f1494,f1496,f1504,f1595,f1600,f1602,f1604,f1605,f1637,f1862,f1879,f1880,f1885,f1887,f1889,f1890,f1926,f1896,f1898,f1900,f1906,f1912,f1914,f1915,f2075,f2022,f2023,f2060,f2061,f2109,f2110,f2111,f2154,f2155,f2156,f2157,f2116,f2158,f2118,f2160,f2162,f2163,f2127,f2129,f2131,f2137,f2143,f2145,f2146,f2149,f2256,f2257,f2258,f2259,f2260,f2261,f2069,f1356,f171,f2304,f2413,f2416,f2418,f2419,f2426,f2429,f2432,f2439,f2442,f2451,f2462,f2465,f2468,f2471,f2474,f2479,f2484,f2489,f2492,f2495,f2498,f2501,f2506,f2509,f2514,f2517,f2519])).
fof(f2519,plain,(
  ( ! [X97,X95,X98,X96] : (s(X97,f(s(bool,X98))) != s(X97,g(s(bool,X98))) | s(fun(bool,X97),X95) = s(fun(bool,X97),X96)) ) | ($spl2 | $spl6 | $spl16)),
  inference(subsumption_resolution,[],[f2518,f2304])).
fof(f2518,plain,(
  ( ! [X97,X95,X98,X96] : (s(X97,f(s(bool,X98))) != s(X97,g(s(bool,X98))) | s(fun(bool,X97),X95) = s(fun(bool,X97),X96) | s(bool,'T_0') != s(bool,X98)) ) | ($spl2 | $spl6 | $spl16)),
  inference(subsumption_resolution,[],[f2404,f75])).
fof(f2404,plain,(
  ( ! [X97,X95,X98,X96] : (~p(s(bool,'T_0')) | s(X97,f(s(bool,X98))) != s(X97,g(s(bool,X98))) | s(fun(bool,X97),X95) = s(fun(bool,X97),X96) | s(bool,'T_0') != s(bool,X98)) ) | ($spl2 | $spl6 | $spl16)),
  inference(backward_demodulation,[],[f2304,f2060])).
fof(f2517,plain,(
  ( ! [X14,X12,X13,X11] : (s(X13,f(s(bool,X14))) != s(X13,g(s(bool,X14))) | s(fun(bool,X13),X11) = s(fun(bool,X13),X12) | ~p(s(bool,X14))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2398,f75])).
fof(f2398,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'T_0')) | s(X13,f(s(bool,X14))) != s(X13,g(s(bool,X14))) | s(fun(bool,X13),X11) = s(fun(bool,X13),X12) | ~p(s(bool,X14))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f998])).
fof(f2514,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.num.num',X3)))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2390,f75])).
fof(f2390,plain,(
  ( ! [X4,X3] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.num.num',X3)))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f1926])).
fof(f2509,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2378,f75])).
fof(f2378,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f1178])).
fof(f2506,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0)))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2375,f75])).
fof(f2375,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0)))))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f1156])).
fof(f2501,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X14))),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2500,f75])).
fof(f2500,plain,(
  ( ! [X14,X15] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X14))),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15))))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2499,f2304])).
fof(f2499,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X14))),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15)))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2363,f75])).
fof(f2363,plain,(
  ( ! [X14,X15] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X14))),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15)))))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f2118])).
fof(f2498,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2497,f75])).
fof(f2497,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2496,f2304])).
fof(f2496,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2362,f75])).
fof(f2362,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f2155])).
fof(f2495,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X9))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2494,f75])).
fof(f2494,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X9))))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2493,f2304])).
fof(f2493,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X9)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X9)))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2361,f75])).
fof(f2361,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X9)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X9)))))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f2157])).
fof(f2492,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))),s('type.num.num',sK1('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13))))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2491,f75])).
fof(f2491,plain,(
  ( ! [X12,X13] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))),s('type.num.num',sK1('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13))))))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2490,f2304])).
fof(f2490,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))),s('type.num.num',sK1('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)))))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2360,f75])).
fof(f2360,plain,(
  ( ! [X12,X13] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))),s('type.num.num',sK1('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)))))))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f2158])).
fof(f2489,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X11),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X10))))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2488,f75])).
fof(f2488,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X11),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X10))))))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2487,f2304])).
fof(f2487,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X11),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X10)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2486,f75])).
fof(f2486,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X11),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X10)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2485,f2304])).
fof(f2485,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X11),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X10)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X11),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X10))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2357,f75])).
fof(f2357,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X11),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X10)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X11),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X10))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f2116])).
fof(f2484,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X2))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2483,f75])).
fof(f2483,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X2))))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2482,f2304])).
fof(f2482,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2481,f75])).
fof(f2481,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2480,f2304])).
fof(f2480,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X2))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2354,f75])).
fof(f2354,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X2))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f2110])).
fof(f2479,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2478,f75])).
fof(f2478,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1))))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2477,f2304])).
fof(f2477,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2476,f75])).
fof(f2476,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2475,f2304])).
fof(f2475,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2351,f75])).
fof(f2351,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f2109])).
fof(f2474,plain,(
  ( ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X1)),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',sK1(X1))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2473,f75])).
fof(f2473,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X1)),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',sK1(X1))))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2472,f2304])).
fof(f2472,plain,(
  ( ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X1)),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',sK1(X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X1)))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2349,f75])).
fof(f2349,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X1)),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',sK1(X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X1)))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f2163])).
fof(f2471,plain,(
  ( ! [X19] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X19),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',sK1(X19)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2470,f75])).
fof(f2470,plain,(
  ( ! [X19] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X19),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',sK1(X19)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2469,f2304])).
fof(f2469,plain,(
  ( ! [X19] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X19),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',sK1(X19)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',sK1(X19)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2348,f75])).
fof(f2348,plain,(
  ( ! [X19] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X19),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',sK1(X19)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num',sK1(X19)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f2162])).
fof(f2468,plain,(
  ( ! [X18] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X18),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X18)))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2467,f75])).
fof(f2467,plain,(
  ( ! [X18] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X18),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X18)))))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2466,f2304])).
fof(f2466,plain,(
  ( ! [X18] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X18),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X18))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X18))))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2347,f75])).
fof(f2347,plain,(
  ( ! [X18] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X18),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X18))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X18))))))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f2160])).
fof(f2465,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2464,f75])).
fof(f2464,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7))))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2463,f2304])).
fof(f2463,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2346,f75])).
fof(f2346,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f2156])).
fof(f2462,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X5),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0'))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2461,f75])).
fof(f2461,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X5),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0'))))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2460,f2304])).
fof(f2460,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X5),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2345,f75])).
fof(f2345,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X5),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f2154])).
fof(f2451,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4)))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2450,f75])).
fof(f2450,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4)))))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2449,f2304])).
fof(f2449,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X4)))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2448,f75])).
fof(f2448,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X4)))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2447,f2304])).
fof(f2447,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X4)))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2446,f75])).
fof(f2446,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X4)))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2445,f2304])).
fof(f2445,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4)))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X4)))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2336,f75])).
fof(f2336,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1('const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4)))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X4)))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f2111])).
fof(f2442,plain,(
  ( ! [X28,X27] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',X28))),s('type.num.num',X27)))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2441,f75])).
fof(f2441,plain,(
  ( ! [X28,X27] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',X28))),s('type.num.num',X27)))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2440,f2304])).
fof(f2440,plain,(
  ( ! [X28,X27] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',X28))),s('type.num.num',X27))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X27)))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2333,f75])).
fof(f2333,plain,(
  ( ! [X28,X27] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',X28))),s('type.num.num',X27))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X27)))))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f1889])).
fof(f2439,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2330,f75])).
fof(f2330,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f1514])).
fof(f2432,plain,(
  ( ! [X24,X25] : (s('type.num.num',X25) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X25),s('type.num.num',X24))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X25),s('type.num.num',X24)))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2431,f75])).
fof(f2431,plain,(
  ( ! [X24,X25] : (~p(s(bool,'T_0')) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X25),s('type.num.num',X24))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X25),s('type.num.num',X24)))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2430,f2304])).
fof(f2430,plain,(
  ( ! [X24,X25] : (s('type.num.num',X25) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X25),s('type.num.num',X24))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X25),s('type.num.num',X24))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X24)))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2322,f75])).
fof(f2322,plain,(
  ( ! [X24,X25] : (~p(s(bool,'T_0')) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X25),s('type.num.num',X24))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X25),s('type.num.num',X24))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X24)))))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f1154])).
fof(f2429,plain,(
  ( ! [X21,X22] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X21))),s('type.num.num',X21)))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2428,f75])).
fof(f2428,plain,(
  ( ! [X21,X22] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X21))),s('type.num.num',X21)))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2427,f2304])).
fof(f2427,plain,(
  ( ! [X21,X22] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X21))),s('type.num.num',X21))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X21)))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2321,f75])).
fof(f2321,plain,(
  ( ! [X21,X22] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X21))),s('type.num.num',X21))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X21)))))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f921])).
fof(f2426,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2425,f75])).
fof(f2425,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4))))) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2424,f2304])).
fof(f2424,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X4)))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2320,f75])).
fof(f2320,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK1(X4)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1(X4)))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f912])).
fof(f2419,plain,(
  ( ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2317,f75])).
fof(f2317,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1(X1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f810])).
fof(f2418,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X0))))) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2314,f75])).
fof(f2314,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1(X0))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f85])).
fof(f2416,plain,(
  ( ! [X21,X19,X20] : (s(fun(X19,bool),X20) = s(fun(X19,bool),X21)) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2415,f75])).
fof(f2415,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | s(fun(X19,bool),X20) = s(fun(X19,bool),X21)) ) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f2409,f2304])).
fof(f2409,plain,(
  ( ! [X21,X19,X20] : (s(fun(X19,bool),X20) = s(fun(X19,bool),X21) | ~p(s(bool,g(s(X19,sK2(X20,X21,bool,X19)))))) ) | ($spl2 | $spl6)),
  inference(trivial_inequality_removal,[],[f2307])).
fof(f2307,plain,(
  ( ! [X21,X19,X20] : (s(bool,'T_0') != s(bool,'T_0') | s(fun(X19,bool),X20) = s(fun(X19,bool),X21) | ~p(s(bool,g(s(X19,sK2(X20,X21,bool,X19)))))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f1009])).
fof(f2413,plain,(
  ( ! [X12,X13,X11] : (s(fun(X11,bool),X12) = s(fun(X11,bool),X13)) ) | ($spl2 | $spl6 | $spl16)),
  inference(subsumption_resolution,[],[f2412,f75])).
fof(f2412,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'T_0')) | s(fun(X11,bool),X12) = s(fun(X11,bool),X13)) ) | ($spl2 | $spl6 | $spl16)),
  inference(forward_demodulation,[],[f2411,f2304])).
fof(f2411,plain,(
  ( ! [X12,X13,X11] : (s(fun(X11,bool),X12) = s(fun(X11,bool),X13) | ~p(s(bool,g(s(X11,sK2(X12,X13,bool,X11)))))) ) | ($spl2 | $spl6 | $spl16)),
  inference(subsumption_resolution,[],[f2410,f2304])).
fof(f2410,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,'T_0') != s(bool,X14) | s(fun(X11,bool),X12) = s(fun(X11,bool),X13) | ~p(s(bool,g(s(X11,sK2(X12,X13,bool,X11)))))) ) | ($spl2 | $spl6 | $spl16)),
  inference(subsumption_resolution,[],[f2306,f2260])).
fof(f2306,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,'T_0') != s(bool,X14) | s(fun(X11,bool),X12) = s(fun(X11,bool),X13) | ~p(s(bool,g(s(X11,sK2(X12,X13,bool,X11))))) | ~p(s(bool,X14))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f2304,f1007])).
fof(f2304,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) | ($spl2 | $spl6)),
  inference(subsumption_resolution,[],[f2292,f121])).
fof(f2292,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9) | p(s(bool,X9))) ) | ($spl2 | $spl6)),
  inference(backward_demodulation,[],[f171,f309])).
fof(f171,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl2),
  inference(cnf_transformation,[],[f171_D])).
fof(f171_D,plain,(
  s(bool,'T_0') = s(bool,'F_0') <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f2069,plain,(
  ( ! [X72] : (~p(s(bool,X72)) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl16),
  inference(duplicate_literal_removal,[],[f2012])).
fof(f2012,plain,(
  ( ! [X72] : (~p(s(bool,X72)) | ~p(s(bool,X72)) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl16),
  inference(superposition,[],[f78,f1862])).
fof(f2261,plain,(
  ( ! [X74,X75] : (s(bool,X74) = s(bool,X75) | ~p(s(bool,X74)) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl16),
  inference(subsumption_resolution,[],[f2014,f1862])).
fof(f2014,plain,(
  ( ! [X74,X75] : (s(bool,X74) = s(bool,X75) | s(bool,'T_0') = s(bool,X75) | ~p(s(bool,X74)) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl16),
  inference(superposition,[],[f81,f1862])).
fof(f2259,plain,(
  ( ! [X54,X56,X55] : (s(bool,X54) = s(bool,X55) | s(bool,X55) = s(bool,X56) | s(bool,'T_0') = s(bool,X56) | s(bool,'T_0') != s(bool,X54)) ) | $spl16),
  inference(subsumption_resolution,[],[f2043,f75])).
fof(f2043,plain,(
  ( ! [X54,X56,X55] : (s(bool,X54) = s(bool,X55) | s(bool,X55) = s(bool,X56) | s(bool,'T_0') = s(bool,X56) | ~p(s(bool,'T_0')) | s(bool,'T_0') != s(bool,X54)) ) | $spl16),
  inference(superposition,[],[f119,f1862])).
fof(f2257,plain,(
  ( ! [X78,X79,X77] : (p(s(bool,X78)) | s('type.num.num',X77) != s('type.num.num',X79) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X77)))) | s(bool,'T_0') != s(bool,X78)) ) | $spl16),
  inference(subsumption_resolution,[],[f2054,f812])).
fof(f2054,plain,(
  ( ! [X78,X79,X77] : (p(s(bool,X78)) | s('type.num.num',X77) != s('type.num.num',X79) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X79)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X77)))) | s(bool,'T_0') != s(bool,X78)) ) | $spl16),
  inference(superposition,[],[f812,f1862])).
fof(f2256,plain,(
  ( ! [X88,X89] : (p(s(bool,X89)) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X88)))) | s(bool,'T_0') != s(bool,X89)) ) | $spl16),
  inference(subsumption_resolution,[],[f2058,f84])).
fof(f2058,plain,(
  ( ! [X88,X87,X89] : (p(s(bool,X89)) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X88)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X87),s('type.num.num',X88))),s('type.num.num',X88)))) | s(bool,'T_0') != s(bool,X89)) ) | $spl16),
  inference(superposition,[],[f84,f1862])).
fof(f2061,plain,(
  ( ! [X101,X99,X102,X100] : (s(bool,X102) != s(bool,f(s(X99,sK2(X100,X101,bool,X99)))) | s(fun(X99,bool),X100) = s(fun(X99,bool),X101) | ~p(s(bool,g(s(X99,sK2(X100,X101,bool,X99))))) | s(bool,'T_0') != s(bool,X102)) ) | $spl16),
  inference(superposition,[],[f111,f1862])).
fof(f2023,plain,(
  ( ! [X101,X99,X102,X100] : (s(bool,X102) != s(bool,f(s(X99,sK2(X100,X101,bool,X99)))) | s(fun(X99,bool),X100) = s(fun(X99,bool),X101) | ~p(s(bool,X102)) | s(bool,'T_0') != s(bool,g(s(X99,sK2(X100,X101,bool,X99))))) ) | $spl16),
  inference(superposition,[],[f111,f1862])).
fof(f2022,plain,(
  ( ! [X97,X95,X98,X96] : (s(X97,f(s(bool,X98))) != s(X97,g(s(bool,X98))) | s(fun(bool,X97),X95) = s(fun(bool,X97),X96) | ~p(s(bool,X98)) | s(bool,'T_0') != s(bool,sK2(X95,X96,X97,bool))) ) | $spl16),
  inference(superposition,[],[f111,f1862])).
fof(f1012,plain,(
  ( ! [X30,X31,X32] : (s(bool,'F_0') != s(bool,f(s(X30,sK2(X31,X32,bool,X30)))) | s(fun(X30,bool),X31) = s(fun(X30,bool),X32) | p(s(bool,g(s(X30,sK2(X31,X32,bool,X30)))))) ) | $spl6),
  inference(superposition,[],[f111,f309])).
fof(f1003,plain,(
  ( ! [X30,X31,X32] : (s(X32,f(s(bool,'F_0'))) != s(X32,g(s(bool,'F_0'))) | s(fun(bool,X32),X30) = s(fun(bool,X32),X31) | p(s(bool,sK2(X30,X31,X32,bool)))) ) | $spl6),
  inference(superposition,[],[f111,f309])).
fof(f2414,plain,(
  $false | ($spl2 | $spl6 | $spl16)),
  inference(global_subsumption,[],[f75,f77,f79,f80,f81,f83,f104,f105,f114,f110,f107,f111,f119,f121,f124,f168,f169,f259,f353,f408,f82,f84,f113,f74,f73,f86,f85,f78,f309,f635,f650,f654,f655,f721,f737,f726,f734,f810,f812,f817,f836,f861,f853,f910,f912,f913,f919,f921,f925,f927,f950,f942,f995,f996,f998,f1000,f1001,f1003,f1004,f1005,f1007,f1009,f1010,f1012,f1053,f1055,f1056,f1106,f1107,f1145,f1150,f1152,f1154,f1178,f1156,f1159,f1161,f1163,f1179,f1184,f1186,f1207,f1212,f1217,f1219,f1388,f1368,f1367,f1365,f1364,f1322,f1323,f1353,f1354,f1514,f1494,f1496,f1504,f1595,f1600,f1602,f1604,f1605,f1637,f1862,f1879,f1880,f1885,f1887,f1889,f1890,f1926,f1896,f1898,f1900,f1906,f1912,f1914,f1915,f2075,f2022,f2023,f2060,f2061,f2109,f2110,f2111,f2154,f2155,f2156,f2157,f2116,f2158,f2118,f2160,f2162,f2163,f2127,f2129,f2131,f2137,f2143,f2145,f2146,f2149,f2256,f2257,f2258,f2259,f2260,f2261,f2069,f1356,f171,f2304,f2413])).
fof(f2303,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f2291,f75])).
fof(f2291,plain,(
  ~p(s(bool,'T_0')) | $spl2),
  inference(backward_demodulation,[],[f171,f78])).
fof(f2255,plain,(
  ( ! [X36] : (s(bool,'F_0') != s(bool,X36) | s(bool,'T_0') != s(bool,X36)) ) | $spl20),
  inference(cnf_transformation,[],[f2255_D])).
fof(f2255_D,plain,(
  ( ! [X36] : (s(bool,'F_0') != s(bool,X36) | s(bool,'T_0') != s(bool,X36)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f2063,plain,(
  ( ! [X35,X36] : (s(bool,'F_0') != s(bool,X36) | ~p(s(bool,X35)) | s(bool,'T_0') != s(bool,X36)) ) | ($spl10 | $spl16)),
  inference(duplicate_literal_removal,[],[f2037])).
fof(f2037,plain,(
  ( ! [X35,X36] : (s(bool,'F_0') != s(bool,X36) | ~p(s(bool,X35)) | ~p(s(bool,X35)) | s(bool,'T_0') != s(bool,X36)) ) | ($spl10 | $spl16)),
  inference(superposition,[],[f426,f1862])).
fof(f1862,plain,(
  ( ! [X31,X32] : (s(bool,X31) = s(bool,X32) | ~p(s(bool,X32)) | s(bool,'T_0') != s(bool,X31)) ) | $spl16),
  inference(cnf_transformation,[],[f1862_D])).
fof(f1862_D,plain,(
  ( ! [X31,X32] : (s(bool,X31) = s(bool,X32) | ~p(s(bool,X32)) | s(bool,'T_0') != s(bool,X31)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f1361,plain,(
  ( ! [X30,X31,X32] : (s(bool,'T_0') != s(bool,X31) | p(s(bool,X30)) | s(bool,X31) = s(bool,X32) | ~p(s(bool,X32))) ) | $spl3),
  inference(duplicate_literal_removal,[],[f1332])).
fof(f1332,plain,(
  ( ! [X30,X31,X32] : (s(bool,'T_0') != s(bool,X31) | p(s(bool,X30)) | p(s(bool,X30)) | s(bool,X31) = s(bool,X32) | ~p(s(bool,X32))) ) | $spl3),
  inference(superposition,[],[f235,f655])).
fof(f235,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,X3) | p(s(bool,X3))) ) | $spl3),
  inference(subsumption_resolution,[],[f230,f78])).
fof(f230,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,X3) | p(s(bool,'F_0')) | p(s(bool,X3))) ) | $spl3),
  inference(superposition,[],[f172,f107])).
fof(f426,plain,(
  ( ! [X14] : (s(bool,'F_0') != s(bool,X14) | ~p(s(bool,X14))) ) | $spl10),
  inference(cnf_transformation,[],[f426_D])).
fof(f426_D,plain,(
  ( ! [X14] : (s(bool,'F_0') != s(bool,X14) | ~p(s(bool,X14))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f294,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') != s(bool,X15) | ~p(s(bool,X15)) | s(bool,'T_0') = s(bool,X14)) ) | $spl3),
  inference(subsumption_resolution,[],[f285,f121])).
fof(f285,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') != s(bool,X15) | p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,'T_0') = s(bool,X14)) ) | $spl3),
  inference(superposition,[],[f237,f81])).
fof(f237,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl3),
  inference(superposition,[],[f235,f121])).
fof(f537,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) | $spl12),
  inference(cnf_transformation,[],[f537_D])).
fof(f537_D,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f539,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl14),
  inference(cnf_transformation,[],[f539_D])).
fof(f539_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f73,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f57])).
fof(f476,plain,(
  $false | ($spl3 | $spl8)),
  inference(subsumption_resolution,[],[f428,f436])).
fof(f436,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1)) ) | $spl8),
  inference(unit_resulting_resolution,[],[f425,f425,f110])).
fof(f428,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0)) ) | ($spl3 | $spl8)),
  inference(unit_resulting_resolution,[],[f78,f425,f237])).
fof(f475,plain,(
  $false | ($spl3 | $spl8)),
  inference(subsumption_resolution,[],[f431,f75])).
fof(f431,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl8)),
  inference(unit_resulting_resolution,[],[f172,f425,f110])).
fof(f474,plain,(
  $false | ($spl3 | $spl8)),
  inference(subsumption_resolution,[],[f433,f425])).
fof(f433,plain,(
  ~p(s(bool,'F_0')) | ($spl3 | $spl8)),
  inference(unit_resulting_resolution,[],[f172,f425,f110])).
fof(f473,plain,(
  $false | ($spl3 | $spl8)),
  inference(subsumption_resolution,[],[f437,f425])).
fof(f437,plain,(
  ~p(s(bool,'F_0')) | ($spl3 | $spl8)),
  inference(unit_resulting_resolution,[],[f172,f425,f110])).
fof(f472,plain,(
  $false | ($spl3 | $spl8)),
  inference(subsumption_resolution,[],[f439,f75])).
fof(f439,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl8)),
  inference(unit_resulting_resolution,[],[f172,f425,f110])).
fof(f467,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f458,f75])).
fof(f458,plain,(
  ~p(s(bool,'T_0')) | $spl8),
  inference(backward_demodulation,[],[f441,f78])).
fof(f441,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(unit_resulting_resolution,[],[f425,f121])).
fof(f442,plain,(
  $false | ($spl3 | $spl8)),
  inference(unit_resulting_resolution,[],[f172,f425,f121])).
fof(f440,plain,(
  $false | ($spl3 | $spl8)),
  inference(unit_resulting_resolution,[],[f75,f172,f425,f110])).
fof(f438,plain,(
  $false | ($spl3 | $spl8)),
  inference(unit_resulting_resolution,[],[f425,f172,f425,f110])).
fof(f434,plain,(
  $false | ($spl3 | $spl8)),
  inference(unit_resulting_resolution,[],[f425,f172,f425,f110])).
fof(f432,plain,(
  $false | ($spl3 | $spl8)),
  inference(unit_resulting_resolution,[],[f75,f172,f425,f110])).
fof(f427,plain,(
  $false | $spl8),
  inference(unit_resulting_resolution,[],[f78,f425])).
fof(f396,plain,(
  ( ! [X14,X13] : (s(bool,'F_0') != s(bool,X14) | p(s(bool,X13)) | ~p(s(bool,X14))) ) | ($spl3 | $spl6)),
  inference(duplicate_literal_removal,[],[f392])).
fof(f392,plain,(
  ( ! [X14,X13] : (s(bool,'F_0') != s(bool,X14) | p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X13))) ) | ($spl3 | $spl6)),
  inference(superposition,[],[f237,f309])).
fof(f320,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f311,f75])).
fof(f311,plain,(
  ~p(s(bool,'T_0')) | $spl4),
  inference(backward_demodulation,[],[f308,f78])).
fof(f309,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,X9) | p(s(bool,X9))) ) | $spl6),
  inference(cnf_transformation,[],[f309_D])).
fof(f309_D,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,X9) | p(s(bool,X9))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f168,plain,(
  ( ! [X8,X9] : (s(bool,'F_0') = s(bool,X9) | p(s(bool,X9)) | s(bool,'T_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f141,f121])).
fof(f141,plain,(
  ( ! [X8,X9] : (s(bool,'F_0') = s(bool,X9) | p(s(bool,X9)) | p(s(bool,X8)) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f107,f81])).
fof(f170,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f170_D])).
fof(f170_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f172,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f172_D])).
fof(f172_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f124,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f81])).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 132
% Passive clauses: 1211
% Generated clauses: 12932
% Final active clauses: 91
% Final passive clauses: 770
% Input formulas: 22
% Initial clauses: 39
% 
% Duplicate literals: 493
% Trivial inequalities: 209
% Fw subsumption resolutions: 1705
% Fw demodulations: 1605
% Bw demodulations: 159
% Global subsumptions: 4
% 
% Simple tautologies: 530
% Equational tautologies: 112
% Forward subsumptions: 7040
% Bw demodulations to eq. taut.: 23
% 
% Unit resulting resolution: 650
% Forward superposition: 4225
% Backward superposition: 3233
% Self superposition: 127
% Equality factoring: 44
% Equality resolution: 21
% 
% Split clauses: 22
% Split components: 44
% SAT solver clauses: 1262
% SAT solver unit clauses: 32
% SAT solver binary clauses: 137
% 
% Sat splits: 22
% Sat splitting refutations: 23
% 
% Memory used [KB]: 9850
% Time elapsed: 0.448 s
% ------------------------------
% ------------------------------
% Success in time 16.217 s
