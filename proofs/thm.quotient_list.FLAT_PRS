Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quotient_list
% (37463)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 648
% Passive clauses: 4436
% Generated clauses: 16904
% Final active clauses: 632
% Final passive clauses: 3514
% Input formulas: 261
% Initial clauses: 538
% 
% Duplicate literals: 135
% Trivial inequalities: 22
% Fw subsumption resolutions: 1174
% Fw demodulations: 1642
% Bw demodulations: 6
% 
% Simple tautologies: 277
% Equational tautologies: 25
% Forward subsumptions: 8928
% 
% Binary resolution: 3985
% Factoring: 354
% Forward superposition: 4300
% Backward superposition: 4582
% Self superposition: 28
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 340
% Split components: 682
% SAT solver clauses: 516
% SAT solver unit clauses: 11
% SAT solver binary clauses: 64
% 
% Sat splits: 340
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 515
% TWLsolver calls for satisfiability: 246
% 
% Memory used [KB]: 9466
% Time elapsed: 0.617 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quotient_list
% (37481)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit

% Active clauses: 428
% Passive clauses: 2045
% Generated clauses: 11828
% Final active clauses: 421
% Final passive clauses: 1597
% Input formulas: 261
% Initial clauses: 538
% 
% Duplicate literals: 87
% Trivial inequalities: 6
% Fw subsumption resolutions: 529
% Fw demodulations: 1121
% Bw demodulations: 27
% Condensations: 59
% Global subsumptions: 24
% 
% Simple tautologies: 266
% Equational tautologies: 9
% Forward subsumptions: 5424
% 
% Binary resolution: 1606
% Factoring: 131
% Forward superposition: 3125
% Backward superposition: 2516
% Self superposition: 35
% Equality factoring: 2
% Equality resolution: 4
% 
% Split clauses: 9
% Split components: 18
% SAT solver clauses: 2795
% SAT solver unit clauses: 646
% SAT solver binary clauses: 120
% SAT solver learnt clauses: 48
% SAT solver learnt literals: 12
% 
% Sat splits: 9
% 
% TWLsolver clauses: 2699
% TWLsolver calls for satisfiability: 3343
% 
% Memory used [KB]: 13688
% Time elapsed: 0.722 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quotient_list
% (37508)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1016
% Passive clauses: 8935
% Generated clauses: 154800
% Final active clauses: 890
% Final passive clauses: 4032
% Input formulas: 261
% Initial clauses: 538
% Discarded non-redundant clauses: 4023
% 
% Duplicate literals: 8
% Trivial inequalities: 37
% Fw subsumption resolutions: 1342
% Fw demodulations: 63833
% Bw demodulations: 1901
% Condensations: 32
% Global subsumptions: 1
% 
% Simple tautologies: 136
% Equational tautologies: 61
% Forward subsumptions: 46972
% Fw demodulations to eq. taut.: 29474
% Bw demodulations to eq. taut.: 135
% 
% Unit resulting resolution: 51978
% Factoring: 1
% Forward superposition: 16739
% Backward superposition: 16527
% Self superposition: 146
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 31
% Split components: 62
% SAT solver clauses: 10308
% SAT solver unit clauses: 3733
% SAT solver binary clauses: 4446
% 
% Sat splits: 31
% Sat splitting refutations: 1308
% 
% Memory used [KB]: 188184
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 28 next slice time: 28
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.quotient_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quotient_list
% SZS output start Proof for thm.quotient_list
fof(f59208,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f59031])).
fof(f59031,plain,(
  s('type.list.list'(sK14),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK14)),sK18))) != s('type.list.list'(sK14),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK14)),sK18)))),
  inference(superposition,[],[f1029,f13075])).
fof(f13075,plain,(
  ( ! [X17] : (s('type.list.list'(sK14),X17) = s('type.list.list'(sK14),happ(s(fun('type.list.list'(sK13),'type.list.list'(sK14)),'const.list.MAP_1'(s(fun(sK13,sK14),sK16))),s('type.list.list'(sK13),'const.list.MAP_2'(s(fun(sK14,sK13),sK17),s('type.list.list'(sK14),X17)))))) )),
  inference(forward_demodulation,[],[f12908,f780])).
fof(f780,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))) )),
  inference(cnf_transformation,[],[f321])).
fof(f321,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))),
  inference(flattening,[],[f320])).
fof(f320,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X7,X6] : ! [X15,X16] : s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X6,X7),X15),s('type.list.list'(X6),X16))) = s('type.list.list'(X7),happ(s(fun('type.list.list'(X6),'type.list.list'(X7)),'const.list.MAP_1'(s(fun(X6,X7),X15))),s('type.list.list'(X6),X16)))),
  file('thm.quotient_list.FLAT_PRS','ARITY_1_2_const.list.MAP')).
fof(f12908,plain,(
  ( ! [X17] : (s('type.list.list'(sK14),X17) = s('type.list.list'(sK14),happ(s(fun('type.list.list'(sK13),'type.list.list'(sK14)),'const.list.MAP_1'(s(fun(sK13,sK14),sK16))),s('type.list.list'(sK13),happ(s(fun('type.list.list'(sK14),'type.list.list'(sK13)),'const.list.MAP_1'(s(fun(sK14,sK13),sK17))),s('type.list.list'(sK14),X17)))))) )),
  inference(resolution,[],[f1030,f1019])).
fof(f1019,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,X5) = s(X1,happ(s(fun(X0,X1),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))) | ~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4))))) )),
  inference(cnf_transformation,[],[f479])).
fof(f479,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | ! [X5] : s(X1,X5) = s(X1,happ(s(fun(X0,X1),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))))),
  inference(ennf_transformation,[],[f424])).
fof(f424,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5] : s(X1,X5) = s(X1,happ(s(fun(X0,X1),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))))),
  inference(flattening,[],[f423])).
fof(f423,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5] : s(X1,X5) = s(X1,happ(s(fun(X0,X1),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))))),
  inference(rectify,[],[f158])).
fof(f158,axiom,(
  ! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X6,fun(X6,bool)),X8),s(fun(X6,X7),X9),s(fun(X7,X6),X10)))) => ! [X48] : s(X7,X48) = s(X7,happ(s(fun(X6,X7),X9),s(X6,happ(s(fun(X7,X6),X10),s(X7,X48))))))),
  file('thm.quotient_list.FLAT_PRS','thm.quotient.QUOTIENT_ABS_REP')).
fof(f1030,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun('type.list.list'(sK13),fun('type.list.list'(sK13),bool)),'const.list.LIST_REL_1'(s(fun(sK13,fun(sK13,bool)),sK15))),s(fun('type.list.list'(sK13),'type.list.list'(sK14)),'const.list.MAP_1'(s(fun(sK13,sK14),sK16))),s(fun('type.list.list'(sK14),'type.list.list'(sK13)),'const.list.MAP_1'(s(fun(sK14,sK13),sK17))))))),
  inference(resolution,[],[f675,f777])).
fof(f777,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X2))),s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X3))),s(fun('type.list.list'(X0),'type.list.list'(X1)),'const.list.MAP_1'(s(fun(X0,X1),X4)))))) | ~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4))))) )),
  inference(cnf_transformation,[],[f439])).
fof(f439,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) | p(s(bool,'const.quotient.QUOTIENT_3'(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X2))),s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X3))),s(fun('type.list.list'(X0),'type.list.list'(X1)),'const.list.MAP_1'(s(fun(X0,X1),X4)))))))),
  inference(ennf_transformation,[],[f315])).
fof(f315,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => p(s(bool,'const.quotient.QUOTIENT_3'(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X2))),s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X3))),s(fun('type.list.list'(X0),'type.list.list'(X1)),'const.list.MAP_1'(s(fun(X0,X1),X4)))))))),
  inference(flattening,[],[f314])).
fof(f314,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => p(s(bool,'const.quotient.QUOTIENT_3'(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X2))),s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X3))),s(fun('type.list.list'(X0),'type.list.list'(X1)),'const.list.MAP_1'(s(fun(X0,X1),X4)))))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X7,X6] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X6,fun(X6,bool)),X8),s(fun(X6,X7),X9),s(fun(X7,X6),X10)))) => p(s(bool,'const.quotient.QUOTIENT_3'(s(fun('type.list.list'(X6),fun('type.list.list'(X6),bool)),'const.list.LIST_REL_1'(s(fun(X6,fun(X6,bool)),X8))),s(fun('type.list.list'(X6),'type.list.list'(X7)),'const.list.MAP_1'(s(fun(X6,X7),X9))),s(fun('type.list.list'(X7),'type.list.list'(X6)),'const.list.MAP_1'(s(fun(X7,X6),X10)))))))),
  file('thm.quotient_list.FLAT_PRS','thm.quotient_list.LIST_QUOTIENT')).
fof(f675,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK13,fun(sK13,bool)),sK15),s(fun(sK13,sK14),sK16),s(fun(sK14,sK13),sK17))))),
  inference(cnf_transformation,[],[f500])).
fof(f500,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK13,fun(sK13,bool)),sK15),s(fun(sK13,sK14),sK16),s(fun(sK14,sK13),sK17)))) & s('type.list.list'(sK14),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK14)),sK18))) != s('type.list.list'(sK14),happ(s(fun('type.list.list'(sK13),'type.list.list'(sK14)),'const.list.MAP_1'(s(fun(sK13,sK14),sK16))),s('type.list.list'(sK13),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK13)),happ(s(fun('type.list.list'('type.list.list'(sK14)),'type.list.list'('type.list.list'(sK13))),'const.list.MAP_1'(s(fun('type.list.list'(sK14),'type.list.list'(sK13)),'const.list.MAP_1'(s(fun(sK14,sK13),sK17))))),s('type.list.list'('type.list.list'(sK14)),sK18)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14,sK15,sK16,sK17,sK18])],[f425])).
fof(f425,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) & ? [X5] : s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X5))) != s('type.list.list'(X1),happ(s(fun('type.list.list'(X0),'type.list.list'(X1)),'const.list.MAP_1'(s(fun(X0,X1),X3))),s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),happ(s(fun('type.list.list'('type.list.list'(X1)),'type.list.list'('type.list.list'(X0))),'const.list.MAP_1'(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X4))))),s('type.list.list'('type.list.list'(X1)),X5))))))))),
  inference(ennf_transformation,[],[f264])).
fof(f264,plain,(
  ~! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5] : s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X5))) = s('type.list.list'(X1),happ(s(fun('type.list.list'(X0),'type.list.list'(X1)),'const.list.MAP_1'(s(fun(X0,X1),X3))),s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),happ(s(fun('type.list.list'('type.list.list'(X1)),'type.list.list'('type.list.list'(X0))),'const.list.MAP_1'(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X4))))),s('type.list.list'('type.list.list'(X1)),X5))))))))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5] : s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X5))) = s('type.list.list'(X1),happ(s(fun('type.list.list'(X0),'type.list.list'(X1)),'const.list.MAP_1'(s(fun(X0,X1),X3))),s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),happ(s(fun('type.list.list'('type.list.list'(X1)),'type.list.list'('type.list.list'(X0))),'const.list.MAP_1'(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X4))))),s('type.list.list'('type.list.list'(X1)),X5))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X6,fun(X6,bool)),X8),s(fun(X6,X7),X9),s(fun(X7,X6),X10)))) => ! [X11] : s('type.list.list'(X7),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X7)),X11))) = s('type.list.list'(X7),happ(s(fun('type.list.list'(X6),'type.list.list'(X7)),'const.list.MAP_1'(s(fun(X6,X7),X9))),s('type.list.list'(X6),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X6)),happ(s(fun('type.list.list'('type.list.list'(X7)),'type.list.list'('type.list.list'(X6))),'const.list.MAP_1'(s(fun('type.list.list'(X7),'type.list.list'(X6)),'const.list.MAP_1'(s(fun(X7,X6),X10))))),s('type.list.list'('type.list.list'(X7)),X11))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X6,fun(X6,bool)),X8),s(fun(X6,X7),X9),s(fun(X7,X6),X10)))) => ! [X11] : s('type.list.list'(X7),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X7)),X11))) = s('type.list.list'(X7),happ(s(fun('type.list.list'(X6),'type.list.list'(X7)),'const.list.MAP_1'(s(fun(X6,X7),X9))),s('type.list.list'(X6),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X6)),happ(s(fun('type.list.list'('type.list.list'(X7)),'type.list.list'('type.list.list'(X6))),'const.list.MAP_1'(s(fun('type.list.list'(X7),'type.list.list'(X6)),'const.list.MAP_1'(s(fun(X7,X6),X10))))),s('type.list.list'('type.list.list'(X7)),X11))))))))),
  file('thm.quotient_list.FLAT_PRS','thm.quotient_list.FLAT_PRS')).
fof(f1029,plain,(
  s('type.list.list'(sK14),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK14)),sK18))) != s('type.list.list'(sK14),happ(s(fun('type.list.list'(sK13),'type.list.list'(sK14)),'const.list.MAP_1'(s(fun(sK13,sK14),sK16))),s('type.list.list'(sK13),'const.list.MAP_2'(s(fun(sK14,sK13),sK17),s('type.list.list'(sK14),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK14)),sK18)))))))),
  inference(forward_demodulation,[],[f1028,f780])).
fof(f1028,plain,(
  s('type.list.list'(sK14),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK14)),sK18))) != s('type.list.list'(sK14),happ(s(fun('type.list.list'(sK13),'type.list.list'(sK14)),'const.list.MAP_1'(s(fun(sK13,sK14),sK16))),s('type.list.list'(sK13),happ(s(fun('type.list.list'(sK14),'type.list.list'(sK13)),'const.list.MAP_1'(s(fun(sK14,sK13),sK17))),s('type.list.list'(sK14),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK14)),sK18)))))))),
  inference(forward_demodulation,[],[f676,f778])).
fof(f778,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X3))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X2))))) = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),happ(s(fun('type.list.list'('type.list.list'(X1)),'type.list.list'('type.list.list'(X0))),'const.list.MAP_1'(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X3))))),s('type.list.list'('type.list.list'(X1)),X2)))))) )),
  inference(cnf_transformation,[],[f317])).
fof(f317,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X3))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X2))))) = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),happ(s(fun('type.list.list'('type.list.list'(X1)),'type.list.list'('type.list.list'(X0))),'const.list.MAP_1'(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X3))))),s('type.list.list'('type.list.list'(X1)),X2)))))),
  inference(flattening,[],[f316])).
fof(f316,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X3))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X2))))) = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),happ(s(fun('type.list.list'('type.list.list'(X1)),'type.list.list'('type.list.list'(X0))),'const.list.MAP_1'(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X3))))),s('type.list.list'('type.list.list'(X1)),X2)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : ! [X11,X12] : s('type.list.list'(X6),happ(s(fun('type.list.list'(X7),'type.list.list'(X6)),'const.list.MAP_1'(s(fun(X7,X6),X12))),s('type.list.list'(X7),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X7)),X11))))) = s('type.list.list'(X6),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X6)),happ(s(fun('type.list.list'('type.list.list'(X7)),'type.list.list'('type.list.list'(X6))),'const.list.MAP_1'(s(fun('type.list.list'(X7),'type.list.list'(X6)),'const.list.MAP_1'(s(fun(X7,X6),X12))))),s('type.list.list'('type.list.list'(X7)),X11)))))),
  file('thm.quotient_list.FLAT_PRS','thm.list.MAP_FLAT')).
fof(f676,plain,(
  s('type.list.list'(sK14),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK14)),sK18))) != s('type.list.list'(sK14),happ(s(fun('type.list.list'(sK13),'type.list.list'(sK14)),'const.list.MAP_1'(s(fun(sK13,sK14),sK16))),s('type.list.list'(sK13),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK13)),happ(s(fun('type.list.list'('type.list.list'(sK14)),'type.list.list'('type.list.list'(sK13))),'const.list.MAP_1'(s(fun('type.list.list'(sK14),'type.list.list'(sK13)),'const.list.MAP_1'(s(fun(sK14,sK13),sK17))))),s('type.list.list'('type.list.list'(sK14)),sK18)))))))),
  inference(cnf_transformation,[],[f500])).
% SZS output end Proof for thm.quotient_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1110
% Passive clauses: 17136
% Generated clauses: 58586
% Final active clauses: 1071
% Final passive clauses: 14609
% Input formulas: 261
% Initial clauses: 345
% 
% Selected by SInE selection: 100
% SInE iterations: 1
% 
% Duplicate literals: 1910
% Trivial inequalities: 1646
% Fw subsumption resolutions: 5790
% Fw demodulations: 2552
% Bw demodulations: 3
% 
% Simple tautologies: 2738
% Equational tautologies: 173
% Forward subsumptions: 24758
% 
% Binary resolution: 33080
% Factoring: 109
% Forward superposition: 9759
% Backward superposition: 2650
% Self superposition: 2
% Equality resolution: 55
% 
% Split clauses: 2322
% Split components: 5218
% SAT solver clauses: 2419
% SAT solver unit clauses: 28
% SAT solver binary clauses: 238
% 
% Sat splits: 2322
% Sat splitting refutations: 30
% 
% Memory used [KB]: 25841
% Time elapsed: 1.439 s
% ------------------------------
% ------------------------------
% Success in time 13.631 s
