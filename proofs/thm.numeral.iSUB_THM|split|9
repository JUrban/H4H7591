Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numeral
% (102959)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 112
% Passive clauses: 2766
% Generated clauses: 20481
% Final active clauses: 108
% Final passive clauses: 2524
% Input formulas: 27
% Initial clauses: 39
% 
% Duplicate literals: 1400
% Trivial inequalities: 182
% Fw subsumption resolutions: 1606
% Fw demodulations: 1882
% Bw demodulations: 2
% 
% Simple tautologies: 306
% Equational tautologies: 29
% Forward subsumptions: 10948
% 
% Binary resolution: 45
% Forward superposition: 8891
% Backward superposition: 5818
% Self superposition: 264
% Equality factoring: 88
% Equality resolution: 7
% 
% Split clauses: 954
% Split components: 1925
% SAT solver clauses: 1489
% SAT solver unit clauses: 62
% SAT solver binary clauses: 441
% 
% Sat splits: 954
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1489
% TWLsolver calls for satisfiability: 152
% 
% Memory used [KB]: 14583
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.numeral
% (102977)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 98
% Passive clauses: 792
% Generated clauses: 16118
% Final active clauses: 87
% Final passive clauses: 679
% Input formulas: 27
% Initial clauses: 39
% 
% Duplicate literals: 920
% Trivial inequalities: 184
% Fw subsumption resolutions: 590
% Fw demodulations: 1140
% Bw demodulations: 19
% Condensations: 1932
% Global subsumptions: 4
% 
% Simple tautologies: 184
% Equational tautologies: 19
% Forward subsumptions: 9017
% 
% Binary resolution: 10
% Forward superposition: 6443
% Backward superposition: 3887
% Self superposition: 210
% Equality factoring: 36
% Equality resolution: 9
% 
% Split clauses: 51
% Split components: 104
% SAT solver clauses: 1415
% SAT solver unit clauses: 56
% SAT solver binary clauses: 43
% SAT solver learnt clauses: 8
% 
% Sat splits: 51
% Sat splitting refutations: 10
% 
% TWLsolver clauses: 1399
% TWLsolver calls for satisfiability: 145
% 
% Memory used [KB]: 16119
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f40897,plain,(
  $false),
  inference(subsumption_resolution,[],[f40363,f79])).
fof(f79,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.numeral.iSUB_THM|split|9',aHL_TRUTH)).
fof(f40363,plain,(
  ~p(s(bool,'T_0'))),
  inference(backward_demodulation,[],[f40362,f81])).
fof(f81,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.numeral.iSUB_THM|split|9',aHL_FALSITY)).
fof(f40362,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f188,f7698])).
fof(f7698,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X11),s('type.num.num',X12))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X10),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X12))))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f2087,f156])).
fof(f156,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.bool.COND_3'(s(bool,X0),s(X1,X3),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f106,f85])).
fof(f85,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.numeral.iSUB_THM|split|9',aHL_BOOL_CASES)).
fof(f106,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X8] : ! [X11,X12] : s(X8,X12) = s(X8,'const.bool.COND_3'(s(bool,'F_0'),s(X8,X11),s(X8,X12)))),
  file('thm.numeral.iSUB_THM|split|9','thm.bool.COND_CLAUSES|split|1')).
fof(f2087,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X3),s('type.num.num',X2))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X3),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f2086,f113])).
fof(f113,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X17,X18,X19] : s('type.num.num','const.numeral.iSUB_3'(s(bool,X17),s('type.num.num',X18),s('type.num.num',X19))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X17),s('type.num.num',X18))),s('type.num.num',X19)))),
  file('thm.numeral.iSUB_THM|split|9','ARITY_2_3_const.numeral.iSUB')).
fof(f2086,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))),s('type.num.num',X2))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X3),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f2085,f84])).
fof(f84,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X17] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X17))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X17)))),
  file('thm.numeral.iSUB_THM|split|9','ARITY_0_1_const.arithmetic.BIT|49|')).
fof(f2085,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))),s('type.num.num',X2))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X3),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f2084,f116])).
fof(f116,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X20,X21,X22] : ! [X23,X24,X25] : s(X20,happ(s(fun(X21,X20),X23),s(X21,happ(s(fun(X22,X21),X24),s(X22,X25))))) = s(X20,happ(s(fun(X22,X20),'_dst_x0x1_2'(s(fun(X21,X20),X23),s(fun(X22,X21),X24))),s(X22,X25)))),
  file('thm.numeral.iSUB_THM|split|9','_dst_x0x1_ax')).
fof(f2084,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))))),s('type.num.num',X2))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X3),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f2083,f113])).
fof(f2083,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))))),s('type.num.num',X2))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f2082,f83])).
fof(f83,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X17] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X17))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X17)))),
  file('thm.numeral.iSUB_THM|split|9','ARITY_0_1_const.numeral.iDUB')).
fof(f2082,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))))),s('type.num.num',X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f2081,f116])).
fof(f2081,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))))),s('type.num.num',X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))))),s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f1996,f108])).
fof(f108,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2,X3,X4] : s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X8] : ! [X6,X13,X14,X15] : s(X8,happ(s(fun('type.num.num',X8),X14),s('type.num.num',X6))) = s(X8,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s(X8,X13),s(fun('type.num.num',X8),X14),s(fun('type.num.num',X8),X15)))),
  file('thm.numeral.iSUB_THM|split|9','thm.numeral.iBIT_cases|split|1')).
fof(f1996,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))))),s('type.num.num',X2))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X3)))))))))) )),
  inference(superposition,[],[f120,f108])).
fof(f120,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f119,f113])).
fof(f119,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f114,f84])).
fof(f114,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X16,X6,X10] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X16),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))))),s('type.num.num',X10))) = s('type.num.num','const.bool.COND_3'(s(bool,X16),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X10),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X10),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6)))))))))),
  file('thm.numeral.iSUB_THM|split|9','thm.numeral.iSUB_DEF|split|2')).
fof(f188,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',sK0),s('type.num.num',sK1))))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f78,f85])).
fof(f78,plain,(
  s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',sK0),s('type.num.num',sK1))))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',sK0),s('type.num.num',sK1))))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f61])).
fof(f61,plain,(
  ? [X0,X1] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0,X1] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X6),s('type.num.num',X7))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X6),s('type.num.num',X7))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))),
  file('thm.numeral.iSUB_THM|split|9','thm.numeral.iSUB_THM|split|9')).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 252
% Passive clauses: 6186
% Generated clauses: 49768
% Final active clauses: 40
% Final passive clauses: 258
% Input formulas: 27
% Initial clauses: 39
% 
% Duplicate literals: 1570
% Trivial inequalities: 231
% Fw subsumption resolutions: 989
% Fw demodulations: 4102
% Bw demodulations: 4399
% Condensations: 2570
% Global subsumptions: 1130
% 
% Simple tautologies: 236
% Equational tautologies: 158
% Forward subsumptions: 30603
% Fw demodulations to eq. taut.: 74
% Bw demodulations to eq. taut.: 234
% 
% Unit resulting resolution: 523
% Forward superposition: 12727
% Backward superposition: 11125
% Self superposition: 477
% Equality factoring: 116
% Equality resolution: 9
% 
% Split clauses: 288
% Split components: 585
% SAT solver clauses: 9025
% SAT solver unit clauses: 656
% SAT solver binary clauses: 2322
% 
% Sat splits: 288
% Sat splitting refutations: 1131
% 
% Memory used [KB]: 59359
% Time elapsed: 4.215 s
% ------------------------------
% ------------------------------
% Success in time 5.558 s
