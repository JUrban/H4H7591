Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.divides
% (93504)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 750
% Passive clauses: 9783
% Generated clauses: 21064
% Final active clauses: 602
% Final passive clauses: 8423
% Input formulas: 42
% Initial clauses: 168
% 
% Duplicate literals: 450
% Trivial inequalities: 29
% Fw subsumption resolutions: 2139
% Fw demodulations: 368
% Bw demodulations: 145
% 
% Simple tautologies: 232
% Equational tautologies: 62
% Forward subsumptions: 7312
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 10753
% Factoring: 1228
% Forward superposition: 2776
% Backward superposition: 2632
% Self superposition: 41
% Equality factoring: 34
% Equality resolution: 8
% 
% Split clauses: 610
% Split components: 1227
% SAT solver clauses: 989
% SAT solver unit clauses: 22
% SAT solver binary clauses: 177
% 
% Sat splits: 610
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 986
% TWLsolver calls for satisfiability: 445
% 
% Memory used [KB]: 9594
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.divides
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.divides
% SZS output start Proof for thm.divides
fof(f6674,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f6673,f1980,f1982,f235,f415,f297,f440,f535,f539,f233,f411,f250,f423,f6649,f6656,f1983,f1985,f536,f541,f232,f413,f6632,f6633,f416,f418,f555,f561,f234,f409,f254,f425,f2257,f2271,f298,f439,f325,f454])).
fof(f454,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) ) | $spl56),
  inference(cnf_transformation,[],[f454_D])).
fof(f454_D,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f325,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X9,X10,X11] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.num.num',X11)))),
  file('thm.divides.DIVIDES_TRANS','thm.arithmetic.MULT_ASSOC')).
fof(f439,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) | $spl36),
  inference(cnf_transformation,[],[f439_D])).
fof(f439_D,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f298,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK19(X1,X0)),s('type.num.num',X0)))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19])],[f184])).
fof(f184,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ? [X3] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X0)))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(rectify,[],[f183])).
fof(f183,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ? [X2] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> ? [X2] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6,X7] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num',X7)))) <=> ? [X20] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X6))))),
  file('thm.divides.DIVIDES_TRANS','thm.divides.divides_def')).
fof(f2271,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X3)))) | s('type.num.num',X3) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | $spl898),
  inference(cnf_transformation,[],[f2271_D])).
fof(f2271_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X3)))) | s('type.num.num',X3) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) <=> ~$spl898),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl898])])).
fof(f2257,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X3) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X3))))) ) | ($spl36 | $spl56)),
  inference(superposition,[],[f439,f454])).
fof(f425,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f425_D])).
fof(f425_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f254,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X17] : (s(bool,'F_0') = s(bool,X17) <=> ~p(s(bool,X17)))),
  file('thm.divides.DIVIDES_TRANS','thm.bool.EQ_CLAUSES|split|3')).
fof(f409,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK14)))) | $spl1),
  inference(cnf_transformation,[],[f409_D])).
fof(f409_D,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK14)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f234,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK14))))),
  inference(cnf_transformation,[],[f155])).
fof(f155,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',sK13),s('type.num.num',sK14)))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK14))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f109])).
fof(f109,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X2)))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(flattening,[],[f108])).
fof(f108,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X2))))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(ennf_transformation,[],[f44])).
fof(f44,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X2))))) => p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num',X7)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X7),s('type.num.num',X8))))) => p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num',X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num',X7)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X7),s('type.num.num',X8))))) => p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num',X8)))))),
  file('thm.divides.DIVIDES_TRANS','thm.divides.DIVIDES_TRANS')).
fof(f561,plain,(
  s(bool,'F_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK14))) | $spl210),
  inference(cnf_transformation,[],[f561_D])).
fof(f561_D,plain,(
  s(bool,'F_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK14))) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f555,plain,(
  s(bool,'F_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK14))) | ($spl1 | $spl16)),
  inference(resolution,[],[f425,f409])).
fof(f418,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f418_D])).
fof(f418_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f416,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f238,f235])).
fof(f238,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f156])).
fof(f156,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f45])).
fof(f45,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f19])).
fof(f19,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.divides.DIVIDES_TRANS','thm.bool.NOT_CLAUSES|split|2')).
fof(f6633,plain,(
  ( ! [X4,X5] : (s('type.num.num',sK14) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',sK12)))))) ) | $spl2586),
  inference(cnf_transformation,[],[f6633_D])).
fof(f6633_D,plain,(
  ( ! [X4,X5] : (s('type.num.num',sK14) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',sK12)))))) ) <=> ~$spl2586),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2586])])).
fof(f6632,plain,(
  ( ! [X4,X5] : (s('type.num.num',sK14) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',sK12)))))) ) | ($spl9 | $spl210 | $spl898)),
  inference(subsumption_resolution,[],[f6594,f418])).
fof(f6594,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | s('type.num.num',sK14) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',sK12)))))) ) | ($spl210 | $spl898)),
  inference(superposition,[],[f2271,f561])).
fof(f413,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13)))) | $spl4),
  inference(cnf_transformation,[],[f413_D])).
fof(f413_D,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f232,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13))))),
  inference(cnf_transformation,[],[f155])).
fof(f541,plain,(
  s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13))) | $spl204),
  inference(cnf_transformation,[],[f541_D])).
fof(f541_D,plain,(
  s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13))) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f536,plain,(
  s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13))) | ($spl4 | $spl12)),
  inference(resolution,[],[f423,f413])).
fof(f1985,plain,(
  s('type.num.num',sK13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK19(sK13,sK12)),s('type.num.num',sK12))) | $spl740),
  inference(cnf_transformation,[],[f1985_D])).
fof(f1985_D,plain,(
  s('type.num.num',sK13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK19(sK13,sK12)),s('type.num.num',sK12))) <=> ~$spl740),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl740])])).
fof(f1983,plain,(
  s('type.num.num',sK13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK19(sK13,sK12)),s('type.num.num',sK12))) | ($spl6 | $spl38 | $spl204)),
  inference(subsumption_resolution,[],[f1961,f415])).
fof(f1961,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK19(sK13,sK12)),s('type.num.num',sK12))) | ($spl38 | $spl204)),
  inference(superposition,[],[f440,f541])).
fof(f6656,plain,(
  ( ! [X0] : (s('type.num.num',sK14) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK13)))) ) | $spl2588),
  inference(cnf_transformation,[],[f6656_D])).
fof(f6656_D,plain,(
  ( ! [X0] : (s('type.num.num',sK14) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK13)))) ) <=> ~$spl2588),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2588])])).
fof(f6649,plain,(
  ( ! [X0] : (s('type.num.num',sK14) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK13)))) ) | ($spl740 | $spl2586)),
  inference(superposition,[],[f6633,f1985])).
fof(f423,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f423_D])).
fof(f423_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f250,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f158])).
fof(f158,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X17] : (s(bool,'T_0') = s(bool,X17) <=> p(s(bool,X17)))),
  file('thm.divides.DIVIDES_TRANS','thm.bool.EQ_CLAUSES|split|1')).
fof(f411,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK13),s('type.num.num',sK14)))) | $spl2),
  inference(cnf_transformation,[],[f411_D])).
fof(f411_D,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK13),s('type.num.num',sK14)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f233,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK13),s('type.num.num',sK14))))),
  inference(cnf_transformation,[],[f155])).
fof(f539,plain,(
  s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK13),s('type.num.num',sK14))) | $spl202),
  inference(cnf_transformation,[],[f539_D])).
fof(f539_D,plain,(
  s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK13),s('type.num.num',sK14))) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f535,plain,(
  s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK13),s('type.num.num',sK14))) | ($spl2 | $spl12)),
  inference(resolution,[],[f423,f411])).
fof(f440,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK19(X1,X0)),s('type.num.num',X0)))) ) | $spl38),
  inference(cnf_transformation,[],[f440_D])).
fof(f440_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK19(X1,X0)),s('type.num.num',X0)))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f297,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK19(X1,X0)),s('type.num.num',X0))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f185])).
fof(f415,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f415_D])).
fof(f415_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f235,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.divides.DIVIDES_TRANS',aHL_TRUTH)).
fof(f1982,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK19(sK14,sK13)),s('type.num.num',sK13))) | $spl738),
  inference(cnf_transformation,[],[f1982_D])).
fof(f1982_D,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK19(sK14,sK13)),s('type.num.num',sK13))) <=> ~$spl738),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl738])])).
fof(f1980,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK19(sK14,sK13)),s('type.num.num',sK13))) | ($spl6 | $spl38 | $spl202)),
  inference(subsumption_resolution,[],[f1960,f415])).
fof(f1960,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK14) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK19(sK14,sK13)),s('type.num.num',sK13))) | ($spl38 | $spl202)),
  inference(superposition,[],[f440,f539])).
fof(f6673,plain,(
  $false | ($spl738 | $spl2588)),
  inference(trivial_inequality_removal,[],[f6670])).
fof(f6670,plain,(
  s('type.num.num',sK14) != s('type.num.num',sK14) | ($spl738 | $spl2588)),
  inference(superposition,[],[f6656,f1982])).
% SZS output end Proof for thm.divides
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 340
% Passive clauses: 1288
% Generated clauses: 6390
% Final active clauses: 335
% Final passive clauses: 945
% Input formulas: 42
% Initial clauses: 168
% 
% Duplicate literals: 175
% Trivial inequalities: 52
% Fw subsumption resolutions: 523
% Fw demodulations: 243
% Bw demodulations: 8
% Condensations: 193
% Global subsumptions: 13
% 
% Simple tautologies: 230
% Equational tautologies: 17
% Forward subsumptions: 2197
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 2027
% Factoring: 178
% Forward superposition: 809
% Backward superposition: 644
% Self superposition: 29
% Equality factoring: 26
% Equality resolution: 11
% 
% Split clauses: 17
% Split components: 34
% SAT solver clauses: 1657
% SAT solver unit clauses: 179
% SAT solver binary clauses: 69
% SAT solver learnt clauses: 27
% SAT solver learnt literals: 10
% 
% Sat splits: 17
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1604
% TWLsolver calls for satisfiability: 1650
% 
% Memory used [KB]: 6652
% Time elapsed: 0.252 s
% ------------------------------
% ------------------------------
% Success in time 0.868 s
