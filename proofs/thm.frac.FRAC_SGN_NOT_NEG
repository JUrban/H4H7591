Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.frac
% (123239)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1031
% Passive clauses: 8060
% Generated clauses: 27021
% Final active clauses: 486
% Final passive clauses: 4228
% Input formulas: 133
% Initial clauses: 319
% 
% Duplicate literals: 259
% Trivial inequalities: 120
% Fw subsumption resolutions: 1858
% Fw demodulations: 2324
% Bw demodulations: 236
% 
% Simple tautologies: 242
% Equational tautologies: 44
% Forward subsumptions: 14062
% Fw demodulations to eq. taut.: 10
% 
% Binary resolution: 7362
% Factoring: 1283
% Forward superposition: 5853
% Backward superposition: 6466
% Self superposition: 57
% Equality factoring: 4
% Equality resolution: 32
% 
% Split clauses: 481
% Split components: 976
% SAT solver clauses: 844
% SAT solver unit clauses: 11
% SAT solver binary clauses: 84
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 3
% 
% Sat splits: 481
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 811
% TWLsolver calls for satisfiability: 484
% 
% Memory used [KB]: 16502
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.frac
% (123266)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 755
% Passive clauses: 3557
% Generated clauses: 23899
% Final active clauses: 437
% Final passive clauses: 1764
% Input formulas: 133
% Initial clauses: 319
% 
% Duplicate literals: 118
% Trivial inequalities: 72
% Fw subsumption resolutions: 1242
% Fw demodulations: 2569
% Bw demodulations: 1142
% Condensations: 141
% Global subsumptions: 34
% 
% Simple tautologies: 297
% Equational tautologies: 21
% Forward subsumptions: 11701
% Fw demodulations to eq. taut.: 12
% Bw demodulations to eq. taut.: 18
% 
% Binary resolution: 3176
% Factoring: 149
% Forward superposition: 4683
% Backward superposition: 5392
% Self superposition: 86
% Equality factoring: 6
% Equality resolution: 30
% 
% Split clauses: 203
% Split components: 409
% SAT solver clauses: 4147
% SAT solver unit clauses: 414
% SAT solver binary clauses: 152
% SAT solver learnt clauses: 75
% SAT solver learnt literals: 32
% 
% Sat splits: 203
% Sat splitting refutations: 69
% 
% TWLsolver clauses: 4004
% TWLsolver calls for satisfiability: 2342
% 
% Memory used [KB]: 20212
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.frac
% (123292)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 2486
% Passive clauses: 19431
% Generated clauses: 91266
% Final active clauses: 1403
% Final passive clauses: 4785
% Input formulas: 133
% Initial clauses: 319
% 
% Duplicate literals: 152
% Trivial inequalities: 184
% Fw subsumption resolutions: 1688
% Fw demodulations: 21138
% Bw demodulations: 7341
% Condensations: 383
% Global subsumptions: 11
% 
% Simple tautologies: 177
% Equational tautologies: 146
% Forward subsumptions: 46574
% Fw demodulations to eq. taut.: 609
% Bw demodulations to eq. taut.: 24
% 
% Unit resulting resolution: 23079
% Factoring: 3
% Forward superposition: 20049
% Backward superposition: 10220
% Self superposition: 94
% Equality factoring: 38
% Equality resolution: 49
% 
% Split clauses: 169
% Split components: 339
% SAT solver clauses: 20383
% SAT solver unit clauses: 1279
% SAT solver binary clauses: 4472
% 
% Sat splits: 169
% Sat splitting refutations: 601
% 
% Memory used [KB]: 44903
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.frac
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.frac
% SZS output start Proof for thm.frac
fof(f8397,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f414,f692,f413,f694,f690,f412,f691,f689,f807,f808,f860,f858,f1028,f1029,f1030,f1031,f1032,f1033,f1084,f1034,f1035,f1091,f1044,f1045,f1046,f1096,f1047,f1048,f1049,f1050,f1051,f1098,f1052,f1053,f1103,f1064,f1065,f1104,f1068,f1095,f1073,f1074,f1079,f1185,f1186,f1204,f2518,f2364,f2529,f2270,f2530,f2174,f2531,f2097,f2532,f1985,f2533,f1940,f2534,f1880,f2535,f1799,f2536,f1389,f2537,f707,f706,f2539,f693,f2777,f2940,f2941,f2942,f2943,f2944,f2945,f1083,f3041,f2959,f3043,f2961,f2962,f3045,f2964,f2965,f1102,f2980,f2990,f3031,f1110,f3032,f1108,f3124,f3161,f3164,f3167,f3165,f3168,f3169,f3163,f3170,f3173,f3131,f3172,f3174,f3188,f3192,f3190,f3194,f3197,f3195,f3198,f3201,f3200,f3199,f3158,f1111,f3209,f3266,f3267,f3501,f3196,f3502,f3506,f3507,f3426,f3508,f3162,f3509,f3510,f3428,f3511,f3171,f3431,f3432,f3515,f3514,f3517,f3166,f3518,f3703,f3704,f3705,f3706,f3707,f3708,f3816,f3817,f3722,f3819,f3724,f3725,f3820,f3727,f3728,f3821,f3743,f3982,f3983,f3740,f3739,f3990,f3720,f3719,f3818,f3710,f3709,f3991,f3008,f3007,f3005,f3003,f2998,f1088,f2997,f3993,f2985,f2984,f3992,f2977,f2976,f3994,f2957,f2956,f1094,f2947,f2946,f1090,f4489,f4490,f3189,f4836,f4837,f4954,f4955,f4956,f4957,f4958,f4959,f5009,f5010,f4973,f4975,f4976,f4978,f4979,f5016,f1101,f5075,f5076,f5077,f5078,f5079,f5080,f1202,f5427,f5428,f5429,f5430,f5431,f5432,f5460,f5461,f5446,f5448,f5449,f5484,f5485,f5486,f5487,f5488,f5489,f5516,f5517,f5503,f5505,f5506,f5540,f5541,f5542,f5543,f5544,f5545,f5574,f5575,f5559,f5561,f5562,f5637,f5638,f5639,f5640,f5641,f5642,f5670,f5671,f5656,f5658,f5659,f5694,f5695,f5696,f5697,f5698,f5699,f5727,f5728,f5713,f5715,f5716,f5750,f5751,f5752,f5753,f5754,f5755,f5784,f5785,f5769,f5771,f5772,f5807,f5808,f5809,f5810,f5811,f5812,f5842,f5843,f5826,f5828,f5829,f5865,f5866,f5867,f5868,f5869,f5870,f5900,f5901,f5884,f5886,f5887,f5962,f1082,f5963,f1085,f5964,f5965,f5966,f1087,f5967,f5997,f1086,f5998,f3042,f5981,f1097,f5983,f5984,f1099,f6092,f6093,f3989,f6120,f6095,f6121,f1109,f6920,f6980,f6984,f6991,f7093,f7092,f7091,f7188,f7189,f7190,f7191,f7192,f7193,f7319,f7317,f7302,f7381,f7382,f7383,f7384,f7385,f7386,f7387,f6987,f6988,f7388,f7395,f7396,f7394,f2528,f7704,f5979,f5978,f5969,f5968,f7711,f5882,f5881,f5872,f5871,f7712,f5824,f5823,f5814,f5813,f7713,f5767,f5766,f5757,f5756,f7714,f5711,f5710,f5701,f5700,f7715,f5654,f5653,f5644,f5643,f7716,f5557,f5556,f5547,f5546,f7717,f5501,f5500,f5491,f5490,f7718,f5444,f5443,f5434,f5433,f7719,f5340,f5339,f7721,f5082,f5081,f7723,f4971,f4970,f1093,f4961,f4960,f7725,f1089,f6097,f6096,f1107,f7726,f6085,f7729,f7727,f6001,f6000,f5999,f5904,f5903,f5902,f5846,f5845,f5844,f5788,f5787,f5786,f5731,f5730,f5729,f5674,f5673,f5672,f5578,f5577,f5576,f5520,f5519,f5518,f5464,f5463,f5462,f5014,f5013,f3044,f5012,f6089,f7730,f1106,f7971,f7972,f8351,f8352])).
fof(f8352,plain,(
  $false | $spl24),
  inference(subsumption_resolution,[],[f8329,f612])).
fof(f612,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f202])).
fof(f202,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.frac.FRAC_SGN_NOT_NEG',aHL_FALSITY)).
fof(f8329,plain,(
  p(s(bool,'F_0')) | $spl24),
  inference(trivial_inequality_removal,[],[f8233])).
fof(f8233,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | p(s(bool,'F_0')) | $spl24),
  inference(superposition,[],[f592,f1092])).
fof(f1092,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl24),
  inference(cnf_transformation,[],[f1092_D])).
fof(f1092_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f592,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f382])).
fof(f382,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f184])).
fof(f184,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f99])).
fof(f99,axiom,(
  ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25))) <=> p(s(bool,'F_0')))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.numeral.numeral_eq|split|0')).
fof(f8351,plain,(
  $false | $spl24),
  inference(subsumption_resolution,[],[f8330,f612])).
fof(f8330,plain,(
  p(s(bool,'F_0')) | $spl24),
  inference(trivial_inequality_removal,[],[f8232])).
fof(f8232,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | p(s(bool,'F_0')) | $spl24),
  inference(superposition,[],[f590,f1092])).
fof(f590,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f381])).
fof(f381,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f183])).
fof(f183,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f103])).
fof(f103,axiom,(
  ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25))) <=> p(s(bool,'F_0')))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.numeral.numeral_eq|split|1')).
fof(f7972,plain,(
  $false | ($spl20 | $spl25)),
  inference(subsumption_resolution,[],[f7947,f1093])).
fof(f7947,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl20),
  inference(trivial_inequality_removal,[],[f7839])).
fof(f7839,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl20),
  inference(superposition,[],[f651,f1088])).
fof(f651,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f402])).
fof(f402,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f225])).
fof(f225,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f108])).
fof(f108,axiom,(
  ! [X25] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X25))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.numeral.numeral_distrib|split|17')).
fof(f7971,plain,(
  $false | ($spl20 | $spl25)),
  inference(subsumption_resolution,[],[f7948,f1093])).
fof(f7948,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl20),
  inference(trivial_inequality_removal,[],[f7838])).
fof(f7838,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl20),
  inference(superposition,[],[f649,f1088])).
fof(f649,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f401])).
fof(f401,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f224])).
fof(f224,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f95])).
fof(f95,axiom,(
  ! [X25] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X25))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.numeral.numeral_distrib|split|18')).
fof(f1106,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl43),
  inference(cnf_transformation,[],[f1106_D])).
fof(f1106_D,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f7730,plain,(
  ( ! [X18] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X18))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X18))))))) ) | $spl228),
  inference(cnf_transformation,[],[f7730_D])).
fof(f7730_D,plain,(
  ( ! [X18] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X18))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X18))))))) ) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f6089,plain,(
  ( ! [X18] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X18))) | ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X18))))))) ) | $spl49),
  inference(superposition,[],[f3908,f631])).
fof(f631,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))))) )),
  inference(cnf_transformation,[],[f393])).
fof(f393,plain,(
  ! [X0] : ((s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(nnf_transformation,[],[f213])).
fof(f213,plain,(
  ! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6)))))))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.frac.FRAC_SGN_POS')).
fof(f3908,plain,(
  ( ! [X1] : (s('type.integer.int',X1) != s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) | ~p(s(bool,sK13(X1)))) ) | $spl49),
  inference(superposition,[],[f1111,f625])).
fof(f625,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,sK13(X0)))) )),
  inference(cnf_transformation,[],[f391])).
fof(f391,plain,(
  ! [X0] : ((~p(s(bool,sK13(X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,sK13(X0)))) & s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13])],[f390])).
fof(f390,plain,(
  ! [X0] : ? [X1] : ((~p(s(bool,X1)) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,X1))) & s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.bool.COND_3'(s(bool,X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(flattening,[],[f389])).
fof(f389,plain,(
  ! [X0] : ? [X1] : (((~p(s(bool,X1)) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,X1)))) & s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.bool.COND_3'(s(bool,X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(nnf_transformation,[],[f211])).
fof(f211,plain,(
  ! [X0] : ? [X1] : ((p(s(bool,X1)) <=> s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.bool.COND_3'(s(bool,X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X8] : ? [X20] : ((p(s(bool,X20)) <=> s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X8))) = s('type.integer.int','const.bool.COND_3'(s(bool,X20),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.intExtension.SGN_def')).
fof(f5012,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl147),
  inference(cnf_transformation,[],[f5012_D])).
fof(f5012_D,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl147),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl147])])).
fof(f3044,plain,(
  ( ! [X4] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4)))) ) | $spl78),
  inference(cnf_transformation,[],[f3044_D])).
fof(f3044_D,plain,(
  ( ! [X4] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4)))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f5013,plain,(
  ( ! [X4] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))) | ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f4974,f690])).
fof(f4974,plain,(
  ( ! [X4] : (~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f1106,f642])).
fof(f642,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f398])).
fof(f398,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0)))))))),
  inference(flattening,[],[f397])).
fof(f397,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0)))))))),
  inference(nnf_transformation,[],[f220])).
fof(f220,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)))),
  inference(rectify,[],[f86])).
fof(f86,axiom,(
  ! [X25,X24] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X25))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X25) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X24)))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.integer.integer_244_prove_ltb|split|1')).
fof(f5014,plain,(
  ( ! [X7] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))) | ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f4977,f690])).
fof(f4977,plain,(
  ( ! [X7] : (~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f1106,f646])).
fof(f646,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f400])).
fof(f400,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))))),
  inference(flattening,[],[f399])).
fof(f399,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))))),
  inference(nnf_transformation,[],[f221])).
fof(f221,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)))),
  inference(rectify,[],[f76])).
fof(f76,axiom,(
  ! [X25,X24] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X25))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X25) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X24)))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.integer.integer_244_prove_ltb|split|0')).
fof(f5462,plain,(
  ( ! [X10,X11] : (sP0(X10,X11,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) ) | $spl152),
  inference(cnf_transformation,[],[f5462_D])).
fof(f5462_D,plain,(
  ( ! [X10,X11] : (sP0(X10,X11,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f5463,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) | sP0(X16,X17,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5447,f690])).
fof(f5447,plain,(
  ( ! [X17,X18,X16] : (sP0(X16,X17,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4859,f642])).
fof(f4859,plain,(
  ( ! [X12,X13] : (sP0(X12,X13,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl43),
  inference(resolution,[],[f1106,f423])).
fof(f423,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f299])).
fof(f299,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP0(X0,X1,X2)))),
  inference(rectify,[],[f298])).
fof(f298,plain,(
  ! [X2,X0,X1] : ((~sP0(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP0(X2,X0,X1)))),
  inference(flattening,[],[f297])).
fof(f297,plain,(
  ! [X2,X0,X1] : ((~sP0(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP0(X2,X0,X1)))),
  inference(nnf_transformation,[],[f273])).
fof(f273,plain,(
  ! [X2,X0,X1] : (sP0(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f5464,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) | sP0(X25,X26,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5450,f690])).
fof(f5450,plain,(
  ( ! [X26,X27,X25] : (sP0(X25,X26,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4859,f646])).
fof(f5518,plain,(
  ( ! [X10,X11] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) | $spl156),
  inference(cnf_transformation,[],[f5518_D])).
fof(f5518_D,plain,(
  ( ! [X10,X11] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f5519,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) | sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X16,X17)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5504,f690])).
fof(f5504,plain,(
  ( ! [X17,X18,X16] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X16,X17) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4860,f642])).
fof(f4860,plain,(
  ( ! [X14,X15] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),X14,X15)) ) | $spl43),
  inference(resolution,[],[f1106,f425])).
fof(f425,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f299])).
fof(f5520,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) | sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X25,X26)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5507,f690])).
fof(f5507,plain,(
  ( ! [X26,X27,X25] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X25,X26) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4860,f646])).
fof(f5576,plain,(
  ( ! [X10,X11] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) | $spl160),
  inference(cnf_transformation,[],[f5576_D])).
fof(f5576_D,plain,(
  ( ! [X10,X11] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f5577,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) | sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X16,X17)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5560,f690])).
fof(f5560,plain,(
  ( ! [X17,X18,X16] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X16,X17) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4876,f642])).
fof(f4876,plain,(
  ( ! [X47,X46] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),X46,X47)) ) | $spl43),
  inference(resolution,[],[f1106,f442])).
fof(f442,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f307])).
fof(f307,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(rectify,[],[f306])).
fof(f306,plain,(
  ! [X2,X0,X1] : ((~sP2(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP2(X2,X0,X1)))),
  inference(flattening,[],[f305])).
fof(f305,plain,(
  ! [X2,X0,X1] : ((~sP2(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP2(X2,X0,X1)))),
  inference(nnf_transformation,[],[f276])).
fof(f276,plain,(
  ! [X2,X0,X1] : (sP2(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f5578,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) | sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X25,X26)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5563,f690])).
fof(f5563,plain,(
  ( ! [X26,X27,X25] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X25,X26) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4876,f646])).
fof(f5672,plain,(
  ( ! [X10,X11] : (sP4(X10,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X11)) ) | $spl164),
  inference(cnf_transformation,[],[f5672_D])).
fof(f5672_D,plain,(
  ( ! [X10,X11] : (sP4(X10,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X11)) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f5673,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) | sP4(X16,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X17)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5657,f690])).
fof(f5657,plain,(
  ( ! [X17,X18,X16] : (sP4(X16,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X17) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4889,f642])).
fof(f4889,plain,(
  ( ! [X72,X73] : (sP4(X72,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),X73)) ) | $spl43),
  inference(resolution,[],[f1106,f458])).
fof(f458,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f314])).
fof(f314,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(flattening,[],[f313])).
fof(f313,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(nnf_transformation,[],[f279])).
fof(f279,plain,(
  ! [X0,X1,X2] : (sP4(X0,X1,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f5674,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) | sP4(X25,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X26)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5660,f690])).
fof(f5660,plain,(
  ( ! [X26,X27,X25] : (sP4(X25,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X26) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4889,f646])).
fof(f5729,plain,(
  ( ! [X10,X11] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) | $spl168),
  inference(cnf_transformation,[],[f5729_D])).
fof(f5729_D,plain,(
  ( ! [X10,X11] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f5730,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) | sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X16,X17)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5714,f690])).
fof(f5714,plain,(
  ( ! [X17,X18,X16] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X16,X17) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4890,f642])).
fof(f4890,plain,(
  ( ! [X74,X75] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),X74,X75)) ) | $spl43),
  inference(resolution,[],[f1106,f459])).
fof(f459,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f314])).
fof(f5731,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) | sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X25,X26)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5717,f690])).
fof(f5717,plain,(
  ( ! [X26,X27,X25] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X25,X26) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4890,f646])).
fof(f5786,plain,(
  ( ! [X10,X11] : (sP8(X10,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X11)) ) | $spl172),
  inference(cnf_transformation,[],[f5786_D])).
fof(f5786_D,plain,(
  ( ! [X10,X11] : (sP8(X10,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X11)) ) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f5787,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) | sP8(X16,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X17)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5770,f690])).
fof(f5770,plain,(
  ( ! [X17,X18,X16] : (sP8(X16,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X17) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4902,f642])).
fof(f4902,plain,(
  ( ! [X99,X98] : (sP8(X98,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),X99)) ) | $spl43),
  inference(resolution,[],[f1106,f475])).
fof(f475,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f322])).
fof(f322,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(rectify,[],[f321])).
fof(f321,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(flattening,[],[f320])).
fof(f320,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(nnf_transformation,[],[f284])).
fof(f284,plain,(
  ! [X2,X0,X1] : (sP8(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f5788,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) | sP8(X25,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X26)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5773,f690])).
fof(f5773,plain,(
  ( ! [X26,X27,X25] : (sP8(X25,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X26) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4902,f646])).
fof(f5844,plain,(
  ( ! [X10,X11] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) | $spl176),
  inference(cnf_transformation,[],[f5844_D])).
fof(f5844_D,plain,(
  ( ! [X10,X11] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f5845,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) | sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X16,X17)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5827,f690])).
fof(f5827,plain,(
  ( ! [X17,X18,X16] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X16,X17) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4903,f642])).
fof(f4903,plain,(
  ( ! [X101,X100] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),X100,X101)) ) | $spl43),
  inference(resolution,[],[f1106,f476])).
fof(f476,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f322])).
fof(f5846,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) | sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X25,X26)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5830,f690])).
fof(f5830,plain,(
  ( ! [X26,X27,X25] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X25,X26) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4903,f646])).
fof(f5902,plain,(
  ( ! [X10,X11] : (sP7(X10,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X11)) ) | $spl180),
  inference(cnf_transformation,[],[f5902_D])).
fof(f5902_D,plain,(
  ( ! [X10,X11] : (sP7(X10,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X11)) ) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f5903,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) | sP7(X16,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X17)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5885,f690])).
fof(f5885,plain,(
  ( ! [X17,X18,X16] : (sP7(X16,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X17) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4905,f642])).
fof(f4905,plain,(
  ( ! [X105,X104] : (sP7(X104,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),X105)) ) | $spl43),
  inference(resolution,[],[f1106,f479])).
fof(f479,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f325])).
fof(f325,plain,(
  ! [X0,X1,X2] : ((~sP7(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP7(X0,X1,X2)))),
  inference(rectify,[],[f324])).
fof(f324,plain,(
  ! [X1,X0,X2] : ((~sP7(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP7(X1,X0,X2)))),
  inference(flattening,[],[f323])).
fof(f323,plain,(
  ! [X1,X0,X2] : ((~sP7(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP7(X1,X0,X2)))),
  inference(nnf_transformation,[],[f283])).
fof(f283,plain,(
  ! [X1,X0,X2] : (sP7(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f5904,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) | sP7(X25,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X26)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5888,f690])).
fof(f5888,plain,(
  ( ! [X26,X27,X25] : (sP7(X25,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X26) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4905,f646])).
fof(f5999,plain,(
  ( ! [X10,X11] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) | $spl184),
  inference(cnf_transformation,[],[f5999_D])).
fof(f5999_D,plain,(
  ( ! [X10,X11] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f6000,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) | sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X16,X17)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5982,f690])).
fof(f5982,plain,(
  ( ! [X17,X18,X16] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X16,X17) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4906,f642])).
fof(f4906,plain,(
  ( ! [X107,X106] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),X106,X107)) ) | $spl43),
  inference(resolution,[],[f1106,f480])).
fof(f480,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f325])).
fof(f6001,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) | sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X25,X26)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5985,f690])).
fof(f5985,plain,(
  ( ! [X26,X27,X25] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X25,X26) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl43),
  inference(superposition,[],[f4906,f646])).
fof(f7727,plain,(
  ( ! [X14] : (~p(s(bool,sK13('const.frac.frac_sgn_1'(s('type.frac.frac',X14))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X14))))))) ) | $spl224),
  inference(cnf_transformation,[],[f7727_D])).
fof(f7727_D,plain,(
  ( ! [X14] : (~p(s(bool,sK13('const.frac.frac_sgn_1'(s('type.frac.frac',X14))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X14))))))) ) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f7729,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl227),
  inference(cnf_transformation,[],[f7729_D])).
fof(f7729_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl227),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl227])])).
fof(f6085,plain,(
  ( ! [X14] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,sK13('const.frac.frac_sgn_1'(s('type.frac.frac',X14))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X14))))))) ) | $spl49),
  inference(superposition,[],[f3908,f631])).
fof(f7726,plain,(
  ( ! [X30] : (~p(s(bool,sK13('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X30))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X30)) ) | $spl222),
  inference(cnf_transformation,[],[f7726_D])).
fof(f7726_D,plain,(
  ( ! [X30] : (~p(s(bool,sK13('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X30))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X30)) ) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f1107,plain,(
  ( ! [X2] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2)) ) | $spl44),
  inference(cnf_transformation,[],[f1107_D])).
fof(f1107_D,plain,(
  ( ! [X2] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2)) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f6096,plain,(
  ( ! [X28,X29] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X29))) | ~p(s(bool,sK13('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X28))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X28) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X29)) ) | $spl49),
  inference(superposition,[],[f3908,f647])).
fof(f647,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f400])).
fof(f6097,plain,(
  ( ! [X30,X31] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X31))) | ~p(s(bool,sK13('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X30))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X31) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X30)) ) | $spl49),
  inference(superposition,[],[f3908,f644])).
fof(f644,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f398])).
fof(f1089,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl21),
  inference(cnf_transformation,[],[f1089_D])).
fof(f1089_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f7725,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl221),
  inference(cnf_transformation,[],[f7725_D])).
fof(f7725_D,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl221),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl221])])).
fof(f4960,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl43),
  inference(superposition,[],[f1106,f649])).
fof(f4961,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl43),
  inference(superposition,[],[f1106,f651])).
fof(f1093,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl25),
  inference(cnf_transformation,[],[f1093_D])).
fof(f1093_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f4970,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl43),
  inference(superposition,[],[f1106,f652])).
fof(f652,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f402])).
fof(f4971,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl43),
  inference(superposition,[],[f1106,f650])).
fof(f650,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f401])).
fof(f7723,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl219),
  inference(cnf_transformation,[],[f7723_D])).
fof(f7723_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl219),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl219])])).
fof(f5081,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl37),
  inference(superposition,[],[f1101,f649])).
fof(f5082,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl37),
  inference(superposition,[],[f1101,f651])).
fof(f7721,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl217),
  inference(cnf_transformation,[],[f7721_D])).
fof(f7721_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl217),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl217])])).
fof(f5339,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl37),
  inference(superposition,[],[f5131,f649])).
fof(f5131,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl37),
  inference(trivial_inequality_removal,[],[f5110])).
fof(f5110,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl37),
  inference(superposition,[],[f1101,f650])).
fof(f5340,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl37),
  inference(superposition,[],[f5131,f651])).
fof(f7719,plain,(
  ( ! [X33,X32] : (sP0(X32,X33,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl214),
  inference(cnf_transformation,[],[f7719_D])).
fof(f7719_D,plain,(
  ( ! [X33,X32] : (sP0(X32,X33,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f5433,plain,(
  ( ! [X30,X31] : (sP0(X30,X31,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4859,f649])).
fof(f5434,plain,(
  ( ! [X33,X32] : (sP0(X32,X33,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4859,f651])).
fof(f5443,plain,(
  ( ! [X6,X7] : (sP0(X6,X7,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4859,f652])).
fof(f5444,plain,(
  ( ! [X8,X9] : (sP0(X8,X9,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4859,f650])).
fof(f7718,plain,(
  ( ! [X33,X32] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33)) ) | $spl212),
  inference(cnf_transformation,[],[f7718_D])).
fof(f7718_D,plain,(
  ( ! [X33,X32] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33)) ) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f5490,plain,(
  ( ! [X30,X31] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X30,X31) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4860,f649])).
fof(f5491,plain,(
  ( ! [X33,X32] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4860,f651])).
fof(f5500,plain,(
  ( ! [X6,X7] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X6,X7) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4860,f652])).
fof(f5501,plain,(
  ( ! [X8,X9] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X8,X9) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4860,f650])).
fof(f7717,plain,(
  ( ! [X33,X32] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33)) ) | $spl210),
  inference(cnf_transformation,[],[f7717_D])).
fof(f7717_D,plain,(
  ( ! [X33,X32] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33)) ) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f5546,plain,(
  ( ! [X30,X31] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X30,X31) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4876,f649])).
fof(f5547,plain,(
  ( ! [X33,X32] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4876,f651])).
fof(f5556,plain,(
  ( ! [X6,X7] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X6,X7) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4876,f652])).
fof(f5557,plain,(
  ( ! [X8,X9] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X8,X9) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4876,f650])).
fof(f7716,plain,(
  ( ! [X33,X32] : (sP4(X32,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X33)) ) | $spl208),
  inference(cnf_transformation,[],[f7716_D])).
fof(f7716_D,plain,(
  ( ! [X33,X32] : (sP4(X32,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X33)) ) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f5643,plain,(
  ( ! [X30,X31] : (sP4(X30,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X31) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4889,f649])).
fof(f5644,plain,(
  ( ! [X33,X32] : (sP4(X32,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X33) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4889,f651])).
fof(f5653,plain,(
  ( ! [X6,X7] : (sP4(X6,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X7) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4889,f652])).
fof(f5654,plain,(
  ( ! [X8,X9] : (sP4(X8,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X9) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4889,f650])).
fof(f7715,plain,(
  ( ! [X33,X32] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33)) ) | $spl206),
  inference(cnf_transformation,[],[f7715_D])).
fof(f7715_D,plain,(
  ( ! [X33,X32] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33)) ) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f5700,plain,(
  ( ! [X30,X31] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X30,X31) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4890,f649])).
fof(f5701,plain,(
  ( ! [X33,X32] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4890,f651])).
fof(f5710,plain,(
  ( ! [X6,X7] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X6,X7) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4890,f652])).
fof(f5711,plain,(
  ( ! [X8,X9] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X8,X9) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4890,f650])).
fof(f7714,plain,(
  ( ! [X33,X32] : (sP8(X32,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X33)) ) | $spl204),
  inference(cnf_transformation,[],[f7714_D])).
fof(f7714_D,plain,(
  ( ! [X33,X32] : (sP8(X32,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X33)) ) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f5756,plain,(
  ( ! [X30,X31] : (sP8(X30,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X31) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4902,f649])).
fof(f5757,plain,(
  ( ! [X33,X32] : (sP8(X32,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X33) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4902,f651])).
fof(f5766,plain,(
  ( ! [X6,X7] : (sP8(X6,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X7) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4902,f652])).
fof(f5767,plain,(
  ( ! [X8,X9] : (sP8(X8,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X9) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4902,f650])).
fof(f7713,plain,(
  ( ! [X33,X32] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33)) ) | $spl202),
  inference(cnf_transformation,[],[f7713_D])).
fof(f7713_D,plain,(
  ( ! [X33,X32] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33)) ) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f5813,plain,(
  ( ! [X30,X31] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X30,X31) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4903,f649])).
fof(f5814,plain,(
  ( ! [X33,X32] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4903,f651])).
fof(f5823,plain,(
  ( ! [X6,X7] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X6,X7) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4903,f652])).
fof(f5824,plain,(
  ( ! [X8,X9] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X8,X9) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4903,f650])).
fof(f7712,plain,(
  ( ! [X33,X32] : (sP7(X32,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X33)) ) | $spl200),
  inference(cnf_transformation,[],[f7712_D])).
fof(f7712_D,plain,(
  ( ! [X33,X32] : (sP7(X32,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X33)) ) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f5871,plain,(
  ( ! [X30,X31] : (sP7(X30,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X31) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4905,f649])).
fof(f5872,plain,(
  ( ! [X33,X32] : (sP7(X32,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X33) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4905,f651])).
fof(f5881,plain,(
  ( ! [X6,X7] : (sP7(X6,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X7) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4905,f652])).
fof(f5882,plain,(
  ( ! [X8,X9] : (sP7(X8,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X9) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4905,f650])).
fof(f7711,plain,(
  ( ! [X33,X32] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33)) ) | $spl198),
  inference(cnf_transformation,[],[f7711_D])).
fof(f7711_D,plain,(
  ( ! [X33,X32] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33)) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f5968,plain,(
  ( ! [X30,X31] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X30,X31) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4906,f649])).
fof(f5969,plain,(
  ( ! [X33,X32] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),X32,X33) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl43),
  inference(superposition,[],[f4906,f651])).
fof(f5978,plain,(
  ( ! [X6,X7] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X6,X7) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4906,f652])).
fof(f5979,plain,(
  ( ! [X8,X9] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X8,X9) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl43),
  inference(superposition,[],[f4906,f650])).
fof(f7704,plain,(
  $false | ($spl2 | $spl78)),
  inference(subsumption_resolution,[],[f7556,f3044])).
fof(f7556,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl2),
  inference(resolution,[],[f691,f631])).
fof(f2528,plain,(
  ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))))) | $spl55),
  inference(cnf_transformation,[],[f2528_D])).
fof(f2528_D,plain,(
  ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))))) <=> ~$spl55),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl55])])).
fof(f7394,plain,(
  ( ! [X2,X3] : (sP1(sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))),X2,X3)) ) | $spl196),
  inference(cnf_transformation,[],[f7394_D])).
fof(f7394_D,plain,(
  ( ! [X2,X3] : (sP1(sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))),X2,X3)) ) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f7396,plain,(
  ( ! [X6,X7] : (sP1(sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))),X6,X7) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl5),
  inference(subsumption_resolution,[],[f7390,f428])).
fof(f428,plain,(
  ( ! [X2,X0,X1] : (sP1(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f301])).
fof(f301,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP1(X2,X0,X1)) & (~sP1(X2,X0,X1) | ((~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f300])).
fof(f300,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP1(X2,X0,X1)) & (~sP1(X2,X0,X1) | ((~p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f275])).
fof(f275,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> sP1(X2,X0,X1))),
  inference(definition_folding,[],[f248,f274,f273])).
fof(f274,plain,(
  ! [X2,X0,X1] : (sP1(X2,X0,X1) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP0(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f248,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f137])).
fof(f137,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X17,X22,X23] : ((p(s(bool,X23)) <=> (p(s(bool,X22)) => p(s(bool,X17)))) <=> ((p(s(bool,X23)) | p(s(bool,X22))) & (p(s(bool,X23)) | ~p(s(bool,X17))) & (~p(s(bool,X22)) | p(s(bool,X17)) | ~p(s(bool,X23)))))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.sat.sat_27_prove_ltb')).
fof(f7390,plain,(
  ( ! [X6,X7] : (sP1(sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))),X6,X7) | p(s(bool,X6)) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl5),
  inference(resolution,[],[f874,f420])).
fof(f420,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~sP0(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f296])).
fof(f296,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | ((p(s(bool,X0)) | p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP0(X0,X1,X2))) & ((~p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP0(X0,X1,X2) | sP1(X0,X1,X2)))),
  inference(rectify,[],[f295])).
fof(f295,plain,(
  ! [X2,X0,X1] : ((~sP1(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP0(X2,X0,X1))) & ((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP0(X2,X0,X1) | sP1(X2,X0,X1)))),
  inference(flattening,[],[f294])).
fof(f294,plain,(
  ! [X2,X0,X1] : ((~sP1(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP0(X2,X0,X1))) & (((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP0(X2,X0,X1)) | sP1(X2,X0,X1)))),
  inference(nnf_transformation,[],[f274])).
fof(f874,plain,(
  ( ! [X14,X15] : (sP0(sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))),X14,X15)) ) | $spl5),
  inference(resolution,[],[f704,f425])).
fof(f704,plain,(
  ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))))) | $spl5),
  inference(trivial_inequality_removal,[],[f701])).
fof(f701,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))))) | $spl5),
  inference(superposition,[],[f694,f625])).
fof(f7395,plain,(
  ( ! [X4,X5] : (sP1(sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))),X4,X5) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl5),
  inference(subsumption_resolution,[],[f7389,f427])).
fof(f427,plain,(
  ( ! [X2,X0,X1] : (sP1(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f301])).
fof(f7389,plain,(
  ( ! [X4,X5] : (sP1(sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))),X4,X5) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))))) | ~p(s(bool,X5))) ) | $spl5),
  inference(resolution,[],[f874,f419])).
fof(f419,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~sP0(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f296])).
fof(f7388,plain,(
  ( ! [X2,X3] : (sP1(sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))),X2,X3) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl5),
  inference(resolution,[],[f874,f682])).
fof(f682,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~sP0(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(duplicate_literal_removal,[],[f418])).
fof(f418,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~sP0(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f296])).
fof(f6988,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl192),
  inference(cnf_transformation,[],[f6988_D])).
fof(f6988_D,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f6987,plain,(
  ( ! [X1] : (p(s(bool,X1))) ) | $spl190),
  inference(cnf_transformation,[],[f6987_D])).
fof(f6987_D,plain,(
  ( ! [X1] : (p(s(bool,X1))) ) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f7387,plain,(
  ( ! [X0,X1] : (~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))))) | p(s(bool,X0)) | ~p(s(bool,X1))) ) | $spl5),
  inference(resolution,[],[f874,f422])).
fof(f422,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP0(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f299])).
fof(f7386,plain,(
  $false | $spl190),
  inference(subsumption_resolution,[],[f7311,f6987])).
fof(f7311,plain,(
  ( ! [X241,X240] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X240),s('type.integer.int',X241))))) ) | $spl190),
  inference(resolution,[],[f6987,f539])).
fof(f539,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f257])).
fof(f257,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(ennf_transformation,[],[f161])).
fof(f161,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(flattening,[],[f160])).
fof(f160,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(rectify,[],[f77])).
fof(f77,axiom,(
  ! [X8,X16] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int',X16)))) => ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X16),s('type.integer.int',X8)))))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.integer.INT_LT_GT')).
fof(f7385,plain,(
  $false | $spl190),
  inference(subsumption_resolution,[],[f7310,f6987])).
fof(f7310,plain,(
  ( ! [X239,X238] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X238),s('type.integer.int',X239))))) ) | $spl190),
  inference(resolution,[],[f6987,f539])).
fof(f7384,plain,(
  $false | $spl190),
  inference(subsumption_resolution,[],[f7304,f6987])).
fof(f7304,plain,(
  ~p(s(bool,'T_0')) | $spl190),
  inference(resolution,[],[f6987,f616])).
fof(f616,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f388])).
fof(f388,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f204])).
fof(f204,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f36])).
fof(f36,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.bool.NOT_CLAUSES|split|1')).
fof(f7383,plain,(
  $false | $spl190),
  inference(subsumption_resolution,[],[f7303,f6987])).
fof(f7303,plain,(
  ~p(s(bool,'T_0')) | $spl190),
  inference(resolution,[],[f6987,f614])).
fof(f614,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f387])).
fof(f387,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f203])).
fof(f203,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f37])).
fof(f37,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.bool.NOT_CLAUSES|split|2')).
fof(f7382,plain,(
  $false | $spl190),
  inference(subsumption_resolution,[],[f7300,f6987])).
fof(f7300,plain,(
  ( ! [X228] : (~p(s(bool,X228))) ) | $spl190),
  inference(resolution,[],[f6987,f608])).
fof(f608,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f267])).
fof(f267,plain,(
  ! [X0] : ((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f196])).
fof(f196,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) => ~p(s(bool,X0)))),
  inference(flattening,[],[f195])).
fof(f195,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) => ~p(s(bool,X0)))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X15] : ((p(s(bool,X15)) => p(s(bool,'F_0'))) => ~p(s(bool,X15)))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.bool.IMP_F')).
fof(f7381,plain,(
  $false | $spl190),
  inference(subsumption_resolution,[],[f7292,f6987])).
fof(f7292,plain,(
  ( ! [X220] : (~p(s(bool,X220))) ) | $spl190),
  inference(resolution,[],[f6987,f546])).
fof(f546,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f352])).
fof(f352,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | ~p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f351])).
fof(f351,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | (~p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f258])).
fof(f258,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f167])).
fof(f167,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X15] : ((p(s(bool,X15)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X15)))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.bool.IMP_CLAUSES|split|4')).
fof(f7302,plain,(
  $false | $spl190),
  inference(resolution,[],[f6987,f612])).
fof(f7317,plain,(
  $false | $spl190),
  inference(resolution,[],[f6987,f648])).
fof(f648,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f223])).
fof(f223,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f222])).
fof(f222,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f122])).
fof(f122,axiom,(
  ! [X25] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X25),s('type.num.num','const.num.|48|_0'))))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.prim_rec.NOT_LESS_|48|')).
fof(f7319,plain,(
  $false | ($spl43 | $spl190)),
  inference(resolution,[],[f6987,f1106])).
fof(f7193,plain,(
  $false | $spl192),
  inference(subsumption_resolution,[],[f7090,f6988])).
fof(f7090,plain,(
  p(s(bool,'F_0')) | $spl192),
  inference(resolution,[],[f6988,f615])).
fof(f615,plain,(
  p(s(bool,'F_0')) | p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f388])).
fof(f7192,plain,(
  $false | $spl192),
  inference(subsumption_resolution,[],[f7089,f6988])).
fof(f7089,plain,(
  p(s(bool,'F_0')) | $spl192),
  inference(resolution,[],[f6988,f613])).
fof(f613,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f387])).
fof(f7191,plain,(
  $false | $spl192),
  inference(subsumption_resolution,[],[f7084,f6988])).
fof(f7084,plain,(
  ( ! [X216] : (p(s(bool,X216))) ) | $spl192),
  inference(resolution,[],[f6988,f557])).
fof(f557,plain,(
  ( ! [X0] : (p(s(bool,X0)) | p(s(bool,'T_0'))) )),
  inference(cnf_transformation,[],[f360])).
fof(f360,plain,(
  ! [X0] : (((p(s(bool,'T_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,'T_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f359])).
fof(f359,plain,(
  ! [X0] : (((p(s(bool,'T_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (~p(s(bool,'T_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f262])).
fof(f262,plain,(
  ! [X0] : ((~p(s(bool,'T_0')) | p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(ennf_transformation,[],[f172])).
fof(f172,plain,(
  ! [X0] : ((p(s(bool,'T_0')) => p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X15] : ((p(s(bool,'T_0')) => p(s(bool,X15))) <=> p(s(bool,X15)))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.bool.IMP_CLAUSES|split|0')).
fof(f7190,plain,(
  $false | $spl192),
  inference(subsumption_resolution,[],[f7083,f6988])).
fof(f7083,plain,(
  ( ! [X215] : (p(s(bool,X215))) ) | $spl192),
  inference(resolution,[],[f6988,f554])).
fof(f554,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f358])).
fof(f358,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,'T_0'))))),
  inference(flattening,[],[f357])).
fof(f357,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,X0)) | p(s(bool,'T_0')))))),
  inference(nnf_transformation,[],[f261])).
fof(f261,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X15] : ((p(s(bool,X15)) => p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.bool.IMP_CLAUSES|split|1')).
fof(f7189,plain,(
  $false | $spl192),
  inference(subsumption_resolution,[],[f7081,f6988])).
fof(f7081,plain,(
  p(s(bool,'F_0')) | $spl192),
  inference(resolution,[],[f6988,f551])).
fof(f551,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f356])).
fof(f356,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f355])).
fof(f355,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f260])).
fof(f260,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f170])).
fof(f170,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X15] : ((p(s(bool,'F_0')) => p(s(bool,X15))) <=> p(s(bool,'T_0')))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.bool.IMP_CLAUSES|split|2')).
fof(f7188,plain,(
  $false | $spl192),
  inference(subsumption_resolution,[],[f7079,f6988])).
fof(f7079,plain,(
  ( ! [X212] : (p(s(bool,X212))) ) | $spl192),
  inference(resolution,[],[f6988,f548])).
fof(f548,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f354])).
fof(f354,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X0))))),
  inference(flattening,[],[f353])).
fof(f353,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,X0)) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f259])).
fof(f259,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X15] : ((p(s(bool,X15)) => p(s(bool,X15))) <=> p(s(bool,'T_0')))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.bool.IMP_CLAUSES|split|3')).
fof(f7091,plain,(
  $false | $spl192),
  inference(resolution,[],[f6988,f617])).
fof(f617,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.frac.FRAC_SGN_NOT_NEG',aHL_TRUTH)).
fof(f7092,plain,(
  $false | $spl192),
  inference(resolution,[],[f6988,f618])).
fof(f618,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f10])).
fof(f10,axiom,(
  p(s(bool,'T_0'))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.bool.TRUTH')).
fof(f7093,plain,(
  $false | $spl192),
  inference(resolution,[],[f6988,f685])).
fof(f685,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f541])).
fof(f541,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f349])).
fof(f349,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f163])).
fof(f163,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7] : ! [X8] : (s(X7,X8) = s(X7,X8) <=> p(s(bool,'T_0')))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.bool.REFL_CLAUSE')).
fof(f6991,plain,(
  ( ! [X8,X9] : (sP1(X8,X9,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))) | p(s(bool,X9))) ) | $spl194),
  inference(cnf_transformation,[],[f6991_D])).
fof(f6991_D,plain,(
  ( ! [X8,X9] : (sP1(X8,X9,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))) | p(s(bool,X9))) ) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f6984,plain,(
  ( ! [X8,X9] : (sP1(X8,X9,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))) | p(s(bool,X9)) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl5),
  inference(resolution,[],[f873,f421])).
fof(f421,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~sP0(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f296])).
fof(f873,plain,(
  ( ! [X12,X13] : (sP0(X12,X13,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))))) ) | $spl5),
  inference(resolution,[],[f704,f423])).
fof(f6980,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl5),
  inference(resolution,[],[f873,f422])).
fof(f6920,plain,(
  $false | ($spl0 | $spl4)),
  inference(subsumption_resolution,[],[f6919,f648])).
fof(f6919,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f6909,f623])).
fof(f623,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f209])).
fof(f209,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f75])).
fof(f75,axiom,(
  ! [X25,X24] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X25),s('type.num.num',X24))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X25))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24)))))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.integer.INT_LT_CALCULATE|split|0')).
fof(f6909,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ($spl0 | $spl4)),
  inference(trivial_inequality_removal,[],[f6875])).
fof(f6875,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ($spl0 | $spl4)),
  inference(superposition,[],[f2923,f2713])).
fof(f2713,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl4),
  inference(superposition,[],[f641,f693])).
fof(f641,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))) )),
  inference(cnf_transformation,[],[f219])).
fof(f219,plain,(
  ! [X0] : s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6)))))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.frac.frac_sgn_def')).
fof(f2923,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl0),
  inference(backward_demodulation,[],[f690,f628])).
fof(f628,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f392])).
fof(f392,plain,(
  ! [X0] : ((s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f212])).
fof(f212,plain,(
  ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X8] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X8))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.intExtension.INT_SGN_CLAUSES|split|0')).
fof(f1109,plain,(
  ~p(s(bool,sK13('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl47),
  inference(cnf_transformation,[],[f1109_D])).
fof(f1109_D,plain,(
  ~p(s(bool,sK13('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f6121,plain,(
  ( ! [X27] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl188),
  inference(cnf_transformation,[],[f6121_D])).
fof(f6121_D,plain,(
  ( ! [X27] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f6095,plain,(
  ( ! [X27] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) | ~p(s(bool,sK13('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27)))) ) | $spl49),
  inference(superposition,[],[f3908,f665])).
fof(f665,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f235])).
fof(f235,plain,(
  ! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X6))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.frac.FRAC_SGN_TOTAL')).
fof(f6120,plain,(
  ( ! [X23] : (~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num',X23))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X23)) ) | $spl186),
  inference(cnf_transformation,[],[f6120_D])).
fof(f6120_D,plain,(
  ( ! [X23] : (~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num',X23))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X23)) ) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f3989,plain,(
  ( ! [X9] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X9))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X9)) ) | $spl132),
  inference(cnf_transformation,[],[f3989_D])).
fof(f3989_D,plain,(
  ( ! [X9] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X9))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X9)) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f6093,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26))))) | ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num',X25))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X25) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X26)) ) | $spl49),
  inference(superposition,[],[f3908,f644])).
fof(f6092,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))) | ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num',X23))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X24) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X23)) ) | $spl49),
  inference(superposition,[],[f3908,f647])).
fof(f1099,plain,(
  ( ! [X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(cnf_transformation,[],[f1099_D])).
fof(f1099_D,plain,(
  ( ! [X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f5984,plain,(
  ( ! [X24,X23,X22] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X22,X23) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4906,f645])).
fof(f645,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f400])).
fof(f5983,plain,(
  ( ! [X21,X19,X20] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X19,X20) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X21))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4906,f643])).
fof(f643,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f398])).
fof(f1097,plain,(
  ( ! [X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X3))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl30),
  inference(cnf_transformation,[],[f1097_D])).
fof(f1097_D,plain,(
  ( ! [X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X3))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f5981,plain,(
  ( ! [X14,X15,X13] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X13,X14) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl43),
  inference(superposition,[],[f4906,f534])).
fof(f534,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f348])).
fof(f348,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) & ((s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))))))),
  inference(flattening,[],[f347])).
fof(f347,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) | (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1))) & ((s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f158])).
fof(f158,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) <=> (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)))),
  inference(flattening,[],[f157])).
fof(f157,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) <=> (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ~s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)))),
  inference(rectify,[],[f85])).
fof(f85,axiom,(
  ! [X25,X24] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X25))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24)))))) <=> (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X25) | ~s('type.num.num','const.num.|48|_0') = s('type.num.num',X24)))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.integer.INT_LT_CALCULATE|split|2')).
fof(f3042,plain,(
  ( ! [X2] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))))))) ) | $spl76),
  inference(cnf_transformation,[],[f3042_D])).
fof(f3042_D,plain,(
  ( ! [X2] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))))))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f5998,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12)))))) | sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5980,f690])).
fof(f5980,plain,(
  ( ! [X12,X10,X11] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12))))))) ) | $spl43),
  inference(superposition,[],[f4906,f533])).
fof(f533,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f348])).
fof(f1086,plain,(
  ( ! [X6] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(cnf_transformation,[],[f1086_D])).
fof(f1086_D,plain,(
  ( ! [X6] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f5997,plain,(
  ( ! [X12,X13] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13)) ) | $spl182),
  inference(cnf_transformation,[],[f5997_D])).
fof(f5997_D,plain,(
  ( ! [X12,X13] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13)) ) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f5967,plain,(
  ( ! [X28,X29,X27] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X27,X28) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X29))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4906,f646])).
fof(f1087,plain,(
  ( ! [X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7)))))) ) | $spl18),
  inference(cnf_transformation,[],[f1087_D])).
fof(f1087_D,plain,(
  ( ! [X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7)))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f5966,plain,(
  ( ! [X26,X24,X25] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X24,X25) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26)))))) ) | $spl43),
  inference(superposition,[],[f4906,f645])).
fof(f5965,plain,(
  ( ! [X23,X21,X22] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X21,X22) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23)))))) ) | $spl43),
  inference(superposition,[],[f4906,f643])).
fof(f5964,plain,(
  ( ! [X19,X20,X18] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X18,X19) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X20))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4906,f642])).
fof(f1085,plain,(
  ( ! [X5] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl14),
  inference(cnf_transformation,[],[f1085_D])).
fof(f1085_D,plain,(
  ( ! [X5] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f5963,plain,(
  ( ! [X17,X15,X16] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X15,X16) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X17))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl43),
  inference(superposition,[],[f4906,f534])).
fof(f1082,plain,(
  ( ! [X4] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))))))) ) | $spl10),
  inference(cnf_transformation,[],[f1082_D])).
fof(f1082_D,plain,(
  ( ! [X4] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))))))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f5962,plain,(
  ( ! [X14,X12,X13] : (sP7(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X14))))))) ) | $spl43),
  inference(superposition,[],[f4906,f533])).
fof(f5887,plain,(
  ( ! [X24,X23,X22] : (sP7(X22,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X23) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4905,f645])).
fof(f5886,plain,(
  ( ! [X21,X19,X20] : (sP7(X19,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X20) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X21))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4905,f643])).
fof(f5884,plain,(
  ( ! [X14,X15,X13] : (sP7(X13,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X14) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl43),
  inference(superposition,[],[f4905,f534])).
fof(f5901,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12)))))) | sP7(X10,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X11)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5883,f690])).
fof(f5883,plain,(
  ( ! [X12,X10,X11] : (sP7(X10,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X11) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12))))))) ) | $spl43),
  inference(superposition,[],[f4905,f533])).
fof(f5900,plain,(
  ( ! [X12,X13] : (sP7(X12,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X13)) ) | $spl178),
  inference(cnf_transformation,[],[f5900_D])).
fof(f5900_D,plain,(
  ( ! [X12,X13] : (sP7(X12,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X13)) ) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f5870,plain,(
  ( ! [X28,X29,X27] : (sP7(X27,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X28) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X29))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4905,f646])).
fof(f5869,plain,(
  ( ! [X26,X24,X25] : (sP7(X24,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X25) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26)))))) ) | $spl43),
  inference(superposition,[],[f4905,f645])).
fof(f5868,plain,(
  ( ! [X23,X21,X22] : (sP7(X21,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X22) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23)))))) ) | $spl43),
  inference(superposition,[],[f4905,f643])).
fof(f5867,plain,(
  ( ! [X19,X20,X18] : (sP7(X18,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X19) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X20))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4905,f642])).
fof(f5866,plain,(
  ( ! [X17,X15,X16] : (sP7(X15,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X16) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X17))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl43),
  inference(superposition,[],[f4905,f534])).
fof(f5865,plain,(
  ( ! [X14,X12,X13] : (sP7(X12,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X13) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X14))))))) ) | $spl43),
  inference(superposition,[],[f4905,f533])).
fof(f5829,plain,(
  ( ! [X24,X23,X22] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X22,X23) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4903,f645])).
fof(f5828,plain,(
  ( ! [X21,X19,X20] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X19,X20) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X21))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4903,f643])).
fof(f5826,plain,(
  ( ! [X14,X15,X13] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X13,X14) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl43),
  inference(superposition,[],[f4903,f534])).
fof(f5843,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12)))))) | sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5825,f690])).
fof(f5825,plain,(
  ( ! [X12,X10,X11] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12))))))) ) | $spl43),
  inference(superposition,[],[f4903,f533])).
fof(f5842,plain,(
  ( ! [X12,X13] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13)) ) | $spl174),
  inference(cnf_transformation,[],[f5842_D])).
fof(f5842_D,plain,(
  ( ! [X12,X13] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13)) ) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f5812,plain,(
  ( ! [X28,X29,X27] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X27,X28) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X29))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4903,f646])).
fof(f5811,plain,(
  ( ! [X26,X24,X25] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X24,X25) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26)))))) ) | $spl43),
  inference(superposition,[],[f4903,f645])).
fof(f5810,plain,(
  ( ! [X23,X21,X22] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X21,X22) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23)))))) ) | $spl43),
  inference(superposition,[],[f4903,f643])).
fof(f5809,plain,(
  ( ! [X19,X20,X18] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X18,X19) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X20))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4903,f642])).
fof(f5808,plain,(
  ( ! [X17,X15,X16] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X15,X16) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X17))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl43),
  inference(superposition,[],[f4903,f534])).
fof(f5807,plain,(
  ( ! [X14,X12,X13] : (sP8(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X14))))))) ) | $spl43),
  inference(superposition,[],[f4903,f533])).
fof(f5772,plain,(
  ( ! [X24,X23,X22] : (sP8(X22,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X23) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4902,f645])).
fof(f5771,plain,(
  ( ! [X21,X19,X20] : (sP8(X19,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X20) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X21))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4902,f643])).
fof(f5769,plain,(
  ( ! [X14,X15,X13] : (sP8(X13,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X14) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl43),
  inference(superposition,[],[f4902,f534])).
fof(f5785,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12)))))) | sP8(X10,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X11)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5768,f690])).
fof(f5768,plain,(
  ( ! [X12,X10,X11] : (sP8(X10,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X11) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12))))))) ) | $spl43),
  inference(superposition,[],[f4902,f533])).
fof(f5784,plain,(
  ( ! [X12,X13] : (sP8(X12,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X13)) ) | $spl170),
  inference(cnf_transformation,[],[f5784_D])).
fof(f5784_D,plain,(
  ( ! [X12,X13] : (sP8(X12,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X13)) ) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f5755,plain,(
  ( ! [X28,X29,X27] : (sP8(X27,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X28) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X29))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4902,f646])).
fof(f5754,plain,(
  ( ! [X26,X24,X25] : (sP8(X24,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X25) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26)))))) ) | $spl43),
  inference(superposition,[],[f4902,f645])).
fof(f5753,plain,(
  ( ! [X23,X21,X22] : (sP8(X21,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X22) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23)))))) ) | $spl43),
  inference(superposition,[],[f4902,f643])).
fof(f5752,plain,(
  ( ! [X19,X20,X18] : (sP8(X18,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X19) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X20))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4902,f642])).
fof(f5751,plain,(
  ( ! [X17,X15,X16] : (sP8(X15,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X16) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X17))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl43),
  inference(superposition,[],[f4902,f534])).
fof(f5750,plain,(
  ( ! [X14,X12,X13] : (sP8(X12,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X13) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X14))))))) ) | $spl43),
  inference(superposition,[],[f4902,f533])).
fof(f5716,plain,(
  ( ! [X24,X23,X22] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X22,X23) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4890,f645])).
fof(f5715,plain,(
  ( ! [X21,X19,X20] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X19,X20) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X21))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4890,f643])).
fof(f5713,plain,(
  ( ! [X14,X15,X13] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X13,X14) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl43),
  inference(superposition,[],[f4890,f534])).
fof(f5728,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12)))))) | sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5712,f690])).
fof(f5712,plain,(
  ( ! [X12,X10,X11] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12))))))) ) | $spl43),
  inference(superposition,[],[f4890,f533])).
fof(f5727,plain,(
  ( ! [X12,X13] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13)) ) | $spl166),
  inference(cnf_transformation,[],[f5727_D])).
fof(f5727_D,plain,(
  ( ! [X12,X13] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13)) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f5699,plain,(
  ( ! [X28,X29,X27] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X27,X28) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X29))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4890,f646])).
fof(f5698,plain,(
  ( ! [X26,X24,X25] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X24,X25) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26)))))) ) | $spl43),
  inference(superposition,[],[f4890,f645])).
fof(f5697,plain,(
  ( ! [X23,X21,X22] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X21,X22) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23)))))) ) | $spl43),
  inference(superposition,[],[f4890,f643])).
fof(f5696,plain,(
  ( ! [X19,X20,X18] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X18,X19) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X20))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4890,f642])).
fof(f5695,plain,(
  ( ! [X17,X15,X16] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X15,X16) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X17))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl43),
  inference(superposition,[],[f4890,f534])).
fof(f5694,plain,(
  ( ! [X14,X12,X13] : (sP4(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X14))))))) ) | $spl43),
  inference(superposition,[],[f4890,f533])).
fof(f5659,plain,(
  ( ! [X24,X23,X22] : (sP4(X22,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X23) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4889,f645])).
fof(f5658,plain,(
  ( ! [X21,X19,X20] : (sP4(X19,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X20) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X21))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4889,f643])).
fof(f5656,plain,(
  ( ! [X14,X15,X13] : (sP4(X13,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X14) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl43),
  inference(superposition,[],[f4889,f534])).
fof(f5671,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12)))))) | sP4(X10,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X11)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5655,f690])).
fof(f5655,plain,(
  ( ! [X12,X10,X11] : (sP4(X10,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X11) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12))))))) ) | $spl43),
  inference(superposition,[],[f4889,f533])).
fof(f5670,plain,(
  ( ! [X12,X13] : (sP4(X12,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X13)) ) | $spl162),
  inference(cnf_transformation,[],[f5670_D])).
fof(f5670_D,plain,(
  ( ! [X12,X13] : (sP4(X12,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X13)) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f5642,plain,(
  ( ! [X28,X29,X27] : (sP4(X27,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X28) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X29))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4889,f646])).
fof(f5641,plain,(
  ( ! [X26,X24,X25] : (sP4(X24,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X25) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26)))))) ) | $spl43),
  inference(superposition,[],[f4889,f645])).
fof(f5640,plain,(
  ( ! [X23,X21,X22] : (sP4(X21,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X22) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23)))))) ) | $spl43),
  inference(superposition,[],[f4889,f643])).
fof(f5639,plain,(
  ( ! [X19,X20,X18] : (sP4(X18,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X19) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X20))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4889,f642])).
fof(f5638,plain,(
  ( ! [X17,X15,X16] : (sP4(X15,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X16) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X17))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl43),
  inference(superposition,[],[f4889,f534])).
fof(f5637,plain,(
  ( ! [X14,X12,X13] : (sP4(X12,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X13) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X14))))))) ) | $spl43),
  inference(superposition,[],[f4889,f533])).
fof(f5562,plain,(
  ( ! [X24,X23,X22] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X22,X23) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4876,f645])).
fof(f5561,plain,(
  ( ! [X21,X19,X20] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X19,X20) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X21))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4876,f643])).
fof(f5559,plain,(
  ( ! [X14,X15,X13] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X13,X14) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl43),
  inference(superposition,[],[f4876,f534])).
fof(f5575,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12)))))) | sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5558,f690])).
fof(f5558,plain,(
  ( ! [X12,X10,X11] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12))))))) ) | $spl43),
  inference(superposition,[],[f4876,f533])).
fof(f5574,plain,(
  ( ! [X12,X13] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13)) ) | $spl158),
  inference(cnf_transformation,[],[f5574_D])).
fof(f5574_D,plain,(
  ( ! [X12,X13] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13)) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f5545,plain,(
  ( ! [X28,X29,X27] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X27,X28) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X29))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4876,f646])).
fof(f5544,plain,(
  ( ! [X26,X24,X25] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X24,X25) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26)))))) ) | $spl43),
  inference(superposition,[],[f4876,f645])).
fof(f5543,plain,(
  ( ! [X23,X21,X22] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X21,X22) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23)))))) ) | $spl43),
  inference(superposition,[],[f4876,f643])).
fof(f5542,plain,(
  ( ! [X19,X20,X18] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X18,X19) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X20))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4876,f642])).
fof(f5541,plain,(
  ( ! [X17,X15,X16] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X15,X16) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X17))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl43),
  inference(superposition,[],[f4876,f534])).
fof(f5540,plain,(
  ( ! [X14,X12,X13] : (sP2(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X14))))))) ) | $spl43),
  inference(superposition,[],[f4876,f533])).
fof(f5506,plain,(
  ( ! [X24,X23,X22] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X22,X23) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4860,f645])).
fof(f5505,plain,(
  ( ! [X21,X19,X20] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X19,X20) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X21))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4860,f643])).
fof(f5503,plain,(
  ( ! [X14,X15,X13] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X13,X14) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl43),
  inference(superposition,[],[f4860,f534])).
fof(f5517,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12)))))) | sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11)) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5502,f690])).
fof(f5502,plain,(
  ( ! [X12,X10,X11] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),X10,X11) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12))))))) ) | $spl43),
  inference(superposition,[],[f4860,f533])).
fof(f5516,plain,(
  ( ! [X12,X13] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13)) ) | $spl154),
  inference(cnf_transformation,[],[f5516_D])).
fof(f5516_D,plain,(
  ( ! [X12,X13] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13)) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f5489,plain,(
  ( ! [X28,X29,X27] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X27,X28) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X29))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4860,f646])).
fof(f5488,plain,(
  ( ! [X26,X24,X25] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X24,X25) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26)))))) ) | $spl43),
  inference(superposition,[],[f4860,f645])).
fof(f5487,plain,(
  ( ! [X23,X21,X22] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X21,X22) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23)))))) ) | $spl43),
  inference(superposition,[],[f4860,f643])).
fof(f5486,plain,(
  ( ! [X19,X20,X18] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X18,X19) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X20))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4860,f642])).
fof(f5485,plain,(
  ( ! [X17,X15,X16] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X15,X16) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X17))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl43),
  inference(superposition,[],[f4860,f534])).
fof(f5484,plain,(
  ( ! [X14,X12,X13] : (sP0(sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),X12,X13) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X14))))))) ) | $spl43),
  inference(superposition,[],[f4860,f533])).
fof(f5449,plain,(
  ( ! [X24,X23,X22] : (sP0(X22,X23,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4859,f645])).
fof(f5448,plain,(
  ( ! [X21,X19,X20] : (sP0(X19,X20,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X21))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4859,f643])).
fof(f5446,plain,(
  ( ! [X14,X15,X13] : (sP0(X13,X14,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl43),
  inference(superposition,[],[f4859,f534])).
fof(f5461,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12)))))) | sP0(X10,X11,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f5445,f690])).
fof(f5445,plain,(
  ( ! [X12,X10,X11] : (sP0(X10,X11,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12))))))) ) | $spl43),
  inference(superposition,[],[f4859,f533])).
fof(f5460,plain,(
  ( ! [X12,X13] : (sP0(X12,X13,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl150),
  inference(cnf_transformation,[],[f5460_D])).
fof(f5460_D,plain,(
  ( ! [X12,X13] : (sP0(X12,X13,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) ) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f5432,plain,(
  ( ! [X28,X29,X27] : (sP0(X27,X28,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X29))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4859,f646])).
fof(f5431,plain,(
  ( ! [X26,X24,X25] : (sP0(X24,X25,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26)))))) ) | $spl43),
  inference(superposition,[],[f4859,f645])).
fof(f5430,plain,(
  ( ! [X23,X21,X22] : (sP0(X21,X22,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23)))))) ) | $spl43),
  inference(superposition,[],[f4859,f643])).
fof(f5429,plain,(
  ( ! [X19,X20,X18] : (sP0(X18,X19,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X20))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f4859,f642])).
fof(f5428,plain,(
  ( ! [X17,X15,X16] : (sP0(X15,X16,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X17))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl43),
  inference(superposition,[],[f4859,f534])).
fof(f5427,plain,(
  ( ! [X14,X12,X13] : (sP0(X12,X13,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X14))))))) ) | $spl43),
  inference(superposition,[],[f4859,f533])).
fof(f1202,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl51),
  inference(cnf_transformation,[],[f1202_D])).
fof(f1202_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f5080,plain,(
  ( ! [X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl37),
  inference(superposition,[],[f1101,f646])).
fof(f5079,plain,(
  ( ! [X8] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X8)))))) ) | $spl37),
  inference(superposition,[],[f1101,f645])).
fof(f5078,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7)))))) ) | $spl37),
  inference(superposition,[],[f1101,f643])).
fof(f5077,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl37),
  inference(superposition,[],[f1101,f642])).
fof(f5076,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl37),
  inference(superposition,[],[f1101,f534])).
fof(f5075,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))))))) ) | $spl37),
  inference(superposition,[],[f1101,f533])).
fof(f1101,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl37),
  inference(cnf_transformation,[],[f1101_D])).
fof(f1101_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f5016,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl149),
  inference(cnf_transformation,[],[f5016_D])).
fof(f5016_D,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl149),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl149])])).
fof(f4979,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl43),
  inference(superposition,[],[f1106,f651])).
fof(f4978,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl43),
  inference(superposition,[],[f1106,f649])).
fof(f4976,plain,(
  ( ! [X6] : (~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f1106,f645])).
fof(f4975,plain,(
  ( ! [X5] : (~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f1106,f643])).
fof(f4973,plain,(
  ( ! [X3] : (~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X3))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl43),
  inference(superposition,[],[f1106,f534])).
fof(f5010,plain,(
  ( ! [X2] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2)))))) | ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f4972,f690])).
fof(f4972,plain,(
  ( ! [X2] : (~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))))))) ) | $spl43),
  inference(superposition,[],[f1106,f533])).
fof(f5009,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl145),
  inference(cnf_transformation,[],[f5009_D])).
fof(f5009_D,plain,(
  ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl145),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl145])])).
fof(f4959,plain,(
  ( ! [X9] : (~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f1106,f646])).
fof(f4958,plain,(
  ( ! [X8] : (~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X8)))))) ) | $spl43),
  inference(superposition,[],[f1106,f645])).
fof(f4957,plain,(
  ( ! [X7] : (~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7)))))) ) | $spl43),
  inference(superposition,[],[f1106,f643])).
fof(f4956,plain,(
  ( ! [X6] : (~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl43),
  inference(superposition,[],[f1106,f642])).
fof(f4955,plain,(
  ( ! [X5] : (~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl43),
  inference(superposition,[],[f1106,f534])).
fof(f4954,plain,(
  ( ! [X4] : (~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))))))) ) | $spl43),
  inference(superposition,[],[f1106,f533])).
fof(f4837,plain,(
  $false | ($spl26 | $spl78)),
  inference(trivial_inequality_removal,[],[f4835])).
fof(f4835,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ($spl26 | $spl78)),
  inference(superposition,[],[f4741,f674])).
fof(f674,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f241])).
fof(f241,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f117])).
fof(f117,axiom,(
  ! [X25] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25)))))))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.numeral.numeral_distrib|split|9')).
fof(f4741,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | ($spl26 | $spl78)),
  inference(subsumption_resolution,[],[f4738,f3044])).
fof(f4738,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl26),
  inference(trivial_inequality_removal,[],[f4678])).
fof(f4678,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl26),
  inference(superposition,[],[f1094,f647])).
fof(f4836,plain,(
  $false | ($spl26 | $spl78)),
  inference(equality_resolution,[],[f4741])).
fof(f3189,plain,(
  ( ! [X23] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X23)) ) | $spl96),
  inference(cnf_transformation,[],[f3189_D])).
fof(f3189_D,plain,(
  ( ! [X23] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X23)) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f4490,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X11))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X10) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X11)) ) | $spl78),
  inference(superposition,[],[f3044,f644])).
fof(f4489,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X9))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X9) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X8)) ) | $spl78),
  inference(superposition,[],[f3044,f647])).
fof(f1090,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl22),
  inference(cnf_transformation,[],[f1090_D])).
fof(f1090_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f2946,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl0),
  inference(superposition,[],[f690,f649])).
fof(f2947,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl0),
  inference(superposition,[],[f690,f651])).
fof(f1094,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl26),
  inference(cnf_transformation,[],[f1094_D])).
fof(f1094_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f2956,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl0),
  inference(superposition,[],[f690,f652])).
fof(f2957,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl0),
  inference(superposition,[],[f690,f650])).
fof(f3994,plain,(
  ( ! [X5] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X5)) ) | $spl142),
  inference(cnf_transformation,[],[f3994_D])).
fof(f3994_D,plain,(
  ( ! [X5] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X5)) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f2976,plain,(
  ( ! [X4] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X4) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl0),
  inference(superposition,[],[f690,f647])).
fof(f2977,plain,(
  ( ! [X5] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X5)) ) | $spl0),
  inference(superposition,[],[f690,f644])).
fof(f3992,plain,(
  ( ! [X15] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X15)) ) | $spl138),
  inference(cnf_transformation,[],[f3992_D])).
fof(f3992_D,plain,(
  ( ! [X15] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X15)) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f2984,plain,(
  ( ! [X1] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) ) | $spl0),
  inference(superposition,[],[f690,f647])).
fof(f2985,plain,(
  ( ! [X2] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl0),
  inference(superposition,[],[f690,f644])).
fof(f3993,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X4)) ) | $spl140),
  inference(cnf_transformation,[],[f3993_D])).
fof(f3993_D,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X4)) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f2997,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X4) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl0),
  inference(superposition,[],[f532,f690])).
fof(f532,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f348])).
fof(f1088,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl20),
  inference(cnf_transformation,[],[f1088_D])).
fof(f1088_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f2998,plain,(
  ( ! [X5] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl0),
  inference(superposition,[],[f533,f690])).
fof(f3003,plain,(
  ( ! [X10] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X10))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl0),
  inference(superposition,[],[f642,f690])).
fof(f3005,plain,(
  ( ! [X12] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X12))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X12) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl0),
  inference(superposition,[],[f644,f690])).
fof(f3007,plain,(
  ( ! [X14] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X14))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl0),
  inference(superposition,[],[f646,f690])).
fof(f3008,plain,(
  ( ! [X15] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X15)) ) | $spl0),
  inference(superposition,[],[f647,f690])).
fof(f3991,plain,(
  ( ! [X21] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X21))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X21)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl136),
  inference(cnf_transformation,[],[f3991_D])).
fof(f3991_D,plain,(
  ( ! [X21] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X21))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X21)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f3709,plain,(
  ( ! [X20] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X20))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X20)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X20),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl0),
  inference(superposition,[],[f2925,f649])).
fof(f2925,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl0),
  inference(backward_demodulation,[],[f690,f627])).
fof(f627,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) )),
  inference(cnf_transformation,[],[f391])).
fof(f3710,plain,(
  ( ! [X21] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X21))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X21)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl0),
  inference(superposition,[],[f2925,f651])).
fof(f3818,plain,(
  ( ! [X6] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X6)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl128),
  inference(cnf_transformation,[],[f3818_D])).
fof(f3818_D,plain,(
  ( ! [X6] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X6)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f3719,plain,(
  ( ! [X4] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X4))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X4)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl0),
  inference(superposition,[],[f2925,f652])).
fof(f3720,plain,(
  ( ! [X5] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X5))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X5)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl0),
  inference(superposition,[],[f2925,f650])).
fof(f3990,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X11))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X11)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X10))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X10)) ) | $spl134),
  inference(cnf_transformation,[],[f3990_D])).
fof(f3990_D,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X11))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X11)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X10))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X10)) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f3739,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X9))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X9)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X8))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X8) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl0),
  inference(superposition,[],[f2925,f647])).
fof(f3740,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X11))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X11)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X10))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X10)) ) | $spl0),
  inference(superposition,[],[f2925,f644])).
fof(f3983,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X11))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X10) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X11)) ) | ($spl0 | $spl21)),
  inference(superposition,[],[f3055,f644])).
fof(f3055,plain,(
  ( ! [X10] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X10)))) ) | ($spl0 | $spl21)),
  inference(subsumption_resolution,[],[f3003,f1089])).
fof(f3982,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X9))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X9) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X8)) ) | ($spl0 | $spl21)),
  inference(superposition,[],[f3055,f647])).
fof(f3743,plain,(
  ( ! [X16] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X16))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X16)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl0),
  inference(superposition,[],[f2925,f625])).
fof(f3821,plain,(
  ( ! [X18] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X18))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X18)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl130),
  inference(cnf_transformation,[],[f3821_D])).
fof(f3821_D,plain,(
  ( ! [X18] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X18))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X18)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f3728,plain,(
  ( ! [X19] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X19))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X19)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl0),
  inference(superposition,[],[f2925,f651])).
fof(f3727,plain,(
  ( ! [X18] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X18))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X18)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl0),
  inference(superposition,[],[f2925,f649])).
fof(f3820,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X17))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X16))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X16)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f3726,f690])).
fof(f3726,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X16))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X16)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X17))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl0),
  inference(superposition,[],[f2925,f646])).
fof(f3725,plain,(
  ( ! [X14,X15] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X14))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X14)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl0),
  inference(superposition,[],[f2925,f645])).
fof(f3724,plain,(
  ( ! [X12,X13] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X12))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X12)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X13))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl0),
  inference(superposition,[],[f2925,f643])).
fof(f3819,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X11))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X10))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X10)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f3723,f690])).
fof(f3723,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X10))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X10)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl0),
  inference(superposition,[],[f2925,f642])).
fof(f3722,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X8))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X8)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X9))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl0),
  inference(superposition,[],[f2925,f534])).
fof(f3817,plain,(
  ( ! [X6,X7] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7)))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X6)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f3721,f690])).
fof(f3721,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X6)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))))))) ) | $spl0),
  inference(superposition,[],[f2925,f533])).
fof(f3816,plain,(
  ( ! [X8] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X8))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X8)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))) ) | $spl126),
  inference(cnf_transformation,[],[f3816_D])).
fof(f3816_D,plain,(
  ( ! [X8] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X8))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X8)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f3708,plain,(
  ( ! [X19,X18] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X18))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X18)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X19))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl0),
  inference(superposition,[],[f2925,f646])).
fof(f3707,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X16))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X16)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X17)))))) ) | $spl0),
  inference(superposition,[],[f2925,f645])).
fof(f3706,plain,(
  ( ! [X14,X15] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X14))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X14)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15)))))) ) | $spl0),
  inference(superposition,[],[f2925,f643])).
fof(f3705,plain,(
  ( ! [X12,X13] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X12))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X12)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X13))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl0),
  inference(superposition,[],[f2925,f642])).
fof(f3704,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X10))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X10)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X11))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl0),
  inference(superposition,[],[f2925,f534])).
fof(f3703,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X8))) = s('type.integer.int','const.bool.COND_3'(s(bool,sK13(X8)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X9))))))) ) | $spl0),
  inference(superposition,[],[f2925,f533])).
fof(f3518,plain,(
  ( ! [X27] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl124),
  inference(cnf_transformation,[],[f3518_D])).
fof(f3518_D,plain,(
  ( ! [X27] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f3166,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))))) | $spl86),
  inference(cnf_transformation,[],[f3166_D])).
fof(f3166_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f3517,plain,(
  ( ! [X27] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27)))) ) | $spl0),
  inference(forward_demodulation,[],[f3434,f690])).
fof(f3434,plain,(
  ( ! [X27] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27)))) ) | $spl0),
  inference(superposition,[],[f2924,f665])).
fof(f2924,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))) ) | $spl0),
  inference(backward_demodulation,[],[f690,f629])).
fof(f629,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(cnf_transformation,[],[f392])).
fof(f3514,plain,(
  ( ! [X23] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X23)) ) | $spl120),
  inference(cnf_transformation,[],[f3514_D])).
fof(f3514_D,plain,(
  ( ! [X23] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X23)) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f3515,plain,(
  ( ! [X24] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X24)) ) | $spl122),
  inference(cnf_transformation,[],[f3515_D])).
fof(f3515_D,plain,(
  ( ! [X24] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X24)) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f3432,plain,(
  ( ! [X26,X25] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X25))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X25) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X26)) ) | $spl0),
  inference(superposition,[],[f2924,f644])).
fof(f3431,plain,(
  ( ! [X24,X23] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X24) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X23)) ) | $spl0),
  inference(superposition,[],[f2924,f647])).
fof(f3171,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl90),
  inference(cnf_transformation,[],[f3171_D])).
fof(f3171_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f3511,plain,(
  ( ! [X18] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X18))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X18))))))) ) | $spl118),
  inference(cnf_transformation,[],[f3511_D])).
fof(f3511_D,plain,(
  ( ! [X18] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X18))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X18))))))) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f3428,plain,(
  ( ! [X18] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X18))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X18))))))) ) | $spl0),
  inference(superposition,[],[f2924,f631])).
fof(f3510,plain,(
  ( ! [X17] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X17))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X17))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X17))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl116),
  inference(cnf_transformation,[],[f3510_D])).
fof(f3510_D,plain,(
  ( ! [X17] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X17))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X17))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X17))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f3509,plain,(
  ( ! [X17] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X17))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X17))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X17)))) ) | $spl0),
  inference(forward_demodulation,[],[f3427,f690])).
fof(f3427,plain,(
  ( ! [X17] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X17))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X17))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl0),
  inference(superposition,[],[f2924,f665])).
fof(f3162,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl82),
  inference(cnf_transformation,[],[f3162_D])).
fof(f3162_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f3508,plain,(
  ( ! [X16] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X16),s('type.integer.int',X16)))) | ~p(s(bool,sK13(X16)))) ) | $spl114),
  inference(cnf_transformation,[],[f3508_D])).
fof(f3508_D,plain,(
  ( ! [X16] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X16),s('type.integer.int',X16)))) | ~p(s(bool,sK13(X16)))) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f3426,plain,(
  ( ! [X16] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X16),s('type.integer.int',X16)))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,sK13(X16)))) ) | $spl0),
  inference(superposition,[],[f2924,f625])).
fof(f3507,plain,(
  ( ! [X15] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15))))))) ) | $spl112),
  inference(cnf_transformation,[],[f3507_D])).
fof(f3507_D,plain,(
  ( ! [X15] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15))))))) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f3506,plain,(
  ( ! [X15] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15)))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f3425,f690])).
fof(f3425,plain,(
  ( ! [X15] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15))),s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15)))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl0),
  inference(superposition,[],[f2924,f665])).
fof(f3502,plain,(
  ( ! [X11] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl110),
  inference(cnf_transformation,[],[f3502_D])).
fof(f3502_D,plain,(
  ( ! [X11] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f3196,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl103),
  inference(cnf_transformation,[],[f3196_D])).
fof(f3196_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl103),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl103])])).
fof(f3501,plain,(
  ( ! [X11] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11)))) ) | $spl0),
  inference(forward_demodulation,[],[f3421,f690])).
fof(f3421,plain,(
  ( ! [X11] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11)))) ) | $spl0),
  inference(superposition,[],[f2924,f665])).
fof(f3267,plain,(
  $false | $spl96),
  inference(trivial_inequality_removal,[],[f3265])).
fof(f3265,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | $spl96),
  inference(superposition,[],[f3189,f674])).
fof(f3266,plain,(
  $false | $spl96),
  inference(equality_resolution,[],[f3189])).
fof(f3209,plain,(
  ( ! [X5] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,sK13('const.intExtension.SGN_1'(s('type.integer.int',X5)))))) ) | $spl108),
  inference(cnf_transformation,[],[f3209_D])).
fof(f3209_D,plain,(
  ( ! [X5] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,sK13('const.intExtension.SGN_1'(s('type.integer.int',X5)))))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f1111,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl49),
  inference(cnf_transformation,[],[f1111_D])).
fof(f1111_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f3158,plain,(
  ( ! [X5] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,sK13('const.intExtension.SGN_1'(s('type.integer.int',X5)))))) ) | $spl0),
  inference(superposition,[],[f2923,f625])).
fof(f3199,plain,(
  ( ! [X28] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X28))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl104),
  inference(cnf_transformation,[],[f3199_D])).
fof(f3199_D,plain,(
  ( ! [X28] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X28))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f3200,plain,(
  ( ! [X29] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X29))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X29)) ) | $spl106),
  inference(cnf_transformation,[],[f3200_D])).
fof(f3200_D,plain,(
  ( ! [X29] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X29))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X29)) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f3201,plain,(
  ( ! [X30,X31] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X31))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X30))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X31)) ) | $spl0),
  inference(subsumption_resolution,[],[f3143,f533])).
fof(f3143,plain,(
  ( ! [X30,X31] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X31))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X30))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X31) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X30)) ) | $spl0),
  inference(superposition,[],[f2923,f644])).
fof(f3198,plain,(
  ( ! [X28,X29] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X29))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X28))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X29)) ) | $spl0),
  inference(subsumption_resolution,[],[f3142,f533])).
fof(f3142,plain,(
  ( ! [X28,X29] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X29))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X28))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X28) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X29)) ) | $spl0),
  inference(superposition,[],[f2923,f647])).
fof(f3195,plain,(
  ( ! [X27] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl100),
  inference(cnf_transformation,[],[f3195_D])).
fof(f3195_D,plain,(
  ( ! [X27] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f3197,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl102),
  inference(cnf_transformation,[],[f3197_D])).
fof(f3197_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f3194,plain,(
  ( ! [X27] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27)))) ) | $spl0),
  inference(forward_demodulation,[],[f3141,f690])).
fof(f3141,plain,(
  ( ! [X27] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X27)))) ) | $spl0),
  inference(superposition,[],[f2923,f665])).
fof(f3190,plain,(
  ( ! [X24] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X24)) ) | $spl98),
  inference(cnf_transformation,[],[f3190_D])).
fof(f3190_D,plain,(
  ( ! [X24] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X24)) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f3192,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X25) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X26)) ) | $spl0),
  inference(subsumption_resolution,[],[f3191,f648])).
fof(f3191,plain,(
  ( ! [X26,X25] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X25),s('type.num.num','const.num.|48|_0')))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X25) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X26)) ) | $spl0),
  inference(forward_demodulation,[],[f3139,f623])).
fof(f3139,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X25))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X25) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X26)) ) | $spl0),
  inference(superposition,[],[f2923,f644])).
fof(f3188,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X24) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X23)) ) | $spl0),
  inference(subsumption_resolution,[],[f3187,f648])).
fof(f3187,plain,(
  ( ! [X24,X23] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num','const.num.|48|_0')))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X24) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X23)) ) | $spl0),
  inference(forward_demodulation,[],[f3138,f623])).
fof(f3138,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X24))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X24) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X23)) ) | $spl0),
  inference(superposition,[],[f2923,f647])).
fof(f3174,plain,(
  ( ! [X14] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X14))))))) ) | $spl94),
  inference(cnf_transformation,[],[f3174_D])).
fof(f3174_D,plain,(
  ( ! [X14] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X14))))))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f3172,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl91),
  inference(cnf_transformation,[],[f3172_D])).
fof(f3172_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl91),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl91])])).
fof(f3131,plain,(
  ( ! [X14] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X14))))))) ) | $spl0),
  inference(superposition,[],[f2923,f631])).
fof(f3173,plain,(
  ( ! [X13] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X13))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X13))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl92),
  inference(cnf_transformation,[],[f3173_D])).
fof(f3173_D,plain,(
  ( ! [X13] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X13))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X13))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f3170,plain,(
  ( ! [X13] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X13))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X13)))) ) | $spl0),
  inference(forward_demodulation,[],[f3130,f690])).
fof(f3130,plain,(
  ( ! [X13] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X13))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X13))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl0),
  inference(superposition,[],[f2923,f665])).
fof(f3163,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl83),
  inference(cnf_transformation,[],[f3163_D])).
fof(f3163_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl83),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl83])])).
fof(f3169,plain,(
  ( ! [X12] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X12))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl88),
  inference(cnf_transformation,[],[f3169_D])).
fof(f3169_D,plain,(
  ( ! [X12] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X12))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f3168,plain,(
  ( ! [X12] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X12))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f3129,f690])).
fof(f3129,plain,(
  ( ! [X12] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl0),
  inference(superposition,[],[f2923,f665])).
fof(f3165,plain,(
  ( ! [X11] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl84),
  inference(cnf_transformation,[],[f3165_D])).
fof(f3165_D,plain,(
  ( ! [X11] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f3167,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))))) | $spl87),
  inference(cnf_transformation,[],[f3167_D])).
fof(f3167_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))))) <=> ~$spl87),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl87])])).
fof(f3164,plain,(
  ( ! [X11] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11)))) ) | $spl0),
  inference(forward_demodulation,[],[f3128,f690])).
fof(f3128,plain,(
  ( ! [X11] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11)))) ) | $spl0),
  inference(superposition,[],[f2923,f665])).
fof(f3161,plain,(
  ( ! [X4] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,sK13(X4)))) ) | $spl80),
  inference(cnf_transformation,[],[f3161_D])).
fof(f3161_D,plain,(
  ( ! [X4] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,sK13(X4)))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f3124,plain,(
  ( ! [X4] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,sK13(X4)))) ) | $spl0),
  inference(superposition,[],[f2923,f625])).
fof(f1108,plain,(
  p(s(bool,sK13('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl46),
  inference(cnf_transformation,[],[f1108_D])).
fof(f1108_D,plain,(
  p(s(bool,sK13('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f3032,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,sK13('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl0),
  inference(superposition,[],[f626,f690])).
fof(f626,plain,(
  ( ! [X0] : (p(s(bool,sK13(X0))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f391])).
fof(f1110,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl48),
  inference(cnf_transformation,[],[f1110_D])).
fof(f1110_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f3031,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,sK13('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl0),
  inference(superposition,[],[f625,f690])).
fof(f2990,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,sK13('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl0),
  inference(superposition,[],[f690,f625])).
fof(f2980,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl0),
  inference(superposition,[],[f690,f625])).
fof(f1102,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl38),
  inference(cnf_transformation,[],[f1102_D])).
fof(f1102_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f2965,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl0),
  inference(superposition,[],[f690,f651])).
fof(f2964,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl0),
  inference(superposition,[],[f690,f649])).
fof(f3045,plain,(
  ( ! [X7] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f2963,f690])).
fof(f2963,plain,(
  ( ! [X7] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl0),
  inference(superposition,[],[f690,f646])).
fof(f2962,plain,(
  ( ! [X6] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl0),
  inference(superposition,[],[f690,f645])).
fof(f2961,plain,(
  ( ! [X5] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl0),
  inference(superposition,[],[f690,f643])).
fof(f3043,plain,(
  ( ! [X4] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f2960,f690])).
fof(f2960,plain,(
  ( ! [X4] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl0),
  inference(superposition,[],[f690,f642])).
fof(f2959,plain,(
  ( ! [X3] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X3))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl0),
  inference(superposition,[],[f690,f534])).
fof(f3041,plain,(
  ( ! [X2] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2)))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f2958,f690])).
fof(f2958,plain,(
  ( ! [X2] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))))))) ) | $spl0),
  inference(superposition,[],[f690,f533])).
fof(f1083,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl12),
  inference(cnf_transformation,[],[f1083_D])).
fof(f1083_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f2945,plain,(
  ( ! [X9] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl0),
  inference(superposition,[],[f690,f646])).
fof(f2944,plain,(
  ( ! [X8] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X8)))))) ) | $spl0),
  inference(superposition,[],[f690,f645])).
fof(f2943,plain,(
  ( ! [X7] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7)))))) ) | $spl0),
  inference(superposition,[],[f690,f643])).
fof(f2942,plain,(
  ( ! [X6] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl0),
  inference(superposition,[],[f690,f642])).
fof(f2941,plain,(
  ( ! [X5] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl0),
  inference(superposition,[],[f690,f534])).
fof(f2940,plain,(
  ( ! [X4] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))))))) ) | $spl0),
  inference(superposition,[],[f690,f533])).
fof(f2777,plain,(
  $false | ($spl4 | $spl55)),
  inference(subsumption_resolution,[],[f2744,f2528])).
fof(f2744,plain,(
  p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))))) | $spl4),
  inference(trivial_inequality_removal,[],[f2732])).
fof(f2732,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12))))) | $spl4),
  inference(superposition,[],[f626,f693])).
fof(f693,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))) | $spl4),
  inference(cnf_transformation,[],[f693_D])).
fof(f693_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f2539,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl74),
  inference(cnf_transformation,[],[f2539_D])).
fof(f2539_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f706,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))) | $spl3),
  inference(resolution,[],[f692,f540])).
fof(f540,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f162])).
fof(f162,plain,(
  ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int',X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(rectify,[],[f79])).
fof(f79,axiom,(
  ! [X8,X16] : (s('type.integer.int',X8) = s('type.integer.int',X16) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int',X16)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X16),s('type.integer.int',X8)))))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.integer.INT_LT_TOTAL')).
fof(f707,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))) | $spl3),
  inference(resolution,[],[f692,f540])).
fof(f2537,plain,(
  ( ! [X12,X13] : (sP0(X12,X13,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl72),
  inference(cnf_transformation,[],[f2537_D])).
fof(f2537_D,plain,(
  ( ! [X12,X13] : (sP0(X12,X13,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f1389,plain,(
  ( ! [X12,X13] : (sP0(X12,X13,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl3),
  inference(superposition,[],[f714,f625])).
fof(f714,plain,(
  ( ! [X12,X13] : (sP0(X12,X13,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl3),
  inference(resolution,[],[f692,f423])).
fof(f2536,plain,(
  ( ! [X12,X13] : (sP0('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13)) ) | $spl70),
  inference(cnf_transformation,[],[f2536_D])).
fof(f2536_D,plain,(
  ( ! [X12,X13] : (sP0('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13)) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f1799,plain,(
  ( ! [X12,X13] : (sP0('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl3),
  inference(superposition,[],[f715,f625])).
fof(f715,plain,(
  ( ! [X14,X15] : (sP0('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))),X14,X15)) ) | $spl3),
  inference(resolution,[],[f692,f425])).
fof(f2535,plain,(
  ( ! [X12,X13] : (sP2('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13)) ) | $spl68),
  inference(cnf_transformation,[],[f2535_D])).
fof(f2535_D,plain,(
  ( ! [X12,X13] : (sP2('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13)) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f1880,plain,(
  ( ! [X12,X13] : (sP2('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl3),
  inference(superposition,[],[f731,f625])).
fof(f731,plain,(
  ( ! [X47,X46] : (sP2('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))),X46,X47)) ) | $spl3),
  inference(resolution,[],[f692,f442])).
fof(f2534,plain,(
  ( ! [X12,X13] : (sP4(X12,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X13)) ) | $spl66),
  inference(cnf_transformation,[],[f2534_D])).
fof(f2534_D,plain,(
  ( ! [X12,X13] : (sP4(X12,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X13)) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f1940,plain,(
  ( ! [X12,X13] : (sP4(X12,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X13) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl3),
  inference(superposition,[],[f744,f625])).
fof(f744,plain,(
  ( ! [X72,X73] : (sP4(X72,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))),X73)) ) | $spl3),
  inference(resolution,[],[f692,f458])).
fof(f2533,plain,(
  ( ! [X12,X13] : (sP4('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13)) ) | $spl64),
  inference(cnf_transformation,[],[f2533_D])).
fof(f2533_D,plain,(
  ( ! [X12,X13] : (sP4('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13)) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f1985,plain,(
  ( ! [X12,X13] : (sP4('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl3),
  inference(superposition,[],[f745,f625])).
fof(f745,plain,(
  ( ! [X74,X75] : (sP4('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))),X74,X75)) ) | $spl3),
  inference(resolution,[],[f692,f459])).
fof(f2532,plain,(
  ( ! [X12,X13] : (sP8(X12,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X13)) ) | $spl62),
  inference(cnf_transformation,[],[f2532_D])).
fof(f2532_D,plain,(
  ( ! [X12,X13] : (sP8(X12,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X13)) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f2097,plain,(
  ( ! [X12,X13] : (sP8(X12,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X13) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl3),
  inference(superposition,[],[f757,f625])).
fof(f757,plain,(
  ( ! [X99,X98] : (sP8(X98,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))),X99)) ) | $spl3),
  inference(resolution,[],[f692,f475])).
fof(f2531,plain,(
  ( ! [X12,X13] : (sP8('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13)) ) | $spl60),
  inference(cnf_transformation,[],[f2531_D])).
fof(f2531_D,plain,(
  ( ! [X12,X13] : (sP8('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13)) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f2174,plain,(
  ( ! [X12,X13] : (sP8('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl3),
  inference(superposition,[],[f758,f625])).
fof(f758,plain,(
  ( ! [X101,X100] : (sP8('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))),X100,X101)) ) | $spl3),
  inference(resolution,[],[f692,f476])).
fof(f2530,plain,(
  ( ! [X12,X13] : (sP7(X12,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X13)) ) | $spl58),
  inference(cnf_transformation,[],[f2530_D])).
fof(f2530_D,plain,(
  ( ! [X12,X13] : (sP7(X12,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X13)) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f2270,plain,(
  ( ! [X12,X13] : (sP7(X12,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X13) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl3),
  inference(superposition,[],[f760,f625])).
fof(f760,plain,(
  ( ! [X105,X104] : (sP7(X104,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))),X105)) ) | $spl3),
  inference(resolution,[],[f692,f479])).
fof(f2529,plain,(
  ( ! [X12,X13] : (sP7('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13)) ) | $spl56),
  inference(cnf_transformation,[],[f2529_D])).
fof(f2529_D,plain,(
  ( ! [X12,X13] : (sP7('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13)) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f2364,plain,(
  ( ! [X12,X13] : (sP7('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X12,X13) | ~p(s(bool,sK13('const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) ) | $spl3),
  inference(superposition,[],[f761,f625])).
fof(f761,plain,(
  ( ! [X107,X106] : (sP7('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))),X106,X107)) ) | $spl3),
  inference(resolution,[],[f692,f480])).
fof(f2518,plain,(
  $false | ($spl1 | $spl3 | $spl5)),
  inference(subsumption_resolution,[],[f2517,f689])).
fof(f2517,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl3 | $spl5)),
  inference(forward_demodulation,[],[f2371,f641])).
fof(f2371,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl3 | $spl5)),
  inference(resolution,[],[f851,f629])).
fof(f851,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ($spl3 | $spl5)),
  inference(subsumption_resolution,[],[f706,f694])).
fof(f1204,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | $spl53),
  inference(cnf_transformation,[],[f1204_D])).
fof(f1204_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') <=> ~$spl53),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl53])])).
fof(f1186,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl7),
  inference(superposition,[],[f858,f651])).
fof(f1185,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl7),
  inference(superposition,[],[f858,f649])).
fof(f1079,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,sK13('const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(superposition,[],[f689,f625])).
fof(f1074,plain,(
  ( ! [X3] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X3))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X3) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl1),
  inference(superposition,[],[f689,f644])).
fof(f1073,plain,(
  ( ! [X2] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2)) ) | $spl1),
  inference(superposition,[],[f689,f647])).
fof(f1095,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl27),
  inference(cnf_transformation,[],[f1095_D])).
fof(f1095_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f1068,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(superposition,[],[f689,f625])).
fof(f1104,plain,(
  ( ! [X4] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X4)) ) | $spl40),
  inference(cnf_transformation,[],[f1104_D])).
fof(f1104_D,plain,(
  ( ! [X4] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X4)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f1065,plain,(
  ( ! [X5] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X5)) ) | $spl1),
  inference(superposition,[],[f689,f644])).
fof(f1064,plain,(
  ( ! [X4] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X4) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl1),
  inference(superposition,[],[f689,f647])).
fof(f1103,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl39),
  inference(cnf_transformation,[],[f1103_D])).
fof(f1103_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f1053,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1),
  inference(superposition,[],[f689,f651])).
fof(f1052,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1),
  inference(superposition,[],[f689,f649])).
fof(f1098,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl32),
  inference(cnf_transformation,[],[f1098_D])).
fof(f1098_D,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f1051,plain,(
  ( ! [X7] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl1),
  inference(superposition,[],[f689,f646])).
fof(f1050,plain,(
  ( ! [X6] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl1),
  inference(superposition,[],[f689,f645])).
fof(f1049,plain,(
  ( ! [X5] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl1),
  inference(superposition,[],[f689,f643])).
fof(f1048,plain,(
  ( ! [X4] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl1),
  inference(superposition,[],[f689,f642])).
fof(f1047,plain,(
  ( ! [X3] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X3))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl1),
  inference(superposition,[],[f689,f534])).
fof(f1096,plain,(
  ( ! [X2] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))))))) ) | $spl28),
  inference(cnf_transformation,[],[f1096_D])).
fof(f1096_D,plain,(
  ( ! [X2] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f1046,plain,(
  ( ! [X2] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))))))) ) | $spl1),
  inference(superposition,[],[f689,f533])).
fof(f1045,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl1),
  inference(superposition,[],[f689,f650])).
fof(f1044,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl1),
  inference(superposition,[],[f689,f652])).
fof(f1091,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl23),
  inference(cnf_transformation,[],[f1091_D])).
fof(f1091_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f1035,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(superposition,[],[f689,f651])).
fof(f1034,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(superposition,[],[f689,f649])).
fof(f1084,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl13),
  inference(cnf_transformation,[],[f1084_D])).
fof(f1084_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f1033,plain,(
  ( ! [X9] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl1),
  inference(superposition,[],[f689,f646])).
fof(f1032,plain,(
  ( ! [X8] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X8)))))) ) | $spl1),
  inference(superposition,[],[f689,f645])).
fof(f1031,plain,(
  ( ! [X7] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7)))))) ) | $spl1),
  inference(superposition,[],[f689,f643])).
fof(f1030,plain,(
  ( ! [X6] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl1),
  inference(superposition,[],[f689,f642])).
fof(f1029,plain,(
  ( ! [X5] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X5))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl1),
  inference(superposition,[],[f689,f534])).
fof(f1028,plain,(
  ( ! [X4] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))))))) ) | $spl1),
  inference(superposition,[],[f689,f533])).
fof(f858,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl7),
  inference(cnf_transformation,[],[f858_D])).
fof(f858_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f860,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) | $spl9),
  inference(cnf_transformation,[],[f860_D])).
fof(f860_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f808,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl3),
  inference(superposition,[],[f692,f651])).
fof(f807,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl3),
  inference(superposition,[],[f692,f649])).
fof(f689,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(cnf_transformation,[],[f689_D])).
fof(f689_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f691,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) | $spl2),
  inference(cnf_transformation,[],[f691_D])).
fof(f691_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f412,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(cnf_transformation,[],[f293])).
fof(f293,plain,(
  (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))))))) & (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))) & ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12])],[f292])).
fof(f292,plain,(
  ? [X0] : ((s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))))) & (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) & ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))))))),
  inference(flattening,[],[f291])).
fof(f291,plain,(
  ? [X0] : ((s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))))) & (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) & ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))))))),
  inference(nnf_transformation,[],[f247])).
fof(f247,plain,(
  ? [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <~> (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))))))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ~! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))))))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ~! [X0] : (~s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (~s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (~s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6))))))))),
  file('thm.frac.FRAC_SGN_NOT_NEG','thm.frac.FRAC_SGN_NOT_NEG')).
fof(f690,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl0),
  inference(cnf_transformation,[],[f690_D])).
fof(f690_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f694,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))) | $spl5),
  inference(cnf_transformation,[],[f694_D])).
fof(f694_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f413,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(cnf_transformation,[],[f293])).
fof(f692,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) | $spl3),
  inference(cnf_transformation,[],[f692_D])).
fof(f692_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f414,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK12)))))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',sK12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(cnf_transformation,[],[f293])).
% SZS output end Proof for thm.frac
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 355
% Passive clauses: 3078
% Generated clauses: 8038
% Final active clauses: 226
% Final passive clauses: 1160
% Input formulas: 133
% Initial clauses: 270
% 
% Selected by SInE selection: 91
% SInE iterations: 1
% 
% Duplicate literals: 111
% Trivial inequalities: 144
% Fw subsumption resolutions: 708
% Fw demodulations: 682
% Bw demodulations: 26
% 
% Simple tautologies: 304
% Equational tautologies: 2
% Forward subsumptions: 2403
% 
% Binary resolution: 1708
% Forward superposition: 3104
% Backward superposition: 1073
% Self superposition: 2
% Equality resolution: 3
% 
% Split clauses: 303
% Split components: 609
% SAT solver clauses: 334
% SAT solver unit clauses: 21
% SAT solver binary clauses: 10
% 
% Sat splits: 303
% Sat splitting refutations: 30
% 
% Memory used [KB]: 4349
% Time elapsed: 0.141 s
% ------------------------------
% ------------------------------
% Success in time 11.855 s
