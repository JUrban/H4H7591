Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.divides
% (54934)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 726
% Passive clauses: 9382
% Generated clauses: 23538
% Final active clauses: 695
% Final passive clauses: 8113
% Input formulas: 66
% Initial clauses: 243
% 
% Duplicate literals: 292
% Trivial inequalities: 60
% Fw subsumption resolutions: 1452
% Fw demodulations: 814
% Bw demodulations: 28
% 
% Simple tautologies: 266
% Equational tautologies: 61
% Forward subsumptions: 11049
% Fw demodulations to eq. taut.: 8
% 
% Binary resolution: 10292
% Factoring: 1060
% Forward superposition: 3955
% Backward superposition: 5225
% Self superposition: 65
% Equality factoring: 26
% Equality resolution: 18
% 
% Split clauses: 322
% Split components: 647
% SAT solver clauses: 647
% SAT solver unit clauses: 24
% SAT solver binary clauses: 134
% 
% Sat splits: 322
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 645
% TWLsolver calls for satisfiability: 411
% 
% Memory used [KB]: 11769
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.divides
% (54965)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 455
% Passive clauses: 2259
% Generated clauses: 22502
% Final active clauses: 285
% Final passive clauses: 780
% Input formulas: 66
% Initial clauses: 243
% 
% Duplicate literals: 86
% Trivial inequalities: 147
% Fw subsumption resolutions: 751
% Fw demodulations: 4645
% Bw demodulations: 1018
% Condensations: 72
% Global subsumptions: 22
% 
% Simple tautologies: 267
% Equational tautologies: 10
% Forward subsumptions: 9261
% Fw demodulations to eq. taut.: 34
% Bw demodulations to eq. taut.: 26
% 
% Binary resolution: 1343
% Factoring: 115
% Forward superposition: 4523
% Backward superposition: 4013
% Self superposition: 76
% Equality factoring: 2
% Equality resolution: 32
% 
% Split clauses: 79
% Split components: 159
% SAT solver clauses: 3375
% SAT solver unit clauses: 264
% SAT solver binary clauses: 126
% SAT solver learnt clauses: 55
% SAT solver learnt literals: 46
% 
% Sat splits: 79
% Sat splitting refutations: 162
% 
% TWLsolver clauses: 3276
% TWLsolver calls for satisfiability: 2247
% 
% Memory used [KB]: 14967
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.divides
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.divides
% SZS output start Proof for thm.divides
fof(f33413,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f320,f589,f319,f591,f587,f318,f588,f590,f586,f601,f603,f2593,f2607,f2605,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6167,f6170,f6173,f6176,f6179,f6219,f6106,f6221,f6110,f6223,f6113,f6225,f6116,f6227,f6119,f6230,f6123,f6232,f6126,f6234,f6129,f6236,f6132,f6238,f6135,f6240,f6138,f6242,f6141,f6244,f6144,f6246,f6147,f6248,f6150,f6250,f6153,f6252,f6156,f6254,f6159,f6256,f6162,f6258,f6165,f6260,f6168,f6262,f6171,f6264,f6174,f6266,f6177,f6268,f6107,f6180,f6313,f6314,f6316,f6318,f6320,f6322,f6324,f6326,f6328,f6330,f6332,f6334,f6336,f6338,f6340,f6342,f6343,f6345,f6346,f7673,f7778,f7777,f7676,f7677,f7781,f7780,f7834,f9709,f9824,f9823,f9712,f9713,f9827,f9716,f9828,f9826,f9989,f11042,f11043,f11045,f11046,f11047,f11048,f11049,f11050,f11051,f11052,f11053,f11054,f11055,f11056,f11057,f11058,f11059,f11060,f11061,f11062,f11063,f11064,f11065,f11066,f11067,f11068,f11069,f11070,f11071,f11072,f11073,f11074,f11075,f11076,f11077,f11078,f11079,f11080,f11081,f11082,f11083,f11089,f11185,f11186,f11242,f11270,f11275,f11278,f11280,f11282,f11284,f11286,f11288,f11290,f11292,f11294,f11296,f11298,f11300,f11302,f11304,f11306,f11308,f11310,f11327,f11328,f11333,f11334,f11335,f11336,f11337,f11499,f11502,f11505,f11508,f11511,f11538,f11546,f11557,f11566,f11567,f11568,f11570,f11571,f11572,f11573,f11574,f11576,f11578,f11579,f11580,f11581,f11585,f11586,f11589,f11592,f11593,f11595,f11598,f11601,f11602,f11603,f11604,f11605,f11606,f11607,f11608,f11609,f11611,f11612,f11614,f11615,f11618,f11625,f11626,f11627,f11628,f11629,f11630,f11632,f11633,f11634,f11635,f11636,f11637,f11638,f11639,f11642,f11643,f11646,f11647,f11649,f11650,f11651,f11652,f11653,f11654,f11657,f11659,f11660,f11661,f11665,f11666,f11667,f11668,f11670,f11671,f11672,f11673,f11676,f11679,f11682,f11683,f11686,f11687,f11747,f11756,f11757,f11765,f11766,f11813,f11824,f11837,f11863,f11864,f11865,f11869,f12396,f12397,f12399,f12400,f12401,f12402,f12403,f12404,f12405,f12406,f12407,f12408,f12409,f12410,f12411,f12412,f12413,f12414,f12415,f12416,f12417,f12418,f12419,f12420,f12421,f12422,f12423,f12424,f12425,f12426,f12427,f12428,f12429,f12430,f12431,f12432,f12433,f12434,f12435,f12436,f12437,f12447,f12552,f12553,f12554,f12610,f12639,f12644,f12647,f12649,f12651,f12653,f12655,f12657,f12659,f12661,f12663,f12665,f12667,f12669,f12671,f12673,f12675,f12677,f12679,f12695,f12696,f12701,f12702,f12703,f12704,f12709,f12737,f12740,f12743,f12746,f12749,f12967,f12970,f12984,f12986,f13002,f13008,f13011,f13014,f13017,f13020,f13190,f13194,f13197,f13201,f13205,f13209,f13211,f13213,f13215,f13219,f13221,f13223,f13225,f13230,f13234,f13238,f13242,f13246,f13248,f13250,f13252,f13254,f13256,f13258,f13263,f13265,f13271,f13273,f13279,f13281,f13283,f13285,f13290,f13292,f13294,f13296,f13300,f13302,f13304,f13306,f13308,f13310,f13324,f13330,f13333,f13335,f13339,f13341,f13343,f13345,f13347,f13349,f13351,f13353,f13355,f13357,f13363,f13369,f13373,f13380,f13385,f13387,f13395,f13397,f13399,f13401,f13405,f13409,f13411,f13413,f13416,f13418,f13420,f13422,f13424,f13444,f13456,f13471,f18122,f18125,f18123,f20158,f20160,f20159,f20162,f20164,f20166,f20172,f20180,f20182,f20184,f20186,f20190,f20192,f20194,f20196,f20198,f20200,f20212,f20214,f20226,f20228,f20239,f20250,f20258,f20260,f20269,f20278,f20286,f20288,f20296,f20298,f20306,f20308,f20317,f20326,f20347,f20376,f20424,f20426,f20695,f20699,f20733,f20743,f20755,f20765,f20767,f20779,f20789,f20801,f20811,f20813,f20815,f20817,f20819,f21721,f21722,f21723,f21724,f20835,f20837,f20839,f20841,f20843,f20845,f20847,f20849,f20878,f20880,f20882,f20884,f20896,f20908,f20926,f20928,f20940,f20942,f20944,f20946,f20966,f20968,f20980,f20982,f20984,f20986,f21000,f21010,f21022,f21032,f21034,f21050,f21052,f21060,f21062,f21078,f21080,f21088,f21090,f21106,f21108,f21116,f21118,f21131,f21143,f21156,f21168,f21182,f21196,f21218,f21222,f21248,f21253,f21255,f21269,f21271,f21273,f21282,f21284,f21293,f21295,f21304,f21306,f21315,f21317,f21333,f21344,f21363,f21367,f21377,f21379,f21381,f21385,f21387,f21427,f21429,f21431,f21433,f21435,f21437,f21439,f21441,f21467,f21469,f21471,f21473,f21499,f21501,f21503,f21505,f21525,f21527,f21547,f21549,f21551,f21560,f21569,f21578,f21580,f21589,f21591,f21603,f21614,f21627,f21638,f21647,f21649,f21651,f21653,f21655,f21657,f21659,f21661,f21670,f21672,f21674,f21676,f21678,f21680,f21682,f21684,f21686,f21688,f21690,f21692,f21694,f21696,f21698,f21700,f21702,f21704,f23571,f23572,f23577,f23578,f23579,f23580,f23581,f23582,f23583,f23584,f23589,f23590,f23595,f23596,f23668,f23671,f23674,f23677,f23681,f23684,f23687,f23690,f23695,f23697,f23699,f23702,f23704,f23706,f23708,f23712,f23716,f23720,f23723,f23727,f23728,f23779,f23793,f23798,f23803,f23805,f23807,f23809,f23811,f23813,f23816,f23818,f23820,f23822,f23824,f23826,f23828,f23830,f23832,f23834,f23836,f23838,f23846,f23851,f23855,f23857,f23858,f23859,f23860,f23861,f23862,f23863,f23864,f23865,f23866,f23867,f23868,f23869,f23870,f23871,f23872,f23873,f23874,f23875,f23876,f23877,f23878,f23879,f23880,f23881,f23882,f23883,f23884,f23885,f23886,f23888,f23889,f23890,f23892,f23893,f23895,f23896,f23897,f23898,f23899,f23900,f23901,f23902,f23903,f23904,f23905,f23906,f23907,f23908,f23909,f23910,f23911,f23912,f23913,f23914,f23915,f23917,f23919,f23920,f23921,f23922,f23923,f23925,f23936,f23937,f23938,f23940,f23943,f23946,f23948,f23951,f23953,f23955,f23958,f23960,f23964,f23966,f23968,f23970,f23978,f23980,f23982,f23986,f23990,f23996,f24002,f24004,f24006,f24008,f24010,f24012,f24014,f24016,f24018,f24020,f24022,f24028,f24042,f24044,f24046,f24048,f24050,f24052,f24056,f24058,f24060,f24062,f24067,f24069,f24071,f24073,f24078,f24080,f24082,f24088,f24090,f24095,f24097,f24099,f24101,f24103,f24105,f24202,f24205,f24215,f24217,f24227,f24230,f24250,f24252,f24253,f24254,f24255,f24257,f24258,f24259,f24260,f24261,f24262,f24263,f24264,f24265,f24266,f24267,f24268,f24269,f24270,f24271,f24272,f24273,f24274,f24275,f24276,f24277,f24278,f24279,f24280,f24281,f24282,f24283,f24284,f24285,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24293,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24302,f24303,f24304,f24305,f24306,f24307,f24308,f24309,f24310,f24311,f24312,f24313,f24314,f24315,f24316,f24317,f24318,f24324,f24325,f24326,f24327,f24328,f24329,f24334,f24335,f24336,f24337,f24338,f24339,f24340,f24341,f24342,f24343,f24344,f24345,f24346,f24347,f24348,f24349,f24350,f24351,f24352,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24360,f24361,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24370,f24371,f24372,f24373,f24374,f24375,f24376,f24377,f24378,f24379,f24380,f24381,f24382,f24383,f24384,f24385,f24386,f24387,f24388,f24389,f24390,f24391,f24392,f24393,f24394,f24395,f24396,f24397,f24398,f24399,f24400,f24401,f24402,f24403,f24404,f24405,f24406,f24407,f24408,f24409,f24410,f24411,f24412,f24413,f24414,f24415,f24416,f24417,f24418,f24419,f24420,f24421,f24422,f24423,f24424,f24425,f24426,f24427,f24428,f24429,f24430,f24431,f24432,f24433,f24434,f24435,f24436,f24437,f24438,f24439,f24440,f24441,f24442,f24443,f24444,f24445,f24446,f24447,f24448,f24449,f24450,f24451,f24452,f24453,f24454,f24455,f24456,f24457,f24458,f24459,f24460,f24461,f24462,f24463,f24464,f24465,f24466,f24467,f24468,f24469,f24470,f24471,f24472,f24473,f24474,f24475,f24476,f24477,f24478,f24479,f24480,f24481,f24482,f24483,f24484,f24485,f24486,f24487,f24488,f24489,f24490,f24491,f24492,f24493,f24494,f24495,f24496,f24497,f24498,f24499,f24500,f24501,f24502,f24503,f24504,f24505,f24506,f24507,f24508,f24509,f24510,f24511,f24512,f24513,f24514,f24515,f24516,f24517,f24518,f24519,f24520,f24521,f24522,f24523,f24524,f24525,f24526,f24527,f24528,f24529,f24530,f24531,f24532,f24533,f24534,f24535,f24536,f24537,f24538,f24539,f24540,f24541,f24542,f24543,f24544,f24545,f24546,f24547,f24548,f24549,f24550,f24551,f24552,f24553,f24554,f24555,f24556,f24557,f24558,f24559,f24560,f24561,f24562,f24563,f24564,f24565,f24566,f24567,f24568,f24569,f24570,f24571,f24572,f24573,f24574,f24575,f24576,f24577,f24578,f24579,f24580,f24581,f24582,f24583,f24584,f24585,f24599,f24603,f24605,f24606,f24608,f24609,f24610,f24611,f24612,f24613,f24614,f24615,f24616,f24617,f24618,f24619,f24620,f24621,f24622,f24623,f24624,f24625,f24626,f24627,f24628,f24629,f24630,f24631,f24632,f24633,f24634,f24635,f24636,f24637,f24638,f24639,f24640,f24641,f24642,f24643,f24644,f24645,f24646,f24647,f24648,f24656,f24662,f24665,f24666,f24711,f24714,f24718,f24719,f24724,f24726,f24727,f24728,f24730,f24731,f24732,f24735,f24816,f24817,f24827,f24828,f24829,f24830,f24831,f24832,f24833,f24834,f24835,f24836,f24837,f24838,f24839,f24840,f24841,f24842,f24843,f24844,f24845,f24846,f24847,f24848,f24849,f24850,f24851,f24852,f24853,f24854,f24855,f24856,f24857,f24858,f24859,f24860,f24861,f24862,f24863,f24864,f24865,f24866,f24867,f24868,f24869,f24870,f24871,f24872,f24873,f24874,f24875,f24876,f24877,f24878,f24879,f24880,f24881,f24882,f24883,f24884,f24885,f24886,f24887,f24888,f24889,f24890,f24891,f24892,f24893,f24894,f24895,f24896,f24897,f24898,f24899,f24900,f24901,f24902,f24903,f24904,f24905,f24906,f24907,f24908,f24909,f24910,f24911,f24912,f24913,f24914,f31101,f31103,f18124,f31102,f31121,f31122,f31129,f31126,f31123,f31124,f31132,f31125,f31134,f31127,f31131,f32305,f32306,f32318,f32316,f33409])).
fof(f33409,plain,(
  $false | ($spl0 | $spl3 | $spl5)),
  inference(subsumption_resolution,[],[f33408,f3072])).
fof(f3072,plain,(
  ( ! [X0] : (s('type.num.num',sK15) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X0)))))) ) | ($spl3 | $spl5)),
  inference(forward_demodulation,[],[f3027,f333])).
fof(f333,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.arithmetic.MULT_RIGHT_|49|')).
fof(f3027,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X0)))))) ) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f2572,f591,f450])).
fof(f450,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X1) = s('type.num.num',X2)) )),
  inference(cnf_transformation,[],[f268])).
fof(f268,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X1) = s('type.num.num',X2)) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & s('type.num.num',X1) != s('type.num.num',X2)) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(flattening,[],[f267])).
fof(f267,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X1) = s('type.num.num',X2))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & s('type.num.num',X1) != s('type.num.num',X2)) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(nnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X1) = s('type.num.num',X2)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X7,X6,X8] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) | s('type.num.num',X6) = s('type.num.num',X8)))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.arithmetic.EQ_MULT_LCANCEL')).
fof(f2572,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X0)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f589,f420])).
fof(f420,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(cnf_transformation,[],[f255])).
fof(f255,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) | (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) & s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & (s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(flattening,[],[f254])).
fof(f254,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) | (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) & s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & ((s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) <=> (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) & s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X9,X10] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X10))) <=> (s('type.num.num',X9) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) & s('type.num.num',X10) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.arithmetic.MULT_EQ_|49|')).
fof(f33408,plain,(
  s('type.num.num',sK15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK16(sK15,'const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK14)))))))) | $spl0),
  inference(subsumption_resolution,[],[f33161,f321])).
fof(f321,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.divides.DIVIDES_MULT_LEFT',aHL_TRUTH)).
fof(f33161,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK16(sK15,'const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK14)))))))) | $spl0),
  inference(superposition,[],[f2038,f668])).
fof(f668,plain,(
  s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | $spl0),
  inference(unit_resulting_resolution,[],[f586,f344])).
fof(f344,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f211])).
fof(f211,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.bool.EQ_CLAUSES|split|1')).
fof(f2038,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4))),s('type.num.num',X6)))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',sK16(X6,'const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))))))) )),
  inference(forward_demodulation,[],[f2020,f449])).
fof(f449,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X7,X6,X8] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X8)))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.arithmetic.MULT_ASSOC')).
fof(f2020,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4))),s('type.num.num',X6)))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.num.num',sK16(X6,'const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))))) )),
  inference(superposition,[],[f593,f405])).
fof(f405,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7,X6] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.arithmetic.MULT_SYM')).
fof(f593,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK16(X1,X0))))) )),
  inference(forward_demodulation,[],[f418,f405])).
fof(f418,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16(X1,X0)),s('type.num.num',X0))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f253])).
fof(f253,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16(X1,X0)),s('type.num.num',X0)))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16])],[f252])).
fof(f252,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ? [X3] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X0)))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(rectify,[],[f251])).
fof(f251,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ? [X2] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> ? [X2] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X23,X24] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X23),s('type.num.num',X24)))) <=> ? [X25] : s('type.num.num',X24) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num',X23))))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.divides.divides_def')).
fof(f32316,plain,(
  ( ! [X2,X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,X2) = s(bool,sK17(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK17(X0,X1,bool,bool))))) ) | $spl100),
  inference(cnf_transformation,[],[f32316_D])).
fof(f32316_D,plain,(
  ( ! [X2,X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,X2) = s(bool,sK17(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK17(X0,X1,bool,bool))))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f32318,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | $spl103),
  inference(cnf_transformation,[],[f32318_D])).
fof(f32318_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) <=> ~$spl103),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl103])])).
fof(f32306,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,g(s(bool,sK17(X3,X4,bool,bool)))) | s(bool,X5) = s(bool,sK17(X3,X4,bool,bool)) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f3017,f959])).
fof(f959,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f336,f336])).
fof(f336,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.divides.DIVIDES_MULT_LEFT',aHL_BOOL_CASES)).
fof(f3017,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK17(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK17(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f448,f336])).
fof(f448,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK17(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK17(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f266])).
fof(f266,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK17(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK17(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK17])],[f177])).
fof(f177,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f137])).
fof(f137,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.divides.DIVIDES_MULT_LEFT',aHL_EXT)).
fof(f32305,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,g(s(bool,sK17(X0,X1,bool,bool)))) | s(bool,X2) = s(bool,sK17(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f3017,f959])).
fof(f31131,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl94),
  inference(cnf_transformation,[],[f31131_D])).
fof(f31131_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f31127,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK17(X0,X1,bool,bool))) ) | $spl90),
  inference(cnf_transformation,[],[f31127_D])).
fof(f31127_D,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK17(X0,X1,bool,bool))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f31134,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | $spl99),
  inference(cnf_transformation,[],[f31134_D])).
fof(f31134_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl99),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl99])])).
fof(f31125,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X12) = s(fun(bool,bool),X13) | s(bool,'T_0') = s(bool,sK17(X12,X13,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f3016,f336])).
fof(f3016,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK17(X0,X1,X2,bool))) )),
  inference(superposition,[],[f448,f336])).
fof(f31132,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl96),
  inference(cnf_transformation,[],[f31132_D])).
fof(f31132_D,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f31124,plain,(
  ( ! [X10,X11,X9] : (s(bool,X9) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'T_0') = s(bool,sK17(X10,X11,bool,bool)) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f3016,f959])).
fof(f31123,plain,(
  ( ! [X6,X8,X7] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'T_0') = s(bool,sK17(X7,X8,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f3016,f959])).
fof(f31126,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl88),
  inference(cnf_transformation,[],[f31126_D])).
fof(f31126_D,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f31129,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl93),
  inference(cnf_transformation,[],[f31129_D])).
fof(f31129_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl93),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl93])])).
fof(f31122,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,sK17(X3,X4,bool,bool)) | s(bool,X5) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f3016,f959])).
fof(f31121,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK17(X0,X1,bool,bool)) | s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f3016,f959])).
fof(f31102,plain,(
  ( ! [X21,X19,X17,X18] : (s('type.num.num',X19) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X17))))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X18))),s('type.num.num',X19)))) ) | $spl86),
  inference(cnf_transformation,[],[f31102_D])).
fof(f31102_D,plain,(
  ( ! [X21,X19,X17,X18] : (s('type.num.num',X19) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X17))))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X18))),s('type.num.num',X19)))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f18124,plain,(
  ( ! [X22] : (p(s(bool,X22))) ) | $spl82),
  inference(cnf_transformation,[],[f18124_D])).
fof(f18124_D,plain,(
  ( ! [X22] : (p(s(bool,X22))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f31103,plain,(
  ( ! [X26,X24,X23,X25,X22] : (p(s(bool,X25)) | s('type.num.num',X24) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X22))))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X23))),s('type.num.num',X24)))) )),
  inference(subsumption_resolution,[],[f30977,f343])).
fof(f343,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f211])).
fof(f30977,plain,(
  ( ! [X26,X24,X23,X25,X22] : (p(s(bool,X25)) | s('type.num.num',X24) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X22))))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X23))),s('type.num.num',X24)))) )),
  inference(superposition,[],[f1976,f959])).
fof(f1976,plain,(
  ( ! [X6,X8,X7,X9] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X8)))) | s('type.num.num',X8) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6)))))) )),
  inference(superposition,[],[f419,f405])).
fof(f419,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f253])).
fof(f31101,plain,(
  ( ! [X21,X19,X17,X20,X18] : (p(s(bool,X20)) | s('type.num.num',X19) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X17))))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X18))),s('type.num.num',X19)))) )),
  inference(subsumption_resolution,[],[f30976,f343])).
fof(f30976,plain,(
  ( ! [X21,X19,X17,X20,X18] : (p(s(bool,X20)) | s('type.num.num',X19) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X17))))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X18))),s('type.num.num',X19))) | s(bool,'T_0') = s(bool,X20)) )),
  inference(superposition,[],[f1976,f959])).
fof(f24914,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20165,f20188])).
fof(f20188,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f18124,f417])).
fof(f417,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f250])).
fof(f250,plain,(
  ! [X0,X1] : ((s(bool,X0) != s(bool,X1) | ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0))))) & ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(flattening,[],[f249])).
fof(f249,plain,(
  ! [X0,X1] : ((s(bool,X0) != s(bool,X1) | ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0))))) & (((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0)))) | s(bool,X0) = s(bool,X1)))),
  inference(nnf_transformation,[],[f172])).
fof(f172,plain,(
  ! [X0,X1] : (s(bool,X0) = s(bool,X1) <=> ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0)))))),
  inference(ennf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0,X1] : (s(bool,X0) = s(bool,X1) <=> ((p(s(bool,X0)) => p(s(bool,X1))) & (p(s(bool,X1)) => p(s(bool,X0)))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X18,X19] : (s(bool,X18) = s(bool,X19) <=> ((p(s(bool,X18)) => p(s(bool,X19))) & (p(s(bool,X19)) => p(s(bool,X18)))))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.bool.EQ_IMP_THM')).
fof(f20165,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f347])).
fof(f347,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f213])).
fof(f213,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f88])).
fof(f88,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.bool.EQ_CLAUSES|split|3')).
fof(f24913,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20167,f20188])).
fof(f20167,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124,f413])).
fof(f413,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f250])).
fof(f592,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f324,f321])).
fof(f324,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f209])).
fof(f209,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f36])).
fof(f36,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.bool.NOT_CLAUSES|split|1')).
fof(f24912,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20179,f321])).
fof(f20179,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f665,f18124,f417])).
fof(f665,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f592,f343])).
fof(f24911,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20181,f321])).
fof(f20181,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5218,f18124,f417])).
fof(f5218,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5191,f413])).
fof(f5191,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | $spl5),
  inference(unit_resulting_resolution,[],[f591,f2035])).
fof(f2035,plain,(
  ( ! [X1] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) )),
  inference(forward_demodulation,[],[f2034,f330])).
fof(f330,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.arithmetic.MULT_|48|')).
fof(f2034,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f2033,f332])).
fof(f332,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X7] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.arithmetic.MULT_CLAUSES|split|0')).
fof(f2033,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK16(X1,'const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f2018,f449])).
fof(f2018,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK16(X1,'const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f593,f330])).
fof(f24910,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20183,f18124])).
fof(f20183,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f665,f18124,f417])).
fof(f24909,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20185,f18124])).
fof(f20185,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5218,f18124,f417])).
fof(f24908,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20189,f321])).
fof(f20189,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f665,f18124,f417])).
fof(f24907,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20191,f321])).
fof(f20191,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5218,f18124,f417])).
fof(f24906,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20193,f18124])).
fof(f20193,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f665,f18124,f417])).
fof(f24905,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20195,f18124])).
fof(f20195,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5218,f18124,f417])).
fof(f24904,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20201,f18124])).
fof(f20201,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f682,f18124,f439])).
fof(f439,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f264])).
fof(f264,plain,(
  ! [X0,X1] : ((~sP1(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1)))),
  inference(rectify,[],[f263])).
fof(f263,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0)))),
  inference(flattening,[],[f262])).
fof(f262,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP1(X1,X0)))),
  inference(nnf_transformation,[],[f186])).
fof(f186,plain,(
  ! [X1,X0] : (sP1(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f682,plain,(
  sP1('T_0','F_0')),
  inference(unit_resulting_resolution,[],[f592,f321,f440])).
fof(f440,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f264])).
fof(f24903,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20202,f18124])).
fof(f20202,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5227,f18124,f439])).
fof(f5227,plain,(
  sP1('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5191,f440])).
fof(f24902,plain,(
  $false | ($spl5 | $spl10 | $spl82)),
  inference(subsumption_resolution,[],[f20203,f18124])).
fof(f20203,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))))) | ($spl5 | $spl10 | $spl82)),
  inference(unit_resulting_resolution,[],[f17914,f18124,f439])).
fof(f17914,plain,(
  sP1('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | ($spl5 | $spl10)),
  inference(unit_resulting_resolution,[],[f5192,f6106])).
fof(f5192,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))))) | $spl5),
  inference(unit_resulting_resolution,[],[f3074,f2035])).
fof(f3074,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) | $spl5),
  inference(forward_demodulation,[],[f3025,f330])).
fof(f3025,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f591,f591,f450])).
fof(f24901,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f20204,f18124])).
fof(f20204,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ($spl3 | $spl82)),
  inference(unit_resulting_resolution,[],[f2634,f18124,f439])).
fof(f2634,plain,(
  sP1('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f321,f2608,f440])).
fof(f2608,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f2572,f593])).
fof(f24900,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20205,f321])).
fof(f20205,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f687,f18124,f439])).
fof(f687,plain,(
  sP1('F_0','T_0')),
  inference(unit_resulting_resolution,[],[f592,f321,f443])).
fof(f443,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f264])).
fof(f24899,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f20206,f18124])).
fof(f20206,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f736,f18124,f439])).
fof(f736,plain,(
  sP1('F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f705])).
fof(f705,plain,(
  ( ! [X3] : (sP1(X3,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | p(s(bool,X3))) ) | $spl0),
  inference(subsumption_resolution,[],[f698,f321])).
fof(f698,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,X3)) | sP1(X3,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(superposition,[],[f443,f668])).
fof(f24898,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20207,f321])).
fof(f20207,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5228,f18124,f439])).
fof(f5228,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5191,f443])).
fof(f24897,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f20208,f18124])).
fof(f20208,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f723,f18124,f439])).
fof(f723,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f592,f704])).
fof(f704,plain,(
  ( ! [X2] : (sP1('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X2) | p(s(bool,X2))) ) | $spl0),
  inference(subsumption_resolution,[],[f697,f321])).
fof(f697,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,X2)) | sP1('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X2)) ) | $spl0),
  inference(superposition,[],[f440,f668])).
fof(f24896,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f20209,f321])).
fof(f20209,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl82)),
  inference(unit_resulting_resolution,[],[f2635,f18124,f439])).
fof(f2635,plain,(
  sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f321,f2608,f443])).
fof(f24895,plain,(
  $false | ($spl5 | $spl14 | $spl82)),
  inference(subsumption_resolution,[],[f20210,f321])).
fof(f20210,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl14 | $spl82)),
  inference(unit_resulting_resolution,[],[f17915,f18124,f439])).
fof(f17915,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'T_0') | ($spl5 | $spl14)),
  inference(unit_resulting_resolution,[],[f5192,f6110])).
fof(f24894,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20215,f321])).
fof(f20215,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f682,f18124,f439])).
fof(f24893,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20216,f321])).
fof(f20216,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5227,f18124,f439])).
fof(f24892,plain,(
  $false | ($spl5 | $spl10 | $spl82)),
  inference(subsumption_resolution,[],[f20217,f321])).
fof(f20217,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl10 | $spl82)),
  inference(unit_resulting_resolution,[],[f17914,f18124,f439])).
fof(f24891,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f20218,f321])).
fof(f20218,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl82)),
  inference(unit_resulting_resolution,[],[f2634,f18124,f439])).
fof(f24890,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20219,f18124])).
fof(f20219,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f687,f18124,f439])).
fof(f24889,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f20220,f18124])).
fof(f20220,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f736,f18124,f439])).
fof(f24888,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20221,f18124])).
fof(f20221,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5228,f18124,f439])).
fof(f24887,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f20222,f18124])).
fof(f20222,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f723,f18124,f439])).
fof(f24886,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f20223,f18124])).
fof(f20223,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ($spl3 | $spl82)),
  inference(unit_resulting_resolution,[],[f2635,f18124,f439])).
fof(f24885,plain,(
  $false | ($spl5 | $spl14 | $spl82)),
  inference(subsumption_resolution,[],[f20224,f18124])).
fof(f20224,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))))) | ($spl5 | $spl14 | $spl82)),
  inference(unit_resulting_resolution,[],[f17915,f18124,f439])).
fof(f24884,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20251,f18124])).
fof(f20251,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f726,f18124,f456])).
fof(f456,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | sP2(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f271])).
fof(f271,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | ((p(s(bool,X1)) | p(s(bool,X2))) & (p(s(bool,X1)) | p(s(bool,X0))))) & ((~p(s(bool,X1)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(rectify,[],[f270])).
fof(f270,plain,(
  ! [X2,X0,X1] : ((~sP2(X2,X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X2))) | sP2(X2,X0,X1)))),
  inference(flattening,[],[f269])).
fof(f269,plain,(
  ! [X2,X0,X1] : ((~sP2(X2,X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2))))) & (((~p(s(bool,X0)) & ~p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X2)))) | sP2(X2,X0,X1)))),
  inference(nnf_transformation,[],[f188])).
fof(f188,plain,(
  ! [X2,X0,X1] : (sP2(X2,X0,X1) <=> ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f726,plain,(
  ( ! [X0] : (~sP2(X0,'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f592,f453])).
fof(f453,plain,(
  ( ! [X2,X0,X1] : (~sP2(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f271])).
fof(f24883,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20252,f18124])).
fof(f20252,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5233,f18124,f456])).
fof(f5233,plain,(
  ( ! [X0] : (~sP2(X0,'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f453])).
fof(f24882,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20253,f18124])).
fof(f20253,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f733,f18124,f456])).
fof(f733,plain,(
  ( ! [X0] : (~sP2('F_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f592,f592,f454])).
fof(f454,plain,(
  ( ! [X2,X0,X1] : (~sP2(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f271])).
fof(f24881,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20254,f18124])).
fof(f20254,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5239,f18124,f456])).
fof(f5239,plain,(
  ( ! [X0] : (~sP2('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f454])).
fof(f24880,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20255,f18124])).
fof(f20255,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5229,f18124,f456])).
fof(f5229,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f453])).
fof(f24879,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20256,f18124])).
fof(f20256,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5245,f18124,f456])).
fof(f5245,plain,(
  ( ! [X0] : (~sP2('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f454])).
fof(f24878,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20261,f18124])).
fof(f20261,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f726,f18124,f456])).
fof(f24877,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20262,f18124])).
fof(f20262,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5233,f18124,f456])).
fof(f24876,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20263,f18124])).
fof(f20263,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f733,f18124,f456])).
fof(f24875,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20264,f18124])).
fof(f20264,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5239,f18124,f456])).
fof(f24874,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20265,f18124])).
fof(f20265,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5229,f18124,f456])).
fof(f24873,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20266,f18124])).
fof(f20266,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5245,f18124,f456])).
fof(f24872,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20270,f18124])).
fof(f20270,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f726,f18124,f457])).
fof(f457,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | sP2(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f271])).
fof(f24871,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20271,f18124])).
fof(f20271,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5233,f18124,f457])).
fof(f24870,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20272,f18124])).
fof(f20272,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f733,f18124,f457])).
fof(f24869,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20273,f18124])).
fof(f20273,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5239,f18124,f457])).
fof(f24868,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20274,f18124])).
fof(f20274,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5229,f18124,f457])).
fof(f24867,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20275,f18124])).
fof(f20275,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5245,f18124,f457])).
fof(f24866,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20279,f18124])).
fof(f20279,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f726,f18124,f457])).
fof(f24865,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20280,f18124])).
fof(f20280,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5233,f18124,f457])).
fof(f24864,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20281,f18124])).
fof(f20281,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f733,f18124,f457])).
fof(f24863,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20282,f18124])).
fof(f20282,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5239,f18124,f457])).
fof(f24862,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20283,f18124])).
fof(f20283,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5229,f18124,f457])).
fof(f24861,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20284,f18124])).
fof(f20284,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5245,f18124,f457])).
fof(f24860,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20289,f18124])).
fof(f20289,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f726,f18124,f458])).
fof(f458,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP2(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f271])).
fof(f24859,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20290,f18124])).
fof(f20290,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5233,f18124,f458])).
fof(f24858,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20291,f18124])).
fof(f20291,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f733,f18124,f458])).
fof(f24857,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20292,f18124])).
fof(f20292,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5239,f18124,f458])).
fof(f24856,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20293,f18124])).
fof(f20293,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5229,f18124,f458])).
fof(f24855,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20294,f18124])).
fof(f20294,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5245,f18124,f458])).
fof(f24854,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20299,f18124])).
fof(f20299,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f726,f18124,f458])).
fof(f24853,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20300,f18124])).
fof(f20300,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5233,f18124,f458])).
fof(f24852,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20301,f18124])).
fof(f20301,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f733,f18124,f458])).
fof(f24851,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20302,f18124])).
fof(f20302,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5239,f18124,f458])).
fof(f24850,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20303,f18124])).
fof(f20303,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5229,f18124,f458])).
fof(f24849,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20304,f18124])).
fof(f20304,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5245,f18124,f458])).
fof(f24848,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20316,f21689])).
fof(f21689,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f576])).
fof(f576,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(duplicate_literal_removal,[],[f474])).
fof(f474,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f278])).
fof(f278,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | ((~p(s(bool,X2)) | p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0))))) & ((p(s(bool,X2)) & ~p(s(bool,X0))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f277])).
fof(f277,plain,(
  ! [X2,X1,X0] : ((~sP3(X2,X1,X0) | ((~p(s(bool,X0)) | p(s(bool,X2))) & (~p(s(bool,X1)) | p(s(bool,X2))))) & ((p(s(bool,X0)) & ~p(s(bool,X2))) | (p(s(bool,X1)) & ~p(s(bool,X2))) | sP3(X2,X1,X0)))),
  inference(flattening,[],[f276])).
fof(f276,plain,(
  ! [X2,X1,X0] : ((~sP3(X2,X1,X0) | ((~p(s(bool,X0)) | p(s(bool,X2))) & (~p(s(bool,X1)) | p(s(bool,X2))))) & (((p(s(bool,X0)) & ~p(s(bool,X2))) | (p(s(bool,X1)) & ~p(s(bool,X2)))) | sP3(X2,X1,X0)))),
  inference(nnf_transformation,[],[f190])).
fof(f190,plain,(
  ! [X2,X1,X0] : (sP3(X2,X1,X0) <=> ((~p(s(bool,X0)) | p(s(bool,X2))) & (~p(s(bool,X1)) | p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f20316,plain,(
  ( ! [X0,X1] : (~sP3('F_0',X0,X1)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124,f469])).
fof(f469,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X0)) | ~sP3(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f278])).
fof(f24847,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20325,f21689])).
fof(f20325,plain,(
  ( ! [X0,X1] : (~sP3('F_0',X0,X1)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124,f470])).
fof(f470,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | ~sP3(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f278])).
fof(f24846,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20327,f321])).
fof(f20327,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1071,f592,f18124,f482])).
fof(f482,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f283])).
fof(f283,plain,(
  ! [X0,X1,X2] : ((~sP7(X0,X1,X2) | (sP4(X2,X1,X0) & sP5(X1,X2,X0) & sP6(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP4(X2,X1,X0) | ~sP5(X1,X2,X0) | ~sP6(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP7(X0,X1,X2)))),
  inference(rectify,[],[f282])).
fof(f282,plain,(
  ! [X2,X1,X0] : ((~sP7(X2,X1,X0) | (sP4(X0,X1,X2) & sP5(X1,X0,X2) & sP6(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP4(X0,X1,X2) | ~sP5(X1,X0,X2) | ~sP6(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP7(X2,X1,X0)))),
  inference(flattening,[],[f281])).
fof(f281,plain,(
  ! [X2,X1,X0] : ((~sP7(X2,X1,X0) | (sP4(X0,X1,X2) & sP5(X1,X0,X2) & sP6(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP4(X0,X1,X2) | ~sP5(X1,X0,X2) | ~sP6(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP7(X2,X1,X0)))),
  inference(nnf_transformation,[],[f195])).
fof(f195,plain,(
  ! [X2,X1,X0] : (sP7(X2,X1,X0) <=> (sP4(X0,X1,X2) & sP5(X1,X0,X2) & sP6(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f1071,plain,(
  sP7('F_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f592,f665,f498])).
fof(f498,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f292])).
fof(f292,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP7(X2,X1,X0)) & (~sP7(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f196])).
fof(f196,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP7(X2,X1,X0))),
  inference(definition_folding,[],[f145,f195,f194,f193,f192])).
fof(f192,plain,(
  ! [X0,X1,X2] : (sP4(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f193,plain,(
  ! [X1,X0,X2] : (sP5(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f194,plain,(
  ! [X2,X0,X1] : (sP6(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f145,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f144])).
fof(f144,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f58])).
fof(f58,axiom,(
  ! [X26,X25,X8] : ((p(s(bool,X8)) <=> s(bool,X25) = s(bool,X26)) <=> ((p(s(bool,X8)) | p(s(bool,X25)) | p(s(bool,X26))) & (p(s(bool,X8)) | ~p(s(bool,X26)) | ~p(s(bool,X25))) & (p(s(bool,X25)) | ~p(s(bool,X26)) | ~p(s(bool,X8))) & (p(s(bool,X26)) | ~p(s(bool,X25)) | ~p(s(bool,X8)))))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.sat.sat_2|49|_prove_ltb')).
fof(f24845,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20328,f18124])).
fof(f20328,plain,(
  ( ! [X0] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f1941,f592,f18124,f482])).
fof(f1941,plain,(
  ( ! [X0] : (sP7('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f644,f614,f610,f592,f485])).
fof(f485,plain,(
  ( ! [X2,X0,X1] : (~sP6(X0,X2,X1) | p(s(bool,X0)) | sP7(X0,X1,X2) | ~sP5(X1,X2,X0) | ~sP4(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f283])).
fof(f610,plain,(
  ( ! [X0,X1] : (sP6(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f592,f488])).
fof(f488,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f286])).
fof(f286,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(rectify,[],[f285])).
fof(f285,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP6(X2,X0,X1)))),
  inference(flattening,[],[f284])).
fof(f284,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP6(X2,X0,X1)))),
  inference(nnf_transformation,[],[f194])).
fof(f614,plain,(
  ( ! [X0,X1] : (sP5(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f592,f492])).
fof(f492,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f289])).
fof(f289,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f288])).
fof(f288,plain,(
  ! [X1,X0,X2] : ((~sP5(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP5(X1,X0,X2)))),
  inference(flattening,[],[f287])).
fof(f287,plain,(
  ! [X1,X0,X2] : ((~sP5(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP5(X1,X0,X2)))),
  inference(nnf_transformation,[],[f193])).
fof(f644,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f328,f496])).
fof(f496,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f291])).
fof(f291,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(flattening,[],[f290])).
fof(f290,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(nnf_transformation,[],[f192])).
fof(f328,plain,(
  ( ! [X0] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0] : p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X23] : p(s(bool,'const.divides.divides_2'(s('type.num.num',X23),s('type.num.num','const.num.|48|_0'))))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.divides.ALL_DIVIDES_|48|')).
fof(f24844,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20329,f18124])).
fof(f20329,plain,(
  ( ! [X0] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0))))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f1942,f592,f18124,f482])).
fof(f1942,plain,(
  ( ! [X0] : (sP7('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f657,f614,f610,f592,f485])).
fof(f657,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f329,f496])).
fof(f329,plain,(
  ( ! [X0] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0] : p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X23] : p(s(bool,'const.divides.divides_2'(s('type.num.num',X23),s('type.num.num',X23))))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.divides.DIVIDES_REFL')).
fof(f24843,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f20330,f18124])).
fof(f20330,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f1940,f592,f18124,f482])).
fof(f1940,plain,(
  sP7('F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f619,f614,f610,f592,f485])).
fof(f619,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f586,f496])).
fof(f24842,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20331,f18124])).
fof(f20331,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5272,f592,f18124,f482])).
fof(f5272,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f616,f612,f610,f5191,f484])).
fof(f484,plain,(
  ( ! [X2,X0,X1] : (~sP6(X0,X2,X1) | p(s(bool,X1)) | sP7(X0,X1,X2) | ~sP5(X1,X2,X0) | ~sP4(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f283])).
fof(f612,plain,(
  ( ! [X0,X1] : (sP5(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f491])).
fof(f491,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f289])).
fof(f616,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f495])).
fof(f495,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f291])).
fof(f24841,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20332,f18124])).
fof(f20332,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1889,f592,f18124,f482])).
fof(f1889,plain,(
  sP7('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f616,f612,f610,f592,f484])).
fof(f24840,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20333,f18124])).
fof(f20333,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1891,f592,f18124,f482])).
fof(f1891,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f643,f642,f610,f592,f484])).
fof(f642,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f328,f491])).
fof(f643,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f328,f495])).
fof(f24839,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20334,f18124])).
fof(f20334,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1894,f592,f18124,f482])).
fof(f1894,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f656,f655,f610,f592,f484])).
fof(f655,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f329,f491])).
fof(f656,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f329,f495])).
fof(f24838,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20335,f321])).
fof(f20335,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5371,f592,f18124,f482])).
fof(f5371,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f665,f5191,f498])).
fof(f24837,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f20336,f18124])).
fof(f20336,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f1890,f592,f18124,f482])).
fof(f1890,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f610,f592,f484])).
fof(f613,plain,(
  ( ! [X0,X1] : (sP5(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f586,f491])).
fof(f617,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f586,f495])).
fof(f24836,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20413,f18124])).
fof(f20413,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1071,f592,f18124,f482])).
fof(f24835,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20414,f18124])).
fof(f20414,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1941,f592,f18124,f482])).
fof(f24834,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20415,f18124])).
fof(f20415,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1942,f592,f18124,f482])).
fof(f24833,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f20416,f18124])).
fof(f20416,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f1940,f592,f18124,f482])).
fof(f24832,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20417,f321])).
fof(f20417,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5272,f592,f18124,f482])).
fof(f24831,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20418,f321])).
fof(f20418,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1889,f592,f18124,f482])).
fof(f24830,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20419,f18124])).
fof(f20419,plain,(
  ( ! [X0] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f1891,f592,f18124,f482])).
fof(f24829,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20420,f18124])).
fof(f20420,plain,(
  ( ! [X0] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0))))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f1894,f592,f18124,f482])).
fof(f24828,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20421,f18124])).
fof(f20421,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5371,f592,f18124,f482])).
fof(f24827,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f20422,f18124])).
fof(f20422,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f1890,f592,f18124,f482])).
fof(f24817,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20453,f20877])).
fof(f20877,plain,(
  ( ! [X0] : (~sP7(X0,'T_0','F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f665,f18124,f500])).
fof(f500,plain,(
  ( ! [X2,X0,X1] : (~sP7(X2,X1,X0) | ~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f292])).
fof(f20453,plain,(
  ( ! [X0] : (sP7(X0,'T_0','F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f618,f614,f608,f18124,f483])).
fof(f483,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | sP7(X0,X1,X2) | ~sP6(X0,X2,X1) | ~sP5(X1,X2,X0) | ~sP4(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f283])).
fof(f608,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f487])).
fof(f487,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f286])).
fof(f618,plain,(
  ( ! [X0,X1] : (sP4(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f321,f496])).
fof(f24816,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f20457,f20877])).
fof(f20457,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','F_0') | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f617,f614,f608,f18124,f483])).
fof(f24735,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20587,f20877])).
fof(f20587,plain,(
  ( ! [X0] : (sP7(X0,'T_0','F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f618,f614,f610,f18124,f483])).
fof(f24732,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20592,f1091])).
fof(f1091,plain,(
  ~sP7('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f321,f665,f500])).
fof(f20592,plain,(
  sP7('T_0','T_0','F_0') | $spl82),
  inference(unit_resulting_resolution,[],[f618,f612,f610,f18124,f483])).
fof(f24731,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20593,f21796])).
fof(f21796,plain,(
  ( ! [X0] : (~sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4027])).
fof(f4027,plain,(
  ( ! [X0,X1] : (~sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1959,f482])).
fof(f1959,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))))) )),
  inference(unit_resulting_resolution,[],[f405,f419])).
fof(f21703,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f2035])).
fof(f20593,plain,(
  ( ! [X0] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f644,f612,f610,f18124,f483])).
fof(f24730,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f24729,f21796])).
fof(f24729,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f20595,f21703])).
fof(f20595,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f619,f612,f610,f18124,f483])).
fof(f24728,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20598,f21831])).
fof(f21831,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4124])).
fof(f4124,plain,(
  ( ! [X0,X1] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f665,f1959,f500])).
fof(f20598,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f618,f642,f610,f18124,f483])).
fof(f24727,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20599,f23280])).
fof(f23280,plain,(
  ( ! [X2,X0] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'F_0')) ) | $spl82),
  inference(forward_demodulation,[],[f21797,f21703])).
fof(f21797,plain,(
  ( ! [X2,X0,X3] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4028])).
fof(f4028,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1959,f592,f1959,f482])).
fof(f20599,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f644,f642,f610,f18124,f483])).
fof(f24726,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f24725,f23280])).
fof(f24725,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f20601,f21703])).
fof(f20601,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f619,f642,f610,f18124,f483])).
fof(f24724,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20604,f20877])).
fof(f20604,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f618,f655,f610,f18124,f483])).
fof(f24719,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f20609,f20877])).
fof(f20609,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','F_0') | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f618,f613,f610,f18124,f483])).
fof(f24718,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f24717,f23280])).
fof(f24717,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f20610,f21703])).
fof(f20610,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f644,f613,f610,f18124,f483])).
fof(f24714,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f24713,f23280])).
fof(f24713,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f20612,f21703])).
fof(f20612,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f619,f613,f610,f18124,f483])).
fof(f24711,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20617,f24118])).
fof(f24118,plain,(
  ( ! [X0] : (~sP7('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'F_0')) ) | $spl82),
  inference(forward_demodulation,[],[f22923,f21703])).
fof(f22923,plain,(
  ( ! [X0] : (~sP7('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X0)),'F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f3512])).
fof(f3512,plain,(
  ( ! [X0] : (~sP7('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1956,f482])).
fof(f1956,plain,(
  ( ! [X0] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))) )),
  inference(unit_resulting_resolution,[],[f333,f419])).
fof(f20617,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f616,f5321,f610,f18124,f483])).
fof(f5321,plain,(
  ( ! [X0,X1] : (sP5('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f493])).
fof(f493,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f289])).
fof(f24666,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20675,f24144])).
fof(f24144,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'T_0','F_0')) ) | $spl82),
  inference(forward_demodulation,[],[f22949,f21703])).
fof(f22949,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X0)),'T_0','F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f3648])).
fof(f3648,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f665,f1956,f500])).
fof(f20675,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','F_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f618,f614,f5314,f18124,f483])).
fof(f5314,plain,(
  ( ! [X0,X1] : (sP6('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f489])).
fof(f489,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f286])).
fof(f24665,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f24664,f23280])).
fof(f24664,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl82)),
  inference(forward_demodulation,[],[f20676,f21703])).
fof(f20676,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f644,f614,f5314,f18124,f483])).
fof(f24662,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f24661,f23280])).
fof(f24661,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f20678,f21703])).
fof(f20678,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f619,f614,f5314,f18124,f483])).
fof(f24656,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20683,f24145])).
fof(f24145,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'F_0','T_0')) ) | $spl82),
  inference(forward_demodulation,[],[f22950,f21703])).
fof(f22950,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X0)),'F_0','T_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f3649])).
fof(f3649,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f665,f1956,f500])).
fof(f20683,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','T_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f620,f615,f5314,f18124,f483])).
fof(f615,plain,(
  ( ! [X0,X1] : (sP5('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f592,f493])).
fof(f620,plain,(
  ( ! [X0,X1] : (sP4('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f321,f497])).
fof(f497,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f291])).
fof(f24648,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20692,f20766])).
fof(f20766,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f487])).
fof(f20692,plain,(
  ~sP6('T_0','F_0','T_0') | $spl82),
  inference(unit_resulting_resolution,[],[f618,f614,f1091,f18124,f483])).
fof(f24647,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20693,f20812])).
fof(f20812,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f491])).
fof(f20693,plain,(
  ~sP5('T_0','F_0','T_0') | $spl82),
  inference(unit_resulting_resolution,[],[f618,f610,f1091,f18124,f483])).
fof(f24646,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20694,f20818])).
fof(f20818,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f497])).
fof(f20694,plain,(
  ~sP4('F_0','T_0','T_0') | $spl82),
  inference(unit_resulting_resolution,[],[f614,f610,f1091,f18124,f483])).
fof(f24645,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20696,f20766])).
fof(f20696,plain,(
  ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f618,f5320,f5267,f18124,f483])).
fof(f5267,plain,(
  ~sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f321,f5191,f482])).
fof(f5320,plain,(
  ( ! [X0,X1] : (sP5(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f492])).
fof(f24644,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20697,f20812])).
fof(f20697,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f618,f5313,f5267,f18124,f483])).
fof(f5313,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f488])).
fof(f24643,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20698,f20818])).
fof(f20698,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','T_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5320,f5313,f5267,f18124,f483])).
fof(f24642,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20700,f20766])).
fof(f20700,plain,(
  ~sP6('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f620,f5321,f7210,f18124,f483])).
fof(f7210,plain,(
  ~sP7('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f5308,f481])).
fof(f481,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | sP6(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f283])).
fof(f5308,plain,(
  ~sP6('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f321,f5191,f486])).
fof(f486,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP6(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f286])).
fof(f24641,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f20708,f20812])).
fof(f20708,plain,(
  ~sP5('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','F_0') | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f620,f611,f1098,f18124,f483])).
fof(f1098,plain,(
  ~sP7('F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f592,f668,f501])).
fof(f501,plain,(
  ( ! [X2,X0,X1] : (~sP7(X2,X1,X0) | s(bool,X0) != s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f292])).
fof(f611,plain,(
  ( ! [X0,X1] : (sP6('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f592,f489])).
fof(f24640,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20709,f20818])).
fof(f20709,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5321,f611,f7642,f18124,f483])).
fof(f7642,plain,(
  ~sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f5338,f479])).
fof(f479,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | sP4(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f283])).
fof(f5338,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f592,f5191,f494])).
fof(f494,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f291])).
fof(f24639,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f20716,f20812])).
fof(f20716,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f621,f611,f1100,f18124,f483])).
fof(f1100,plain,(
  ~sP7('F_0','T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f668,f501])).
fof(f621,plain,(
  ( ! [X0,X1] : (sP4('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f586,f497])).
fof(f24638,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20719,f20818])).
fof(f20719,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','F_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f615,f611,f7637,f18124,f483])).
fof(f7637,plain,(
  ~sP7('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f5322,f479])).
fof(f5322,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f592,f5191,f494])).
fof(f24637,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20720,f20812])).
fof(f20720,plain,(
  ~sP5('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f620,f5314,f7267,f18124,f483])).
fof(f7267,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f5315,f480])).
fof(f480,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | sP5(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f283])).
fof(f5315,plain,(
  ~sP5('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f321,f5191,f490])).
fof(f490,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f289])).
fof(f24636,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20721,f20818])).
fof(f20721,plain,(
  ~sP4('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f615,f5314,f7839,f18124,f483])).
fof(f7839,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f5354,f479])).
fof(f5354,plain,(
  ~sP4('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f592,f5191,f494])).
fof(f24635,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20722,f18124])).
fof(f20722,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f610,f592,f18124,f486])).
fof(f24634,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20723,f18124])).
fof(f20723,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5313,f592,f18124,f486])).
fof(f24633,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20724,f18124])).
fof(f20724,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f611,f592,f18124,f486])).
fof(f24632,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20725,f18124])).
fof(f20725,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5314,f592,f18124,f486])).
fof(f24631,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20732,f20766])).
fof(f20732,plain,(
  ( ! [X0] : (~sP6(X0,'T_0','F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f321,f18124,f486])).
fof(f24630,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20742,f20766])).
fof(f20742,plain,(
  ( ! [X0,X1] : (~sP6(X0,X1,'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124,f18124,f486])).
fof(f24629,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20744,f18124])).
fof(f20744,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f610,f592,f18124,f486])).
fof(f24628,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20745,f18124])).
fof(f20745,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5313,f592,f18124,f486])).
fof(f24627,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20746,f18124])).
fof(f20746,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f611,f592,f18124,f486])).
fof(f24626,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20747,f18124])).
fof(f20747,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5314,f592,f18124,f486])).
fof(f24625,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20754,f20766])).
fof(f20754,plain,(
  ( ! [X0] : (~sP6('T_0',X0,'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f321,f18124,f486])).
fof(f24624,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20764,f20766])).
fof(f20764,plain,(
  ( ! [X0,X1] : (~sP6(X0,X1,'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124,f18124,f486])).
fof(f24623,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20768,f18124])).
fof(f20768,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f614,f592,f18124,f490])).
fof(f24622,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20769,f18124])).
fof(f20769,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5320,f592,f18124,f490])).
fof(f24621,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20770,f18124])).
fof(f20770,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f615,f592,f18124,f490])).
fof(f24620,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20771,f18124])).
fof(f20771,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5321,f592,f18124,f490])).
fof(f24619,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20778,f20812])).
fof(f20778,plain,(
  ( ! [X0] : (~sP5(X0,'T_0','F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f321,f18124,f490])).
fof(f24618,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20788,f20812])).
fof(f20788,plain,(
  ( ! [X0,X1] : (~sP5(X0,X1,'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124,f18124,f490])).
fof(f24617,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20790,f18124])).
fof(f20790,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f614,f592,f18124,f490])).
fof(f24616,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20791,f18124])).
fof(f20791,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5320,f592,f18124,f490])).
fof(f24615,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20792,f18124])).
fof(f20792,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f615,f592,f18124,f490])).
fof(f24614,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20793,f18124])).
fof(f20793,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5321,f592,f18124,f490])).
fof(f24613,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20800,f20812])).
fof(f20800,plain,(
  ( ! [X0] : (~sP5('T_0',X0,'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f321,f18124,f490])).
fof(f24612,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20810,f20812])).
fof(f20810,plain,(
  ( ! [X0,X1] : (~sP5(X0,X1,'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124,f18124,f490])).
fof(f24611,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20822,f23926])).
fof(f23926,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | ($spl5 | $spl82)),
  inference(global_subsumption,[],[f22815,f320,f319,f318,f321,f328,f329,f330,f332,f336,f344,f343,f417,f414,f413,f425,f424,f594,f443,f440,f439,f438,f448,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f2059,f2259,f2192,f2193,f2310,f2311,f2593,f3078,f3080,f3039,f3169,f3167,f3162,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3463,f3982,f4475,f5656,f5726,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6213,f5868,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f2414,f7301,f7302,f7307,f7502,f7503,f7508,f7644,f7662,f7666,f7667,f7670,f7775,f7672,f7673,f7674,f7675,f7676,f7677,f7794,f7795,f7767,f7769,f8462,f9189,f9193,f9368,f9367,f9578,f9577,f9575,f9574,f9573,f9612,f9613,f9615,f9618,f9619,f9623,f9624,f9626,f9627,f9629,f9630,f9681,f9821,f9684,f9685,f9686,f9688,f9690,f9692,f9698,f9699,f9706,f9707,f9708,f9709,f9710,f9711,f9712,f9713,f9714,f9715,f9716,f9729,f9730,f9732,f9735,f9736,f9740,f9741,f9743,f9744,f9829,f9747,f9798,f9799,f9801,f9802,f9803,f9805,f9807,f9809,f9815,f9816,f333,f334,f420,f421,f422,f2037,f2043,f2047,f2051,f2260,f2379,f2576,f2577,f2581,f2582,f2583,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3031,f3036,f3047,f3052,f3135,f3142,f3454,f3462,f3464,f3465,f3466,f3468,f3469,f3470,f3471,f3486,f3491,f3492,f3496,f3501,f3512,f3513,f3521,f3529,f3535,f3558,f3568,f3575,f3580,f3590,f3597,f3601,f3610,f3611,f3619,f3620,f3629,f3630,f3638,f3639,f3640,f3641,f3643,f3644,f3646,f3647,f3648,f3649,f3654,f3657,f3664,f3666,f3673,f3674,f3675,f3676,f3678,f3687,f3688,f3696,f3697,f3702,f3704,f3707,f3708,f3709,f3710,f3711,f3714,f3715,f3717,f3725,f3741,f3750,f3751,f3752,f3756,f3757,f3761,f3762,f3763,f3790,f3799,f3800,f3808,f3809,f3812,f3816,f3817,f3823,f3824,f3825,f3826,f3828,f3829,f3830,f3832,f3833,f3834,f3836,f3837,f3838,f3839,f7280,f7284,f7479,f7484,f8194,f8197,f8202,f8203,f8266,f8268,f8284,f8285,f8346,f8349,f8354,f8355,f8418,f8420,f8437,f8438,f9329,f9334,f9337,f9341,f9345,f9350,f9353,f9357,f9445,f9448,f449,f1976,f2136,f2438,f2454,f2459,f2460,f2535,f2542,f2543,f3043,f4353,f7282,f7482,f8454,f8461,f8463,f8464,f8465,f8467,f8468,f8469,f8470,f8489,f8496,f8497,f8503,f8508,f8515,f8516,f8518,f8522,f8526,f8539,f8545,f8550,f8553,f8559,f8564,f8565,f8576,f8577,f8587,f8588,f8599,f8600,f8610,f8611,f8612,f8613,f8615,f8616,f8618,f8619,f8620,f8621,f8622,f8623,f8628,f8630,f8638,f8639,f8640,f8641,f8644,f8654,f8655,f8664,f8665,f8671,f8673,f8677,f8678,f8679,f8680,f8681,f8685,f8686,f8689,f8695,f8709,f8718,f8719,f8720,f8724,f8725,f8729,f8730,f8731,f8756,f8765,f8766,f8774,f8775,f8778,f8782,f8783,f8789,f8790,f8791,f8792,f8794,f8795,f8796,f8798,f8799,f8800,f8802,f8803,f8804,f8805,f8881,f8887,f9143,f9177,f9185,f9408,f2038,f2386,f407,f2312,f2387,f3038,f3054,f7286,f7486,f9335,f9351,f2267,f9555,f593,f2026,f7299,f7500,f2268,f9556,f2087,f3048,f3053,f9453,f406,f2190,f3037,f7285,f7485,f9338,f9354,f9454,f9520,f9522,f9526,f9527,f7410,f7613,f3975,f2046,f7415,f7425,f1997,f2035,f1985,f1984,f5727,f5869,f3017,f3016,f592,f348,f347,f2053,f3225,f6212,f7501,f7300,f9364,f9342,f9326,f9089,f5196,f5062,f5052,f5045,f4973,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4474,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3981,f3041,f3032,f2139,f1982,f1964,f452,f451,f450,f419,f405,f4468,f7628,f7277,f2050,f7618,f7476,f3368,f3040,f17431,f17451,f17454,f17459,f17460,f17569,f17570,f17526,f17528,f17534,f17535,f18019,f18040,f18122,f18125,f18126,f18150,f18149,f18147,f18502,f18155,f18158,f18160,f18246,f18247,f18506,f18255,f18507,f18273,f18274,f18276,f18279,f18280,f18284,f18285,f18287,f18288,f18509,f18291,f18342,f18511,f18345,f18346,f18347,f18349,f18351,f18353,f18360,f18361,f18363,f18364,f18767,f18768,f18769,f18528,f18775,f18778,f18779,f18623,f18624,f18626,f18630,f18631,f18635,f18786,f18638,f18641,f18646,f18647,f18648,f18791,f18792,f18793,f18794,f18795,f18796,f18797,f18799,f18800,f18803,f18804,f18805,f18808,f18809,f18810,f18811,f18813,f18743,f18745,f18814,f18815,f18816,f18817,f18841,f18839,f18833,f18845,f18846,f18847,f19251,f19252,f18853,f18854,f18860,f19255,f19259,f19260,f18954,f18955,f18964,f18971,f18972,f18973,f18974,f18975,f19270,f18977,f18979,f18982,f19273,f18985,f19002,f19003,f19005,f19008,f19009,f19013,f19014,f19016,f19017,f19283,f19020,f19071,f19285,f19074,f19075,f19076,f19078,f19080,f19082,f19095,f19096,f19098,f19099,f19117,f19142,f19143,f19145,f19148,f19149,f19153,f19154,f19156,f19157,f19294,f19160,f19211,f19296,f19214,f19215,f19216,f19218,f19220,f19222,f19235,f19236,f19238,f19239,f19317,f19319,f19320,f19321,f19324,f19383,f19330,f19332,f19333,f19335,f19336,f19337,f19340,f19343,f19345,f19346,f19347,f19350,f19388,f19356,f19358,f19359,f19361,f19362,f19363,f19366,f19369,f19371,f19372,f19379,f19380,f19446,f19448,f19449,f19450,f19577,f19453,f19578,f19579,f19580,f19582,f19459,f19461,f19462,f19464,f19465,f19466,f19469,f19472,f19474,f19475,f19480,f19481,f19482,f19483,f19486,f19488,f19489,f19490,f19493,f19592,f19499,f19501,f19502,f19504,f19505,f19506,f19509,f19512,f19514,f19515,f19516,f19519,f19601,f19525,f19527,f19528,f19530,f19531,f19532,f19535,f19541,f19542,f19546,f19547,f19548,f19621,f19623,f19624,f19625,f19628,f19695,f19634,f19636,f19637,f19639,f19640,f19641,f19644,f19683,f19684,f19769,f19771,f19772,f19773,f19776,f19843,f19782,f19784,f19785,f19787,f19788,f19789,f19792,f19831,f19832,f19927,f19929,f19930,f19931,f20041,f20056,f20059,f20061,f20063,f20075,f20078,f20109,f20111,f20123,f20125,f20158,f20160,f20161,f18124,f21703,f23230,f23235,f21786,f21787,f23278,f21789,f21790,f21791,f21792,f23279,f21794,f21795,f21796,f23280,f21800,f21801,f21806,f21808,f21809,f21810,f21812,f21813,f21814,f21815,f23295,f23296,f21830,f21831,f21832,f21833,f21834,f21836,f21837,f21840,f23306,f21842,f23307,f21844,f21845,f23308,f21848,f21849,f23309,f21855,f21856,f23314,f21858,f21859,f21860,f23315,f23316,f21867,f21868,f21869,f21870,f23317,f21873,f23318,f21876,f21877,f23319,f21879,f21880,f21883,f21884,f21887,f21888,f21891])).
fof(f21891,plain,(
  ( ! [X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)),X3)) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4299])).
fof(f21888,plain,(
  ( ! [X2,X0] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0',X2)) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4296])).
fof(f21887,plain,(
  ( ! [X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X3)))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4295])).
fof(f21884,plain,(
  ( ! [X2,X0] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'T_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4292])).
fof(f21883,plain,(
  ( ! [X2,X0,X3] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)),X3)) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4291])).
fof(f21880,plain,(
  ( ! [X2,X0] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0',X2)) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4288])).
fof(f21879,plain,(
  ( ! [X2,X0] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4287])).
fof(f23319,plain,(
  ( ! [X2,X0] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(forward_demodulation,[],[f21878,f21703])).
fof(f21878,plain,(
  ( ! [X2,X0,X3] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4286])).
fof(f21877,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','T_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4285])).
fof(f21876,plain,(
  ( ! [X0] : (~sP13('T_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4279])).
fof(f23318,plain,(
  ( ! [X4,X2,X0] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X4)) ) | $spl82),
  inference(forward_demodulation,[],[f21875,f21703])).
fof(f21875,plain,(
  ( ! [X4,X2,X0,X3] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),X4)) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4278])).
fof(f21873,plain,(
  ( ! [X0] : (sP13('F_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4271])).
fof(f23317,plain,(
  ( ! [X2,X0] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(forward_demodulation,[],[f21871,f21703])).
fof(f21871,plain,(
  ( ! [X2,X0,X3] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4262])).
fof(f21870,plain,(
  ( ! [X0] : (~sP12('T_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4261])).
fof(f21869,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','T_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4252])).
fof(f21868,plain,(
  ( ! [X2,X0] : (~sP13('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2)) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4227])).
fof(f21867,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4226])).
fof(f23316,plain,(
  ( ! [X4,X2,X0] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X4)) ) | $spl82),
  inference(forward_demodulation,[],[f21866,f21703])).
fof(f21866,plain,(
  ( ! [X4,X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),X4)) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4225])).
fof(f23315,plain,(
  ( ! [X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(forward_demodulation,[],[f21864,f21703])).
fof(f21864,plain,(
  ( ! [X4,X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4220])).
fof(f21860,plain,(
  ( ! [X0] : (~sP10('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4205])).
fof(f21859,plain,(
  ( ! [X2,X0] : (~sP11('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2)) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4191])).
fof(f21858,plain,(
  ( ! [X0,X1] : (~sP11('F_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4185])).
fof(f23314,plain,(
  ( ! [X2,X0] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(forward_demodulation,[],[f21857,f21703])).
fof(f21857,plain,(
  ( ! [X2,X0,X3] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4183])).
fof(f21856,plain,(
  ( ! [X0] : (~sP9('F_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4182])).
fof(f21855,plain,(
  ( ! [X0] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4179])).
fof(f23309,plain,(
  ( ! [X2,X0] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(forward_demodulation,[],[f21850,f21703])).
fof(f21850,plain,(
  ( ! [X2,X0,X3] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4172])).
fof(f21849,plain,(
  ( ! [X0] : (sP9('T_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4170])).
fof(f21848,plain,(
  ( ! [X0] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4165])).
fof(f23308,plain,(
  ( ! [X2,X0] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'F_0')) ) | $spl82),
  inference(forward_demodulation,[],[f21846,f21703])).
fof(f21846,plain,(
  ( ! [X2,X0,X3] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4156])).
fof(f21845,plain,(
  ( ! [X0] : (~sP8('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4155])).
fof(f21844,plain,(
  ( ! [X0] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4146])).
fof(f23307,plain,(
  ( ! [X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(forward_demodulation,[],[f21843,f21703])).
fof(f21843,plain,(
  ( ! [X4,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4144])).
fof(f21842,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4143])).
fof(f23306,plain,(
  ( ! [X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(forward_demodulation,[],[f21841,f21703])).
fof(f21841,plain,(
  ( ! [X4,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4142])).
fof(f21840,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4141])).
fof(f21837,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'T_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4134])).
fof(f21836,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'T_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4132])).
fof(f21834,plain,(
  ( ! [X2,X0] : (~sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0',X2)) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4127])).
fof(f21833,plain,(
  ( ! [X2,X0] : (~sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4126])).
fof(f21832,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','T_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4125])).
fof(f21830,plain,(
  ( ! [X2,X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4123])).
fof(f23296,plain,(
  ( ! [X2,X0] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'F_0')) ) | $spl82),
  inference(forward_demodulation,[],[f21820,f21703])).
fof(f21820,plain,(
  ( ! [X2,X0,X3] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4106])).
fof(f23295,plain,(
  ( ! [X2,X0] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'F_0')) ) | $spl82),
  inference(forward_demodulation,[],[f21816,f21703])).
fof(f21816,plain,(
  ( ! [X2,X0,X3] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4087])).
fof(f21815,plain,(
  ( ! [X0] : (~sP6('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4086])).
fof(f21814,plain,(
  ( ! [X0] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4077])).
fof(f21813,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4076])).
fof(f21812,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4071])).
fof(f21810,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4065])).
fof(f21809,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4062])).
fof(f21808,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4057])).
fof(f21806,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4051])).
fof(f21801,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4038])).
fof(f21800,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4034])).
fof(f21795,plain,(
  ( ! [X2,X0] : (~sP3('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2)) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4020])).
fof(f21794,plain,(
  ( ! [X0,X1] : (~sP3('F_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4015])).
fof(f23279,plain,(
  ( ! [X2,X0,X3] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(forward_demodulation,[],[f21793,f21703])).
fof(f21793,plain,(
  ( ! [X4,X2,X0,X3] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4011])).
fof(f21792,plain,(
  ( ! [X0,X1] : (sP2('T_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4010])).
fof(f21791,plain,(
  ( ! [X2,X0] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'T_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f4005])).
fof(f21790,plain,(
  ( ! [X0] : (sP1('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f3990])).
fof(f21789,plain,(
  ( ! [X0] : (sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f3989])).
fof(f23278,plain,(
  ( ! [X2,X0] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(forward_demodulation,[],[f21788,f21703])).
fof(f21788,plain,(
  ( ! [X2,X0,X3] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f3988])).
fof(f21787,plain,(
  ( ! [X0] : (~sP1('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f3987])).
fof(f21786,plain,(
  ( ! [X0] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f3985])).
fof(f23235,plain,(
  ( ! [X6,X4] : (s('type.num.num',X6) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(forward_demodulation,[],[f23234,f21703])).
fof(f23234,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num',X6) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',sK16(X6,'const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))))))) ) | $spl82),
  inference(subsumption_resolution,[],[f21740,f18124])).
fof(f21740,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',sK16(X6,'const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))))))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f2038])).
fof(f23230,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(forward_demodulation,[],[f23229,f21703])).
fof(f23229,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl82),
  inference(subsumption_resolution,[],[f21729,f21703])).
fof(f21729,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f420])).
fof(f20161,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num',X24))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num',X23))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X25)))))) )),
  inference(subsumption_resolution,[],[f20024,f592])).
fof(f20024,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num',X24))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num',X23))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X25)))))) )),
  inference(superposition,[],[f1964,f336])).
fof(f20125,plain,(
  ( ! [X61,X59,X62,X60,X58,X63] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X61))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X60),s('type.num.num',X62))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X59),s('type.num.num',X60))))))))))) )),
  inference(forward_demodulation,[],[f20124,f449])).
fof(f20124,plain,(
  ( ! [X61,X59,X62,X60,X58,X63] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X61))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num',X59))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X60),s('type.num.num',X62))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X59),s('type.num.num',X60))))))))))) )),
  inference(forward_demodulation,[],[f19990,f449])).
fof(f19990,plain,(
  ( ! [X61,X59,X62,X60,X58,X63] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X59),s('type.num.num',X60)))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X61))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num',X59))),s('type.num.num',X60))),s('type.num.num',X62)))) )),
  inference(superposition,[],[f1964,f449])).
fof(f20123,plain,(
  ( ! [X57,X54,X52,X56,X55,X53] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num',X55))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X54),s('type.num.num',X56))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X54))))))))))) )),
  inference(forward_demodulation,[],[f20122,f449])).
fof(f20122,plain,(
  ( ! [X57,X54,X52,X56,X55,X53] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num',X55))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X53))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X54),s('type.num.num',X56))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X54))))))))))) )),
  inference(forward_demodulation,[],[f19989,f449])).
fof(f19989,plain,(
  ( ! [X57,X54,X52,X56,X55,X53] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X54)))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num',X55))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X53))),s('type.num.num',X54))),s('type.num.num',X56)))) )),
  inference(superposition,[],[f1964,f2438])).
fof(f20111,plain,(
  ( ! [X26,X24,X23,X27,X25,X22] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',X25))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X26))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X23))))))))))) )),
  inference(forward_demodulation,[],[f20110,f449])).
fof(f20110,plain,(
  ( ! [X26,X24,X23,X27,X25,X22] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',X25))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.num.num',X26))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X23))))))))))) )),
  inference(forward_demodulation,[],[f19983,f449])).
fof(f19983,plain,(
  ( ! [X26,X24,X23,X27,X25,X22] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X23)))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',X25))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X24))))),s('type.num.num',X26)))) )),
  inference(superposition,[],[f1964,f2136])).
fof(f20109,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X19))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X20))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17))))))))))) )),
  inference(forward_demodulation,[],[f20108,f449])).
fof(f20108,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X19))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X18))),s('type.num.num',X20))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17))))))))))) )),
  inference(forward_demodulation,[],[f19982,f449])).
fof(f19982,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17)))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X19))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X18))))),s('type.num.num',X20)))) )),
  inference(superposition,[],[f1964,f2454])).
fof(f20078,plain,(
  ( ! [X61,X59,X62,X60,X58,X63] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X61))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X59),s('type.num.num',X60))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X60),s('type.num.num',X62))))))))))) )),
  inference(forward_demodulation,[],[f20077,f449])).
fof(f20077,plain,(
  ( ! [X61,X59,X62,X60,X58,X63] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X60),s('type.num.num',X62)))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X61))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num',X59))),s('type.num.num',X60)))))) )),
  inference(forward_demodulation,[],[f20076,f449])).
fof(f20076,plain,(
  ( ! [X61,X59,X62,X60,X58,X63] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X59),s('type.num.num',X60))),s('type.num.num',X62)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X61))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num',X59))),s('type.num.num',X60)))))) )),
  inference(forward_demodulation,[],[f19964,f449])).
fof(f19964,plain,(
  ( ! [X61,X59,X62,X60,X58,X63] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X59),s('type.num.num',X60))))),s('type.num.num',X62)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X61))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num',X59))),s('type.num.num',X60)))))) )),
  inference(superposition,[],[f1964,f449])).
fof(f20075,plain,(
  ( ! [X57,X54,X52,X56,X55,X53] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num',X55))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num',X54))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X54),s('type.num.num',X56))))))))))) )),
  inference(forward_demodulation,[],[f20074,f449])).
fof(f20074,plain,(
  ( ! [X57,X54,X52,X56,X55,X53] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X54),s('type.num.num',X56)))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num',X55))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X53))),s('type.num.num',X54)))))) )),
  inference(forward_demodulation,[],[f20073,f449])).
fof(f20073,plain,(
  ( ! [X57,X54,X52,X56,X55,X53] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X54))),s('type.num.num',X56)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num',X55))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X53))),s('type.num.num',X54)))))) )),
  inference(forward_demodulation,[],[f19963,f449])).
fof(f19963,plain,(
  ( ! [X57,X54,X52,X56,X55,X53] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X54))))),s('type.num.num',X56)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num',X55))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X53))),s('type.num.num',X54)))))) )),
  inference(superposition,[],[f1964,f2438])).
fof(f20063,plain,(
  ( ! [X26,X24,X23,X27,X25,X22] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X26)))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',X25))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X24)))))))) )),
  inference(forward_demodulation,[],[f20062,f449])).
fof(f20062,plain,(
  ( ! [X26,X24,X23,X27,X25,X22] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X23))),s('type.num.num',X26)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',X25))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X24)))))))) )),
  inference(forward_demodulation,[],[f19957,f449])).
fof(f19957,plain,(
  ( ! [X26,X24,X23,X27,X25,X22] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X23))))),s('type.num.num',X26)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',X25))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X24)))))))) )),
  inference(superposition,[],[f1964,f2136])).
fof(f20061,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X20)))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X19))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X18)))))))) )),
  inference(forward_demodulation,[],[f20060,f449])).
fof(f20060,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17))),s('type.num.num',X20)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X19))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X18)))))))) )),
  inference(forward_demodulation,[],[f19956,f449])).
fof(f19956,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17))))),s('type.num.num',X20)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X19))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X18)))))))) )),
  inference(superposition,[],[f1964,f2454])).
fof(f20059,plain,(
  ( ! [X14,X12,X10,X15,X13,X11] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X14)))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X13))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12)))))))) )),
  inference(forward_demodulation,[],[f20058,f449])).
fof(f20058,plain,(
  ( ! [X14,X12,X10,X15,X13,X11] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X10))),s('type.num.num',X14)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X13))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12)))))))) )),
  inference(forward_demodulation,[],[f19955,f449])).
fof(f19955,plain,(
  ( ! [X14,X12,X10,X15,X13,X11] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X10))))),s('type.num.num',X14)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X13))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12)))))))) )),
  inference(superposition,[],[f1964,f2454])).
fof(f20056,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X3)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X2))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f19953,f449])).
fof(f19953,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X3)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X2))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f1964,f405])).
fof(f20041,plain,(
  ( ! [X57,X54,X52,X56,X55,X53] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num',X55))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num',X54))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X54))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56))))))) )),
  inference(forward_demodulation,[],[f19937,f449])).
fof(f19937,plain,(
  ( ! [X57,X54,X52,X56,X55,X53] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X54))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num',X55))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X53))),s('type.num.num',X54)))))) )),
  inference(superposition,[],[f1964,f2438])).
fof(f19931,plain,(
  ( ! [X26,X24,X23,X27,X25,X22] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X23))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num',X26)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num',X25))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X24)))))))) )),
  inference(superposition,[],[f1964,f2136])).
fof(f19930,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X19))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X18)))))))) )),
  inference(superposition,[],[f1964,f2454])).
fof(f19929,plain,(
  ( ! [X14,X12,X10,X15,X13,X11] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X14)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X13))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12)))))))) )),
  inference(superposition,[],[f1964,f2454])).
fof(f19927,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f1964,f405])).
fof(f19832,plain,(
  ( ! [X39,X37,X38,X36] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',X38))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num',X37))) | s('type.num.num',X38) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X39)))) )),
  inference(superposition,[],[f3080,f449])).
fof(f19831,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X34))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X33))) | s('type.num.num',X34) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X35)))) )),
  inference(superposition,[],[f3080,f2438])).
fof(f19792,plain,(
  ( ! [X90,X88,X89] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X88))),s('type.num.num',X89))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X88))) | s('type.num.num',X89) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X90)))) )),
  inference(superposition,[],[f3080,f2379])).
fof(f19789,plain,(
  ( ! [X80,X81,X79,X82] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X80))),s('type.num.num',X79))),s('type.num.num',X81))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X79),s('type.num.num',X80))),s('type.num.num',X79))) | s('type.num.num',X81) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X82)))) )),
  inference(superposition,[],[f3080,f2190])).
fof(f19788,plain,(
  ( ! [X78,X76,X77,X75] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X75))),s('type.num.num',X76))),s('type.num.num',X77))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X75),s('type.num.num',X76))),s('type.num.num',X76))) | s('type.num.num',X77) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X78)))) )),
  inference(superposition,[],[f3080,f406])).
fof(f19787,plain,(
  ( ! [X74,X72,X73] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X72))),s('type.num.num',X73))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X73) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)))) )),
  inference(superposition,[],[f3080,f2260])).
fof(f19785,plain,(
  ( ! [X68,X66,X67,X65] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.num.SUC_1'(s('type.num.num',X66))))),s('type.num.num',X67))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num',X65))))) | s('type.num.num',X67) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X68)))) )),
  inference(superposition,[],[f3080,f2312])).
fof(f19784,plain,(
  ( ! [X61,X64,X62,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.num.SUC_1'(s('type.num.num',X62))))),s('type.num.num',X63))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num',X62))))) | s('type.num.num',X63) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X64)))) )),
  inference(superposition,[],[f3080,f407])).
fof(f19782,plain,(
  ( ! [X57,X56,X55] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X55))) | s('type.num.num',X56) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X57)))) )),
  inference(superposition,[],[f3080,f334])).
fof(f19843,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num',X44))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X44))))),s('type.num.num',X45))) | s('type.num.num',X45) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X46)))) )),
  inference(forward_demodulation,[],[f19779,f449])).
fof(f19779,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X44))))),s('type.num.num',X45))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X43))),s('type.num.num',X44))) | s('type.num.num',X45) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X46)))) )),
  inference(superposition,[],[f3080,f2438])).
fof(f19776,plain,(
  ( ! [X33,X31,X32] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num',X32))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X32) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X33)))) )),
  inference(superposition,[],[f3080,f333])).
fof(f19773,plain,(
  ( ! [X21,X19,X22,X20,X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X19))))),s('type.num.num',X21))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X22)))) )),
  inference(superposition,[],[f3080,f2136])).
fof(f19772,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X14))))),s('type.num.num',X16))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15))))) | s('type.num.num',X16) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17)))) )),
  inference(superposition,[],[f3080,f2454])).
fof(f19771,plain,(
  ( ! [X12,X10,X8,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X8))))),s('type.num.num',X11))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X10))))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X12)))) )),
  inference(superposition,[],[f3080,f2454])).
fof(f19769,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) )),
  inference(superposition,[],[f3080,f405])).
fof(f19684,plain,(
  ( ! [X39,X37,X38,X36] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',X38))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num',X37))) | s('type.num.num',X38) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X39),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f449])).
fof(f19683,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X34))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X33))) | s('type.num.num',X34) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X35),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f2438])).
fof(f19644,plain,(
  ( ! [X90,X88,X89] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X88))),s('type.num.num',X89))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X88))) | s('type.num.num',X89) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f2379])).
fof(f19641,plain,(
  ( ! [X80,X81,X79,X82] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X80))),s('type.num.num',X79))),s('type.num.num',X81))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X79),s('type.num.num',X80))),s('type.num.num',X79))) | s('type.num.num',X81) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f2190])).
fof(f19640,plain,(
  ( ! [X78,X76,X77,X75] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X75))),s('type.num.num',X76))),s('type.num.num',X77))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X75),s('type.num.num',X76))),s('type.num.num',X76))) | s('type.num.num',X77) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X78),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f406])).
fof(f19639,plain,(
  ( ! [X74,X72,X73] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X72))),s('type.num.num',X73))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X73) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X74),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f2260])).
fof(f19637,plain,(
  ( ! [X68,X66,X67,X65] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.num.SUC_1'(s('type.num.num',X66))))),s('type.num.num',X67))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num',X65))))) | s('type.num.num',X67) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f2312])).
fof(f19636,plain,(
  ( ! [X61,X64,X62,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.num.SUC_1'(s('type.num.num',X62))))),s('type.num.num',X63))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num',X62))))) | s('type.num.num',X63) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X64),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f407])).
fof(f19634,plain,(
  ( ! [X57,X56,X55] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X55))) | s('type.num.num',X56) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f334])).
fof(f19695,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num',X44))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X44))))),s('type.num.num',X45))) | s('type.num.num',X45) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X46),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f19631,f449])).
fof(f19631,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X44))))),s('type.num.num',X45))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X43))),s('type.num.num',X44))) | s('type.num.num',X45) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X46),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f2438])).
fof(f19628,plain,(
  ( ! [X33,X31,X32] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num',X32))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X32) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f333])).
fof(f19625,plain,(
  ( ! [X21,X19,X22,X20,X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X19))))),s('type.num.num',X21))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f2136])).
fof(f19624,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X14))))),s('type.num.num',X16))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15))))) | s('type.num.num',X16) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f2454])).
fof(f19623,plain,(
  ( ! [X12,X10,X8,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X8))))),s('type.num.num',X11))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X10))))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f2454])).
fof(f19621,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3078,f405])).
fof(f19548,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X34),s('type.num.num',X35))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X34))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X34) | s('type.num.num',X35) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X33)))) )),
  inference(superposition,[],[f3041,f2438])).
fof(f19547,plain,(
  ( ! [X30,X31,X29] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X30)),X29)),s('type.num.num',X31))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X30)),X29)) | s('type.num.num',X29) = s('type.num.num',X31)) )),
  inference(superposition,[],[f3041,f2050])).
fof(f19546,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X26)),s('type.num.num',X28))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X26)) | s('type.num.num',X26) = s('type.num.num',X28)) )),
  inference(superposition,[],[f3041,f2046])).
fof(f19542,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X15))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X16))),s('type.num.num',X17))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X16))) | s('type.num.num',X14) = s('type.num.num',X17)) )),
  inference(superposition,[],[f3041,f2136])).
fof(f19541,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12))),s('type.num.num',X13))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12))) | s('type.num.num',X10) = s('type.num.num',X13)) )),
  inference(superposition,[],[f3041,f2454])).
fof(f19535,plain,(
  ( ! [X90,X88,X89] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num','const.num.SUC_1'(s('type.num.num',X88))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X88))),s('type.num.num',X89))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X88))) | s('type.num.num',X89) = s('type.num.num',X90)) )),
  inference(superposition,[],[f3041,f2379])).
fof(f19532,plain,(
  ( ! [X80,X81,X79,X82] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X80))),s('type.num.num',X79))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X80))),s('type.num.num',X79))),s('type.num.num',X81))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X79),s('type.num.num',X80))),s('type.num.num',X79))) | s('type.num.num',X81) = s('type.num.num',X82)) )),
  inference(superposition,[],[f3041,f2190])).
fof(f19531,plain,(
  ( ! [X78,X76,X77,X75] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X78),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X75))),s('type.num.num',X76))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X75))),s('type.num.num',X76))),s('type.num.num',X77))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X75),s('type.num.num',X76))),s('type.num.num',X76))) | s('type.num.num',X77) = s('type.num.num',X78)) )),
  inference(superposition,[],[f3041,f406])).
fof(f19530,plain,(
  ( ! [X74,X72,X73] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X74),s('type.num.num','const.num.SUC_1'(s('type.num.num',X72))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X72))),s('type.num.num',X73))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X73) = s('type.num.num',X74)) )),
  inference(superposition,[],[f3041,f2260])).
fof(f19528,plain,(
  ( ! [X68,X66,X67,X65] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.num.SUC_1'(s('type.num.num',X66))))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.num.SUC_1'(s('type.num.num',X66))))),s('type.num.num',X67))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num',X65))))) | s('type.num.num',X67) = s('type.num.num',X68)) )),
  inference(superposition,[],[f3041,f2312])).
fof(f19527,plain,(
  ( ! [X61,X64,X62,X63] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X64),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.num.SUC_1'(s('type.num.num',X62))))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.num.SUC_1'(s('type.num.num',X62))))),s('type.num.num',X63))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num',X62))))) | s('type.num.num',X63) = s('type.num.num',X64)) )),
  inference(superposition,[],[f3041,f407])).
fof(f19525,plain,(
  ( ! [X57,X56,X55] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num',X55))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X55))) | s('type.num.num',X56) = s('type.num.num',X57)) )),
  inference(superposition,[],[f3041,f334])).
fof(f19601,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num',X44))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X44))))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X44))))),s('type.num.num',X45))) | s('type.num.num',X45) = s('type.num.num',X46)) )),
  inference(forward_demodulation,[],[f19522,f449])).
fof(f19522,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X44))))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X44))))),s('type.num.num',X45))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X43))),s('type.num.num',X44))) | s('type.num.num',X45) = s('type.num.num',X46)) )),
  inference(superposition,[],[f3041,f2438])).
fof(f19519,plain,(
  ( ! [X33,X31,X32] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num',X32))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num',X31))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X32) = s('type.num.num',X33)) )),
  inference(superposition,[],[f3041,f333])).
fof(f19516,plain,(
  ( ! [X21,X19,X22,X20,X18] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X19))))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X19))))),s('type.num.num',X21))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))))) | s('type.num.num',X21) = s('type.num.num',X22)) )),
  inference(superposition,[],[f3041,f2136])).
fof(f19515,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X14))))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X14))))),s('type.num.num',X16))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15))))) | s('type.num.num',X16) = s('type.num.num',X17)) )),
  inference(superposition,[],[f3041,f2454])).
fof(f19514,plain,(
  ( ! [X12,X10,X8,X11,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X8))))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X8))))),s('type.num.num',X11))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X10))))) | s('type.num.num',X11) = s('type.num.num',X12)) )),
  inference(superposition,[],[f3041,f2454])).
fof(f19512,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num',X2) = s('type.num.num',X3)) )),
  inference(superposition,[],[f3041,f405])).
fof(f19509,plain,(
  ( ! [X90,X88,X89] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X89),s('type.num.num',X90))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X88))),s('type.num.num',X89))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X89) | s('type.num.num',X90) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X88)))) )),
  inference(superposition,[],[f3041,f2379])).
fof(f19506,plain,(
  ( ! [X80,X81,X79,X82] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X81),s('type.num.num',X82))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X80))),s('type.num.num',X79))),s('type.num.num',X81))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X81) | s('type.num.num',X82) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X79),s('type.num.num',X80))),s('type.num.num',X79)))) )),
  inference(superposition,[],[f3041,f2190])).
fof(f19505,plain,(
  ( ! [X78,X76,X77,X75] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X77),s('type.num.num',X78))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X75))),s('type.num.num',X76))),s('type.num.num',X77))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X77) | s('type.num.num',X78) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X75),s('type.num.num',X76))),s('type.num.num',X76)))) )),
  inference(superposition,[],[f3041,f406])).
fof(f19504,plain,(
  ( ! [X74,X72,X73] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X73),s('type.num.num',X74))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X72))),s('type.num.num',X73))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X73) | s('type.num.num',X74) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3041,f2260])).
fof(f19502,plain,(
  ( ! [X68,X66,X67,X65] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X67),s('type.num.num',X68))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.num.SUC_1'(s('type.num.num',X66))))),s('type.num.num',X67))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X67) | s('type.num.num',X68) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num',X65)))))) )),
  inference(superposition,[],[f3041,f2312])).
fof(f19501,plain,(
  ( ! [X61,X64,X62,X63] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X64))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.num.SUC_1'(s('type.num.num',X62))))),s('type.num.num',X63))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X63) | s('type.num.num',X64) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num',X62)))))) )),
  inference(superposition,[],[f3041,f407])).
fof(f19499,plain,(
  ( ! [X57,X56,X55] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num',X57))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X56) | s('type.num.num',X57) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X55)))) )),
  inference(superposition,[],[f3041,f334])).
fof(f19592,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num',X46) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num',X44))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num',X46))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X44))))),s('type.num.num',X45))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X45)) )),
  inference(forward_demodulation,[],[f19496,f449])).
fof(f19496,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num',X46))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X44))))),s('type.num.num',X45))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X45) | s('type.num.num',X46) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X43))),s('type.num.num',X44)))) )),
  inference(superposition,[],[f3041,f2438])).
fof(f19493,plain,(
  ( ! [X33,X31,X32] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num',X32))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X33))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X32) | s('type.num.num',X33) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3041,f333])).
fof(f19490,plain,(
  ( ! [X21,X19,X22,X20,X18] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X19))))),s('type.num.num',X21))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X21) | s('type.num.num',X22) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20)))))) )),
  inference(superposition,[],[f3041,f2136])).
fof(f19489,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X14))))),s('type.num.num',X16))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X16) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15)))))) )),
  inference(superposition,[],[f3041,f2454])).
fof(f19488,plain,(
  ( ! [X12,X10,X8,X11,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X8))))),s('type.num.num',X11))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X11) | s('type.num.num',X12) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X10)))))) )),
  inference(superposition,[],[f3041,f2454])).
fof(f19486,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X2) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(superposition,[],[f3041,f405])).
fof(f19483,plain,(
  ( ! [X39,X37,X38,X36] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',X38))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num',X37))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num',X37))) | s('type.num.num',X38) = s('type.num.num',X39)) )),
  inference(superposition,[],[f3041,f449])).
fof(f19482,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X34))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X33))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X33))) | s('type.num.num',X34) = s('type.num.num',X35)) )),
  inference(superposition,[],[f3041,f2438])).
fof(f19481,plain,(
  ( ! [X30,X31,X29] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num',X29))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X29) | s('type.num.num',X31) = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X30)),X29))) )),
  inference(superposition,[],[f3041,f2050])).
fof(f19480,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num',X26))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X26) | s('type.num.num',X28) = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X26))) )),
  inference(superposition,[],[f3041,f2046])).
fof(f19475,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X10))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X10) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12)))) )),
  inference(superposition,[],[f3041,f2454])).
fof(f19474,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X6))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X6))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X6) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8)))) )),
  inference(superposition,[],[f3041,f2454])).
fof(f19472,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X1) = s('type.num.num',X2)) )),
  inference(superposition,[],[f3041,f405])).
fof(f19469,plain,(
  ( ! [X90,X88,X89] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X89))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X89),s('type.num.num','const.num.SUC_1'(s('type.num.num',X88))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X89) | s('type.num.num',X90) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X88)))) )),
  inference(superposition,[],[f3041,f2379])).
fof(f19466,plain,(
  ( ! [X80,X81,X79,X82] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num',X81))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X81),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X80))),s('type.num.num',X79))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X81) | s('type.num.num',X82) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X79),s('type.num.num',X80))),s('type.num.num',X79)))) )),
  inference(superposition,[],[f3041,f2190])).
fof(f19465,plain,(
  ( ! [X78,X76,X77,X75] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X78),s('type.num.num',X77))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X77),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X75))),s('type.num.num',X76))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X77) | s('type.num.num',X78) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X75),s('type.num.num',X76))),s('type.num.num',X76)))) )),
  inference(superposition,[],[f3041,f406])).
fof(f19464,plain,(
  ( ! [X74,X72,X73] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X74),s('type.num.num',X73))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X73),s('type.num.num','const.num.SUC_1'(s('type.num.num',X72))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X73) | s('type.num.num',X74) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3041,f2260])).
fof(f19462,plain,(
  ( ! [X68,X66,X67,X65] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X68),s('type.num.num',X67))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X67),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.num.SUC_1'(s('type.num.num',X66))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X67) | s('type.num.num',X68) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num',X65)))))) )),
  inference(superposition,[],[f3041,f2312])).
fof(f19461,plain,(
  ( ! [X61,X64,X62,X63] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X64),s('type.num.num',X63))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.num.SUC_1'(s('type.num.num',X62))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X63) | s('type.num.num',X64) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num',X62)))))) )),
  inference(superposition,[],[f3041,f407])).
fof(f19459,plain,(
  ( ! [X57,X56,X55] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num',X55))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num',X56))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X56) | s('type.num.num',X57) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X55)))) )),
  inference(superposition,[],[f3041,f334])).
fof(f19582,plain,(
  ( ! [X54,X52,X53] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X54),s('type.num.num',X53))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X53) | s('type.num.num',X54) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X52)))) )),
  inference(forward_demodulation,[],[f19458,f330])).
fof(f19458,plain,(
  ( ! [X54,X52,X53] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X54),s('type.num.num',X53))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X53) | s('type.num.num',X54) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X52)))) )),
  inference(superposition,[],[f3041,f332])).
fof(f19580,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num',X46) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num',X44))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X46),s('type.num.num',X45))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X44))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X45)) )),
  inference(forward_demodulation,[],[f19456,f449])).
fof(f19456,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X46),s('type.num.num',X45))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X44))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X45) | s('type.num.num',X46) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X43))),s('type.num.num',X44)))) )),
  inference(superposition,[],[f3041,f2438])).
fof(f19579,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X41),s('type.num.num',X40))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X40) | s('type.num.num',X41) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X38),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X39)),X38))))) )),
  inference(forward_demodulation,[],[f19455,f330])).
fof(f19455,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X40),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X41),s('type.num.num',X40))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X40) | s('type.num.num',X41) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X38),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X39)),X38))))) )),
  inference(superposition,[],[f3041,f2050])).
fof(f19578,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',X36))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X36) | s('type.num.num',X37) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X34),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X35),s('type.num.num','const.num.|48|_0')),X34))))) )),
  inference(forward_demodulation,[],[f19454,f330])).
fof(f19454,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',X36))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X36) | s('type.num.num',X37) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X34),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X35),s('type.num.num','const.num.|48|_0')),X34))))) )),
  inference(superposition,[],[f3041,f2046])).
fof(f19453,plain,(
  ( ! [X33,X31,X32] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X31))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num',X32))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X32) | s('type.num.num',X33) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3041,f333])).
fof(f19577,plain,(
  ( ! [X30,X28,X29] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X30),s('type.num.num',X29))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X29) | s('type.num.num',X30) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f19452,f330])).
fof(f19452,plain,(
  ( ! [X30,X28,X29] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X30),s('type.num.num',X29))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X29) | s('type.num.num',X30) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3041,f330])).
fof(f19450,plain,(
  ( ! [X21,X19,X22,X20,X18] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X21))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X19))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X21) | s('type.num.num',X22) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20)))))) )),
  inference(superposition,[],[f3041,f2136])).
fof(f19449,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X16))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X14))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X16) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15)))))) )),
  inference(superposition,[],[f3041,f2454])).
fof(f19448,plain,(
  ( ! [X12,X10,X8,X11,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X11))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X8))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X11) | s('type.num.num',X12) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X10)))))) )),
  inference(superposition,[],[f3041,f2454])).
fof(f19446,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X2) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(superposition,[],[f3041,f405])).
fof(f19380,plain,(
  ( ! [X26,X27,X25] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num',X26))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num',X27))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num',X26))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f449])).
fof(f19379,plain,(
  ( ! [X24,X23,X22] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X23))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X24))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X23))) | s('type.num.num',X24) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f2438])).
fof(f19372,plain,(
  ( ! [X8,X7,X9] : (s('type.num.num',X7) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X9)))) )),
  inference(superposition,[],[f3040,f2454])).
fof(f19371,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num',X4) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X4))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X4) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X6)))) )),
  inference(superposition,[],[f3040,f2454])).
fof(f19369,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f405])).
fof(f19366,plain,(
  ( ! [X66,X65] : (s('type.num.num',X66) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num','const.num.SUC_1'(s('type.num.num',X65))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X66) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X65)))) )),
  inference(superposition,[],[f3040,f2379])).
fof(f19363,plain,(
  ( ! [X61,X59,X60] : (s('type.num.num',X61) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))),s('type.num.num',X59))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X61) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X59),s('type.num.num',X60))),s('type.num.num',X59)))) )),
  inference(superposition,[],[f3040,f2190])).
fof(f19362,plain,(
  ( ! [X57,X58,X56] : (s('type.num.num',X58) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X56))),s('type.num.num',X57))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X58) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.num.num',X57)))) )),
  inference(superposition,[],[f3040,f406])).
fof(f19361,plain,(
  ( ! [X54,X55] : (s('type.num.num',X55) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num','const.num.SUC_1'(s('type.num.num',X54))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X55) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3040,f2260])).
fof(f19359,plain,(
  ( ! [X50,X51,X49] : (s('type.num.num',X51) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X49),s('type.num.num','const.num.SUC_1'(s('type.num.num',X50))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X51) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X50),s('type.num.num',X49)))))) )),
  inference(superposition,[],[f3040,f2312])).
fof(f19358,plain,(
  ( ! [X47,X48,X46] : (s('type.num.num',X48) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X48),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X46),s('type.num.num','const.num.SUC_1'(s('type.num.num',X47))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X48) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X46),s('type.num.num',X47)))))) )),
  inference(superposition,[],[f3040,f407])).
fof(f19356,plain,(
  ( ! [X43,X42] : (s('type.num.num',X43) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num',X42))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X43) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X42)))) )),
  inference(superposition,[],[f3040,f334])).
fof(f19388,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num',X34))))) | s('type.num.num',X35) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X34))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X35)) )),
  inference(forward_demodulation,[],[f19353,f449])).
fof(f19353,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.num.num',X35) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X34))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X35) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X33))),s('type.num.num',X34)))) )),
  inference(superposition,[],[f3040,f2438])).
fof(f19350,plain,(
  ( ! [X24,X25] : (s('type.num.num',X25) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num',X24))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X25) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3040,f333])).
fof(f19347,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.num.num',X17) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X15))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X17) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X16)))))) )),
  inference(superposition,[],[f3040,f2136])).
fof(f19346,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.num.num',X13) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X13) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12)))))) )),
  inference(superposition,[],[f3040,f2454])).
fof(f19345,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.num.num',X9) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X6))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X9) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8)))))) )),
  inference(superposition,[],[f3040,f2454])).
fof(f19343,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X2) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(superposition,[],[f3040,f405])).
fof(f19340,plain,(
  ( ! [X66,X65] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X65))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X65))),s('type.num.num',X66))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X65))) | s('type.num.num',X66) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f2379])).
fof(f19337,plain,(
  ( ! [X61,X59,X60] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))),s('type.num.num',X59))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))),s('type.num.num',X59))),s('type.num.num',X61))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X59),s('type.num.num',X60))),s('type.num.num',X59))) | s('type.num.num',X61) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f2190])).
fof(f19336,plain,(
  ( ! [X57,X58,X56] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X56))),s('type.num.num',X57))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X56))),s('type.num.num',X57))),s('type.num.num',X58))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.num.num',X57))) | s('type.num.num',X58) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f406])).
fof(f19335,plain,(
  ( ! [X54,X55] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X54))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X54))),s('type.num.num',X55))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X55) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f2260])).
fof(f19333,plain,(
  ( ! [X50,X51,X49] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X49),s('type.num.num','const.num.SUC_1'(s('type.num.num',X50))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X49),s('type.num.num','const.num.SUC_1'(s('type.num.num',X50))))),s('type.num.num',X51))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X50),s('type.num.num',X49))))) | s('type.num.num',X51) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f2312])).
fof(f19332,plain,(
  ( ! [X47,X48,X46] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X46),s('type.num.num','const.num.SUC_1'(s('type.num.num',X47))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X46),s('type.num.num','const.num.SUC_1'(s('type.num.num',X47))))),s('type.num.num',X48))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X46),s('type.num.num',X47))))) | s('type.num.num',X48) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f407])).
fof(f19330,plain,(
  ( ! [X43,X42] : (s('type.num.num',X42) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X43))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X42))) | s('type.num.num',X43) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f334])).
fof(f19383,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num',X34))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X34))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X34))))),s('type.num.num',X35))) | s('type.num.num',X35) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f19327,f449])).
fof(f19327,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X34))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X34))))),s('type.num.num',X35))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X33))),s('type.num.num',X34))) | s('type.num.num',X35) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f2438])).
fof(f19324,plain,(
  ( ! [X24,X25] : (s('type.num.num',X24) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X25))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f333])).
fof(f19321,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X15))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X15))))),s('type.num.num',X17))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X16))))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f2136])).
fof(f19320,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))))),s('type.num.num',X13))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12))))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f2454])).
fof(f19319,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X6))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X6))))),s('type.num.num',X9))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f2454])).
fof(f19317,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3040,f405])).
fof(f19239,plain,(
  ( ! [X532,X530,X533,X531] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X533),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X531),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X532),s('type.num.num',X530))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X533) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X530),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X531),s('type.num.num',X532)))))) )),
  inference(superposition,[],[f3039,f2454])).
fof(f19238,plain,(
  ( ! [X528,X526,X529,X527] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X527),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X528),s('type.num.num',X526))))),s('type.num.num',X529))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X526),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X527),s('type.num.num',X528))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X529)) )),
  inference(superposition,[],[f3039,f2454])).
fof(f19236,plain,(
  ( ! [X520,X522,X518,X521,X517,X519] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X520),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X518),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X519),s('type.num.num',X517)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X517),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X518),s('type.num.num',X519))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X521),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X522),s('type.num.num',X520)))))) )),
  inference(superposition,[],[f2460,f2454])).
fof(f19235,plain,(
  ( ! [X511,X516,X512,X514,X513,X515] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X512),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X513),s('type.num.num',X511))))),s('type.num.num',X514)))) | s('type.num.num',X514) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X515),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X516),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X511),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X512),s('type.num.num',X513)))))))))) )),
  inference(superposition,[],[f2460,f2454])).
fof(f19222,plain,(
  ( ! [X455,X457,X456,X458] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X456),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X457),s('type.num.num',X455))))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X458)),'const.arithmetic.*_2'(s('type.num.num',X455),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X456),s('type.num.num',X457))))))))) )),
  inference(superposition,[],[f2050,f2454])).
fof(f19220,plain,(
  ( ! [X447,X449,X448,X450] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X448),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X449),s('type.num.num',X447))))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X450),s('type.num.num','const.num.|48|_0')),'const.arithmetic.*_2'(s('type.num.num',X447),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X448),s('type.num.num',X449))))))))) )),
  inference(superposition,[],[f2046,f2454])).
fof(f19218,plain,(
  ( ! [X441,X440,X442] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X441),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X442),s('type.num.num',X440)))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X440),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X441),s('type.num.num',X442)))))) )),
  inference(superposition,[],[f2035,f2454])).
fof(f19216,plain,(
  ( ! [X436,X434,X433,X435] : (s('type.num.num',X436) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X434),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X435),s('type.num.num',X433))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X436),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X433),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X434),s('type.num.num',X435))))))))) )),
  inference(superposition,[],[f1985,f2454])).
fof(f19215,plain,(
  ( ! [X430,X432,X429,X431] : (s('type.num.num',X432) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X430),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X431),s('type.num.num',X429))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X429),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X430),s('type.num.num',X431))))),s('type.num.num',X432))))) )),
  inference(superposition,[],[f1985,f2454])).
fof(f19214,plain,(
  ( ! [X428,X426,X425,X427] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X426),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X427),s('type.num.num',X425))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X428),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X425),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X426),s('type.num.num',X427))))))))) )),
  inference(superposition,[],[f1984,f2454])).
fof(f19296,plain,(
  ( ! [X416,X418,X415,X417,X419] : (s('type.num.num',X418) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X416),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X417),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X415),s('type.num.num',X419))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X415),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X416),s('type.num.num',X417))))),s('type.num.num',X418))))) )),
  inference(forward_demodulation,[],[f19295,f449])).
fof(f19295,plain,(
  ( ! [X416,X418,X415,X417,X419] : (s('type.num.num',X418) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X416),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X417),s('type.num.num',X415))),s('type.num.num',X419))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X415),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X416),s('type.num.num',X417))))),s('type.num.num',X418))))) )),
  inference(forward_demodulation,[],[f19212,f449])).
fof(f19212,plain,(
  ( ! [X416,X418,X415,X417,X419] : (s('type.num.num',X418) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X416),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X417),s('type.num.num',X415))))),s('type.num.num',X419))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X415),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X416),s('type.num.num',X417))))),s('type.num.num',X418))))) )),
  inference(superposition,[],[f1982,f2454])).
fof(f19211,plain,(
  ( ! [X412,X414,X410,X413,X411] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X413),s('type.num.num',X414))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X411),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X412),s('type.num.num',X410))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X413),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X410),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X411),s('type.num.num',X412))))))))) )),
  inference(superposition,[],[f1982,f2454])).
fof(f19160,plain,(
  ( ! [X204,X202,X205,X203] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X205),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X203),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X204),s('type.num.num',X202)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X202),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X203),s('type.num.num',X204))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X205),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X202),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X203),s('type.num.num',X204)))),X205))))) )),
  inference(superposition,[],[f593,f2454])).
fof(f19294,plain,(
  ( ! [X198,X200,X199,X201] : (s('type.num.num',X201) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X200),s('type.num.num',sK16(X201,'const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num',X200)))))))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X200),s('type.num.num',X198))))),s('type.num.num',X201))))) )),
  inference(forward_demodulation,[],[f19293,f449])).
fof(f19293,plain,(
  ( ! [X198,X200,X199,X201] : (s('type.num.num',X201) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num',X200))),s('type.num.num',sK16(X201,'const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num',X200)))))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X200),s('type.num.num',X198))))),s('type.num.num',X201))))) )),
  inference(forward_demodulation,[],[f19159,f449])).
fof(f19159,plain,(
  ( ! [X198,X200,X199,X201] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X200),s('type.num.num',X198))))),s('type.num.num',X201)))) | s('type.num.num',X201) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num',X200))))),s('type.num.num',sK16(X201,'const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num',X200))))))))) )),
  inference(superposition,[],[f593,f2454])).
fof(f19157,plain,(
  ( ! [X191,X189,X192,X190,X188] : (s('type.num.num',X191) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X189),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X190),s('type.num.num',X188))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X192),s('type.num.num',X191))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X192),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X188),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X189),s('type.num.num',X190)))))))) )),
  inference(superposition,[],[f452,f2454])).
fof(f19156,plain,(
  ( ! [X187,X185,X186,X184,X183] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X184),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X185),s('type.num.num',X183))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X183),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X184),s('type.num.num',X185))))),s('type.num.num',X186))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X183),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X184),s('type.num.num',X185))))),s('type.num.num',X187)))) )),
  inference(superposition,[],[f451,f2454])).
fof(f19154,plain,(
  ( ! [X177,X175,X173,X176,X174] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X176),s('type.num.num',X177))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X176),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X174),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X175),s('type.num.num',X173))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X176) | s('type.num.num',X177) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X173),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X174),s('type.num.num',X175)))))) )),
  inference(superposition,[],[f450,f2454])).
fof(f19153,plain,(
  ( ! [X171,X169,X172,X170,X168] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X169),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X170),s('type.num.num',X168))))),s('type.num.num',X171))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X169),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X170),s('type.num.num',X168))))),s('type.num.num',X172))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X168),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X169),s('type.num.num',X170))))) | s('type.num.num',X171) = s('type.num.num',X172)) )),
  inference(superposition,[],[f450,f2454])).
fof(f19149,plain,(
  ( ! [X152,X151,X149,X150] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X150),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X151),s('type.num.num',X149))))) | s('type.num.num',X152) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X149),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X150),s('type.num.num',X151))))),s('type.num.num',X152)))) )),
  inference(superposition,[],[f422,f2454])).
fof(f19148,plain,(
  ( ! [X146,X147,X145,X148] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X148),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X146),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X147),s('type.num.num',X145))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X145),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X146),s('type.num.num',X147)))))) )),
  inference(superposition,[],[f421,f2454])).
fof(f19145,plain,(
  ( ! [X134,X136,X135,X133] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X134),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X135),s('type.num.num',X133))))),s('type.num.num',X136))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X133),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X134),s('type.num.num',X135)))))) )),
  inference(superposition,[],[f420,f2454])).
fof(f19143,plain,(
  ( ! [X127,X125,X123,X126,X124] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X126),s('type.num.num',X127))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X124),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X125),s('type.num.num',X123))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X127),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X124),s('type.num.num',X125))))))))) )),
  inference(superposition,[],[f419,f2454])).
fof(f19142,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num',X121) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X122),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X119),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X120),s('type.num.num',X118))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X118),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X119),s('type.num.num',X120))))),s('type.num.num',X121))))) )),
  inference(superposition,[],[f419,f2454])).
fof(f19117,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X35))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X34),s('type.num.num',X32))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X32) | s('type.num.num',X35) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num',X34)))) )),
  inference(superposition,[],[f450,f2454])).
fof(f19099,plain,(
  ( ! [X532,X530,X533,X531] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X533),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X532),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X530),s('type.num.num',X531))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X533) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X530),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X531),s('type.num.num',X532)))))) )),
  inference(superposition,[],[f3039,f2454])).
fof(f19098,plain,(
  ( ! [X528,X526,X529,X527] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X528),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X526),s('type.num.num',X527))))),s('type.num.num',X529))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X526),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X527),s('type.num.num',X528))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X529)) )),
  inference(superposition,[],[f3039,f2454])).
fof(f19096,plain,(
  ( ! [X520,X522,X518,X521,X517,X519] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X520),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X519),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X517),s('type.num.num',X518)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X517),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X518),s('type.num.num',X519))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X521),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X522),s('type.num.num',X520)))))) )),
  inference(superposition,[],[f2460,f2454])).
fof(f19095,plain,(
  ( ! [X511,X516,X512,X514,X513,X515] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X513),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X511),s('type.num.num',X512))))),s('type.num.num',X514)))) | s('type.num.num',X514) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X515),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X516),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X511),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X512),s('type.num.num',X513)))))))))) )),
  inference(superposition,[],[f2460,f2454])).
fof(f19082,plain,(
  ( ! [X455,X457,X456,X458] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X457),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X455),s('type.num.num',X456))))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X458)),'const.arithmetic.*_2'(s('type.num.num',X455),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X456),s('type.num.num',X457))))))))) )),
  inference(superposition,[],[f2050,f2454])).
fof(f19080,plain,(
  ( ! [X447,X449,X448,X450] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X449),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X447),s('type.num.num',X448))))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X450),s('type.num.num','const.num.|48|_0')),'const.arithmetic.*_2'(s('type.num.num',X447),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X448),s('type.num.num',X449))))))))) )),
  inference(superposition,[],[f2046,f2454])).
fof(f19078,plain,(
  ( ! [X441,X440,X442] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X442),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X440),s('type.num.num',X441)))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X440),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X441),s('type.num.num',X442)))))) )),
  inference(superposition,[],[f2035,f2454])).
fof(f19076,plain,(
  ( ! [X436,X434,X433,X435] : (s('type.num.num',X436) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X435),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X433),s('type.num.num',X434))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X436),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X433),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X434),s('type.num.num',X435))))))))) )),
  inference(superposition,[],[f1985,f2454])).
fof(f19075,plain,(
  ( ! [X430,X432,X429,X431] : (s('type.num.num',X432) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X431),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X429),s('type.num.num',X430))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X429),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X430),s('type.num.num',X431))))),s('type.num.num',X432))))) )),
  inference(superposition,[],[f1985,f2454])).
fof(f19074,plain,(
  ( ! [X428,X426,X425,X427] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X427),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X425),s('type.num.num',X426))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X428),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X425),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X426),s('type.num.num',X427))))))))) )),
  inference(superposition,[],[f1984,f2454])).
fof(f19285,plain,(
  ( ! [X416,X418,X415,X417,X419] : (s('type.num.num',X418) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X417),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X415),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X416),s('type.num.num',X419))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X415),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X416),s('type.num.num',X417))))),s('type.num.num',X418))))) )),
  inference(forward_demodulation,[],[f19284,f449])).
fof(f19284,plain,(
  ( ! [X416,X418,X415,X417,X419] : (s('type.num.num',X418) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X417),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X415),s('type.num.num',X416))),s('type.num.num',X419))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X415),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X416),s('type.num.num',X417))))),s('type.num.num',X418))))) )),
  inference(forward_demodulation,[],[f19072,f449])).
fof(f19072,plain,(
  ( ! [X416,X418,X415,X417,X419] : (s('type.num.num',X418) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X417),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X415),s('type.num.num',X416))))),s('type.num.num',X419))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X415),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X416),s('type.num.num',X417))))),s('type.num.num',X418))))) )),
  inference(superposition,[],[f1982,f2454])).
fof(f19071,plain,(
  ( ! [X412,X414,X410,X413,X411] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X413),s('type.num.num',X414))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X412),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X410),s('type.num.num',X411))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X413),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X410),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X411),s('type.num.num',X412))))))))) )),
  inference(superposition,[],[f1982,f2454])).
fof(f19020,plain,(
  ( ! [X204,X202,X205,X203] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X205),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X204),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X202),s('type.num.num',X203)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X202),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X203),s('type.num.num',X204))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X205),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X202),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X203),s('type.num.num',X204)))),X205))))) )),
  inference(superposition,[],[f593,f2454])).
fof(f19283,plain,(
  ( ! [X198,X200,X199,X201] : (s('type.num.num',X201) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X200),s('type.num.num',sK16(X201,'const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num',X200)))))))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num',X199))))),s('type.num.num',X201))))) )),
  inference(forward_demodulation,[],[f19282,f449])).
fof(f19282,plain,(
  ( ! [X198,X200,X199,X201] : (s('type.num.num',X201) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num',X200))),s('type.num.num',sK16(X201,'const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num',X200)))))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num',X199))))),s('type.num.num',X201))))) )),
  inference(forward_demodulation,[],[f19019,f449])).
fof(f19019,plain,(
  ( ! [X198,X200,X199,X201] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num',X199))))),s('type.num.num',X201)))) | s('type.num.num',X201) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num',X200))))),s('type.num.num',sK16(X201,'const.arithmetic.*_2'(s('type.num.num',X198),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num',X200))))))))) )),
  inference(superposition,[],[f593,f2454])).
fof(f19017,plain,(
  ( ! [X191,X189,X192,X190,X188] : (s('type.num.num',X191) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X190),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X188),s('type.num.num',X189))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X192),s('type.num.num',X191))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X192),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X188),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X189),s('type.num.num',X190)))))))) )),
  inference(superposition,[],[f452,f2454])).
fof(f19016,plain,(
  ( ! [X187,X185,X186,X184,X183] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X183),s('type.num.num',X184))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X183),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X184),s('type.num.num',X185))))),s('type.num.num',X186))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X183),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X184),s('type.num.num',X185))))),s('type.num.num',X187)))) )),
  inference(superposition,[],[f451,f2454])).
fof(f19014,plain,(
  ( ! [X177,X175,X173,X176,X174] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X176),s('type.num.num',X177))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X176),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X175),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X173),s('type.num.num',X174))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X176) | s('type.num.num',X177) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X173),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X174),s('type.num.num',X175)))))) )),
  inference(superposition,[],[f450,f2454])).
fof(f19013,plain,(
  ( ! [X171,X169,X172,X170,X168] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X170),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X168),s('type.num.num',X169))))),s('type.num.num',X171))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X170),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X168),s('type.num.num',X169))))),s('type.num.num',X172))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X168),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X169),s('type.num.num',X170))))) | s('type.num.num',X171) = s('type.num.num',X172)) )),
  inference(superposition,[],[f450,f2454])).
fof(f19009,plain,(
  ( ! [X152,X151,X149,X150] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X151),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X149),s('type.num.num',X150))))) | s('type.num.num',X152) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X149),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X150),s('type.num.num',X151))))),s('type.num.num',X152)))) )),
  inference(superposition,[],[f422,f2454])).
fof(f19008,plain,(
  ( ! [X146,X147,X145,X148] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X148),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X147),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X145),s('type.num.num',X146))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X145),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X146),s('type.num.num',X147)))))) )),
  inference(superposition,[],[f421,f2454])).
fof(f19005,plain,(
  ( ! [X134,X136,X135,X133] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X135),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X133),s('type.num.num',X134))))),s('type.num.num',X136))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X133),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X134),s('type.num.num',X135)))))) )),
  inference(superposition,[],[f420,f2454])).
fof(f19003,plain,(
  ( ! [X127,X125,X123,X126,X124] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X126),s('type.num.num',X127))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X125),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num',X124))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X127),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X124),s('type.num.num',X125))))))))) )),
  inference(superposition,[],[f419,f2454])).
fof(f19002,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num',X121) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X122),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X120),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X118),s('type.num.num',X119))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X118),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X119),s('type.num.num',X120))))),s('type.num.num',X121))))) )),
  inference(superposition,[],[f419,f2454])).
fof(f18985,plain,(
  ( ! [X64,X62,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X64),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num',X63))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X62) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X64)))) )),
  inference(superposition,[],[f3039,f2454])).
fof(f19273,plain,(
  ( ! [X57,X56,X55] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num','const.num.SUC_1'(s('type.num.num',X55))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56)))))))) )),
  inference(forward_demodulation,[],[f18983,f449])).
fof(f18983,plain,(
  ( ! [X57,X56,X55] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X55))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X57),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56)))))))) )),
  inference(superposition,[],[f2312,f2454])).
fof(f18982,plain,(
  ( ! [X54,X52,X53] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num',X54))))),s('type.num.num',X52))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X54),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X53))))),s('type.num.num',X52)))) )),
  inference(superposition,[],[f2190,f2454])).
fof(f18979,plain,(
  ( ! [X43,X41,X42,X40] : (s('type.num.num',X43) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X40),s('type.num.num',X41))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X40),s('type.num.num',X43))))) )),
  inference(superposition,[],[f1982,f2454])).
fof(f18977,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X35))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X33))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X32) | s('type.num.num',X35) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num',X34)))) )),
  inference(superposition,[],[f450,f2454])).
fof(f19270,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X30),s('type.num.num',X31))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num',X29))))),s('type.num.num',X31)))) )),
  inference(forward_demodulation,[],[f18976,f449])).
fof(f18976,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num',X30))),s('type.num.num',X31))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num',X29))))),s('type.num.num',X31)))) )),
  inference(superposition,[],[f449,f2454])).
fof(f18975,plain,(
  ( ! [X26,X27,X25] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num',X26))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num',X27)))) )),
  inference(superposition,[],[f421,f2454])).
fof(f18974,plain,(
  ( ! [X24,X23,X22] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X23))))) | s('type.num.num',X22) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f420,f2454])).
fof(f18973,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.num.num',X21) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X19))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))),s('type.num.num',X21))))) )),
  inference(superposition,[],[f419,f2454])).
fof(f18972,plain,(
  ( ! [X17,X15,X16] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X16)))))))) )),
  inference(superposition,[],[f407,f2454])).
fof(f18971,plain,(
  ( ! [X14,X12,X13] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X14))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X14)))))) )),
  inference(superposition,[],[f406,f2454])).
fof(f18964,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X25))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X23)))))))) )),
  inference(superposition,[],[f2454,f449])).
fof(f18955,plain,(
  ( ! [X39,X37,X38,X36] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',X38))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num',X37))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X38),s('type.num.num',X39)))))) )),
  inference(superposition,[],[f2454,f449])).
fof(f18954,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X34))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X33))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X34),s('type.num.num',X35)))))) )),
  inference(superposition,[],[f2454,f2438])).
fof(f19260,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11)))))))) )),
  inference(forward_demodulation,[],[f18947,f449])).
fof(f18947,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12))),s('type.num.num',X13))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11)))))))) )),
  inference(superposition,[],[f2454,f2454])).
fof(f19259,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X9))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X6)))))))) )),
  inference(forward_demodulation,[],[f18946,f449])).
fof(f18946,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X6)))))))) )),
  inference(superposition,[],[f2454,f2454])).
fof(f19255,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X21))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20)))))))) )),
  inference(forward_demodulation,[],[f18862,f449])).
fof(f18862,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X21))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X19))),s('type.num.num',X20)))))) )),
  inference(superposition,[],[f2454,f2438])).
fof(f18860,plain,(
  ( ! [X14,X12,X13] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X14))),s('type.num.num',X12)))) )),
  inference(superposition,[],[f2454,f405])).
fof(f18854,plain,(
  ( ! [X39,X37,X38,X36] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num',X37))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',X38)))))))) )),
  inference(superposition,[],[f2454,f449])).
fof(f18853,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X33))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num',X34)))))))) )),
  inference(superposition,[],[f2454,f2438])).
fof(f19252,plain,(
  ( ! [X30,X31,X29] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X30)),X29)),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num',X29)))))) )),
  inference(forward_demodulation,[],[f18852,f330])).
fof(f18852,plain,(
  ( ! [X30,X31,X29] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X30)),X29)),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num',X29)))))) )),
  inference(superposition,[],[f2454,f2050])).
fof(f19251,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X26)),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num',X26)))))) )),
  inference(forward_demodulation,[],[f18851,f330])).
fof(f18851,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X26)),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num',X26)))))) )),
  inference(superposition,[],[f2454,f2046])).
fof(f18847,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X15))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X16))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X14)))))) )),
  inference(superposition,[],[f2454,f2136])).
fof(f18846,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X10)))))) )),
  inference(superposition,[],[f2454,f2454])).
fof(f18845,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X6))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X6)))))) )),
  inference(superposition,[],[f2454,f2454])).
fof(f18833,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))))))) )),
  inference(unit_resulting_resolution,[],[f2454,f1985])).
fof(f18839,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f2454,f419])).
fof(f18841,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f2454,f1985])).
fof(f18817,plain,(
  ( ! [X509,X511,X512,X510] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X509),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X510),s('type.num.num',X511))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X512),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X510),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X509),s('type.num.num',X511))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X512)) )),
  inference(forward_demodulation,[],[f18759,f449])).
fof(f18759,plain,(
  ( ! [X509,X511,X512,X510] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X512),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X510),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X509),s('type.num.num',X511))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X512) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X509),s('type.num.num',X510))),s('type.num.num',X511)))) )),
  inference(superposition,[],[f3039,f2438])).
fof(f18816,plain,(
  ( ! [X505,X507,X508,X506] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X505),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X506),s('type.num.num',X507))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X506),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X505),s('type.num.num',X507))))),s('type.num.num',X508))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X508)) )),
  inference(forward_demodulation,[],[f18758,f449])).
fof(f18758,plain,(
  ( ! [X505,X507,X508,X506] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X506),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X505),s('type.num.num',X507))))),s('type.num.num',X508))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X505),s('type.num.num',X506))),s('type.num.num',X507))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X508)) )),
  inference(superposition,[],[f3039,f2438])).
fof(f18815,plain,(
  ( ! [X499,X500,X496,X498,X501,X497] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X496),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X497),s('type.num.num',X498))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X500),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X501),s('type.num.num',X499))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X499),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X497),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X496),s('type.num.num',X498))))))))) )),
  inference(forward_demodulation,[],[f18756,f449])).
fof(f18756,plain,(
  ( ! [X499,X500,X496,X498,X501,X497] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X499),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X497),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X496),s('type.num.num',X498)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X500),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X501),s('type.num.num',X499))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X496),s('type.num.num',X497))),s('type.num.num',X498)))) )),
  inference(superposition,[],[f2460,f2438])).
fof(f18814,plain,(
  ( ! [X492,X494,X490,X493,X495,X491] : (s('type.num.num',X493) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X494),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X495),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X490),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X491),s('type.num.num',X492))))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X491),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X490),s('type.num.num',X492))))),s('type.num.num',X493))))) )),
  inference(forward_demodulation,[],[f18755,f449])).
fof(f18755,plain,(
  ( ! [X492,X494,X490,X493,X495,X491] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X491),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X490),s('type.num.num',X492))))),s('type.num.num',X493)))) | s('type.num.num',X493) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X494),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X495),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X490),s('type.num.num',X491))),s('type.num.num',X492)))))))) )),
  inference(superposition,[],[f2460,f2438])).
fof(f18745,plain,(
  ( ! [X449,X451,X452,X450] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X450),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X449),s('type.num.num',X451))))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X452)),'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X449),s('type.num.num',X450))),s('type.num.num',X451))))))) )),
  inference(superposition,[],[f2050,f2438])).
fof(f18743,plain,(
  ( ! [X441,X443,X444,X442] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X442),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X441),s('type.num.num',X443))))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X444),s('type.num.num','const.num.|48|_0')),'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X441),s('type.num.num',X442))),s('type.num.num',X443))))))) )),
  inference(superposition,[],[f2046,f2438])).
fof(f18813,plain,(
  ( ! [X436,X434,X435] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X434),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X435),s('type.num.num',X436))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X435),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X434),s('type.num.num',X436))))))))) )),
  inference(forward_demodulation,[],[f18741,f449])).
fof(f18741,plain,(
  ( ! [X436,X434,X435] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X435),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X434),s('type.num.num',X436)))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X434),s('type.num.num',X435))),s('type.num.num',X436)))) )),
  inference(superposition,[],[f2035,f2438])).
fof(f18811,plain,(
  ( ! [X428,X430,X429,X427] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X430),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X427),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X428),s('type.num.num',X429)))))))) | s('type.num.num',X430) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X428),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X427),s('type.num.num',X429)))))) )),
  inference(forward_demodulation,[],[f18739,f449])).
fof(f18739,plain,(
  ( ! [X428,X430,X429,X427] : (s('type.num.num',X430) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X428),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X427),s('type.num.num',X429))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X430),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X427),s('type.num.num',X428))),s('type.num.num',X429))))))) )),
  inference(superposition,[],[f1985,f2438])).
fof(f18810,plain,(
  ( ! [X424,X426,X423,X425] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X423),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X424),s('type.num.num',X425))))),s('type.num.num',X426)))) | s('type.num.num',X426) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X424),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X423),s('type.num.num',X425)))))) )),
  inference(forward_demodulation,[],[f18738,f449])).
fof(f18738,plain,(
  ( ! [X424,X426,X423,X425] : (s('type.num.num',X426) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X424),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X423),s('type.num.num',X425))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X423),s('type.num.num',X424))),s('type.num.num',X425))),s('type.num.num',X426))))) )),
  inference(superposition,[],[f1985,f2438])).
fof(f18809,plain,(
  ( ! [X420,X422,X421,X419] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X422),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X419),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X420),s('type.num.num',X421)))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X420),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X419),s('type.num.num',X421)))))) )),
  inference(forward_demodulation,[],[f18737,f449])).
fof(f18737,plain,(
  ( ! [X420,X422,X421,X419] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X420),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X419),s('type.num.num',X421))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X422),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X419),s('type.num.num',X420))),s('type.num.num',X421))))))) )),
  inference(superposition,[],[f1984,f2438])).
fof(f18808,plain,(
  ( ! [X412,X410,X413,X409,X411] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X409),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X410),s('type.num.num',X411))))),s('type.num.num',X412)))) | s('type.num.num',X412) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X410),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X409),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X411),s('type.num.num',X413)))))))) )),
  inference(forward_demodulation,[],[f18807,f449])).
fof(f18807,plain,(
  ( ! [X412,X410,X413,X409,X411] : (s('type.num.num',X412) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X410),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X409),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X411),s('type.num.num',X413))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X409),s('type.num.num',X410))),s('type.num.num',X411))),s('type.num.num',X412))))) )),
  inference(forward_demodulation,[],[f18806,f449])).
fof(f18806,plain,(
  ( ! [X412,X410,X413,X409,X411] : (s('type.num.num',X412) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X410),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X409),s('type.num.num',X411))),s('type.num.num',X413))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X409),s('type.num.num',X410))),s('type.num.num',X411))),s('type.num.num',X412))))) )),
  inference(forward_demodulation,[],[f18735,f449])).
fof(f18735,plain,(
  ( ! [X412,X410,X413,X409,X411] : (s('type.num.num',X412) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X410),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X409),s('type.num.num',X411))))),s('type.num.num',X413))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X409),s('type.num.num',X410))),s('type.num.num',X411))),s('type.num.num',X412))))) )),
  inference(superposition,[],[f1982,f2438])).
fof(f18805,plain,(
  ( ! [X408,X405,X407,X404,X406] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X407),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X404),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X405),s('type.num.num',X406)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X407),s('type.num.num',X408))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X405),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X404),s('type.num.num',X406)))))) )),
  inference(forward_demodulation,[],[f18734,f449])).
fof(f18734,plain,(
  ( ! [X408,X405,X407,X404,X406] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X407),s('type.num.num',X408))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X405),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X404),s('type.num.num',X406))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X407),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X404),s('type.num.num',X405))),s('type.num.num',X406))))))) )),
  inference(superposition,[],[f1982,f2438])).
fof(f18804,plain,(
  ( ! [X198,X196,X199,X197] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X196),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num',X198))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X196),s('type.num.num',X197))),s('type.num.num',X198)),X199)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X199),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X196),s('type.num.num',X198))))))))) )),
  inference(forward_demodulation,[],[f18683,f449])).
fof(f18683,plain,(
  ( ! [X198,X196,X199,X197] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X199),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X196),s('type.num.num',X198)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X196),s('type.num.num',X197))),s('type.num.num',X198))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X199),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X196),s('type.num.num',X197))),s('type.num.num',X198)),X199))))) )),
  inference(superposition,[],[f593,f2438])).
fof(f18803,plain,(
  ( ! [X194,X192,X195,X193] : (s('type.num.num',X195) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X192),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X193),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X194),s('type.num.num',sK16(X195,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X192),s('type.num.num',X193))),s('type.num.num',X194)))))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X193),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X192),s('type.num.num',X194))))),s('type.num.num',X195))))) )),
  inference(forward_demodulation,[],[f18802,f449])).
fof(f18802,plain,(
  ( ! [X194,X192,X195,X193] : (s('type.num.num',X195) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X192),s('type.num.num',X193))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X194),s('type.num.num',sK16(X195,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X192),s('type.num.num',X193))),s('type.num.num',X194)))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X193),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X192),s('type.num.num',X194))))),s('type.num.num',X195))))) )),
  inference(forward_demodulation,[],[f18682,f449])).
fof(f18682,plain,(
  ( ! [X194,X192,X195,X193] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X193),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X192),s('type.num.num',X194))))),s('type.num.num',X195)))) | s('type.num.num',X195) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X192),s('type.num.num',X193))),s('type.num.num',X194))),s('type.num.num',sK16(X195,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X192),s('type.num.num',X193))),s('type.num.num',X194))))))) )),
  inference(superposition,[],[f593,f2438])).
fof(f18800,plain,(
  ( ! [X185,X182,X186,X184,X183] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X186),s('type.num.num',X185))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X186),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X182),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X183),s('type.num.num',X184))))))) | s('type.num.num',X185) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X183),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X182),s('type.num.num',X184)))))) )),
  inference(forward_demodulation,[],[f18680,f449])).
fof(f18680,plain,(
  ( ! [X185,X182,X186,X184,X183] : (s('type.num.num',X185) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X183),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X182),s('type.num.num',X184))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X186),s('type.num.num',X185))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X186),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X182),s('type.num.num',X183))),s('type.num.num',X184)))))) )),
  inference(superposition,[],[f452,f2438])).
fof(f18799,plain,(
  ( ! [X177,X180,X178,X181,X179] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X178),s('type.num.num',X179))))),s('type.num.num',X180))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X178),s('type.num.num',X179))))),s('type.num.num',X181))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X178),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num',X179)))))) )),
  inference(forward_demodulation,[],[f18679,f449])).
fof(f18679,plain,(
  ( ! [X177,X180,X178,X181,X179] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X178),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num',X179))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num',X178))),s('type.num.num',X179))),s('type.num.num',X180))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num',X178))),s('type.num.num',X179))),s('type.num.num',X181)))) )),
  inference(superposition,[],[f451,f2438])).
fof(f18797,plain,(
  ( ! [X167,X171,X169,X170,X168] : (s('type.num.num',X171) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X167),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X168),s('type.num.num',X169))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X170),s('type.num.num',X171))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X170),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X168),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X167),s('type.num.num',X169))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X170)) )),
  inference(forward_demodulation,[],[f18677,f449])).
fof(f18677,plain,(
  ( ! [X167,X171,X169,X170,X168] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X170),s('type.num.num',X171))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X170),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X168),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X167),s('type.num.num',X169))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X170) | s('type.num.num',X171) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X167),s('type.num.num',X168))),s('type.num.num',X169)))) )),
  inference(superposition,[],[f450,f2438])).
fof(f18796,plain,(
  ( ! [X165,X163,X166,X164,X162] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X162),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X163),s('type.num.num',X164))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X163),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X162),s('type.num.num',X164))))),s('type.num.num',X165))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X163),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X162),s('type.num.num',X164))))),s('type.num.num',X166))) | s('type.num.num',X165) = s('type.num.num',X166)) )),
  inference(forward_demodulation,[],[f18676,f449])).
fof(f18676,plain,(
  ( ! [X165,X163,X166,X164,X162] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X163),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X162),s('type.num.num',X164))))),s('type.num.num',X165))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X163),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X162),s('type.num.num',X164))))),s('type.num.num',X166))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X162),s('type.num.num',X163))),s('type.num.num',X164))) | s('type.num.num',X165) = s('type.num.num',X166)) )),
  inference(superposition,[],[f450,f2438])).
fof(f18795,plain,(
  ( ! [X146,X144,X145,X143] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X143),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X144),s('type.num.num',X145))))),s('type.num.num',X146))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X144),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X143),s('type.num.num',X145))))) | s('type.num.num',X146) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f18672,f449])).
fof(f18672,plain,(
  ( ! [X146,X144,X145,X143] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X144),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X143),s('type.num.num',X145))))) | s('type.num.num',X146) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X143),s('type.num.num',X144))),s('type.num.num',X145))),s('type.num.num',X146)))) )),
  inference(superposition,[],[f422,f2438])).
fof(f18794,plain,(
  ( ! [X142,X140,X141,X139] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X139),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X140),s('type.num.num',X141))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X142),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X140),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X139),s('type.num.num',X141)))))))) )),
  inference(forward_demodulation,[],[f18671,f449])).
fof(f18671,plain,(
  ( ! [X142,X140,X141,X139] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X142),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X140),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X139),s('type.num.num',X141))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X139),s('type.num.num',X140))),s('type.num.num',X141)))) )),
  inference(superposition,[],[f421,f2438])).
fof(f18793,plain,(
  ( ! [X127,X130,X128,X129] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X127),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X128),s('type.num.num',X129))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X128),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X127),s('type.num.num',X129))))),s('type.num.num',X130)))) )),
  inference(forward_demodulation,[],[f18668,f449])).
fof(f18668,plain,(
  ( ! [X127,X130,X128,X129] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X128),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X127),s('type.num.num',X129))))),s('type.num.num',X130))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X127),s('type.num.num',X128))),s('type.num.num',X129)))) )),
  inference(superposition,[],[f420,f2438])).
fof(f18792,plain,(
  ( ! [X121,X118,X120,X119,X117] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X121),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X117),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X118),s('type.num.num',X119)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X120),s('type.num.num',X121))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X118),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X117),s('type.num.num',X119)))))) )),
  inference(forward_demodulation,[],[f18666,f449])).
fof(f18666,plain,(
  ( ! [X121,X118,X120,X119,X117] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X120),s('type.num.num',X121))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X118),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X117),s('type.num.num',X119))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X121),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X117),s('type.num.num',X118))),s('type.num.num',X119))))))) )),
  inference(superposition,[],[f419,f2438])).
fof(f18791,plain,(
  ( ! [X116,X114,X112,X115,X113] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X112),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X113),s('type.num.num',X114))))),s('type.num.num',X115)))) | s('type.num.num',X115) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X116),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X112),s('type.num.num',X114)))))))) )),
  inference(forward_demodulation,[],[f18665,f449])).
fof(f18665,plain,(
  ( ! [X116,X114,X112,X115,X113] : (s('type.num.num',X115) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X116),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X112),s('type.num.num',X114))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X112),s('type.num.num',X113))),s('type.num.num',X114))),s('type.num.num',X115))))) )),
  inference(superposition,[],[f419,f2438])).
fof(f18648,plain,(
  ( ! [X57,X56,X55] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X57))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X57)) )),
  inference(superposition,[],[f3039,f2438])).
fof(f18647,plain,(
  ( ! [X54,X52,X53] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X54),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X53))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X54)))))))) )),
  inference(superposition,[],[f2312,f2438])).
fof(f18646,plain,(
  ( ! [X50,X51,X49] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X49),s('type.num.num',X50))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X50),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X49),s('type.num.num',X51))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X49),s('type.num.num',X50)))))) )),
  inference(superposition,[],[f2190,f2438])).
fof(f18641,plain,(
  ( ! [X30,X31,X29,X32] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num',X31))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num',X30))),s('type.num.num',X32))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num',X30))) | s('type.num.num',X31) = s('type.num.num',X32)) )),
  inference(superposition,[],[f450,f2438])).
fof(f18638,plain,(
  ( ! [X21,X19,X20] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X21))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20)))) )),
  inference(superposition,[],[f420,f2438])).
fof(f18786,plain,(
  ( ! [X14,X12,X13] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X14)))))))) )),
  inference(forward_demodulation,[],[f18636,f449])).
fof(f18636,plain,(
  ( ! [X14,X12,X13] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X14)))))))) )),
  inference(superposition,[],[f407,f2438])).
fof(f18635,plain,(
  ( ! [X10,X11,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num',X11))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X11))))),s('type.num.num',X11)))) )),
  inference(superposition,[],[f406,f2438])).
fof(f18631,plain,(
  ( ! [X28,X29,X27] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X29)),'const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',X28))))))))) )),
  inference(superposition,[],[f2438,f2050])).
fof(f18630,plain,(
  ( ! [X26,X24,X25] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),'const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X25))))))))) )),
  inference(superposition,[],[f2438,f2046])).
fof(f18626,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X14)))))) )),
  inference(superposition,[],[f2438,f2136])).
fof(f18624,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7)))))) )),
  inference(superposition,[],[f2438,f405])).
fof(f18623,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X5)))))) )),
  inference(superposition,[],[f2438,f449])).
fof(f18779,plain,(
  ( ! [X23,X21,X22] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X22)),X21)),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X23)))))) )),
  inference(forward_demodulation,[],[f18594,f332])).
fof(f18594,plain,(
  ( ! [X23,X21,X22] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X23))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X22)),X21)),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X23)))))) )),
  inference(superposition,[],[f2438,f2050])).
fof(f18778,plain,(
  ( ! [X19,X20,X18] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')),X18)),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X20)))))) )),
  inference(forward_demodulation,[],[f18593,f332])).
fof(f18593,plain,(
  ( ! [X19,X20,X18] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')),X18)),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X20)))))) )),
  inference(superposition,[],[f2438,f2046])).
fof(f18775,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X9))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X7))))),s('type.num.num',X9)))) )),
  inference(forward_demodulation,[],[f18589,f449])).
fof(f18589,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X7))))),s('type.num.num',X9))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X9)))))) )),
  inference(superposition,[],[f2438,f2136])).
fof(f18528,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))))))) )),
  inference(unit_resulting_resolution,[],[f2438,f1982])).
fof(f18769,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1))))))))) )),
  inference(forward_demodulation,[],[f18535,f449])).
fof(f18535,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X1))))))) )),
  inference(unit_resulting_resolution,[],[f2438,f419])).
fof(f18768,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))))))) )),
  inference(forward_demodulation,[],[f18537,f449])).
fof(f18537,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))))))) )),
  inference(unit_resulting_resolution,[],[f2438,f1985])).
fof(f18767,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X3)))))))) )),
  inference(forward_demodulation,[],[f18538,f449])).
fof(f18538,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f2438,f452])).
fof(f18364,plain,(
  ( ! [X478,X480,X479,X481] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X481),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X478),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X480),s('type.num.num',X479))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X481) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X478),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X479),s('type.num.num',X480)))))) )),
  inference(superposition,[],[f3039,f2136])).
fof(f18363,plain,(
  ( ! [X476,X474,X475,X477] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X474),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X476),s('type.num.num',X475))))),s('type.num.num',X477))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X474),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X475),s('type.num.num',X476))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X477)) )),
  inference(superposition,[],[f3039,f2136])).
fof(f18361,plain,(
  ( ! [X466,X469,X465,X467,X468,X470] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X468),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X465),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X467),s('type.num.num',X466)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X465),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X466),s('type.num.num',X467))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X469),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X470),s('type.num.num',X468)))))) )),
  inference(superposition,[],[f2460,f2136])).
fof(f18360,plain,(
  ( ! [X461,X463,X459,X460,X462,X464] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X459),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X461),s('type.num.num',X460))))),s('type.num.num',X462)))) | s('type.num.num',X462) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X463),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X464),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X459),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X460),s('type.num.num',X461)))))))))) )),
  inference(superposition,[],[f2460,f2136])).
fof(f18353,plain,(
  ( ! [X436,X434,X433,X435] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X433),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X435),s('type.num.num',X434))))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X436)),'const.arithmetic.*_2'(s('type.num.num',X433),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X434),s('type.num.num',X435))))))))) )),
  inference(superposition,[],[f2050,f2136])).
fof(f18351,plain,(
  ( ! [X428,X426,X425,X427] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X425),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X427),s('type.num.num',X426))))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X428),s('type.num.num','const.num.|48|_0')),'const.arithmetic.*_2'(s('type.num.num',X425),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X426),s('type.num.num',X427))))))))) )),
  inference(superposition,[],[f2046,f2136])).
fof(f18349,plain,(
  ( ! [X420,X418,X419] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X418),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X420),s('type.num.num',X419)))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X418),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X419),s('type.num.num',X420)))))) )),
  inference(superposition,[],[f2035,f2136])).
fof(f18347,plain,(
  ( ! [X412,X414,X413,X411] : (s('type.num.num',X414) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X411),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X413),s('type.num.num',X412))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X414),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X411),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X412),s('type.num.num',X413))))))))) )),
  inference(superposition,[],[f1985,f2136])).
fof(f18346,plain,(
  ( ! [X408,X410,X407,X409] : (s('type.num.num',X410) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X407),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X409),s('type.num.num',X408))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X407),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X408),s('type.num.num',X409))))),s('type.num.num',X410))))) )),
  inference(superposition,[],[f1985,f2136])).
fof(f18345,plain,(
  ( ! [X405,X403,X404,X406] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X403),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X405),s('type.num.num',X404))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X406),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X403),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X404),s('type.num.num',X405))))))))) )),
  inference(superposition,[],[f1984,f2136])).
fof(f18511,plain,(
  ( ! [X397,X393,X395,X396,X394] : (s('type.num.num',X396) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X393),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X395),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X394),s('type.num.num',X397))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X393),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X394),s('type.num.num',X395))))),s('type.num.num',X396))))) )),
  inference(forward_demodulation,[],[f18510,f449])).
fof(f18510,plain,(
  ( ! [X397,X393,X395,X396,X394] : (s('type.num.num',X396) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X393),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X395),s('type.num.num',X394))),s('type.num.num',X397))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X393),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X394),s('type.num.num',X395))))),s('type.num.num',X396))))) )),
  inference(forward_demodulation,[],[f18343,f449])).
fof(f18343,plain,(
  ( ! [X397,X393,X395,X396,X394] : (s('type.num.num',X396) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X393),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X395),s('type.num.num',X394))))),s('type.num.num',X397))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X393),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X394),s('type.num.num',X395))))),s('type.num.num',X396))))) )),
  inference(superposition,[],[f1982,f2136])).
fof(f18342,plain,(
  ( ! [X389,X391,X388,X390,X392] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X391),s('type.num.num',X392))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X388),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X390),s('type.num.num',X389))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X391),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X388),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X389),s('type.num.num',X390))))))))) )),
  inference(superposition,[],[f1982,f2136])).
fof(f18291,plain,(
  ( ! [X182,X180,X183,X181] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X183),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X180),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X182),s('type.num.num',X181)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X180),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X181),s('type.num.num',X182))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X183),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X180),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X181),s('type.num.num',X182)))),X183))))) )),
  inference(superposition,[],[f593,f2136])).
fof(f18509,plain,(
  ( ! [X177,X178,X176,X179] : (s('type.num.num',X179) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X176),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X178),s('type.num.num',sK16(X179,'const.arithmetic.*_2'(s('type.num.num',X176),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num',X178)))))))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X176),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X178),s('type.num.num',X177))))),s('type.num.num',X179))))) )),
  inference(forward_demodulation,[],[f18508,f449])).
fof(f18508,plain,(
  ( ! [X177,X178,X176,X179] : (s('type.num.num',X179) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X176),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num',X178))),s('type.num.num',sK16(X179,'const.arithmetic.*_2'(s('type.num.num',X176),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num',X178)))))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X176),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X178),s('type.num.num',X177))))),s('type.num.num',X179))))) )),
  inference(forward_demodulation,[],[f18290,f449])).
fof(f18290,plain,(
  ( ! [X177,X178,X176,X179] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X176),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X178),s('type.num.num',X177))))),s('type.num.num',X179)))) | s('type.num.num',X179) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X176),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num',X178))))),s('type.num.num',sK16(X179,'const.arithmetic.*_2'(s('type.num.num',X176),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num',X178))))))))) )),
  inference(superposition,[],[f593,f2136])).
fof(f18288,plain,(
  ( ! [X167,X169,X166,X170,X168] : (s('type.num.num',X169) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X166),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X168),s('type.num.num',X167))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X170),s('type.num.num',X169))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X170),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X166),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X167),s('type.num.num',X168)))))))) )),
  inference(superposition,[],[f452,f2136])).
fof(f18287,plain,(
  ( ! [X165,X163,X161,X164,X162] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X161),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X163),s('type.num.num',X162))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X161),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X162),s('type.num.num',X163))))),s('type.num.num',X164))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X161),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X162),s('type.num.num',X163))))),s('type.num.num',X165)))) )),
  inference(superposition,[],[f451,f2136])).
fof(f18285,plain,(
  ( ! [X154,X152,X151,X155,X153] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X154),s('type.num.num',X155))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X154),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X151),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X153),s('type.num.num',X152))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X154) | s('type.num.num',X155) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X151),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X152),s('type.num.num',X153)))))) )),
  inference(superposition,[],[f450,f2136])).
fof(f18284,plain,(
  ( ! [X146,X149,X147,X150,X148] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X146),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X148),s('type.num.num',X147))))),s('type.num.num',X149))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X146),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X148),s('type.num.num',X147))))),s('type.num.num',X150))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X146),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X147),s('type.num.num',X148))))) | s('type.num.num',X149) = s('type.num.num',X150)) )),
  inference(superposition,[],[f450,f2136])).
fof(f18280,plain,(
  ( ! [X127,X130,X128,X129] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X127),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X129),s('type.num.num',X128))))) | s('type.num.num',X130) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X127),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X128),s('type.num.num',X129))))),s('type.num.num',X130)))) )),
  inference(superposition,[],[f422,f2136])).
fof(f18279,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X126),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X125),s('type.num.num',X124))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X124),s('type.num.num',X125)))))) )),
  inference(superposition,[],[f421,f2136])).
fof(f18276,plain,(
  ( ! [X111,X114,X112,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X111),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X113),s('type.num.num',X112))))),s('type.num.num',X114))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X111),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X112),s('type.num.num',X113)))))) )),
  inference(superposition,[],[f420,f2136])).
fof(f18274,plain,(
  ( ! [X103,X101,X105,X102,X104] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X104),s('type.num.num',X105))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X101),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X103),s('type.num.num',X102))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X105),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X101),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X102),s('type.num.num',X103))))))))) )),
  inference(superposition,[],[f419,f2136])).
fof(f18273,plain,(
  ( ! [X99,X97,X100,X98,X96] : (s('type.num.num',X99) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X100),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X96),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X98),s('type.num.num',X97))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X96),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X97),s('type.num.num',X98))))),s('type.num.num',X99))))) )),
  inference(superposition,[],[f419,f2136])).
fof(f18507,plain,(
  ( ! [X43,X41,X42] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num','const.num.SUC_1'(s('type.num.num',X41))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X43))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num',X42)))))))) )),
  inference(forward_demodulation,[],[f18256,f449])).
fof(f18256,plain,(
  ( ! [X43,X41,X42] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X43))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X41))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X43))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num',X42)))))))) )),
  inference(superposition,[],[f2312,f2136])).
fof(f18255,plain,(
  ( ! [X39,X38,X40] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X39),s('type.num.num',X40))))),s('type.num.num',X38))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X40),s('type.num.num',X39))))),s('type.num.num',X38)))) )),
  inference(superposition,[],[f2190,f2136])).
fof(f18506,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X25))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X23))))),s('type.num.num',X25)))) )),
  inference(forward_demodulation,[],[f18251,f449])).
fof(f18251,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.num.num',X25))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X23))))),s('type.num.num',X25)))) )),
  inference(superposition,[],[f449,f2136])).
fof(f18247,plain,(
  ( ! [X10,X11,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X10)))))))) )),
  inference(superposition,[],[f407,f2136])).
fof(f18246,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X7))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8)))))) )),
  inference(superposition,[],[f406,f2136])).
fof(f18160,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X14)))))) )),
  inference(superposition,[],[f2136,f449])).
fof(f18158,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num',X6)))) )),
  inference(superposition,[],[f2136,f405])).
fof(f18155,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num',X26))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X25)))))))) )),
  inference(superposition,[],[f2136,f449])).
fof(f18502,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X7))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X6)))))))) )),
  inference(forward_demodulation,[],[f18151,f449])).
fof(f18151,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X7))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num',X6)))))) )),
  inference(superposition,[],[f2136,f2136])).
fof(f18147,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f2136,f419])).
fof(f18149,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1))))))))) )),
  inference(unit_resulting_resolution,[],[f2136,f1985])).
fof(f18150,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))))) )),
  inference(unit_resulting_resolution,[],[f2136,f452])).
fof(f18126,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.num.num',X31) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num',X30))))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X30),s('type.num.num',X31)))) )),
  inference(subsumption_resolution,[],[f18069,f592])).
fof(f18069,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,'F_0')) | s('type.num.num',X31) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num',X30))))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X30),s('type.num.num',X31)))) )),
  inference(superposition,[],[f2460,f336])).
fof(f18040,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X2)))))) )),
  inference(superposition,[],[f2460,f405])).
fof(f18019,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2)))) | s('type.num.num',X2) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))))) )),
  inference(superposition,[],[f2460,f405])).
fof(f17535,plain,(
  ( ! [X304,X306,X305] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X306),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X304),s('type.num.num','const.num.SUC_1'(s('type.num.num',X305))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X306) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X304),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X305),s('type.num.num',X304)))))) )),
  inference(superposition,[],[f3039,f2312])).
fof(f17534,plain,(
  ( ! [X302,X301,X303] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X301),s('type.num.num','const.num.SUC_1'(s('type.num.num',X302))))),s('type.num.num',X303))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X301),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X302),s('type.num.num',X301))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X303)) )),
  inference(superposition,[],[f3039,f2312])).
fof(f17528,plain,(
  ( ! [X288,X287,X286] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X286),s('type.num.num','const.num.SUC_1'(s('type.num.num',X287))))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X288)),'const.arithmetic.+_2'(s('type.num.num',X286),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X287),s('type.num.num',X286))))))))) )),
  inference(superposition,[],[f2050,f2312])).
fof(f17526,plain,(
  ( ! [X280,X282,X281] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X280),s('type.num.num','const.num.SUC_1'(s('type.num.num',X281))))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X282),s('type.num.num','const.num.|48|_0')),'const.arithmetic.+_2'(s('type.num.num',X280),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X281),s('type.num.num',X280))))))))) )),
  inference(superposition,[],[f2046,f2312])).
fof(f17570,plain,(
  ( ! [X97,X95,X96] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X95),s('type.num.num','const.num.SUC_1'(s('type.num.num',X96))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X97),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X96),s('type.num.num',X95)))),X97)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X97),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X95),s('type.num.num','const.num.SUC_1'(s('type.num.num',X96))))))))) )),
  inference(forward_demodulation,[],[f17466,f2312])).
fof(f17466,plain,(
  ( ! [X97,X95,X96] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X97),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X95),s('type.num.num','const.num.SUC_1'(s('type.num.num',X96)))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X96),s('type.num.num',X95))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X97),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X96),s('type.num.num',X95)))),X97))))) )),
  inference(superposition,[],[f593,f2312])).
fof(f17569,plain,(
  ( ! [X94,X92,X93] : (s('type.num.num',X94) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X92),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))),s('type.num.num',sK16(X94,'const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X93),s('type.num.num',X92)))))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X92),s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))))),s('type.num.num',X94))))) )),
  inference(forward_demodulation,[],[f17568,f449])).
fof(f17568,plain,(
  ( ! [X94,X92,X93] : (s('type.num.num',X94) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X92),s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))))),s('type.num.num',sK16(X94,'const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X93),s('type.num.num',X92)))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X92),s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))))),s('type.num.num',X94))))) )),
  inference(forward_demodulation,[],[f17465,f2312])).
fof(f17465,plain,(
  ( ! [X94,X92,X93] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X92),s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))))),s('type.num.num',X94)))) | s('type.num.num',X94) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X93),s('type.num.num',X92))))),s('type.num.num',sK16(X94,'const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X93),s('type.num.num',X92))))))))) )),
  inference(superposition,[],[f593,f2312])).
fof(f17460,plain,(
  ( ! [X74,X72,X75,X73] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X74),s('type.num.num',X75))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X74),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X72),s('type.num.num','const.num.SUC_1'(s('type.num.num',X73))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X74) | s('type.num.num',X75) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X73),s('type.num.num',X72)))))) )),
  inference(superposition,[],[f450,f2312])).
fof(f17459,plain,(
  ( ! [X70,X68,X71,X69] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X68),s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))))),s('type.num.num',X70))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X68),s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))))),s('type.num.num',X71))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X69),s('type.num.num',X68))))) | s('type.num.num',X70) = s('type.num.num',X71)) )),
  inference(superposition,[],[f450,f2312])).
fof(f17454,plain,(
  ( ! [X52,X50,X51] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X50),s('type.num.num','const.num.SUC_1'(s('type.num.num',X51))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X50),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X51),s('type.num.num',X50)))))) )),
  inference(superposition,[],[f421,f2312])).
fof(f17451,plain,(
  ( ! [X43,X41,X42] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X41),s('type.num.num','const.num.SUC_1'(s('type.num.num',X42))))),s('type.num.num',X43))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X42),s('type.num.num',X41)))))) )),
  inference(superposition,[],[f420,f2312])).
fof(f17431,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12)))))))) )),
  inference(superposition,[],[f2312,f449])).
fof(f3040,plain,(
  ( ! [X2,X3] : (s('type.num.num',X2) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X2) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f450,f333])).
fof(f3368,plain,(
  ( ! [X36] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X36))))) )),
  inference(forward_demodulation,[],[f3367,f2259])).
fof(f3367,plain,(
  ( ! [X36] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X36))))) )),
  inference(subsumption_resolution,[],[f3366,f321])).
fof(f3366,plain,(
  ( ! [X36] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X36))))) )),
  inference(forward_demodulation,[],[f3299,f669])).
fof(f3299,plain,(
  ( ! [X36] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X36),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X36),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X36))))) )),
  inference(superposition,[],[f593,f2259])).
fof(f7476,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)),'const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))))) )),
  inference(superposition,[],[f2050,f405])).
fof(f7618,plain,(
  ( ! [X103,X101,X102,X100] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X102),s('type.num.num',X103))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X102) | s('type.num.num',X103) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X100),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X101)),X100))))) )),
  inference(forward_demodulation,[],[f7535,f330])).
fof(f7535,plain,(
  ( ! [X103,X101,X102,X100] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X102),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X102),s('type.num.num',X103))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X102) | s('type.num.num',X103) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X100),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X101)),X100))))) )),
  inference(superposition,[],[f450,f2050])).
fof(f2050,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)),X11))))) )),
  inference(forward_demodulation,[],[f2049,f332])).
fof(f2049,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)),X11))))) )),
  inference(subsumption_resolution,[],[f2048,f321])).
fof(f2048,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)),X11))))) )),
  inference(forward_demodulation,[],[f2028,f669])).
fof(f2028,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X11),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)),X11))))) )),
  inference(superposition,[],[f593,f332])).
fof(f7277,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))))) )),
  inference(superposition,[],[f2046,f405])).
fof(f7628,plain,(
  ( ! [X125,X123,X124] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X125),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X124)),X123))),X125))))) )),
  inference(forward_demodulation,[],[f7627,f2050])).
fof(f7627,plain,(
  ( ! [X125,X123,X124] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X124)),X123)))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X125),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X124)),X123))),X125))))) )),
  inference(subsumption_resolution,[],[f7626,f321])).
fof(f7626,plain,(
  ( ! [X125,X123,X124] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X124)),X123)))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X125),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X124)),X123))),X125))))) )),
  inference(forward_demodulation,[],[f7541,f669])).
fof(f7541,plain,(
  ( ! [X125,X123,X124] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X125),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X124)),X123)))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X125),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X124)),X123))),X125))))) )),
  inference(superposition,[],[f593,f2050])).
fof(f4468,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)),X1))))) )),
  inference(unit_resulting_resolution,[],[f1987,f593])).
fof(f451,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f268])).
fof(f452,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X1) != s('type.num.num',X2) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f268])).
fof(f1964,plain,(
  ( ! [X6,X8,X7,X9] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X9)))) )),
  inference(superposition,[],[f419,f405])).
fof(f1982,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num',X6) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X5),s('type.num.num',X6))))) )),
  inference(superposition,[],[f419,f405])).
fof(f2139,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.num.num',X8) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7)))))) )),
  inference(superposition,[],[f452,f405])).
fof(f3032,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X9))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X8) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7)))) )),
  inference(superposition,[],[f450,f405])).
fof(f3041,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X6))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X4) | s('type.num.num',X5) = s('type.num.num',X6)) )),
  inference(superposition,[],[f450,f405])).
fof(f3981,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f321,f1959,f417])).
fof(f3983,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f424])).
fof(f3984,plain,(
  ( ! [X2,X0,X1] : (sP0('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2)) )),
  inference(unit_resulting_resolution,[],[f1959,f425])).
fof(f3985,plain,(
  ( ! [X0,X1] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f1959,f439])).
fof(f3987,plain,(
  ( ! [X0,X1] : (~sP1('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f321,f1959,f439])).
fof(f3988,plain,(
  ( ! [X2,X0,X3,X1] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f1959,f439])).
fof(f3989,plain,(
  ( ! [X0,X1] : (sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f1959,f440])).
fof(f3990,plain,(
  ( ! [X0,X1] : (sP1('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f592,f1959,f443])).
fof(f4005,plain,(
  ( ! [X2,X0,X1] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f1959,f458])).
fof(f4010,plain,(
  ( ! [X2,X0,X1] : (sP2('T_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f321,f1959,f458])).
fof(f4011,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f1959,f458])).
fof(f4015,plain,(
  ( ! [X2,X0,X1] : (~sP3('F_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f592,f1959,f469])).
fof(f4020,plain,(
  ( ! [X2,X0,X1] : (~sP3('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2)) )),
  inference(unit_resulting_resolution,[],[f592,f1959,f470])).
fof(f4030,plain,(
  ( ! [X0,X1] : (sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f616,f612,f608,f1959,f483])).
fof(f4034,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f643,f642,f608,f1959,f483])).
fof(f4038,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f656,f655,f608,f1959,f483])).
fof(f4051,plain,(
  ( ! [X2,X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f616,f612,f641,f1959,f483])).
fof(f4057,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f643,f642,f641,f1959,f483])).
fof(f4062,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f656,f655,f641,f1959,f483])).
fof(f4065,plain,(
  ( ! [X2,X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f616,f612,f654,f1959,f483])).
fof(f4071,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f643,f642,f654,f1959,f483])).
fof(f4076,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f656,f655,f654,f1959,f483])).
fof(f4077,plain,(
  ( ! [X0,X1] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1959,f486])).
fof(f4086,plain,(
  ( ! [X0,X1] : (~sP6('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1959,f486])).
fof(f4087,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1959,f592,f1959,f486])).
fof(f4095,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f487])).
fof(f4096,plain,(
  ( ! [X0,X1] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1959,f490])).
fof(f4105,plain,(
  ( ! [X0,X1] : (~sP5('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1959,f490])).
fof(f4106,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1959,f592,f1959,f490])).
fof(f4114,plain,(
  ( ! [X2,X0,X3,X1] : (sP5(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f491])).
fof(f4115,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f495])).
fof(f4116,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))),X3)) )),
  inference(unit_resulting_resolution,[],[f1959,f496])).
fof(f4117,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1959,f497])).
fof(f4119,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f669,f1959,f499])).
fof(f4120,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f670,f1959,f499])).
fof(f4122,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f669,f1959,f499])).
fof(f4123,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f670,f1959,f499])).
fof(f4125,plain,(
  ( ! [X0,X1] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f665,f1959,f500])).
fof(f4126,plain,(
  ( ! [X2,X0,X1] : (~sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f1959,f503])).
fof(f4127,plain,(
  ( ! [X2,X0,X1] : (~sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'F_0',X2)) )),
  inference(unit_resulting_resolution,[],[f592,f1959,f504])).
fof(f4132,plain,(
  ( ! [X2,X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f646,f1959,f505])).
fof(f4134,plain,(
  ( ! [X2,X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f659,f1959,f505])).
fof(f4141,plain,(
  ( ! [X2,X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f321,f646,f1959,f505])).
fof(f4142,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f646,f1959,f505])).
fof(f4143,plain,(
  ( ! [X2,X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f321,f659,f1959,f505])).
fof(f4144,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f659,f1959,f505])).
fof(f4146,plain,(
  ( ! [X0,X1] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1959,f509])).
fof(f4155,plain,(
  ( ! [X0,X1] : (~sP8('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1959,f509])).
fof(f4156,plain,(
  ( ! [X2,X0,X3,X1] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1959,f592,f1959,f509])).
fof(f4164,plain,(
  ( ! [X2,X0,X3,X1] : (sP8(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f510])).
fof(f4165,plain,(
  ( ! [X0,X1] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f321,f1959,f515])).
fof(f4170,plain,(
  ( ! [X0,X1] : (sP9('T_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f321,f321,f1959,f515])).
fof(f4172,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f321,f1959,f1959,f515])).
fof(f4175,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f321,f1959,f515])).
fof(f4176,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1959,f321,f1959,f515])).
fof(f4177,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f321,f1959,f1959,f515])).
fof(f4178,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f1959,f1959,f515])).
fof(f4179,plain,(
  ( ! [X0,X1] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1959,f518])).
fof(f4182,plain,(
  ( ! [X0,X1] : (~sP9('F_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1959,f518])).
fof(f4183,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f592,f1959,f518])).
fof(f4185,plain,(
  ( ! [X2,X0,X1] : (~sP11('F_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f592,f1959,f519])).
fof(f4191,plain,(
  ( ! [X2,X0,X1] : (~sP11('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2)) )),
  inference(unit_resulting_resolution,[],[f592,f1959,f520])).
fof(f4205,plain,(
  ( ! [X0,X1] : (~sP10('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f592,f1959,f526])).
fof(f4214,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f527])).
fof(f4215,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))),X3)) )),
  inference(unit_resulting_resolution,[],[f1959,f528])).
fof(f4216,plain,(
  ( ! [X2,X0,X1] : (sP11('T_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f321,f1959,f531])).
fof(f4220,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f1959,f531])).
fof(f4221,plain,(
  ( ! [X2,X0,X1] : (sP11('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2)) )),
  inference(unit_resulting_resolution,[],[f321,f1959,f532])).
fof(f4225,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),X4)) )),
  inference(unit_resulting_resolution,[],[f1959,f1959,f532])).
fof(f4226,plain,(
  ( ! [X0,X1] : (~sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f592,f1959,f533])).
fof(f4227,plain,(
  ( ! [X2,X0,X1] : (~sP13('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2)) )),
  inference(unit_resulting_resolution,[],[f592,f1959,f537])).
fof(f4252,plain,(
  ( ! [X0,X1] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f592,f321,f1959,f543])).
fof(f4261,plain,(
  ( ! [X0,X1] : (~sP12('T_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f592,f321,f1959,f543])).
fof(f4262,plain,(
  ( ! [X2,X0,X3,X1] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f592,f1959,f1959,f543])).
fof(f4270,plain,(
  ( ! [X2,X0,X3,X1] : (sP12(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))),X3)) )),
  inference(unit_resulting_resolution,[],[f1959,f545])).
fof(f4271,plain,(
  ( ! [X0,X1] : (sP13('F_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f592,f592,f1959,f547])).
fof(f4274,plain,(
  ( ! [X2,X0,X1] : (sP13('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2)) )),
  inference(unit_resulting_resolution,[],[f321,f1959,f549])).
fof(f4278,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),X4)) )),
  inference(unit_resulting_resolution,[],[f1959,f1959,f549])).
fof(f4279,plain,(
  ( ! [X0,X1] : (~sP13('T_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1959,f550])).
fof(f4285,plain,(
  ( ! [X0,X1] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1959,f550])).
fof(f4286,plain,(
  ( ! [X2,X0,X3,X1] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f592,f1959,f550])).
fof(f4287,plain,(
  ( ! [X2,X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f631,f1959,f573])).
fof(f4288,plain,(
  ( ! [X2,X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f632,f1959,f573])).
fof(f4290,plain,(
  ( ! [X2,X0,X3,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f649,f1959,f573])).
fof(f4291,plain,(
  ( ! [X2,X0,X3,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)),X3)) )),
  inference(unit_resulting_resolution,[],[f662,f1959,f573])).
fof(f4292,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f626,f1959,f574])).
fof(f4294,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f647,f1959,f574])).
fof(f4295,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X3)))) )),
  inference(unit_resulting_resolution,[],[f660,f1959,f574])).
fof(f4296,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f628,f1959,f574])).
fof(f4298,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f648,f1959,f574])).
fof(f4299,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)),X3)) )),
  inference(unit_resulting_resolution,[],[f661,f1959,f574])).
fof(f4300,plain,(
  ( ! [X2,X0,X3,X1] : (sP3('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1959,f576])).
fof(f4301,plain,(
  ( ! [X2,X0,X3,X1] : (sP2(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))),X3)) )),
  inference(unit_resulting_resolution,[],[f1959,f577])).
fof(f4474,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f321,f1987,f417])).
fof(f4476,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f424])).
fof(f4477,plain,(
  ( ! [X2,X0,X1] : (sP0('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2)) )),
  inference(unit_resulting_resolution,[],[f1987,f425])).
fof(f4478,plain,(
  ( ! [X0,X1] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f1987,f439])).
fof(f4480,plain,(
  ( ! [X0,X1] : (~sP1('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f321,f1987,f439])).
fof(f4481,plain,(
  ( ! [X2,X0,X3,X1] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f1987,f439])).
fof(f4482,plain,(
  ( ! [X0,X1] : (sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f1987,f440])).
fof(f4483,plain,(
  ( ! [X0,X1] : (sP1('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f592,f1987,f443])).
fof(f4498,plain,(
  ( ! [X2,X0,X1] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f1987,f458])).
fof(f4503,plain,(
  ( ! [X2,X0,X1] : (sP2('T_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f321,f1987,f458])).
fof(f4504,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f1987,f458])).
fof(f4508,plain,(
  ( ! [X2,X0,X1] : (~sP3('F_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f592,f1987,f469])).
fof(f4513,plain,(
  ( ! [X2,X0,X1] : (~sP3('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2)) )),
  inference(unit_resulting_resolution,[],[f592,f1987,f470])).
fof(f4520,plain,(
  ( ! [X0,X1] : (~sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1987,f482])).
fof(f4521,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1987,f592,f1987,f482])).
fof(f4523,plain,(
  ( ! [X0,X1] : (sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f616,f612,f608,f1987,f483])).
fof(f4527,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f643,f642,f608,f1987,f483])).
fof(f4531,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f656,f655,f608,f1987,f483])).
fof(f4544,plain,(
  ( ! [X2,X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f616,f612,f641,f1987,f483])).
fof(f4550,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f643,f642,f641,f1987,f483])).
fof(f4555,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f656,f655,f641,f1987,f483])).
fof(f4558,plain,(
  ( ! [X2,X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f616,f612,f654,f1987,f483])).
fof(f4564,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f643,f642,f654,f1987,f483])).
fof(f4569,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f656,f655,f654,f1987,f483])).
fof(f4570,plain,(
  ( ! [X0,X1] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1987,f486])).
fof(f4579,plain,(
  ( ! [X0,X1] : (~sP6('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1987,f486])).
fof(f4580,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1987,f592,f1987,f486])).
fof(f4588,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f487])).
fof(f4589,plain,(
  ( ! [X0,X1] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1987,f490])).
fof(f4598,plain,(
  ( ! [X0,X1] : (~sP5('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1987,f490])).
fof(f4599,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1987,f592,f1987,f490])).
fof(f4607,plain,(
  ( ! [X2,X0,X3,X1] : (sP5(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f491])).
fof(f4608,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f495])).
fof(f4609,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))),X3)) )),
  inference(unit_resulting_resolution,[],[f1987,f496])).
fof(f4610,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1987,f497])).
fof(f4612,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f669,f1987,f499])).
fof(f4613,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f670,f1987,f499])).
fof(f4615,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f669,f1987,f499])).
fof(f4616,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f670,f1987,f499])).
fof(f4617,plain,(
  ( ! [X0,X1] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f665,f1987,f500])).
fof(f4618,plain,(
  ( ! [X0,X1] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f665,f1987,f500])).
fof(f4619,plain,(
  ( ! [X2,X0,X1] : (~sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f1987,f503])).
fof(f4620,plain,(
  ( ! [X2,X0,X1] : (~sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'F_0',X2)) )),
  inference(unit_resulting_resolution,[],[f592,f1987,f504])).
fof(f4625,plain,(
  ( ! [X2,X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f646,f1987,f505])).
fof(f4627,plain,(
  ( ! [X2,X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f659,f1987,f505])).
fof(f4634,plain,(
  ( ! [X2,X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f321,f646,f1987,f505])).
fof(f4635,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f646,f1987,f505])).
fof(f4636,plain,(
  ( ! [X2,X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f321,f659,f1987,f505])).
fof(f4637,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f659,f1987,f505])).
fof(f4639,plain,(
  ( ! [X0,X1] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1987,f509])).
fof(f4648,plain,(
  ( ! [X0,X1] : (~sP8('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1987,f509])).
fof(f4649,plain,(
  ( ! [X2,X0,X3,X1] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1987,f592,f1987,f509])).
fof(f4657,plain,(
  ( ! [X2,X0,X3,X1] : (sP8(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f510])).
fof(f4658,plain,(
  ( ! [X0,X1] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f321,f1987,f515])).
fof(f4663,plain,(
  ( ! [X0,X1] : (sP9('T_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f321,f321,f1987,f515])).
fof(f4665,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f321,f1987,f1987,f515])).
fof(f4668,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f321,f1987,f515])).
fof(f4669,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1987,f321,f1987,f515])).
fof(f4670,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f321,f1987,f1987,f515])).
fof(f4671,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))),'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f1987,f1987,f515])).
fof(f4672,plain,(
  ( ! [X0,X1] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1987,f518])).
fof(f4675,plain,(
  ( ! [X0,X1] : (~sP9('F_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1987,f518])).
fof(f4676,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f592,f1987,f518])).
fof(f4678,plain,(
  ( ! [X2,X0,X1] : (~sP11('F_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f592,f1987,f519])).
fof(f4684,plain,(
  ( ! [X2,X0,X1] : (~sP11('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2)) )),
  inference(unit_resulting_resolution,[],[f592,f1987,f520])).
fof(f4698,plain,(
  ( ! [X0,X1] : (~sP10('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f592,f1987,f526])).
fof(f4707,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f527])).
fof(f4708,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))),X3)) )),
  inference(unit_resulting_resolution,[],[f1987,f528])).
fof(f4709,plain,(
  ( ! [X2,X0,X1] : (sP11('T_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f321,f1987,f531])).
fof(f4713,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f1987,f531])).
fof(f4714,plain,(
  ( ! [X2,X0,X1] : (sP11('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2)) )),
  inference(unit_resulting_resolution,[],[f321,f1987,f532])).
fof(f4718,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))),X4)) )),
  inference(unit_resulting_resolution,[],[f1987,f1987,f532])).
fof(f4719,plain,(
  ( ! [X0,X1] : (~sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f592,f1987,f533])).
fof(f4720,plain,(
  ( ! [X2,X0,X1] : (~sP13('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2)) )),
  inference(unit_resulting_resolution,[],[f592,f1987,f537])).
fof(f4745,plain,(
  ( ! [X0,X1] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f592,f321,f1987,f543])).
fof(f4754,plain,(
  ( ! [X0,X1] : (~sP12('T_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f592,f321,f1987,f543])).
fof(f4755,plain,(
  ( ! [X2,X0,X3,X1] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f592,f1987,f1987,f543])).
fof(f4763,plain,(
  ( ! [X2,X0,X3,X1] : (sP12(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))),X3)) )),
  inference(unit_resulting_resolution,[],[f1987,f545])).
fof(f4764,plain,(
  ( ! [X0,X1] : (sP13('F_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f592,f592,f1987,f547])).
fof(f4767,plain,(
  ( ! [X2,X0,X1] : (sP13('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2)) )),
  inference(unit_resulting_resolution,[],[f321,f1987,f549])).
fof(f4771,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))),X4)) )),
  inference(unit_resulting_resolution,[],[f1987,f1987,f549])).
fof(f4772,plain,(
  ( ! [X0,X1] : (~sP13('T_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1987,f550])).
fof(f4778,plain,(
  ( ! [X0,X1] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1987,f550])).
fof(f4779,plain,(
  ( ! [X2,X0,X3,X1] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f592,f1987,f550])).
fof(f4780,plain,(
  ( ! [X2,X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f631,f1987,f573])).
fof(f4781,plain,(
  ( ! [X2,X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f632,f1987,f573])).
fof(f4783,plain,(
  ( ! [X2,X0,X3,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f649,f1987,f573])).
fof(f4784,plain,(
  ( ! [X2,X0,X3,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)),X3)) )),
  inference(unit_resulting_resolution,[],[f662,f1987,f573])).
fof(f4785,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f626,f1987,f574])).
fof(f4787,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f647,f1987,f574])).
fof(f4788,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X3)))) )),
  inference(unit_resulting_resolution,[],[f660,f1987,f574])).
fof(f4789,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f628,f1987,f574])).
fof(f4791,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f648,f1987,f574])).
fof(f4792,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)),X3)) )),
  inference(unit_resulting_resolution,[],[f661,f1987,f574])).
fof(f4793,plain,(
  ( ! [X2,X0,X3,X1] : (sP3('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1987,f576])).
fof(f4794,plain,(
  ( ! [X2,X0,X3,X1] : (sP2(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))),X3)) )),
  inference(unit_resulting_resolution,[],[f1987,f577])).
fof(f4973,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))))) )),
  inference(superposition,[],[f1984,f405])).
fof(f5045,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))))))) )),
  inference(unit_resulting_resolution,[],[f405,f1985])).
fof(f5052,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num',X6) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.num.num',X6))))) )),
  inference(superposition,[],[f1985,f405])).
fof(f5062,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num',X6) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))))) )),
  inference(superposition,[],[f1985,f405])).
fof(f5196,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(superposition,[],[f2035,f405])).
fof(f9089,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))))) )),
  inference(superposition,[],[f1982,f405])).
fof(f9326,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X2)) )),
  inference(superposition,[],[f3039,f405])).
fof(f9342,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X2) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(superposition,[],[f3039,f405])).
fof(f9364,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X12)) )),
  inference(superposition,[],[f3039,f449])).
fof(f7300,plain,(
  ( ! [X10] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f2046,f334])).
fof(f7501,plain,(
  ( ! [X11] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f2050,f334])).
fof(f6212,plain,(
  ( ! [X144,X145,X143] : (s('type.num.num',X144) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X143),s('type.num.num',sK16(X144,X143)))) | s(bool,X145) = s(bool,'const.divides.divides_2'(s('type.num.num',X143),s('type.num.num',X144))) | s(bool,'T_0') = s(bool,X145)) )),
  inference(subsumption_resolution,[],[f5866,f321])).
fof(f5866,plain,(
  ( ! [X144,X145,X143] : (~p(s(bool,'T_0')) | s('type.num.num',X144) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X143),s('type.num.num',sK16(X144,X143)))) | s(bool,X145) = s(bool,'const.divides.divides_2'(s('type.num.num',X143),s('type.num.num',X144))) | s(bool,'T_0') = s(bool,X145)) )),
  inference(superposition,[],[f593,f959])).
fof(f3225,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK16(X0,X0))))) )),
  inference(subsumption_resolution,[],[f3182,f321])).
fof(f3182,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK16(X0,X0))))) )),
  inference(superposition,[],[f593,f670])).
fof(f2053,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK16('const.num.|48|_0',X0))))) )),
  inference(subsumption_resolution,[],[f2031,f321])).
fof(f2031,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK16('const.num.|48|_0',X0))))) )),
  inference(superposition,[],[f593,f669])).
fof(f348,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f213])).
fof(f5869,plain,(
  ( ! [X158,X156,X159,X157] : (s(bool,'T_0') != s(bool,f(s(X156,sK17(X157,X158,bool,X156)))) | s(fun(X156,bool),X157) = s(fun(X156,bool),X158) | s(bool,X159) = s(bool,g(s(X156,sK17(X157,X158,bool,X156)))) | s(bool,'T_0') = s(bool,X159)) )),
  inference(superposition,[],[f448,f959])).
fof(f5727,plain,(
  ( ! [X163,X161,X164,X162] : (s(bool,X164) != s(bool,f(s(X161,sK17(X162,X163,bool,X161)))) | s(fun(X161,bool),X162) = s(fun(X161,bool),X163) | s(bool,'T_0') = s(bool,X164) | s(bool,'T_0') = s(bool,g(s(X161,sK17(X162,X163,bool,X161))))) )),
  inference(superposition,[],[f448,f959])).
fof(f1984,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X11) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X10),s('type.num.num',X11))))) )),
  inference(superposition,[],[f419,f332])).
fof(f1985,plain,(
  ( ! [X12,X13] : (s('type.num.num',X12) != s('type.num.num',X13) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',X13))))) )),
  inference(superposition,[],[f419,f334])).
fof(f1997,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f1996,f330])).
fof(f1996,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f1974,f330])).
fof(f1974,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num',X1))))) )),
  inference(superposition,[],[f419,f330])).
fof(f7425,plain,(
  ( ! [X123,X124,X122] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X124),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X122),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num','const.num.|48|_0')),X122))),X124))))) )),
  inference(forward_demodulation,[],[f7424,f2046])).
fof(f7424,plain,(
  ( ! [X123,X124,X122] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X122),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num','const.num.|48|_0')),X122)))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X124),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X122),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num','const.num.|48|_0')),X122))),X124))))) )),
  inference(subsumption_resolution,[],[f7423,f321])).
fof(f7423,plain,(
  ( ! [X123,X124,X122] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X122),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num','const.num.|48|_0')),X122)))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X124),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X122),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num','const.num.|48|_0')),X122))),X124))))) )),
  inference(forward_demodulation,[],[f7340,f669])).
fof(f7340,plain,(
  ( ! [X123,X124,X122] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X124),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X122),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num','const.num.|48|_0')),X122)))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X124),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X122),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X123),s('type.num.num','const.num.|48|_0')),X122))),X124))))) )),
  inference(superposition,[],[f593,f2046])).
fof(f7415,plain,(
  ( ! [X101,X99,X102,X100] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X101),s('type.num.num',X102))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X101) | s('type.num.num',X102) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X99),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X100),s('type.num.num','const.num.|48|_0')),X99))))) )),
  inference(forward_demodulation,[],[f7334,f330])).
fof(f7334,plain,(
  ( ! [X101,X99,X102,X100] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X101),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X101),s('type.num.num',X102))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X101) | s('type.num.num',X102) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X99),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X100),s('type.num.num','const.num.|48|_0')),X99))))) )),
  inference(superposition,[],[f450,f2046])).
fof(f2046,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X1))))) )),
  inference(forward_demodulation,[],[f2045,f330])).
fof(f2045,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X1))))) )),
  inference(subsumption_resolution,[],[f2044,f321])).
fof(f2044,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X1))))) )),
  inference(forward_demodulation,[],[f2024,f669])).
fof(f2024,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X1))))) )),
  inference(superposition,[],[f593,f330])).
fof(f3975,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)),X0))))) )),
  inference(unit_resulting_resolution,[],[f1959,f593])).
fof(f7613,plain,(
  ( ! [X17,X18,X16] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17)),X16)),s('type.num.num',X18)))))) )),
  inference(forward_demodulation,[],[f7507,f332])).
fof(f7507,plain,(
  ( ! [X17,X18,X16] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17)),X16)),s('type.num.num',X18)))))) )),
  inference(superposition,[],[f449,f2050])).
fof(f7410,plain,(
  ( ! [X17,X15,X16] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.num.|48|_0')),X15)),s('type.num.num',X17)))))) )),
  inference(forward_demodulation,[],[f7306,f332])).
fof(f7306,plain,(
  ( ! [X17,X15,X16] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.num.|48|_0')),X15)),s('type.num.num',X17)))))) )),
  inference(superposition,[],[f449,f2046])).
fof(f9527,plain,(
  ( ! [X300,X298,X299] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X300),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X299))),s('type.num.num',X298))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X300) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X298),s('type.num.num',X299))),s('type.num.num',X298)))) )),
  inference(superposition,[],[f3039,f2190])).
fof(f9526,plain,(
  ( ! [X296,X295,X297] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X296))),s('type.num.num',X295))),s('type.num.num',X297))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X295),s('type.num.num',X296))),s('type.num.num',X295))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X297)) )),
  inference(superposition,[],[f3039,f2190])).
fof(f9522,plain,(
  ( ! [X288,X287,X286] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X287))),s('type.num.num',X286))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X288)),'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X286),s('type.num.num',X287))),s('type.num.num',X286))))))) )),
  inference(superposition,[],[f2050,f2190])).
fof(f9520,plain,(
  ( ! [X280,X282,X281] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X281))),s('type.num.num',X280))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X282),s('type.num.num','const.num.|48|_0')),'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X280),s('type.num.num',X281))),s('type.num.num',X280))))))) )),
  inference(superposition,[],[f2046,f2190])).
fof(f9454,plain,(
  ( ! [X74,X72,X75,X73] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X74),s('type.num.num',X75))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X74),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X73))),s('type.num.num',X72))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X74) | s('type.num.num',X75) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X72),s('type.num.num',X73))),s('type.num.num',X72)))) )),
  inference(superposition,[],[f450,f2190])).
fof(f9354,plain,(
  ( ! [X33,X31,X32] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))),s('type.num.num',X32))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X33) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num',X32))),s('type.num.num',X32)))) )),
  inference(superposition,[],[f3039,f406])).
fof(f9338,plain,(
  ( ! [X33,X31,X32] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))),s('type.num.num',X32))),s('type.num.num',X33))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num',X32))),s('type.num.num',X32))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X33)) )),
  inference(superposition,[],[f3039,f406])).
fof(f7485,plain,(
  ( ! [X26,X24,X25] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X24))),s('type.num.num',X25))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X26)),'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X25))),s('type.num.num',X25))))))) )),
  inference(superposition,[],[f2050,f406])).
fof(f7285,plain,(
  ( ! [X23,X21,X22] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))),s('type.num.num',X22))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num','const.num.|48|_0')),'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22))),s('type.num.num',X22))))))) )),
  inference(superposition,[],[f2046,f406])).
fof(f3037,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',X28))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X27) | s('type.num.num',X28) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num',X26))),s('type.num.num',X26)))) )),
  inference(superposition,[],[f450,f406])).
fof(f2190,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2))),s('type.num.num',X3)))) )),
  inference(superposition,[],[f406,f405])).
fof(f406,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X7,X6] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X6)))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.arithmetic.MULT|split|1')).
fof(f9453,plain,(
  ( ! [X70,X68,X71,X69] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))),s('type.num.num',X68))),s('type.num.num',X70))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))),s('type.num.num',X68))),s('type.num.num',X71))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X68),s('type.num.num',X69))),s('type.num.num',X68))) | s('type.num.num',X70) = s('type.num.num',X71)) )),
  inference(superposition,[],[f450,f2190])).
fof(f3053,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26))),s('type.num.num',X27))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26))),s('type.num.num',X28))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num',X26))),s('type.num.num',X26))) | s('type.num.num',X27) = s('type.num.num',X28)) )),
  inference(superposition,[],[f450,f406])).
fof(f3048,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X8))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X9))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))) | s('type.num.num',X8) = s('type.num.num',X9)) )),
  inference(superposition,[],[f450,f405])).
fof(f2087,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X9)))) )),
  inference(superposition,[],[f451,f405])).
fof(f9556,plain,(
  ( ! [X97,X95,X96] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X96))),s('type.num.num',X95))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X97),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X95),s('type.num.num',X96))),s('type.num.num',X95)),X97)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X97),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X96))),s('type.num.num',X95))))))) )),
  inference(forward_demodulation,[],[f9460,f2190])).
fof(f9460,plain,(
  ( ! [X97,X95,X96] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X97),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X96))),s('type.num.num',X95)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X95),s('type.num.num',X96))),s('type.num.num',X95))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X97),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X95),s('type.num.num',X96))),s('type.num.num',X95)),X97))))) )),
  inference(superposition,[],[f593,f2190])).
fof(f2268,plain,(
  ( ! [X43,X41,X42] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X41))),s('type.num.num',X42))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X41),s('type.num.num',X42))),s('type.num.num',X42)),X43)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X41))),s('type.num.num',X42))))))) )),
  inference(forward_demodulation,[],[f2214,f406])).
fof(f2214,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X41))),s('type.num.num',X42)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X41),s('type.num.num',X42))),s('type.num.num',X42))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X41),s('type.num.num',X42))),s('type.num.num',X42)),X43))))) )),
  inference(superposition,[],[f593,f406])).
fof(f7500,plain,(
  ( ! [X8,X7,X9] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9)),'const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))))))))) )),
  inference(superposition,[],[f2050,f449])).
fof(f7299,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')),'const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))))))))) )),
  inference(superposition,[],[f2046,f449])).
fof(f2026,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)),X6))))) )),
  inference(superposition,[],[f593,f405])).
fof(f9555,plain,(
  ( ! [X94,X92,X93] : (s('type.num.num',X94) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X92),s('type.num.num',sK16(X94,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X92),s('type.num.num',X93))),s('type.num.num',X92)))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))),s('type.num.num',X92))),s('type.num.num',X94))))) )),
  inference(forward_demodulation,[],[f9554,f449])).
fof(f9554,plain,(
  ( ! [X94,X92,X93] : (s('type.num.num',X94) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))),s('type.num.num',X92))),s('type.num.num',sK16(X94,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X92),s('type.num.num',X93))),s('type.num.num',X92)))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))),s('type.num.num',X92))),s('type.num.num',X94))))) )),
  inference(forward_demodulation,[],[f9459,f2190])).
fof(f9459,plain,(
  ( ! [X94,X92,X93] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))),s('type.num.num',X92))),s('type.num.num',X94)))) | s('type.num.num',X94) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X92),s('type.num.num',X93))),s('type.num.num',X92))),s('type.num.num',sK16(X94,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X92),s('type.num.num',X93))),s('type.num.num',X92))))))) )),
  inference(superposition,[],[f593,f2190])).
fof(f2267,plain,(
  ( ! [X39,X38,X40] : (s('type.num.num',X40) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X39),s('type.num.num',sK16(X40,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.num.num',X39)))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X38))),s('type.num.num',X39))),s('type.num.num',X40))))) )),
  inference(forward_demodulation,[],[f2266,f449])).
fof(f2266,plain,(
  ( ! [X39,X38,X40] : (s('type.num.num',X40) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X38))),s('type.num.num',X39))),s('type.num.num',sK16(X40,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.num.num',X39)))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X38))),s('type.num.num',X39))),s('type.num.num',X40))))) )),
  inference(forward_demodulation,[],[f2213,f406])).
fof(f2213,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X38))),s('type.num.num',X39))),s('type.num.num',X40)))) | s('type.num.num',X40) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.num.num',X39))),s('type.num.num',sK16(X40,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.num.num',X39))))))) )),
  inference(superposition,[],[f593,f406])).
fof(f9351,plain,(
  ( ! [X26,X24,X25] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X26) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X25)))))) )),
  inference(superposition,[],[f3039,f407])).
fof(f9335,plain,(
  ( ! [X26,X24,X25] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))))),s('type.num.num',X26))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X25))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X26)) )),
  inference(superposition,[],[f3039,f407])).
fof(f7486,plain,(
  ( ! [X28,X29,X27] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X29)),'const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X27),s('type.num.num',X28))))))))) )),
  inference(superposition,[],[f2050,f407])).
fof(f7286,plain,(
  ( ! [X26,X24,X25] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),'const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X25))))))))) )),
  inference(superposition,[],[f2046,f407])).
fof(f3054,plain,(
  ( ! [X30,X31,X29,X32] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))))),s('type.num.num',X31))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))))),s('type.num.num',X32))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num',X30))))) | s('type.num.num',X31) = s('type.num.num',X32)) )),
  inference(superposition,[],[f450,f407])).
fof(f3038,plain,(
  ( ! [X30,X31,X29,X32] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num',X32))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X31) | s('type.num.num',X32) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num',X30)))))) )),
  inference(superposition,[],[f450,f407])).
fof(f2387,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X47),s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X49),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X47),s('type.num.num',X48)))),X49)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X49),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X47),s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))))))))) )),
  inference(forward_demodulation,[],[f2331,f407])).
fof(f2331,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X49),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X47),s('type.num.num','const.num.SUC_1'(s('type.num.num',X48)))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X47),s('type.num.num',X48))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X49),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X47),s('type.num.num',X48)))),X49))))) )),
  inference(superposition,[],[f593,f407])).
fof(f2312,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(superposition,[],[f407,f405])).
fof(f407,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7,X6] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.arithmetic.MULT_SUC')).
fof(f2386,plain,(
  ( ! [X45,X46,X44] : (s('type.num.num',X46) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num',sK16(X46,'const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num',X45)))))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))))),s('type.num.num',X46))))) )),
  inference(forward_demodulation,[],[f2385,f449])).
fof(f2385,plain,(
  ( ! [X45,X46,X44] : (s('type.num.num',X46) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))))),s('type.num.num',sK16(X46,'const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num',X45)))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))))),s('type.num.num',X46))))) )),
  inference(forward_demodulation,[],[f2330,f407])).
fof(f2330,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))))),s('type.num.num',X46)))) | s('type.num.num',X46) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num',X45))))),s('type.num.num',sK16(X46,'const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num',X45))))))))) )),
  inference(superposition,[],[f593,f407])).
fof(f9408,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11)))))) )),
  inference(superposition,[],[f2190,f449])).
fof(f9185,plain,(
  ( ! [X26,X24,X23,X25,X22] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X24))))),s('type.num.num',X25)))) | s('type.num.num',X25) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X26)))))))) )),
  inference(forward_demodulation,[],[f9184,f449])).
fof(f9184,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num',X25) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X26))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X23))),s('type.num.num',X24))),s('type.num.num',X25))))) )),
  inference(forward_demodulation,[],[f9183,f449])).
fof(f9183,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num',X25) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.num.num',X26))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X23))),s('type.num.num',X24))),s('type.num.num',X25))))) )),
  inference(forward_demodulation,[],[f9111,f449])).
fof(f9111,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num',X25) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X24))))),s('type.num.num',X26))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X23))),s('type.num.num',X24))),s('type.num.num',X25))))) )),
  inference(superposition,[],[f1982,f449])).
fof(f9177,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X2) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X3))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))))) )),
  inference(forward_demodulation,[],[f9105,f449])).
fof(f9105,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X2) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X3))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))))) )),
  inference(superposition,[],[f1982,f405])).
fof(f9143,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.num.num',X19) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X18))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17))),s('type.num.num',X19))))) )),
  inference(superposition,[],[f1982,f449])).
fof(f8887,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X18))))))))))) )),
  inference(superposition,[],[f2414,f449])).
fof(f8881,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))))))))) )),
  inference(superposition,[],[f2414,f405])).
fof(f8805,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP2(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))),X4)) )),
  inference(unit_resulting_resolution,[],[f2414,f577])).
fof(f8804,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP3('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3,X4)) )),
  inference(unit_resulting_resolution,[],[f2414,f576])).
fof(f8803,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X3)),X4)) )),
  inference(unit_resulting_resolution,[],[f661,f2414,f574])).
fof(f8802,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')),X4)) )),
  inference(unit_resulting_resolution,[],[f648,f2414,f574])).
fof(f8800,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0',X3)) )),
  inference(unit_resulting_resolution,[],[f628,f2414,f574])).
fof(f8799,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num',X4)))) )),
  inference(unit_resulting_resolution,[],[f660,f2414,f574])).
fof(f8798,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f647,f2414,f574])).
fof(f8796,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3,'T_0')) )),
  inference(unit_resulting_resolution,[],[f626,f2414,f574])).
fof(f8795,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X3)),X4)) )),
  inference(unit_resulting_resolution,[],[f662,f2414,f573])).
fof(f8794,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')),X4)) )),
  inference(unit_resulting_resolution,[],[f649,f2414,f573])).
fof(f8792,plain,(
  ( ! [X2,X0,X3,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0',X3)) )),
  inference(unit_resulting_resolution,[],[f632,f2414,f573])).
fof(f8791,plain,(
  ( ! [X2,X0,X3,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3,'F_0')) )),
  inference(unit_resulting_resolution,[],[f631,f2414,f573])).
fof(f8790,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0','const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f592,f2414,f550])).
fof(f8789,plain,(
  ( ! [X2,X0,X1] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f2414,f550])).
fof(f8783,plain,(
  ( ! [X2,X0,X1] : (~sP13('T_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f321,f592,f2414,f550])).
fof(f8782,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))),X6)) )),
  inference(unit_resulting_resolution,[],[f2414,f2414,f549])).
fof(f8778,plain,(
  ( ! [X2,X0,X3,X1] : (sP13('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3)) )),
  inference(unit_resulting_resolution,[],[f321,f2414,f549])).
fof(f8775,plain,(
  ( ! [X2,X0,X1] : (sP13('F_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f592,f592,f2414,f547])).
fof(f8774,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP12(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))),X4)) )),
  inference(unit_resulting_resolution,[],[f2414,f545])).
fof(f8766,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0','const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))))) )),
  inference(unit_resulting_resolution,[],[f592,f2414,f2414,f543])).
fof(f8765,plain,(
  ( ! [X2,X0,X1] : (~sP12('T_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f592,f321,f2414,f543])).
fof(f8756,plain,(
  ( ! [X2,X0,X1] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f592,f321,f2414,f543])).
fof(f8731,plain,(
  ( ! [X2,X0,X3,X1] : (~sP13('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3)) )),
  inference(unit_resulting_resolution,[],[f592,f2414,f537])).
fof(f8730,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f592,f2414,f533])).
fof(f8729,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))),X6)) )),
  inference(unit_resulting_resolution,[],[f2414,f2414,f532])).
fof(f8725,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3)) )),
  inference(unit_resulting_resolution,[],[f321,f2414,f532])).
fof(f8724,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X4)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f2414,f531])).
fof(f8720,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('T_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f321,f2414,f531])).
fof(f8719,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))),X4)) )),
  inference(unit_resulting_resolution,[],[f2414,f528])).
fof(f8718,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP10(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X2)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f527])).
fof(f8709,plain,(
  ( ! [X2,X0,X1] : (~sP10('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f592,f2414,f526])).
fof(f8695,plain,(
  ( ! [X2,X0,X3,X1] : (~sP11('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3)) )),
  inference(unit_resulting_resolution,[],[f592,f2414,f520])).
fof(f8689,plain,(
  ( ! [X2,X0,X3,X1] : (~sP11('F_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f592,f2414,f519])).
fof(f8686,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f592,f2414,f518])).
fof(f8685,plain,(
  ( ! [X2,X0,X1] : (~sP9('F_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f321,f592,f2414,f518])).
fof(f8681,plain,(
  ( ! [X2,X0,X1] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f2414,f518])).
fof(f8680,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))),'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X6)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f2414,f2414,f515])).
fof(f8679,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0','const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))))) )),
  inference(unit_resulting_resolution,[],[f321,f2414,f2414,f515])).
fof(f8678,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f2414,f321,f2414,f515])).
fof(f8677,plain,(
  ( ! [X2,X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f321,f2414,f515])).
fof(f8673,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))))) )),
  inference(unit_resulting_resolution,[],[f321,f2414,f2414,f515])).
fof(f8671,plain,(
  ( ! [X2,X0,X1] : (sP9('T_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f321,f321,f2414,f515])).
fof(f8665,plain,(
  ( ! [X2,X0,X1] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f321,f2414,f515])).
fof(f8664,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP8(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X2)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f510])).
fof(f8655,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f2414,f592,f2414,f509])).
fof(f8654,plain,(
  ( ! [X2,X0,X1] : (~sP8('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f2414,f509])).
fof(f8644,plain,(
  ( ! [X2,X0,X1] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f2414,f509])).
fof(f8641,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))),'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X4)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f659,f2414,f505])).
fof(f8640,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f321,f659,f2414,f505])).
fof(f8639,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))),'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X4)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f646,f2414,f505])).
fof(f8638,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f321,f646,f2414,f505])).
fof(f8630,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f659,f2414,f505])).
fof(f8628,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f646,f2414,f505])).
fof(f8623,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0',X3)) )),
  inference(unit_resulting_resolution,[],[f592,f2414,f504])).
fof(f8622,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3,'F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f2414,f503])).
fof(f8621,plain,(
  ( ! [X2,X0,X1] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f665,f2414,f500])).
fof(f8620,plain,(
  ( ! [X2,X0,X1] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f665,f2414,f500])).
fof(f8619,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0','const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X3)))) )),
  inference(unit_resulting_resolution,[],[f670,f2414,f499])).
fof(f8618,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0','const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f669,f2414,f499])).
fof(f8616,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X3)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f670,f2414,f499])).
fof(f8615,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f669,f2414,f499])).
fof(f8613,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP4('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3,X4)) )),
  inference(unit_resulting_resolution,[],[f2414,f497])).
fof(f8612,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP4(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))),X4)) )),
  inference(unit_resulting_resolution,[],[f2414,f496])).
fof(f8611,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP4(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X2)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f495])).
fof(f8610,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP5(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X2)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f491])).
fof(f8600,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f2414,f592,f2414,f490])).
fof(f8599,plain,(
  ( ! [X2,X0,X1] : (~sP5('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f2414,f490])).
fof(f8588,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f2414,f490])).
fof(f8587,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP6(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X2)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f487])).
fof(f8577,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f2414,f592,f2414,f486])).
fof(f8576,plain,(
  ( ! [X2,X0,X1] : (~sP6('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f2414,f486])).
fof(f8565,plain,(
  ( ! [X2,X0,X1] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f2414,f486])).
fof(f8564,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X2)))))))) )),
  inference(unit_resulting_resolution,[],[f656,f655,f654,f2414,f483])).
fof(f8559,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X2)))))))) )),
  inference(unit_resulting_resolution,[],[f643,f642,f654,f2414,f483])).
fof(f8553,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f616,f612,f654,f2414,f483])).
fof(f8550,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X2)))))))) )),
  inference(unit_resulting_resolution,[],[f656,f655,f641,f2414,f483])).
fof(f8545,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X2)))))))) )),
  inference(unit_resulting_resolution,[],[f643,f642,f641,f2414,f483])).
fof(f8539,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f616,f612,f641,f2414,f483])).
fof(f8526,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f656,f655,f608,f2414,f483])).
fof(f8522,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f643,f642,f608,f2414,f483])).
fof(f8518,plain,(
  ( ! [X2,X0,X1] : (sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f616,f612,f608,f2414,f483])).
fof(f8516,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f2414,f592,f2414,f482])).
fof(f8515,plain,(
  ( ! [X2,X0,X1] : (~sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f2414,f482])).
fof(f8508,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3)) )),
  inference(unit_resulting_resolution,[],[f592,f2414,f470])).
fof(f8503,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3('F_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f592,f2414,f469])).
fof(f8497,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X4)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f2414,f458])).
fof(f8496,plain,(
  ( ! [X2,X0,X3,X1] : (sP2('T_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f321,f2414,f458])).
fof(f8489,plain,(
  ( ! [X2,X0,X3,X1] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3,'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f2414,f458])).
fof(f8470,plain,(
  ( ! [X2,X0,X1] : (sP1('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f592,f2414,f443])).
fof(f8469,plain,(
  ( ! [X2,X0,X1] : (sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f2414,f440])).
fof(f8468,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f2414,f439])).
fof(f8467,plain,(
  ( ! [X2,X0,X1] : (~sP1('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f321,f2414,f439])).
fof(f8465,plain,(
  ( ! [X2,X0,X1] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f2414,f439])).
fof(f8464,plain,(
  ( ! [X2,X0,X3,X1] : (sP0('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3)) )),
  inference(unit_resulting_resolution,[],[f2414,f425])).
fof(f8463,plain,(
  ( ! [X2,X0,X3,X1] : (sP0(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f424])).
fof(f8461,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f321,f2414,f417])).
fof(f8454,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))),X2))))) )),
  inference(unit_resulting_resolution,[],[f2414,f593])).
fof(f7482,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X18))))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X19)),'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17))),s('type.num.num',X18))))))) )),
  inference(superposition,[],[f2050,f449])).
fof(f7282,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15))))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.num.|48|_0')),'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X14))),s('type.num.num',X15))))))) )),
  inference(superposition,[],[f2046,f449])).
fof(f4353,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))))))))) )),
  inference(superposition,[],[f1959,f449])).
fof(f3043,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num',X13))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))) | s('type.num.num',X12) = s('type.num.num',X13)) )),
  inference(superposition,[],[f450,f449])).
fof(f2543,plain,(
  ( ! [X92,X90,X93,X91] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X91),s('type.num.num',X92))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X93),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))),s('type.num.num',X92)),X93)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X93),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X91),s('type.num.num',X92))))))))) )),
  inference(forward_demodulation,[],[f2480,f449])).
fof(f2480,plain,(
  ( ! [X92,X90,X93,X91] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X93),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X91),s('type.num.num',X92)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))),s('type.num.num',X92))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X93),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))),s('type.num.num',X92)),X93))))) )),
  inference(superposition,[],[f593,f449])).
fof(f2542,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X87),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X88),s('type.num.num',sK16(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num',X88)))))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X87),s('type.num.num',X88))))),s('type.num.num',X89))))) )),
  inference(forward_demodulation,[],[f2541,f449])).
fof(f2541,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X88),s('type.num.num',sK16(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num',X88)))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X87),s('type.num.num',X88))))),s('type.num.num',X89))))) )),
  inference(forward_demodulation,[],[f2479,f449])).
fof(f2479,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X87),s('type.num.num',X88))))),s('type.num.num',X89)))) | s('type.num.num',X89) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num',X88))),s('type.num.num',sK16(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num',X88))))))) )),
  inference(superposition,[],[f593,f449])).
fof(f2535,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X6)))))))) )),
  inference(forward_demodulation,[],[f2458,f449])).
fof(f2458,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X6)))))))) )),
  inference(superposition,[],[f407,f449])).
fof(f2460,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',X13)))) | s('type.num.num',X13) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X12)))))) )),
  inference(superposition,[],[f419,f449])).
fof(f2459,plain,(
  ( ! [X8,X7,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))))),s('type.num.num',X9))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X9))))),s('type.num.num',X9)))) )),
  inference(superposition,[],[f406,f449])).
fof(f2454,plain,(
  ( ! [X8,X7,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8)))))) )),
  inference(superposition,[],[f449,f405])).
fof(f2438,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4))),s('type.num.num',X6)))) )),
  inference(superposition,[],[f449,f405])).
fof(f2136,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f405,f452])).
fof(f9448,plain,(
  ( ! [X52,X50,X51] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X51))),s('type.num.num',X50))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X50),s('type.num.num',X51))),s('type.num.num',X50)))) )),
  inference(superposition,[],[f421,f2190])).
fof(f9445,plain,(
  ( ! [X43,X41,X42] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X42))),s('type.num.num',X41))),s('type.num.num',X43))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X41),s('type.num.num',X42))),s('type.num.num',X41)))) )),
  inference(superposition,[],[f420,f2190])).
fof(f9357,plain,(
  ( ! [X37,X38] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X38),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X38) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X37)))) )),
  inference(superposition,[],[f3039,f2379])).
fof(f9353,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X30),s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X30) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3039,f2260])).
fof(f9350,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X22))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X23) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X22)))) )),
  inference(superposition,[],[f3039,f334])).
fof(f9345,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X8))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X9) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3039,f333])).
fof(f9341,plain,(
  ( ! [X37,X38] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X37))),s('type.num.num',X38))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X37))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X38)) )),
  inference(superposition,[],[f3039,f2379])).
fof(f9337,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X30)) )),
  inference(superposition,[],[f3039,f2260])).
fof(f9334,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X23))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X22))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X23)) )),
  inference(superposition,[],[f3039,f334])).
fof(f9329,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X9))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X9)) )),
  inference(superposition,[],[f3039,f333])).
fof(f8438,plain,(
  ( ! [X66,X65] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X65))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X65)),X66)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X66),s('type.num.num','const.num.SUC_1'(s('type.num.num',X65))))))) )),
  inference(forward_demodulation,[],[f8361,f2379])).
fof(f8361,plain,(
  ( ! [X66,X65] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X66),s('type.num.num','const.num.SUC_1'(s('type.num.num',X65)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X65))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X65)),X66))))) )),
  inference(superposition,[],[f593,f2379])).
fof(f8437,plain,(
  ( ! [X64,X63] : (s('type.num.num',X64) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))),s('type.num.num',sK16(X64,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X63)))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))),s('type.num.num',X64))))) )),
  inference(forward_demodulation,[],[f8360,f2379])).
fof(f8360,plain,(
  ( ! [X64,X63] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))),s('type.num.num',X64)))) | s('type.num.num',X64) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X63))),s('type.num.num',sK16(X64,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X63))))))) )),
  inference(superposition,[],[f593,f2379])).
fof(f8420,plain,(
  ( ! [X185,X186] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X185))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X186)),'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X185))))))) )),
  inference(superposition,[],[f2050,f2379])).
fof(f8418,plain,(
  ( ! [X182,X181] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X181))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X182),s('type.num.num','const.num.|48|_0')),'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X181))))))) )),
  inference(superposition,[],[f2046,f2379])).
fof(f8355,plain,(
  ( ! [X50,X48,X49] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X49),s('type.num.num',X50))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X49),s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X49) | s('type.num.num',X50) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X48)))) )),
  inference(superposition,[],[f450,f2379])).
fof(f8354,plain,(
  ( ! [X47,X45,X46] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num',X46))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num',X47))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X45))) | s('type.num.num',X46) = s('type.num.num',X47)) )),
  inference(superposition,[],[f450,f2379])).
fof(f8349,plain,(
  ( ! [X33,X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X32)))) )),
  inference(superposition,[],[f421,f2379])).
fof(f8346,plain,(
  ( ! [X26,X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))),s('type.num.num',X27))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X26)))) )),
  inference(superposition,[],[f420,f2379])).
fof(f8285,plain,(
  ( ! [X66,X65] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X65))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X66)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X66),s('type.num.num','const.num.SUC_1'(s('type.num.num',X65))))))) )),
  inference(forward_demodulation,[],[f8209,f2260])).
fof(f8209,plain,(
  ( ! [X66,X65] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X66),s('type.num.num','const.num.SUC_1'(s('type.num.num',X65)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X66),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X66))))) )),
  inference(superposition,[],[f593,f2260])).
fof(f8284,plain,(
  ( ! [X64,X63] : (s('type.num.num',X64) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))),s('type.num.num',sK16(X64,'const.arithmetic.+_2'(s('type.num.num',X63),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))),s('type.num.num',X64))))) )),
  inference(forward_demodulation,[],[f8208,f2260])).
fof(f8208,plain,(
  ( ! [X64,X63] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))),s('type.num.num',X64)))) | s('type.num.num',X64) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X63),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK16(X64,'const.arithmetic.+_2'(s('type.num.num',X63),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(superposition,[],[f593,f2260])).
fof(f8268,plain,(
  ( ! [X185,X186] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X185))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X186)),'const.arithmetic.+_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(superposition,[],[f2050,f2260])).
fof(f8266,plain,(
  ( ! [X182,X181] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X181))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X182),s('type.num.num','const.num.|48|_0')),'const.arithmetic.+_2'(s('type.num.num',X181),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(superposition,[],[f2046,f2260])).
fof(f8203,plain,(
  ( ! [X50,X48,X49] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X49),s('type.num.num',X50))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X49),s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X49) | s('type.num.num',X50) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X48),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f450,f2260])).
fof(f8202,plain,(
  ( ! [X47,X45,X46] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num',X46))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num',X47))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X46) = s('type.num.num',X47)) )),
  inference(superposition,[],[f450,f2260])).
fof(f8197,plain,(
  ( ! [X33,X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f421,f2260])).
fof(f8194,plain,(
  ( ! [X26,X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))),s('type.num.num',X27))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f420,f2260])).
fof(f7484,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X23)),'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X22))))))) )),
  inference(superposition,[],[f2050,f334])).
fof(f7479,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9)),'const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(superposition,[],[f2050,f333])).
fof(f7284,plain,(
  ( ! [X19,X20] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')),'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X19))))))) )),
  inference(superposition,[],[f2046,f334])).
fof(f7280,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.num.|48|_0')),'const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(superposition,[],[f2046,f333])).
fof(f3839,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1956,f577])).
fof(f3838,plain,(
  ( ! [X2,X0,X1] : (sP3('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f1956,f576])).
fof(f3837,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f661,f1956,f574])).
fof(f3836,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f648,f1956,f574])).
fof(f3834,plain,(
  ( ! [X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f628,f1956,f574])).
fof(f3833,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f660,f1956,f574])).
fof(f3832,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f647,f1956,f574])).
fof(f3830,plain,(
  ( ! [X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f626,f1956,f574])).
fof(f3829,plain,(
  ( ! [X2,X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f662,f1956,f573])).
fof(f3828,plain,(
  ( ! [X2,X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f649,f1956,f573])).
fof(f3826,plain,(
  ( ! [X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f632,f1956,f573])).
fof(f3825,plain,(
  ( ! [X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f631,f1956,f573])).
fof(f3824,plain,(
  ( ! [X0,X1] : (~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f1956,f592,f1956,f550])).
fof(f3823,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1956,f550])).
fof(f3817,plain,(
  ( ! [X0] : (~sP13('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1956,f550])).
fof(f3816,plain,(
  ( ! [X2,X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1956,f1956,f549])).
fof(f3812,plain,(
  ( ! [X0,X1] : (sP13('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f321,f1956,f549])).
fof(f3809,plain,(
  ( ! [X0] : (sP13('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f592,f592,f1956,f547])).
fof(f3808,plain,(
  ( ! [X2,X0,X1] : (sP12(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1956,f545])).
fof(f3800,plain,(
  ( ! [X0,X1] : (~sP12('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f592,f1956,f1956,f543])).
fof(f3799,plain,(
  ( ! [X0] : (~sP12('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f592,f321,f1956,f543])).
fof(f3790,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f592,f321,f1956,f543])).
fof(f3763,plain,(
  ( ! [X0,X1] : (~sP13('F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f592,f1956,f537])).
fof(f3762,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f592,f1956,f533])).
fof(f3761,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1956,f1956,f532])).
fof(f3757,plain,(
  ( ! [X0,X1] : (sP11('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f321,f1956,f532])).
fof(f3756,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1956,f1956,f531])).
fof(f3752,plain,(
  ( ! [X0,X1] : (sP11('T_0',X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f321,f1956,f531])).
fof(f3751,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1956,f528])).
fof(f3750,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1956,f527])).
fof(f3741,plain,(
  ( ! [X0] : (~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f592,f1956,f526])).
fof(f3725,plain,(
  ( ! [X0,X1] : (~sP11('F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f592,f1956,f520])).
fof(f3717,plain,(
  ( ! [X0,X1] : (~sP11('F_0',X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f592,f1956,f519])).
fof(f3715,plain,(
  ( ! [X0,X1] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f1956,f592,f1956,f518])).
fof(f3714,plain,(
  ( ! [X0] : (~sP9('F_0','T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1956,f518])).
fof(f3711,plain,(
  ( ! [X0] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1956,f518])).
fof(f3710,plain,(
  ( ! [X2,X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1956,f1956,f1956,f515])).
fof(f3709,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f321,f1956,f1956,f515])).
fof(f3708,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1956,f321,f1956,f515])).
fof(f3707,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f321,f1956,f515])).
fof(f3704,plain,(
  ( ! [X0,X1] : (sP9('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f321,f1956,f1956,f515])).
fof(f3702,plain,(
  ( ! [X0] : (sP9('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f321,f321,f1956,f515])).
fof(f3697,plain,(
  ( ! [X0] : (sP9('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f321,f1956,f515])).
fof(f3696,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1956,f510])).
fof(f3688,plain,(
  ( ! [X0,X1] : (~sP8('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1956,f592,f1956,f509])).
fof(f3687,plain,(
  ( ! [X0] : (~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1956,f509])).
fof(f3678,plain,(
  ( ! [X0] : (~sP8('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1956,f509])).
fof(f3676,plain,(
  ( ! [X2,X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1956,f659,f1956,f505])).
fof(f3675,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f321,f659,f1956,f505])).
fof(f3674,plain,(
  ( ! [X2,X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1956,f646,f1956,f505])).
fof(f3673,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f321,f646,f1956,f505])).
fof(f3666,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f659,f1956,f505])).
fof(f3664,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f646,f1956,f505])).
fof(f3657,plain,(
  ( ! [X0,X1] : (~sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f592,f1956,f504])).
fof(f3654,plain,(
  ( ! [X0,X1] : (~sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f1956,f503])).
fof(f3647,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f670,f1956,f499])).
fof(f3646,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f669,f1956,f499])).
fof(f3644,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f670,f1956,f499])).
fof(f3643,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f669,f1956,f499])).
fof(f3641,plain,(
  ( ! [X2,X0,X1] : (sP4('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f1956,f497])).
fof(f3640,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1956,f496])).
fof(f3639,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1956,f495])).
fof(f3638,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1956,f491])).
fof(f3630,plain,(
  ( ! [X0,X1] : (~sP5('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1956,f592,f1956,f490])).
fof(f3629,plain,(
  ( ! [X0] : (~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1956,f490])).
fof(f3620,plain,(
  ( ! [X0] : (~sP5('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1956,f490])).
fof(f3619,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1956,f487])).
fof(f3611,plain,(
  ( ! [X0,X1] : (~sP6('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1956,f592,f1956,f486])).
fof(f3610,plain,(
  ( ! [X0] : (~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1956,f486])).
fof(f3601,plain,(
  ( ! [X0] : (~sP6('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f1956,f486])).
fof(f3597,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f656,f655,f654,f1956,f483])).
fof(f3590,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f643,f642,f654,f1956,f483])).
fof(f3580,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f616,f612,f654,f1956,f483])).
fof(f3575,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f656,f655,f641,f1956,f483])).
fof(f3568,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f643,f642,f641,f1956,f483])).
fof(f3558,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f616,f612,f641,f1956,f483])).
fof(f3535,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f656,f655,f608,f1956,f483])).
fof(f3529,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f643,f642,f608,f1956,f483])).
fof(f3521,plain,(
  ( ! [X0] : (sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f616,f612,f608,f1956,f483])).
fof(f3513,plain,(
  ( ! [X0,X1] : (~sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1956,f592,f1956,f482])).
fof(f3501,plain,(
  ( ! [X0,X1] : (~sP3('F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f592,f1956,f470])).
fof(f3496,plain,(
  ( ! [X0,X1] : (~sP3('F_0',X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f592,f1956,f469])).
fof(f3492,plain,(
  ( ! [X2,X0,X1] : (sP2('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1956,f1956,f458])).
fof(f3491,plain,(
  ( ! [X0,X1] : (sP2('T_0',X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f321,f1956,f458])).
fof(f3486,plain,(
  ( ! [X0,X1] : (sP2('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f1956,f458])).
fof(f3471,plain,(
  ( ! [X0] : (sP1('F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f592,f1956,f443])).
fof(f3470,plain,(
  ( ! [X0] : (sP1('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f1956,f440])).
fof(f3469,plain,(
  ( ! [X0,X1] : (~sP1('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f1956,f1956,f439])).
fof(f3468,plain,(
  ( ! [X0] : (~sP1('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f321,f1956,f439])).
fof(f3466,plain,(
  ( ! [X0] : (~sP1('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f1956,f439])).
fof(f3465,plain,(
  ( ! [X0,X1] : (sP0('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f1956,f425])).
fof(f3464,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f1956,f424])).
fof(f3462,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f321,f1956,f417])).
fof(f3454,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK16(X0,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(unit_resulting_resolution,[],[f1956,f593])).
fof(f3142,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(equality_resolution,[],[f422])).
fof(f3135,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4))) | s('type.num.num',X6) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.num.num',X6)))) )),
  inference(superposition,[],[f422,f405])).
fof(f3052,plain,(
  ( ! [X24,X23,X22] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X23))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X24))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X22))) | s('type.num.num',X23) = s('type.num.num',X24)) )),
  inference(superposition,[],[f450,f334])).
fof(f3047,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X5))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X4) = s('type.num.num',X5)) )),
  inference(superposition,[],[f450,f333])).
fof(f3036,plain,(
  ( ! [X24,X23,X22] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X22))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X24))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X23) | s('type.num.num',X24) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X22)))) )),
  inference(superposition,[],[f450,f334])).
fof(f3031,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X3))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X4) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f450,f333])).
fof(f3006,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))))) | s('type.num.num',X8) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f421,f449])).
fof(f3001,plain,(
  ( ! [X23,X21,X22] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22)))))) )),
  inference(superposition,[],[f421,f407])).
fof(f3000,plain,(
  ( ! [X19,X20,X18] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))),s('type.num.num',X19))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X19))),s('type.num.num',X19)))) )),
  inference(superposition,[],[f421,f406])).
fof(f2999,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X16))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X16)))) )),
  inference(superposition,[],[f421,f334])).
fof(f2995,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)))) )),
  inference(superposition,[],[f421,f405])).
fof(f2994,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f421,f333])).
fof(f2597,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7)))) )),
  inference(superposition,[],[f420,f449])).
fof(f2583,plain,(
  ( ! [X23,X21,X22] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))),s('type.num.num',X23))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22)))))) )),
  inference(superposition,[],[f420,f407])).
fof(f2582,plain,(
  ( ! [X19,X20,X18] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))),s('type.num.num',X19))),s('type.num.num',X20))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X19))),s('type.num.num',X19)))) )),
  inference(superposition,[],[f420,f406])).
fof(f2581,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X16)))) )),
  inference(superposition,[],[f420,f334])).
fof(f2577,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4))),s('type.num.num',X6))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)))) )),
  inference(superposition,[],[f420,f405])).
fof(f2576,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f420,f333])).
fof(f2379,plain,(
  ( ! [X7] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X7)))) )),
  inference(forward_demodulation,[],[f2315,f334])).
fof(f2315,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f407,f334])).
fof(f2260,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f2189,f333])).
fof(f2189,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f406,f333])).
fof(f2051,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X13),s('type.num.num',X12)))) | s('type.num.num',X12) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X12)),X13))))) )),
  inference(forward_demodulation,[],[f2029,f334])).
fof(f2029,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X13),s('type.num.num',X12)))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X12))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X12)),X13))))) )),
  inference(superposition,[],[f593,f334])).
fof(f2047,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X2)))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X3))))) )),
  inference(forward_demodulation,[],[f2025,f333])).
fof(f2025,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X2)))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X3))))) )),
  inference(superposition,[],[f593,f333])).
fof(f2043,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',X13)))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',sK16(X13,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X12))))))) )),
  inference(forward_demodulation,[],[f2042,f334])).
fof(f2042,plain,(
  ( ! [X12,X13] : (s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',sK16(X13,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X12)))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',X13))))) )),
  inference(forward_demodulation,[],[f2023,f449])).
fof(f2023,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',X13)))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X12))),s('type.num.num',sK16(X13,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X12))))))) )),
  inference(superposition,[],[f593,f334])).
fof(f2037,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X3)))) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',sK16(X3,'const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f2036,f334])).
fof(f2036,plain,(
  ( ! [X2,X3] : (s('type.num.num',X3) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK16(X3,'const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X3))))) )),
  inference(forward_demodulation,[],[f2019,f449])).
fof(f2019,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X3)))) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK16(X3,'const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(superposition,[],[f593,f333])).
fof(f422,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f255])).
fof(f421,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(cnf_transformation,[],[f255])).
fof(f334,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X7)))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.arithmetic.MULT_LEFT_|49|')).
fof(f9816,plain,(
  ( ! [X225,X224] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X225),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X224),s('type.num.num',X224))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X225) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X224)))) )),
  inference(superposition,[],[f3039,f2193])).
fof(f9815,plain,(
  ( ! [X222,X223] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X222),s('type.num.num',X222))),s('type.num.num',X223))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X222))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X223)) )),
  inference(superposition,[],[f3039,f2193])).
fof(f9809,plain,(
  ( ! [X213,X214] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X213),s('type.num.num',X213))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X214)),'const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X213))))))) )),
  inference(superposition,[],[f2050,f2193])).
fof(f9807,plain,(
  ( ! [X210,X209] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X209),s('type.num.num',X209))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X210),s('type.num.num','const.num.|48|_0')),'const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X209))))))) )),
  inference(superposition,[],[f2046,f2193])).
fof(f9805,plain,(
  ( ! [X206] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X206),s('type.num.num',X206)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X206)))) )),
  inference(superposition,[],[f2035,f2193])).
fof(f9803,plain,(
  ( ! [X204,X203] : (s('type.num.num',X204) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X203),s('type.num.num',X203))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X204),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X203))))))) )),
  inference(superposition,[],[f1985,f2193])).
fof(f9802,plain,(
  ( ! [X202,X201] : (s('type.num.num',X202) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X201),s('type.num.num',X201))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X201))),s('type.num.num',X202))))) )),
  inference(superposition,[],[f1985,f2193])).
fof(f9801,plain,(
  ( ! [X200,X199] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X199),s('type.num.num',X199))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X200),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X199))))))) )),
  inference(superposition,[],[f1984,f2193])).
fof(f9799,plain,(
  ( ! [X194,X195,X193] : (s('type.num.num',X194) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X193),s('type.num.num',X193))),s('type.num.num',X195))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X193))),s('type.num.num',X194))))) )),
  inference(superposition,[],[f1982,f2193])).
fof(f9798,plain,(
  ( ! [X191,X192,X190] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X191),s('type.num.num',X192))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X190),s('type.num.num',X190))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X191),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X190))))))) )),
  inference(superposition,[],[f1982,f2193])).
fof(f9747,plain,(
  ( ! [X85,X84] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X84),s('type.num.num',X84)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X84))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X85),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X84)),X85))))) )),
  inference(superposition,[],[f593,f2193])).
fof(f9829,plain,(
  ( ! [X83,X82] : (s('type.num.num',X83) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num',sK16(X83,'const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X82)))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X82),s('type.num.num',X82))),s('type.num.num',X83))))) )),
  inference(forward_demodulation,[],[f9746,f449])).
fof(f9746,plain,(
  ( ! [X83,X82] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X82),s('type.num.num',X82))),s('type.num.num',X83)))) | s('type.num.num',X83) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X82))),s('type.num.num',sK16(X83,'const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X82))))))) )),
  inference(superposition,[],[f593,f2193])).
fof(f9744,plain,(
  ( ! [X78,X76,X77] : (s('type.num.num',X77) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X76),s('type.num.num',X76))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X78),s('type.num.num',X77))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X78),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X76)))))) )),
  inference(superposition,[],[f452,f2193])).
fof(f9743,plain,(
  ( ! [X74,X75,X73] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X73),s('type.num.num',X73))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X73))),s('type.num.num',X74))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X73))),s('type.num.num',X75)))) )),
  inference(superposition,[],[f451,f2193])).
fof(f9741,plain,(
  ( ! [X68,X69,X67] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X68),s('type.num.num',X69))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X67),s('type.num.num',X67))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X68) | s('type.num.num',X69) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X67)))) )),
  inference(superposition,[],[f450,f2193])).
fof(f9740,plain,(
  ( ! [X66,X64,X65] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X64))),s('type.num.num',X65))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X64))),s('type.num.num',X66))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X64))) | s('type.num.num',X65) = s('type.num.num',X66)) )),
  inference(superposition,[],[f450,f2193])).
fof(f9736,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num',X53))) | s('type.num.num',X54) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X53))),s('type.num.num',X54)))) )),
  inference(superposition,[],[f422,f2193])).
fof(f9735,plain,(
  ( ! [X52,X51] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num',X51))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X51)))) )),
  inference(superposition,[],[f421,f2193])).
fof(f9732,plain,(
  ( ! [X45,X46] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num',X45))),s('type.num.num',X46))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X45)))) )),
  inference(superposition,[],[f420,f2193])).
fof(f9730,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X40),s('type.num.num',X41))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X39))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X39))))))) )),
  inference(superposition,[],[f419,f2193])).
fof(f9729,plain,(
  ( ! [X37,X38,X36] : (s('type.num.num',X37) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X36))),s('type.num.num',X37))))) )),
  inference(superposition,[],[f419,f2193])).
fof(f9715,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X16))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f2190,f2193])).
fof(f9714,plain,(
  ( ! [X14,X15] : (s('type.num.num',X15) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X14))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X15))))) )),
  inference(superposition,[],[f1982,f2193])).
fof(f9711,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X8))),s('type.num.num',X9))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X9)))))) )),
  inference(superposition,[],[f449,f2193])).
fof(f9710,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f421,f2193])).
fof(f9708,plain,(
  ( ! [X4,X5] : (s('type.num.num',X5) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X4))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num',X5))))) )),
  inference(superposition,[],[f419,f2193])).
fof(f9707,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X3)))))) )),
  inference(superposition,[],[f407,f2193])).
fof(f9706,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f406,f2193])).
fof(f9699,plain,(
  ( ! [X204,X205] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X205),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X204))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X205) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X204),s('type.num.num',X204)))) )),
  inference(superposition,[],[f3039,f2193])).
fof(f9698,plain,(
  ( ! [X202,X203] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X202))),s('type.num.num',X203))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X202),s('type.num.num',X202))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X203)) )),
  inference(superposition,[],[f3039,f2193])).
fof(f9692,plain,(
  ( ! [X194,X193] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X193))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X194)),'const.arithmetic.+_2'(s('type.num.num',X193),s('type.num.num',X193))))))) )),
  inference(superposition,[],[f2050,f2193])).
fof(f9690,plain,(
  ( ! [X189,X190] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X189))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X190),s('type.num.num','const.num.|48|_0')),'const.arithmetic.+_2'(s('type.num.num',X189),s('type.num.num',X189))))))) )),
  inference(superposition,[],[f2046,f2193])).
fof(f9688,plain,(
  ( ! [X186] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X186)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X186),s('type.num.num',X186)))) )),
  inference(superposition,[],[f2035,f2193])).
fof(f9686,plain,(
  ( ! [X184,X183] : (s('type.num.num',X184) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X183))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X184),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X183),s('type.num.num',X183))))))) )),
  inference(superposition,[],[f1985,f2193])).
fof(f9685,plain,(
  ( ! [X182,X181] : (s('type.num.num',X182) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X181))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X181),s('type.num.num',X181))),s('type.num.num',X182))))) )),
  inference(superposition,[],[f1985,f2193])).
fof(f9684,plain,(
  ( ! [X180,X179] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X179))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X180),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X179),s('type.num.num',X179))))))) )),
  inference(superposition,[],[f1984,f2193])).
fof(f9821,plain,(
  ( ! [X175,X173,X174] : (s('type.num.num',X174) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X173),s('type.num.num',X175))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X173),s('type.num.num',X173))),s('type.num.num',X174))))) )),
  inference(forward_demodulation,[],[f9682,f449])).
fof(f9682,plain,(
  ( ! [X175,X173,X174] : (s('type.num.num',X174) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X173))),s('type.num.num',X175))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X173),s('type.num.num',X173))),s('type.num.num',X174))))) )),
  inference(superposition,[],[f1982,f2193])).
fof(f9681,plain,(
  ( ! [X171,X172,X170] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X171),s('type.num.num',X172))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X170))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X171),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X170),s('type.num.num',X170))))))) )),
  inference(superposition,[],[f1982,f2193])).
fof(f9630,plain,(
  ( ! [X64,X65] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X64)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X64))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X64)),X65))))) )),
  inference(superposition,[],[f593,f2193])).
fof(f9629,plain,(
  ( ! [X62,X63] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X62))),s('type.num.num',X63)))) | s('type.num.num',X63) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X62))),s('type.num.num',sK16(X63,'const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X62))))))) )),
  inference(superposition,[],[f593,f2193])).
fof(f9627,plain,(
  ( ! [X57,X58,X56] : (s('type.num.num',X57) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X56))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num',X57))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X56),s('type.num.num',X56)))))) )),
  inference(superposition,[],[f452,f2193])).
fof(f9626,plain,(
  ( ! [X54,X55,X53] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X53))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num',X53))),s('type.num.num',X54))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num',X53))),s('type.num.num',X55)))) )),
  inference(superposition,[],[f451,f2193])).
fof(f9624,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X48),s('type.num.num',X49))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X48),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X47))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X48) | s('type.num.num',X49) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num',X47)))) )),
  inference(superposition,[],[f450,f2193])).
fof(f9623,plain,(
  ( ! [X45,X46,X44] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X44))),s('type.num.num',X45))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X44))),s('type.num.num',X46))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num',X44))) | s('type.num.num',X45) = s('type.num.num',X46)) )),
  inference(superposition,[],[f450,f2193])).
fof(f9619,plain,(
  ( ! [X33,X34] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X33))) | s('type.num.num',X34) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num',X33))),s('type.num.num',X34)))) )),
  inference(superposition,[],[f422,f2193])).
fof(f9618,plain,(
  ( ! [X31,X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X31))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31)))) )),
  inference(superposition,[],[f421,f2193])).
fof(f9615,plain,(
  ( ! [X26,X25] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X25))),s('type.num.num',X26))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25)))) )),
  inference(superposition,[],[f420,f2193])).
fof(f9613,plain,(
  ( ! [X21,X19,X20] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X21))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X19))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X19))))))) )),
  inference(superposition,[],[f419,f2193])).
fof(f9612,plain,(
  ( ! [X17,X18,X16] : (s('type.num.num',X17) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X16))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X16))),s('type.num.num',X17))))) )),
  inference(superposition,[],[f419,f2193])).
fof(f9573,plain,(
  ( ! [X0] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))))))) )),
  inference(unit_resulting_resolution,[],[f2193,f1982])).
fof(f9574,plain,(
  ( ! [X0] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))))))) )),
  inference(unit_resulting_resolution,[],[f2193,f419])).
fof(f9575,plain,(
  ( ! [X0] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X0))))))) )),
  inference(unit_resulting_resolution,[],[f2193,f1985])).
fof(f9577,plain,(
  ( ! [X0] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))))))) )),
  inference(unit_resulting_resolution,[],[f2193,f1985])).
fof(f9578,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f2193,f452])).
fof(f9367,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X8) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9)),X8))) )),
  inference(trivial_inequality_removal,[],[f9363])).
fof(f9363,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') = s('type.num.num',X8) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9)),X8))) )),
  inference(superposition,[],[f3039,f2050])).
fof(f9368,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X6) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')),X6))) )),
  inference(trivial_inequality_removal,[],[f9362])).
fof(f9362,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') = s('type.num.num',X6) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')),X6))) )),
  inference(superposition,[],[f3039,f2046])).
fof(f9193,plain,(
  ( ! [X45,X43,X46,X44] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X43))),s('type.num.num',X44))),s('type.num.num',X45)))) | s('type.num.num',X45) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X43))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num',X46)))))) )),
  inference(forward_demodulation,[],[f9192,f406])).
fof(f9192,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.num.num',X45) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X43))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num',X46))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num',X44))),s('type.num.num',X44))),s('type.num.num',X45))))) )),
  inference(forward_demodulation,[],[f9117,f449])).
fof(f9117,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.num.num',X45) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X43))),s('type.num.num',X44))),s('type.num.num',X46))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num',X44))),s('type.num.num',X44))),s('type.num.num',X45))))) )),
  inference(superposition,[],[f1982,f406])).
fof(f9189,plain,(
  ( ! [X35,X33,X36,X34] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))))),s('type.num.num',X35)))) | s('type.num.num',X35) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))),s('type.num.num',X36)))))) )),
  inference(forward_demodulation,[],[f9188,f407])).
fof(f9188,plain,(
  ( ! [X35,X33,X36,X34] : (s('type.num.num',X35) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))),s('type.num.num',X36))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num',X34))))),s('type.num.num',X35))))) )),
  inference(forward_demodulation,[],[f9114,f449])).
fof(f9114,plain,(
  ( ! [X35,X33,X36,X34] : (s('type.num.num',X35) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))))),s('type.num.num',X36))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num',X34))))),s('type.num.num',X35))))) )),
  inference(superposition,[],[f1982,f407])).
fof(f8462,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))))))) = s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))))) )),
  inference(unit_resulting_resolution,[],[f2414,f2414,f417])).
fof(f7769,plain,(
  ( ! [X200,X201] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X200))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X201)),'const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X200))))))) )),
  inference(superposition,[],[f2050,f2192])).
fof(f7767,plain,(
  ( ! [X196,X197] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X196))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num','const.num.|48|_0')),'const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X196))))))) )),
  inference(superposition,[],[f2046,f2192])).
fof(f7795,plain,(
  ( ! [X80,X81] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X80))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X81),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X80)),X81)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X81),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X80))))))) )),
  inference(forward_demodulation,[],[f7710,f2192])).
fof(f7710,plain,(
  ( ! [X80,X81] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X81),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X80)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X80))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X81),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X80)),X81))))) )),
  inference(superposition,[],[f593,f2192])).
fof(f7794,plain,(
  ( ! [X78,X79] : (s('type.num.num',X79) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X78),s('type.num.num',sK16(X79,'const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X78)))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X78))),s('type.num.num',X79))))) )),
  inference(forward_demodulation,[],[f7793,f2192])).
fof(f7793,plain,(
  ( ! [X78,X79] : (s('type.num.num',X79) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X78),s('type.num.num',sK16(X79,'const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X78)))))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X78))),s('type.num.num',X79))))) )),
  inference(forward_demodulation,[],[f7709,f449])).
fof(f7709,plain,(
  ( ! [X78,X79] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X78))),s('type.num.num',X79)))) | s('type.num.num',X79) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X78))),s('type.num.num',sK16(X79,'const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X78))))))) )),
  inference(superposition,[],[f593,f2192])).
fof(f7675,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8))),s('type.num.num',X9))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X9)))))) )),
  inference(superposition,[],[f449,f2192])).
fof(f7674,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f421,f2192])).
fof(f7672,plain,(
  ( ! [X4,X5] : (s('type.num.num',X5) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X4))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num',X5))))) )),
  inference(superposition,[],[f419,f2192])).
fof(f7775,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f7671,f2192])).
fof(f7671,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))))) )),
  inference(superposition,[],[f407,f2192])).
fof(f7670,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f406,f2192])).
fof(f7667,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X4)),'const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f2192,f2050])).
fof(f7666,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')),'const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f2192,f2046])).
fof(f7662,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f2192,f405])).
fof(f7644,plain,(
  ( ! [X0] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))) )),
  inference(unit_resulting_resolution,[],[f2192,f419])).
fof(f7508,plain,(
  ( ! [X21,X19,X20] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X21))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X19) | s('type.num.num',X21) = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)),X19))) )),
  inference(superposition,[],[f450,f2050])).
fof(f7503,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)),X7))))))) )),
  inference(superposition,[],[f407,f2050])).
fof(f7502,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)),X5)))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)),X5))))) )),
  inference(superposition,[],[f406,f2050])).
fof(f7307,plain,(
  ( ! [X19,X20,X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X20))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X18) | s('type.num.num',X20) = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')),X18))) )),
  inference(superposition,[],[f450,f2046])).
fof(f7302,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')),X6))))))) )),
  inference(superposition,[],[f407,f2046])).
fof(f7301,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')),X4)))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')),X4))))) )),
  inference(superposition,[],[f406,f2046])).
fof(f2414,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f449,f419])).
fof(f5868,plain,(
  ( ! [X154,X152,X155,X153] : (s(X154,f(s(bool,'T_0'))) != s(X154,g(s(bool,'T_0'))) | s(fun(bool,X154),X152) = s(fun(bool,X154),X153) | s(bool,X155) = s(bool,sK17(X152,X153,X154,bool)) | s(bool,'T_0') = s(bool,X155)) )),
  inference(superposition,[],[f448,f959])).
fof(f6213,plain,(
  ( ! [X147,X148] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X147) | s(bool,X148) = s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X147))) | s(bool,'T_0') = s(bool,X148)) )),
  inference(subsumption_resolution,[],[f5867,f321])).
fof(f5867,plain,(
  ( ! [X147,X148] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X147) | s(bool,X148) = s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X147))) | s(bool,'T_0') = s(bool,X148)) )),
  inference(superposition,[],[f2035,f959])).
fof(f6205,plain,(
  ( ! [X111,X112,X110,X113] : (~sP10(X110,X111,X112) | sP11(X110,X111,X112) | s(bool,X110) = s(bool,X113) | s(bool,'T_0') = s(bool,X113)) )),
  inference(subsumption_resolution,[],[f5853,f321])).
fof(f5853,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'T_0')) | ~sP10(X110,X111,X112) | sP11(X110,X111,X112) | s(bool,X110) = s(bool,X113) | s(bool,'T_0') = s(bool,X113)) )),
  inference(superposition,[],[f574,f959])).
fof(f6204,plain,(
  ( ! [X109,X107,X108,X106] : (~sP12(X106,X107,X108) | sP13(X106,X107,X108) | s(bool,X106) = s(bool,X109) | s(bool,'T_0') = s(bool,X109)) )),
  inference(subsumption_resolution,[],[f5852,f321])).
fof(f5852,plain,(
  ( ! [X109,X107,X108,X106] : (~p(s(bool,'T_0')) | ~sP12(X106,X107,X108) | sP13(X106,X107,X108) | s(bool,X106) = s(bool,X109) | s(bool,'T_0') = s(bool,X109)) )),
  inference(superposition,[],[f573,f959])).
fof(f6203,plain,(
  ( ! [X103,X105,X102,X104] : (~p(s(bool,X103)) | p(s(bool,X104)) | ~sP13(X102,X104,X103) | s(bool,X102) = s(bool,X105) | s(bool,'T_0') = s(bool,X105)) )),
  inference(subsumption_resolution,[],[f5851,f321])).
fof(f5851,plain,(
  ( ! [X103,X105,X102,X104] : (~p(s(bool,'T_0')) | ~p(s(bool,X103)) | p(s(bool,X104)) | ~sP13(X102,X104,X103) | s(bool,X102) = s(bool,X105) | s(bool,'T_0') = s(bool,X105)) )),
  inference(superposition,[],[f550,f959])).
fof(f6202,plain,(
  ( ! [X101,X99,X100,X98] : (~p(s(bool,X99)) | sP13(X98,X99,X100) | s(bool,X98) = s(bool,X101) | s(bool,'T_0') = s(bool,X101)) )),
  inference(subsumption_resolution,[],[f5850,f321])).
fof(f5850,plain,(
  ( ! [X101,X99,X100,X98] : (~p(s(bool,'T_0')) | ~p(s(bool,X99)) | sP13(X98,X99,X100) | s(bool,X98) = s(bool,X101) | s(bool,'T_0') = s(bool,X101)) )),
  inference(superposition,[],[f549,f959])).
fof(f6201,plain,(
  ( ! [X94,X97,X95,X96] : (p(s(bool,X95)) | sP13(X94,X96,X95) | s(bool,X94) = s(bool,X97) | s(bool,'T_0') = s(bool,X97)) )),
  inference(subsumption_resolution,[],[f5849,f321])).
fof(f5849,plain,(
  ( ! [X94,X97,X95,X96] : (~p(s(bool,'T_0')) | p(s(bool,X95)) | sP13(X94,X96,X95) | s(bool,X94) = s(bool,X97) | s(bool,'T_0') = s(bool,X97)) )),
  inference(superposition,[],[f548,f959])).
fof(f6200,plain,(
  ( ! [X92,X90,X93,X91] : (p(s(bool,X91)) | ~p(s(bool,X92)) | ~sP12(X92,X91,X90) | s(bool,X90) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) )),
  inference(subsumption_resolution,[],[f5848,f321])).
fof(f5848,plain,(
  ( ! [X92,X90,X93,X91] : (~p(s(bool,'T_0')) | p(s(bool,X91)) | ~p(s(bool,X92)) | ~sP12(X92,X91,X90) | s(bool,X90) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) )),
  inference(superposition,[],[f543,f959])).
fof(f6199,plain,(
  ( ! [X88,X87,X89,X86] : (p(s(bool,X87)) | p(s(bool,X88)) | ~sP11(X86,X88,X87) | s(bool,X86) = s(bool,X89) | s(bool,'T_0') = s(bool,X89)) )),
  inference(subsumption_resolution,[],[f5847,f321])).
fof(f5847,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'T_0')) | p(s(bool,X87)) | p(s(bool,X88)) | ~sP11(X86,X88,X87) | s(bool,X86) = s(bool,X89) | s(bool,'T_0') = s(bool,X89)) )),
  inference(superposition,[],[f533,f959])).
fof(f6198,plain,(
  ( ! [X85,X83,X84,X82] : (~p(s(bool,X83)) | sP11(X82,X83,X84) | s(bool,X82) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) )),
  inference(subsumption_resolution,[],[f5846,f321])).
fof(f5846,plain,(
  ( ! [X85,X83,X84,X82] : (~p(s(bool,'T_0')) | ~p(s(bool,X83)) | sP11(X82,X83,X84) | s(bool,X82) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) )),
  inference(superposition,[],[f532,f959])).
fof(f6197,plain,(
  ( ! [X80,X78,X81,X79] : (~p(s(bool,X79)) | sP11(X78,X80,X79) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) )),
  inference(subsumption_resolution,[],[f5845,f321])).
fof(f5845,plain,(
  ( ! [X80,X78,X81,X79] : (~p(s(bool,'T_0')) | ~p(s(bool,X79)) | sP11(X78,X80,X79) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) )),
  inference(superposition,[],[f531,f959])).
fof(f6196,plain,(
  ( ! [X76,X74,X77,X75] : (p(s(bool,X75)) | p(s(bool,X76)) | ~sP10(X74,X75,X76) | s(bool,X74) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) )),
  inference(subsumption_resolution,[],[f5844,f321])).
fof(f5844,plain,(
  ( ! [X76,X74,X77,X75] : (~p(s(bool,'T_0')) | p(s(bool,X75)) | p(s(bool,X76)) | ~sP10(X74,X75,X76) | s(bool,X74) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f526,f959])).
fof(f6195,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,X71)) | p(s(bool,X72)) | ~sP9(X72,X71,X70) | s(bool,X70) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f5843,f321])).
fof(f5843,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X71)) | p(s(bool,X72)) | ~sP9(X72,X71,X70) | s(bool,X70) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f518,f959])).
fof(f6194,plain,(
  ( ! [X68,X66,X69,X67] : (~p(s(bool,X67)) | p(s(bool,X68)) | ~sP8(X67,X66,X68) | s(bool,X66) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(subsumption_resolution,[],[f5842,f321])).
fof(f5842,plain,(
  ( ! [X68,X66,X69,X67] : (~p(s(bool,'T_0')) | ~p(s(bool,X67)) | p(s(bool,X68)) | ~sP8(X67,X66,X68) | s(bool,X66) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f509,f959])).
fof(f6193,plain,(
  ( ! [X64,X62,X65,X63] : (~p(s(bool,X63)) | p(s(bool,X64)) | ~sP5(X63,X62,X64) | s(bool,X62) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) )),
  inference(subsumption_resolution,[],[f5841,f321])).
fof(f5841,plain,(
  ( ! [X64,X62,X65,X63] : (~p(s(bool,'T_0')) | ~p(s(bool,X63)) | p(s(bool,X64)) | ~sP5(X63,X62,X64) | s(bool,X62) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) )),
  inference(superposition,[],[f490,f959])).
fof(f6192,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,X59)) | p(s(bool,X60)) | ~sP6(X59,X58,X60) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(subsumption_resolution,[],[f5840,f321])).
fof(f5840,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP6(X59,X58,X60) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f486,f959])).
fof(f6191,plain,(
  ( ! [X57,X54,X56,X55] : (sP7(X55,X56,X54) | ~sP6(X55,X54,X56) | ~sP5(X56,X54,X55) | ~sP4(X54,X56,X55) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(subsumption_resolution,[],[f5839,f321])).
fof(f5839,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'T_0')) | sP7(X55,X56,X54) | ~sP6(X55,X54,X56) | ~sP5(X56,X54,X55) | ~sP4(X54,X56,X55) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f483,f959])).
fof(f6190,plain,(
  ( ! [X52,X50,X53,X51] : (p(s(bool,X51)) | ~sP3(X51,X50,X52) | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f5838,f321])).
fof(f5838,plain,(
  ( ! [X52,X50,X53,X51] : (~p(s(bool,'T_0')) | p(s(bool,X51)) | ~sP3(X51,X50,X52) | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f470,f959])).
fof(f6189,plain,(
  ( ! [X47,X48,X46,X49] : (p(s(bool,X47)) | ~sP3(X47,X48,X46) | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(subsumption_resolution,[],[f5837,f321])).
fof(f5837,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,'T_0')) | p(s(bool,X47)) | ~sP3(X47,X48,X46) | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(superposition,[],[f469,f959])).
fof(f6188,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,X43)) | sP2(X43,X44,X42) | s(bool,X42) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) )),
  inference(subsumption_resolution,[],[f5836,f321])).
fof(f5836,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X43)) | sP2(X43,X44,X42) | s(bool,X42) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f458,f959])).
fof(f6187,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,X39)) | sP2(X39,X38,X40) | s(bool,X38) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(subsumption_resolution,[],[f5835,f321])).
fof(f5835,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X39)) | sP2(X39,X38,X40) | s(bool,X38) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f457,f959])).
fof(f6186,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X32)) | sP1(X32,X31) | s(bool,X31) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5833,f321])).
fof(f5833,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'T_0')) | p(s(bool,X32)) | sP1(X32,X31) | s(bool,X31) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f443,f959])).
fof(f6185,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X29)) | sP1(X28,X29) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(subsumption_resolution,[],[f5832,f321])).
fof(f5832,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X29)) | sP1(X28,X29) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f440,f959])).
fof(f6184,plain,(
  ( ! [X26,X27,X25] : (sP0(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(subsumption_resolution,[],[f5831,f321])).
fof(f5831,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | sP0(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f425,f959])).
fof(f6183,plain,(
  ( ! [X24,X23,X22] : (sP0(X23,X22) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f5830,f321])).
fof(f5830,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0(X23,X22) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f424,f959])).
fof(f6182,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,X20)) | s(bool,X19) = s(bool,X20) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f5829,f321])).
fof(f5829,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | s(bool,X19) = s(bool,X20) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f417,f959])).
fof(f6181,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f5824,f321])).
fof(f5824,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f347,f959])).
fof(f5780,plain,(
  ( ! [X2,X3,X1] : (s(bool,X1) != s(bool,X2) | p(s(bool,X2)) | s(bool,X1) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f343,f959])).
fof(f5726,plain,(
  ( ! [X158,X159,X157,X160] : (s(X159,f(s(bool,X160))) != s(X159,g(s(bool,X160))) | s(fun(bool,X159),X157) = s(fun(bool,X159),X158) | s(bool,'T_0') = s(bool,X160) | s(bool,'T_0') = s(bool,sK17(X157,X158,X159,bool))) )),
  inference(superposition,[],[f448,f959])).
fof(f5656,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f959,f959])).
fof(f4475,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1987,f1987,f417])).
fof(f3982,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f1959,f1959,f417])).
fof(f3463,plain,(
  ( ! [X0,X1] : (s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))) = s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f1956,f1956,f417])).
fof(f3358,plain,(
  ( ! [X26,X25] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num',X26))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X25) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3293,f330])).
fof(f3293,plain,(
  ( ! [X26,X25] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num',X26))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X25) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f450,f2259])).
fof(f3253,plain,(
  ( ! [X80,X81,X79] : (~sP10('const.divides.divides_2'(s('type.num.num',X79),s('type.num.num',X79)),X80,X81) | sP11('const.divides.divides_2'(s('type.num.num',X79),s('type.num.num',X79)),X80,X81)) )),
  inference(subsumption_resolution,[],[f3215,f321])).
fof(f3215,plain,(
  ( ! [X80,X81,X79] : (~p(s(bool,'T_0')) | ~sP10('const.divides.divides_2'(s('type.num.num',X79),s('type.num.num',X79)),X80,X81) | sP11('const.divides.divides_2'(s('type.num.num',X79),s('type.num.num',X79)),X80,X81)) )),
  inference(superposition,[],[f574,f670])).
fof(f3252,plain,(
  ( ! [X78,X76,X77] : (~sP12('const.divides.divides_2'(s('type.num.num',X76),s('type.num.num',X76)),X77,X78) | sP13('const.divides.divides_2'(s('type.num.num',X76),s('type.num.num',X76)),X77,X78)) )),
  inference(subsumption_resolution,[],[f3214,f321])).
fof(f3214,plain,(
  ( ! [X78,X76,X77] : (~p(s(bool,'T_0')) | ~sP12('const.divides.divides_2'(s('type.num.num',X76),s('type.num.num',X76)),X77,X78) | sP13('const.divides.divides_2'(s('type.num.num',X76),s('type.num.num',X76)),X77,X78)) )),
  inference(superposition,[],[f573,f670])).
fof(f3251,plain,(
  ( ! [X74,X75,X73] : (~p(s(bool,X74)) | p(s(bool,X75)) | ~sP13('const.divides.divides_2'(s('type.num.num',X73),s('type.num.num',X73)),X75,X74)) )),
  inference(subsumption_resolution,[],[f3213,f321])).
fof(f3213,plain,(
  ( ! [X74,X75,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X74)) | p(s(bool,X75)) | ~sP13('const.divides.divides_2'(s('type.num.num',X73),s('type.num.num',X73)),X75,X74)) )),
  inference(superposition,[],[f550,f670])).
fof(f3250,plain,(
  ( ! [X70,X72,X71] : (~p(s(bool,X71)) | sP13('const.divides.divides_2'(s('type.num.num',X70),s('type.num.num',X70)),X71,X72)) )),
  inference(subsumption_resolution,[],[f3212,f321])).
fof(f3212,plain,(
  ( ! [X70,X72,X71] : (~p(s(bool,'T_0')) | ~p(s(bool,X71)) | sP13('const.divides.divides_2'(s('type.num.num',X70),s('type.num.num',X70)),X71,X72)) )),
  inference(superposition,[],[f549,f670])).
fof(f3249,plain,(
  ( ! [X68,X69,X67] : (p(s(bool,X68)) | sP13('const.divides.divides_2'(s('type.num.num',X67),s('type.num.num',X67)),X69,X68)) )),
  inference(subsumption_resolution,[],[f3211,f321])).
fof(f3211,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'T_0')) | p(s(bool,X68)) | sP13('const.divides.divides_2'(s('type.num.num',X67),s('type.num.num',X67)),X69,X68)) )),
  inference(superposition,[],[f548,f670])).
fof(f3248,plain,(
  ( ! [X66,X64,X65] : (p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP12(X66,X65,'const.divides.divides_2'(s('type.num.num',X64),s('type.num.num',X64)))) )),
  inference(subsumption_resolution,[],[f3210,f321])).
fof(f3210,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,'T_0')) | p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP12(X66,X65,'const.divides.divides_2'(s('type.num.num',X64),s('type.num.num',X64)))) )),
  inference(superposition,[],[f543,f670])).
fof(f3247,plain,(
  ( ! [X61,X62,X63] : (p(s(bool,X62)) | p(s(bool,X63)) | ~sP11('const.divides.divides_2'(s('type.num.num',X61),s('type.num.num',X61)),X63,X62)) )),
  inference(subsumption_resolution,[],[f3209,f321])).
fof(f3209,plain,(
  ( ! [X61,X62,X63] : (~p(s(bool,'T_0')) | p(s(bool,X62)) | p(s(bool,X63)) | ~sP11('const.divides.divides_2'(s('type.num.num',X61),s('type.num.num',X61)),X63,X62)) )),
  inference(superposition,[],[f533,f670])).
fof(f3246,plain,(
  ( ! [X59,X60,X58] : (~p(s(bool,X59)) | sP11('const.divides.divides_2'(s('type.num.num',X58),s('type.num.num',X58)),X59,X60)) )),
  inference(subsumption_resolution,[],[f3208,f321])).
fof(f3208,plain,(
  ( ! [X59,X60,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X59)) | sP11('const.divides.divides_2'(s('type.num.num',X58),s('type.num.num',X58)),X59,X60)) )),
  inference(superposition,[],[f532,f670])).
fof(f3245,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,X56)) | sP11('const.divides.divides_2'(s('type.num.num',X55),s('type.num.num',X55)),X57,X56)) )),
  inference(subsumption_resolution,[],[f3207,f321])).
fof(f3207,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X56)) | sP11('const.divides.divides_2'(s('type.num.num',X55),s('type.num.num',X55)),X57,X56)) )),
  inference(superposition,[],[f531,f670])).
fof(f3244,plain,(
  ( ! [X54,X52,X53] : (p(s(bool,X53)) | p(s(bool,X54)) | ~sP10('const.divides.divides_2'(s('type.num.num',X52),s('type.num.num',X52)),X53,X54)) )),
  inference(subsumption_resolution,[],[f3206,f321])).
fof(f3206,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,'T_0')) | p(s(bool,X53)) | p(s(bool,X54)) | ~sP10('const.divides.divides_2'(s('type.num.num',X52),s('type.num.num',X52)),X53,X54)) )),
  inference(superposition,[],[f526,f670])).
fof(f3243,plain,(
  ( ! [X50,X51,X49] : (~p(s(bool,X50)) | p(s(bool,X51)) | ~sP9(X51,X50,'const.divides.divides_2'(s('type.num.num',X49),s('type.num.num',X49)))) )),
  inference(subsumption_resolution,[],[f3205,f321])).
fof(f3205,plain,(
  ( ! [X50,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X50)) | p(s(bool,X51)) | ~sP9(X51,X50,'const.divides.divides_2'(s('type.num.num',X49),s('type.num.num',X49)))) )),
  inference(superposition,[],[f518,f670])).
fof(f3242,plain,(
  ( ! [X47,X48,X46] : (~p(s(bool,X47)) | p(s(bool,X48)) | ~sP8(X47,'const.divides.divides_2'(s('type.num.num',X46),s('type.num.num',X46)),X48)) )),
  inference(subsumption_resolution,[],[f3204,f321])).
fof(f3204,plain,(
  ( ! [X47,X48,X46] : (~p(s(bool,'T_0')) | ~p(s(bool,X47)) | p(s(bool,X48)) | ~sP8(X47,'const.divides.divides_2'(s('type.num.num',X46),s('type.num.num',X46)),X48)) )),
  inference(superposition,[],[f509,f670])).
fof(f3241,plain,(
  ( ! [X45,X43,X44] : (~p(s(bool,X44)) | p(s(bool,X45)) | ~sP5(X44,'const.divides.divides_2'(s('type.num.num',X43),s('type.num.num',X43)),X45)) )),
  inference(subsumption_resolution,[],[f3203,f321])).
fof(f3203,plain,(
  ( ! [X45,X43,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | p(s(bool,X45)) | ~sP5(X44,'const.divides.divides_2'(s('type.num.num',X43),s('type.num.num',X43)),X45)) )),
  inference(superposition,[],[f490,f670])).
fof(f3240,plain,(
  ( ! [X41,X42,X40] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6(X41,'const.divides.divides_2'(s('type.num.num',X40),s('type.num.num',X40)),X42)) )),
  inference(subsumption_resolution,[],[f3202,f321])).
fof(f3202,plain,(
  ( ! [X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6(X41,'const.divides.divides_2'(s('type.num.num',X40),s('type.num.num',X40)),X42)) )),
  inference(superposition,[],[f486,f670])).
fof(f3239,plain,(
  ( ! [X39,X37,X38] : (sP7(X38,X39,'const.divides.divides_2'(s('type.num.num',X37),s('type.num.num',X37))) | ~sP6(X38,'const.divides.divides_2'(s('type.num.num',X37),s('type.num.num',X37)),X39) | ~sP5(X39,'const.divides.divides_2'(s('type.num.num',X37),s('type.num.num',X37)),X38)) )),
  inference(subsumption_resolution,[],[f3238,f658])).
fof(f3238,plain,(
  ( ! [X39,X37,X38] : (sP7(X38,X39,'const.divides.divides_2'(s('type.num.num',X37),s('type.num.num',X37))) | ~sP6(X38,'const.divides.divides_2'(s('type.num.num',X37),s('type.num.num',X37)),X39) | ~sP5(X39,'const.divides.divides_2'(s('type.num.num',X37),s('type.num.num',X37)),X38) | ~sP4('const.divides.divides_2'(s('type.num.num',X37),s('type.num.num',X37)),X39,X38)) )),
  inference(subsumption_resolution,[],[f3201,f321])).
fof(f3201,plain,(
  ( ! [X39,X37,X38] : (~p(s(bool,'T_0')) | sP7(X38,X39,'const.divides.divides_2'(s('type.num.num',X37),s('type.num.num',X37))) | ~sP6(X38,'const.divides.divides_2'(s('type.num.num',X37),s('type.num.num',X37)),X39) | ~sP5(X39,'const.divides.divides_2'(s('type.num.num',X37),s('type.num.num',X37)),X38) | ~sP4('const.divides.divides_2'(s('type.num.num',X37),s('type.num.num',X37)),X39,X38)) )),
  inference(superposition,[],[f483,f670])).
fof(f3237,plain,(
  ( ! [X35,X36,X34] : (p(s(bool,X35)) | ~sP3(X35,'const.divides.divides_2'(s('type.num.num',X34),s('type.num.num',X34)),X36)) )),
  inference(subsumption_resolution,[],[f3200,f321])).
fof(f3200,plain,(
  ( ! [X35,X36,X34] : (~p(s(bool,'T_0')) | p(s(bool,X35)) | ~sP3(X35,'const.divides.divides_2'(s('type.num.num',X34),s('type.num.num',X34)),X36)) )),
  inference(superposition,[],[f470,f670])).
fof(f3236,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X32)) | ~sP3(X32,X33,'const.divides.divides_2'(s('type.num.num',X31),s('type.num.num',X31)))) )),
  inference(subsumption_resolution,[],[f3199,f321])).
fof(f3199,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'T_0')) | p(s(bool,X32)) | ~sP3(X32,X33,'const.divides.divides_2'(s('type.num.num',X31),s('type.num.num',X31)))) )),
  inference(superposition,[],[f469,f670])).
fof(f3235,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,X29)) | sP2(X29,X30,'const.divides.divides_2'(s('type.num.num',X28),s('type.num.num',X28)))) )),
  inference(subsumption_resolution,[],[f3198,f321])).
fof(f3198,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | ~p(s(bool,X29)) | sP2(X29,X30,'const.divides.divides_2'(s('type.num.num',X28),s('type.num.num',X28)))) )),
  inference(superposition,[],[f458,f670])).
fof(f3234,plain,(
  ( ! [X21,X20] : (p(s(bool,X21)) | sP1(X21,'const.divides.divides_2'(s('type.num.num',X20),s('type.num.num',X20)))) )),
  inference(subsumption_resolution,[],[f3195,f321])).
fof(f3195,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | p(s(bool,X21)) | sP1(X21,'const.divides.divides_2'(s('type.num.num',X20),s('type.num.num',X20)))) )),
  inference(superposition,[],[f443,f670])).
fof(f3233,plain,(
  ( ! [X19,X18] : (p(s(bool,X19)) | sP1('const.divides.divides_2'(s('type.num.num',X18),s('type.num.num',X18)),X19)) )),
  inference(subsumption_resolution,[],[f3194,f321])).
fof(f3194,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | p(s(bool,X19)) | sP1('const.divides.divides_2'(s('type.num.num',X18),s('type.num.num',X18)),X19)) )),
  inference(superposition,[],[f440,f670])).
fof(f3162,plain,(
  ( ! [X0] : (~sP7('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f592,f670,f501])).
fof(f3167,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f592,f670,f501])).
fof(f3169,plain,(
  ( ! [X0] : (sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f321,f670,f499])).
fof(f3039,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) )),
  inference(superposition,[],[f450,f330])).
fof(f3080,plain,(
  ( ! [X21,X19,X20] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X21))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X20) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X19)))) )),
  inference(forward_demodulation,[],[f3035,f330])).
fof(f3035,plain,(
  ( ! [X21,X19,X20] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X21))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X20) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X19)))) )),
  inference(superposition,[],[f450,f332])).
fof(f3078,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3030,f330])).
fof(f3030,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f450,f330])).
fof(f2311,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f407,f333])).
fof(f2310,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f407,f330])).
fof(f2193,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7)))) )),
  inference(superposition,[],[f406,f334])).
fof(f2192,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X6)))) )),
  inference(superposition,[],[f406,f332])).
fof(f2259,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f2188,f330])).
fof(f2188,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f406,f330])).
fof(f2059,plain,(
  ( ! [X0] : (~sP5('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f618,f608,f1702,f485])).
fof(f1987,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))))))) )),
  inference(forward_demodulation,[],[f1961,f334])).
fof(f1961,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f334,f419])).
fof(f1898,plain,(
  ( ! [X0] : (sP7('F_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f645,f615,f611,f592,f484])).
fof(f1899,plain,(
  ( ! [X0] : (sP7('F_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f658,f615,f611,f592,f484])).
fof(f1868,plain,(
  ( ! [X4,X2,X3] : (sP7(X3,X4,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))) | ~sP6(X3,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X4) | ~sP5(X4,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X3)) )),
  inference(subsumption_resolution,[],[f1867,f645])).
fof(f1867,plain,(
  ( ! [X4,X2,X3] : (sP7(X3,X4,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))) | ~sP6(X3,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X4) | ~sP5(X4,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X3) | ~sP4('const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X4,X3)) )),
  inference(subsumption_resolution,[],[f1862,f321])).
fof(f1862,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'T_0')) | sP7(X3,X4,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))) | ~sP6(X3,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X4) | ~sP5(X4,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X3) | ~sP4('const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X4,X3)) )),
  inference(superposition,[],[f483,f669])).
fof(f1794,plain,(
  sP7('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f620,f612,f608,f321,f483])).
fof(f1798,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f643,f642,f608,f321,f483])).
fof(f1803,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f656,f655,f608,f321,f483])).
fof(f1825,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f643,f642,f641,f321,f483])).
fof(f1831,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f656,f655,f641,f321,f483])).
fof(f1835,plain,(
  ( ! [X0] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f616,f612,f654,f321,f483])).
fof(f1843,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f643,f642,f654,f321,f483])).
fof(f1849,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f656,f655,f654,f321,f483])).
fof(f1857,plain,(
  ( ! [X0] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f644,f641,f1700,f321,f483])).
fof(f1859,plain,(
  ~sP5('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','F_0')),
  inference(unit_resulting_resolution,[],[f620,f654,f1700,f321,f483])).
fof(f1778,plain,(
  ( ! [X76,X77,X75] : (~sP10('const.divides.divides_2'(s('type.num.num',X75),s('type.num.num','const.num.|48|_0')),X76,X77) | sP11('const.divides.divides_2'(s('type.num.num',X75),s('type.num.num','const.num.|48|_0')),X76,X77)) )),
  inference(subsumption_resolution,[],[f1743,f321])).
fof(f1743,plain,(
  ( ! [X76,X77,X75] : (~p(s(bool,'T_0')) | ~sP10('const.divides.divides_2'(s('type.num.num',X75),s('type.num.num','const.num.|48|_0')),X76,X77) | sP11('const.divides.divides_2'(s('type.num.num',X75),s('type.num.num','const.num.|48|_0')),X76,X77)) )),
  inference(superposition,[],[f574,f669])).
fof(f1777,plain,(
  ( ! [X74,X72,X73] : (~sP12('const.divides.divides_2'(s('type.num.num',X72),s('type.num.num','const.num.|48|_0')),X73,X74) | sP13('const.divides.divides_2'(s('type.num.num',X72),s('type.num.num','const.num.|48|_0')),X73,X74)) )),
  inference(subsumption_resolution,[],[f1742,f321])).
fof(f1742,plain,(
  ( ! [X74,X72,X73] : (~p(s(bool,'T_0')) | ~sP12('const.divides.divides_2'(s('type.num.num',X72),s('type.num.num','const.num.|48|_0')),X73,X74) | sP13('const.divides.divides_2'(s('type.num.num',X72),s('type.num.num','const.num.|48|_0')),X73,X74)) )),
  inference(superposition,[],[f573,f669])).
fof(f1776,plain,(
  ( ! [X70,X71,X69] : (~p(s(bool,X70)) | p(s(bool,X71)) | ~sP13('const.divides.divides_2'(s('type.num.num',X69),s('type.num.num','const.num.|48|_0')),X71,X70)) )),
  inference(subsumption_resolution,[],[f1741,f321])).
fof(f1741,plain,(
  ( ! [X70,X71,X69] : (~p(s(bool,'T_0')) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP13('const.divides.divides_2'(s('type.num.num',X69),s('type.num.num','const.num.|48|_0')),X71,X70)) )),
  inference(superposition,[],[f550,f669])).
fof(f1775,plain,(
  ( ! [X68,X66,X67] : (~p(s(bool,X67)) | sP13('const.divides.divides_2'(s('type.num.num',X66),s('type.num.num','const.num.|48|_0')),X67,X68)) )),
  inference(subsumption_resolution,[],[f1740,f321])).
fof(f1740,plain,(
  ( ! [X68,X66,X67] : (~p(s(bool,'T_0')) | ~p(s(bool,X67)) | sP13('const.divides.divides_2'(s('type.num.num',X66),s('type.num.num','const.num.|48|_0')),X67,X68)) )),
  inference(superposition,[],[f549,f669])).
fof(f1774,plain,(
  ( ! [X64,X65,X63] : (p(s(bool,X64)) | sP13('const.divides.divides_2'(s('type.num.num',X63),s('type.num.num','const.num.|48|_0')),X65,X64)) )),
  inference(subsumption_resolution,[],[f1739,f321])).
fof(f1739,plain,(
  ( ! [X64,X65,X63] : (~p(s(bool,'T_0')) | p(s(bool,X64)) | sP13('const.divides.divides_2'(s('type.num.num',X63),s('type.num.num','const.num.|48|_0')),X65,X64)) )),
  inference(superposition,[],[f548,f669])).
fof(f1773,plain,(
  ( ! [X61,X62,X60] : (p(s(bool,X61)) | ~p(s(bool,X62)) | ~sP12(X62,X61,'const.divides.divides_2'(s('type.num.num',X60),s('type.num.num','const.num.|48|_0')))) )),
  inference(subsumption_resolution,[],[f1738,f321])).
fof(f1738,plain,(
  ( ! [X61,X62,X60] : (~p(s(bool,'T_0')) | p(s(bool,X61)) | ~p(s(bool,X62)) | ~sP12(X62,X61,'const.divides.divides_2'(s('type.num.num',X60),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f543,f669])).
fof(f1772,plain,(
  ( ! [X59,X57,X58] : (p(s(bool,X58)) | p(s(bool,X59)) | ~sP11('const.divides.divides_2'(s('type.num.num',X57),s('type.num.num','const.num.|48|_0')),X59,X58)) )),
  inference(subsumption_resolution,[],[f1737,f321])).
fof(f1737,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | p(s(bool,X58)) | p(s(bool,X59)) | ~sP11('const.divides.divides_2'(s('type.num.num',X57),s('type.num.num','const.num.|48|_0')),X59,X58)) )),
  inference(superposition,[],[f533,f669])).
fof(f1771,plain,(
  ( ! [X54,X56,X55] : (~p(s(bool,X55)) | sP11('const.divides.divides_2'(s('type.num.num',X54),s('type.num.num','const.num.|48|_0')),X55,X56)) )),
  inference(subsumption_resolution,[],[f1736,f321])).
fof(f1736,plain,(
  ( ! [X54,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X55)) | sP11('const.divides.divides_2'(s('type.num.num',X54),s('type.num.num','const.num.|48|_0')),X55,X56)) )),
  inference(superposition,[],[f532,f669])).
fof(f1770,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,X52)) | sP11('const.divides.divides_2'(s('type.num.num',X51),s('type.num.num','const.num.|48|_0')),X53,X52)) )),
  inference(subsumption_resolution,[],[f1735,f321])).
fof(f1735,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'T_0')) | ~p(s(bool,X52)) | sP11('const.divides.divides_2'(s('type.num.num',X51),s('type.num.num','const.num.|48|_0')),X53,X52)) )),
  inference(superposition,[],[f531,f669])).
fof(f1769,plain,(
  ( ! [X50,X48,X49] : (p(s(bool,X49)) | p(s(bool,X50)) | ~sP10('const.divides.divides_2'(s('type.num.num',X48),s('type.num.num','const.num.|48|_0')),X49,X50)) )),
  inference(subsumption_resolution,[],[f1734,f321])).
fof(f1734,plain,(
  ( ! [X50,X48,X49] : (~p(s(bool,'T_0')) | p(s(bool,X49)) | p(s(bool,X50)) | ~sP10('const.divides.divides_2'(s('type.num.num',X48),s('type.num.num','const.num.|48|_0')),X49,X50)) )),
  inference(superposition,[],[f526,f669])).
fof(f1768,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,X46)) | p(s(bool,X47)) | ~sP9(X47,X46,'const.divides.divides_2'(s('type.num.num',X45),s('type.num.num','const.num.|48|_0')))) )),
  inference(subsumption_resolution,[],[f1733,f321])).
fof(f1733,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'T_0')) | ~p(s(bool,X46)) | p(s(bool,X47)) | ~sP9(X47,X46,'const.divides.divides_2'(s('type.num.num',X45),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f518,f669])).
fof(f1767,plain,(
  ( ! [X43,X44,X42] : (~p(s(bool,X43)) | p(s(bool,X44)) | ~sP8(X43,'const.divides.divides_2'(s('type.num.num',X42),s('type.num.num','const.num.|48|_0')),X44)) )),
  inference(subsumption_resolution,[],[f1732,f321])).
fof(f1732,plain,(
  ( ! [X43,X44,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X43)) | p(s(bool,X44)) | ~sP8(X43,'const.divides.divides_2'(s('type.num.num',X42),s('type.num.num','const.num.|48|_0')),X44)) )),
  inference(superposition,[],[f509,f669])).
fof(f1766,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,X40)) | p(s(bool,X41)) | ~sP5(X40,'const.divides.divides_2'(s('type.num.num',X39),s('type.num.num','const.num.|48|_0')),X41)) )),
  inference(subsumption_resolution,[],[f1731,f321])).
fof(f1731,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X40)) | p(s(bool,X41)) | ~sP5(X40,'const.divides.divides_2'(s('type.num.num',X39),s('type.num.num','const.num.|48|_0')),X41)) )),
  inference(superposition,[],[f490,f669])).
fof(f1765,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP6(X37,'const.divides.divides_2'(s('type.num.num',X36),s('type.num.num','const.num.|48|_0')),X38)) )),
  inference(subsumption_resolution,[],[f1730,f321])).
fof(f1730,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP6(X37,'const.divides.divides_2'(s('type.num.num',X36),s('type.num.num','const.num.|48|_0')),X38)) )),
  inference(superposition,[],[f486,f669])).
fof(f1764,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X34)) | ~sP3(X34,'const.divides.divides_2'(s('type.num.num',X33),s('type.num.num','const.num.|48|_0')),X35)) )),
  inference(subsumption_resolution,[],[f1729,f321])).
fof(f1729,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'T_0')) | p(s(bool,X34)) | ~sP3(X34,'const.divides.divides_2'(s('type.num.num',X33),s('type.num.num','const.num.|48|_0')),X35)) )),
  inference(superposition,[],[f470,f669])).
fof(f1763,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X31)) | ~sP3(X31,X32,'const.divides.divides_2'(s('type.num.num',X30),s('type.num.num','const.num.|48|_0')))) )),
  inference(subsumption_resolution,[],[f1728,f321])).
fof(f1728,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'T_0')) | p(s(bool,X31)) | ~sP3(X31,X32,'const.divides.divides_2'(s('type.num.num',X30),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f469,f669])).
fof(f1762,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,X28)) | sP2(X28,X29,'const.divides.divides_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')))) )),
  inference(subsumption_resolution,[],[f1727,f321])).
fof(f1727,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | ~p(s(bool,X28)) | sP2(X28,X29,'const.divides.divides_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f458,f669])).
fof(f1761,plain,(
  ( ! [X19,X20] : (p(s(bool,X20)) | sP1(X20,'const.divides.divides_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')))) )),
  inference(subsumption_resolution,[],[f1724,f321])).
fof(f1724,plain,(
  ( ! [X19,X20] : (~p(s(bool,'T_0')) | p(s(bool,X20)) | sP1(X20,'const.divides.divides_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f443,f669])).
fof(f1760,plain,(
  ( ! [X17,X18] : (p(s(bool,X18)) | sP1('const.divides.divides_2'(s('type.num.num',X17),s('type.num.num','const.num.|48|_0')),X18)) )),
  inference(subsumption_resolution,[],[f1723,f321])).
fof(f1723,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | p(s(bool,X18)) | sP1('const.divides.divides_2'(s('type.num.num',X17),s('type.num.num','const.num.|48|_0')),X18)) )),
  inference(superposition,[],[f440,f669])).
fof(f1700,plain,(
  ( ! [X0] : (~sP7('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f592,f669,f501])).
fof(f1701,plain,(
  ( ! [X0] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f669,f499])).
fof(f1702,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f592,f669,f501])).
fof(f1703,plain,(
  ( ! [X0] : (sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f321,f669,f499])).
fof(f1442,plain,(
  ~sP13('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f1431,f538])).
fof(f1431,plain,(
  ~sP12('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f321,f592,f321,f543])).
fof(f1416,plain,(
  sP13('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f634,f321,f592,f542])).
fof(f1317,plain,(
  ~sP11('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f1303,f521])).
fof(f1303,plain,(
  ~sP10('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f592,f592,f321,f526])).
fof(f1285,plain,(
  sP11('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f630,f592,f592,f525])).
fof(f1211,plain,(
  ~sP9('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f1200,f502])).
fof(f1200,plain,(
  ~sP8('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f592,f321,f321,f509])).
fof(f1186,plain,(
  sP9('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f622,f321,f321,f505])).
fof(f1188,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f646,f321,f321,f505])).
fof(f1189,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f659,f321,f321,f505])).
fof(f1182,plain,(
  ~sP7('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f1165,f479])).
fof(f1165,plain,(
  ~sP4('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f592,f592,f592,f494])).
fof(f1155,plain,(
  ~sP7('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f1144,f480])).
fof(f1144,plain,(
  ~sP5('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f592,f321,f321,f490])).
fof(f1122,plain,(
  ~sP6('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f592,f321,f321,f486])).
fof(f1089,plain,(
  ~sP7('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f321,f665,f500])).
fof(f1070,plain,(
  sP7('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f592,f665,f498])).
fof(f1047,plain,(
  ( ! [X4,X3] : (p(s(bool,X4)) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X3)) )),
  inference(subsumption_resolution,[],[f1043,f592])).
fof(f1043,plain,(
  ( ! [X4,X3] : (p(s(bool,'F_0')) | p(s(bool,X4)) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f414,f336])).
fof(f859,plain,(
  ( ! [X0,X1] : (sP11('T_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f647,f321,f574])).
fof(f860,plain,(
  ( ! [X0,X1] : (sP11('T_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f660,f321,f574])).
fof(f863,plain,(
  ( ! [X0,X1] : (sP11('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f648,f321,f574])).
fof(f864,plain,(
  ( ! [X0,X1] : (sP11('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f661,f321,f574])).
fof(f844,plain,(
  ( ! [X0,X1] : (sP13('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f321,f662,f573])).
fof(f839,plain,(
  ( ! [X0,X1] : (sP13('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f649,f321,f573])).
fof(f823,plain,(
  ( ! [X0] : (sP13('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f321,f321,f549])).
fof(f815,plain,(
  ( ! [X0] : (sP13('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f321,f548])).
fof(f812,plain,(
  ( ! [X0] : (~sP13('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f321,f592,f537])).
fof(f811,plain,(
  ( ! [X0] : (~sP13('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f592,f536])).
fof(f805,plain,(
  ( ! [X0] : (sP11('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f321,f321,f532])).
fof(f797,plain,(
  ( ! [X0] : (sP11('T_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f321,f531])).
fof(f794,plain,(
  ( ! [X0] : (~sP11('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f321,f592,f520])).
fof(f793,plain,(
  ( ! [X0] : (~sP11('F_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f519])).
fof(f785,plain,(
  ( ! [X0] : (sP9('F_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f592,f592,f514])).
fof(f775,plain,(
  ( ! [X0] : (sP9('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f592,f513])).
fof(f772,plain,(
  ( ! [X0] : (~sP9('T_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f321,f592,f504])).
fof(f771,plain,(
  ( ! [X0] : (~sP9('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f321,f592,f503])).
fof(f768,plain,(
  ( ! [X0] : (sP3(X0,'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f592,f471])).
fof(f761,plain,(
  ( ! [X0] : (~sP3('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f592,f321,f470])).
fof(f754,plain,(
  ( ! [X0] : (~sP3('F_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f592,f321,f469])).
fof(f747,plain,(
  ( ! [X0] : (sP2('T_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f321,f458])).
fof(f714,plain,(
  ~sP0('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f592,f592,f594])).
fof(f679,plain,(
  ~sP1('T_0','T_0')),
  inference(unit_resulting_resolution,[],[f321,f321,f439])).
fof(f678,plain,(
  ~sP1('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f592,f592,f438])).
fof(f669,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f328,f344])).
fof(f670,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f329,f344])).
fof(f652,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f329,f424])).
fof(f653,plain,(
  ( ! [X0,X1] : (sP0('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f329,f425])).
fof(f654,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f329,f487])).
fof(f658,plain,(
  ( ! [X2,X0,X1] : (sP4('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f329,f497])).
fof(f659,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f329,f510])).
fof(f660,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f329,f527])).
fof(f661,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f329,f528])).
fof(f662,plain,(
  ( ! [X2,X0,X1] : (sP12(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f329,f545])).
fof(f663,plain,(
  ( ! [X2,X0,X1] : (sP3('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f329,f576])).
fof(f664,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f329,f577])).
fof(f639,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f328,f424])).
fof(f640,plain,(
  ( ! [X0,X1] : (sP0('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f328,f425])).
fof(f641,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f328,f487])).
fof(f645,plain,(
  ( ! [X2,X0,X1] : (sP4('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f328,f497])).
fof(f646,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f328,f510])).
fof(f647,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f328,f527])).
fof(f648,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f328,f528])).
fof(f649,plain,(
  ( ! [X2,X0,X1] : (sP12(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f328,f545])).
fof(f650,plain,(
  ( ! [X2,X0,X1] : (sP3('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f328,f576])).
fof(f651,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f328,f577])).
fof(f637,plain,(
  ( ! [X0,X1] : (sP2(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f321,f577])).
fof(f635,plain,(
  ( ! [X0,X1] : (sP3('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f321,f576])).
fof(f634,plain,(
  ( ! [X0,X1] : (sP12('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f592,f546])).
fof(f632,plain,(
  ( ! [X0,X1] : (sP12(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f321,f545])).
fof(f631,plain,(
  ( ! [X0,X1] : (sP12(X0,X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f592,f544])).
fof(f630,plain,(
  ( ! [X0,X1] : (sP10('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f592,f529])).
fof(f628,plain,(
  ( ! [X0,X1] : (sP10(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f321,f528])).
fof(f626,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f527])).
fof(f625,plain,(
  ( ! [X0,X1] : (sP8('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f592,f512])).
fof(f624,plain,(
  ( ! [X0,X1] : (sP8(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f592,f511])).
fof(f622,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f510])).
fof(f605,plain,(
  ( ! [X0] : (sP0('T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f321,f425])).
fof(f604,plain,(
  ( ! [X0] : (sP0(X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f321,f424])).
fof(f547,plain,(
  ( ! [X2,X0,X1] : (sP13(X2,X0,X1) | p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f315])).
fof(f315,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP13(X2,X0,X1)) & (~sP13(X2,X0,X1) | ((~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f314])).
fof(f314,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP13(X2,X0,X1)) & (~sP13(X2,X0,X1) | ((~p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f205])).
fof(f205,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> sP13(X2,X0,X1))),
  inference(definition_folding,[],[f181,f204,f203])).
fof(f203,plain,(
  ! [X2,X0,X1] : (sP12(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP12])])).
fof(f204,plain,(
  ! [X2,X0,X1] : (sP13(X2,X0,X1) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP12(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP13])])).
fof(f181,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f150])).
fof(f150,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X26,X25,X8] : ((p(s(bool,X8)) <=> (p(s(bool,X25)) => p(s(bool,X26)))) <=> ((p(s(bool,X8)) | p(s(bool,X25))) & (p(s(bool,X8)) | ~p(s(bool,X26))) & (~p(s(bool,X25)) | p(s(bool,X26)) | ~p(s(bool,X8)))))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.sat.sat_27_prove_ltb')).
fof(f548,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | sP13(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f315])).
fof(f549,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP13(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f315])).
fof(f550,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~sP13(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f315])).
fof(f543,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~sP12(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f313])).
fof(f313,plain,(
  ! [X0,X1,X2] : ((~sP12(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP12(X0,X1,X2)))),
  inference(rectify,[],[f312])).
fof(f312,plain,(
  ! [X2,X0,X1] : ((~sP12(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP12(X2,X0,X1)))),
  inference(flattening,[],[f311])).
fof(f311,plain,(
  ! [X2,X0,X1] : ((~sP12(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP12(X2,X0,X1)))),
  inference(nnf_transformation,[],[f203])).
fof(f544,plain,(
  ( ! [X2,X0,X1] : (sP12(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f313])).
fof(f545,plain,(
  ( ! [X2,X0,X1] : (sP12(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f313])).
fof(f546,plain,(
  ( ! [X2,X0,X1] : (sP12(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f313])).
fof(f536,plain,(
  ( ! [X2,X0,X1] : (~sP13(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f310])).
fof(f310,plain,(
  ! [X0,X1,X2] : ((~sP13(X0,X1,X2) | ((p(s(bool,X0)) | p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP12(X0,X1,X2))) & ((~p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP12(X0,X1,X2) | sP13(X0,X1,X2)))),
  inference(rectify,[],[f309])).
fof(f309,plain,(
  ! [X2,X0,X1] : ((~sP13(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP12(X2,X0,X1))) & ((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP12(X2,X0,X1) | sP13(X2,X0,X1)))),
  inference(flattening,[],[f308])).
fof(f308,plain,(
  ! [X2,X0,X1] : ((~sP13(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP12(X2,X0,X1))) & (((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP12(X2,X0,X1)) | sP13(X2,X0,X1)))),
  inference(nnf_transformation,[],[f204])).
fof(f537,plain,(
  ( ! [X2,X0,X1] : (~sP13(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f310])).
fof(f538,plain,(
  ( ! [X2,X0,X1] : (~sP13(X0,X1,X2) | sP12(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f310])).
fof(f573,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP12(X0,X1,X2) | sP13(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f539])).
fof(f539,plain,(
  ( ! [X2,X0,X1] : (sP13(X0,X1,X2) | ~sP12(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f310])).
fof(f540,plain,(
  ( ! [X2,X0,X1] : (sP13(X0,X1,X2) | ~sP12(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f310])).
fof(f541,plain,(
  ( ! [X2,X0,X1] : (sP13(X0,X1,X2) | ~sP12(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f310])).
fof(f542,plain,(
  ( ! [X2,X0,X1] : (sP13(X0,X1,X2) | ~sP12(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f310])).
fof(f530,plain,(
  ( ! [X2,X0,X1] : (sP11(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f307])).
fof(f307,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | ((~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f306])).
fof(f306,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f202])).
fof(f202,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> sP11(X2,X0,X1))),
  inference(definition_folding,[],[f149,f201,f200])).
fof(f200,plain,(
  ! [X2,X0,X1] : (sP10(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP10])])).
fof(f201,plain,(
  ! [X2,X0,X1] : (sP11(X2,X0,X1) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP11])])).
fof(f149,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f148])).
fof(f148,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X26,X25,X8] : ((p(s(bool,X8)) <=> (p(s(bool,X25)) | p(s(bool,X26)))) <=> ((p(s(bool,X8)) | ~p(s(bool,X25))) & (p(s(bool,X8)) | ~p(s(bool,X26))) & (p(s(bool,X25)) | p(s(bool,X26)) | ~p(s(bool,X8)))))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.sat.sat_25_prove_ltb')).
fof(f531,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f307])).
fof(f532,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f307])).
fof(f533,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)) | ~sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f307])).
fof(f526,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f305])).
fof(f305,plain,(
  ! [X0,X1,X2] : ((~sP10(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP10(X0,X1,X2)))),
  inference(rectify,[],[f304])).
fof(f304,plain,(
  ! [X2,X0,X1] : ((~sP10(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP10(X2,X0,X1)))),
  inference(flattening,[],[f303])).
fof(f303,plain,(
  ! [X2,X0,X1] : ((~sP10(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP10(X2,X0,X1)))),
  inference(nnf_transformation,[],[f200])).
fof(f527,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f305])).
fof(f528,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f305])).
fof(f529,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f305])).
fof(f519,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f302])).
fof(f302,plain,(
  ! [X0,X1,X2] : ((~sP11(X0,X1,X2) | ((p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP10(X0,X1,X2))) & ((~p(s(bool,X0)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP10(X0,X1,X2) | sP11(X0,X1,X2)))),
  inference(rectify,[],[f301])).
fof(f301,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1))) & ((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP10(X2,X0,X1) | sP11(X2,X0,X1)))),
  inference(flattening,[],[f300])).
fof(f300,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1))) & (((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP10(X2,X0,X1)) | sP11(X2,X0,X1)))),
  inference(nnf_transformation,[],[f201])).
fof(f520,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f302])).
fof(f521,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f302])).
fof(f574,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP10(X0,X1,X2) | sP11(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f522])).
fof(f522,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f302])).
fof(f523,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | ~p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f302])).
fof(f524,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f302])).
fof(f525,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f302])).
fof(f513,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f299])).
fof(f299,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(flattening,[],[f298])).
fof(f298,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) | ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & ((~p(s(bool,X1)) | ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f199])).
fof(f199,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> sP9(X2,X0,X1))),
  inference(definition_folding,[],[f147,f198,f197])).
fof(f197,plain,(
  ! [X0,X1,X2] : (sP8(X0,X1,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f198,plain,(
  ! [X2,X0,X1] : (sP9(X2,X0,X1) <=> (sP8(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP9])])).
fof(f147,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f146])).
fof(f146,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f59])).
fof(f59,axiom,(
  ! [X26,X25,X8] : ((p(s(bool,X8)) <=> (p(s(bool,X25)) & p(s(bool,X26)))) <=> ((p(s(bool,X8)) | ~p(s(bool,X25)) | ~p(s(bool,X26))) & (p(s(bool,X25)) | ~p(s(bool,X8))) & (p(s(bool,X26)) | ~p(s(bool,X8)))))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.sat.sat_23_prove_ltb')).
fof(f514,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f299])).
fof(f515,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f299])).
fof(f518,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f299])).
fof(f509,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP8(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f297])).
fof(f297,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(flattening,[],[f296])).
fof(f296,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(nnf_transformation,[],[f197])).
fof(f510,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f297])).
fof(f511,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f297])).
fof(f512,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f297])).
fof(f502,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | sP8(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f295])).
fof(f295,plain,(
  ! [X0,X1,X2] : ((~sP9(X0,X1,X2) | (sP8(X1,X2,X0) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP8(X1,X2,X0) | (~p(s(bool,X2)) & p(s(bool,X0))) | (~p(s(bool,X1)) & p(s(bool,X0))) | sP9(X0,X1,X2)))),
  inference(rectify,[],[f294])).
fof(f294,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | (sP8(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & (~sP8(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2))) | sP9(X2,X0,X1)))),
  inference(flattening,[],[f293])).
fof(f293,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | (sP8(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & ((~sP8(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2)))) | sP9(X2,X0,X1)))),
  inference(nnf_transformation,[],[f198])).
fof(f503,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f295])).
fof(f504,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f295])).
fof(f505,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP8(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f295])).
fof(f575,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | p(s(bool,X0)) | ~sP8(X1,X2,X0)) )),
  inference(duplicate_literal_removal,[],[f508])).
fof(f508,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X0)) | ~sP8(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f295])).
fof(f499,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f292])).
fof(f471,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f278])).
fof(f577,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(duplicate_literal_removal,[],[f455])).
fof(f455,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f271])).
fof(f438,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f264])).
fof(f594,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f423,f592])).
fof(f423,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f257])).
fof(f257,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(flattening,[],[f256])).
fof(f256,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f184])).
fof(f184,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f424,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f257])).
fof(f425,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f257])).
fof(f414,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f250])).
fof(f22815,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f18008])).
fof(f18008,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(subsumption_resolution,[],[f17918,f321])).
fof(f17918,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f5192,f959])).
fof(f20822,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5267,f18124,f499])).
fof(f24610,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20823,f23926])).
fof(f20823,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f7210,f18124,f499])).
fof(f24609,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20824,f23926])).
fof(f20824,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f1700,f18124,f499])).
fof(f24608,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20825,f23926])).
fof(f20825,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f1098,f18124,f499])).
fof(f24606,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20827,f23926])).
fof(f20827,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f1702,f18124,f499])).
fof(f24605,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20828,f23926])).
fof(f20828,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f1100,f18124,f499])).
fof(f24603,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f24602,f24586])).
fof(f24586,plain,(
  ( ! [X0] : (~sP7(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl5 | $spl82)),
  inference(forward_demodulation,[],[f20883,f21703])).
fof(f20883,plain,(
  ( ! [X0] : (~sP7(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0')) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5218,f18124,f500])).
fof(f24602,plain,(
  ( ! [X0] : (sP7(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f24601,f330])).
fof(f24601,plain,(
  ( ! [X0] : (sP7(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f20838,f21703])).
fof(f20838,plain,(
  ( ! [X0] : (sP7(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0')) ) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f668,f18124,f499])).
fof(f24599,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f24598,f24587])).
fof(f24587,plain,(
  ( ! [X0] : (~sP7(X0,'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl82)),
  inference(forward_demodulation,[],[f20879,f21703])).
fof(f20879,plain,(
  ( ! [X0] : (~sP7(X0,'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5218,f18124,f500])).
fof(f24598,plain,(
  ( ! [X0] : (sP7(X0,'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f24597,f330])).
fof(f24597,plain,(
  ( ! [X0] : (sP7(X0,'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f20846,f21703])).
fof(f20846,plain,(
  ( ! [X0] : (sP7(X0,'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f668,f18124,f499])).
fof(f24585,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20895,f21117])).
fof(f21117,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f18124,f18124,f515])).
fof(f20895,plain,(
  ( ! [X0,X1] : (~sP9(X0,X1,'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124,f503])).
fof(f24584,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20907,f21117])).
fof(f20907,plain,(
  ( ! [X0,X1] : (~sP9(X0,'F_0',X1)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124,f504])).
fof(f24583,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20909,f18124])).
fof(f20909,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f624,f771,f18124,f505])).
fof(f24582,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20910,f18124])).
fof(f20910,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5385,f5378,f18124,f505])).
fof(f5378,plain,(
  ( ! [X0] : (~sP9('T_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5191,f503])).
fof(f5385,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f511])).
fof(f24581,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20911,f18124])).
fof(f20911,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f625,f772,f18124,f505])).
fof(f24580,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20912,f18124])).
fof(f20912,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f622,f772,f18124,f505])).
fof(f24579,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20913,f18124])).
fof(f20913,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f624,f772,f18124,f505])).
fof(f24578,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20914,f18124])).
fof(f20914,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5385,f772,f18124,f505])).
fof(f24577,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20915,f18124])).
fof(f20915,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5386,f5380,f18124,f505])).
fof(f5380,plain,(
  ( ! [X0] : (~sP9('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5191,f504])).
fof(f5386,plain,(
  ( ! [X0,X1] : (sP8('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f512])).
fof(f24576,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20916,f18124])).
fof(f20916,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f622,f5380,f18124,f505])).
fof(f24575,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20917,f18124])).
fof(f20917,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f624,f5380,f18124,f505])).
fof(f24574,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20918,f18124])).
fof(f20918,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5385,f5380,f18124,f505])).
fof(f24573,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20925,f21033])).
fof(f21033,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f510])).
fof(f20925,plain,(
  ~sP8('F_0','T_0','T_0') | $spl82),
  inference(unit_resulting_resolution,[],[f772,f321,f18124,f505])).
fof(f24572,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20927,f21033])).
fof(f20927,plain,(
  ~sP8('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','T_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5380,f321,f18124,f505])).
fof(f24571,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20930,f21033])).
fof(f20930,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5397,f321,f18124,f505])).
fof(f5397,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f321,f321,f5191,f518])).
fof(f24570,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20939,f21033])).
fof(f20939,plain,(
  ( ! [X0] : (~sP8(X0,'F_0','T_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f771,f18124,f18124,f505])).
fof(f24569,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20941,f21033])).
fof(f20941,plain,(
  ( ! [X0] : (~sP8(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0')) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5378,f18124,f18124,f505])).
fof(f24568,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20943,f21033])).
fof(f20943,plain,(
  ( ! [X0] : (~sP8('F_0',X0,'T_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f772,f18124,f18124,f505])).
fof(f24567,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20945,f21033])).
fof(f20945,plain,(
  ( ! [X0] : (~sP8('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'T_0')) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5380,f18124,f18124,f505])).
fof(f24566,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20948,f21033])).
fof(f20948,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5397,f18124,f18124,f505])).
fof(f24565,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20949,f18124])).
fof(f20949,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f624,f771,f18124,f505])).
fof(f24564,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20950,f18124])).
fof(f20950,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f622,f771,f18124,f505])).
fof(f24563,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20951,f18124])).
fof(f20951,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f625,f771,f18124,f505])).
fof(f24562,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20952,f18124])).
fof(f20952,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5386,f771,f18124,f505])).
fof(f24561,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20953,f18124])).
fof(f20953,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5385,f5378,f18124,f505])).
fof(f24560,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20954,f18124])).
fof(f20954,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f622,f5378,f18124,f505])).
fof(f24559,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20955,f18124])).
fof(f20955,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f625,f5378,f18124,f505])).
fof(f24558,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20956,f18124])).
fof(f20956,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5386,f5378,f18124,f505])).
fof(f24557,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20957,f18124])).
fof(f20957,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f625,f772,f18124,f505])).
fof(f24556,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20958,f18124])).
fof(f20958,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5386,f5380,f18124,f505])).
fof(f24555,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20965,f21033])).
fof(f20965,plain,(
  ~sP8('T_0','F_0','T_0') | $spl82),
  inference(unit_resulting_resolution,[],[f771,f321,f18124,f505])).
fof(f24554,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20967,f21033])).
fof(f20967,plain,(
  ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5378,f321,f18124,f505])).
fof(f24553,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20970,f21033])).
fof(f20970,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5397,f321,f18124,f505])).
fof(f24552,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20979,f21033])).
fof(f20979,plain,(
  ( ! [X0] : (~sP8(X0,'F_0','T_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f771,f18124,f18124,f505])).
fof(f24551,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20981,f21033])).
fof(f20981,plain,(
  ( ! [X0] : (~sP8(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0')) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5378,f18124,f18124,f505])).
fof(f24550,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20983,f21033])).
fof(f20983,plain,(
  ( ! [X0] : (~sP8('F_0',X0,'T_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f772,f18124,f18124,f505])).
fof(f24549,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20985,f21033])).
fof(f20985,plain,(
  ( ! [X0] : (~sP8('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'T_0')) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5380,f18124,f18124,f505])).
fof(f24548,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20988,f21033])).
fof(f20988,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5397,f18124,f18124,f505])).
fof(f24547,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20989,f18124])).
fof(f20989,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f624,f592,f18124,f509])).
fof(f24546,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20990,f18124])).
fof(f20990,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5385,f592,f18124,f509])).
fof(f24545,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20991,f18124])).
fof(f20991,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f625,f592,f18124,f509])).
fof(f24544,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f20992,f18124])).
fof(f20992,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5386,f592,f18124,f509])).
fof(f24543,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f20999,f21033])).
fof(f20999,plain,(
  ( ! [X0] : (~sP8(X0,'T_0','F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f321,f18124,f509])).
fof(f24542,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21009,f21033])).
fof(f21009,plain,(
  ( ! [X0,X1] : (~sP8(X0,X1,'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124,f18124,f509])).
fof(f24541,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21011,f18124])).
fof(f21011,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f624,f592,f18124,f509])).
fof(f24540,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21012,f18124])).
fof(f21012,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5385,f592,f18124,f509])).
fof(f24539,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21013,f18124])).
fof(f21013,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f625,f592,f18124,f509])).
fof(f24538,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21014,f18124])).
fof(f21014,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5386,f592,f18124,f509])).
fof(f24537,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21021,f21033])).
fof(f21021,plain,(
  ( ! [X0] : (~sP8('T_0',X0,'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f321,f18124,f509])).
fof(f24536,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21031,f21033])).
fof(f21031,plain,(
  ( ! [X0,X1] : (~sP8(X0,X1,'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124,f18124,f509])).
fof(f24535,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21035,f18124])).
fof(f21035,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f771,f321,f18124,f515])).
fof(f24534,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21036,f18124])).
fof(f21036,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5378,f321,f18124,f515])).
fof(f24533,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21037,f18124])).
fof(f21037,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f772,f321,f18124,f515])).
fof(f24532,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21038,f18124])).
fof(f21038,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5380,f321,f18124,f515])).
fof(f24531,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21039,f18124])).
fof(f21039,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f771,f18124,f18124,f515])).
fof(f24530,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21040,f18124])).
fof(f21040,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5378,f18124,f18124,f515])).
fof(f24529,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21041,f18124])).
fof(f21041,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f772,f18124,f18124,f515])).
fof(f24528,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21042,f18124])).
fof(f21042,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5380,f18124,f18124,f515])).
fof(f24527,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21043,f321])).
fof(f21043,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1211,f18124,f18124,f515])).
fof(f24526,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21044,f321])).
fof(f21044,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5397,f18124,f18124,f515])).
fof(f24525,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21045,f321])).
fof(f21045,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f772,f321,f18124,f515])).
fof(f24524,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21046,f321])).
fof(f21046,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5380,f321,f18124,f515])).
fof(f24523,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21047,f18124])).
fof(f21047,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1211,f321,f18124,f515])).
fof(f24522,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21048,f18124])).
fof(f21048,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5397,f321,f18124,f515])).
fof(f24521,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21053,f321])).
fof(f21053,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f771,f18124,f18124,f515])).
fof(f24520,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21054,f321])).
fof(f21054,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5378,f18124,f18124,f515])).
fof(f24519,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21055,f321])).
fof(f21055,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f772,f18124,f18124,f515])).
fof(f24518,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21056,f321])).
fof(f21056,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5380,f18124,f18124,f515])).
fof(f24517,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21057,f18124])).
fof(f21057,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1211,f18124,f18124,f515])).
fof(f24516,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21058,f18124])).
fof(f21058,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5397,f18124,f18124,f515])).
fof(f24515,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21063,f18124])).
fof(f21063,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f771,f321,f18124,f515])).
fof(f24514,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21064,f18124])).
fof(f21064,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5378,f321,f18124,f515])).
fof(f24513,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21065,f18124])).
fof(f21065,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f772,f321,f18124,f515])).
fof(f24512,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21066,f18124])).
fof(f21066,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5380,f321,f18124,f515])).
fof(f24511,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21067,f18124])).
fof(f21067,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f771,f18124,f18124,f515])).
fof(f24510,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21068,f18124])).
fof(f21068,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5378,f18124,f18124,f515])).
fof(f24509,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21069,f18124])).
fof(f21069,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f772,f18124,f18124,f515])).
fof(f24508,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21070,f18124])).
fof(f21070,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5380,f18124,f18124,f515])).
fof(f24507,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21071,f321])).
fof(f21071,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1211,f18124,f18124,f515])).
fof(f24506,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21072,f321])).
fof(f21072,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5397,f18124,f18124,f515])).
fof(f24505,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21073,f321])).
fof(f21073,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f771,f321,f18124,f515])).
fof(f24504,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21074,f321])).
fof(f21074,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5378,f321,f18124,f515])).
fof(f24503,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21075,f18124])).
fof(f21075,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1211,f321,f18124,f515])).
fof(f24502,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21076,f18124])).
fof(f21076,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5397,f321,f18124,f515])).
fof(f24501,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21081,f321])).
fof(f21081,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f771,f18124,f18124,f515])).
fof(f24500,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21082,f321])).
fof(f21082,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5378,f18124,f18124,f515])).
fof(f24499,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21083,f321])).
fof(f21083,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f772,f18124,f18124,f515])).
fof(f24498,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21084,f321])).
fof(f21084,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5380,f18124,f18124,f515])).
fof(f24497,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21085,f18124])).
fof(f21085,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1211,f18124,f18124,f515])).
fof(f24496,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21086,f18124])).
fof(f21086,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5397,f18124,f18124,f515])).
fof(f24495,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21091,f18124])).
fof(f21091,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f772,f321,f18124,f515])).
fof(f24494,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21092,f18124])).
fof(f21092,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5380,f321,f18124,f515])).
fof(f24493,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21093,f321])).
fof(f21093,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1211,f321,f18124,f515])).
fof(f24492,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21094,f321])).
fof(f21094,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5397,f321,f18124,f515])).
fof(f24491,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21095,f18124])).
fof(f21095,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f771,f18124,f18124,f515])).
fof(f24490,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21096,f18124])).
fof(f21096,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5378,f18124,f18124,f515])).
fof(f24489,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21097,f18124])).
fof(f21097,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f772,f18124,f18124,f515])).
fof(f24488,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21098,f18124])).
fof(f21098,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5380,f18124,f18124,f515])).
fof(f24487,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21099,f321])).
fof(f21099,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1211,f18124,f18124,f515])).
fof(f24486,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21100,f321])).
fof(f21100,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5397,f18124,f18124,f515])).
fof(f24485,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21101,f18124])).
fof(f21101,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f771,f321,f18124,f515])).
fof(f24484,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21102,f18124])).
fof(f21102,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5378,f321,f18124,f515])).
fof(f24483,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21103,f321])).
fof(f21103,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1211,f321,f18124,f515])).
fof(f24482,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21104,f321])).
fof(f21104,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5397,f321,f18124,f515])).
fof(f24481,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21109,f18124])).
fof(f21109,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f771,f18124,f18124,f515])).
fof(f24480,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21110,f18124])).
fof(f21110,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5378,f18124,f18124,f515])).
fof(f24479,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21111,f18124])).
fof(f21111,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f772,f18124,f18124,f515])).
fof(f24478,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21112,f18124])).
fof(f21112,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5380,f18124,f18124,f515])).
fof(f24477,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21113,f321])).
fof(f21113,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1211,f18124,f18124,f515])).
fof(f24476,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21114,f321])).
fof(f21114,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5397,f18124,f18124,f515])).
fof(f24475,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21119,f18124])).
fof(f21119,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f775,f592,f18124,f518])).
fof(f24474,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21120,f18124])).
fof(f21120,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5387,f592,f18124,f518])).
fof(f5387,plain,(
  ( ! [X0] : (sP9('F_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f513])).
fof(f24473,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21121,f18124])).
fof(f21121,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f785,f592,f18124,f518])).
fof(f24472,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21122,f18124])).
fof(f21122,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5392,f592,f18124,f518])).
fof(f5392,plain,(
  ( ! [X0] : (sP9('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f514])).
fof(f24471,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21144,f18124])).
fof(f21144,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f775,f592,f18124,f518])).
fof(f24470,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21145,f18124])).
fof(f21145,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5387,f592,f18124,f518])).
fof(f24469,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21146,f18124])).
fof(f21146,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f785,f592,f18124,f518])).
fof(f24468,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21147,f18124])).
fof(f21147,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5392,f592,f18124,f518])).
fof(f24467,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21181,f21685])).
fof(f21685,plain,(
  ( ! [X0,X1] : (sP11('F_0',X0,X1)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f630,f18124,f574])).
fof(f21181,plain,(
  ( ! [X0,X1] : (~sP11('F_0',X0,X1)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124,f519])).
fof(f24466,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21195,f21685])).
fof(f21195,plain,(
  ( ! [X0,X1] : (~sP11('F_0',X0,X1)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124,f520])).
fof(f24465,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21217,f21272])).
fof(f21272,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f528])).
fof(f21217,plain,(
  ~sP10('F_0','T_0','F_0') | $spl82),
  inference(unit_resulting_resolution,[],[f794,f592,f18124,f523])).
fof(f24464,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21220,f21272])).
fof(f21220,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5449,f592,f18124,f523])).
fof(f5449,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f321,f5191,f533])).
fof(f24463,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21221,f21272])).
fof(f21221,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','F_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5399,f592,f18124,f523])).
fof(f5399,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5191,f520])).
fof(f24462,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21243,f21272])).
fof(f21243,plain,(
  ~sP10('F_0','F_0','T_0') | $spl82),
  inference(unit_resulting_resolution,[],[f793,f592,f18124,f524])).
fof(f24461,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21245,f21272])).
fof(f21245,plain,(
  ~sP10('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5455,f592,f18124,f524])).
fof(f5455,plain,(
  ~sP11('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f592,f5191,f533])).
fof(f24460,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21246,f21272])).
fof(f21246,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','T_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5398,f592,f18124,f524])).
fof(f5398,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5191,f519])).
fof(f24459,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21268,f21272])).
fof(f21268,plain,(
  ( ! [X0] : (~sP10(X0,'F_0','F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f592,f18124,f526])).
fof(f24458,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21274,f18124])).
fof(f21274,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f793,f18124,f531])).
fof(f24457,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21275,f18124])).
fof(f21275,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f794,f18124,f531])).
fof(f24456,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21276,f321])).
fof(f21276,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1317,f18124,f531])).
fof(f24455,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21277,f321])).
fof(f21277,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5449,f18124,f531])).
fof(f24454,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21278,f321])).
fof(f21278,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5455,f18124,f531])).
fof(f24453,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21279,f18124])).
fof(f21279,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5398,f18124,f531])).
fof(f24452,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21280,f18124])).
fof(f21280,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5399,f18124,f531])).
fof(f24451,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21285,f321])).
fof(f21285,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f793,f18124,f531])).
fof(f24450,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21286,f18124])).
fof(f21286,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f794,f18124,f531])).
fof(f24449,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21287,f18124])).
fof(f21287,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1317,f18124,f531])).
fof(f24448,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21288,f18124])).
fof(f21288,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5449,f18124,f531])).
fof(f24447,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21289,f18124])).
fof(f21289,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5455,f18124,f531])).
fof(f24446,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21290,f321])).
fof(f21290,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5398,f18124,f531])).
fof(f24445,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21291,f18124])).
fof(f21291,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5399,f18124,f531])).
fof(f24444,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21296,f18124])).
fof(f21296,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f793,f18124,f532])).
fof(f24443,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21297,f18124])).
fof(f21297,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f794,f18124,f532])).
fof(f24442,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21298,f321])).
fof(f21298,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1317,f18124,f532])).
fof(f24441,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21299,f321])).
fof(f21299,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5449,f18124,f532])).
fof(f24440,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21300,f321])).
fof(f21300,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5455,f18124,f532])).
fof(f24439,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21301,f18124])).
fof(f21301,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5398,f18124,f532])).
fof(f24438,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21302,f18124])).
fof(f21302,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5399,f18124,f532])).
fof(f24437,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21307,f18124])).
fof(f21307,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f793,f18124,f532])).
fof(f24436,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21308,f321])).
fof(f21308,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f794,f18124,f532])).
fof(f24435,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21309,f18124])).
fof(f21309,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1317,f18124,f532])).
fof(f24434,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21310,f18124])).
fof(f21310,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5449,f18124,f532])).
fof(f24433,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21311,f18124])).
fof(f21311,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5455,f18124,f532])).
fof(f24432,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21312,f18124])).
fof(f21312,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5398,f18124,f532])).
fof(f24431,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21313,f321])).
fof(f21313,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5399,f18124,f532])).
fof(f24430,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21343,f21658])).
fof(f21658,plain,(
  ( ! [X0,X1] : (sP13('F_0',X0,X1)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f634,f18124,f573])).
fof(f21343,plain,(
  ( ! [X0,X1] : (~sP13('F_0',X0,X1)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124,f537])).
fof(f24429,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21345,f18124])).
fof(f21345,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f634,f811,f18124,f540])).
fof(f24428,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21346,f18124])).
fof(f21346,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f634,f5463,f18124,f540])).
fof(f5463,plain,(
  ( ! [X0] : (~sP13('F_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f536])).
fof(f24427,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21347,f18124])).
fof(f21347,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f634,f812,f18124,f540])).
fof(f24426,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21348,f18124])).
fof(f21348,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f632,f812,f18124,f540])).
fof(f24425,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21349,f18124])).
fof(f21349,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f631,f812,f18124,f540])).
fof(f24424,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21350,f18124])).
fof(f21350,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5480,f812,f18124,f540])).
fof(f5480,plain,(
  ( ! [X0,X1] : (sP12(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f544])).
fof(f24423,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21351,f18124])).
fof(f21351,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5481,f5461,f18124,f540])).
fof(f5461,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f536])).
fof(f5481,plain,(
  ( ! [X0,X1] : (sP12('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f546])).
fof(f24422,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21352,f18124])).
fof(f21352,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5481,f5470,f18124,f540])).
fof(f5470,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5191,f537])).
fof(f24421,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21353,f18124])).
fof(f21353,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f632,f5470,f18124,f540])).
fof(f24420,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21354,f18124])).
fof(f21354,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f631,f5470,f18124,f540])).
fof(f24419,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21355,f18124])).
fof(f21355,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5480,f5470,f18124,f540])).
fof(f24418,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21362,f21550])).
fof(f21550,plain,(
  ( ! [X2,X0,X1] : (sP12(X0,X1,X2)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f545])).
fof(f21362,plain,(
  ~sP12('F_0','T_0','T_0') | $spl82),
  inference(unit_resulting_resolution,[],[f812,f321,f18124,f540])).
fof(f24417,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21365,f21550])).
fof(f21365,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5489,f321,f18124,f540])).
fof(f5489,plain,(
  ~sP13('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f321,f321,f5191,f550])).
fof(f24416,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21366,f21550])).
fof(f21366,plain,(
  ~sP12('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','T_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5470,f321,f18124,f540])).
fof(f24415,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21376,f21550])).
fof(f21376,plain,(
  ( ! [X0] : (~sP12('F_0',X0,'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f811,f18124,f18124,f540])).
fof(f24414,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21378,f21550])).
fof(f21378,plain,(
  ( ! [X0] : (~sP12('F_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f18124,f18124,f540])).
fof(f24413,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21380,f21550])).
fof(f21380,plain,(
  ( ! [X0] : (~sP12('F_0','T_0',X0)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f812,f18124,f18124,f540])).
fof(f24412,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21383,f21550])).
fof(f21383,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5489,f18124,f18124,f540])).
fof(f24411,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21384,f21550])).
fof(f21384,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'F_0')) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f18124,f18124,f540])).
fof(f24410,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21386,f21550])).
fof(f21386,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0',X0)) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5470,f18124,f18124,f540])).
fof(f24409,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21388,f18124])).
fof(f21388,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f811,f631,f18124,f540])).
fof(f24408,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21389,f18124])).
fof(f21389,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f812,f631,f18124,f540])).
fof(f24407,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21390,f18124])).
fof(f21390,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f631,f18124,f540])).
fof(f24406,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21391,f18124])).
fof(f21391,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5470,f631,f18124,f540])).
fof(f24405,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21392,f18124])).
fof(f21392,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f5480,f18124,f540])).
fof(f24404,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21393,f18124])).
fof(f21393,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f812,f5480,f18124,f540])).
fof(f24403,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21394,f18124])).
fof(f21394,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5470,f5480,f18124,f540])).
fof(f24402,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21395,f18124])).
fof(f21395,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f812,f632,f18124,f540])).
fof(f24401,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21396,f18124])).
fof(f21396,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f811,f632,f18124,f540])).
fof(f24400,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21397,f18124])).
fof(f21397,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f632,f18124,f540])).
fof(f24399,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21398,f18124])).
fof(f21398,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5470,f632,f18124,f540])).
fof(f24398,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21399,f18124])).
fof(f21399,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f632,f18124,f540])).
fof(f24397,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21400,f18124])).
fof(f21400,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f811,f649,f18124,f540])).
fof(f24396,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21401,f18124])).
fof(f21401,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f649,f18124,f540])).
fof(f24395,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21402,f18124])).
fof(f21402,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f649,f18124,f540])).
fof(f24394,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21403,f18124])).
fof(f21403,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f811,f662,f18124,f540])).
fof(f24393,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21404,f18124])).
fof(f21404,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f662,f18124,f540])).
fof(f24392,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21405,f18124])).
fof(f21405,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f662,f18124,f540])).
fof(f24391,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f21406,f18124])).
fof(f21406,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f811,f633,f18124,f540])).
fof(f633,plain,(
  ( ! [X0,X1] : (sP12(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f586,f545])).
fof(f24390,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21407,f18124])).
fof(f21407,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f633,f18124,f540])).
fof(f24389,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21408,f18124])).
fof(f21408,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl0 | $spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f633,f18124,f540])).
fof(f24388,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21409,f18124])).
fof(f21409,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f811,f634,f18124,f540])).
fof(f24387,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21410,f18124])).
fof(f21410,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f5481,f18124,f540])).
fof(f24386,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21412,f21550])).
fof(f21412,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5489,f321,f18124,f540])).
fof(f24385,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21419,f21550])).
fof(f21419,plain,(
  ( ! [X0] : (~sP12('F_0',X0,'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f811,f18124,f18124,f540])).
fof(f24384,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21420,f21550])).
fof(f21420,plain,(
  ( ! [X0] : (~sP12('F_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f18124,f18124,f540])).
fof(f24383,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21421,f21550])).
fof(f21421,plain,(
  ( ! [X0] : (~sP12('F_0','T_0',X0)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f812,f18124,f18124,f540])).
fof(f24382,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21423,f21550])).
fof(f21423,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5489,f18124,f18124,f540])).
fof(f24381,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21424,f21550])).
fof(f21424,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'F_0')) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f18124,f18124,f540])).
fof(f24380,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21425,f21550])).
fof(f21425,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0',X0)) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5470,f18124,f18124,f540])).
fof(f24379,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21462,f21550])).
fof(f21462,plain,(
  ~sP12('F_0','F_0','F_0') | $spl82),
  inference(unit_resulting_resolution,[],[f811,f592,f18124,f541])).
fof(f24378,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21463,f21550])).
fof(f21463,plain,(
  ~sP12('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f592,f18124,f541])).
fof(f24377,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21465,f21550])).
fof(f21465,plain,(
  ~sP12('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','F_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f592,f18124,f541])).
fof(f24376,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21494,f21550])).
fof(f21494,plain,(
  ~sP12('F_0','F_0','F_0') | $spl82),
  inference(unit_resulting_resolution,[],[f811,f592,f18124,f542])).
fof(f24375,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21495,f21550])).
fof(f21495,plain,(
  ~sP12('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f592,f18124,f542])).
fof(f24374,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21497,f21550])).
fof(f21497,plain,(
  ~sP12('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','F_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f592,f18124,f542])).
fof(f24373,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21520,f18124])).
fof(f21520,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f631,f592,f18124,f543])).
fof(f24372,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21521,f18124])).
fof(f21521,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5480,f592,f18124,f543])).
fof(f24371,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21522,f18124])).
fof(f21522,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f634,f592,f18124,f543])).
fof(f24370,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21523,f18124])).
fof(f21523,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5481,f592,f18124,f543])).
fof(f24369,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21524,f21550])).
fof(f21524,plain,(
  ( ! [X0] : (~sP12(X0,'F_0','T_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f321,f592,f18124,f543])).
fof(f24368,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21526,f21550])).
fof(f21526,plain,(
  ( ! [X0,X1] : (~sP12(X0,'F_0',X1)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f592,f18124,f543])).
fof(f24367,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21542,f18124])).
fof(f21542,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f631,f592,f18124,f543])).
fof(f24366,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21543,f18124])).
fof(f21543,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5480,f592,f18124,f543])).
fof(f24365,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21544,f18124])).
fof(f21544,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f634,f592,f18124,f543])).
fof(f24364,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21545,f18124])).
fof(f21545,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5481,f592,f18124,f543])).
fof(f24363,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21546,f21550])).
fof(f21546,plain,(
  ( ! [X0] : (~sP12('T_0','F_0',X0)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f321,f592,f18124,f543])).
fof(f24362,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21548,f21550])).
fof(f21548,plain,(
  ( ! [X0,X1] : (~sP12(X0,'F_0',X1)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f592,f18124,f543])).
fof(f24361,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21570,f18124])).
fof(f21570,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f811,f18124,f549])).
fof(f24360,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21571,f18124])).
fof(f21571,plain,(
  ~p(s(bool,'F_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f18124,f549])).
fof(f24359,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21572,f18124])).
fof(f21572,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f812,f18124,f549])).
fof(f24358,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21573,f321])).
fof(f21573,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1442,f18124,f549])).
fof(f24357,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21574,f321])).
fof(f21574,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5489,f18124,f549])).
fof(f24356,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21575,f18124])).
fof(f21575,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f18124,f549])).
fof(f24355,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21576,f18124])).
fof(f21576,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5470,f18124,f549])).
fof(f24354,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21581,f18124])).
fof(f21581,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl82),
  inference(unit_resulting_resolution,[],[f811,f18124,f549])).
fof(f24353,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21582,f18124])).
fof(f21582,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f18124,f549])).
fof(f24352,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21583,f321])).
fof(f21583,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f812,f18124,f549])).
fof(f24351,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21584,f18124])).
fof(f21584,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1442,f18124,f549])).
fof(f24350,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21585,f18124])).
fof(f21585,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5489,f18124,f549])).
fof(f24349,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21586,f18124])).
fof(f21586,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f18124,f549])).
fof(f24348,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21587,f321])).
fof(f21587,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5470,f18124,f549])).
fof(f24347,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21592,f321])).
fof(f21592,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f815,f592,f18124,f550])).
fof(f24346,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21593,f321])).
fof(f21593,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5487,f592,f18124,f550])).
fof(f5487,plain,(
  ( ! [X0] : (sP13('T_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5191,f548])).
fof(f24345,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21594,f18124])).
fof(f21594,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1416,f592,f18124,f550])).
fof(f24344,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21595,f18124])).
fof(f21595,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5485,f592,f18124,f550])).
fof(f5485,plain,(
  sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f321,f5191,f547])).
fof(f24343,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21615,f18124])).
fof(f21615,plain,(
  ~p(s(bool,'F_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f815,f592,f18124,f550])).
fof(f24342,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21616,f18124])).
fof(f21616,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5487,f592,f18124,f550])).
fof(f24341,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21617,f321])).
fof(f21617,plain,(
  ~p(s(bool,'T_0')) | $spl82),
  inference(unit_resulting_resolution,[],[f1416,f592,f18124,f550])).
fof(f24340,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21618,f321])).
fof(f21618,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5485,f592,f18124,f550])).
fof(f24339,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21639,f631])).
fof(f21639,plain,(
  ( ! [X0] : (~sP12('F_0',X0,'F_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f811,f18124,f573])).
fof(f24338,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21640,f634])).
fof(f21640,plain,(
  ( ! [X0] : (~sP12('F_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f18124,f573])).
fof(f24337,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21641,f632])).
fof(f21641,plain,(
  ( ! [X0] : (~sP12('F_0','T_0',X0)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f812,f18124,f573])).
fof(f24336,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21643,f24182])).
fof(f24182,plain,(
  ( ! [X2,X0,X1] : (sP12(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)),X2)) ) | $spl82),
  inference(forward_demodulation,[],[f22987,f21703])).
fof(f22987,plain,(
  ( ! [X2,X0,X1] : (sP12(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X1)),X2)) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f3808])).
fof(f21643,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5489,f18124,f573])).
fof(f24335,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21644,f631])).
fof(f21644,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'F_0')) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f18124,f573])).
fof(f24334,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21645,f632])).
fof(f21645,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0',X0)) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5470,f18124,f573])).
fof(f24329,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21662,f626])).
fof(f21662,plain,(
  ( ! [X0] : (~sP10('F_0',X0,'T_0')) ) | $spl82),
  inference(unit_resulting_resolution,[],[f793,f18124,f574])).
fof(f24328,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f21663,f628])).
fof(f21663,plain,(
  ( ! [X0] : (~sP10('F_0','T_0',X0)) ) | $spl82),
  inference(unit_resulting_resolution,[],[f794,f18124,f574])).
fof(f24327,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21665,f24172])).
fof(f24172,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)),X2)) ) | $spl82),
  inference(forward_demodulation,[],[f22977,f21703])).
fof(f22977,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X1)),X2)) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f3751])).
fof(f21665,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5449,f18124,f574])).
fof(f24326,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21666,f24171])).
fof(f24171,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) ) | $spl82),
  inference(forward_demodulation,[],[f22976,f21703])).
fof(f22976,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X2)))) ) | $spl82),
  inference(backward_demodulation,[],[f21703,f3750])).
fof(f21666,plain,(
  ~sP10('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5455,f18124,f574])).
fof(f24325,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21667,f626])).
fof(f21667,plain,(
  ( ! [X0] : (~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'T_0')) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5398,f18124,f574])).
fof(f24324,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f21668,f628])).
fof(f21668,plain,(
  ( ! [X0] : (~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0',X0)) ) | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5399,f18124,f574])).
fof(f24318,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23198,f1894])).
fof(f23198,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f7839])).
fof(f24317,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23197,f1942])).
fof(f23197,plain,(
  ~sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f7642])).
fof(f24316,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23196,f1899])).
fof(f23196,plain,(
  ~sP7('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f7637])).
fof(f24315,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23194,f1700])).
fof(f23194,plain,(
  sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f7461])).
fof(f7461,plain,(
  sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f321,f620,f611,f5321,f483])).
fof(f24314,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23189,f1702])).
fof(f23189,plain,(
  sP7('F_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f7441])).
fof(f7441,plain,(
  sP7('F_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f618,f611,f5320,f485])).
fof(f24313,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23188,f1803])).
fof(f23188,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','T_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f7267])).
fof(f24312,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23183,f23639])).
fof(f23639,plain,(
  ~sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f22571,f21703])).
fof(f22571,plain,(
  ~sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl82)),
  inference(backward_demodulation,[],[f21703,f1292])).
fof(f1292,plain,(
  ~sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | $spl0),
  inference(unit_resulting_resolution,[],[f1270,f481])).
fof(f1270,plain,(
  ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f321,f592,f1129])).
fof(f1129,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | ~sP6(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(subsumption_resolution,[],[f1123,f321])).
fof(f1123,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP6(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(superposition,[],[f486,f668])).
fof(f23183,plain,(
  sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f7219])).
fof(f7219,plain,(
  sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f616,f615,f5313,f484])).
fof(f24311,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23182,f1701])).
fof(f23182,plain,(
  ~sP7('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f7210])).
fof(f24310,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23181,f639])).
fof(f23181,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5500])).
fof(f5500,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f5191,f594])).
fof(f24309,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23180,f639])).
fof(f23180,plain,(
  ~sP0('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5499])).
fof(f5499,plain,(
  ~sP0('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f594])).
fof(f24308,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23179,f640])).
fof(f23179,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5493])).
fof(f5493,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f594])).
fof(f24307,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23178,f21834])).
fof(f23178,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0',X0)) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5492])).
fof(f5492,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f625,f5191,f575])).
fof(f24306,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23177,f21833])).
fof(f23177,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'F_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5491])).
fof(f5491,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f624,f5191,f575])).
fof(f24305,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23176,f839])).
fof(f23176,plain,(
  ~sP13('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5489])).
fof(f24304,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23172,f21868])).
fof(f23172,plain,(
  sP13('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5482])).
fof(f5482,plain,(
  sP13('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f321,f5191,f547])).
fof(f24303,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23169,f649])).
fof(f23169,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5477])).
fof(f5477,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f321,f321,f5191,f543])).
fof(f24302,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23168,f21880])).
fof(f23168,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5470])).
fof(f24301,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23167,f23619])).
fof(f23619,plain,(
  ( ! [X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,X1)) ) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f23618,f21703])).
fof(f23618,plain,(
  ( ! [X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,X1)) ) | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f22546,f18124])).
fof(f22546,plain,(
  ( ! [X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,X1) | ~p(s(bool,X0))) ) | ($spl0 | $spl82)),
  inference(backward_demodulation,[],[f21703,f825])).
fof(f825,plain,(
  ( ! [X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1) | ~p(s(bool,X0))) ) | $spl0),
  inference(subsumption_resolution,[],[f824,f321])).
fof(f824,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1)) ) | $spl0),
  inference(superposition,[],[f549,f668])).
fof(f23167,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5464])).
fof(f5464,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f5191,f536])).
fof(f24300,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23165,f21879])).
fof(f23165,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'F_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5461])).
fof(f24299,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23164,f860])).
fof(f23164,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5456])).
fof(f5456,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5191,f5191,f533])).
fof(f24298,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23163,f860])).
fof(f23163,plain,(
  ~sP11('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5455])).
fof(f24297,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23162,f864])).
fof(f23162,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5449])).
fof(f24296,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23157,f21858])).
fof(f23157,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5442])).
fof(f5442,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f5191,f530])).
fof(f24295,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23156,f21858])).
fof(f23156,plain,(
  sP11('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5440])).
fof(f5440,plain,(
  sP11('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f592,f5191,f530])).
fof(f24294,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23155,f21859])).
fof(f23155,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5435])).
fof(f5435,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f592,f5191,f530])).
fof(f24293,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23153,f647])).
fof(f23153,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5428])).
fof(f5428,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f321,f5191,f526])).
fof(f24292,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23152,f647])).
fof(f23152,plain,(
  ~sP10('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5427])).
fof(f5427,plain,(
  ~sP10('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f321,f5191,f526])).
fof(f24291,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23151,f648])).
fof(f23151,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5420])).
fof(f5420,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f321,f592,f5191,f526])).
fof(f24290,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23150,f21888])).
fof(f23150,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5399])).
fof(f24289,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23149,f21884])).
fof(f23149,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'T_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5398])).
fof(f24288,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23148,f1189])).
fof(f23148,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','T_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5397])).
fof(f24287,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23141,f646])).
fof(f23141,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5382])).
fof(f5382,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f321,f5191,f509])).
fof(f24286,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23138,f21830])).
fof(f23138,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5377])).
fof(f5377,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f670,f5191,f501])).
fof(f24285,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23137,f21801])).
fof(f23137,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5376])).
fof(f5376,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f669,f5191,f501])).
fof(f24284,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23136,f1849])).
fof(f23136,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5374])).
fof(f5374,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f670,f5191,f501])).
fof(f24283,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23135,f1831])).
fof(f23135,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5373])).
fof(f5373,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f669,f5191,f501])).
fof(f24282,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23134,f21831])).
fof(f23134,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5371])).
fof(f24281,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23133,f21832])).
fof(f23133,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','T_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5370])).
fof(f5370,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f665,f5191,f498])).
fof(f24280,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23132,f643])).
fof(f23132,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5357])).
fof(f5357,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f5191,f5191,f494])).
fof(f24279,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23131,f643])).
fof(f23131,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5356])).
fof(f5356,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f5191,f494])).
fof(f24278,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23130,f643])).
fof(f23130,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5355])).
fof(f5355,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f592,f5191,f494])).
fof(f24277,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23129,f643])).
fof(f23129,plain,(
  ~sP4('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5354])).
fof(f24276,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23128,f644])).
fof(f23128,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5339])).
fof(f5339,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f592,f5191,f494])).
fof(f24275,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23127,f644])).
fof(f23127,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5338])).
fof(f24274,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23126,f645])).
fof(f23126,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5322])).
fof(f24273,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23123,f642])).
fof(f23123,plain,(
  ~sP5('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5315])).
fof(f24272,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23120,f641])).
fof(f23120,plain,(
  ~sP6('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5308])).
fof(f24271,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23118,f23280])).
fof(f23118,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5302])).
fof(f5302,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f644,f614,f610,f5191,f485])).
fof(f24270,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23116,f23280])).
fof(f23116,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5274])).
fof(f5274,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f643,f642,f610,f5191,f484])).
fof(f24269,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23115,f21796])).
fof(f23115,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5272])).
fof(f24268,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23114,f1703])).
fof(f23114,plain,(
  ~sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5267])).
fof(f24267,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23110,f650])).
fof(f23110,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5253])).
fof(f5253,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5191,f470])).
fof(f24266,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23109,f650])).
fof(f23109,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'T_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5249])).
fof(f5249,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5191,f469])).
fof(f24265,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23108,f651])).
fof(f23108,plain,(
  ( ! [X0] : (~sP2('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5246])).
fof(f5246,plain,(
  ( ! [X0] : (~sP2('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f5191,f454])).
fof(f24264,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23107,f651])).
fof(f23107,plain,(
  ( ! [X0] : (~sP2('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5245])).
fof(f24263,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23105,f651])).
fof(f23105,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5234])).
fof(f5234,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f5191,f453])).
fof(f24262,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23104,f23613])).
fof(f23613,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f23612,f21703])).
fof(f23612,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f22540,f18124])).
fof(f22540,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ~p(s(bool,X0))) ) | ($spl0 | $spl82)),
  inference(backward_demodulation,[],[f21703,f749])).
fof(f749,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP2(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(subsumption_resolution,[],[f748,f321])).
fof(f748,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP2(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(superposition,[],[f458,f668])).
fof(f23104,plain,(
  ( ! [X0] : (~sP2(X0,'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5233])).
fof(f24261,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23103,f651])).
fof(f23103,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5229])).
fof(f24260,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23102,f21786])).
fof(f23102,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5228])).
fof(f24259,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23101,f21787])).
fof(f23101,plain,(
  sP1('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5227])).
fof(f24258,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23099,f21790])).
fof(f23099,plain,(
  ~sP1('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5225])).
fof(f5225,plain,(
  ~sP1('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f438])).
fof(f24257,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23098,f21789])).
fof(f23098,plain,(
  ~sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5223])).
fof(f5223,plain,(
  ~sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f438])).
fof(f24255,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23096,f23926])).
fof(f23096,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5218])).
fof(f24254,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23095,f330])).
fof(f23095,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f3074])).
fof(f24253,plain,(
  $false | ($spl3 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23078,f21703])).
fof(f23078,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f19611])).
fof(f19611,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f591,f2572,f3078])).
fof(f24252,plain,(
  $false | ($spl5 | $spl72 | $spl74 | $spl82)),
  inference(subsumption_resolution,[],[f23050,f21703])).
fof(f23050,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',sK15))) | ($spl5 | $spl72 | $spl74 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17084])).
fof(f17084,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK15))) | ($spl5 | $spl72 | $spl74)),
  inference(unit_resulting_resolution,[],[f591,f13480])).
fof(f13480,plain,(
  ( ! [X17,X16] : (s('type.num.num',X16) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X17))) | s('type.num.num',X16) = s('type.num.num',X17)) ) | ($spl72 | $spl74)),
  inference(subsumption_resolution,[],[f3070,f13470])).
fof(f13470,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl72 | $spl74)),
  inference(forward_demodulation,[],[f9824,f9887])).
fof(f9887,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7)))) ) | $spl74),
  inference(forward_demodulation,[],[f9830,f332])).
fof(f9830,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7)))) ) | $spl74),
  inference(backward_demodulation,[],[f9826,f2193])).
fof(f3070,plain,(
  ( ! [X17,X16] : (s('type.num.num',X16) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X17))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X16) = s('type.num.num',X17)) )),
  inference(superposition,[],[f450,f334])).
fof(f24250,plain,(
  $false | ($spl72 | $spl74 | $spl82)),
  inference(subsumption_resolution,[],[f23048,f21703])).
fof(f23048,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl72 | $spl74 | $spl82)),
  inference(backward_demodulation,[],[f21703,f13470])).
fof(f24230,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24229,f1898])).
fof(f24229,plain,(
  ~sP7('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f23020,f21703])).
fof(f23020,plain,(
  ~sP7('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5189])).
fof(f5189,plain,(
  ~sP7('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f2699,f479])).
fof(f2699,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f592,f592,f2608,f494])).
fof(f24227,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24226,f1700])).
fof(f24226,plain,(
  sP7('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f23018,f21703])).
fof(f23018,plain,(
  sP7('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5180])).
fof(f5180,plain,(
  sP7('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f321,f620,f611,f2698,f483])).
fof(f2698,plain,(
  ( ! [X0,X1] : (sP5('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X0,X1)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f2608,f493])).
fof(f24217,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24216,f1702])).
fof(f24216,plain,(
  sP7('F_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f23013,f21703])).
fof(f23013,plain,(
  sP7('F_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5125])).
fof(f5125,plain,(
  sP7('F_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f592,f618,f611,f2697,f485])).
fof(f2697,plain,(
  ( ! [X0,X1] : (sP5(X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X1)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f2608,f492])).
fof(f24215,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24214,f1798])).
fof(f24214,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','T_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f23012,f21703])).
fof(f23012,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'T_0','T_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5113])).
fof(f5113,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0','T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f2694,f480])).
fof(f2694,plain,(
  ~sP5('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f321,f321,f2608,f490])).
fof(f24205,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24204,f23639])).
fof(f24204,plain,(
  sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f24203,f21703])).
fof(f24203,plain,(
  sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f23007,f21703])).
fof(f23007,plain,(
  sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5014])).
fof(f5014,plain,(
  sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f592,f616,f615,f2692,f484])).
fof(f2692,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X1)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f2608,f488])).
fof(f24202,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24201,f1701])).
fof(f24201,plain,(
  ~sP7('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f23006,f21703])).
fof(f23006,plain,(
  ~sP7('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f4964])).
fof(f4964,plain,(
  ~sP7('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f2689,f481])).
fof(f2689,plain,(
  ~sP6('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f321,f321,f2608,f486])).
fof(f24105,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24104,f639])).
fof(f24104,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22907,f21703])).
fof(f22907,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2875])).
fof(f2875,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f2608,f2608,f594])).
fof(f24103,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24102,f639])).
fof(f24102,plain,(
  ~sP0('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22906,f21703])).
fof(f22906,plain,(
  ~sP0('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2874])).
fof(f2874,plain,(
  ~sP0('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f592,f2608,f594])).
fof(f24101,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24100,f640])).
fof(f24100,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22905,f21703])).
fof(f22905,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2868])).
fof(f2868,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f592,f2608,f594])).
fof(f24099,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24098,f21834])).
fof(f24098,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0',X0)) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22904,f21703])).
fof(f22904,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0',X0)) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2867])).
fof(f2867,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0',X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f625,f2608,f575])).
fof(f24097,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24096,f21833])).
fof(f24096,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'F_0')) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22903,f21703])).
fof(f22903,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),X0,'F_0')) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2866])).
fof(f2866,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X0,'F_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f624,f2608,f575])).
fof(f24095,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24094,f839])).
fof(f24094,plain,(
  ~sP13('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22902,f21703])).
fof(f22902,plain,(
  ~sP13('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2864])).
fof(f2864,plain,(
  ~sP13('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f321,f321,f2608,f550])).
fof(f24090,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24089,f21877])).
fof(f24089,plain,(
  sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','T_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22899,f21703])).
fof(f22899,plain,(
  sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','T_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2860])).
fof(f2860,plain,(
  sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0','T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f592,f321,f2608,f547])).
fof(f24088,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24087,f21868])).
fof(f24087,plain,(
  sP13('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22898,f21703])).
fof(f22898,plain,(
  sP13('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2857])).
fof(f2857,plain,(
  sP13('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f592,f321,f2608,f547])).
fof(f24082,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24081,f649])).
fof(f24081,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22895,f21703])).
fof(f22895,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2852])).
fof(f2852,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f321,f321,f2608,f543])).
fof(f24080,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24079,f21880])).
fof(f24079,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22894,f21703])).
fof(f22894,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'T_0',X0)) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2845])).
fof(f2845,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0',X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f321,f2608,f537])).
fof(f24078,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24077,f23619])).
fof(f24077,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f24076,f21703])).
fof(f24076,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22893,f21703])).
fof(f22893,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2839])).
fof(f2839,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f2608,f2608,f536])).
fof(f24073,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24072,f21879])).
fof(f24072,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'F_0')) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22891,f21703])).
fof(f22891,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),X0,'F_0')) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2836])).
fof(f2836,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X0,'F_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f592,f2608,f536])).
fof(f24071,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24070,f859])).
fof(f24070,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22890,f21703])).
fof(f22890,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2831])).
fof(f2831,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f321,f2608,f2608,f533])).
fof(f24069,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24068,f859])).
fof(f24068,plain,(
  ~sP11('T_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22889,f21703])).
fof(f22889,plain,(
  ~sP11('T_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2830])).
fof(f2830,plain,(
  ~sP11('T_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f321,f592,f2608,f533])).
fof(f24067,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24066,f863])).
fof(f24066,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22888,f21703])).
fof(f22888,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2824])).
fof(f2824,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f592,f321,f2608,f533])).
fof(f24062,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24061,f21867])).
fof(f24061,plain,(
  sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22884,f21703])).
fof(f22884,plain,(
  sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','F_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2820])).
fof(f2820,plain,(
  sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f592,f592,f2608,f530])).
fof(f24060,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24059,f21858])).
fof(f24059,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22883,f21703])).
fof(f22883,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2817])).
fof(f2817,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f592,f2608,f2608,f530])).
fof(f24058,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24057,f21858])).
fof(f24057,plain,(
  sP11('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22882,f21703])).
fof(f22882,plain,(
  sP11('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2815])).
fof(f2815,plain,(
  sP11('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f592,f592,f2608,f530])).
fof(f24056,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24055,f21859])).
fof(f24055,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22881,f21703])).
fof(f22881,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2810])).
fof(f2810,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f592,f592,f2608,f530])).
fof(f24052,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24051,f647])).
fof(f24051,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22879,f21703])).
fof(f22879,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2803])).
fof(f2803,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f2608,f321,f2608,f526])).
fof(f24050,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24049,f647])).
fof(f24049,plain,(
  ~sP10('T_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22878,f21703])).
fof(f22878,plain,(
  ~sP10('T_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2802])).
fof(f2802,plain,(
  ~sP10('T_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f592,f321,f2608,f526])).
fof(f24048,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24047,f648])).
fof(f24047,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22877,f21703])).
fof(f22877,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2795])).
fof(f2795,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f321,f592,f2608,f526])).
fof(f24046,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24045,f21888])).
fof(f24045,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22876,f21703])).
fof(f22876,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'T_0',X0)) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2774])).
fof(f2774,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0',X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f321,f2608,f520])).
fof(f24044,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24043,f21884])).
fof(f24043,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'T_0')) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22875,f21703])).
fof(f22875,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),X0,'T_0')) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2773])).
fof(f2773,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X0,'T_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f321,f2608,f519])).
fof(f24042,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24041,f1188])).
fof(f24041,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','T_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22874,f21703])).
fof(f22874,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'T_0','T_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2772])).
fof(f2772,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0','T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f321,f321,f2608,f518])).
fof(f24028,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24027,f646])).
fof(f24027,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22867,f21703])).
fof(f22867,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2757])).
fof(f2757,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f321,f321,f2608,f509])).
fof(f24022,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24021,f21800])).
fof(f24021,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22864,f21703])).
fof(f22864,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2752])).
fof(f2752,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f669,f2608,f501])).
fof(f24020,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24019,f1825])).
fof(f24019,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22863,f21703])).
fof(f22863,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2750])).
fof(f2750,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f669,f2608,f501])).
fof(f24018,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24017,f21831])).
fof(f24017,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','F_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22862,f21703])).
fof(f22862,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'T_0','F_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2748])).
fof(f2748,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f665,f2608,f498])).
fof(f24016,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24015,f21832])).
fof(f24015,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','T_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22861,f21703])).
fof(f22861,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','T_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2747])).
fof(f2747,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0','T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f665,f2608,f498])).
fof(f24014,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24013,f643])).
fof(f24013,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22860,f21703])).
fof(f22860,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2734])).
fof(f2734,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f2608,f2608,f2608,f494])).
fof(f24012,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24011,f643])).
fof(f24011,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22859,f21703])).
fof(f22859,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2733])).
fof(f2733,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f592,f2608,f2608,f494])).
fof(f24010,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24009,f643])).
fof(f24009,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22858,f21703])).
fof(f22858,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2732])).
fof(f2732,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f2608,f592,f2608,f494])).
fof(f24008,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24007,f643])).
fof(f24007,plain,(
  ~sP4('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22857,f21703])).
fof(f22857,plain,(
  ~sP4('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2731])).
fof(f2731,plain,(
  ~sP4('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f592,f592,f2608,f494])).
fof(f24006,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24005,f644])).
fof(f24005,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22856,f21703])).
fof(f22856,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2716])).
fof(f2716,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f2608,f592,f2608,f494])).
fof(f24004,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24003,f644])).
fof(f24003,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22855,f21703])).
fof(f22855,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2715])).
fof(f2715,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f592,f592,f2608,f494])).
fof(f24002,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f24001,f645])).
fof(f24001,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22854,f21703])).
fof(f22854,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','F_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2699])).
fof(f23996,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23995,f642])).
fof(f23995,plain,(
  ~sP5('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22851,f21703])).
fof(f22851,plain,(
  ~sP5('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2694])).
fof(f23990,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23989,f641])).
fof(f23989,plain,(
  ~sP6('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22848,f21703])).
fof(f22848,plain,(
  ~sP6('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2689])).
fof(f23986,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23985,f23280])).
fof(f23985,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22846,f21703])).
fof(f22846,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2687])).
fof(f2687,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f644,f614,f610,f2608,f485])).
fof(f23982,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23981,f23280])).
fof(f23981,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22844,f21703])).
fof(f22844,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0')) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2675])).
fof(f2675,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f643,f642,f610,f2608,f484])).
fof(f23980,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23979,f21796])).
fof(f23979,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22843,f21703])).
fof(f22843,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2673])).
fof(f2673,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f616,f612,f610,f2608,f484])).
fof(f23978,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23977,f1703])).
fof(f23977,plain,(
  ~sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22842,f21703])).
fof(f22842,plain,(
  ~sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2668])).
fof(f2668,plain,(
  ~sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f321,f321,f2608,f482])).
fof(f23970,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23969,f650])).
fof(f23969,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22838,f21703])).
fof(f22838,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'T_0',X0)) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2658])).
fof(f2658,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0',X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f321,f2608,f470])).
fof(f23968,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23967,f650])).
fof(f23967,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'T_0')) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22837,f21703])).
fof(f22837,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),X0,'T_0')) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2656])).
fof(f2656,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X0,'T_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f321,f2608,f469])).
fof(f23966,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23965,f651])).
fof(f23965,plain,(
  ( ! [X0] : (~sP2('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22836,f21703])).
fof(f22836,plain,(
  ( ! [X0] : (~sP2('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),X0)) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2653])).
fof(f2653,plain,(
  ( ! [X0] : (~sP2('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f2608,f2608,f454])).
fof(f23964,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23963,f651])).
fof(f23963,plain,(
  ( ! [X0] : (~sP2('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22835,f21703])).
fof(f22835,plain,(
  ( ! [X0] : (~sP2('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),X0)) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2652])).
fof(f2652,plain,(
  ( ! [X0] : (~sP2('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f592,f2608,f454])).
fof(f23960,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23959,f651])).
fof(f23959,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22833,f21703])).
fof(f22833,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2641])).
fof(f2641,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f2608,f2608,f453])).
fof(f23958,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23957,f23613])).
fof(f23957,plain,(
  ( ! [X0] : (~sP2(X0,'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f23956,f21703])).
fof(f23956,plain,(
  ( ! [X0] : (~sP2(X0,'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22832,f21703])).
fof(f22832,plain,(
  ( ! [X0] : (~sP2(X0,'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2640])).
fof(f2640,plain,(
  ( ! [X0] : (~sP2(X0,'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f592,f2608,f453])).
fof(f23955,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23954,f651])).
fof(f23954,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22831,f21703])).
fof(f22831,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0')) ) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2636])).
fof(f2636,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f592,f2608,f453])).
fof(f23953,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23952,f21786])).
fof(f23952,plain,(
  sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22830,f21703])).
fof(f22830,plain,(
  sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2635])).
fof(f23951,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23950,f21787])).
fof(f23950,plain,(
  sP1('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22829,f21703])).
fof(f22829,plain,(
  sP1('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2634])).
fof(f23948,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23947,f21790])).
fof(f23947,plain,(
  ~sP1('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22827,f21703])).
fof(f22827,plain,(
  ~sP1('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2632])).
fof(f2632,plain,(
  ~sP1('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f592,f2608,f438])).
fof(f23946,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23945,f21789])).
fof(f23945,plain,(
  ~sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22826,f21703])).
fof(f22826,plain,(
  ~sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2630])).
fof(f2630,plain,(
  ~sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f592,f2608,f438])).
fof(f23943,plain,(
  $false | ($spl3 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22824,f23926])).
fof(f22824,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2625])).
fof(f2625,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f321,f2608,f413])).
fof(f23940,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23939,f21703])).
fof(f23939,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK14) | ($spl3 | $spl82)),
  inference(forward_demodulation,[],[f22821,f21703])).
fof(f22821,plain,(
  s('type.num.num',sK14) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f589])).
fof(f23938,plain,(
  $false | ($spl3 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22816,f332])).
fof(f22816,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl3 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f19612])).
fof(f19612,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f3074,f2572,f3078])).
fof(f23937,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23929,f321])).
fof(f23929,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f23926,f592])).
fof(f23936,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23935,f18124])).
fof(f23935,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23927,f23926])).
fof(f23927,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f23926,f347])).
fof(f23925,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23924,f665])).
fof(f23924,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl5 | $spl82)),
  inference(forward_demodulation,[],[f22814,f670])).
fof(f22814,plain,(
  s(bool,'F_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17923])).
fof(f17923,plain,(
  s(bool,'F_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(forward_demodulation,[],[f17913,f5221])).
fof(f5221,plain,(
  s(bool,'F_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f414])).
fof(f17913,plain,(
  s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) = s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f5218,f5192,f1047])).
fof(f23923,plain,(
  $false | ($spl5 | $spl14 | $spl82)),
  inference(subsumption_resolution,[],[f22813,f21786])).
fof(f22813,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl14 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17915])).
fof(f23922,plain,(
  $false | ($spl5 | $spl10 | $spl82)),
  inference(subsumption_resolution,[],[f22812,f21787])).
fof(f22812,plain,(
  sP1('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl10 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17914])).
fof(f23921,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22811,f639])).
fof(f22811,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17907])).
fof(f17907,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f5192,f5192,f594])).
fof(f23920,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22810,f639])).
fof(f22810,plain,(
  ~sP0('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17906])).
fof(f17906,plain,(
  ~sP0('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5192,f594])).
fof(f23919,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22809,f640])).
fof(f22809,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17900])).
fof(f17900,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5192,f594])).
fof(f23917,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22807,f21834])).
fof(f22807,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0',X0)) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17898])).
fof(f17898,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f625,f5192,f575])).
fof(f23915,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22805,f21833])).
fof(f22805,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'F_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17896])).
fof(f17896,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),X0,'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f624,f5192,f575])).
fof(f23914,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22804,f839])).
fof(f22804,plain,(
  ~sP13('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17893])).
fof(f17893,plain,(
  ~sP13('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f321,f321,f5192,f550])).
fof(f23913,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22800,f21868])).
fof(f22800,plain,(
  sP13('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17884])).
fof(f17884,plain,(
  sP13('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f321,f5192,f547])).
fof(f23912,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22797,f649])).
fof(f22797,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17877])).
fof(f17877,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f321,f321,f5192,f543])).
fof(f23911,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22795,f21880])).
fof(f22795,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17862])).
fof(f17862,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'T_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5192,f537])).
fof(f23910,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22794,f23619])).
fof(f22794,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17857])).
fof(f17857,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5192,f5192,f536])).
fof(f23909,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22792,f21879])).
fof(f22792,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'F_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17854])).
fof(f17854,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),X0,'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5192,f536])).
fof(f23908,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22791,f860])).
fof(f22791,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17849])).
fof(f17849,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5192,f5192,f533])).
fof(f23907,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22790,f860])).
fof(f22790,plain,(
  ~sP11('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17848])).
fof(f17848,plain,(
  ~sP11('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f592,f5192,f533])).
fof(f23906,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22789,f864])).
fof(f22789,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17842])).
fof(f17842,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f321,f5192,f533])).
fof(f23905,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22784,f21858])).
fof(f22784,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17835])).
fof(f17835,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5192,f5192,f530])).
fof(f23904,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22783,f21858])).
fof(f22783,plain,(
  sP11('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17833])).
fof(f17833,plain,(
  sP11('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f592,f5192,f530])).
fof(f23903,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22782,f21859])).
fof(f22782,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17828])).
fof(f17828,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f592,f5192,f530])).
fof(f23902,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22780,f647])).
fof(f22780,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17820])).
fof(f17820,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f5192,f321,f5192,f526])).
fof(f23901,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22779,f647])).
fof(f22779,plain,(
  ~sP10('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17819])).
fof(f17819,plain,(
  ~sP10('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f321,f5192,f526])).
fof(f23900,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22778,f648])).
fof(f22778,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17811])).
fof(f17811,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f321,f592,f5192,f526])).
fof(f23899,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22774,f21888])).
fof(f22774,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17780])).
fof(f17780,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'T_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5192,f520])).
fof(f23898,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22773,f21884])).
fof(f22773,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'T_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17779])).
fof(f17779,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),X0,'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5192,f519])).
fof(f23897,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22772,f1189])).
fof(f22772,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','T_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17778])).
fof(f17778,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'T_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f321,f321,f5192,f518])).
fof(f23896,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22765,f646])).
fof(f22765,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17759])).
fof(f17759,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f321,f5192,f509])).
fof(f23895,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23894,f23782])).
fof(f23782,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23781,f21703])).
fof(f23781,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23780,f21703])).
fof(f23780,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22660,f21703])).
fof(f22660,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5015])).
fof(f5015,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f592,f617,f615,f2692,f484])).
fof(f23894,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(forward_demodulation,[],[f22762,f21703])).
fof(f22762,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17750])).
fof(f17750,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f5221,f5192,f501])).
fof(f23893,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22761,f21830])).
fof(f22761,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17748])).
fof(f17748,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f670,f5192,f501])).
fof(f23892,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22760,f21801])).
fof(f22760,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17747])).
fof(f17747,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f669,f5192,f501])).
fof(f23890,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22758,f1849])).
fof(f22758,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17744])).
fof(f17744,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f670,f5192,f501])).
fof(f23889,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22757,f1831])).
fof(f22757,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17743])).
fof(f17743,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f669,f5192,f501])).
fof(f23888,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22755,f21831])).
fof(f22755,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17741])).
fof(f17741,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'T_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f665,f5192,f498])).
fof(f23886,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22753,f21832])).
fof(f22753,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','T_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17739])).
fof(f17739,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f665,f5192,f498])).
fof(f23885,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22752,f643])).
fof(f22752,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17726])).
fof(f17726,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f5192,f5192,f5192,f494])).
fof(f23884,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22751,f643])).
fof(f22751,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17725])).
fof(f17725,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5192,f5192,f494])).
fof(f23883,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22750,f643])).
fof(f22750,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17724])).
fof(f17724,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f5192,f592,f5192,f494])).
fof(f23882,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22749,f643])).
fof(f22749,plain,(
  ~sP4('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17723])).
fof(f17723,plain,(
  ~sP4('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f592,f5192,f494])).
fof(f23881,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22748,f644])).
fof(f22748,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17708])).
fof(f17708,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f5192,f592,f5192,f494])).
fof(f23880,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22747,f644])).
fof(f22747,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17707])).
fof(f17707,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f592,f5192,f494])).
fof(f23879,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22746,f645])).
fof(f22746,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17691])).
fof(f17691,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f592,f5192,f494])).
fof(f23878,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22743,f642])).
fof(f22743,plain,(
  ~sP5('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17684])).
fof(f17684,plain,(
  ~sP5('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f321,f5192,f490])).
fof(f23877,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22740,f641])).
fof(f22740,plain,(
  ~sP6('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17677])).
fof(f17677,plain,(
  ~sP6('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f321,f5192,f486])).
fof(f23876,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22736,f23280])).
fof(f22736,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17670])).
fof(f17670,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f644,f614,f610,f5192,f485])).
fof(f23875,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22731,f23280])).
fof(f22731,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17642])).
fof(f17642,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f643,f642,f610,f5192,f484])).
fof(f23874,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22730,f21796])).
fof(f22730,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17641])).
fof(f17641,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f616,f612,f610,f5192,f484])).
fof(f23873,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22729,f1703])).
fof(f22729,plain,(
  ~sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17636])).
fof(f17636,plain,(
  ~sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f321,f5192,f482])).
fof(f23872,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22725,f650])).
fof(f22725,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17624])).
fof(f17624,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'T_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5192,f470])).
fof(f23871,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22724,f650])).
fof(f22724,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'T_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17620])).
fof(f17620,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),X0,'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5192,f469])).
fof(f23870,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22723,f651])).
fof(f22723,plain,(
  ( ! [X0] : (~sP2('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17618])).
fof(f17618,plain,(
  ( ! [X0] : (~sP2('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5192,f5192,f454])).
fof(f23869,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22722,f651])).
fof(f22722,plain,(
  ( ! [X0] : (~sP2('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17617])).
fof(f17617,plain,(
  ( ! [X0] : (~sP2('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5192,f454])).
fof(f23868,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22720,f651])).
fof(f22720,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17606])).
fof(f17606,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5192,f5192,f453])).
fof(f23867,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22719,f23613])).
fof(f22719,plain,(
  ( ! [X0] : (~sP2(X0,'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17605])).
fof(f17605,plain,(
  ( ! [X0] : (~sP2(X0,'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5192,f453])).
fof(f23866,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22718,f651])).
fof(f22718,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17602])).
fof(f17602,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5192,f453])).
fof(f23865,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22716,f21790])).
fof(f22716,plain,(
  ~sP1('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17598])).
fof(f17598,plain,(
  ~sP1('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5192,f438])).
fof(f23864,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22715,f21789])).
fof(f22715,plain,(
  ~sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17596])).
fof(f17596,plain,(
  ~sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5192,f438])).
fof(f23863,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22714,f670])).
fof(f22714,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17591])).
fof(f17591,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f321,f5192,f413])).
fof(f23862,plain,(
  $false | ($spl5 | $spl72 | $spl74 | $spl82)),
  inference(subsumption_resolution,[],[f22713,f330])).
fof(f22713,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl72 | $spl74 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17085])).
fof(f17085,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | ($spl5 | $spl72 | $spl74)),
  inference(unit_resulting_resolution,[],[f3074,f13480])).
fof(f23861,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22712,f332])).
fof(f22712,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f9310])).
fof(f9310,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f591,f3074,f3039])).
fof(f23860,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22711,f330])).
fof(f22711,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f3111])).
fof(f3111,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(forward_demodulation,[],[f3106,f330])).
fof(f3106,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f591,f3074,f450])).
fof(f23859,plain,(
  $false | ($spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22710,f330])).
fof(f22710,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f3110])).
fof(f3110,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(forward_demodulation,[],[f3107,f330])).
fof(f3107,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | $spl5),
  inference(unit_resulting_resolution,[],[f3074,f3074,f450])).
fof(f23858,plain,(
  $false | ($spl3 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22708,f21703])).
fof(f22708,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) | ($spl3 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f19554])).
fof(f19554,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | ($spl3 | $spl5)),
  inference(forward_demodulation,[],[f19431,f333])).
fof(f19431,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f589,f3074,f3041])).
fof(f23857,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23856,f23747])).
fof(f23747,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f23746,f21703])).
fof(f23746,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f22643,f21703])).
fof(f22643,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl0 | $spl82)),
  inference(backward_demodulation,[],[f21703,f3645])).
fof(f3645,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f668,f1956,f499])).
fof(f23856,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22707,f21703])).
fof(f22707,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17749])).
fof(f17749,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f668,f5192,f501])).
fof(f23855,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23854,f23745])).
fof(f23745,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f23744,f21703])).
fof(f23744,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f22642,f21703])).
fof(f22642,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0')) ) | ($spl0 | $spl82)),
  inference(backward_demodulation,[],[f21703,f3642])).
fof(f3642,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f668,f1956,f499])).
fof(f23854,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22706,f21703])).
fof(f22706,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17745])).
fof(f17745,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0') | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f668,f5192,f501])).
fof(f23851,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23850,f23280])).
fof(f23850,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f23849,f330])).
fof(f23849,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22704,f21703])).
fof(f22704,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17672])).
fof(f17672,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f619,f614,f610,f5192,f485])).
fof(f23846,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23845,f23280])).
fof(f23845,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f23844,f21703])).
fof(f23844,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22702,f21703])).
fof(f22702,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17646])).
fof(f17646,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))),'F_0') | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f617,f613,f610,f5192,f484])).
fof(f23838,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23837,f23318])).
fof(f23837,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22686,f21703])).
fof(f22686,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5539])).
fof(f5539,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f321,f5191,f1474])).
fof(f1474,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1,X0)) ) | $spl0),
  inference(subsumption_resolution,[],[f1468,f321])).
fof(f1468,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1,X0)) ) | $spl0),
  inference(superposition,[],[f550,f668])).
fof(f23836,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23835,f649])).
fof(f23835,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22685,f21703])).
fof(f22685,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5537])).
fof(f5537,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f321,f5191,f1438])).
fof(f1438,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | ~sP12(X1,X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(subsumption_resolution,[],[f1432,f321])).
fof(f1432,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | ~p(s(bool,X1)) | ~sP12(X1,X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(superposition,[],[f543,f668])).
fof(f23834,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23833,f23315])).
fof(f23833,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22684,f21703])).
fof(f22684,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5535])).
fof(f5535,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f5191,f5191,f1362])).
fof(f1362,plain,(
  ( ! [X0,X1] : (~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1,X0) | p(s(bool,X1)) | p(s(bool,X0))) ) | $spl0),
  inference(subsumption_resolution,[],[f1353,f321])).
fof(f1353,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1,X0)) ) | $spl0),
  inference(superposition,[],[f533,f668])).
fof(f23832,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23831,f23316])).
fof(f23831,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22683,f21703])).
fof(f22683,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5534])).
fof(f5534,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f592,f5191,f1362])).
fof(f23830,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23829,f23315])).
fof(f23829,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22682,f21703])).
fof(f22682,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5531])).
fof(f5531,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f592,f5191,f1362])).
fof(f23828,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23827,f647])).
fof(f23827,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22681,f21703])).
fof(f22681,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5526])).
fof(f5526,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f5191,f5191,f1313])).
fof(f1313,plain,(
  ( ! [X0,X1] : (~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) ) | $spl0),
  inference(subsumption_resolution,[],[f1304,f321])).
fof(f1304,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1)) ) | $spl0),
  inference(superposition,[],[f526,f668])).
fof(f23826,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23825,f647])).
fof(f23825,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22680,f21703])).
fof(f22680,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5525])).
fof(f5525,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f592,f5191,f1313])).
fof(f23824,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23823,f648])).
fof(f23823,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22679,f21703])).
fof(f22679,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5519])).
fof(f5519,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f592,f5191,f1313])).
fof(f23822,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23821,f21842])).
fof(f23821,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22678,f21703])).
fof(f22678,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5518])).
fof(f5518,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f321,f5191,f1237])).
fof(f1237,plain,(
  ( ! [X0,X1] : (~sP9(X1,X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl0),
  inference(subsumption_resolution,[],[f1233,f321])).
fof(f1233,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP9(X1,X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(superposition,[],[f518,f668])).
fof(f23820,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23819,f646])).
fof(f23819,plain,(
  ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22677,f21703])).
fof(f22677,plain,(
  ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5516])).
fof(f5516,plain,(
  ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f321,f5191,f1207])).
fof(f1207,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | ~sP8(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(subsumption_resolution,[],[f1201,f321])).
fof(f1201,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP8(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(superposition,[],[f509,f668])).
fof(f23818,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23817,f642])).
fof(f23817,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22676,f21703])).
fof(f22676,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5513])).
fof(f5513,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f321,f5191,f1151])).
fof(f1151,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | ~sP5(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(subsumption_resolution,[],[f1145,f321])).
fof(f1145,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP5(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(superposition,[],[f490,f668])).
fof(f23816,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23815,f641])).
fof(f23815,plain,(
  ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22675,f21703])).
fof(f22675,plain,(
  ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5510])).
fof(f5510,plain,(
  ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f321,f5191,f1129])).
fof(f23813,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23812,f650])).
fof(f23812,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22673,f21703])).
fof(f22673,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5508])).
fof(f5508,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f5191,f764])).
fof(f764,plain,(
  ( ! [X0,X1] : (~sP3(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1) | p(s(bool,X0))) ) | $spl0),
  inference(subsumption_resolution,[],[f762,f321])).
fof(f762,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | ~sP3(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(superposition,[],[f470,f668])).
fof(f23811,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23810,f650])).
fof(f23810,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22672,f21703])).
fof(f22672,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5507])).
fof(f5507,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f5191,f757])).
fof(f757,plain,(
  ( ! [X0,X1] : (~sP3(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | p(s(bool,X0))) ) | $spl0),
  inference(subsumption_resolution,[],[f755,f321])).
fof(f755,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | ~sP3(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(superposition,[],[f469,f668])).
fof(f23809,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23808,f23278])).
fof(f23808,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22671,f21703])).
fof(f22671,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5506])).
fof(f5506,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f5191,f705])).
fof(f23807,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23806,f23278])).
fof(f23806,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22670,f21703])).
fof(f22670,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5505])).
fof(f5505,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f5191,f704])).
fof(f23805,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23804,f21801])).
fof(f23804,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22669,f21703])).
fof(f22669,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5375])).
fof(f5375,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f668,f5191,f501])).
fof(f23803,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23802,f1849])).
fof(f23802,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22668,f21703])).
fof(f22668,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5372])).
fof(f5372,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0') | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f668,f5191,f501])).
fof(f23798,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23797,f23280])).
fof(f23797,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22666,f21703])).
fof(f22666,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5301])).
fof(f5301,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f619,f614,f610,f5191,f485])).
fof(f23793,plain,(
  $false | ($spl0 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f23792,f23280])).
fof(f23792,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(forward_demodulation,[],[f22664,f21703])).
fof(f22664,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f5273])).
fof(f5273,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f617,f613,f610,f5191,f484])).
fof(f23779,plain,(
  $false | ($spl0 | $spl82)),
  inference(subsumption_resolution,[],[f23778,f23619])).
fof(f23778,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f23777,f21703])).
fof(f23777,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | ($spl0 | $spl82)),
  inference(forward_demodulation,[],[f22659,f21703])).
fof(f22659,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) ) | ($spl0 | $spl82)),
  inference(backward_demodulation,[],[f21703,f3865])).
fof(f3865,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1956,f1474])).
fof(f23728,plain,(
  $false | ($spl3 | $spl5 | $spl72 | $spl74 | $spl82)),
  inference(subsumption_resolution,[],[f22628,f23561])).
fof(f23561,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | ($spl72 | $spl74 | $spl82)),
  inference(subsumption_resolution,[],[f22188,f21703])).
fof(f22188,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | ($spl72 | $spl74 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17107])).
fof(f17107,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | ($spl72 | $spl74)),
  inference(superposition,[],[f13480,f405])).
fof(f22628,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) | ($spl3 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f3090])).
fof(f3090,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))))) | ($spl3 | $spl5)),
  inference(forward_demodulation,[],[f3087,f405])).
fof(f3087,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK14))))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f591,f3073,f450])).
fof(f3073,plain,(
  s('type.num.num',sK15) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK14))) | ($spl3 | $spl5)),
  inference(forward_demodulation,[],[f3026,f333])).
fof(f3026,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK14))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f589,f591,f450])).
fof(f23727,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23726,f23318])).
fof(f23726,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23725,f21703])).
fof(f23725,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23724,f21703])).
fof(f23724,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22626,f21703])).
fof(f22626,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0') | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2912])).
fof(f2912,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0') | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f321,f2608,f1474])).
fof(f23723,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23722,f649])).
fof(f23722,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23721,f21703])).
fof(f23721,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22625,f21703])).
fof(f22625,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2910])).
fof(f2910,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f321,f2608,f1438])).
fof(f23720,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23719,f23315])).
fof(f23719,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23718,f21703])).
fof(f23718,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23717,f21703])).
fof(f23717,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22624,f21703])).
fof(f22624,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2908])).
fof(f2908,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f2608,f2608,f1362])).
fof(f23716,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23715,f23316])).
fof(f23715,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23714,f21703])).
fof(f23714,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23713,f21703])).
fof(f23713,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22623,f21703])).
fof(f22623,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0') | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2907])).
fof(f2907,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0') | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f592,f2608,f1362])).
fof(f23712,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23711,f23315])).
fof(f23711,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23710,f21703])).
fof(f23710,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23709,f21703])).
fof(f23709,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22622,f21703])).
fof(f22622,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2904])).
fof(f2904,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f592,f2608,f1362])).
fof(f23708,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23707,f647])).
fof(f23707,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22621,f21703])).
fof(f22621,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2899])).
fof(f2899,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f2608,f2608,f1313])).
fof(f23706,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23705,f647])).
fof(f23705,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22620,f21703])).
fof(f22620,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2898])).
fof(f2898,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f592,f2608,f1313])).
fof(f23704,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23703,f648])).
fof(f23703,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22619,f21703])).
fof(f22619,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0') | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2892])).
fof(f2892,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0') | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f592,f2608,f1313])).
fof(f23702,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23701,f21840])).
fof(f23701,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23700,f21703])).
fof(f23700,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22618,f21703])).
fof(f22618,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2891])).
fof(f2891,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f321,f2608,f1237])).
fof(f23699,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23698,f646])).
fof(f23698,plain,(
  ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22617,f21703])).
fof(f22617,plain,(
  ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2889])).
fof(f2889,plain,(
  ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f321,f2608,f1207])).
fof(f23697,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23696,f642])).
fof(f23696,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22616,f21703])).
fof(f22616,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2887])).
fof(f2887,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f321,f2608,f1151])).
fof(f23695,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23694,f641])).
fof(f23694,plain,(
  ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22615,f21703])).
fof(f22615,plain,(
  ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2885])).
fof(f2885,plain,(
  ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f321,f2608,f1129])).
fof(f23690,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23689,f650])).
fof(f23689,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23688,f21703])).
fof(f23688,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22613,f21703])).
fof(f22613,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2883])).
fof(f2883,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f2608,f764])).
fof(f23687,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23686,f650])).
fof(f23686,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23685,f21703])).
fof(f23685,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22612,f21703])).
fof(f22612,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2882])).
fof(f2882,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f2608,f757])).
fof(f23684,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23683,f23278])).
fof(f23683,plain,(
  sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23682,f21703])).
fof(f23682,plain,(
  sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22611,f21703])).
fof(f22611,plain,(
  sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2881])).
fof(f2881,plain,(
  sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f2608,f705])).
fof(f23681,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23680,f23278])).
fof(f23680,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23679,f21703])).
fof(f23679,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23678,f21703])).
fof(f23678,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22610,f21703])).
fof(f22610,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2880])).
fof(f2880,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f2608,f704])).
fof(f23677,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23676,f21800])).
fof(f23676,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23675,f21703])).
fof(f23675,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22609,f21703])).
fof(f22609,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2751])).
fof(f2751,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f668,f2608,f501])).
fof(f23674,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23673,f1843])).
fof(f23673,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23672,f21703])).
fof(f23672,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22608,f21703])).
fof(f22608,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2749])).
fof(f2749,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0') | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f668,f2608,f501])).
fof(f23671,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23670,f23280])).
fof(f23670,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23669,f21703])).
fof(f23669,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22607,f21703])).
fof(f22607,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2686])).
fof(f2686,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f619,f614,f610,f2608,f485])).
fof(f23668,plain,(
  $false | ($spl0 | $spl3 | $spl82)),
  inference(subsumption_resolution,[],[f23667,f23280])).
fof(f23667,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23666,f21703])).
fof(f23666,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f23665,f21703])).
fof(f23665,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl82)),
  inference(forward_demodulation,[],[f22606,f21703])).
fof(f22606,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0') | ($spl0 | $spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2674])).
fof(f2674,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0') | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f617,f613,f610,f2608,f484])).
fof(f23596,plain,(
  $false | ($spl3 | $spl5 | $spl72 | $spl74 | $spl82)),
  inference(subsumption_resolution,[],[f22521,f23561])).
fof(f22521,plain,(
  s('type.num.num',sK15) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f3072])).
fof(f23595,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f22520,f21703])).
fof(f22520,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2572])).
fof(f23590,plain,(
  $false | ($spl3 | $spl72 | $spl74 | $spl82)),
  inference(subsumption_resolution,[],[f22511,f21703])).
fof(f22511,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X0)))) ) | ($spl3 | $spl72 | $spl74 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17092])).
fof(f17092,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl3 | $spl72 | $spl74)),
  inference(unit_resulting_resolution,[],[f2572,f13480])).
fof(f23589,plain,(
  $false | ($spl3 | $spl72 | $spl74 | $spl82)),
  inference(subsumption_resolution,[],[f22510,f21703])).
fof(f22510,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK14) | ($spl3 | $spl72 | $spl74 | $spl82)),
  inference(backward_demodulation,[],[f21703,f17087])).
fof(f17087,plain,(
  s('type.num.num',sK14) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl3 | $spl72 | $spl74)),
  inference(unit_resulting_resolution,[],[f589,f13480])).
fof(f23584,plain,(
  $false | ($spl3 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22502,f21703])).
fof(f22502,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) | ($spl3 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f19415])).
fof(f19415,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f3088,f591,f3041])).
fof(f3088,plain,(
  s('type.num.num',sK15) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))) | ($spl3 | $spl5)),
  inference(superposition,[],[f3073,f405])).
fof(f23583,plain,(
  $false | ($spl3 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22501,f21703])).
fof(f22501,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) | ($spl3 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f3116])).
fof(f3116,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num',sK14))) | ($spl3 | $spl5)),
  inference(forward_demodulation,[],[f3100,f333])).
fof(f3100,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num',sK14))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f589,f3074,f450])).
fof(f23582,plain,(
  $false | ($spl3 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22500,f21703])).
fof(f22500,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) | ($spl3 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f19564])).
fof(f19564,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))))) ) | ($spl3 | $spl5)),
  inference(forward_demodulation,[],[f19424,f333])).
fof(f19424,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15)))))) ) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f2572,f3074,f3041])).
fof(f23581,plain,(
  $false | ($spl3 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22499,f21703])).
fof(f22499,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | ($spl3 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f19560])).
fof(f19560,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | ($spl3 | $spl5)),
  inference(forward_demodulation,[],[f19427,f405])).
fof(f19427,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num',sK15))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f3088,f3074,f3041])).
fof(f23580,plain,(
  $false | ($spl3 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22498,f21703])).
fof(f22498,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) | ($spl3 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f3117])).
fof(f3117,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X0)))))) ) | ($spl3 | $spl5)),
  inference(forward_demodulation,[],[f3099,f333])).
fof(f3099,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X0)))))) ) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f2572,f3074,f450])).
fof(f23579,plain,(
  $false | ($spl3 | $spl5 | $spl82)),
  inference(subsumption_resolution,[],[f22497,f21703])).
fof(f22497,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | ($spl3 | $spl5 | $spl82)),
  inference(backward_demodulation,[],[f21703,f3115])).
fof(f3115,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))))) | ($spl3 | $spl5)),
  inference(forward_demodulation,[],[f3114,f405])).
fof(f3114,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num',sK15))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))))) | ($spl3 | $spl5)),
  inference(forward_demodulation,[],[f3101,f405])).
fof(f3101,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num',sK15))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK14))))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f3073,f3074,f450])).
fof(f23578,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f22496,f21703])).
fof(f22496,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2609])).
fof(f2609,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X0))),s('type.num.num',X1)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f2572,f420])).
fof(f23577,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f22484,f21703])).
fof(f22484,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2620])).
fof(f2620,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK14)))) ) | $spl3),
  inference(superposition,[],[f2572,f405])).
fof(f23572,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f22478,f21703])).
fof(f22478,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f2981])).
fof(f2981,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X1)))))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f2572,f421])).
fof(f23571,plain,(
  $false | ($spl3 | $spl82)),
  inference(subsumption_resolution,[],[f22477,f21703])).
fof(f22477,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl3 | $spl82)),
  inference(backward_demodulation,[],[f21703,f19131])).
fof(f19131,plain,(
  ( ! [X80,X81] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X80),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X81),s('type.num.num',sK14)))))) ) | $spl3),
  inference(superposition,[],[f2572,f2454])).
fof(f21704,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f591,f18124,f2035])).
fof(f21702,plain,(
  $false | ($spl3 | $spl82)),
  inference(unit_resulting_resolution,[],[f2572,f18124,f593])).
fof(f21700,plain,(
  $false | ($spl44 | $spl82)),
  inference(unit_resulting_resolution,[],[f1442,f18124,f6156])).
fof(f21698,plain,(
  $false | ($spl36 | $spl82)),
  inference(unit_resulting_resolution,[],[f1317,f18124,f6144])).
fof(f21696,plain,(
  $false | ($spl34 | $spl82)),
  inference(unit_resulting_resolution,[],[f1317,f18124,f6141])).
fof(f21694,plain,(
  $false | ($spl16 | $spl82)),
  inference(unit_resulting_resolution,[],[f733,f18124,f6113])).
fof(f21692,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f726,f18124,f577])).
fof(f21690,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f754,f18124,f576])).
fof(f21688,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5398,f5434,f18124,f574])).
fof(f5434,plain,(
  ( ! [X0,X1] : (sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f529])).
fof(f21686,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f793,f630,f18124,f574])).
fof(f21684,plain,(
  $false | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f793,f629,f18124,f574])).
fof(f629,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f586,f528])).
fof(f21682,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f793,f661,f18124,f574])).
fof(f21680,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f793,f648,f18124,f574])).
fof(f21678,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f794,f628,f18124,f574])).
fof(f21676,plain,(
  $false | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f794,f627,f18124,f574])).
fof(f627,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f586,f527])).
fof(f21674,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f794,f660,f18124,f574])).
fof(f21672,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f794,f647,f18124,f574])).
fof(f21670,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f793,f626,f18124,f574])).
fof(f21661,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f5481,f18124,f573])).
fof(f21659,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f634,f18124,f573])).
fof(f21657,plain,(
  $false | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f811,f633,f18124,f573])).
fof(f21655,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f662,f18124,f573])).
fof(f21653,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f649,f18124,f573])).
fof(f21651,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f812,f632,f18124,f573])).
fof(f21649,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f5480,f18124,f573])).
fof(f21647,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f631,f18124,f573])).
fof(f21638,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f815,f592,f18124,f18124,f550])).
fof(f21627,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1416,f592,f321,f18124,f550])).
fof(f21614,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f815,f592,f18124,f18124,f550])).
fof(f21603,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f815,f592,f321,f18124,f550])).
fof(f21591,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f18124,f18124,f549])).
fof(f21589,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f812,f321,f18124,f549])).
fof(f21580,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f18124,f18124,f549])).
fof(f21578,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1442,f321,f18124,f549])).
fof(f21569,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f592,f18124,f548])).
fof(f21560,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f592,f592,f18124,f547])).
fof(f21551,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1431,f18124,f545])).
fof(f21549,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f631,f18124,f592,f18124,f543])).
fof(f21547,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f631,f321,f592,f18124,f543])).
fof(f21527,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f631,f18124,f592,f18124,f543])).
fof(f21525,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f634,f321,f592,f18124,f543])).
fof(f21505,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f5481,f592,f18124,f542])).
fof(f21503,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f634,f592,f18124,f542])).
fof(f21501,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f5480,f592,f18124,f542])).
fof(f21499,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f631,f592,f18124,f542])).
fof(f21473,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f5481,f592,f18124,f541])).
fof(f21471,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f634,f592,f18124,f541])).
fof(f21469,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f5480,f592,f18124,f541])).
fof(f21467,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f631,f592,f18124,f541])).
fof(f21441,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5461,f5481,f18124,f18124,f540])).
fof(f21439,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f634,f18124,f18124,f540])).
fof(f21437,plain,(
  $false | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f811,f633,f18124,f18124,f540])).
fof(f21435,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f662,f18124,f18124,f540])).
fof(f21433,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f649,f18124,f18124,f540])).
fof(f21431,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f812,f632,f18124,f18124,f540])).
fof(f21429,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5463,f5480,f18124,f18124,f540])).
fof(f21427,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f811,f631,f18124,f18124,f540])).
fof(f21387,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5481,f5470,f18124,f18124,f540])).
fof(f21385,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5481,f5461,f18124,f18124,f540])).
fof(f21381,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f634,f812,f18124,f18124,f540])).
fof(f21379,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f634,f5463,f18124,f18124,f540])).
fof(f21377,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f634,f811,f18124,f18124,f540])).
fof(f21367,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5481,f5470,f321,f18124,f540])).
fof(f21363,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f634,f812,f321,f18124,f540])).
fof(f21344,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1416,f592,f18124,f537])).
fof(f21333,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1285,f592,f592,f18124,f533])).
fof(f21317,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f793,f18124,f18124,f532])).
fof(f21315,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f794,f321,f18124,f532])).
fof(f21306,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f793,f18124,f18124,f532])).
fof(f21304,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1317,f321,f18124,f532])).
fof(f21295,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f793,f18124,f18124,f531])).
fof(f21293,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f793,f321,f18124,f531])).
fof(f21284,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f793,f18124,f18124,f531])).
fof(f21282,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1317,f321,f18124,f531])).
fof(f21273,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1303,f18124,f528])).
fof(f21271,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1303,f18124,f527])).
fof(f21269,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f630,f592,f592,f18124,f526])).
fof(f21255,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5398,f5434,f592,f18124,f524])).
fof(f21253,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f793,f630,f592,f18124,f524])).
fof(f21248,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f793,f626,f592,f18124,f524])).
fof(f21222,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5434,f5399,f592,f18124,f523])).
fof(f21218,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f630,f794,f592,f18124,f523])).
fof(f21196,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1285,f592,f18124,f520])).
fof(f21182,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1285,f592,f18124,f519])).
fof(f21168,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f775,f592,f18124,f18124,f518])).
fof(f21156,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f775,f592,f321,f18124,f518])).
fof(f21143,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f775,f592,f18124,f18124,f518])).
fof(f21131,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f785,f592,f321,f18124,f518])).
fof(f21118,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f771,f18124,f18124,f18124,f515])).
fof(f21116,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f772,f321,f18124,f18124,f515])).
fof(f21108,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f771,f18124,f321,f18124,f515])).
fof(f21106,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1211,f321,f321,f18124,f515])).
fof(f21090,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f771,f18124,f18124,f18124,f515])).
fof(f21088,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f771,f321,f18124,f18124,f515])).
fof(f21080,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f771,f18124,f321,f18124,f515])).
fof(f21078,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f771,f321,f321,f18124,f515])).
fof(f21062,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f771,f18124,f18124,f18124,f515])).
fof(f21060,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f771,f321,f18124,f18124,f515])).
fof(f21052,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f772,f18124,f321,f18124,f515])).
fof(f21050,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f772,f321,f321,f18124,f515])).
fof(f21034,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1200,f18124,f510])).
fof(f21032,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f624,f592,f18124,f18124,f509])).
fof(f21022,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f624,f592,f321,f18124,f509])).
fof(f21010,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f624,f592,f18124,f18124,f509])).
fof(f21000,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f625,f592,f321,f18124,f509])).
fof(f20986,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5386,f5380,f18124,f18124,f505])).
fof(f20984,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f625,f772,f18124,f18124,f505])).
fof(f20982,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5385,f5378,f18124,f18124,f505])).
fof(f20980,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f624,f771,f18124,f18124,f505])).
fof(f20968,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5385,f5378,f321,f18124,f505])).
fof(f20966,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f624,f771,f321,f18124,f505])).
fof(f20946,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5386,f5380,f18124,f18124,f505])).
fof(f20944,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f625,f772,f18124,f18124,f505])).
fof(f20942,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5385,f5378,f18124,f18124,f505])).
fof(f20940,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f624,f771,f18124,f18124,f505])).
fof(f20928,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5386,f5380,f321,f18124,f505])).
fof(f20926,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f625,f772,f321,f18124,f505])).
fof(f20908,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f785,f592,f18124,f504])).
fof(f20896,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f775,f592,f18124,f503])).
fof(f20884,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f7461,f5218,f18124,f500])).
fof(f20882,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1070,f665,f18124,f500])).
fof(f20880,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f7441,f5218,f18124,f500])).
fof(f20878,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1071,f665,f18124,f500])).
fof(f20849,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f7637,f5221,f18124,f499])).
fof(f20847,plain,(
  $false | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f1100,f668,f18124,f499])).
fof(f20845,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1702,f670,f18124,f499])).
fof(f20843,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1702,f669,f18124,f499])).
fof(f20841,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f7642,f5221,f18124,f499])).
fof(f20839,plain,(
  $false | ($spl0 | $spl82)),
  inference(unit_resulting_resolution,[],[f1098,f668,f18124,f499])).
fof(f20837,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1700,f670,f18124,f499])).
fof(f20835,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1700,f669,f18124,f499])).
fof(f21724,plain,(
  $false | ($spl5 | $spl82)),
  inference(trivial_inequality_removal,[],[f20833])).
fof(f20833,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f7839,f18124,f499])).
fof(f21723,plain,(
  $false | ($spl5 | $spl82)),
  inference(trivial_inequality_removal,[],[f20832])).
fof(f20832,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f7267,f18124,f499])).
fof(f21722,plain,(
  $false | $spl82),
  inference(trivial_inequality_removal,[],[f20830])).
fof(f20830,plain,(
  s(bool,'F_0') != s(bool,'F_0') | $spl82),
  inference(unit_resulting_resolution,[],[f1182,f18124,f499])).
fof(f21721,plain,(
  $false | $spl82),
  inference(trivial_inequality_removal,[],[f20829])).
fof(f20829,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl82),
  inference(unit_resulting_resolution,[],[f1155,f18124,f499])).
fof(f20819,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1165,f18124,f497])).
fof(f20817,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1165,f18124,f496])).
fof(f20815,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1165,f18124,f495])).
fof(f20813,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1144,f18124,f491])).
fof(f20811,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f614,f592,f18124,f18124,f490])).
fof(f20801,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f614,f592,f321,f18124,f490])).
fof(f20789,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f614,f592,f18124,f18124,f490])).
fof(f20779,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f615,f592,f321,f18124,f490])).
fof(f20767,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1122,f18124,f487])).
fof(f20765,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f610,f592,f18124,f18124,f486])).
fof(f20755,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f610,f592,f321,f18124,f486])).
fof(f20743,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f610,f592,f18124,f18124,f486])).
fof(f20733,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f611,f592,f321,f18124,f486])).
fof(f20699,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f618,f5320,f5313,f5267,f18124,f483])).
fof(f20695,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f618,f614,f610,f1091,f18124,f483])).
fof(f20426,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1071,f18124,f592,f18124,f482])).
fof(f20424,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5272,f321,f592,f18124,f482])).
fof(f20376,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1071,f592,f18124,f18124,f482])).
fof(f20347,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f1071,f592,f321,f18124,f482])).
fof(f20326,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f768,f592,f18124,f470])).
fof(f20317,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f768,f592,f18124,f469])).
fof(f20308,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f726,f18124,f18124,f458])).
fof(f20306,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f726,f321,f18124,f458])).
fof(f20298,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f726,f18124,f18124,f458])).
fof(f20296,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f733,f321,f18124,f458])).
fof(f20288,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f726,f18124,f18124,f457])).
fof(f20286,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f726,f321,f18124,f457])).
fof(f20278,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f726,f18124,f18124,f457])).
fof(f20269,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f726,f18124,f18124,f456])).
fof(f20260,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f726,f18124,f18124,f456])).
fof(f20258,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f733,f321,f18124,f456])).
fof(f20250,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f678,f592,f18124,f443])).
fof(f20239,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f678,f592,f18124,f440])).
fof(f20228,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f682,f18124,f18124,f439])).
fof(f20226,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f682,f321,f18124,f439])).
fof(f20214,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f682,f18124,f18124,f439])).
fof(f20212,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f687,f321,f18124,f439])).
fof(f20200,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f714,f18124,f425])).
fof(f20198,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f714,f18124,f424])).
fof(f20196,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f18124,f5218,f18124,f417])).
fof(f20194,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f665,f18124,f417])).
fof(f20192,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f321,f5218,f18124,f417])).
fof(f20190,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f321,f665,f18124,f417])).
fof(f20186,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f18124,f5218,f18124,f417])).
fof(f20184,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f18124,f665,f18124,f417])).
fof(f20182,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f321,f5218,f18124,f417])).
fof(f20180,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f321,f665,f18124,f417])).
fof(f20172,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f592,f5221,f18124,f413])).
fof(f20166,plain,(
  $false | ($spl5 | $spl82)),
  inference(unit_resulting_resolution,[],[f5221,f18124,f347])).
fof(f20164,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f665,f18124,f344])).
fof(f20162,plain,(
  $false | $spl82),
  inference(unit_resulting_resolution,[],[f592,f18124])).
fof(f20159,plain,(
  ( ! [X14,X17,X15,X13] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X14))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X13))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15)))))) ) | $spl84),
  inference(cnf_transformation,[],[f20159_D])).
fof(f20159_D,plain,(
  ( ! [X14,X17,X15,X13] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X14))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X13))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15)))))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f20160,plain,(
  ( ! [X21,X19,X22,X20,X18] : (p(s(bool,X21)) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X19))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X18))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20)))))) )),
  inference(subsumption_resolution,[],[f20023,f343])).
fof(f20023,plain,(
  ( ! [X21,X19,X22,X20,X18] : (p(s(bool,X21)) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X19))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X18))) | s(bool,'T_0') = s(bool,X21) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20)))))) )),
  inference(superposition,[],[f1964,f959])).
fof(f20158,plain,(
  ( ! [X14,X17,X15,X13,X16] : (p(s(bool,X16)) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X14))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X13))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15)))))) )),
  inference(subsumption_resolution,[],[f20022,f343])).
fof(f20022,plain,(
  ( ! [X14,X17,X15,X13,X16] : (p(s(bool,X16)) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',X14))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X17),s('type.num.num',X13))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X15))))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f1964,f959])).
fof(f18123,plain,(
  ( ! [X24,X23,X21,X20] : (s('type.num.num',X21) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X20))))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X20),s('type.num.num',X21)))) ) | $spl80),
  inference(cnf_transformation,[],[f18123_D])).
fof(f18123_D,plain,(
  ( ! [X24,X23,X21,X20] : (s('type.num.num',X21) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X20))))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X20),s('type.num.num',X21)))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f18125,plain,(
  ( ! [X28,X26,X29,X27,X25] : (p(s(bool,X27)) | s('type.num.num',X26) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num',X25))))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X25),s('type.num.num',X26)))) )),
  inference(subsumption_resolution,[],[f18068,f343])).
fof(f18068,plain,(
  ( ! [X28,X26,X29,X27,X25] : (p(s(bool,X27)) | s('type.num.num',X26) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num',X25))))) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X25),s('type.num.num',X26)))) )),
  inference(superposition,[],[f2460,f959])).
fof(f18122,plain,(
  ( ! [X24,X23,X21,X22,X20] : (p(s(bool,X22)) | s('type.num.num',X21) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X20))))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X20),s('type.num.num',X21)))) )),
  inference(subsumption_resolution,[],[f18067,f343])).
fof(f18067,plain,(
  ( ! [X24,X23,X21,X22,X20] : (p(s(bool,X22)) | s('type.num.num',X21) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num',X20))))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X20),s('type.num.num',X21))) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f2460,f959])).
fof(f13471,plain,(
  $false | ($spl6 | $spl72 | $spl74)),
  inference(subsumption_resolution,[],[f13470,f12280])).
fof(f12280,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | ($spl6 | $spl74)),
  inference(condensation,[],[f12279])).
fof(f12279,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X1) = s('type.num.num',X2)) ) | ($spl6 | $spl74)),
  inference(subsumption_resolution,[],[f11883,f11880])).
fof(f11880,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11879,f11867])).
fof(f11867,plain,(
  ( ! [X65] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f9922,f2605])).
fof(f9922,plain,(
  ( ! [X64,X65] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X64)),X65))))) ) | $spl74),
  inference(forward_demodulation,[],[f9921,f9887])).
fof(f9921,plain,(
  ( ! [X64,X65] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X64))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X64)),X65))))) ) | $spl74),
  inference(subsumption_resolution,[],[f9920,f321])).
fof(f9920,plain,(
  ( ! [X64,X65] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X64))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X64)),X65))))) ) | $spl74),
  inference(forward_demodulation,[],[f9919,f669])).
fof(f9919,plain,(
  ( ! [X64,X65] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X65),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X64))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X64)),X65))))) ) | $spl74),
  inference(forward_demodulation,[],[f9846,f332])).
fof(f9846,plain,(
  ( ! [X64,X65] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X64)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X64))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X65),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X64)),X65))))) ) | $spl74),
  inference(backward_demodulation,[],[f9826,f9630])).
fof(f11879,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl6),
  inference(forward_demodulation,[],[f4468,f2605])).
fof(f11883,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X1) = s('type.num.num',X2)) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f450])).
fof(f13456,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13455,f12280])).
fof(f13455,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK14) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f589,f12280])).
fof(f13444,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13443,f12280])).
fof(f13443,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2572,f11880])).
fof(f13424,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13423,f12280])).
fof(f13423,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2609,f11880])).
fof(f13422,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13421,f12280])).
fof(f13421,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2620,f11880])).
fof(f13420,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f2625,f12681])).
fof(f12681,plain,(
  ( ! [X116] : (s(bool,'T_0') = s(bool,X116)) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(global_subsumption,[],[f320,f319,f318,f321,f328,f329,f330,f332,f336,f344,f343,f406,f407,f417,f414,f413,f425,f424,f594,f443,f440,f439,f438,f448,f449,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f591,f586,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f2046,f2050,f2052,f2059,f2087,f2136,f2259,f2260,f2190,f2192,f2193,f2310,f2311,f2312,f2379,f2438,f2454,f2535,f2459,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3078,f3031,f3080,f3036,f3037,f3038,f3039,f3040,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3865,f3860,f3859,f3854,f3849,f3844,f3843,f3842,f3841,f3840,f3839,f3838,f3837,f3836,f3835,f3834,f3833,f3832,f3831,f3830,f3829,f3828,f3827,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3672,f3671,f3666,f3664,f3662,f3657,f3654,f3649,f3648,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3585,f3580,f3575,f3568,f3563,f3558,f3553,f3547,f3543,f3539,f3535,f3529,f3525,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f3982,f3975,f4475,f4468,f5191,f5656,f5726,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6167,f6170,f6173,f6176,f6179,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6213,f5868,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6260,f6262,f6264,f6266,f6268,f4353,f2542,f2386,f2267,f1976,f2038,f2268,f2387,f2543,f2414,f2026,f2460,f2051,f2047,f2043,f2037,f593,f7277,f7280,f7282,f7284,f7285,f7286,f7299,f7301,f7302,f7410,f7307,f7415,f7425,f7476,f7479,f7482,f7484,f7485,f7486,f7500,f7502,f7503,f7613,f7508,f7618,f7628,f7644,f7662,f7666,f7667,f7670,f7775,f7672,f7673,f7674,f7675,f7676,f7677,f7794,f7795,f7767,f7769,f8194,f8197,f8202,f8203,f8284,f8285,f8266,f8268,f8346,f8349,f8354,f8355,f8437,f8438,f8418,f8420,f8831,f8826,f8825,f8820,f8815,f8810,f8809,f8808,f8807,f8806,f8805,f8804,f8803,f8802,f8801,f8800,f8799,f8798,f8797,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8783,f8782,f8778,f8775,f8774,f8766,f8765,f8756,f8731,f8730,f8729,f8725,f8724,f8720,f8719,f8718,f8709,f8695,f8689,f8686,f8685,f8681,f8680,f8679,f8678,f8677,f8673,f8671,f8665,f8664,f8655,f8654,f8644,f8641,f8640,f8639,f8638,f8637,f8636,f8630,f8628,f8626,f8623,f8622,f8621,f8620,f8619,f8618,f8617,f8616,f8615,f8614,f8613,f8612,f8611,f8610,f8600,f8599,f8588,f8587,f8577,f8576,f8565,f8564,f8559,f8556,f8553,f8550,f8545,f8542,f8539,f8536,f8532,f8530,f8528,f8526,f8522,f8520,f8518,f8516,f8515,f8508,f8503,f8497,f8496,f8489,f8470,f8469,f8468,f8467,f8465,f8464,f8463,f8462,f8461,f8454,f8881,f8887,f9177,f9185,f9189,f9193,f9143,f9320,f9317,f9329,f9334,f9335,f9337,f9338,f9341,f9345,f9350,f9351,f9353,f9354,f9357,f9368,f9367,f9408,f9445,f9448,f9453,f9454,f9555,f9556,f9520,f9522,f9526,f9527,f9578,f9577,f9575,f9574,f9573,f9612,f9613,f9615,f9618,f9619,f9623,f9624,f9626,f9627,f9629,f9630,f9681,f9821,f9684,f9685,f9686,f9688,f9690,f9692,f9698,f9699,f9706,f9707,f9708,f9709,f9710,f9711,f9712,f9713,f9714,f9715,f9716,f9729,f9730,f9732,f9735,f9736,f9740,f9741,f9743,f9744,f9829,f9747,f9798,f9799,f9801,f9802,f9803,f9805,f9807,f9809,f9815,f9816,f9826,f9887,f9910,f9922,f9966,f2605,f1997,f2035,f1985,f1984,f5727,f5869,f3017,f3016,f592,f348,f347,f2053,f6212,f3225,f9321,f9318,f7839,f7642,f7637,f7463,f7461,f7460,f7459,f7444,f7443,f7441,f7267,f7257,f7256,f7222,f7221,f7219,f7210,f5500,f5499,f5493,f5492,f5491,f5489,f5487,f5486,f5485,f5482,f5481,f5480,f5477,f5470,f5464,f5463,f5461,f5456,f5455,f5449,f5448,f5447,f5446,f5445,f5442,f5440,f5435,f5434,f5428,f5427,f5420,f5399,f5398,f5397,f5396,f5392,f5391,f5387,f5386,f5385,f5382,f5380,f5378,f5377,f5376,f5374,f5373,f5371,f5370,f5357,f5356,f5355,f5354,f5339,f5338,f5322,f5321,f5320,f5315,f5314,f5313,f5308,f5303,f5302,f5277,f5274,f5272,f5267,f5263,f5262,f5257,f5253,f5249,f5246,f5245,f5239,f5234,f5233,f5229,f5228,f5227,f5226,f5225,f5223,f5221,f5218,f3074,f7501,f7300,f9310,f5192,f3111,f3110,f7458,f7442,f7255,f7220,f6211,f6210,f6209,f6208,f6207,f6206,f5539,f5537,f5535,f5534,f5531,f5526,f5525,f5519,f5518,f5516,f5513,f5510,f5509,f5508,f5507,f5506,f5505,f5375,f5372,f5301,f5273,f3259,f3258,f3257,f3256,f3255,f3254,f1940,f1897,f1890,f1866,f1852,f1839,f1821,f1813,f1808,f1805,f1795,f1784,f1783,f1782,f1781,f1780,f1779,f1587,f1543,f1537,f1491,f1487,f1475,f1474,f1438,f1423,f1399,f1389,f1380,f1368,f1362,f1342,f1330,f1313,f1292,f1282,f1270,f1237,f1207,f1187,f1151,f1129,f1110,f1100,f1098,f1079,f1078,f1064,f1048,f1031,f1011,f946,f913,f910,f866,f862,f858,f841,f838,f825,f817,f807,f799,f764,f757,f749,f736,f723,f705,f704,f668,f638,f636,f633,f629,f627,f623,f621,f619,f617,f613,f609,f607,f606,f9364,f9342,f9326,f9089,f5196,f5062,f5052,f5045,f4973,f4820,f4815,f4814,f4809,f4804,f4799,f4798,f4797,f4796,f4795,f4794,f4793,f4792,f4791,f4790,f4789,f4788,f4787,f4786,f4785,f4784,f4783,f4782,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4633,f4632,f4627,f4625,f4623,f4620,f4619,f4618,f4617,f4616,f4615,f4614,f4613,f4612,f4611,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4561,f4558,f4555,f4550,f4547,f4544,f4541,f4537,f4535,f4533,f4531,f4527,f4525,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4474,f4327,f4322,f4321,f4316,f4311,f4306,f4305,f4304,f4303,f4302,f4301,f4300,f4299,f4298,f4297,f4296,f4295,f4294,f4293,f4292,f4291,f4290,f4289,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4140,f4139,f4134,f4132,f4130,f4127,f4126,f4125,f4124,f4123,f4122,f4121,f4120,f4119,f4118,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4068,f4065,f4062,f4057,f4054,f4051,f4048,f4044,f4042,f4040,f4038,f4034,f4032,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3981,f3041,f3032,f2139,f1982,f1964,f452,f451,f450,f419,f405,f11866,f11867,f11875,f11880,f12280,f12395,f12289,f12290,f12291,f12292,f12293,f12295,f12297,f12302,f12303,f12304,f12306,f12307,f12308,f12309,f12310,f12312,f12313,f12315,f12316,f12324,f12325,f12328,f12329,f12330,f12331,f12333,f12334,f12335,f12336,f12337,f12338,f12340,f12341,f12345,f12346,f12347,f12348,f12349,f12350,f12351,f12352,f12356,f12357,f12358,f12359,f12361,f12362,f12363,f12364,f12365,f12366,f12368,f12369,f12374,f12375,f12376,f12377,f12378,f12381,f12382,f12383,f12384,f12392,f12393,f11894,f11895,f12442,f11897,f11898,f11899,f11900,f12443,f11902,f11903,f11904,f12444,f11908,f11909,f12449,f12451,f12453,f12455,f11914,f12457,f11916,f11917,f11918,f12459,f11920,f11921,f11922,f11923,f12460,f12461,f11938,f11939,f11940,f11941,f11942,f12465,f11944,f11945,f12467,f12470,f11948,f12471,f11950,f12472,f11952,f11953,f12473,f11956,f11957,f12474,f11963,f11964,f12479,f11966,f11967,f11968,f12480,f12481,f11975,f11976,f11977,f11978,f12482,f11981,f12483,f11984,f11985,f12484,f11987,f11988,f11991,f11992,f11995,f11996,f11999,f12608,f12634,f12640,f12680])).
fof(f12680,plain,(
  ( ! [X116,X114,X115] : (sP2(X114,X115,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | s(bool,X114) = s(bool,X116) | s(bool,'T_0') = s(bool,X116)) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12263,f12280])).
fof(f12263,plain,(
  ( ! [X116,X114,X115] : (sP2(X114,X115,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | s(bool,X114) = s(bool,X116) | s(bool,'T_0') = s(bool,X116)) ) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f6206])).
fof(f12640,plain,(
  ( ! [X83,X82] : (sP2('const.divides.divides_2'(s('type.num.num',X82),s('type.num.num',X82)),X83,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12231,f12280])).
fof(f12231,plain,(
  ( ! [X83,X82] : (sP2('const.divides.divides_2'(s('type.num.num',X82),s('type.num.num',X82)),X83,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f3254])).
fof(f12634,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12633,f12315])).
fof(f12633,plain,(
  ( ! [X0,X1] : (~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0) | sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12632,f330])).
fof(f12632,plain,(
  ( ! [X0,X1] : (~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),X0) | sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12631,f12280])).
fof(f12631,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12630,f330])).
fof(f12630,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12629,f12280])).
fof(f12629,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12628,f12312])).
fof(f12628,plain,(
  ( ! [X0,X1] : (~sP6(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X1) | sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12225,f12280])).
fof(f12225,plain,(
  ( ! [X0,X1] : (~sP6(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X1) | sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f1866])).
fof(f12608,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12607,f12312])).
fof(f12607,plain,(
  ( ! [X0] : (~sP6('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0) | p(s(bool,X0))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12193,f12280])).
fof(f12193,plain,(
  ( ! [X0] : (~sP6('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0) | p(s(bool,X0))) ) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f1282])).
fof(f11999,plain,(
  ( ! [X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)),X3)) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4299])).
fof(f11996,plain,(
  ( ! [X2,X0] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0',X2)) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4296])).
fof(f11995,plain,(
  ( ! [X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X3)))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4295])).
fof(f11992,plain,(
  ( ! [X2,X0] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'T_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4292])).
fof(f11991,plain,(
  ( ! [X2,X0,X3] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)),X3)) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4291])).
fof(f11988,plain,(
  ( ! [X2,X0] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0',X2)) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4288])).
fof(f11987,plain,(
  ( ! [X2,X0] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4287])).
fof(f12484,plain,(
  ( ! [X2,X0] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11986,f11880])).
fof(f11986,plain,(
  ( ! [X2,X0,X3] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4286])).
fof(f11985,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','T_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4285])).
fof(f11984,plain,(
  ( ! [X0] : (~sP13('T_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4279])).
fof(f12483,plain,(
  ( ! [X4,X2,X0] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X4)) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11983,f11880])).
fof(f11983,plain,(
  ( ! [X4,X2,X0,X3] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),X4)) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4278])).
fof(f11981,plain,(
  ( ! [X0] : (sP13('F_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4271])).
fof(f12482,plain,(
  ( ! [X2,X0] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11979,f11880])).
fof(f11979,plain,(
  ( ! [X2,X0,X3] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4262])).
fof(f11978,plain,(
  ( ! [X0] : (~sP12('T_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4261])).
fof(f11977,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','T_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4252])).
fof(f11976,plain,(
  ( ! [X2,X0] : (~sP13('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2)) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4227])).
fof(f11975,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4226])).
fof(f12481,plain,(
  ( ! [X4,X2,X0] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X4)) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11974,f11880])).
fof(f11974,plain,(
  ( ! [X4,X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),X4)) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4225])).
fof(f12480,plain,(
  ( ! [X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11972,f11880])).
fof(f11972,plain,(
  ( ! [X4,X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4220])).
fof(f11968,plain,(
  ( ! [X0] : (~sP10('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4205])).
fof(f11967,plain,(
  ( ! [X2,X0] : (~sP11('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2)) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4191])).
fof(f11966,plain,(
  ( ! [X0,X1] : (~sP11('F_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4185])).
fof(f12479,plain,(
  ( ! [X2,X0] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11965,f11880])).
fof(f11965,plain,(
  ( ! [X2,X0,X3] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4183])).
fof(f11964,plain,(
  ( ! [X0] : (~sP9('F_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4182])).
fof(f11963,plain,(
  ( ! [X0] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4179])).
fof(f12474,plain,(
  ( ! [X2,X0] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11958,f11880])).
fof(f11958,plain,(
  ( ! [X2,X0,X3] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4172])).
fof(f11957,plain,(
  ( ! [X0] : (sP9('T_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4170])).
fof(f11956,plain,(
  ( ! [X0] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4165])).
fof(f12473,plain,(
  ( ! [X2,X0] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11954,f11880])).
fof(f11954,plain,(
  ( ! [X2,X0,X3] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4156])).
fof(f11953,plain,(
  ( ! [X0] : (~sP8('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4155])).
fof(f11952,plain,(
  ( ! [X0] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4146])).
fof(f12472,plain,(
  ( ! [X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11951,f11880])).
fof(f11951,plain,(
  ( ! [X4,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4144])).
fof(f11950,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4143])).
fof(f12471,plain,(
  ( ! [X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11949,f11880])).
fof(f11949,plain,(
  ( ! [X4,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4142])).
fof(f11948,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4141])).
fof(f12470,plain,(
  ( ! [X2,X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12469,f330])).
fof(f12469,plain,(
  ( ! [X2,X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12468,f12280])).
fof(f12468,plain,(
  ( ! [X2,X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f11947,f11880])).
fof(f11947,plain,(
  ( ! [X2,X0,X3] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4140])).
fof(f12467,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12466,f330])).
fof(f12466,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f11946,f12280])).
fof(f11946,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4139])).
fof(f11945,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4134])).
fof(f11944,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4132])).
fof(f12465,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12464,f330])).
fof(f12464,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f11943,f12280])).
fof(f11943,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4130])).
fof(f11942,plain,(
  ( ! [X2,X0] : (~sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0',X2)) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4127])).
fof(f11941,plain,(
  ( ! [X2,X0] : (~sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4126])).
fof(f11940,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','T_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4125])).
fof(f11939,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4124])).
fof(f11938,plain,(
  ( ! [X2,X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4123])).
fof(f12461,plain,(
  ( ! [X2,X0] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11928,f11880])).
fof(f11928,plain,(
  ( ! [X2,X0,X3] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4106])).
fof(f12460,plain,(
  ( ! [X2,X0] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11924,f11880])).
fof(f11924,plain,(
  ( ! [X2,X0,X3] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4087])).
fof(f11923,plain,(
  ( ! [X0] : (~sP6('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4086])).
fof(f11922,plain,(
  ( ! [X0] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4077])).
fof(f11921,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4076])).
fof(f11920,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4071])).
fof(f12459,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12458,f330])).
fof(f12458,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f11919,f12280])).
fof(f11919,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4068])).
fof(f11918,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4065])).
fof(f11917,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4062])).
fof(f11916,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4057])).
fof(f12457,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12456,f330])).
fof(f12456,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f11915,f12280])).
fof(f11915,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4054])).
fof(f11914,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4051])).
fof(f12455,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12454,f330])).
fof(f12454,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f11913,f12280])).
fof(f11913,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4048])).
fof(f12453,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12452,f330])).
fof(f12452,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f11912,f12280])).
fof(f11912,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4044])).
fof(f12451,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12450,f330])).
fof(f12450,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f11911,f12280])).
fof(f11911,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4042])).
fof(f12449,plain,(
  ( ! [X0] : (sP7('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12448,f330])).
fof(f12448,plain,(
  ( ! [X0] : (sP7('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f11910,f12280])).
fof(f11910,plain,(
  ( ! [X0] : (sP7('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4040])).
fof(f11909,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4038])).
fof(f11908,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4034])).
fof(f12444,plain,(
  ( ! [X2,X0] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11905,f11880])).
fof(f11905,plain,(
  ( ! [X2,X0,X3] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4028])).
fof(f11904,plain,(
  ( ! [X0] : (~sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4027])).
fof(f11903,plain,(
  ( ! [X2,X0] : (~sP3('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2)) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4020])).
fof(f11902,plain,(
  ( ! [X0,X1] : (~sP3('F_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4015])).
fof(f12443,plain,(
  ( ! [X2,X0,X3] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11901,f11880])).
fof(f11901,plain,(
  ( ! [X4,X2,X0,X3] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4011])).
fof(f11900,plain,(
  ( ! [X0,X1] : (sP2('T_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4010])).
fof(f11899,plain,(
  ( ! [X2,X0] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'T_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4005])).
fof(f11898,plain,(
  ( ! [X0] : (sP1('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f3990])).
fof(f11897,plain,(
  ( ! [X0] : (sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f3989])).
fof(f12442,plain,(
  ( ! [X2,X0] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f11896,f11880])).
fof(f11896,plain,(
  ( ! [X2,X0,X3] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f3988])).
fof(f11895,plain,(
  ( ! [X0] : (~sP1('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f3987])).
fof(f11894,plain,(
  ( ! [X0] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f3985])).
fof(f12393,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f3225])).
fof(f12392,plain,(
  ( ! [X144,X145,X143] : (s('type.num.num',X144) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X143),s('type.num.num','const.num.|48|_0'))) | s(bool,X145) = s(bool,'const.divides.divides_2'(s('type.num.num',X143),s('type.num.num',X144))) | s(bool,'T_0') = s(bool,X145)) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f6212])).
fof(f12384,plain,(
  ( ! [X0] : (sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7460])).
fof(f12383,plain,(
  ( ! [X0] : (sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7459])).
fof(f12382,plain,(
  ( ! [X0] : (sP7('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7444])).
fof(f12381,plain,(
  ( ! [X0] : (sP7('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7443])).
fof(f12378,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7257])).
fof(f12377,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7256])).
fof(f12376,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7222])).
fof(f12375,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7221])).
fof(f12374,plain,(
  sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7219])).
fof(f12369,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0',X0)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5492])).
fof(f12368,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'F_0')) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5491])).
fof(f12366,plain,(
  ( ! [X0] : (sP13('T_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5487])).
fof(f12365,plain,(
  sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5486])).
fof(f12364,plain,(
  sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','T_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5485])).
fof(f12363,plain,(
  sP13('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5482])).
fof(f12362,plain,(
  ( ! [X0,X1] : (sP12('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,X1)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5481])).
fof(f12361,plain,(
  ( ! [X0,X1] : (sP12(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5480])).
fof(f12359,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5470])).
fof(f12358,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5464])).
fof(f12357,plain,(
  ( ! [X0] : (~sP13('F_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5463])).
fof(f12356,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'F_0')) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5461])).
fof(f12352,plain,(
  sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5448])).
fof(f12351,plain,(
  sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5447])).
fof(f12350,plain,(
  sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5446])).
fof(f12349,plain,(
  sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5445])).
fof(f12348,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5442])).
fof(f12347,plain,(
  sP11('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5440])).
fof(f12346,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5435])).
fof(f12345,plain,(
  ( ! [X0,X1] : (sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,X1)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5434])).
fof(f12341,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5399])).
fof(f12340,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'T_0')) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5398])).
fof(f12338,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5396])).
fof(f12337,plain,(
  ( ! [X0] : (sP9('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5392])).
fof(f12336,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5391])).
fof(f12335,plain,(
  ( ! [X0] : (sP9('F_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5387])).
fof(f12334,plain,(
  ( ! [X0,X1] : (sP8('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,X1)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5386])).
fof(f12333,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X1)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5385])).
fof(f12331,plain,(
  ( ! [X0] : (~sP9('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5380])).
fof(f12330,plain,(
  ( ! [X0] : (~sP9('T_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5378])).
fof(f12329,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5377])).
fof(f12328,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5376])).
fof(f12325,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','F_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5371])).
fof(f12324,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','T_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5370])).
fof(f12316,plain,(
  ( ! [X0,X1] : (sP5('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,X1)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5321])).
fof(f12315,plain,(
  ( ! [X0,X1] : (sP5(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X1)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5320])).
fof(f12313,plain,(
  ( ! [X0,X1] : (sP6('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,X1)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5314])).
fof(f12312,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X1)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5313])).
fof(f12310,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0')) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5303])).
fof(f12309,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5302])).
fof(f12308,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5277])).
fof(f12307,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5274])).
fof(f12306,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5272])).
fof(f12304,plain,(
  ( ! [X0] : (sP3(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5263])).
fof(f12303,plain,(
  ( ! [X0] : (sP3(X0,'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5262])).
fof(f12302,plain,(
  ( ! [X0] : (sP3(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5257])).
fof(f12297,plain,(
  ( ! [X0] : (~sP2('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0',X0)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5239])).
fof(f12295,plain,(
  ( ! [X0] : (~sP2(X0,'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5233])).
fof(f12293,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5228])).
fof(f12292,plain,(
  sP1('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5227])).
fof(f12291,plain,(
  ~sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5226])).
fof(f12290,plain,(
  ~sP1('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5225])).
fof(f12289,plain,(
  ~sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5223])).
fof(f12395,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f12285,f12280])).
fof(f12285,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f2605])).
fof(f11875,plain,(
  ( ! [X103,X102,X100] : (s('type.num.num',X103) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X100),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X102),s('type.num.num',X103))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X102)) ) | $spl6),
  inference(forward_demodulation,[],[f7618,f2605])).
fof(f11866,plain,(
  s('type.num.num',sK15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl6)),
  inference(forward_demodulation,[],[f2052,f2605])).
fof(f4032,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f608,f1959,f483])).
fof(f4040,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f616,f612,f609,f1959,f483])).
fof(f4042,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f609,f1959,f483])).
fof(f4044,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f643,f642,f609,f1959,f483])).
fof(f4048,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f656,f655,f609,f1959,f483])).
fof(f4054,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f641,f1959,f483])).
fof(f4068,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f654,f1959,f483])).
fof(f4118,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f668,f1959,f499])).
fof(f4121,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f668,f1959,f499])).
fof(f4130,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f321,f623,f1959,f505])).
fof(f4139,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f321,f623,f1959,f505])).
fof(f4140,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1959,f623,f1959,f505])).
fof(f4289,plain,(
  ( ! [X2,X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X2)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f633,f1959,f573])).
fof(f4293,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f627,f1959,f574])).
fof(f4297,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X2)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f629,f1959,f574])).
fof(f4302,plain,(
  ( ! [X2,X0,X1] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1959,f749])).
fof(f4303,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1959,f799])).
fof(f4304,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1959,f807])).
fof(f4305,plain,(
  ( ! [X2,X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),X2)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1959,f825])).
fof(f4306,plain,(
  ( ! [X0,X1] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1959,f1129])).
fof(f4311,plain,(
  ( ! [X0,X1] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1959,f1151])).
fof(f4316,plain,(
  ( ! [X0,X1] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1959,f1207])).
fof(f4321,plain,(
  ( ! [X0,X1] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1959,f1237])).
fof(f4322,plain,(
  ( ! [X0,X1] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))),'F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1959,f1438])).
fof(f4327,plain,(
  ( ! [X0,X1] : (~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1959,f1474])).
fof(f4525,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f608,f1987,f483])).
fof(f4533,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f616,f612,f609,f1987,f483])).
fof(f4535,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f609,f1987,f483])).
fof(f4537,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f643,f642,f609,f1987,f483])).
fof(f4541,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f656,f655,f609,f1987,f483])).
fof(f4547,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f641,f1987,f483])).
fof(f4561,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f654,f1987,f483])).
fof(f4611,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f668,f1987,f499])).
fof(f4614,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f668,f1987,f499])).
fof(f4623,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f321,f623,f1987,f505])).
fof(f4632,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f321,f623,f1987,f505])).
fof(f4633,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1987,f623,f1987,f505])).
fof(f4782,plain,(
  ( ! [X2,X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X2)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f633,f1987,f573])).
fof(f4786,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f627,f1987,f574])).
fof(f4790,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X2)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f629,f1987,f574])).
fof(f4795,plain,(
  ( ! [X2,X0,X1] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1987,f749])).
fof(f4796,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1987,f799])).
fof(f4797,plain,(
  ( ! [X2,X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1987,f807])).
fof(f4798,plain,(
  ( ! [X2,X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),X2)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1987,f825])).
fof(f4799,plain,(
  ( ! [X0,X1] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1987,f1129])).
fof(f4804,plain,(
  ( ! [X0,X1] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1987,f1151])).
fof(f4809,plain,(
  ( ! [X0,X1] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1987,f1207])).
fof(f4814,plain,(
  ( ! [X0,X1] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1987,f1237])).
fof(f4815,plain,(
  ( ! [X0,X1] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),'F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1987,f1438])).
fof(f4820,plain,(
  ( ! [X0,X1] : (~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1987,f1474])).
fof(f606,plain,(
  ( ! [X0] : (sP0('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f586,f425])).
fof(f607,plain,(
  ( ! [X0] : (sP0(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f586,f424])).
fof(f609,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f586,f487])).
fof(f623,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f586,f510])).
fof(f636,plain,(
  ( ! [X0,X1] : (sP3('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f586,f576])).
fof(f638,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f586,f577])).
fof(f799,plain,(
  ( ! [X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1,X0) | ~p(s(bool,X0))) ) | $spl0),
  inference(subsumption_resolution,[],[f798,f321])).
fof(f798,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1,X0)) ) | $spl0),
  inference(superposition,[],[f531,f668])).
fof(f807,plain,(
  ( ! [X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1) | ~p(s(bool,X0))) ) | $spl0),
  inference(subsumption_resolution,[],[f806,f321])).
fof(f806,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1)) ) | $spl0),
  inference(superposition,[],[f532,f668])).
fof(f817,plain,(
  ( ! [X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1,X0) | p(s(bool,X0))) ) | $spl0),
  inference(subsumption_resolution,[],[f816,f321])).
fof(f816,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1,X0)) ) | $spl0),
  inference(superposition,[],[f548,f668])).
fof(f838,plain,(
  ( ! [X0] : (sP13('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f633,f321,f573])).
fof(f841,plain,(
  ( ! [X0,X1] : (~sP12('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1) | sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1)) ) | $spl0),
  inference(subsumption_resolution,[],[f840,f321])).
fof(f840,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~sP12('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1) | sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1)) ) | $spl0),
  inference(superposition,[],[f573,f668])).
fof(f858,plain,(
  ( ! [X0] : (sP11('T_0',X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f627,f321,f574])).
fof(f862,plain,(
  ( ! [X0] : (sP11('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f629,f321,f574])).
fof(f866,plain,(
  ( ! [X0,X1] : (~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1) | sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1)) ) | $spl0),
  inference(subsumption_resolution,[],[f865,f321])).
fof(f865,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1) | sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,X1)) ) | $spl0),
  inference(superposition,[],[f574,f668])).
fof(f910,plain,(
  ( ! [X0] : (sP2('T_0',X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f321,f749])).
fof(f913,plain,(
  ( ! [X0] : (sP2('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(subsumption_resolution,[],[f912,f321])).
fof(f912,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | sP2('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(superposition,[],[f749,f668])).
fof(f946,plain,(
  ( ! [X0] : (~sP3('F_0',X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f757])).
fof(f1011,plain,(
  ( ! [X0] : (~sP3('F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f764])).
fof(f1031,plain,(
  ( ! [X0] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f321,f799])).
fof(f1048,plain,(
  ( ! [X0] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0',X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f321,f807])).
fof(f1064,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f817])).
fof(f1078,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f321,f668,f499])).
fof(f1079,plain,(
  sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | $spl0),
  inference(unit_resulting_resolution,[],[f321,f668,f499])).
fof(f1110,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0',X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f321,f825])).
fof(f1187,plain,(
  sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f623,f321,f321,f505])).
fof(f1282,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~sP6('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | $spl0),
  inference(subsumption_resolution,[],[f1276,f321])).
fof(f1276,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | ~sP6('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | $spl0),
  inference(superposition,[],[f1129,f668])).
fof(f1330,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f321,f592,f1151])).
fof(f1342,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~sP5('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | $spl0),
  inference(subsumption_resolution,[],[f1336,f321])).
fof(f1336,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | ~sP5('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | $spl0),
  inference(superposition,[],[f1151,f668])).
fof(f1368,plain,(
  ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f321,f592,f1207])).
fof(f1380,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~sP8('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | $spl0),
  inference(subsumption_resolution,[],[f1374,f321])).
fof(f1374,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | ~sP8('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | $spl0),
  inference(superposition,[],[f1207,f668])).
fof(f1389,plain,(
  ~sP9('F_0','T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | $spl0),
  inference(unit_resulting_resolution,[],[f1368,f502])).
fof(f1399,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f592,f592,f1313])).
fof(f1423,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f1399,f521])).
fof(f1475,plain,(
  ~sP12('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | $spl0),
  inference(unit_resulting_resolution,[],[f321,f592,f1438])).
fof(f1487,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~sP12('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(subsumption_resolution,[],[f1481,f321])).
fof(f1481,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | ~sP12('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(superposition,[],[f1438,f668])).
fof(f1491,plain,(
  ~sP13('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | $spl0),
  inference(unit_resulting_resolution,[],[f1475,f538])).
fof(f1537,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f321,f592,f1474])).
fof(f1543,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(subsumption_resolution,[],[f1540,f321])).
fof(f1540,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(superposition,[],[f1474,f668])).
fof(f1587,plain,(
  ~sP12('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f321,f592,f1537,f542])).
fof(f1779,plain,(
  ( ! [X78,X79] : (sP2('const.divides.divides_2'(s('type.num.num',X78),s('type.num.num','const.num.|48|_0')),X79,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(subsumption_resolution,[],[f1744,f321])).
fof(f1744,plain,(
  ( ! [X78,X79] : (~p(s(bool,'T_0')) | sP2('const.divides.divides_2'(s('type.num.num',X78),s('type.num.num','const.num.|48|_0')),X79,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(superposition,[],[f749,f669])).
fof(f1780,plain,(
  ( ! [X80,X81] : (p(s(bool,X81)) | ~sP6('const.divides.divides_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X81)) ) | $spl0),
  inference(subsumption_resolution,[],[f1745,f321])).
fof(f1745,plain,(
  ( ! [X80,X81] : (~p(s(bool,'T_0')) | p(s(bool,X81)) | ~sP6('const.divides.divides_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X81)) ) | $spl0),
  inference(superposition,[],[f1129,f669])).
fof(f1781,plain,(
  ( ! [X83,X82] : (p(s(bool,X83)) | ~sP5('const.divides.divides_2'(s('type.num.num',X82),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X83)) ) | $spl0),
  inference(subsumption_resolution,[],[f1746,f321])).
fof(f1746,plain,(
  ( ! [X83,X82] : (~p(s(bool,'T_0')) | p(s(bool,X83)) | ~sP5('const.divides.divides_2'(s('type.num.num',X82),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X83)) ) | $spl0),
  inference(superposition,[],[f1151,f669])).
fof(f1782,plain,(
  ( ! [X85,X84] : (p(s(bool,X85)) | ~sP8('const.divides.divides_2'(s('type.num.num',X84),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X85)) ) | $spl0),
  inference(subsumption_resolution,[],[f1747,f321])).
fof(f1747,plain,(
  ( ! [X85,X84] : (~p(s(bool,'T_0')) | p(s(bool,X85)) | ~sP8('const.divides.divides_2'(s('type.num.num',X84),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X85)) ) | $spl0),
  inference(superposition,[],[f1207,f669])).
fof(f1783,plain,(
  ( ! [X87,X86] : (p(s(bool,X87)) | ~sP12('const.divides.divides_2'(s('type.num.num',X86),s('type.num.num','const.num.|48|_0')),X87,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(subsumption_resolution,[],[f1748,f321])).
fof(f1748,plain,(
  ( ! [X87,X86] : (~p(s(bool,'T_0')) | p(s(bool,X87)) | ~sP12('const.divides.divides_2'(s('type.num.num',X86),s('type.num.num','const.num.|48|_0')),X87,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(superposition,[],[f1438,f669])).
fof(f1784,plain,(
  ( ! [X88,X89] : (p(s(bool,X89)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X89,'const.divides.divides_2'(s('type.num.num',X88),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(subsumption_resolution,[],[f1749,f321])).
fof(f1749,plain,(
  ( ! [X88,X89] : (~p(s(bool,'T_0')) | p(s(bool,X89)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X89,'const.divides.divides_2'(s('type.num.num',X88),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f1474,f669])).
fof(f1795,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f620,f613,f608,f321,f483])).
fof(f1805,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f620,f613,f609,f321,f483])).
fof(f1808,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f643,f642,f609,f321,f483])).
fof(f1813,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f656,f655,f609,f321,f483])).
fof(f1821,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f641,f321,f483])).
fof(f1839,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f654,f321,f483])).
fof(f1852,plain,(
  ~sP5('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f620,f611,f1098,f321,f483])).
fof(f1866,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ~sP6(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1) | ~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | $spl0),
  inference(subsumption_resolution,[],[f1865,f621])).
fof(f1865,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ~sP6(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1) | ~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0) | ~sP4('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1,X0)) ) | $spl0),
  inference(subsumption_resolution,[],[f1861,f321])).
fof(f1861,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ~sP6(X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1) | ~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0) | ~sP4('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1,X0)) ) | $spl0),
  inference(superposition,[],[f483,f668])).
fof(f1897,plain,(
  sP7('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | $spl0),
  inference(unit_resulting_resolution,[],[f621,f615,f611,f592,f484])).
fof(f3254,plain,(
  ( ! [X83,X82] : (sP2('const.divides.divides_2'(s('type.num.num',X82),s('type.num.num',X82)),X83,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(subsumption_resolution,[],[f3216,f321])).
fof(f3216,plain,(
  ( ! [X83,X82] : (~p(s(bool,'T_0')) | sP2('const.divides.divides_2'(s('type.num.num',X82),s('type.num.num',X82)),X83,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(superposition,[],[f749,f670])).
fof(f3255,plain,(
  ( ! [X85,X84] : (p(s(bool,X85)) | ~sP6('const.divides.divides_2'(s('type.num.num',X84),s('type.num.num',X84)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X85)) ) | $spl0),
  inference(subsumption_resolution,[],[f3217,f321])).
fof(f3217,plain,(
  ( ! [X85,X84] : (~p(s(bool,'T_0')) | p(s(bool,X85)) | ~sP6('const.divides.divides_2'(s('type.num.num',X84),s('type.num.num',X84)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X85)) ) | $spl0),
  inference(superposition,[],[f1129,f670])).
fof(f3256,plain,(
  ( ! [X87,X86] : (p(s(bool,X87)) | ~sP5('const.divides.divides_2'(s('type.num.num',X86),s('type.num.num',X86)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X87)) ) | $spl0),
  inference(subsumption_resolution,[],[f3218,f321])).
fof(f3218,plain,(
  ( ! [X87,X86] : (~p(s(bool,'T_0')) | p(s(bool,X87)) | ~sP5('const.divides.divides_2'(s('type.num.num',X86),s('type.num.num',X86)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X87)) ) | $spl0),
  inference(superposition,[],[f1151,f670])).
fof(f3257,plain,(
  ( ! [X88,X89] : (p(s(bool,X89)) | ~sP8('const.divides.divides_2'(s('type.num.num',X88),s('type.num.num',X88)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X89)) ) | $spl0),
  inference(subsumption_resolution,[],[f3219,f321])).
fof(f3219,plain,(
  ( ! [X88,X89] : (~p(s(bool,'T_0')) | p(s(bool,X89)) | ~sP8('const.divides.divides_2'(s('type.num.num',X88),s('type.num.num',X88)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X89)) ) | $spl0),
  inference(superposition,[],[f1207,f670])).
fof(f3258,plain,(
  ( ! [X90,X91] : (p(s(bool,X91)) | ~sP12('const.divides.divides_2'(s('type.num.num',X90),s('type.num.num',X90)),X91,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(subsumption_resolution,[],[f3220,f321])).
fof(f3220,plain,(
  ( ! [X90,X91] : (~p(s(bool,'T_0')) | p(s(bool,X91)) | ~sP12('const.divides.divides_2'(s('type.num.num',X90),s('type.num.num',X90)),X91,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(superposition,[],[f1438,f670])).
fof(f3259,plain,(
  ( ! [X92,X93] : (p(s(bool,X93)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X93,'const.divides.divides_2'(s('type.num.num',X92),s('type.num.num',X92)))) ) | $spl0),
  inference(subsumption_resolution,[],[f3221,f321])).
fof(f3221,plain,(
  ( ! [X92,X93] : (~p(s(bool,'T_0')) | p(s(bool,X93)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X93,'const.divides.divides_2'(s('type.num.num',X92),s('type.num.num',X92)))) ) | $spl0),
  inference(superposition,[],[f1474,f670])).
fof(f5509,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f5191,f817])).
fof(f6206,plain,(
  ( ! [X116,X114,X115] : (sP2(X114,X115,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | s(bool,X114) = s(bool,X116) | s(bool,'T_0') = s(bool,X116)) ) | $spl0),
  inference(subsumption_resolution,[],[f5854,f321])).
fof(f5854,plain,(
  ( ! [X116,X114,X115] : (~p(s(bool,'T_0')) | sP2(X114,X115,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | s(bool,X114) = s(bool,X116) | s(bool,'T_0') = s(bool,X116)) ) | $spl0),
  inference(superposition,[],[f749,f959])).
fof(f6207,plain,(
  ( ! [X121,X122,X120] : (p(s(bool,X121)) | ~sP6(X120,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X121) | s(bool,X120) = s(bool,X122) | s(bool,'T_0') = s(bool,X122)) ) | $spl0),
  inference(subsumption_resolution,[],[f5856,f321])).
fof(f5856,plain,(
  ( ! [X121,X122,X120] : (~p(s(bool,'T_0')) | p(s(bool,X121)) | ~sP6(X120,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X121) | s(bool,X120) = s(bool,X122) | s(bool,'T_0') = s(bool,X122)) ) | $spl0),
  inference(superposition,[],[f1129,f959])).
fof(f6208,plain,(
  ( ! [X125,X123,X124] : (p(s(bool,X124)) | ~sP5(X123,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X124) | s(bool,X123) = s(bool,X125) | s(bool,'T_0') = s(bool,X125)) ) | $spl0),
  inference(subsumption_resolution,[],[f5857,f321])).
fof(f5857,plain,(
  ( ! [X125,X123,X124] : (~p(s(bool,'T_0')) | p(s(bool,X124)) | ~sP5(X123,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X124) | s(bool,X123) = s(bool,X125) | s(bool,'T_0') = s(bool,X125)) ) | $spl0),
  inference(superposition,[],[f1151,f959])).
fof(f6209,plain,(
  ( ! [X127,X128,X126] : (p(s(bool,X127)) | ~sP8(X126,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X127) | s(bool,X126) = s(bool,X128) | s(bool,'T_0') = s(bool,X128)) ) | $spl0),
  inference(subsumption_resolution,[],[f5858,f321])).
fof(f5858,plain,(
  ( ! [X127,X128,X126] : (~p(s(bool,'T_0')) | p(s(bool,X127)) | ~sP8(X126,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X127) | s(bool,X126) = s(bool,X128) | s(bool,'T_0') = s(bool,X128)) ) | $spl0),
  inference(superposition,[],[f1207,f959])).
fof(f6210,plain,(
  ( ! [X130,X131,X129] : (p(s(bool,X130)) | ~sP12(X129,X130,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | s(bool,X129) = s(bool,X131) | s(bool,'T_0') = s(bool,X131)) ) | $spl0),
  inference(subsumption_resolution,[],[f5859,f321])).
fof(f5859,plain,(
  ( ! [X130,X131,X129] : (~p(s(bool,'T_0')) | p(s(bool,X130)) | ~sP12(X129,X130,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | s(bool,X129) = s(bool,X131) | s(bool,'T_0') = s(bool,X131)) ) | $spl0),
  inference(superposition,[],[f1438,f959])).
fof(f6211,plain,(
  ( ! [X134,X132,X133] : (p(s(bool,X133)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X133,X132) | s(bool,X132) = s(bool,X134) | s(bool,'T_0') = s(bool,X134)) ) | $spl0),
  inference(subsumption_resolution,[],[f5860,f321])).
fof(f5860,plain,(
  ( ! [X134,X132,X133] : (~p(s(bool,'T_0')) | p(s(bool,X133)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X133,X132) | s(bool,X132) = s(bool,X134) | s(bool,'T_0') = s(bool,X134)) ) | $spl0),
  inference(superposition,[],[f1474,f959])).
fof(f7220,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f592,f617,f615,f5313,f484])).
fof(f7255,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f592,f621,f615,f5314,f484])).
fof(f7442,plain,(
  sP7('F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f592,f619,f611,f5320,f485])).
fof(f7458,plain,(
  sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f592,f621,f611,f5321,f485])).
fof(f5226,plain,(
  ~sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f5191,f438])).
fof(f5257,plain,(
  ( ! [X0] : (sP3(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f471])).
fof(f5262,plain,(
  ( ! [X0] : (sP3(X0,'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f471])).
fof(f5263,plain,(
  ( ! [X0] : (sP3(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f5191,f471])).
fof(f5277,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f656,f655,f610,f5191,f484])).
fof(f5303,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f657,f614,f610,f5191,f485])).
fof(f5391,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f5191,f513])).
fof(f5396,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f5191,f514])).
fof(f5445,plain,(
  sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f592,f592,f5191,f530])).
fof(f5446,plain,(
  sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f592,f5191,f530])).
fof(f5447,plain,(
  sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f5191,f5191,f530])).
fof(f5448,plain,(
  sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f5191,f5191,f530])).
fof(f5486,plain,(
  sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f5191,f321,f5191,f547])).
fof(f7221,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f643,f615,f5313,f484])).
fof(f7222,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f656,f615,f5313,f484])).
fof(f7256,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f645,f615,f5314,f484])).
fof(f7257,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f658,f615,f5314,f484])).
fof(f7443,plain,(
  ( ! [X0] : (sP7('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f644,f611,f5320,f485])).
fof(f7444,plain,(
  ( ! [X0] : (sP7('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f657,f611,f5320,f485])).
fof(f7459,plain,(
  ( ! [X0] : (sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f645,f611,f5321,f485])).
fof(f7460,plain,(
  ( ! [X0] : (sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f592,f658,f611,f5321,f485])).
fof(f7463,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f321,f620,f5314,f5321,f483])).
fof(f9318,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f3074,f2046,f3039])).
fof(f9321,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f3074,f2050,f3039])).
fof(f9966,plain,(
  ( ! [X78,X76,X77] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X78),s('type.num.num',X77))) | s('type.num.num',X77) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X76),s('type.num.num',X76)))) ) | $spl74),
  inference(forward_demodulation,[],[f9965,f330])).
fof(f9965,plain,(
  ( ! [X78,X76,X77] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X78),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X78),s('type.num.num',X77))) | s('type.num.num',X77) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X76),s('type.num.num',X76)))) ) | $spl74),
  inference(forward_demodulation,[],[f9871,f332])).
fof(f9871,plain,(
  ( ! [X78,X76,X77] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X78),s('type.num.num',X77))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X78),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X76))))) | s('type.num.num',X77) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X76),s('type.num.num',X76)))) ) | $spl74),
  inference(backward_demodulation,[],[f9826,f9744])).
fof(f9910,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X48),s('type.num.num',X49))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X48) | s('type.num.num',X49) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num',X47)))) ) | $spl74),
  inference(forward_demodulation,[],[f9909,f330])).
fof(f9909,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X48),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X48),s('type.num.num',X49))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X48) | s('type.num.num',X49) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num',X47)))) ) | $spl74),
  inference(forward_demodulation,[],[f9842,f332])).
fof(f9842,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X48),s('type.num.num',X49))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X48),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X47))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X48) | s('type.num.num',X49) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num',X47)))) ) | $spl74),
  inference(backward_demodulation,[],[f9826,f9624])).
fof(f9317,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),sK15))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f591,f2046,f3039])).
fof(f9320,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),sK15))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f591,f2050,f3039])).
fof(f8520,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f608,f2414,f483])).
fof(f8528,plain,(
  ( ! [X2,X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f616,f612,f609,f2414,f483])).
fof(f8530,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f609,f2414,f483])).
fof(f8532,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f643,f642,f609,f2414,f483])).
fof(f8536,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f656,f655,f609,f2414,f483])).
fof(f8542,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f641,f2414,f483])).
fof(f8556,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f654,f2414,f483])).
fof(f8614,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f668,f2414,f499])).
fof(f8617,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f668,f2414,f499])).
fof(f8626,plain,(
  ( ! [X2,X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f321,f623,f2414,f505])).
fof(f8636,plain,(
  ( ! [X2,X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f321,f623,f2414,f505])).
fof(f8637,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X3)))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f2414,f623,f2414,f505])).
fof(f8793,plain,(
  ( ! [X2,X0,X3,X1] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X3)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f633,f2414,f573])).
fof(f8797,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f627,f2414,f574])).
fof(f8801,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X3)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f629,f2414,f574])).
fof(f8806,plain,(
  ( ! [X2,X0,X3,X1] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f2414,f749])).
fof(f8807,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X1)))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f2414,f799])).
fof(f8808,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f2414,f807])).
fof(f8809,plain,(
  ( ! [X2,X0,X3,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),X3)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f2414,f825])).
fof(f8810,plain,(
  ( ! [X2,X0,X1] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f2414,f1129])).
fof(f8815,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f2414,f1151])).
fof(f8820,plain,(
  ( ! [X2,X0,X1] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f2414,f1207])).
fof(f8825,plain,(
  ( ! [X2,X0,X1] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f2414,f1237])).
fof(f8826,plain,(
  ( ! [X2,X0,X1] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f2414,f1438])).
fof(f8831,plain,(
  ( ! [X2,X0,X1] : (~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f2414,f1474])).
fof(f3525,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f608,f1956,f483])).
fof(f3539,plain,(
  ( ! [X0] : (sP7('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f616,f612,f609,f1956,f483])).
fof(f3543,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f609,f1956,f483])).
fof(f3547,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f643,f642,f609,f1956,f483])).
fof(f3553,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f656,f655,f609,f1956,f483])).
fof(f3563,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f641,f1956,f483])).
fof(f3585,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f617,f613,f654,f1956,f483])).
fof(f3662,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f321,f623,f1956,f505])).
fof(f3671,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f321,f623,f1956,f505])).
fof(f3672,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1956,f623,f1956,f505])).
fof(f3827,plain,(
  ( ! [X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f633,f1956,f573])).
fof(f3831,plain,(
  ( ! [X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f627,f1956,f574])).
fof(f3835,plain,(
  ( ! [X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f629,f1956,f574])).
fof(f3840,plain,(
  ( ! [X0,X1] : (sP2('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1956,f749])).
fof(f3841,plain,(
  ( ! [X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1956,f799])).
fof(f3842,plain,(
  ( ! [X0,X1] : (sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1956,f807])).
fof(f3843,plain,(
  ( ! [X0,X1] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1956,f825])).
fof(f3844,plain,(
  ( ! [X0] : (~sP6('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1956,f1129])).
fof(f3849,plain,(
  ( ! [X0] : (~sP5('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1956,f1151])).
fof(f3854,plain,(
  ( ! [X0] : (~sP8('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1956,f1207])).
fof(f3859,plain,(
  ( ! [X0] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1956,f1237])).
fof(f3860,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f592,f1956,f1438])).
fof(f2052,plain,(
  s('type.num.num',sK15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK16(sK15,'const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15)))))) | $spl0),
  inference(subsumption_resolution,[],[f2030,f321])).
fof(f2030,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK16(sK15,'const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15)))))) | $spl0),
  inference(superposition,[],[f593,f668])).
fof(f13418,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13417,f11897])).
fof(f13417,plain,(
  ~sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2630,f12280])).
fof(f13416,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13415,f11898])).
fof(f13415,plain,(
  ~sP1('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2632,f12280])).
fof(f13413,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13412,f11895])).
fof(f13412,plain,(
  sP1('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2634,f12280])).
fof(f13411,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13410,f11894])).
fof(f13410,plain,(
  sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2635,f12280])).
fof(f13409,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13408,f651])).
fof(f13408,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2636,f12280])).
fof(f13405,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13404,f651])).
fof(f13404,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2641,f12280])).
fof(f13401,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13400,f651])).
fof(f13400,plain,(
  ( ! [X0] : (~sP2('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2652,f12280])).
fof(f13399,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13398,f651])).
fof(f13398,plain,(
  ( ! [X0] : (~sP2('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2653,f12280])).
fof(f13397,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13396,f650])).
fof(f13396,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'T_0')) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2656,f12280])).
fof(f13395,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13394,f650])).
fof(f13394,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2658,f12280])).
fof(f13387,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13386,f1703])).
fof(f13386,plain,(
  ~sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2668,f12280])).
fof(f13385,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13384,f11904])).
fof(f13384,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2673,f12280])).
fof(f13380,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13379,f12444])).
fof(f13379,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2675,f12280])).
fof(f13373,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13372,f12444])).
fof(f13372,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2687,f12280])).
fof(f13369,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13368,f641])).
fof(f13368,plain,(
  ~sP6('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2689,f12280])).
fof(f13363,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13362,f642])).
fof(f13362,plain,(
  ~sP5('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2694,f12280])).
fof(f13357,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13356,f645])).
fof(f13356,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2699,f12280])).
fof(f13355,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13354,f644])).
fof(f13354,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2715,f12280])).
fof(f13353,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13352,f644])).
fof(f13352,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2716,f12280])).
fof(f13351,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13350,f643])).
fof(f13350,plain,(
  ~sP4('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2731,f12280])).
fof(f13349,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13348,f643])).
fof(f13348,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2732,f12280])).
fof(f13347,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13346,f643])).
fof(f13346,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2733,f12280])).
fof(f13345,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13344,f643])).
fof(f13344,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2734,f12280])).
fof(f13343,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13342,f11940])).
fof(f13342,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','T_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2747,f12280])).
fof(f13341,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13340,f11939])).
fof(f13340,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','F_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2748,f12280])).
fof(f13339,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13338,f1843])).
fof(f13338,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13337,f12280])).
fof(f13337,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13336,f330])).
fof(f13336,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2749,f12280])).
fof(f13335,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13334,f1825])).
fof(f13334,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2750,f12280])).
fof(f13333,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13332,f12634])).
fof(f13332,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13331,f330])).
fof(f13331,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2751,f12280])).
fof(f13330,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13329,f11908])).
fof(f13329,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2752,f12280])).
fof(f13324,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13323,f646])).
fof(f13323,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2757,f12280])).
fof(f13310,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13309,f1188])).
fof(f13309,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','T_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2772,f12280])).
fof(f13308,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13307,f11992])).
fof(f13307,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'T_0')) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2773,f12280])).
fof(f13306,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13305,f11996])).
fof(f13305,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2774,f12280])).
fof(f13304,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13303,f648])).
fof(f13303,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2795,f12280])).
fof(f13302,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13301,f647])).
fof(f13301,plain,(
  ~sP10('T_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2802,f12280])).
fof(f13300,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13299,f647])).
fof(f13299,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2803,f12280])).
fof(f13296,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13295,f11967])).
fof(f13295,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2810,f12280])).
fof(f13294,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13293,f11966])).
fof(f13293,plain,(
  sP11('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2815,f12280])).
fof(f13292,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13291,f11966])).
fof(f13291,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2817,f12280])).
fof(f13290,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13289,f11975])).
fof(f13289,plain,(
  sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2820,f12280])).
fof(f13285,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13284,f863])).
fof(f13284,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2824,f12280])).
fof(f13283,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13282,f859])).
fof(f13282,plain,(
  ~sP11('T_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2830,f12280])).
fof(f13281,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13280,f859])).
fof(f13280,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2831,f12280])).
fof(f13279,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13278,f11987])).
fof(f13278,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'F_0')) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2836,f12280])).
fof(f13273,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13272,f11988])).
fof(f13272,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2845,f12280])).
fof(f13271,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13270,f649])).
fof(f13270,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2852,f12280])).
fof(f13265,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13264,f11976])).
fof(f13264,plain,(
  sP13('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2857,f12280])).
fof(f13263,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13262,f11985])).
fof(f13262,plain,(
  sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','T_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2860,f12280])).
fof(f13258,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13257,f839])).
fof(f13257,plain,(
  ~sP13('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2864,f12280])).
fof(f13256,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13255,f11941])).
fof(f13255,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'F_0')) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2866,f12280])).
fof(f13254,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13253,f11942])).
fof(f13253,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0',X0)) ) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2867,f12280])).
fof(f13252,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13251,f640])).
fof(f13251,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2868,f12280])).
fof(f13250,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13249,f639])).
fof(f13249,plain,(
  ~sP0('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2874,f12280])).
fof(f13248,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13247,f639])).
fof(f13247,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2875,f12280])).
fof(f13246,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13245,f12442])).
fof(f13245,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13244,f12280])).
fof(f13244,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13243,f12280])).
fof(f13243,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2880,f12280])).
fof(f13242,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13241,f12442])).
fof(f13241,plain,(
  sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13240,f12280])).
fof(f13240,plain,(
  sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13239,f330])).
fof(f13239,plain,(
  sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2881,f12280])).
fof(f13238,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13237,f650])).
fof(f13237,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13236,f12280])).
fof(f13236,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13235,f330])).
fof(f13235,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2882,f12280])).
fof(f13234,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13233,f650])).
fof(f13233,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13232,f12280])).
fof(f13232,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13231,f330])).
fof(f13231,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2883,f12280])).
fof(f13230,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13229,f12358])).
fof(f13229,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13228,f330])).
fof(f13228,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13227,f12280])).
fof(f13227,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13226,f12280])).
fof(f13226,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2884,f12280])).
fof(f2884,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f2608,f817])).
fof(f13225,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13224,f641])).
fof(f13224,plain,(
  ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2885,f12280])).
fof(f13223,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13222,f642])).
fof(f13222,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2887,f12280])).
fof(f13221,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13220,f646])).
fof(f13220,plain,(
  ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2889,f12280])).
fof(f13219,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13218,f11948])).
fof(f13218,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13217,f12280])).
fof(f13217,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13216,f330])).
fof(f13216,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2891,f12280])).
fof(f13215,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13214,f648])).
fof(f13214,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2892,f12280])).
fof(f13213,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13212,f647])).
fof(f13212,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2898,f12280])).
fof(f13211,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13210,f647])).
fof(f13210,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2899,f12280])).
fof(f13209,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13208,f12480])).
fof(f13208,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13207,f12280])).
fof(f13207,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13206,f12280])).
fof(f13206,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2904,f12280])).
fof(f13205,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13204,f12481])).
fof(f13204,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13203,f12280])).
fof(f13203,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13202,f12280])).
fof(f13202,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2907,f12280])).
fof(f13201,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13200,f12480])).
fof(f13200,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13199,f12280])).
fof(f13199,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13198,f12280])).
fof(f13198,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2908,f12280])).
fof(f13197,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13196,f12361])).
fof(f13196,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13195,f330])).
fof(f13195,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2910,f12280])).
fof(f13194,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13193,f12483])).
fof(f13193,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13192,f12280])).
fof(f13192,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13191,f12280])).
fof(f13191,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2912,f12280])).
fof(f13190,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13189,f12280])).
fof(f13189,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f2981,f11880])).
fof(f13020,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13019,f12312])).
fof(f13019,plain,(
  ( ! [X0] : (~sP6('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13018,f330])).
fof(f13018,plain,(
  ( ! [X0] : (~sP6('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f3844,f12280])).
fof(f13017,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13016,f12315])).
fof(f13016,plain,(
  ( ! [X0] : (~sP5('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13015,f330])).
fof(f13015,plain,(
  ( ! [X0] : (~sP5('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f3849,f12280])).
fof(f13014,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13013,f12333])).
fof(f13013,plain,(
  ( ! [X0] : (~sP8('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13012,f330])).
fof(f13012,plain,(
  ( ! [X0] : (~sP8('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f3854,f12280])).
fof(f13011,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13010,f12335])).
fof(f13010,plain,(
  ( ! [X0] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13009,f330])).
fof(f13009,plain,(
  ( ! [X0] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f3859,f12280])).
fof(f13008,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13007,f12361])).
fof(f13007,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f13006,f330])).
fof(f13006,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)),'F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f3860,f12280])).
fof(f13002,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f13001,f1701])).
fof(f13001,plain,(
  ~sP7('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f4964,f12280])).
fof(f12986,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12985,f1798])).
fof(f12985,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','T_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f5113,f12280])).
fof(f12984,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12983,f1702])).
fof(f12983,plain,(
  sP7('F_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f5125,f12280])).
fof(f12970,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12969,f1700])).
fof(f12969,plain,(
  sP7('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f5180,f12280])).
fof(f12967,plain,(
  $false | ($spl3 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12966,f1898])).
fof(f12966,plain,(
  ~sP7('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f5189,f12280])).
fof(f12749,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12748,f12312])).
fof(f12748,plain,(
  ( ! [X2,X0,X1] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12747,f330])).
fof(f12747,plain,(
  ( ! [X2,X0,X1] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f8810,f12280])).
fof(f12746,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12745,f12315])).
fof(f12745,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12744,f330])).
fof(f12744,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f8815,f12280])).
fof(f12743,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12742,f12333])).
fof(f12742,plain,(
  ( ! [X2,X0,X1] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12741,f330])).
fof(f12741,plain,(
  ( ! [X2,X0,X1] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f8820,f12280])).
fof(f12740,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12739,f12335])).
fof(f12739,plain,(
  ( ! [X2,X0,X1] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12738,f330])).
fof(f12738,plain,(
  ( ! [X2,X0,X1] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f8825,f12280])).
fof(f12737,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12736,f12361])).
fof(f12736,plain,(
  ( ! [X2,X0,X1] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12735,f330])).
fof(f12735,plain,(
  ( ! [X2,X0,X1] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))))),'F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f8826,f12280])).
fof(f12709,plain,(
  $false | ($spl3 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12708,f11880])).
fof(f12708,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | ($spl3 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f3115,f11880])).
fof(f12704,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12276,f11880])).
fof(f12276,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f9310])).
fof(f12703,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12275,f12608])).
fof(f12275,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5192])).
fof(f12702,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12274,f330])).
fof(f12274,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f3111])).
fof(f12701,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12273,f330])).
fof(f12273,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f3110])).
fof(f12696,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12684,f321])).
fof(f12684,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12681,f592])).
fof(f12695,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12694,f12608])).
fof(f12694,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12682,f12681])).
fof(f12682,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12681,f347])).
fof(f12679,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12678,f12365])).
fof(f12678,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12257,f12280])).
fof(f12257,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5539])).
fof(f12677,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12676,f12361])).
fof(f12676,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12256,f12280])).
fof(f12256,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5537])).
fof(f12675,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12674,f12352])).
fof(f12674,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12255,f12280])).
fof(f12255,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5535])).
fof(f12673,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12672,f12350])).
fof(f12672,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12254,f12280])).
fof(f12254,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5534])).
fof(f12671,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12670,f12351])).
fof(f12670,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12253,f12280])).
fof(f12253,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5531])).
fof(f12669,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12668,f647])).
fof(f12668,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12252,f12280])).
fof(f12252,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5526])).
fof(f12667,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12666,f647])).
fof(f12666,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12251,f12280])).
fof(f12251,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5525])).
fof(f12665,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12664,f648])).
fof(f12664,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12250,f12280])).
fof(f12250,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5519])).
fof(f12663,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12662,f11950])).
fof(f12662,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12249,f12280])).
fof(f12249,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5518])).
fof(f12661,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12660,f646])).
fof(f12660,plain,(
  ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12248,f12280])).
fof(f12248,plain,(
  ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5516])).
fof(f12659,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12658,f642])).
fof(f12658,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12247,f12280])).
fof(f12247,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5513])).
fof(f12657,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12656,f641])).
fof(f12656,plain,(
  ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12246,f12280])).
fof(f12246,plain,(
  ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5510])).
fof(f12655,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12654,f12358])).
fof(f12654,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12245,f12280])).
fof(f12245,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5509])).
fof(f12653,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12652,f650])).
fof(f12652,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12244,f12280])).
fof(f12244,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5508])).
fof(f12651,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12650,f650])).
fof(f12650,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12243,f12280])).
fof(f12243,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5507])).
fof(f12649,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12648,f12291])).
fof(f12648,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12242,f12280])).
fof(f12242,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5506])).
fof(f12647,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12646,f12291])).
fof(f12646,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12241,f12280])).
fof(f12241,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5505])).
fof(f12644,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12643,f1849])).
fof(f12643,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12239,f12280])).
fof(f12239,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f5372])).
fof(f12639,plain,(
  $false | ($spl3 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12638,f330])).
fof(f12638,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12230,f11880])).
fof(f12230,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) | ($spl3 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f3090])).
fof(f12610,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12609,f12374])).
fof(f12609,plain,(
  ~sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12194,f12280])).
fof(f12194,plain,(
  ~sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f1292])).
fof(f12554,plain,(
  $false | ($spl3 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12144,f12393])).
fof(f12144,plain,(
  s('type.num.num',sK15) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f3072])).
fof(f12553,plain,(
  $false | ($spl3 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12143,f11880])).
fof(f12143,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) | ($spl3 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f3116])).
fof(f12552,plain,(
  $false | ($spl3 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12142,f11880])).
fof(f12142,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) | ($spl3 | $spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f3117])).
fof(f12447,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12446,f12328])).
fof(f12446,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12445,f330])).
fof(f12445,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f11907,f12280])).
fof(f11907,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11880,f4032])).
fof(f12437,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12389,f1894])).
fof(f12389,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7839])).
fof(f12436,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12388,f1942])).
fof(f12388,plain,(
  ~sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7642])).
fof(f12435,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12387,f1899])).
fof(f12387,plain,(
  ~sP7('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7637])).
fof(f12434,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12385,f1700])).
fof(f12385,plain,(
  sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7461])).
fof(f12433,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12380,f1702])).
fof(f12380,plain,(
  sP7('F_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7441])).
fof(f12432,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12379,f1803])).
fof(f12379,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','T_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7267])).
fof(f12431,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12373,f1701])).
fof(f12373,plain,(
  ~sP7('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f7210])).
fof(f12430,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12372,f639])).
fof(f12372,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5500])).
fof(f12429,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12371,f639])).
fof(f12371,plain,(
  ~sP0('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5499])).
fof(f12428,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12370,f640])).
fof(f12370,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5493])).
fof(f12427,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12367,f839])).
fof(f12367,plain,(
  ~sP13('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5489])).
fof(f12426,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12360,f649])).
fof(f12360,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5477])).
fof(f12425,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12355,f860])).
fof(f12355,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5456])).
fof(f12424,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12354,f860])).
fof(f12354,plain,(
  ~sP11('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5455])).
fof(f12423,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12353,f864])).
fof(f12353,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5449])).
fof(f12422,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12344,f647])).
fof(f12344,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5428])).
fof(f12421,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12343,f647])).
fof(f12343,plain,(
  ~sP10('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5427])).
fof(f12420,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12342,f648])).
fof(f12342,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5420])).
fof(f12419,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12339,f1189])).
fof(f12339,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','T_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5397])).
fof(f12418,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12332,f646])).
fof(f12332,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5382])).
fof(f12417,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12327,f1849])).
fof(f12327,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5374])).
fof(f12416,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12326,f1831])).
fof(f12326,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5373])).
fof(f12415,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12323,f643])).
fof(f12323,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5357])).
fof(f12414,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12322,f643])).
fof(f12322,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5356])).
fof(f12413,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12321,f643])).
fof(f12321,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5355])).
fof(f12412,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12320,f643])).
fof(f12320,plain,(
  ~sP4('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5354])).
fof(f12411,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12319,f644])).
fof(f12319,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5339])).
fof(f12410,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12318,f644])).
fof(f12318,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5338])).
fof(f12409,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12317,f645])).
fof(f12317,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5322])).
fof(f12408,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12314,f642])).
fof(f12314,plain,(
  ~sP5('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5315])).
fof(f12407,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12311,f641])).
fof(f12311,plain,(
  ~sP6('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5308])).
fof(f12406,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12305,f1703])).
fof(f12305,plain,(
  ~sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5267])).
fof(f12405,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12301,f650])).
fof(f12301,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5253])).
fof(f12404,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12300,f650])).
fof(f12300,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'T_0')) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5249])).
fof(f12403,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12299,f651])).
fof(f12299,plain,(
  ( ! [X0] : (~sP2('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5246])).
fof(f12402,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12298,f651])).
fof(f12298,plain,(
  ( ! [X0] : (~sP2('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5245])).
fof(f12401,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12296,f651])).
fof(f12296,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5234])).
fof(f12400,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12294,f651])).
fof(f12294,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5229])).
fof(f12399,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12398,f665])).
fof(f12398,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl5 | $spl6 | $spl74)),
  inference(forward_demodulation,[],[f12288,f670])).
fof(f12288,plain,(
  s(bool,'F_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5221])).
fof(f12397,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12287,f670])).
fof(f12287,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f5218])).
fof(f12396,plain,(
  $false | ($spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f12286,f330])).
fof(f12286,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f12280,f3074])).
fof(f11869,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl74)),
  inference(subsumption_resolution,[],[f11868,f591])).
fof(f11868,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15) | ($spl0 | $spl6 | $spl74)),
  inference(backward_demodulation,[],[f11867,f11866])).
fof(f11865,plain,(
  $false | ($spl6 | $spl64 | $spl66)),
  inference(subsumption_resolution,[],[f7835,f2605])).
fof(f7835,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl64 | $spl66)),
  inference(forward_demodulation,[],[f7778,f7811])).
fof(f7811,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) | $spl66),
  inference(forward_demodulation,[],[f7801,f332])).
fof(f7801,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) | $spl66),
  inference(backward_demodulation,[],[f7780,f2192])).
fof(f11864,plain,(
  $false | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f7512,f2605])).
fof(f7512,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl3),
  inference(superposition,[],[f2572,f2050])).
fof(f11863,plain,(
  $false | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f7311,f2605])).
fof(f7311,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl3),
  inference(superposition,[],[f2572,f2046])).
fof(f11837,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f7311,f10926])).
fof(f10926,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | ($spl70 | $spl74)),
  inference(condensation,[],[f10925])).
fof(f10925,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X1) = s('type.num.num',X2)) ) | ($spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10528,f10525])).
fof(f10525,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | ($spl70 | $spl74)),
  inference(condensation,[],[f10524])).
fof(f10524,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))) | s('type.num.num',X12) = s('type.num.num',X13)) ) | ($spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10322,f10311])).
fof(f10311,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl70 | $spl74)),
  inference(global_subsumption,[],[f320,f319,f318,f321,f328,f329,f330,f332,f336,f344,f343,f405,f406,f407,f417,f414,f413,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f2046,f2050,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2310,f2311,f2312,f2379,f2438,f2454,f2535,f2459,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f5656,f5726,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6213,f5868,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f5196,f1997,f2035,f5045,f4353,f2542,f2386,f2267,f1976,f2038,f5052,f2268,f2387,f2543,f2414,f1964,f2026,f4973,f5062,f6212,f2460,f2051,f2047,f2043,f2037,f1985,f1984,f1982,f593,f419,f5727,f5869,f3017,f3016,f592,f348,f347,f7277,f7280,f7282,f7284,f7285,f7286,f7299,f7300,f7301,f7302,f7410,f7307,f7415,f7425,f7476,f7479,f7482,f7484,f7485,f7486,f7500,f7501,f7502,f7503,f7613,f7508,f7618,f7628,f7644,f7662,f7666,f7667,f7670,f7775,f7672,f7673,f7674,f7675,f7676,f7677,f7794,f7795,f7767,f7769,f8194,f8197,f8202,f8203,f8284,f8285,f8266,f8268,f8346,f8349,f8354,f8355,f8437,f8438,f8418,f8420,f8805,f8804,f8803,f8802,f8800,f8799,f8798,f8796,f8795,f8794,f8792,f8791,f8790,f8789,f8783,f8782,f8778,f8775,f8774,f8766,f8765,f8756,f8731,f8730,f8729,f8725,f8724,f8720,f8719,f8718,f8709,f8695,f8689,f8686,f8685,f8681,f8680,f8679,f8678,f8677,f8673,f8671,f8665,f8664,f8655,f8654,f8644,f8641,f8640,f8639,f8638,f8630,f8628,f8623,f8622,f8621,f8620,f8619,f8618,f8616,f8615,f8613,f8612,f8611,f8610,f8600,f8599,f8588,f8587,f8577,f8576,f8565,f8564,f8559,f8553,f8550,f8545,f8539,f8526,f8522,f8518,f8516,f8515,f8508,f8503,f8497,f8496,f8489,f8470,f8469,f8468,f8467,f8465,f8464,f8463,f8462,f8461,f8454,f8881,f8887,f9089,f9177,f9185,f9189,f9193,f9143,f9326,f9329,f9334,f9335,f9337,f9338,f9341,f9342,f9345,f9350,f9351,f9353,f9354,f9357,f9368,f9367,f9364,f9408,f9445,f9448,f9453,f9454,f9555,f9556,f9520,f9522,f9526,f9527,f9578,f9577,f9575,f9574,f9573,f9612,f9613,f9615,f9618,f9619,f9623,f9624,f9626,f9627,f9629,f9630,f9681,f9821,f9684,f9685,f9686,f9688,f9690,f9692,f9698,f9699,f9706,f9707,f9708,f9709,f9710,f9711,f9712,f9713,f9714,f9715,f9716,f9729,f9730,f9732,f9735,f9736,f9740,f9741,f9743,f9744,f9829,f9747,f9798,f9799,f9801,f9802,f9803,f9805,f9807,f9809,f9815,f9816,f9826,f9887,f9910,f9922,f9966,f9988,f9990,f9991,f9992])).
fof(f9992,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f420])).
fof(f9991,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f334])).
fof(f9990,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f333])).
fof(f9988,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f9823,f9826])).
fof(f10322,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num',X13))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))) | s('type.num.num',X12) = s('type.num.num',X13)) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10311,f3043])).
fof(f10528,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X1) = s('type.num.num',X2)) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f450])).
fof(f11824,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f7512,f10926])).
fof(f11813,plain,(
  $false | ($spl64 | $spl66 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f7835,f10926])).
fof(f11766,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10269,f1898])).
fof(f10269,plain,(
  ~sP7('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f5189])).
fof(f11765,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10267,f1700])).
fof(f10267,plain,(
  sP7('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f5180])).
fof(f11757,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10260,f1702])).
fof(f10260,plain,(
  sP7('F_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f5125])).
fof(f11756,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10259,f1798])).
fof(f10259,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','T_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f5113])).
fof(f11747,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10251,f1701])).
fof(f10251,plain,(
  ~sP7('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f4964])).
fof(f11687,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10116,f10525])).
fof(f10116,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X1)))))) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2981])).
fof(f11686,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11685,f11125])).
fof(f11125,plain,(
  ( ! [X4,X2,X0] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X4)) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10628,f10525])).
fof(f10628,plain,(
  ( ! [X4,X2,X0,X3] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),X4)) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4278])).
fof(f11685,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11684,f10926])).
fof(f11684,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10115,f10926])).
fof(f10115,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2912])).
fof(f11683,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10114,f649])).
fof(f10114,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2910])).
fof(f11682,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11681,f11122])).
fof(f11122,plain,(
  ( ! [X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10617,f10525])).
fof(f10617,plain,(
  ( ! [X4,X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4220])).
fof(f11681,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11680,f10926])).
fof(f11680,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10113,f10926])).
fof(f10113,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2908])).
fof(f11679,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11678,f11123])).
fof(f11123,plain,(
  ( ! [X4,X2,X0] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),X4)) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10619,f10525])).
fof(f10619,plain,(
  ( ! [X4,X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),X4)) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4225])).
fof(f11678,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11677,f10926])).
fof(f11677,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10112,f10926])).
fof(f10112,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2907])).
fof(f11676,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11675,f11122])).
fof(f11675,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11674,f10926])).
fof(f11674,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10111,f10926])).
fof(f10111,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2904])).
fof(f11673,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10110,f647])).
fof(f10110,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2899])).
fof(f11672,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10109,f647])).
fof(f10109,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2898])).
fof(f11671,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10108,f648])).
fof(f10108,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2892])).
fof(f11670,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11669,f10593])).
fof(f10593,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4141])).
fof(f11669,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10107,f10926])).
fof(f10107,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2891])).
fof(f11668,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10106,f646])).
fof(f10106,plain,(
  ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2889])).
fof(f11667,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10105,f642])).
fof(f10105,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2887])).
fof(f11666,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10104,f641])).
fof(f10104,plain,(
  ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2885])).
fof(f11665,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11664,f11004])).
fof(f11004,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5464])).
fof(f11664,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11663,f330])).
fof(f11663,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11662,f10926])).
fof(f11662,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10103,f10926])).
fof(f10103,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2884])).
fof(f11661,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10102,f650])).
fof(f10102,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2883])).
fof(f11660,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10101,f650])).
fof(f10101,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2882])).
fof(f11659,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11658,f11084])).
fof(f11084,plain,(
  ( ! [X2,X0] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10541,f10525])).
fof(f10541,plain,(
  ( ! [X2,X0,X3] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f3988])).
fof(f11658,plain,(
  sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10100,f10926])).
fof(f10100,plain,(
  sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2881])).
fof(f11657,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11656,f11084])).
fof(f11656,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11655,f10926])).
fof(f11655,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10099,f10926])).
fof(f10099,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2880])).
fof(f11654,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10098,f639])).
fof(f10098,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2875])).
fof(f11653,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10097,f639])).
fof(f10097,plain,(
  ~sP0('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2874])).
fof(f11652,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10096,f640])).
fof(f10096,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2868])).
fof(f11651,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10095,f10587])).
fof(f10587,plain,(
  ( ! [X2,X0] : (~sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0',X2)) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4127])).
fof(f10095,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0',X0)) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2867])).
fof(f11650,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10094,f10586])).
fof(f10586,plain,(
  ( ! [X2,X0] : (~sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4126])).
fof(f10094,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'F_0')) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2866])).
fof(f11649,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10093,f839])).
fof(f10093,plain,(
  ~sP13('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2864])).
fof(f11647,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10090,f10630])).
fof(f10630,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','T_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4285])).
fof(f10090,plain,(
  sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','T_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2860])).
fof(f11646,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10089,f10621])).
fof(f10621,plain,(
  ( ! [X2,X0] : (~sP13('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2)) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4227])).
fof(f10089,plain,(
  sP13('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2857])).
fof(f11643,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10086,f649])).
fof(f10086,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2852])).
fof(f11642,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10085,f10633])).
fof(f10633,plain,(
  ( ! [X2,X0] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0',X2)) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4288])).
fof(f10085,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2845])).
fof(f11639,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10082,f10632])).
fof(f10632,plain,(
  ( ! [X2,X0] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4287])).
fof(f10082,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'F_0')) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2836])).
fof(f11638,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10081,f859])).
fof(f10081,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2831])).
fof(f11637,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10080,f859])).
fof(f10080,plain,(
  ~sP11('T_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2830])).
fof(f11636,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10079,f863])).
fof(f10079,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2824])).
fof(f11635,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10075,f10620])).
fof(f10620,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4226])).
fof(f10075,plain,(
  sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2820])).
fof(f11634,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10074,f10611])).
fof(f10611,plain,(
  ( ! [X0,X1] : (~sP11('F_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4185])).
fof(f10074,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2817])).
fof(f11633,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10073,f10611])).
fof(f10073,plain,(
  sP11('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2815])).
fof(f11632,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10072,f10612])).
fof(f10612,plain,(
  ( ! [X2,X0] : (~sP11('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2)) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4191])).
fof(f10072,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2810])).
fof(f11630,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10070,f647])).
fof(f10070,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2803])).
fof(f11629,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10069,f647])).
fof(f10069,plain,(
  ~sP10('T_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2802])).
fof(f11628,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10068,f648])).
fof(f10068,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2795])).
fof(f11627,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10067,f10641])).
fof(f10641,plain,(
  ( ! [X2,X0] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0',X2)) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4296])).
fof(f10067,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2774])).
fof(f11626,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10066,f10637])).
fof(f10637,plain,(
  ( ! [X2,X0] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'T_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4292])).
fof(f10066,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'T_0')) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2773])).
fof(f11625,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10065,f1188])).
fof(f10065,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','T_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2772])).
fof(f11618,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10058,f646])).
fof(f10058,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2757])).
fof(f11615,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10055,f10553])).
fof(f10553,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4034])).
fof(f10055,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2752])).
fof(f11614,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11613,f10553])).
fof(f11613,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10054,f10926])).
fof(f10054,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2751])).
fof(f11612,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10053,f1825])).
fof(f10053,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2750])).
fof(f11611,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11610,f1825])).
fof(f11610,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10052,f10926])).
fof(f10052,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0') | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2749])).
fof(f11609,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10051,f10584])).
fof(f10584,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4124])).
fof(f10051,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0','F_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2748])).
fof(f11608,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10050,f10585])).
fof(f10585,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','T_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4125])).
fof(f10050,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','T_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2747])).
fof(f11607,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10049,f643])).
fof(f10049,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2734])).
fof(f11606,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10048,f643])).
fof(f10048,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2733])).
fof(f11605,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10047,f643])).
fof(f10047,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2732])).
fof(f11604,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10046,f643])).
fof(f10046,plain,(
  ~sP4('F_0','F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2731])).
fof(f11603,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10045,f644])).
fof(f10045,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2716])).
fof(f11602,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10044,f644])).
fof(f10044,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2715])).
fof(f11601,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10043,f645])).
fof(f10043,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2699])).
fof(f11598,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10040,f642])).
fof(f10040,plain,(
  ~sP5('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2694])).
fof(f11595,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10037,f641])).
fof(f10037,plain,(
  ~sP6('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2689])).
fof(f11593,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10035,f11086])).
fof(f11086,plain,(
  ( ! [X2,X0] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10550,f10525])).
fof(f10550,plain,(
  ( ! [X2,X0,X3] : (~sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4028])).
fof(f10035,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2687])).
fof(f11592,plain,(
  $false | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11591,f11086])).
fof(f11591,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10034,f10926])).
fof(f10034,plain,(
  sP7('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2686])).
fof(f11589,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10032,f11086])).
fof(f10032,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2675])).
fof(f11586,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10030,f10549])).
fof(f10549,plain,(
  ( ! [X0] : (~sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4027])).
fof(f10030,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2673])).
fof(f11585,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10029,f1703])).
fof(f10029,plain,(
  ~sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2668])).
fof(f11581,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10025,f650])).
fof(f10025,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2658])).
fof(f11580,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10024,f650])).
fof(f10024,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0,'T_0')) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2656])).
fof(f11579,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10023,f651])).
fof(f10023,plain,(
  ( ! [X0] : (~sP2('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2653])).
fof(f11578,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10022,f651])).
fof(f10022,plain,(
  ( ! [X0] : (~sP2('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2652])).
fof(f11576,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10020,f651])).
fof(f10020,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2641])).
fof(f11574,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10018,f651])).
fof(f10018,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2636])).
fof(f11573,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10017,f10539])).
fof(f10539,plain,(
  ( ! [X0] : (~sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f3985])).
fof(f10017,plain,(
  sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2635])).
fof(f11572,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10016,f10540])).
fof(f10540,plain,(
  ( ! [X0] : (~sP1('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f3987])).
fof(f10016,plain,(
  sP1('T_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2634])).
fof(f11571,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10014,f10543])).
fof(f10543,plain,(
  ( ! [X0] : (sP1('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f3990])).
fof(f10014,plain,(
  ~sP1('F_0','const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2632])).
fof(f11570,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10013,f10542])).
fof(f10542,plain,(
  ( ! [X0] : (sP1('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f3989])).
fof(f10013,plain,(
  ~sP1('const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2630])).
fof(f11568,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10011,f11312])).
fof(f11312,plain,(
  ( ! [X116] : (s(bool,'T_0') = s(bool,X116)) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(global_subsumption,[],[f320,f319,f318,f321,f328,f329,f330,f332,f336,f344,f343,f405,f406,f407,f417,f414,f413,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f591,f586,f604,f605,f607,f606,f609,f608,f610,f611,f613,f612,f614,f615,f617,f616,f619,f618,f621,f620,f623,f622,f624,f625,f627,f626,f629,f628,f630,f631,f633,f632,f634,f636,f635,f638,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f668,f678,f679,f682,f687,f704,f705,f714,f723,f726,f733,f736,f747,f749,f754,f757,f761,f764,f768,f771,f772,f775,f785,f793,f794,f797,f799,f805,f807,f811,f812,f815,f817,f823,f825,f839,f838,f841,f844,f864,f863,f862,f860,f859,f858,f866,f910,f913,f946,f959,f1011,f1031,f1047,f1048,f1064,f1071,f1070,f1079,f1078,f1091,f1089,f1100,f1098,f1110,f1122,f1129,f1144,f1151,f1155,f1165,f1182,f1189,f1188,f1187,f1186,f1200,f1207,f1211,f1237,f1270,f1282,f1285,f1292,f1303,f1313,f1317,f1330,f1342,f1362,f1368,f1380,f1389,f1399,f1416,f1423,f1431,f1438,f1442,f1474,f1475,f1487,f1491,f1537,f1543,f1587,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1779,f1780,f1781,f1782,f1783,f1784,f1859,f1857,f1852,f1849,f1843,f1839,f1835,f1831,f1825,f1821,f1813,f1808,f1805,f1803,f1798,f1795,f1794,f1866,f1868,f1899,f1898,f1897,f1894,f1891,f1890,f1889,f1942,f1941,f1940,f1987,f1959,f1956,f2046,f2050,f2052,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2310,f2311,f2312,f2379,f2438,f2454,f2535,f2459,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3074,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3110,f3111,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3254,f3255,f3256,f3257,f3258,f3259,f3358,f3368,f3865,f3860,f3859,f3854,f3849,f3844,f3843,f3842,f3841,f3840,f3839,f3838,f3837,f3836,f3835,f3834,f3833,f3832,f3831,f3830,f3829,f3828,f3827,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3672,f3671,f3666,f3664,f3662,f3657,f3654,f3649,f3648,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3585,f3580,f3575,f3568,f3563,f3558,f3553,f3547,f3543,f3539,f3535,f3529,f3525,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4327,f4322,f4321,f4316,f4311,f4306,f4305,f4304,f4303,f4302,f4301,f4300,f4299,f4298,f4297,f4296,f4295,f4294,f4293,f4292,f4291,f4290,f4289,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4140,f4139,f4134,f4132,f4130,f4127,f4126,f4125,f4124,f4123,f4122,f4121,f4120,f4119,f4118,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4068,f4065,f4062,f4057,f4054,f4051,f4048,f4044,f4042,f4040,f4038,f4034,f4032,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4820,f4815,f4814,f4809,f4804,f4799,f4798,f4797,f4796,f4795,f4794,f4793,f4792,f4791,f4790,f4789,f4788,f4787,f4786,f4785,f4784,f4783,f4782,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4633,f4632,f4627,f4625,f4623,f4620,f4619,f4618,f4617,f4616,f4615,f4614,f4613,f4612,f4611,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4561,f4558,f4555,f4550,f4547,f4544,f4541,f4537,f4535,f4533,f4531,f4527,f4525,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f5191,f5539,f5537,f5535,f5534,f5531,f5526,f5525,f5519,f5518,f5516,f5513,f5510,f5509,f5508,f5507,f5506,f5505,f5500,f5499,f5493,f5492,f5491,f5489,f5487,f5486,f5485,f5482,f5481,f5480,f5477,f5470,f5464,f5463,f5461,f5456,f5455,f5449,f5448,f5447,f5446,f5445,f5442,f5440,f5435,f5434,f5428,f5427,f5420,f5399,f5398,f5397,f5396,f5392,f5391,f5387,f5386,f5385,f5382,f5380,f5378,f5377,f5376,f5375,f5374,f5373,f5372,f5371,f5370,f5357,f5356,f5355,f5354,f5339,f5338,f5322,f5321,f5320,f5315,f5314,f5313,f5308,f5303,f5302,f5301,f5277,f5274,f5273,f5272,f5267,f5263,f5262,f5257,f5253,f5249,f5246,f5245,f5239,f5234,f5233,f5229,f5228,f5227,f5226,f5225,f5223,f5218,f5656,f5726,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6167,f6170,f6173,f6176,f6179,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6208,f6209,f6210,f6211,f6213,f5868,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6260,f6262,f6264,f6266,f6268,f5196,f5192,f1997,f2035,f5045,f4353,f2542,f2386,f2267,f1976,f2038,f5052,f2268,f2387,f2543,f2414,f1964,f2026,f4973,f5062,f6212,f2460,f2051,f2047,f2043,f2037,f1985,f1984,f1982,f593,f419,f5727,f5869,f5221,f3017,f3016,f592,f348,f347,f7210,f7222,f7221,f7220,f7219,f7257,f7256,f7255,f7267,f7277,f7280,f7282,f7284,f7285,f7286,f7299,f7300,f7301,f7302,f7410,f7307,f7415,f7425,f7444,f7443,f7442,f7441,f7463,f7461,f7460,f7459,f7458,f7476,f7479,f7482,f7484,f7485,f7486,f7500,f7501,f7502,f7503,f7613,f7508,f7618,f7628,f7637,f7642,f7644,f7662,f7666,f7667,f7670,f7775,f7672,f7673,f7674,f7675,f7676,f7677,f7794,f7795,f7767,f7769,f7839,f8194,f8197,f8202,f8203,f8284,f8285,f8266,f8268,f8346,f8349,f8354,f8355,f8437,f8438,f8418,f8420,f8831,f8826,f8825,f8820,f8815,f8810,f8809,f8808,f8807,f8806,f8805,f8804,f8803,f8802,f8801,f8800,f8799,f8798,f8797,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8783,f8782,f8778,f8775,f8774,f8766,f8765,f8756,f8731,f8730,f8729,f8725,f8724,f8720,f8719,f8718,f8709,f8695,f8689,f8686,f8685,f8681,f8680,f8679,f8678,f8677,f8673,f8671,f8665,f8664,f8655,f8654,f8644,f8641,f8640,f8639,f8638,f8637,f8636,f8630,f8628,f8626,f8623,f8622,f8621,f8620,f8619,f8618,f8617,f8616,f8615,f8614,f8613,f8612,f8611,f8610,f8600,f8599,f8588,f8587,f8577,f8576,f8565,f8564,f8559,f8556,f8553,f8550,f8545,f8542,f8539,f8536,f8532,f8530,f8528,f8526,f8522,f8520,f8518,f8516,f8515,f8508,f8503,f8497,f8496,f8489,f8470,f8469,f8468,f8467,f8465,f8464,f8463,f8462,f8461,f8454,f8881,f8887,f9089,f9177,f9185,f9189,f9193,f9143,f9321,f9320,f9318,f9317,f9310,f9326,f9329,f9334,f9335,f9337,f9338,f9341,f9342,f9345,f9350,f9351,f9353,f9354,f9357,f9368,f9367,f9364,f9408,f9445,f9448,f9453,f9454,f9555,f9556,f9520,f9522,f9526,f9527,f9578,f9577,f9575,f9574,f9573,f9612,f9613,f9615,f9618,f9619,f9623,f9624,f9626,f9627,f9629,f9630,f9681,f9821,f9684,f9685,f9686,f9688,f9690,f9692,f9698,f9699,f9706,f9707,f9708,f9709,f9710,f9711,f9712,f9713,f9714,f9715,f9716,f9729,f9730,f9732,f9735,f9736,f9740,f9741,f9743,f9744,f9829,f9747,f9798,f9799,f9801,f9802,f9803,f9805,f9807,f9809,f9815,f9816,f9826,f9887,f9910,f9922,f9966,f9988,f9990,f9991,f9992,f10311,f10517,f10519,f10523,f10525,f10926,f11041,f10935,f10936,f10937,f10938,f10939,f10941,f10943,f10948,f10949,f10950,f10952,f10953,f10954,f10955,f10956,f10958,f10959,f10961,f10962,f10970,f10971,f10974,f10975,f10976,f10977,f10979,f10980,f10981,f10982,f10983,f10984,f10986,f10987,f10991,f10992,f10993,f10994,f10995,f10996,f10997,f10998,f11002,f11003,f11004,f11005,f11007,f11008,f11009,f11010,f11011,f11012,f11014,f11015,f11020,f11021,f11022,f11023,f11024,f11027,f11028,f11029,f11030,f10539,f10540,f11084,f10542,f10543,f10544,f10545,f11085,f10547,f10548,f10549,f11086,f10553,f10554,f11091,f11093,f11095,f11097,f10559,f11099,f10561,f10562,f10563,f11101,f10565,f10566,f10567,f10568,f11102,f11103,f10583,f10584,f10585,f10586,f10587,f11107,f10589,f10590,f11109,f11112,f10593,f11113,f10595,f11114,f10597,f10598,f11115,f10601,f10602,f11116,f10608,f10609,f11121,f10611,f10612,f10613,f11122,f11123,f10620,f10621,f10622,f10623,f11124,f10626,f11125,f10629,f10630,f11126,f10632,f10633,f10636,f10637,f10640,f10641,f10644,f11240,f11266,f11271,f11311])).
fof(f11311,plain,(
  ( ! [X116,X114,X115] : (sP2(X114,X115,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | s(bool,X114) = s(bool,X116) | s(bool,'T_0') = s(bool,X116)) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10908,f10926])).
fof(f10908,plain,(
  ( ! [X116,X114,X115] : (sP2(X114,X115,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | s(bool,X114) = s(bool,X116) | s(bool,'T_0') = s(bool,X116)) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f6206])).
fof(f11271,plain,(
  ( ! [X83,X82] : (sP2('const.divides.divides_2'(s('type.num.num',X82),s('type.num.num',X82)),X83,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10876,f10926])).
fof(f10876,plain,(
  ( ! [X83,X82] : (sP2('const.divides.divides_2'(s('type.num.num',X82),s('type.num.num',X82)),X83,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f3254])).
fof(f11266,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11265,f10961])).
fof(f11265,plain,(
  ( ! [X0,X1] : (~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0) | sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11264,f330])).
fof(f11264,plain,(
  ( ! [X0,X1] : (~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),X0) | sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11263,f10926])).
fof(f11263,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11262,f330])).
fof(f11262,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11261,f10926])).
fof(f11261,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11260,f10958])).
fof(f11260,plain,(
  ( ! [X0,X1] : (~sP6(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X1) | sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10870,f10926])).
fof(f10870,plain,(
  ( ! [X0,X1] : (~sP6(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X1) | sP7(X0,X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | ~sP5(X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f1866])).
fof(f11240,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11239,f10958])).
fof(f11239,plain,(
  ( ! [X0] : (~sP6('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0) | p(s(bool,X0))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10838,f10926])).
fof(f10838,plain,(
  ( ! [X0] : (~sP6('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0) | p(s(bool,X0))) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f1282])).
fof(f10644,plain,(
  ( ! [X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)),X3)) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4299])).
fof(f10640,plain,(
  ( ! [X2,X0,X3] : (sP11('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X3)))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4295])).
fof(f10636,plain,(
  ( ! [X2,X0,X3] : (sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)),X3)) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4291])).
fof(f11126,plain,(
  ( ! [X2,X0] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10631,f10525])).
fof(f10631,plain,(
  ( ! [X2,X0,X3] : (~sP13('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4286])).
fof(f10629,plain,(
  ( ! [X0] : (~sP13('T_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4279])).
fof(f10626,plain,(
  ( ! [X0] : (sP13('F_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4271])).
fof(f11124,plain,(
  ( ! [X2,X0] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10624,f10525])).
fof(f10624,plain,(
  ( ! [X2,X0,X3] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4262])).
fof(f10623,plain,(
  ( ! [X0] : (~sP12('T_0','F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4261])).
fof(f10622,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','T_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4252])).
fof(f10613,plain,(
  ( ! [X0] : (~sP10('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4205])).
fof(f11121,plain,(
  ( ! [X2,X0] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10610,f10525])).
fof(f10610,plain,(
  ( ! [X2,X0,X3] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4183])).
fof(f10609,plain,(
  ( ! [X0] : (~sP9('F_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4182])).
fof(f10608,plain,(
  ( ! [X0] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4179])).
fof(f11116,plain,(
  ( ! [X2,X0] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10603,f10525])).
fof(f10603,plain,(
  ( ! [X2,X0,X3] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4172])).
fof(f10602,plain,(
  ( ! [X0] : (sP9('T_0','T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4170])).
fof(f10601,plain,(
  ( ! [X0] : (sP9('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4165])).
fof(f11115,plain,(
  ( ! [X2,X0] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10599,f10525])).
fof(f10599,plain,(
  ( ! [X2,X0,X3] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4156])).
fof(f10598,plain,(
  ( ! [X0] : (~sP8('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4155])).
fof(f10597,plain,(
  ( ! [X0] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4146])).
fof(f11114,plain,(
  ( ! [X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10596,f10525])).
fof(f10596,plain,(
  ( ! [X4,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4144])).
fof(f10595,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4143])).
fof(f11113,plain,(
  ( ! [X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10594,f10525])).
fof(f10594,plain,(
  ( ! [X4,X0,X3,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4142])).
fof(f11112,plain,(
  ( ! [X2,X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11111,f330])).
fof(f11111,plain,(
  ( ! [X2,X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11110,f10926])).
fof(f11110,plain,(
  ( ! [X2,X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10592,f10525])).
fof(f10592,plain,(
  ( ! [X2,X0,X3] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4140])).
fof(f11109,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11108,f330])).
fof(f11108,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10591,f10926])).
fof(f10591,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4139])).
fof(f10590,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4134])).
fof(f10589,plain,(
  ( ! [X0,X1] : (sP9('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4132])).
fof(f11107,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11106,f330])).
fof(f11106,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10588,f10926])).
fof(f10588,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4130])).
fof(f10583,plain,(
  ( ! [X2,X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X2)))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4123])).
fof(f11103,plain,(
  ( ! [X2,X0] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10573,f10525])).
fof(f10573,plain,(
  ( ! [X2,X0,X3] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4106])).
fof(f11102,plain,(
  ( ! [X2,X0] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10569,f10525])).
fof(f10569,plain,(
  ( ! [X2,X0,X3] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))),'F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4087])).
fof(f10568,plain,(
  ( ! [X0] : (~sP6('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4086])).
fof(f10567,plain,(
  ( ! [X0] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','F_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4077])).
fof(f10566,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4076])).
fof(f10565,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4071])).
fof(f11101,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11100,f330])).
fof(f11100,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10564,f10926])).
fof(f10564,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4068])).
fof(f10563,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4065])).
fof(f10562,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4062])).
fof(f10561,plain,(
  ( ! [X2,X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4057])).
fof(f11099,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11098,f330])).
fof(f11098,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10560,f10926])).
fof(f10560,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4054])).
fof(f10559,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4051])).
fof(f11097,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11096,f330])).
fof(f11096,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10558,f10926])).
fof(f10558,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4048])).
fof(f11095,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11094,f330])).
fof(f11094,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10557,f10926])).
fof(f10557,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4044])).
fof(f11093,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11092,f330])).
fof(f11092,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10556,f10926])).
fof(f10556,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4042])).
fof(f11091,plain,(
  ( ! [X0] : (sP7('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11090,f330])).
fof(f11090,plain,(
  ( ! [X0] : (sP7('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10555,f10926])).
fof(f10555,plain,(
  ( ! [X0] : (sP7('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4040])).
fof(f10554,plain,(
  ( ! [X0,X1] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4038])).
fof(f10548,plain,(
  ( ! [X2,X0] : (~sP3('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2)) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4020])).
fof(f10547,plain,(
  ( ! [X0,X1] : (~sP3('F_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4015])).
fof(f11085,plain,(
  ( ! [X2,X0,X3] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10546,f10525])).
fof(f10546,plain,(
  ( ! [X4,X2,X0,X3] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X4)))))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4011])).
fof(f10545,plain,(
  ( ! [X0,X1] : (sP2('T_0',X0,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4010])).
fof(f10544,plain,(
  ( ! [X2,X0] : (sP2('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),X2,'T_0')) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4005])).
fof(f11030,plain,(
  ( ! [X0] : (sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7460])).
fof(f11029,plain,(
  ( ! [X0] : (sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7459])).
fof(f11028,plain,(
  ( ! [X0] : (sP7('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7444])).
fof(f11027,plain,(
  ( ! [X0] : (sP7('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7443])).
fof(f11024,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7257])).
fof(f11023,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7256])).
fof(f11022,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7222])).
fof(f11021,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7221])).
fof(f11020,plain,(
  sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7219])).
fof(f11015,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0',X0)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5492])).
fof(f11014,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'F_0')) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5491])).
fof(f11012,plain,(
  ( ! [X0] : (sP13('T_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5487])).
fof(f11011,plain,(
  sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5486])).
fof(f11010,plain,(
  sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','T_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5485])).
fof(f11009,plain,(
  sP13('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5482])).
fof(f11008,plain,(
  ( ! [X0,X1] : (sP12('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,X1)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5481])).
fof(f11007,plain,(
  ( ! [X0,X1] : (sP12(X0,X1,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5480])).
fof(f11005,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5470])).
fof(f11003,plain,(
  ( ! [X0] : (~sP13('F_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5463])).
fof(f11002,plain,(
  ( ! [X0] : (~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'F_0')) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5461])).
fof(f10998,plain,(
  sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5448])).
fof(f10997,plain,(
  sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5447])).
fof(f10996,plain,(
  sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5446])).
fof(f10995,plain,(
  sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5445])).
fof(f10994,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5442])).
fof(f10993,plain,(
  sP11('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5440])).
fof(f10992,plain,(
  sP11('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5435])).
fof(f10991,plain,(
  ( ! [X0,X1] : (sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,X1)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5434])).
fof(f10987,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5399])).
fof(f10986,plain,(
  ( ! [X0] : (~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'T_0')) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5398])).
fof(f10984,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5396])).
fof(f10983,plain,(
  ( ! [X0] : (sP9('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5392])).
fof(f10982,plain,(
  ( ! [X0] : (sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5391])).
fof(f10981,plain,(
  ( ! [X0] : (sP9('F_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5387])).
fof(f10980,plain,(
  ( ! [X0,X1] : (sP8('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,X1)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5386])).
fof(f10979,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X1)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5385])).
fof(f10977,plain,(
  ( ! [X0] : (~sP9('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5380])).
fof(f10976,plain,(
  ( ! [X0] : (~sP9('T_0',X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5378])).
fof(f10975,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5377])).
fof(f10974,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5376])).
fof(f10971,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','F_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5371])).
fof(f10970,plain,(
  sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','T_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5370])).
fof(f10962,plain,(
  ( ! [X0,X1] : (sP5('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,X1)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5321])).
fof(f10961,plain,(
  ( ! [X0,X1] : (sP5(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X1)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5320])).
fof(f10959,plain,(
  ( ! [X0,X1] : (sP6('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,X1)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5314])).
fof(f10958,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X1)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5313])).
fof(f10956,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0')) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5303])).
fof(f10955,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5302])).
fof(f10954,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5277])).
fof(f10953,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5274])).
fof(f10952,plain,(
  sP7('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5272])).
fof(f10950,plain,(
  ( ! [X0] : (sP3(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5263])).
fof(f10949,plain,(
  ( ! [X0] : (sP3(X0,'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5262])).
fof(f10948,plain,(
  ( ! [X0] : (sP3(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5257])).
fof(f10943,plain,(
  ( ! [X0] : (~sP2('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0',X0)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5239])).
fof(f10941,plain,(
  ( ! [X0] : (~sP2(X0,'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5233])).
fof(f10939,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5228])).
fof(f10938,plain,(
  sP1('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5227])).
fof(f10937,plain,(
  ~sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5226])).
fof(f10936,plain,(
  ~sP1('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5225])).
fof(f10935,plain,(
  ~sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5223])).
fof(f11041,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10931,f10926])).
fof(f10931,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f10311])).
fof(f10523,plain,(
  ( ! [X89,X86] : (s('type.num.num',X89) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num','const.num.|48|_0')))) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10522,f9988])).
fof(f10522,plain,(
  ( ! [X89,X86] : (s('type.num.num',X89) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl70 | $spl74)),
  inference(forward_demodulation,[],[f10521,f10311])).
fof(f10521,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X87),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X88),s('type.num.num',sK16(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num',X88))))))))))) ) | ($spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10320,f10519])).
fof(f10320,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X89)))) | s('type.num.num',X89) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X87),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X88),s('type.num.num',sK16(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num',X88))))))))))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10311,f2542])).
fof(f10519,plain,(
  ( ! [X12,X13] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',X13))))) ) | ($spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10318,f10311])).
fof(f10318,plain,(
  ( ! [X12,X13] : (s('type.num.num',X13) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',X13))))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10311,f2460])).
fof(f10517,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X8))))) ) | ($spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10313,f10311])).
fof(f10313,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num',X8) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X8))))) ) | ($spl70 | $spl74)),
  inference(backward_demodulation,[],[f10311,f1976])).
fof(f10011,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2625])).
fof(f11567,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10010,f10525])).
fof(f10010,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK14)))) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2620])).
fof(f11566,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10009,f10525])).
fof(f10009,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X0))),s('type.num.num',X1)))) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2609])).
fof(f11557,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10002,f10525])).
fof(f10002,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X0)))) ) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f2572])).
fof(f11546,plain,(
  $false | ($spl3 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f9995,f10926])).
fof(f9995,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK14) | ($spl3 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f9988,f589])).
fof(f11538,plain,(
  $false | ($spl3 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11537,f10926])).
fof(f11537,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl3 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10478,f10525])).
fof(f10478,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))))) | ($spl3 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10311,f3115])).
fof(f11511,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11510,f11007])).
fof(f11510,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11509,f330])).
fof(f11509,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10446,f10926])).
fof(f10446,plain,(
  ( ! [X0] : (~sP12('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'F_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10311,f8826])).
fof(f11508,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11507,f10981])).
fof(f11507,plain,(
  ( ! [X0] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11506,f330])).
fof(f11506,plain,(
  ( ! [X0] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10445,f10926])).
fof(f10445,plain,(
  ( ! [X0] : (~sP9('F_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10311,f8825])).
fof(f11505,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11504,f10979])).
fof(f11504,plain,(
  ( ! [X0] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11503,f330])).
fof(f11503,plain,(
  ( ! [X0] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10444,f10926])).
fof(f10444,plain,(
  ( ! [X0] : (~sP8('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10311,f8820])).
fof(f11502,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11501,f10961])).
fof(f11501,plain,(
  ( ! [X0] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11500,f330])).
fof(f11500,plain,(
  ( ! [X0] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10443,f10926])).
fof(f10443,plain,(
  ( ! [X0] : (~sP5('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10311,f8815])).
fof(f11499,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11498,f10958])).
fof(f11498,plain,(
  ( ! [X0] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11497,f330])).
fof(f11497,plain,(
  ( ! [X0] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10442,f10926])).
fof(f10442,plain,(
  ( ! [X0] : (~sP6('const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'F_0')) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10311,f8810])).
fof(f11337,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10923,f10525])).
fof(f10923,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f9310])).
fof(f11336,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10922,f11240])).
fof(f10922,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5192])).
fof(f11335,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10921,f330])).
fof(f10921,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f3111])).
fof(f11334,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10920,f330])).
fof(f10920,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f3110])).
fof(f11333,plain,(
  $false | ($spl3 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10918,f9990])).
fof(f10918,plain,(
  s('type.num.num',sK15) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f3072])).
fof(f11328,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11315,f321])).
fof(f11315,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f11312,f592])).
fof(f11327,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11326,f11240])).
fof(f11326,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11313,f11312])).
fof(f11313,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f11312,f347])).
fof(f11310,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11309,f11011])).
fof(f11309,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10902,f10926])).
fof(f10902,plain,(
  ~sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5539])).
fof(f11308,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11307,f11007])).
fof(f11307,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10901,f10926])).
fof(f10901,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5537])).
fof(f11306,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11305,f10998])).
fof(f11305,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10900,f10926])).
fof(f10900,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5535])).
fof(f11304,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11303,f10996])).
fof(f11303,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10899,f10926])).
fof(f10899,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5534])).
fof(f11302,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11301,f10997])).
fof(f11301,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10898,f10926])).
fof(f10898,plain,(
  ~sP11('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5531])).
fof(f11300,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11299,f647])).
fof(f11299,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10897,f10926])).
fof(f10897,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5526])).
fof(f11298,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11297,f647])).
fof(f11297,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10896,f10926])).
fof(f10896,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5525])).
fof(f11296,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11295,f648])).
fof(f11295,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10895,f10926])).
fof(f10895,plain,(
  ~sP10('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'F_0') | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5519])).
fof(f11294,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11293,f10595])).
fof(f11293,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10894,f10926])).
fof(f10894,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5518])).
fof(f11292,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11291,f646])).
fof(f11291,plain,(
  ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10893,f10926])).
fof(f10893,plain,(
  ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5516])).
fof(f11290,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11289,f642])).
fof(f11289,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10892,f10926])).
fof(f10892,plain,(
  ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5513])).
fof(f11288,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11287,f641])).
fof(f11287,plain,(
  ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10891,f10926])).
fof(f10891,plain,(
  ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5510])).
fof(f11286,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11285,f11004])).
fof(f11285,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10890,f10926])).
fof(f10890,plain,(
  ( ! [X0] : (sP13('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5509])).
fof(f11284,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11283,f650])).
fof(f11283,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10889,f10926])).
fof(f10889,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0)) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5508])).
fof(f11282,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11281,f650])).
fof(f11281,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10888,f10926])).
fof(f10888,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)))) ) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5507])).
fof(f11280,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11279,f10937])).
fof(f11279,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10887,f10926])).
fof(f10887,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5506])).
fof(f11278,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11277,f10937])).
fof(f11277,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10886,f10926])).
fof(f10886,plain,(
  sP1('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5505])).
fof(f11275,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11274,f1849])).
fof(f11274,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10884,f10926])).
fof(f10884,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15)),'T_0') | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f5372])).
fof(f11270,plain,(
  $false | ($spl3 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10875,f10523])).
fof(f10875,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) | ($spl3 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f3090])).
fof(f11242,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11241,f11020])).
fof(f11241,plain,(
  ~sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10839,f10926])).
fof(f10839,plain,(
  ~sP7('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK15))) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f1292])).
fof(f11186,plain,(
  $false | ($spl3 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10789,f10525])).
fof(f10789,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) | ($spl3 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f3116])).
fof(f11185,plain,(
  $false | ($spl3 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10788,f10525])).
fof(f10788,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK15),s('type.num.num',sK15))) | ($spl3 | $spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f3117])).
fof(f11089,plain,(
  $false | ($spl0 | $spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11088,f10974])).
fof(f11088,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f11087,f330])).
fof(f11087,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10552,f10926])).
fof(f10552,plain,(
  ( ! [X0] : (sP7('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),'T_0','const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10525,f4032])).
fof(f11083,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11035,f1894])).
fof(f11035,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7839])).
fof(f11082,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11034,f1942])).
fof(f11034,plain,(
  ~sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7642])).
fof(f11081,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11033,f1899])).
fof(f11033,plain,(
  ~sP7('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7637])).
fof(f11080,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11031,f1700])).
fof(f11031,plain,(
  sP7('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7461])).
fof(f11079,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11026,f1702])).
fof(f11026,plain,(
  sP7('F_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7441])).
fof(f11078,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11025,f1803])).
fof(f11025,plain,(
  ~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','T_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7267])).
fof(f11077,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11019,f1701])).
fof(f11019,plain,(
  ~sP7('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f7210])).
fof(f11076,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11018,f639])).
fof(f11018,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5500])).
fof(f11075,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11017,f639])).
fof(f11017,plain,(
  ~sP0('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5499])).
fof(f11074,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11016,f640])).
fof(f11016,plain,(
  ~sP0('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5493])).
fof(f11073,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11013,f839])).
fof(f11013,plain,(
  ~sP13('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5489])).
fof(f11072,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11006,f649])).
fof(f11006,plain,(
  ~sP12('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5477])).
fof(f11071,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11001,f860])).
fof(f11001,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5456])).
fof(f11070,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11000,f860])).
fof(f11000,plain,(
  ~sP11('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5455])).
fof(f11069,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10999,f864])).
fof(f10999,plain,(
  ~sP11('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5449])).
fof(f11068,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10990,f647])).
fof(f10990,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5428])).
fof(f11067,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10989,f647])).
fof(f10989,plain,(
  ~sP10('T_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5427])).
fof(f11066,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10988,f648])).
fof(f10988,plain,(
  ~sP10('T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5420])).
fof(f11065,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10985,f1189])).
fof(f10985,plain,(
  ~sP9('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0','T_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5397])).
fof(f11064,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10978,f646])).
fof(f10978,plain,(
  ~sP8('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5382])).
fof(f11063,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10973,f1849])).
fof(f10973,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5374])).
fof(f11062,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10972,f1831])).
fof(f10972,plain,(
  ( ! [X0] : (~sP7('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5373])).
fof(f11061,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10969,f643])).
fof(f10969,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5357])).
fof(f11060,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10968,f643])).
fof(f10968,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5356])).
fof(f11059,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10967,f643])).
fof(f10967,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5355])).
fof(f11058,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10966,f643])).
fof(f10966,plain,(
  ~sP4('F_0','F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5354])).
fof(f11057,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10965,f644])).
fof(f10965,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5339])).
fof(f11056,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10964,f644])).
fof(f10964,plain,(
  ~sP4('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5338])).
fof(f11055,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10963,f645])).
fof(f10963,plain,(
  ~sP4('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0','F_0') | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5322])).
fof(f11054,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10960,f642])).
fof(f10960,plain,(
  ~sP5('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5315])).
fof(f11053,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10957,f641])).
fof(f10957,plain,(
  ~sP6('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5308])).
fof(f11052,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10951,f1703])).
fof(f10951,plain,(
  ~sP7('T_0','T_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5267])).
fof(f11051,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10947,f650])).
fof(f10947,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'T_0',X0)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5253])).
fof(f11050,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10946,f650])).
fof(f10946,plain,(
  ( ! [X0] : (~sP3('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0,'T_0')) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5249])).
fof(f11049,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10945,f651])).
fof(f10945,plain,(
  ( ! [X0] : (~sP2('const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5246])).
fof(f11048,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10944,f651])).
fof(f10944,plain,(
  ( ! [X0] : (~sP2('F_0','const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),X0)) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5245])).
fof(f11047,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10942,f651])).
fof(f10942,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5234])).
fof(f11046,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10940,f651])).
fof(f10940,plain,(
  ( ! [X0] : (~sP2(X0,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')),'F_0')) ) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5229])).
fof(f11045,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f11044,f665])).
fof(f11044,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl5 | $spl70 | $spl74)),
  inference(forward_demodulation,[],[f10934,f670])).
fof(f10934,plain,(
  s(bool,'F_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5221])).
fof(f11043,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10933,f670])).
fof(f10933,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f5218])).
fof(f11042,plain,(
  $false | ($spl5 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f10932,f330])).
fof(f10932,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl5 | $spl70 | $spl74)),
  inference(backward_demodulation,[],[f10926,f3074])).
fof(f9989,plain,(
  $false | ($spl9 | $spl70 | $spl74)),
  inference(subsumption_resolution,[],[f9988,f2607])).
fof(f9826,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl74),
  inference(cnf_transformation,[],[f9826_D])).
fof(f9826_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f9828,plain,(
  ( ! [X17] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X17))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X17)) ) | $spl78),
  inference(cnf_transformation,[],[f9828_D])).
fof(f9828_D,plain,(
  ( ! [X17] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X17))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X17)) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f9716,plain,(
  ( ! [X17] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X17))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X17)) )),
  inference(superposition,[],[f3039,f2193])).
fof(f9827,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X10))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X11))) | s('type.num.num',X10) = s('type.num.num',X11)) ) | $spl76),
  inference(cnf_transformation,[],[f9827_D])).
fof(f9827_D,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X10))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X11))) | s('type.num.num',X10) = s('type.num.num',X11)) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f9713,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X12))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X13))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X12) = s('type.num.num',X13)) )),
  inference(superposition,[],[f450,f2193])).
fof(f9712,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X10))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X11))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num',X10) = s('type.num.num',X11)) )),
  inference(superposition,[],[f450,f2193])).
fof(f9823,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl70),
  inference(cnf_transformation,[],[f9823_D])).
fof(f9823_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f9824,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6)))) ) | $spl72),
  inference(cnf_transformation,[],[f9824_D])).
fof(f9824_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6)))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f9709,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f420,f2193])).
fof(f7834,plain,(
  $false | ($spl9 | $spl62 | $spl66)),
  inference(subsumption_resolution,[],[f7833,f2607])).
fof(f7833,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl62 | $spl66)),
  inference(forward_demodulation,[],[f7777,f7780])).
fof(f7780,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl66),
  inference(cnf_transformation,[],[f7780_D])).
fof(f7780_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f7781,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X11))) | s('type.num.num',X10) = s('type.num.num',X11)) ) | $spl68),
  inference(cnf_transformation,[],[f7781_D])).
fof(f7781_D,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X11))) | s('type.num.num',X10) = s('type.num.num',X11)) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f7677,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X12))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X13))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num',X12) = s('type.num.num',X13)) )),
  inference(superposition,[],[f450,f2192])).
fof(f7676,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X11))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num',X10) = s('type.num.num',X11)) )),
  inference(superposition,[],[f450,f2192])).
fof(f7777,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl62),
  inference(cnf_transformation,[],[f7777_D])).
fof(f7777_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f7778,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) | $spl64),
  inference(cnf_transformation,[],[f7778_D])).
fof(f7778_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f7673,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f420,f2192])).
fof(f6346,plain,(
  $false | ($spl9 | $spl12)),
  inference(subsumption_resolution,[],[f6309,f321])).
fof(f6309,plain,(
  ~p(s(bool,'T_0')) | ($spl9 | $spl12)),
  inference(backward_demodulation,[],[f6107,f5193])).
fof(f5193,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl9),
  inference(unit_resulting_resolution,[],[f2607,f2035])).
fof(f6345,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315,f6317,f6319,f6321,f6323,f6325,f6327,f6329,f6331,f6333,f6335,f6337,f6339,f6341,f6344])).
fof(f6344,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))) ) | $spl12),
  inference(subsumption_resolution,[],[f6308,f321])).
fof(f6308,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f5196])).
fof(f6341,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) ) | $spl12),
  inference(subsumption_resolution,[],[f6305,f321])).
fof(f6305,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f2035])).
fof(f6339,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X87),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X88),s('type.num.num',sK16(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num',X88))))))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f6302,f321])).
fof(f6302,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'T_0')) | s('type.num.num',X89) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X87),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X88),s('type.num.num',sK16(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num',X88))))))))))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f2542])).
fof(f6337,plain,(
  ( ! [X45,X46,X44] : (s('type.num.num',X46) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num',sK16(X46,'const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num',X45))))))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f6301,f321])).
fof(f6301,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | s('type.num.num',X46) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num',sK16(X46,'const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X44),s('type.num.num',X45))))))))))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f2386])).
fof(f6335,plain,(
  ( ! [X39,X38,X40] : (s('type.num.num',X40) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X39),s('type.num.num',sK16(X40,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.num.num',X39))))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f6300,f321])).
fof(f6300,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | s('type.num.num',X40) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X39),s('type.num.num',sK16(X40,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.num.num',X39))))))))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f2267])).
fof(f6333,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num',X6) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',sK16(X6,'const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f6298,f321])).
fof(f6298,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'T_0')) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',sK16(X6,'const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))))))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f2038])).
fof(f6331,plain,(
  ( ! [X43,X41,X42] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X41))),s('type.num.num',X42))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X41),s('type.num.num',X42))),s('type.num.num',X42)),X43))))) ) | $spl12),
  inference(subsumption_resolution,[],[f6296,f321])).
fof(f6296,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X41))),s('type.num.num',X42))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X43),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X41),s('type.num.num',X42))),s('type.num.num',X42)),X43))))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f2268])).
fof(f6329,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X47),s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X49),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X47),s('type.num.num',X48)))),X49))))) ) | $spl12),
  inference(subsumption_resolution,[],[f6295,f321])).
fof(f6295,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X47),s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X49),s('type.num.num',sK16('const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X47),s('type.num.num',X48)))),X49))))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f2387])).
fof(f6327,plain,(
  ( ! [X92,X90,X93,X91] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X91),s('type.num.num',X92))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X93),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))),s('type.num.num',X92)),X93))))) ) | $spl12),
  inference(subsumption_resolution,[],[f6294,f321])).
fof(f6294,plain,(
  ( ! [X92,X90,X93,X91] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X91),s('type.num.num',X92))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X93),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))),s('type.num.num',X92)),X93))))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f2543])).
fof(f6325,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)),X6))))) ) | $spl12),
  inference(subsumption_resolution,[],[f6291,f321])).
fof(f6291,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)),X6))))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f2026])).
fof(f6323,plain,(
  ( ! [X12,X13] : (s('type.num.num',X12) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X12)),X13))))) ) | $spl12),
  inference(subsumption_resolution,[],[f6286,f321])).
fof(f6286,plain,(
  ( ! [X12,X13] : (~p(s(bool,'T_0')) | s('type.num.num',X12) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X12)),X13))))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f2051])).
fof(f6321,plain,(
  ( ! [X2,X3] : (s('type.num.num',X2) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X3))))) ) | $spl12),
  inference(subsumption_resolution,[],[f6285,f321])).
fof(f6285,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',sK16('const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X3))))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f2047])).
fof(f6319,plain,(
  ( ! [X12,X13] : (s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',sK16(X13,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X12))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f6284,f321])).
fof(f6284,plain,(
  ( ! [X12,X13] : (~p(s(bool,'T_0')) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',sK16(X13,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X12))))))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f2043])).
fof(f6317,plain,(
  ( ! [X2,X3] : (s('type.num.num',X3) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',sK16(X3,'const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f6283,f321])).
fof(f6283,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',sK16(X3,'const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f2037])).
fof(f6315,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK16(X1,X0))))) ) | $spl12),
  inference(subsumption_resolution,[],[f6279,f321])).
fof(f6279,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK16(X1,X0))))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f593])).
fof(f6312,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl12),
  inference(subsumption_resolution,[],[f6269,f6107])).
fof(f6269,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl12),
  inference(backward_demodulation,[],[f6107,f347])).
fof(f6343,plain,(
  $false | ($spl5 | $spl12)),
  inference(subsumption_resolution,[],[f6307,f321])).
fof(f6307,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl12)),
  inference(backward_demodulation,[],[f6107,f5192])).
fof(f6342,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315,f6317,f6319,f6321,f6323,f6325,f6327,f6329,f6331,f6333,f6335,f6337,f6339,f6341])).
fof(f6340,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315,f6317,f6319,f6321,f6323,f6325,f6327,f6329,f6331,f6333,f6335,f6337,f6339])).
fof(f6338,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315,f6317,f6319,f6321,f6323,f6325,f6327,f6329,f6331,f6333,f6335,f6337])).
fof(f6336,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315,f6317,f6319,f6321,f6323,f6325,f6327,f6329,f6331,f6333,f6335])).
fof(f6334,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315,f6317,f6319,f6321,f6323,f6325,f6327,f6329,f6331,f6333])).
fof(f6332,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315,f6317,f6319,f6321,f6323,f6325,f6327,f6329,f6331])).
fof(f6330,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315,f6317,f6319,f6321,f6323,f6325,f6327,f6329])).
fof(f6328,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315,f6317,f6319,f6321,f6323,f6325,f6327])).
fof(f6326,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315,f6317,f6319,f6321,f6323,f6325])).
fof(f6324,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315,f6317,f6319,f6321,f6323])).
fof(f6322,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315,f6317,f6319,f6321])).
fof(f6320,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315,f6317,f6319])).
fof(f6318,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315,f6317])).
fof(f6316,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312,f6315])).
fof(f6314,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f6271,f321])).
fof(f6271,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(backward_demodulation,[],[f6107,f592])).
fof(f6313,plain,(
  $false | $spl12),
  inference(global_subsumption,[],[f320,f319,f318,f321,f592,f328,f329,f330,f332,f336,f344,f343,f348,f347,f405,f406,f407,f417,f414,f413,f419,f593,f425,f424,f594,f443,f440,f439,f438,f448,f449,f452,f451,f450,f458,f457,f456,f577,f454,f453,f576,f471,f470,f469,f485,f484,f483,f482,f481,f480,f479,f489,f488,f487,f486,f493,f492,f491,f490,f497,f496,f495,f494,f501,f500,f499,f498,f575,f505,f504,f503,f502,f512,f511,f510,f509,f518,f515,f514,f513,f525,f524,f523,f574,f521,f520,f519,f529,f528,f527,f526,f533,f532,f531,f530,f542,f541,f540,f573,f538,f537,f536,f546,f545,f544,f543,f550,f549,f548,f547,f422,f421,f420,f334,f333,f604,f605,f608,f610,f611,f612,f614,f615,f616,f618,f620,f622,f624,f625,f626,f628,f630,f631,f632,f634,f635,f637,f651,f650,f649,f648,f647,f646,f645,f644,f643,f642,f641,f640,f639,f664,f663,f662,f661,f660,f659,f658,f657,f656,f655,f654,f653,f652,f665,f670,f669,f678,f679,f682,f687,f714,f726,f733,f747,f754,f761,f768,f771,f772,f775,f785,f793,f794,f797,f805,f811,f812,f815,f823,f839,f844,f864,f863,f860,f859,f959,f1047,f1071,f1070,f1091,f1089,f1122,f1144,f1155,f1165,f1182,f1189,f1188,f1186,f1200,f1211,f1285,f1303,f1317,f1416,f1431,f1442,f1703,f1702,f1701,f1700,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1769,f1770,f1771,f1772,f1773,f1774,f1775,f1776,f1777,f1778,f1859,f1857,f1849,f1843,f1835,f1831,f1825,f1803,f1798,f1794,f1868,f1899,f1898,f1894,f1891,f1889,f1942,f1941,f1987,f1959,f1956,f1964,f1997,f1976,f1982,f1984,f1985,f2035,f2037,f2038,f2043,f2046,f2047,f2026,f2050,f2051,f2053,f2059,f2087,f2136,f2139,f2259,f2260,f2190,f2192,f2193,f2267,f2268,f2310,f2311,f2312,f2379,f2386,f2387,f2414,f2438,f2454,f2535,f2459,f2460,f2542,f2543,f2576,f2577,f2581,f2582,f2583,f2593,f2597,f2994,f2995,f2999,f3000,f3001,f3006,f3016,f3017,f3078,f3031,f3032,f3080,f3036,f3037,f3038,f3039,f3040,f3041,f3043,f3047,f3048,f3052,f3053,f3054,f3135,f3142,f3169,f3167,f3162,f3225,f3233,f3234,f3235,f3236,f3237,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3358,f3368,f3839,f3838,f3837,f3836,f3834,f3833,f3832,f3830,f3829,f3828,f3826,f3825,f3824,f3823,f3817,f3816,f3812,f3809,f3808,f3800,f3799,f3790,f3763,f3762,f3761,f3757,f3756,f3752,f3751,f3750,f3741,f3725,f3717,f3715,f3714,f3711,f3710,f3709,f3708,f3707,f3704,f3702,f3697,f3696,f3688,f3687,f3678,f3676,f3675,f3674,f3673,f3666,f3664,f3657,f3654,f3649,f3648,f3647,f3646,f3644,f3643,f3641,f3640,f3639,f3638,f3630,f3629,f3620,f3619,f3611,f3610,f3601,f3597,f3590,f3580,f3575,f3568,f3558,f3535,f3529,f3521,f3513,f3512,f3501,f3496,f3492,f3491,f3486,f3471,f3470,f3469,f3468,f3466,f3465,f3464,f3463,f3462,f3454,f4301,f4300,f4299,f4298,f4296,f4295,f4294,f4292,f4291,f4290,f4288,f4287,f4286,f4285,f4279,f4278,f4274,f4271,f4270,f4262,f4261,f4252,f4227,f4226,f4225,f4221,f4220,f4216,f4215,f4214,f4205,f4191,f4185,f4183,f4182,f4179,f4178,f4177,f4176,f4175,f4172,f4170,f4165,f4164,f4156,f4155,f4146,f4144,f4143,f4142,f4141,f4134,f4132,f4127,f4126,f4125,f4124,f4123,f4122,f4120,f4119,f4117,f4116,f4115,f4114,f4106,f4105,f4096,f4095,f4087,f4086,f4077,f4076,f4071,f4065,f4062,f4057,f4051,f4038,f4034,f4030,f4028,f4027,f4020,f4015,f4011,f4010,f4005,f3990,f3989,f3988,f3987,f3985,f3984,f3983,f3982,f3981,f3975,f4353,f4794,f4793,f4792,f4791,f4789,f4788,f4787,f4785,f4784,f4783,f4781,f4780,f4779,f4778,f4772,f4771,f4767,f4764,f4763,f4755,f4754,f4745,f4720,f4719,f4718,f4714,f4713,f4709,f4708,f4707,f4698,f4684,f4678,f4676,f4675,f4672,f4671,f4670,f4669,f4668,f4665,f4663,f4658,f4657,f4649,f4648,f4639,f4637,f4636,f4635,f4634,f4627,f4625,f4620,f4619,f4618,f4617,f4616,f4615,f4613,f4612,f4610,f4609,f4608,f4607,f4599,f4598,f4589,f4588,f4580,f4579,f4570,f4569,f4564,f4558,f4555,f4550,f4544,f4531,f4527,f4523,f4521,f4520,f4513,f4508,f4504,f4503,f4498,f4483,f4482,f4481,f4480,f4478,f4477,f4476,f4475,f4474,f4468,f4973,f5045,f5052,f5062,f5196,f5656,f5726,f5727,f5780,f6105,f6109,f6112,f6115,f6118,f6122,f6125,f6128,f6131,f6134,f6137,f6140,f6143,f6146,f6149,f6152,f6155,f6158,f6161,f6164,f6181,f6182,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6198,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6212,f6213,f5868,f5869,f6219,f6221,f6223,f6225,f6227,f6230,f6232,f6234,f6236,f6238,f6240,f6242,f6244,f6246,f6248,f6250,f6252,f6254,f6256,f6258,f6107,f6312])).
fof(f6180,plain,(
  ( ! [X1] : (p(s(bool,X1)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1,'T_0')) ) | $spl60),
  inference(cnf_transformation,[],[f6180_D])).
fof(f6180_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1,'T_0')) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f6107,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f6107_D])).
fof(f6107_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f6268,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1,'T_0')) ) | $spl0),
  inference(condensation,[],[f6267])).
fof(f6267,plain,(
  ( ! [X138,X136,X137] : (p(s(bool,X137)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X137,'T_0') | s(bool,X136) = s(bool,X138) | s(bool,'T_0') = s(bool,X138)) ) | $spl0),
  inference(subsumption_resolution,[],[f5910,f1047])).
fof(f5910,plain,(
  ( ! [X138,X136,X137] : (~p(s(bool,X136)) | p(s(bool,X137)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X137,'T_0') | s(bool,X136) = s(bool,X138) | s(bool,'T_0') = s(bool,X138)) ) | $spl0),
  inference(superposition,[],[f1474,f959])).
fof(f6177,plain,(
  ( ! [X1] : (p(s(bool,X1)) | ~sP12('T_0',X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl58),
  inference(cnf_transformation,[],[f6177_D])).
fof(f6177_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | ~sP12('T_0',X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f6266,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP12('T_0',X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(condensation,[],[f6265])).
fof(f6265,plain,(
  ( ! [X134,X135,X133] : (p(s(bool,X134)) | ~sP12('T_0',X134,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | s(bool,X133) = s(bool,X135) | s(bool,'T_0') = s(bool,X135)) ) | $spl0),
  inference(subsumption_resolution,[],[f5909,f1047])).
fof(f5909,plain,(
  ( ! [X134,X135,X133] : (~p(s(bool,X133)) | p(s(bool,X134)) | ~sP12('T_0',X134,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | s(bool,X133) = s(bool,X135) | s(bool,'T_0') = s(bool,X135)) ) | $spl0),
  inference(superposition,[],[f1438,f959])).
fof(f6174,plain,(
  ( ! [X1] : (p(s(bool,X1)) | ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl56),
  inference(cnf_transformation,[],[f6174_D])).
fof(f6174_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f6264,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(condensation,[],[f6263])).
fof(f6263,plain,(
  ( ! [X132,X130,X131] : (p(s(bool,X131)) | ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X131) | s(bool,X130) = s(bool,X132) | s(bool,'T_0') = s(bool,X132)) ) | $spl0),
  inference(subsumption_resolution,[],[f5908,f1047])).
fof(f5908,plain,(
  ( ! [X132,X130,X131] : (~p(s(bool,X130)) | p(s(bool,X131)) | ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X131) | s(bool,X130) = s(bool,X132) | s(bool,'T_0') = s(bool,X132)) ) | $spl0),
  inference(superposition,[],[f1207,f959])).
fof(f6171,plain,(
  ( ! [X1] : (p(s(bool,X1)) | ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl54),
  inference(cnf_transformation,[],[f6171_D])).
fof(f6171_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f6262,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(condensation,[],[f6261])).
fof(f6261,plain,(
  ( ! [X127,X128,X129] : (p(s(bool,X128)) | ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X128) | s(bool,X127) = s(bool,X129) | s(bool,'T_0') = s(bool,X129)) ) | $spl0),
  inference(subsumption_resolution,[],[f5907,f1047])).
fof(f5907,plain,(
  ( ! [X127,X128,X129] : (~p(s(bool,X127)) | p(s(bool,X128)) | ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X128) | s(bool,X127) = s(bool,X129) | s(bool,'T_0') = s(bool,X129)) ) | $spl0),
  inference(superposition,[],[f1151,f959])).
fof(f6168,plain,(
  ( ! [X1] : (p(s(bool,X1)) | ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl52),
  inference(cnf_transformation,[],[f6168_D])).
fof(f6168_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f6260,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(condensation,[],[f6259])).
fof(f6259,plain,(
  ( ! [X125,X126,X124] : (p(s(bool,X125)) | ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X125) | s(bool,X124) = s(bool,X126) | s(bool,'T_0') = s(bool,X126)) ) | $spl0),
  inference(subsumption_resolution,[],[f5906,f1047])).
fof(f5906,plain,(
  ( ! [X125,X126,X124] : (~p(s(bool,X124)) | p(s(bool,X125)) | ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X125) | s(bool,X124) = s(bool,X126) | s(bool,'T_0') = s(bool,X126)) ) | $spl0),
  inference(superposition,[],[f1129,f959])).
fof(f6165,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~sP10('T_0',X1,X2)) ) | $spl50),
  inference(cnf_transformation,[],[f6165_D])).
fof(f6165_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~sP10('T_0',X1,X2)) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f6258,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('T_0',X1,X2) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f6257])).
fof(f6257,plain,(
  ( ! [X116,X114,X117,X115] : (~sP10('T_0',X115,X116) | sP11('T_0',X115,X116) | s(bool,X114) = s(bool,X117) | s(bool,'T_0') = s(bool,X117)) )),
  inference(subsumption_resolution,[],[f5903,f1047])).
fof(f5903,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,X114)) | ~sP10('T_0',X115,X116) | sP11('T_0',X115,X116) | s(bool,X114) = s(bool,X117) | s(bool,'T_0') = s(bool,X117)) )),
  inference(superposition,[],[f574,f959])).
fof(f6162,plain,(
  ( ! [X2,X1] : (sP13('T_0',X1,X2) | ~sP12('T_0',X1,X2)) ) | $spl48),
  inference(cnf_transformation,[],[f6162_D])).
fof(f6162_D,plain,(
  ( ! [X2,X1] : (sP13('T_0',X1,X2) | ~sP12('T_0',X1,X2)) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f6256,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP12('T_0',X1,X2) | sP13('T_0',X1,X2)) )),
  inference(condensation,[],[f6255])).
fof(f6255,plain,(
  ( ! [X111,X112,X110,X113] : (~sP12('T_0',X111,X112) | sP13('T_0',X111,X112) | s(bool,X110) = s(bool,X113) | s(bool,'T_0') = s(bool,X113)) )),
  inference(subsumption_resolution,[],[f5902,f1047])).
fof(f5902,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,X110)) | ~sP12('T_0',X111,X112) | sP13('T_0',X111,X112) | s(bool,X110) = s(bool,X113) | s(bool,'T_0') = s(bool,X113)) )),
  inference(superposition,[],[f573,f959])).
fof(f6159,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP13('T_0',X2,X1)) ) | $spl46),
  inference(cnf_transformation,[],[f6159_D])).
fof(f6159_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP13('T_0',X2,X1)) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f6254,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP13('T_0',X2,X1)) )),
  inference(condensation,[],[f6253])).
fof(f6253,plain,(
  ( ! [X109,X107,X108,X106] : (~p(s(bool,X107)) | p(s(bool,X108)) | ~sP13('T_0',X108,X107) | s(bool,X106) = s(bool,X109) | s(bool,'T_0') = s(bool,X109)) )),
  inference(subsumption_resolution,[],[f5901,f1047])).
fof(f5901,plain,(
  ( ! [X109,X107,X108,X106] : (~p(s(bool,X106)) | ~p(s(bool,X107)) | p(s(bool,X108)) | ~sP13('T_0',X108,X107) | s(bool,X106) = s(bool,X109) | s(bool,'T_0') = s(bool,X109)) )),
  inference(superposition,[],[f550,f959])).
fof(f6156,plain,(
  ( ! [X2,X1] : (sP13('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl44),
  inference(cnf_transformation,[],[f6156_D])).
fof(f6156_D,plain,(
  ( ! [X2,X1] : (sP13('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f6252,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP13('T_0',X1,X2)) )),
  inference(condensation,[],[f6251])).
fof(f6251,plain,(
  ( ! [X103,X105,X102,X104] : (~p(s(bool,X103)) | sP13('T_0',X103,X104) | s(bool,X102) = s(bool,X105) | s(bool,'T_0') = s(bool,X105)) )),
  inference(subsumption_resolution,[],[f5900,f1047])).
fof(f5900,plain,(
  ( ! [X103,X105,X102,X104] : (~p(s(bool,X102)) | ~p(s(bool,X103)) | sP13('T_0',X103,X104) | s(bool,X102) = s(bool,X105) | s(bool,'T_0') = s(bool,X105)) )),
  inference(superposition,[],[f549,f959])).
fof(f6153,plain,(
  ( ! [X2,X1] : (sP13('T_0',X2,X1) | p(s(bool,X1))) ) | $spl42),
  inference(cnf_transformation,[],[f6153_D])).
fof(f6153_D,plain,(
  ( ! [X2,X1] : (sP13('T_0',X2,X1) | p(s(bool,X1))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f6250,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP13('T_0',X2,X1)) )),
  inference(condensation,[],[f6249])).
fof(f6249,plain,(
  ( ! [X101,X99,X100,X98] : (p(s(bool,X99)) | sP13('T_0',X100,X99) | s(bool,X98) = s(bool,X101) | s(bool,'T_0') = s(bool,X101)) )),
  inference(subsumption_resolution,[],[f5899,f1047])).
fof(f5899,plain,(
  ( ! [X101,X99,X100,X98] : (~p(s(bool,X98)) | p(s(bool,X99)) | sP13('T_0',X100,X99) | s(bool,X98) = s(bool,X101) | s(bool,'T_0') = s(bool,X101)) )),
  inference(superposition,[],[f548,f959])).
fof(f6150,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP12(X2,X1,'T_0')) ) | $spl40),
  inference(cnf_transformation,[],[f6150_D])).
fof(f6150_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP12(X2,X1,'T_0')) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f6248,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP12(X2,X1,'T_0')) )),
  inference(condensation,[],[f6247])).
fof(f6247,plain,(
  ( ! [X94,X97,X95,X96] : (p(s(bool,X95)) | ~p(s(bool,X96)) | ~sP12(X96,X95,'T_0') | s(bool,X94) = s(bool,X97) | s(bool,'T_0') = s(bool,X97)) )),
  inference(subsumption_resolution,[],[f5898,f1047])).
fof(f5898,plain,(
  ( ! [X94,X97,X95,X96] : (~p(s(bool,X94)) | p(s(bool,X95)) | ~p(s(bool,X96)) | ~sP12(X96,X95,'T_0') | s(bool,X94) = s(bool,X97) | s(bool,'T_0') = s(bool,X97)) )),
  inference(superposition,[],[f543,f959])).
fof(f6147,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) ) | $spl38),
  inference(cnf_transformation,[],[f6147_D])).
fof(f6147_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f6246,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f6245])).
fof(f6245,plain,(
  ( ! [X92,X90,X93,X91] : (p(s(bool,X91)) | p(s(bool,X92)) | ~sP11('T_0',X92,X91) | s(bool,X90) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) )),
  inference(subsumption_resolution,[],[f5897,f1047])).
fof(f5897,plain,(
  ( ! [X92,X90,X93,X91] : (~p(s(bool,X90)) | p(s(bool,X91)) | p(s(bool,X92)) | ~sP11('T_0',X92,X91) | s(bool,X90) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) )),
  inference(superposition,[],[f533,f959])).
fof(f6144,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl36),
  inference(cnf_transformation,[],[f6144_D])).
fof(f6144_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f6244,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f6243])).
fof(f6243,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,X87)) | sP11('T_0',X87,X88) | s(bool,X86) = s(bool,X89) | s(bool,'T_0') = s(bool,X89)) )),
  inference(subsumption_resolution,[],[f5896,f1047])).
fof(f5896,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,X86)) | ~p(s(bool,X87)) | sP11('T_0',X87,X88) | s(bool,X86) = s(bool,X89) | s(bool,'T_0') = s(bool,X89)) )),
  inference(superposition,[],[f532,f959])).
fof(f6141,plain,(
  ( ! [X2,X1] : (sP11('T_0',X2,X1) | ~p(s(bool,X1))) ) | $spl34),
  inference(cnf_transformation,[],[f6141_D])).
fof(f6141_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X2,X1) | ~p(s(bool,X1))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f6242,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f6241])).
fof(f6241,plain,(
  ( ! [X85,X83,X84,X82] : (~p(s(bool,X83)) | sP11('T_0',X84,X83) | s(bool,X82) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) )),
  inference(subsumption_resolution,[],[f5895,f1047])).
fof(f5895,plain,(
  ( ! [X85,X83,X84,X82] : (~p(s(bool,X82)) | ~p(s(bool,X83)) | sP11('T_0',X84,X83) | s(bool,X82) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) )),
  inference(superposition,[],[f531,f959])).
fof(f6138,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~sP10('T_0',X1,X2) | p(s(bool,X2))) ) | $spl32),
  inference(cnf_transformation,[],[f6138_D])).
fof(f6138_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~sP10('T_0',X1,X2) | p(s(bool,X2))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f6240,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP10('T_0',X1,X2)) )),
  inference(condensation,[],[f6239])).
fof(f6239,plain,(
  ( ! [X80,X78,X81,X79] : (p(s(bool,X79)) | p(s(bool,X80)) | ~sP10('T_0',X79,X80) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) )),
  inference(subsumption_resolution,[],[f5894,f1047])).
fof(f5894,plain,(
  ( ! [X80,X78,X81,X79] : (~p(s(bool,X78)) | p(s(bool,X79)) | p(s(bool,X80)) | ~sP10('T_0',X79,X80) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) )),
  inference(superposition,[],[f526,f959])).
fof(f6135,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP9(X2,X1,'T_0')) ) | $spl30),
  inference(cnf_transformation,[],[f6135_D])).
fof(f6135_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP9(X2,X1,'T_0')) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f6238,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP9(X2,X1,'T_0')) )),
  inference(condensation,[],[f6237])).
fof(f6237,plain,(
  ( ! [X76,X74,X77,X75] : (~p(s(bool,X75)) | p(s(bool,X76)) | ~sP9(X76,X75,'T_0') | s(bool,X74) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) )),
  inference(subsumption_resolution,[],[f5893,f1047])).
fof(f5893,plain,(
  ( ! [X76,X74,X77,X75] : (~p(s(bool,X74)) | ~p(s(bool,X75)) | p(s(bool,X76)) | ~sP9(X76,X75,'T_0') | s(bool,X74) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f518,f959])).
fof(f6132,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP8(X1,'T_0',X2) | p(s(bool,X2))) ) | $spl28),
  inference(cnf_transformation,[],[f6132_D])).
fof(f6132_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP8(X1,'T_0',X2) | p(s(bool,X2))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f6236,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP8(X1,'T_0',X2)) )),
  inference(condensation,[],[f6235])).
fof(f6235,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,X71)) | p(s(bool,X72)) | ~sP8(X71,'T_0',X72) | s(bool,X70) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f5892,f1047])).
fof(f5892,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,X70)) | ~p(s(bool,X71)) | p(s(bool,X72)) | ~sP8(X71,'T_0',X72) | s(bool,X70) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f509,f959])).
fof(f6129,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP5(X1,'T_0',X2) | p(s(bool,X2))) ) | $spl26),
  inference(cnf_transformation,[],[f6129_D])).
fof(f6129_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP5(X1,'T_0',X2) | p(s(bool,X2))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f6234,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP5(X1,'T_0',X2)) )),
  inference(condensation,[],[f6233])).
fof(f6233,plain,(
  ( ! [X68,X66,X69,X67] : (~p(s(bool,X67)) | p(s(bool,X68)) | ~sP5(X67,'T_0',X68) | s(bool,X66) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(subsumption_resolution,[],[f5891,f1047])).
fof(f5891,plain,(
  ( ! [X68,X66,X69,X67] : (~p(s(bool,X66)) | ~p(s(bool,X67)) | p(s(bool,X68)) | ~sP5(X67,'T_0',X68) | s(bool,X66) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f490,f959])).
fof(f6126,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP6(X1,'T_0',X2) | p(s(bool,X2))) ) | $spl24),
  inference(cnf_transformation,[],[f6126_D])).
fof(f6126_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP6(X1,'T_0',X2) | p(s(bool,X2))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f6232,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X1,'T_0',X2)) )),
  inference(condensation,[],[f6231])).
fof(f6231,plain,(
  ( ! [X64,X62,X65,X63] : (~p(s(bool,X63)) | p(s(bool,X64)) | ~sP6(X63,'T_0',X64) | s(bool,X62) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) )),
  inference(subsumption_resolution,[],[f5890,f1047])).
fof(f5890,plain,(
  ( ! [X64,X62,X65,X63] : (~p(s(bool,X62)) | ~p(s(bool,X63)) | p(s(bool,X64)) | ~sP6(X63,'T_0',X64) | s(bool,X62) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) )),
  inference(superposition,[],[f486,f959])).
fof(f6123,plain,(
  ( ! [X2,X1] : (sP7(X1,X2,'T_0') | ~sP5(X2,'T_0',X1) | ~sP6(X1,'T_0',X2)) ) | $spl22),
  inference(cnf_transformation,[],[f6123_D])).
fof(f6123_D,plain,(
  ( ! [X2,X1] : (sP7(X1,X2,'T_0') | ~sP5(X2,'T_0',X1) | ~sP6(X1,'T_0',X2)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f6230,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP7(X1,X2,'T_0') | ~sP6(X1,'T_0',X2) | ~sP5(X2,'T_0',X1)) )),
  inference(subsumption_resolution,[],[f6229,f620])).
fof(f6229,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP7(X1,X2,'T_0') | ~sP6(X1,'T_0',X2) | ~sP5(X2,'T_0',X1) | ~sP4('T_0',X2,X1)) )),
  inference(condensation,[],[f6228])).
fof(f6228,plain,(
  ( ! [X61,X59,X60,X58] : (sP7(X59,X60,'T_0') | ~sP6(X59,'T_0',X60) | ~sP5(X60,'T_0',X59) | ~sP4('T_0',X60,X59) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(subsumption_resolution,[],[f5889,f1047])).
fof(f5889,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,X58)) | sP7(X59,X60,'T_0') | ~sP6(X59,'T_0',X60) | ~sP5(X60,'T_0',X59) | ~sP4('T_0',X60,X59) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f483,f959])).
fof(f6119,plain,(
  ( ! [X2,X1] : (~sP3(X1,'T_0',X2) | p(s(bool,X1))) ) | $spl20),
  inference(cnf_transformation,[],[f6119_D])).
fof(f6119_D,plain,(
  ( ! [X2,X1] : (~sP3(X1,'T_0',X2) | p(s(bool,X1))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f6227,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f6226])).
fof(f6226,plain,(
  ( ! [X57,X54,X56,X55] : (p(s(bool,X55)) | ~sP3(X55,'T_0',X56) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(subsumption_resolution,[],[f5888,f1047])).
fof(f5888,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP3(X55,'T_0',X56) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f470,f959])).
fof(f6116,plain,(
  ( ! [X2,X1] : (~sP3(X1,X2,'T_0') | p(s(bool,X1))) ) | $spl18),
  inference(cnf_transformation,[],[f6116_D])).
fof(f6116_D,plain,(
  ( ! [X2,X1] : (~sP3(X1,X2,'T_0') | p(s(bool,X1))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f6225,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP3(X1,X2,'T_0')) )),
  inference(condensation,[],[f6224])).
fof(f6224,plain,(
  ( ! [X52,X50,X53,X51] : (p(s(bool,X51)) | ~sP3(X51,X52,'T_0') | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f5887,f1047])).
fof(f5887,plain,(
  ( ! [X52,X50,X53,X51] : (~p(s(bool,X50)) | p(s(bool,X51)) | ~sP3(X51,X52,'T_0') | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f469,f959])).
fof(f6113,plain,(
  ( ! [X2,X1] : (sP2(X1,X2,'T_0') | ~p(s(bool,X1))) ) | $spl16),
  inference(cnf_transformation,[],[f6113_D])).
fof(f6113_D,plain,(
  ( ! [X2,X1] : (sP2(X1,X2,'T_0') | ~p(s(bool,X1))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f6223,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP2(X1,X2,'T_0')) )),
  inference(condensation,[],[f6222])).
fof(f6222,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,X47)) | sP2(X47,X48,'T_0') | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(subsumption_resolution,[],[f5886,f1047])).
fof(f5886,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,X46)) | ~p(s(bool,X47)) | sP2(X47,X48,'T_0') | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(superposition,[],[f458,f959])).
fof(f6110,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) | $spl14),
  inference(cnf_transformation,[],[f6110_D])).
fof(f6110_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f6221,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f6220])).
fof(f6220,plain,(
  ( ! [X37,X35,X36] : (p(s(bool,X36)) | sP1(X36,'T_0') | s(bool,X35) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(subsumption_resolution,[],[f5883,f1047])).
fof(f5883,plain,(
  ( ! [X37,X35,X36] : (~p(s(bool,X35)) | p(s(bool,X36)) | sP1(X36,'T_0') | s(bool,X35) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f443,f959])).
fof(f6106,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) | $spl10),
  inference(cnf_transformation,[],[f6106_D])).
fof(f6106_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f6219,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f6218])).
fof(f6218,plain,(
  ( ! [X33,X34,X32] : (p(s(bool,X33)) | sP1('T_0',X33) | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f5882,f1047])).
fof(f5882,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | sP1('T_0',X33) | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f440,f959])).
fof(f6179,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1,'T_0')) ) | $spl0),
  inference(condensation,[],[f6178])).
fof(f6178,plain,(
  ( ! [X138,X136,X137] : (p(s(bool,X137)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X137,'T_0') | s(bool,X136) = s(bool,X138) | s(bool,'T_0') = s(bool,X138)) ) | $spl0),
  inference(subsumption_resolution,[],[f5820,f1047])).
fof(f5820,plain,(
  ( ! [X138,X136,X137] : (~p(s(bool,X136)) | p(s(bool,X137)) | ~sP13('const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X137,'T_0') | s(bool,X136) = s(bool,X138) | s(bool,'T_0') = s(bool,X138)) ) | $spl0),
  inference(superposition,[],[f1474,f959])).
fof(f6176,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP12('T_0',X1,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) ) | $spl0),
  inference(condensation,[],[f6175])).
fof(f6175,plain,(
  ( ! [X134,X135,X133] : (p(s(bool,X134)) | ~sP12('T_0',X134,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | s(bool,X133) = s(bool,X135) | s(bool,'T_0') = s(bool,X135)) ) | $spl0),
  inference(subsumption_resolution,[],[f5819,f1047])).
fof(f5819,plain,(
  ( ! [X134,X135,X133] : (~p(s(bool,X133)) | p(s(bool,X134)) | ~sP12('T_0',X134,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))) | s(bool,X133) = s(bool,X135) | s(bool,'T_0') = s(bool,X135)) ) | $spl0),
  inference(superposition,[],[f1438,f959])).
fof(f6173,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(condensation,[],[f6172])).
fof(f6172,plain,(
  ( ! [X132,X130,X131] : (p(s(bool,X131)) | ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X131) | s(bool,X130) = s(bool,X132) | s(bool,'T_0') = s(bool,X132)) ) | $spl0),
  inference(subsumption_resolution,[],[f5818,f1047])).
fof(f5818,plain,(
  ( ! [X132,X130,X131] : (~p(s(bool,X130)) | p(s(bool,X131)) | ~sP8('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X131) | s(bool,X130) = s(bool,X132) | s(bool,'T_0') = s(bool,X132)) ) | $spl0),
  inference(superposition,[],[f1207,f959])).
fof(f6170,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(condensation,[],[f6169])).
fof(f6169,plain,(
  ( ! [X127,X128,X129] : (p(s(bool,X128)) | ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X128) | s(bool,X127) = s(bool,X129) | s(bool,'T_0') = s(bool,X129)) ) | $spl0),
  inference(subsumption_resolution,[],[f5817,f1047])).
fof(f5817,plain,(
  ( ! [X127,X128,X129] : (~p(s(bool,X127)) | p(s(bool,X128)) | ~sP5('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X128) | s(bool,X127) = s(bool,X129) | s(bool,'T_0') = s(bool,X129)) ) | $spl0),
  inference(superposition,[],[f1151,f959])).
fof(f6167,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X1)) ) | $spl0),
  inference(condensation,[],[f6166])).
fof(f6166,plain,(
  ( ! [X125,X126,X124] : (p(s(bool,X125)) | ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X125) | s(bool,X124) = s(bool,X126) | s(bool,'T_0') = s(bool,X126)) ) | $spl0),
  inference(subsumption_resolution,[],[f5816,f1047])).
fof(f5816,plain,(
  ( ! [X125,X126,X124] : (~p(s(bool,X124)) | p(s(bool,X125)) | ~sP6('T_0','const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)),X125) | s(bool,X124) = s(bool,X126) | s(bool,'T_0') = s(bool,X126)) ) | $spl0),
  inference(superposition,[],[f1129,f959])).
fof(f6164,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('T_0',X1,X2) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f6163])).
fof(f6163,plain,(
  ( ! [X116,X114,X117,X115] : (~sP10('T_0',X115,X116) | sP11('T_0',X115,X116) | s(bool,X114) = s(bool,X117) | s(bool,'T_0') = s(bool,X117)) )),
  inference(subsumption_resolution,[],[f5813,f1047])).
fof(f5813,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,X114)) | ~sP10('T_0',X115,X116) | sP11('T_0',X115,X116) | s(bool,X114) = s(bool,X117) | s(bool,'T_0') = s(bool,X117)) )),
  inference(superposition,[],[f574,f959])).
fof(f6161,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP12('T_0',X1,X2) | sP13('T_0',X1,X2)) )),
  inference(condensation,[],[f6160])).
fof(f6160,plain,(
  ( ! [X111,X112,X110,X113] : (~sP12('T_0',X111,X112) | sP13('T_0',X111,X112) | s(bool,X110) = s(bool,X113) | s(bool,'T_0') = s(bool,X113)) )),
  inference(subsumption_resolution,[],[f5812,f1047])).
fof(f5812,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,X110)) | ~sP12('T_0',X111,X112) | sP13('T_0',X111,X112) | s(bool,X110) = s(bool,X113) | s(bool,'T_0') = s(bool,X113)) )),
  inference(superposition,[],[f573,f959])).
fof(f6158,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP13('T_0',X2,X1)) )),
  inference(condensation,[],[f6157])).
fof(f6157,plain,(
  ( ! [X109,X107,X108,X106] : (~p(s(bool,X107)) | p(s(bool,X108)) | ~sP13('T_0',X108,X107) | s(bool,X106) = s(bool,X109) | s(bool,'T_0') = s(bool,X109)) )),
  inference(subsumption_resolution,[],[f5811,f1047])).
fof(f5811,plain,(
  ( ! [X109,X107,X108,X106] : (~p(s(bool,X106)) | ~p(s(bool,X107)) | p(s(bool,X108)) | ~sP13('T_0',X108,X107) | s(bool,X106) = s(bool,X109) | s(bool,'T_0') = s(bool,X109)) )),
  inference(superposition,[],[f550,f959])).
fof(f6155,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP13('T_0',X1,X2)) )),
  inference(condensation,[],[f6154])).
fof(f6154,plain,(
  ( ! [X103,X105,X102,X104] : (~p(s(bool,X103)) | sP13('T_0',X103,X104) | s(bool,X102) = s(bool,X105) | s(bool,'T_0') = s(bool,X105)) )),
  inference(subsumption_resolution,[],[f5810,f1047])).
fof(f5810,plain,(
  ( ! [X103,X105,X102,X104] : (~p(s(bool,X102)) | ~p(s(bool,X103)) | sP13('T_0',X103,X104) | s(bool,X102) = s(bool,X105) | s(bool,'T_0') = s(bool,X105)) )),
  inference(superposition,[],[f549,f959])).
fof(f6152,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP13('T_0',X2,X1)) )),
  inference(condensation,[],[f6151])).
fof(f6151,plain,(
  ( ! [X101,X99,X100,X98] : (p(s(bool,X99)) | sP13('T_0',X100,X99) | s(bool,X98) = s(bool,X101) | s(bool,'T_0') = s(bool,X101)) )),
  inference(subsumption_resolution,[],[f5809,f1047])).
fof(f5809,plain,(
  ( ! [X101,X99,X100,X98] : (~p(s(bool,X98)) | p(s(bool,X99)) | sP13('T_0',X100,X99) | s(bool,X98) = s(bool,X101) | s(bool,'T_0') = s(bool,X101)) )),
  inference(superposition,[],[f548,f959])).
fof(f6149,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP12(X2,X1,'T_0')) )),
  inference(condensation,[],[f6148])).
fof(f6148,plain,(
  ( ! [X94,X97,X95,X96] : (p(s(bool,X95)) | ~p(s(bool,X96)) | ~sP12(X96,X95,'T_0') | s(bool,X94) = s(bool,X97) | s(bool,'T_0') = s(bool,X97)) )),
  inference(subsumption_resolution,[],[f5808,f1047])).
fof(f5808,plain,(
  ( ! [X94,X97,X95,X96] : (~p(s(bool,X94)) | p(s(bool,X95)) | ~p(s(bool,X96)) | ~sP12(X96,X95,'T_0') | s(bool,X94) = s(bool,X97) | s(bool,'T_0') = s(bool,X97)) )),
  inference(superposition,[],[f543,f959])).
fof(f6146,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f6145])).
fof(f6145,plain,(
  ( ! [X92,X90,X93,X91] : (p(s(bool,X91)) | p(s(bool,X92)) | ~sP11('T_0',X92,X91) | s(bool,X90) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) )),
  inference(subsumption_resolution,[],[f5807,f1047])).
fof(f5807,plain,(
  ( ! [X92,X90,X93,X91] : (~p(s(bool,X90)) | p(s(bool,X91)) | p(s(bool,X92)) | ~sP11('T_0',X92,X91) | s(bool,X90) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) )),
  inference(superposition,[],[f533,f959])).
fof(f6143,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f6142])).
fof(f6142,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,X87)) | sP11('T_0',X87,X88) | s(bool,X86) = s(bool,X89) | s(bool,'T_0') = s(bool,X89)) )),
  inference(subsumption_resolution,[],[f5806,f1047])).
fof(f5806,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,X86)) | ~p(s(bool,X87)) | sP11('T_0',X87,X88) | s(bool,X86) = s(bool,X89) | s(bool,'T_0') = s(bool,X89)) )),
  inference(superposition,[],[f532,f959])).
fof(f6140,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f6139])).
fof(f6139,plain,(
  ( ! [X85,X83,X84,X82] : (~p(s(bool,X83)) | sP11('T_0',X84,X83) | s(bool,X82) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) )),
  inference(subsumption_resolution,[],[f5805,f1047])).
fof(f5805,plain,(
  ( ! [X85,X83,X84,X82] : (~p(s(bool,X82)) | ~p(s(bool,X83)) | sP11('T_0',X84,X83) | s(bool,X82) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) )),
  inference(superposition,[],[f531,f959])).
fof(f6137,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP10('T_0',X1,X2)) )),
  inference(condensation,[],[f6136])).
fof(f6136,plain,(
  ( ! [X80,X78,X81,X79] : (p(s(bool,X79)) | p(s(bool,X80)) | ~sP10('T_0',X79,X80) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) )),
  inference(subsumption_resolution,[],[f5804,f1047])).
fof(f5804,plain,(
  ( ! [X80,X78,X81,X79] : (~p(s(bool,X78)) | p(s(bool,X79)) | p(s(bool,X80)) | ~sP10('T_0',X79,X80) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) )),
  inference(superposition,[],[f526,f959])).
fof(f6134,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP9(X2,X1,'T_0')) )),
  inference(condensation,[],[f6133])).
fof(f6133,plain,(
  ( ! [X76,X74,X77,X75] : (~p(s(bool,X75)) | p(s(bool,X76)) | ~sP9(X76,X75,'T_0') | s(bool,X74) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) )),
  inference(subsumption_resolution,[],[f5803,f1047])).
fof(f5803,plain,(
  ( ! [X76,X74,X77,X75] : (~p(s(bool,X74)) | ~p(s(bool,X75)) | p(s(bool,X76)) | ~sP9(X76,X75,'T_0') | s(bool,X74) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f518,f959])).
fof(f6131,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP8(X1,'T_0',X2)) )),
  inference(condensation,[],[f6130])).
fof(f6130,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,X71)) | p(s(bool,X72)) | ~sP8(X71,'T_0',X72) | s(bool,X70) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(subsumption_resolution,[],[f5802,f1047])).
fof(f5802,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,X70)) | ~p(s(bool,X71)) | p(s(bool,X72)) | ~sP8(X71,'T_0',X72) | s(bool,X70) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f509,f959])).
fof(f6128,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP5(X1,'T_0',X2)) )),
  inference(condensation,[],[f6127])).
fof(f6127,plain,(
  ( ! [X68,X66,X69,X67] : (~p(s(bool,X67)) | p(s(bool,X68)) | ~sP5(X67,'T_0',X68) | s(bool,X66) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(subsumption_resolution,[],[f5801,f1047])).
fof(f5801,plain,(
  ( ! [X68,X66,X69,X67] : (~p(s(bool,X66)) | ~p(s(bool,X67)) | p(s(bool,X68)) | ~sP5(X67,'T_0',X68) | s(bool,X66) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f490,f959])).
fof(f6125,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X1,'T_0',X2)) )),
  inference(condensation,[],[f6124])).
fof(f6124,plain,(
  ( ! [X64,X62,X65,X63] : (~p(s(bool,X63)) | p(s(bool,X64)) | ~sP6(X63,'T_0',X64) | s(bool,X62) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) )),
  inference(subsumption_resolution,[],[f5800,f1047])).
fof(f5800,plain,(
  ( ! [X64,X62,X65,X63] : (~p(s(bool,X62)) | ~p(s(bool,X63)) | p(s(bool,X64)) | ~sP6(X63,'T_0',X64) | s(bool,X62) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) )),
  inference(superposition,[],[f486,f959])).
fof(f6122,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP7(X1,X2,'T_0') | ~sP6(X1,'T_0',X2) | ~sP5(X2,'T_0',X1)) )),
  inference(subsumption_resolution,[],[f6121,f620])).
fof(f6121,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP7(X1,X2,'T_0') | ~sP6(X1,'T_0',X2) | ~sP5(X2,'T_0',X1) | ~sP4('T_0',X2,X1)) )),
  inference(condensation,[],[f6120])).
fof(f6120,plain,(
  ( ! [X61,X59,X60,X58] : (sP7(X59,X60,'T_0') | ~sP6(X59,'T_0',X60) | ~sP5(X60,'T_0',X59) | ~sP4('T_0',X60,X59) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(subsumption_resolution,[],[f5799,f1047])).
fof(f5799,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,X58)) | sP7(X59,X60,'T_0') | ~sP6(X59,'T_0',X60) | ~sP5(X60,'T_0',X59) | ~sP4('T_0',X60,X59) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f483,f959])).
fof(f6118,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f6117])).
fof(f6117,plain,(
  ( ! [X57,X54,X56,X55] : (p(s(bool,X55)) | ~sP3(X55,'T_0',X56) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(subsumption_resolution,[],[f5798,f1047])).
fof(f5798,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP3(X55,'T_0',X56) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f470,f959])).
fof(f6115,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP3(X1,X2,'T_0')) )),
  inference(condensation,[],[f6114])).
fof(f6114,plain,(
  ( ! [X52,X50,X53,X51] : (p(s(bool,X51)) | ~sP3(X51,X52,'T_0') | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f5797,f1047])).
fof(f5797,plain,(
  ( ! [X52,X50,X53,X51] : (~p(s(bool,X50)) | p(s(bool,X51)) | ~sP3(X51,X52,'T_0') | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f469,f959])).
fof(f6112,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP2(X1,X2,'T_0')) )),
  inference(condensation,[],[f6111])).
fof(f6111,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,X47)) | sP2(X47,X48,'T_0') | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(subsumption_resolution,[],[f5796,f1047])).
fof(f5796,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,X46)) | ~p(s(bool,X47)) | sP2(X47,X48,'T_0') | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(superposition,[],[f458,f959])).
fof(f6109,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f6108])).
fof(f6108,plain,(
  ( ! [X37,X35,X36] : (p(s(bool,X36)) | sP1(X36,'T_0') | s(bool,X35) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(subsumption_resolution,[],[f5793,f1047])).
fof(f5793,plain,(
  ( ! [X37,X35,X36] : (~p(s(bool,X35)) | p(s(bool,X36)) | sP1(X36,'T_0') | s(bool,X35) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f443,f959])).
fof(f6105,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f6104])).
fof(f6104,plain,(
  ( ! [X33,X34,X32] : (p(s(bool,X33)) | sP1('T_0',X33) | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f5792,f1047])).
fof(f5792,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | sP1('T_0',X33) | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f440,f959])).
fof(f2605,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl6),
  inference(cnf_transformation,[],[f2605_D])).
fof(f2605_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f2607,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl9),
  inference(cnf_transformation,[],[f2607_D])).
fof(f2607_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f2593,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f420,f330])).
fof(f603,plain,(
  $false | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f602,f328])).
fof(f602,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f590,f587])).
fof(f601,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f600,f329])).
fof(f600,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK15),s('type.num.num',sK15)))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f587,f596])).
fof(f596,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',X0)))) ) | $spl2),
  inference(backward_demodulation,[],[f588,f334])).
fof(f586,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) | $spl0),
  inference(cnf_transformation,[],[f586_D])).
fof(f586_D,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f590,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15) | $spl4),
  inference(cnf_transformation,[],[f590_D])).
fof(f590_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f588,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(cnf_transformation,[],[f588_D])).
fof(f588_D,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f318,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))))),
  inference(cnf_transformation,[],[f208])).
fof(f208,plain,(
  (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15) | s('type.num.num',sK14) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) & (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) | (s('type.num.num','const.num.|48|_0') != s('type.num.num',sK15) & s('type.num.num',sK14) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14,sK15])],[f207])).
fof(f207,plain,(
  ? [X0,X1] : ((p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) & (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) | (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) & s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(flattening,[],[f206])).
fof(f206,plain,(
  ? [X0,X1] : ((p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & (~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) | (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) & s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(nnf_transformation,[],[f153])).
fof(f153,plain,(
  ? [X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) <~> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(ennf_transformation,[],[f68])).
fof(f68,plain,(
  ~! [X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X7)))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X7)))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.divides.DIVIDES_MULT_LEFT','thm.divides.DIVIDES_MULT_LEFT')).
fof(f587,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) | $spl1),
  inference(cnf_transformation,[],[f587_D])).
fof(f587_D,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f591,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK15) | $spl5),
  inference(cnf_transformation,[],[f591_D])).
fof(f591_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK15) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f319,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK15) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))))),
  inference(cnf_transformation,[],[f208])).
fof(f589,plain,(
  s('type.num.num',sK14) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl3),
  inference(cnf_transformation,[],[f589_D])).
fof(f589_D,plain,(
  s('type.num.num',sK14) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f320,plain,(
  s('type.num.num',sK14) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK14),s('type.num.num',sK15))),s('type.num.num',sK15))))),
  inference(cnf_transformation,[],[f208])).
% SZS output end Proof for thm.divides
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 767
% Passive clauses: 6265
% Generated clauses: 36787
% Final active clauses: 429
% Final passive clauses: 1733
% Input formulas: 66
% Initial clauses: 243
% 
% Duplicate literals: 71
% Trivial inequalities: 132
% Fw subsumption resolutions: 1589
% Fw demodulations: 7981
% Bw demodulations: 3220
% Condensations: 171
% Global subsumptions: 22
% 
% Simple tautologies: 137
% Equational tautologies: 165
% Forward subsumptions: 18812
% Fw demodulations to eq. taut.: 163
% 
% Unit resulting resolution: 8133
% Factoring: 1
% Forward superposition: 5135
% Backward superposition: 6060
% Self superposition: 157
% Equality factoring: 26
% Equality resolution: 39
% 
% Split clauses: 74
% Split components: 154
% SAT solver clauses: 7642
% SAT solver unit clauses: 2187
% SAT solver binary clauses: 3109
% 
% Sat splits: 74
% Sat splitting refutations: 1205
% 
% Memory used [KB]: 19701
% Time elapsed: 1.411 s
% ------------------------------
% ------------------------------
% Success in time 2.719 s
