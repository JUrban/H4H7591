Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.real
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.real
% SZS output start Proof for thm.real
fof(f124,plain,(
  $false),
  inference(subsumption_resolution,[],[f120,f52])).
fof(f52,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real',sK1))))),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real',sK1)))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f34])).
fof(f34,plain,(
  ? [X0,X1] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0)))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ~! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real',X7)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X7),s('type.realax.real',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real',X7)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X7),s('type.realax.real',X6)))))),
  file('thm.real.REAL_LET_TOTAL','thm.real.REAL_LET_TOTAL')).
fof(f120,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real',sK1))))),
  inference(resolution,[],[f81,f53])).
fof(f53,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK0))))),
  inference(cnf_transformation,[],[f36])).
fof(f81,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0))))) & (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))))))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) <=> ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0)))))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) <=> ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6,X7] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real',X7)))) <=> ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X7),s('type.realax.real',X6)))))),
  file('thm.real.REAL_LET_TOTAL','thm.real.real_lte')).
% SZS output end Proof for thm.real
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 12
% Passive clauses: 20
% Generated clauses: 70
% Final active clauses: 9
% Final passive clauses: 2
% Input formulas: 16
% Initial clauses: 31
% 
% Duplicate literals: 2
% Fw subsumption resolutions: 1
% Bw demodulations: 2
% 
% Simple tautologies: 16
% Equational tautologies: 2
% Forward subsumptions: 16
% 
% Binary resolution: 4
% Forward superposition: 10
% Backward superposition: 8
% Self superposition: 4
% Equality factoring: 2
% 
% Split clauses: 9
% Split components: 18
% SAT solver clauses: 13
% SAT solver unit clauses: 3
% SAT solver binary clauses: 9
% 
% Sat splits: 9
% 
% TWLsolver clauses: 13
% TWLsolver calls for satisfiability: 5
% 
% Memory used [KB]: 639
% Time elapsed: 0.012 s
% ------------------------------
% ------------------------------
% Success in time 0.014 s
