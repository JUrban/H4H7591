Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (63935)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 175
% Passive clauses: 2468
% Generated clauses: 23186
% Final active clauses: 170
% Final passive clauses: 2187
% Input formulas: 37
% Initial clauses: 51
% 
% Duplicate literals: 95
% Trivial inequalities: 6
% Fw subsumption resolutions: 97
% Fw demodulations: 4048
% Bw demodulations: 3
% 
% Simple tautologies: 23
% Equational tautologies: 17
% Forward subsumptions: 16414
% Fw demodulations to eq. taut.: 17
% 
% Binary resolution: 44
% Forward superposition: 8444
% Backward superposition: 10354
% Self superposition: 150
% Equality factoring: 34
% Equality resolution: 2
% 
% Split clauses: 41
% Split components: 82
% SAT solver clauses: 55
% SAT solver unit clauses: 3
% SAT solver binary clauses: 16
% 
% Sat splits: 41
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 55
% TWLsolver calls for satisfiability: 10
% 
% Memory used [KB]: 32238
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (63952)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 178
% Passive clauses: 1402
% Generated clauses: 15644
% Final active clauses: 162
% Final passive clauses: 1131
% Input formulas: 37
% Initial clauses: 51
% 
% Duplicate literals: 766
% Trivial inequalities: 178
% Fw subsumption resolutions: 750
% Fw demodulations: 2154
% Bw demodulations: 105
% Condensations: 888
% 
% Simple tautologies: 431
% Equational tautologies: 24
% Forward subsumptions: 7114
% Fw demodulations to eq. taut.: 5
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 80
% Forward superposition: 6695
% Backward superposition: 2421
% Self superposition: 113
% Equality factoring: 58
% Equality resolution: 21
% 
% Split clauses: 178
% Split components: 356
% SAT solver clauses: 1959
% SAT solver unit clauses: 70
% SAT solver binary clauses: 40
% 
% Sat splits: 178
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1959
% TWLsolver calls for satisfiability: 325
% 
% Memory used [KB]: 20084
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% (63977)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 866
% Passive clauses: 13535
% Generated clauses: 224818
% Final active clauses: 324
% Final passive clauses: 1810
% Input formulas: 37
% Initial clauses: 51
% Discarded non-redundant clauses: 1809
% 
% Duplicate literals: 6027
% Trivial inequalities: 1060
% Fw subsumption resolutions: 6995
% Fw demodulations: 46996
% Bw demodulations: 6604
% Condensations: 8098
% Global subsumptions: 64
% 
% Simple tautologies: 1166
% Equational tautologies: 614
% Forward subsumptions: 139512
% Fw demodulations to eq. taut.: 189
% Bw demodulations to eq. taut.: 716
% 
% Unit resulting resolution: 11748
% Forward superposition: 82845
% Backward superposition: 42258
% Self superposition: 887
% Equality factoring: 293
% Equality resolution: 31
% 
% Split clauses: 463
% Split components: 931
% SAT solver clauses: 14632
% SAT solver unit clauses: 908
% SAT solver binary clauses: 3659
% 
% Sat splits: 463
% Sat splitting refutations: 105
% 
% Memory used [KB]: 131255
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f34780,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f89,f128,f127,f88,f130,f87,f132,f126,f136,f142,f140,f137,f146,f144,f148,f151,f149,f157,f155,f169,f244,f242,f170,f248,f246,f171,f252,f250,f172,f256,f254,f173,f260,f258,f174,f264,f262,f175,f268,f266,f176,f272,f270,f177,f276,f274,f178,f280,f278,f179,f284,f282,f180,f288,f286,f181,f292,f290,f182,f296,f294,f500,f517,f524,f522,f512,f481,f531,f529,f503,f528,f526,f546,f141,f549,f552,f783,f785,f784,f875,f885,f884,f882,f888,f940,f947,f945,f1099,f1111,f1110,f1107,f1113,f887,f1108,f1115,f1263,f1277,f1276,f1273,f1279,f1114,f1274,f1281,f1454,f1470,f1469,f1466,f1472,f1280,f1467,f1474,f1571,f1584,f1575,f1573,f1588,f1592,f1590,f1755,f1784,f1789,f1802,f1803,f1786,f1807,f1812,f1811,f1836,f1837,f1838,f1839,f1840,f1841,f1842,f1843,f1844,f1845,f1846,f1847,f1848,f1849,f2045,f2063,f2062,f2059,f2065,f1473,f2060,f2067,f2492,f2512,f2511,f2508,f2514,f2066,f2509,f2516,f2605,f2606,f1809,f2901,f2904,f2903,f2954,f153,f2964,f2957,f2967,f2966,f3008,f3030,f3029,f3026,f3032,f2515,f3027,f3034,f3129,f3131,f3135,f3136,f3145,f3146,f527,f3149,f3150,f3153,f3154,f3157,f3159,f523,f3124,f3138,f3164,f3260,f557,f3278,f3284,f3351,f3373,f3416,f3417,f3418,f1859,f3419,f3420,f1863,f3421,f1865,f3422,f1867,f3423,f1869,f3424,f1871,f3425,f1873,f3426,f1875,f3427,f3486,f3510,f3509,f3506,f3512,f3507,f3514,f3559,f3593,f3560,f3582,f3600,f3598,f3585,f3603,f3602,f3588,f3606,f3604,f3664,f3690,f3689,f3685,f3692,f3686,f3693,f3687,f3695,f3755,f3783,f3782,f3777,f3785,f3778,f3786,f3779,f3787,f3780,f3789,f3832,f3862,f3861,f3855,f3864,f3856,f3865,f3857,f3866,f3858,f3867,f3859,f3869,f3931,f3963,f3962,f3955,f3965,f3956,f3966,f3957,f3967,f3958,f3968,f3959,f3969,f3960,f3971,f3997,f4031,f4030,f4022,f4033,f4023,f4034,f4024,f4035,f4025,f4036,f4026,f4037,f4027,f4038,f4028,f4040,f4218,f4254,f4253,f4244,f4256,f3033,f4245,f4257,f3513,f4246,f4258,f3694,f4247,f4259,f3788,f4248,f4260,f3868,f4249,f4261,f3970,f4250,f4262,f4039,f4251,f4264,f4263,f4376,f4406,f3594,f4827,f4856,f4859,f4835,f4867,f4865,f4874,f4862,f4861,f4879,f4882,f4881,f4987,f4989,f4990,f4855,f5194,f5207,f5198,f5196,f5211,f5215,f5213,f5387,f5394,f5392,f5510,f5542,f5552,f5550,f5549,f5699,f5512,f5852,f3596,f3597,f6042,f6072,f6075,f6050,f6083,f6081,f6090,f6078,f6077,f6095,f6098,f6097,f6216,f6360,f6218,f6385,f6391,f6420,f6425,f6390,f6832,f5019,f6071,f6996,f7205,f6998,f7434,f7441,f7439,f7536,f7539,f7537,f7670,f7672,f7671,f7722,f7725,f7723,f7745,f7771,f7769,f7916,f7947,f7946,f7950,f7924,f7958,f7956,f7965,f7953,f7952,f7970,f7973,f7972,f8095,f8338,f8097,f8507,f8509,f8508,f8543,f8781,f8545,f8934,f8936,f8935,f9064,f9072,f9067,f9077,f9076,f9141,f9173,f9172,f9176,f9149,f9184,f9182,f9191,f9179,f9178,f9196,f9199,f9198,f9282,f9306,f9304,f9321,f9623,f9624,f9698,f9707,f9712,f9714,f8974,f8964,f3280,f9128,f9722,f9724,f9721,f9105,f9074,f9725,f9728,f560,f9732,f9730,f9733,f9727,f9734,f9736,f9737,f9739,f9740,f9741,f9729,f9742,f9726,f4329,f9743,f3202,f9744,f9746,f9747,f9749,f9750,f2772,f9751,f9753,f9754,f9756,f9757,f2583,f145,f9758,f10226,f10227,f561,f10047,f10347,f10048,f10348,f10346,f9024,f10432,f4345,f4337,f4319,f4311,f3433,f3392,f3533,f3544,f5478,f5488,f10436,f5496,f5518,f10437,f5517,f5495,f10433,f5487,f5477,f10435,f3716,f3703,f3543,f3532,f3925,f3981,f4790,f4692,f4303,f4286,f3980,f10439,f3924,f4287,f4304,f3926,f3982,f8321,f5263,f4789,f4691,f4302,f4285,f3979,f10440,f3923,f6409,f5772,f5265,f8323,f10438,f4694,f4792,f10434,f8319,f8254,f6407,f5769,f5261,f1853,f4787,f10441,f4689,f1851,f10498,f559,f3352,f10593,f1855,f10594,f1857,f10596,f1861,f10604,f1877,f11651,f11681,f11683,f1788,f11684,f25492,f25497,f25500,f25502,f25960,f25496,f25494,f25963,f25493,f25964,f26967,f27004,f27008,f26975,f27021,f27016,f27029,f27010,f27034,f27036,f29265,f29303,f29306,f29273,f29312,f29318,f29319,f29326,f29309,f29331,f29334,f33816,f27005,f29302,f33855,f33824,f27014,f33861,f27022,f29314,f33868,f27011,f29308,f33873,f27037,f29333,f34747,f1852,f34764,f34748,f1854,f34765,f34749,f1856,f34766,f34750,f1858,f34767,f34751,f1860,f34768,f34752,f1862,f34769,f34753,f1864,f34770,f34754,f1866,f34771,f34755,f1868,f34772,f34756,f1870,f34773,f34757,f1872,f34774,f34758,f1874,f34775,f34759,f1876,f34776,f34760,f1878,f34777,f34779])).
fof(f34779,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f34778,f126])).
fof(f34778,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f34763,f90])).
fof(f90,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X30,X29] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X30))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X29)))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.arithmetic.ADD_SYM')).
fof(f34763,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',sK1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ($spl0 | $spl2)),
  inference(trivial_inequality_removal,[],[f34761])).
fof(f34761,plain,(
  s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),sK2) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',sK1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f96])).
fof(f96,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X2,X1,X0)),s('type.list.list'(X0),sK19(X2,X1,X0)))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK19(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X2,X1,X0)),s('type.list.list'(X0),sK19(X2,X1,X0)))))))))))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34])],[f74])).
fof(f74,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31,X32,X33,X34] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X19)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X30),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X31),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X32),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X33),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X34),s('type.list.list'(X0),X19))))))))))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(rectify,[],[f73])).
fof(f73,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(nnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X22),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X24),s('type.list.list'(X6),X9)))))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.quantHeuristics.LIST_LENGTH_|49|5|split|6')).
fof(f2951,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(resolution,[],[f556,f126])).
fof(f556,plain,(
  ( ! [X30,X28,X26,X24,X23,X21,X19,X17,X29,X27,X25,X15,X22,X20,X18,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X30)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),sK19(X30,sK1,sK0))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f545,f90])).
fof(f545,plain,(
  ( ! [X30,X28,X26,X24,X23,X21,X19,X17,X29,X27,X25,X15,X22,X20,X18,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),sK19(X30,sK1,sK0)))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',sK1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X30))))))) ) | $spl2),
  inference(resolution,[],[f128,f95])).
fof(f95,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK19(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f34777,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))))))))))) ) | $spl700),
  inference(cnf_transformation,[],[f34777_D])).
fof(f34777_D,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))))))))))) ) <=> ~$spl700),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl700])])).
fof(f1878,plain,(
  ( ! [X14] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))) ) | $spl222),
  inference(cnf_transformation,[],[f1878_D])).
fof(f1878_D,plain,(
  ( ! [X14] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))) ) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f34760,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f113])).
fof(f113,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f57])).
fof(f57,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.list.LENGTH_NIL')).
fof(f34776,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))))))))) ) | $spl698),
  inference(cnf_transformation,[],[f34776_D])).
fof(f34776_D,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))))))))) ) <=> ~$spl698),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl698])])).
fof(f1876,plain,(
  ( ! [X14,X13] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl218),
  inference(cnf_transformation,[],[f1876_D])).
fof(f1876_D,plain,(
  ( ! [X14,X13] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f34759,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f113])).
fof(f34775,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))))))) ) | $spl696),
  inference(cnf_transformation,[],[f34775_D])).
fof(f34775_D,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))))))) ) <=> ~$spl696),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl696])])).
fof(f1874,plain,(
  ( ! [X14,X12,X13] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl214),
  inference(cnf_transformation,[],[f1874_D])).
fof(f1874_D,plain,(
  ( ! [X14,X12,X13] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f34758,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f113])).
fof(f34774,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))))) ) | $spl694),
  inference(cnf_transformation,[],[f34774_D])).
fof(f34774_D,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))))) ) <=> ~$spl694),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl694])])).
fof(f1872,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl210),
  inference(cnf_transformation,[],[f1872_D])).
fof(f1872_D,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f34757,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f113])).
fof(f34773,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))) ) | $spl692),
  inference(cnf_transformation,[],[f34773_D])).
fof(f34773_D,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))) ) <=> ~$spl692),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl692])])).
fof(f1870,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl206),
  inference(cnf_transformation,[],[f1870_D])).
fof(f1870_D,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f34756,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f113])).
fof(f34772,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))) ) | $spl690),
  inference(cnf_transformation,[],[f34772_D])).
fof(f34772_D,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))) ) <=> ~$spl690),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl690])])).
fof(f1868,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))) ) | $spl202),
  inference(cnf_transformation,[],[f1868_D])).
fof(f1868_D,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))) ) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f34755,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f113])).
fof(f34771,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))) ) | $spl688),
  inference(cnf_transformation,[],[f34771_D])).
fof(f34771_D,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))) ) <=> ~$spl688),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl688])])).
fof(f1866,plain,(
  ( ! [X14,X12,X10,X8,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl198),
  inference(cnf_transformation,[],[f1866_D])).
fof(f1866_D,plain,(
  ( ! [X14,X12,X10,X8,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f34754,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f113])).
fof(f34770,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))) ) | $spl686),
  inference(cnf_transformation,[],[f34770_D])).
fof(f34770_D,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))) ) <=> ~$spl686),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl686])])).
fof(f1864,plain,(
  ( ! [X14,X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl194),
  inference(cnf_transformation,[],[f1864_D])).
fof(f1864_D,plain,(
  ( ! [X14,X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f34753,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f113])).
fof(f34769,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))) ) | $spl684),
  inference(cnf_transformation,[],[f34769_D])).
fof(f34769_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))) ) <=> ~$spl684),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl684])])).
fof(f1862,plain,(
  ( ! [X6,X14,X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl190),
  inference(cnf_transformation,[],[f1862_D])).
fof(f1862_D,plain,(
  ( ! [X6,X14,X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f34752,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f113])).
fof(f34768,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))) ) | $spl682),
  inference(cnf_transformation,[],[f34768_D])).
fof(f34768_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))) ) <=> ~$spl682),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl682])])).
fof(f1860,plain,(
  ( ! [X6,X14,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl186),
  inference(cnf_transformation,[],[f1860_D])).
fof(f1860_D,plain,(
  ( ! [X6,X14,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f34751,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f113])).
fof(f34767,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))) ) | $spl680),
  inference(cnf_transformation,[],[f34767_D])).
fof(f34767_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))) ) <=> ~$spl680),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl680])])).
fof(f1858,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))) ) | $spl182),
  inference(cnf_transformation,[],[f1858_D])).
fof(f1858_D,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))) ) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f34750,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f113])).
fof(f34766,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))) ) | $spl678),
  inference(cnf_transformation,[],[f34766_D])).
fof(f34766_D,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))) ) <=> ~$spl678),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl678])])).
fof(f1856,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X7,X5,X3,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl178),
  inference(cnf_transformation,[],[f1856_D])).
fof(f1856_D,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X7,X5,X3,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))) ) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f34749,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f113])).
fof(f34765,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))) ) | $spl676),
  inference(cnf_transformation,[],[f34765_D])).
fof(f34765_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))) ) <=> ~$spl676),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl676])])).
fof(f1854,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl174),
  inference(cnf_transformation,[],[f1854_D])).
fof(f1854_D,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f34748,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f113])).
fof(f34764,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))) ) | $spl674),
  inference(cnf_transformation,[],[f34764_D])).
fof(f34764_D,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))) ) <=> ~$spl674),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl674])])).
fof(f1852,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl170),
  inference(cnf_transformation,[],[f1852_D])).
fof(f1852_D,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f34747,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK19(sK2,sK1,sK0))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2951,f113])).
fof(f29333,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | $spl671),
  inference(cnf_transformation,[],[f29333_D])).
fof(f29333_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) <=> ~$spl671),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl671])])).
fof(f27037,plain,(
  ( ! [X59] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X59)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X59)))) ) | $spl654),
  inference(cnf_transformation,[],[f27037_D])).
fof(f27037_D,plain,(
  ( ! [X59] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X59)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X59)))) ) <=> ~$spl654),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl654])])).
fof(f33873,plain,(
  ( ! [X56] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X56)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X56)))) ) | $spl288),
  inference(forward_demodulation,[],[f33872,f125])).
fof(f125,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f38])).
fof(f38,axiom,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.numeral.numeral_suc|split|0')).
fof(f33872,plain,(
  ( ! [X56] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X56)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X56)))) ) | $spl288),
  inference(forward_demodulation,[],[f33836,f90])).
fof(f33836,plain,(
  ( ! [X56] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X56))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X56))))))) ) | $spl288),
  inference(superposition,[],[f3509,f125])).
fof(f29308,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | $spl661),
  inference(cnf_transformation,[],[f29308_D])).
fof(f29308_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) <=> ~$spl661),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl661])])).
fof(f27011,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl644),
  inference(cnf_transformation,[],[f27011_D])).
fof(f27011_D,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) <=> ~$spl644),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl644])])).
fof(f33868,plain,(
  ( ! [X48] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) | $spl288),
  inference(forward_demodulation,[],[f33867,f122])).
fof(f122,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f21])).
fof(f21,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.numeral.numeral_distrib|split|13')).
fof(f33867,plain,(
  ( ! [X48] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) | $spl288),
  inference(forward_demodulation,[],[f33866,f90])).
fof(f33866,plain,(
  ( ! [X48] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) | $spl288),
  inference(forward_demodulation,[],[f33865,f118])).
fof(f118,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X29] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.numeral.numeral_distrib|split|11')).
fof(f33865,plain,(
  ( ! [X47,X48] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X47),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))))))) ) | $spl288),
  inference(forward_demodulation,[],[f33864,f107])).
fof(f107,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X30,X29] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X30),s('type.num.num',X29))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))),s('type.num.num',X29)))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.arithmetic.LESS_EQ')).
fof(f33864,plain,(
  ( ! [X47,X48] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X47),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))))))) ) | $spl288),
  inference(forward_demodulation,[],[f33832,f122])).
fof(f33832,plain,(
  ( ! [X47,X48] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X47),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))))))) ) | $spl288),
  inference(superposition,[],[f3509,f118])).
fof(f29314,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | $spl667),
  inference(cnf_transformation,[],[f29314_D])).
fof(f29314_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) <=> ~$spl667),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl667])])).
fof(f27022,plain,(
  ( ! [X43] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X43)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X43)))) ) | $spl650),
  inference(cnf_transformation,[],[f27022_D])).
fof(f27022_D,plain,(
  ( ! [X43] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X43)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X43)))) ) <=> ~$spl650),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl650])])).
fof(f33861,plain,(
  ( ! [X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X40)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X40)))) ) | ($spl288 | $spl562)),
  inference(forward_demodulation,[],[f33860,f94])).
fof(f94,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X29] : s('type.num.num',X29) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X29)))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.arithmetic.ADD|split|0')).
fof(f33860,plain,(
  ( ! [X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X40)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X40)))) ) | ($spl288 | $spl562)),
  inference(forward_demodulation,[],[f33859,f9305])).
fof(f9305,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | $spl562),
  inference(cnf_transformation,[],[f9305_D])).
fof(f9305_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) <=> ~$spl562),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl562])])).
fof(f33859,plain,(
  ( ! [X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X40)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X40)))) ) | ($spl288 | $spl562)),
  inference(forward_demodulation,[],[f33829,f90])).
fof(f33829,plain,(
  ( ! [X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X40))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X40))))))) ) | ($spl288 | $spl562)),
  inference(superposition,[],[f3509,f9305])).
fof(f27014,plain,(
  ( ! [X19,X20,X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20))) | s('type.list.list'(X18),'const.list.NIL_0') != s('type.list.list'(X18),X19) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20))))))) ) | $spl646),
  inference(cnf_transformation,[],[f27014_D])).
fof(f27014_D,plain,(
  ( ! [X19,X20,X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20))) | s('type.list.list'(X18),'const.list.NIL_0') != s('type.list.list'(X18),X19) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20))))))) ) <=> ~$spl646),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl646])])).
fof(f33824,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20)))))) | s('type.list.list'(X18),'const.list.NIL_0') != s('type.list.list'(X18),X19)) ) | $spl288),
  inference(superposition,[],[f3509,f114])).
fof(f114,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f86])).
fof(f33855,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl288),
  inference(forward_demodulation,[],[f33854,f122])).
fof(f33854,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl288),
  inference(forward_demodulation,[],[f33853,f90])).
fof(f33853,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl288),
  inference(forward_demodulation,[],[f33818,f107])).
fof(f33818,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl288),
  inference(superposition,[],[f3509,f122])).
fof(f29302,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | $spl656),
  inference(cnf_transformation,[],[f29302_D])).
fof(f29302_D,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) <=> ~$spl656),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl656])])).
fof(f27005,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl640),
  inference(cnf_transformation,[],[f27005_D])).
fof(f27005_D,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) <=> ~$spl640),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl640])])).
fof(f33816,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | ($spl0 | $spl288)),
  inference(resolution,[],[f3509,f532])).
fof(f532,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | $spl0),
  inference(resolution,[],[f126,f97])).
fof(f97,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X18,X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f29334,plain,(
  ( ! [X56] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X56)))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X56)) ) | $spl672),
  inference(cnf_transformation,[],[f29334_D])).
fof(f29334_D,plain,(
  ( ! [X56] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X56)))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X56)) ) <=> ~$spl672),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl672])])).
fof(f29331,plain,(
  ( ! [X56] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X56)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X56)) ) | $spl296),
  inference(forward_demodulation,[],[f29330,f125])).
fof(f29330,plain,(
  ( ! [X56] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X56)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X56)) ) | $spl296),
  inference(forward_demodulation,[],[f29285,f90])).
fof(f29285,plain,(
  ( ! [X56] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X56) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X56))))))) ) | $spl296),
  inference(superposition,[],[f3514,f125])).
fof(f29309,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl662),
  inference(cnf_transformation,[],[f29309_D])).
fof(f29309_D,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) <=> ~$spl662),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl662])])).
fof(f29326,plain,(
  ( ! [X48] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X48)) ) | $spl296),
  inference(forward_demodulation,[],[f29325,f122])).
fof(f29325,plain,(
  ( ! [X48] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X48)) ) | $spl296),
  inference(forward_demodulation,[],[f29324,f90])).
fof(f29324,plain,(
  ( ! [X48] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X48)) ) | $spl296),
  inference(forward_demodulation,[],[f29323,f118])).
fof(f29323,plain,(
  ( ! [X47,X48] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X48) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X47),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))))))) ) | $spl296),
  inference(forward_demodulation,[],[f29322,f107])).
fof(f29322,plain,(
  ( ! [X47,X48] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X48) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X47),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))))))) ) | $spl296),
  inference(forward_demodulation,[],[f29281,f122])).
fof(f29281,plain,(
  ( ! [X47,X48] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X48) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X47),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))))))) ) | $spl296),
  inference(superposition,[],[f3514,f118])).
fof(f29319,plain,(
  ( ! [X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X40)))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X40)) ) | $spl668),
  inference(cnf_transformation,[],[f29319_D])).
fof(f29319_D,plain,(
  ( ! [X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X40)))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X40)) ) <=> ~$spl668),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl668])])).
fof(f29318,plain,(
  ( ! [X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X40)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X40)) ) | ($spl296 | $spl562)),
  inference(forward_demodulation,[],[f29317,f94])).
fof(f29317,plain,(
  ( ! [X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X40)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X40)) ) | ($spl296 | $spl562)),
  inference(forward_demodulation,[],[f29316,f9305])).
fof(f29316,plain,(
  ( ! [X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X40)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X40)) ) | ($spl296 | $spl562)),
  inference(forward_demodulation,[],[f29278,f90])).
fof(f29278,plain,(
  ( ! [X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X40) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X40))))))) ) | ($spl296 | $spl562)),
  inference(superposition,[],[f3514,f9305])).
fof(f29312,plain,(
  ( ! [X19,X20,X18] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X20) | s('type.list.list'(X18),'const.list.NIL_0') != s('type.list.list'(X18),X19) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20))))))) ) | $spl664),
  inference(cnf_transformation,[],[f29312_D])).
fof(f29312_D,plain,(
  ( ! [X19,X20,X18] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X20) | s('type.list.list'(X18),'const.list.NIL_0') != s('type.list.list'(X18),X19) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20))))))) ) <=> ~$spl664),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl664])])).
fof(f29273,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X20) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20)))))) | s('type.list.list'(X18),'const.list.NIL_0') != s('type.list.list'(X18),X19)) ) | $spl296),
  inference(superposition,[],[f3514,f114])).
fof(f29306,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl296),
  inference(forward_demodulation,[],[f29305,f122])).
fof(f29305,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl296),
  inference(forward_demodulation,[],[f29304,f90])).
fof(f29304,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl296),
  inference(forward_demodulation,[],[f29267,f107])).
fof(f29267,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl296),
  inference(superposition,[],[f3514,f122])).
fof(f29303,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl658),
  inference(cnf_transformation,[],[f29303_D])).
fof(f29303_D,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) <=> ~$spl658),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl658])])).
fof(f29265,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | ($spl0 | $spl296)),
  inference(resolution,[],[f3514,f532])).
fof(f27036,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | $spl653),
  inference(cnf_transformation,[],[f27036_D])).
fof(f27036_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) <=> ~$spl653),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl653])])).
fof(f27034,plain,(
  ( ! [X59] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X59)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X59)))) ) | $spl256),
  inference(forward_demodulation,[],[f27033,f125])).
fof(f27033,plain,(
  ( ! [X59] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X59)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X59)))) ) | $spl256),
  inference(forward_demodulation,[],[f26988,f90])).
fof(f26988,plain,(
  ( ! [X59] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X59))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X59))))))) ) | $spl256),
  inference(superposition,[],[f3029,f125])).
fof(f27010,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | $spl643),
  inference(cnf_transformation,[],[f27010_D])).
fof(f27010_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) <=> ~$spl643),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl643])])).
fof(f27029,plain,(
  ( ! [X51] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51)))) ) | $spl256),
  inference(forward_demodulation,[],[f27028,f122])).
fof(f27028,plain,(
  ( ! [X51] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51)))) ) | $spl256),
  inference(forward_demodulation,[],[f27027,f90])).
fof(f27027,plain,(
  ( ! [X51] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51)))) ) | $spl256),
  inference(forward_demodulation,[],[f27026,f118])).
fof(f27026,plain,(
  ( ! [X50,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X50),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51))))))) ) | $spl256),
  inference(forward_demodulation,[],[f27025,f107])).
fof(f27025,plain,(
  ( ! [X50,X51] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X50),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51))))))) ) | $spl256),
  inference(forward_demodulation,[],[f26984,f122])).
fof(f26984,plain,(
  ( ! [X50,X51] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X50),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51))))))) ) | $spl256),
  inference(superposition,[],[f3029,f118])).
fof(f27016,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | $spl649),
  inference(cnf_transformation,[],[f27016_D])).
fof(f27016_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) <=> ~$spl649),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl649])])).
fof(f27021,plain,(
  ( ! [X43] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X43)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X43)))) ) | ($spl256 | $spl562)),
  inference(forward_demodulation,[],[f27020,f94])).
fof(f27020,plain,(
  ( ! [X43] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X43)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X43)))) ) | ($spl256 | $spl562)),
  inference(forward_demodulation,[],[f27019,f9305])).
fof(f27019,plain,(
  ( ! [X43] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X43)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X43)))) ) | ($spl256 | $spl562)),
  inference(forward_demodulation,[],[f26981,f90])).
fof(f26981,plain,(
  ( ! [X43] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X43))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X43))))))) ) | ($spl256 | $spl562)),
  inference(superposition,[],[f3029,f9305])).
fof(f26975,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20)))))) | s('type.list.list'(X18),'const.list.NIL_0') != s('type.list.list'(X18),X19)) ) | $spl256),
  inference(superposition,[],[f3029,f114])).
fof(f27008,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl256),
  inference(forward_demodulation,[],[f27007,f122])).
fof(f27007,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl256),
  inference(forward_demodulation,[],[f27006,f90])).
fof(f27006,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl256),
  inference(forward_demodulation,[],[f26969,f107])).
fof(f26969,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl256),
  inference(superposition,[],[f3029,f122])).
fof(f27004,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | $spl638),
  inference(cnf_transformation,[],[f27004_D])).
fof(f27004_D,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) <=> ~$spl638),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl638])])).
fof(f26967,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | ($spl0 | $spl256)),
  inference(resolution,[],[f3029,f532])).
fof(f25964,plain,(
  ( ! [X1] : (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),sK39('const.num.|48|_0','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),'const.list.NIL_0',X1))))) ) | $spl636),
  inference(cnf_transformation,[],[f25964_D])).
fof(f25964_D,plain,(
  ( ! [X1] : (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),sK39('const.num.|48|_0','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),'const.list.NIL_0',X1))))) ) <=> ~$spl636),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl636])])).
fof(f25493,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl631),
  inference(cnf_transformation,[],[f25493_D])).
fof(f25493_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl631),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl631])])).
fof(f25963,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),sK39('const.num.|48|_0','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),'const.list.NIL_0',X1))))) ) | $spl562),
  inference(forward_demodulation,[],[f25962,f10841])).
fof(f10841,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) ) | $spl562),
  inference(subsumption_resolution,[],[f10699,f10676])).
fof(f10676,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK38('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X1,X0))))) ) | $spl562),
  inference(equality_resolution,[],[f9567])).
fof(f9567,plain,(
  ( ! [X364,X365,X363] : (s('type.num.num',X365) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X363),X364))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X363),sK38(X365,'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X364,X363))))) ) | $spl562),
  inference(forward_demodulation,[],[f9566,f9305])).
fof(f9566,plain,(
  ( ! [X364,X365,X363] : (s('type.num.num',X365) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X363),X364))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X363),sK38(X365,'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X364,X363))))) ) | $spl562),
  inference(forward_demodulation,[],[f9410,f94])).
fof(f9410,plain,(
  ( ! [X364,X365,X363] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X363),X364))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X365))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X363),sK38(X365,'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X364,X363))))) ) | $spl562),
  inference(superposition,[],[f109,f9305])).
fof(f109,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK38(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK38(X3,X2,X1,X0)))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK39(X3,X2,X1,X0)))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK38(X3,X2,X1,X0)),s('type.list.list'(X0),sK39(X3,X2,X1,X0)))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK38,sK39])],[f84])).
fof(f84,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X6,X7] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),X7))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(rectify,[],[f83])).
fof(f83,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(nnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X8,X25,X26] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26))) <=> ? [X27,X28] : (s('type.num.num',X25) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X27))) & s('type.num.num',X26) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X28))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X27),s('type.list.list'(X6),X28)))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.list.LENGTH_EQ_SUM')).
fof(f10699,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK38('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X1,X0))))) ) | $spl562),
  inference(superposition,[],[f10676,f113])).
fof(f25962,plain,(
  ( ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),sK39('const.num.|48|_0','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),'const.list.NIL_0',X1))))) ) | $spl562),
  inference(forward_demodulation,[],[f25961,f94])).
fof(f25961,plain,(
  ( ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),sK39('const.num.|48|_0','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),'const.list.NIL_0',X1))))) ) | $spl562),
  inference(forward_demodulation,[],[f25573,f90])).
fof(f25573,plain,(
  ( ! [X1] : (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),sK39('const.num.|48|_0','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),'const.list.NIL_0',X1)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl562),
  inference(superposition,[],[f111,f25491])).
fof(f25491,plain,(
  ( ! [X65] : (s('type.list.list'(X65),'const.list.NIL_0') = s('type.list.list'(X65),sK38('const.num.|48|_0','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),'const.list.NIL_0',X65))) ) | $spl562),
  inference(trivial_inequality_removal,[],[f25342])).
fof(f25342,plain,(
  ( ! [X65] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(X65),'const.list.NIL_0') = s('type.list.list'(X65),sK38('const.num.|48|_0','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),'const.list.NIL_0',X65))) ) | $spl562),
  inference(superposition,[],[f113,f25095])).
fof(f25095,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK38('const.num.|48|_0','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),'const.list.NIL_0',X0))))) ) | $spl562),
  inference(superposition,[],[f16600,f122])).
fof(f16600,plain,(
  ( ! [X52,X51] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),sK38('const.num.|48|_0','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X51)))))),'const.list.NIL_0',X52))))) ) | $spl562),
  inference(forward_demodulation,[],[f16586,f121])).
fof(f121,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X29] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.numeral.numeral_distrib|split|9')).
fof(f16586,plain,(
  ( ! [X52,X51] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X51))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),sK38('const.num.|48|_0','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X51)))))),'const.list.NIL_0',X52))))) ) | $spl562),
  inference(trivial_inequality_removal,[],[f16578])).
fof(f16578,plain,(
  ( ! [X52,X51] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X51))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),sK38('const.num.|48|_0','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X51)))))),'const.list.NIL_0',X52))))) ) | $spl562),
  inference(superposition,[],[f16528,f121])).
fof(f16528,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X13) | s('type.num.num',X13) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),sK38('const.num.|48|_0',X13,'const.list.NIL_0',X14))))) ) | $spl562),
  inference(superposition,[],[f10911,f93])).
fof(f93,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X29] : s('type.num.num',X29) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.numeral.numeral_distrib|split|1')).
fof(f10911,plain,(
  ( ! [X41,X42,X40] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X42))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),sK38(X42,X41,'const.list.NIL_0',X40))))) ) | $spl562),
  inference(superposition,[],[f109,f10841])).
fof(f111,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK38(X3,X2,X1,X0)),s('type.list.list'(X0),sK39(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f85])).
fof(f25494,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl630),
  inference(cnf_transformation,[],[f25494_D])).
fof(f25494_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl630),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl630])])).
fof(f25496,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | $spl633),
  inference(cnf_transformation,[],[f25496_D])).
fof(f25496_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) <=> ~$spl633),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl633])])).
fof(f25960,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl562),
  inference(forward_demodulation,[],[f25959,f10841])).
fof(f25959,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl562),
  inference(forward_demodulation,[],[f25572,f10841])).
fof(f25572,plain,(
  ( ! [X0] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl562),
  inference(superposition,[],[f109,f25491])).
fof(f25502,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl635),
  inference(cnf_transformation,[],[f25502_D])).
fof(f25502_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl635),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl635])])).
fof(f25500,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ($spl96 | $spl562)),
  inference(forward_demodulation,[],[f25499,f9305])).
fof(f25499,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ($spl96 | $spl562)),
  inference(forward_demodulation,[],[f25498,f94])).
fof(f25498,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ($spl96 | $spl562)),
  inference(forward_demodulation,[],[f25490,f90])).
fof(f25490,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl96 | $spl562)),
  inference(trivial_inequality_removal,[],[f25350])).
fof(f25350,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl96 | $spl562)),
  inference(superposition,[],[f10466,f25095])).
fof(f10466,plain,(
  ( ! [X10,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK38(X9,X10,X11,sK0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',X10)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) ) | $spl96),
  inference(superposition,[],[f560,f109])).
fof(f25497,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl562),
  inference(forward_demodulation,[],[f25331,f10841])).
fof(f25331,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl562),
  inference(superposition,[],[f109,f25095])).
fof(f25492,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl562),
  inference(forward_demodulation,[],[f25329,f10841])).
fof(f25329,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl562),
  inference(superposition,[],[f25095,f109])).
fof(f11684,plain,(
  ( ! [X33] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK38('const.arithmetic.EXP_2'(s('type.num.num',X33),s('type.num.num','const.num.|48|_0')),'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),'const.list.NIL_0',sK0))))) ) | $spl628),
  inference(cnf_transformation,[],[f11684_D])).
fof(f11684_D,plain,(
  ( ! [X33] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK38('const.arithmetic.EXP_2'(s('type.num.num',X33),s('type.num.num','const.num.|48|_0')),'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),'const.list.NIL_0',sK0))))) ) <=> ~$spl628),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl628])])).
fof(f1788,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl157),
  inference(cnf_transformation,[],[f1788_D])).
fof(f1788_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl157),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl157])])).
fof(f11683,plain,(
  ( ! [X33] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK38('const.arithmetic.EXP_2'(s('type.num.num',X33),s('type.num.num','const.num.|48|_0')),'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),'const.list.NIL_0',sK0))))) ) | $spl562),
  inference(forward_demodulation,[],[f11665,f122])).
fof(f11665,plain,(
  ( ! [X33] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK38('const.arithmetic.EXP_2'(s('type.num.num',X33),s('type.num.num','const.num.|48|_0')),'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),'const.list.NIL_0',sK0))))) ) | $spl562),
  inference(superposition,[],[f10675,f118])).
fof(f10675,plain,(
  ( ! [X20] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X20) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK38(X20,'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),'const.list.NIL_0',sK0))))) ) | $spl562),
  inference(superposition,[],[f9567,f9305])).
fof(f11681,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK38('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),'const.list.NIL_0',sK0)))) | $spl626),
  inference(cnf_transformation,[],[f11681_D])).
fof(f11681_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK38('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),'const.list.NIL_0',sK0)))) <=> ~$spl626),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl626])])).
fof(f11651,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK38('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),'const.list.NIL_0',sK0)))) | $spl562),
  inference(superposition,[],[f10675,f122])).
fof(f1877,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl220),
  inference(cnf_transformation,[],[f1877_D])).
fof(f1877_D,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f10604,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1861,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl188),
  inference(cnf_transformation,[],[f1861_D])).
fof(f1861_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f10596,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1857,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl180),
  inference(cnf_transformation,[],[f1857_D])).
fof(f1857_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f10594,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1855,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl176),
  inference(cnf_transformation,[],[f1855_D])).
fof(f1855_D,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f10593,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f3352,plain,(
  ( ! [X48] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) | $spl286),
  inference(cnf_transformation,[],[f3352_D])).
fof(f3352_D,plain,(
  ( ! [X48] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f559,plain,(
  ( ! [X61,X59,X57,X54,X52,X50,X62,X60,X58,X56,X55,X53,X51,X49,X63] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl94),
  inference(cnf_transformation,[],[f559_D])).
fof(f559_D,plain,(
  ( ! [X61,X59,X57,X54,X52,X50,X62,X60,X58,X56,X55,X53,X51,X49,X63] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f10498,plain,(
  ( ! [X61,X59,X57,X54,X52,X50,X48,X62,X60,X58,X56,X55,X53,X51,X49,X63] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) | $spl98),
  inference(trivial_inequality_removal,[],[f10492])).
fof(f10492,plain,(
  ( ! [X61,X59,X57,X54,X52,X50,X48,X62,X60,X58,X56,X55,X53,X51,X49,X63] : (s('type.list.list'(sK0),X48) != s('type.list.list'(sK0),X48) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) | $spl98),
  inference(superposition,[],[f561,f113])).
fof(f1851,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl168),
  inference(cnf_transformation,[],[f1851_D])).
fof(f1851_D,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f4689,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl192),
  inference(superposition,[],[f1863,f113])).
fof(f10441,plain,(
  ( ! [X6,X4,X2,X7,X5,X3] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))) ) | $spl624),
  inference(cnf_transformation,[],[f10441_D])).
fof(f10441_D,plain,(
  ( ! [X6,X4,X2,X7,X5,X3] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))) ) <=> ~$spl624),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl624])])).
fof(f4787,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl192),
  inference(superposition,[],[f4698,f113])).
fof(f4698,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl192),
  inference(trivial_inequality_removal,[],[f4696])).
fof(f4696,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl192),
  inference(superposition,[],[f1863,f114])).
fof(f1853,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl172),
  inference(cnf_transformation,[],[f1853_D])).
fof(f1853_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f5261,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl196),
  inference(superposition,[],[f1865,f113])).
fof(f5769,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl200),
  inference(superposition,[],[f1867,f113])).
fof(f6407,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl204),
  inference(superposition,[],[f1869,f113])).
fof(f8254,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl212),
  inference(superposition,[],[f1873,f113])).
fof(f8319,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl196),
  inference(superposition,[],[f5270,f113])).
fof(f5270,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl196),
  inference(trivial_inequality_removal,[],[f5268])).
fof(f5268,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl196),
  inference(superposition,[],[f1865,f114])).
fof(f10434,plain,(
  ( ! [X4] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0')))) ) | $spl610),
  inference(cnf_transformation,[],[f10434_D])).
fof(f10434_D,plain,(
  ( ! [X4] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0')))) ) <=> ~$spl610),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl610])])).
fof(f4792,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl192),
  inference(superposition,[],[f4698,f113])).
fof(f4694,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl192),
  inference(superposition,[],[f1863,f113])).
fof(f10438,plain,(
  ( ! [X4,X5] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl618),
  inference(cnf_transformation,[],[f10438_D])).
fof(f10438_D,plain,(
  ( ! [X4,X5] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) <=> ~$spl618),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl618])])).
fof(f8323,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl196),
  inference(superposition,[],[f5270,f113])).
fof(f5265,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl196),
  inference(superposition,[],[f1865,f113])).
fof(f5772,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl200),
  inference(superposition,[],[f1867,f113])).
fof(f6409,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl204),
  inference(superposition,[],[f1869,f113])).
fof(f3923,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl184),
  inference(superposition,[],[f1859,f113])).
fof(f10440,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl622),
  inference(cnf_transformation,[],[f10440_D])).
fof(f10440_D,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) <=> ~$spl622),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl622])])).
fof(f3979,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl184),
  inference(superposition,[],[f3930,f113])).
fof(f3930,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl184),
  inference(trivial_inequality_removal,[],[f3928])).
fof(f3928,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl184),
  inference(superposition,[],[f1859,f114])).
fof(f4285,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl188),
  inference(superposition,[],[f1861,f113])).
fof(f4302,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl188),
  inference(superposition,[],[f4292,f113])).
fof(f4292,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))) ) | $spl188),
  inference(trivial_inequality_removal,[],[f4290])).
fof(f4290,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))) ) | $spl188),
  inference(superposition,[],[f1861,f114])).
fof(f4691,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl192),
  inference(superposition,[],[f1863,f113])).
fof(f4789,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl192),
  inference(superposition,[],[f4698,f113])).
fof(f5263,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl196),
  inference(superposition,[],[f1865,f113])).
fof(f8321,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl196),
  inference(superposition,[],[f5270,f113])).
fof(f3982,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl184),
  inference(superposition,[],[f3930,f113])).
fof(f3926,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl184),
  inference(superposition,[],[f1859,f113])).
fof(f4304,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl188),
  inference(superposition,[],[f4292,f113])).
fof(f4287,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl188),
  inference(superposition,[],[f1861,f113])).
fof(f3924,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl184),
  inference(superposition,[],[f1859,f113])).
fof(f10439,plain,(
  ( ! [X6,X4,X5] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl620),
  inference(cnf_transformation,[],[f10439_D])).
fof(f10439_D,plain,(
  ( ! [X6,X4,X5] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) <=> ~$spl620),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl620])])).
fof(f3980,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl184),
  inference(superposition,[],[f3930,f113])).
fof(f4286,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl188),
  inference(superposition,[],[f1861,f113])).
fof(f4303,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl188),
  inference(superposition,[],[f4292,f113])).
fof(f4692,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl192),
  inference(superposition,[],[f1863,f113])).
fof(f4790,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl192),
  inference(superposition,[],[f4698,f113])).
fof(f3981,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl184),
  inference(superposition,[],[f3930,f113])).
fof(f3925,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl184),
  inference(superposition,[],[f1859,f113])).
fof(f3532,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl176),
  inference(superposition,[],[f1855,f113])).
fof(f3543,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl176),
  inference(superposition,[],[f3537,f113])).
fof(f3537,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl176),
  inference(trivial_inequality_removal,[],[f3535])).
fof(f3535,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl176),
  inference(superposition,[],[f1855,f114])).
fof(f3703,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl180),
  inference(superposition,[],[f1857,f113])).
fof(f3716,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl180),
  inference(superposition,[],[f3708,f113])).
fof(f3708,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl180),
  inference(trivial_inequality_removal,[],[f3706])).
fof(f3706,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl180),
  inference(superposition,[],[f1857,f114])).
fof(f10435,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK39(X1,X2,X3,sK0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) ) | $spl612),
  inference(cnf_transformation,[],[f10435_D])).
fof(f10435_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK39(X1,X2,X3,sK0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) ) <=> ~$spl612),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl612])])).
fof(f5477,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK39(X1,X2,X3,sK0))))))) ) | $spl176),
  inference(superposition,[],[f3751,f113])).
fof(f3751,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),sK39(X12,X13,X14,sK0)))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X12) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X14))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12)))) ) | $spl176),
  inference(superposition,[],[f3530,f110])).
fof(f110,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK39(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f85])).
fof(f3530,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),X0)))))))))) ) | $spl176),
  inference(superposition,[],[f1855,f113])).
fof(f5487,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK39(X1,X2,X3,sK0))))))) ) | $spl176),
  inference(superposition,[],[f5482,f113])).
fof(f5482,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK39(X3,X4,X5,sK0)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X3)) ) | $spl176),
  inference(trivial_inequality_removal,[],[f5480])).
fof(f5480,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num',X3) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK39(X3,X4,X5,sK0))))))))) ) | $spl176),
  inference(superposition,[],[f3751,f114])).
fof(f10433,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK38(X1,X2,X3,sK0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2)) ) | $spl608),
  inference(cnf_transformation,[],[f10433_D])).
fof(f10433_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK38(X1,X2,X3,sK0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2)) ) <=> ~$spl608),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl608])])).
fof(f5495,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK38(X1,X2,X3,sK0))))))) ) | $spl176),
  inference(superposition,[],[f3752,f113])).
fof(f3752,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),sK38(X18,X19,X20,sK0)))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X19) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18)))) ) | $spl176),
  inference(superposition,[],[f3530,f109])).
fof(f5517,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK38(X1,X2,X3,sK0))))))) ) | $spl176),
  inference(superposition,[],[f5500,f113])).
fof(f5500,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK38(X3,X4,X5,sK0)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X4)) ) | $spl176),
  inference(trivial_inequality_removal,[],[f5498])).
fof(f5498,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num',X4) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK38(X3,X4,X5,sK0))))))))) ) | $spl176),
  inference(superposition,[],[f3752,f114])).
fof(f10437,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X3) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK38(X2,X3,X4,sK0)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2)))) ) | $spl616),
  inference(cnf_transformation,[],[f10437_D])).
fof(f10437_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X3) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK38(X2,X3,X4,sK0)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2)))) ) <=> ~$spl616),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl616])])).
fof(f5518,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X3) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK38(X2,X3,X4,sK0))))))))) ) | $spl176),
  inference(superposition,[],[f5500,f113])).
fof(f5496,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X3) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK38(X2,X3,X4,sK0))))))))) ) | $spl176),
  inference(superposition,[],[f3752,f113])).
fof(f10436,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK39(X2,X3,X4,sK0)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2)))) ) | $spl614),
  inference(cnf_transformation,[],[f10436_D])).
fof(f10436_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK39(X2,X3,X4,sK0)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2)))) ) <=> ~$spl614),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl614])])).
fof(f5488,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK39(X2,X3,X4,sK0))))))))) ) | $spl176),
  inference(superposition,[],[f5482,f113])).
fof(f5478,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK39(X2,X3,X4,sK0))))))))) ) | $spl176),
  inference(superposition,[],[f3751,f113])).
fof(f3544,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl176),
  inference(superposition,[],[f3537,f113])).
fof(f3533,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl176),
  inference(superposition,[],[f1855,f113])).
fof(f3392,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl172),
  inference(superposition,[],[f1853,f113])).
fof(f3433,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl172),
  inference(superposition,[],[f3396,f113])).
fof(f3396,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl172),
  inference(trivial_inequality_removal,[],[f3394])).
fof(f3394,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl172),
  inference(superposition,[],[f1853,f114])).
fof(f4311,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK39(X1,X2,X3,sK0))))))) ) | $spl172),
  inference(superposition,[],[f3626,f113])).
fof(f3626,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK39(X10,X11,X12,sK0)))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X10) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))) ) | $spl172),
  inference(superposition,[],[f3390,f110])).
fof(f3390,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),X0)))))))) ) | $spl172),
  inference(superposition,[],[f1853,f113])).
fof(f4319,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK39(X1,X2,X3,sK0))))))) ) | $spl172),
  inference(superposition,[],[f4315,f113])).
fof(f4315,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK39(X2,X3,X4,sK0)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2)) ) | $spl172),
  inference(trivial_inequality_removal,[],[f4313])).
fof(f4313,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK39(X2,X3,X4,sK0))))))) ) | $spl172),
  inference(superposition,[],[f3626,f114])).
fof(f4337,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK38(X1,X2,X3,sK0))))))) ) | $spl172),
  inference(superposition,[],[f3627,f113])).
fof(f3627,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),sK38(X15,X16,X17,sK0)))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X16) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X17))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X15)))) ) | $spl172),
  inference(superposition,[],[f3390,f109])).
fof(f4345,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK38(X1,X2,X3,sK0))))))) ) | $spl172),
  inference(superposition,[],[f4341,f113])).
fof(f4341,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK38(X2,X3,X4,sK0)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X3)) ) | $spl172),
  inference(trivial_inequality_removal,[],[f4339])).
fof(f4339,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num',X3) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK38(X2,X3,X4,sK0))))))) ) | $spl172),
  inference(superposition,[],[f3627,f114])).
fof(f10432,plain,(
  ( ! [X4,X2,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),X2))) | s('type.num.num',X4) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))) | s('type.num.num',X5) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2)))) ) | $spl606),
  inference(cnf_transformation,[],[f10432_D])).
fof(f10432_D,plain,(
  ( ! [X4,X2,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),X2))) | s('type.num.num',X4) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))) | s('type.num.num',X5) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2)))) ) <=> ~$spl606),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl606])])).
fof(f9024,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),X2))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))) | s('type.num.num',X5) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) | s('type.num.num',X4) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl172),
  inference(superposition,[],[f3395,f113])).
fof(f3395,plain,(
  ( ! [X6,X4,X2,X7,X5,X3] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X6),s('type.list.list'(sK0),X7))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))) | s('type.num.num',X5) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))) | s('type.num.num',X4) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl172),
  inference(superposition,[],[f1853,f112])).
fof(f112,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f85])).
fof(f10346,plain,(
  ( ! [X1184,X1185] : (s('type.list.list'(sK0),X1184) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1185),s('type.list.list'(sK0),X1184)))) ) | $spl600),
  inference(cnf_transformation,[],[f10346_D])).
fof(f10346_D,plain,(
  ( ! [X1184,X1185] : (s('type.list.list'(sK0),X1184) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1185),s('type.list.list'(sK0),X1184)))) ) <=> ~$spl600),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl600])])).
fof(f10348,plain,(
  ( ! [X1186,X1188,X1187] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK38(X1186,X1187,X1188,sK0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1188))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1187),s('type.num.num',X1186))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1187)) ) | $spl604),
  inference(cnf_transformation,[],[f10348_D])).
fof(f10348_D,plain,(
  ( ! [X1186,X1188,X1187] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK38(X1186,X1187,X1188,sK0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1188))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1187),s('type.num.num',X1186))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1187)) ) <=> ~$spl604),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl604])])).
fof(f10048,plain,(
  ( ! [X1186,X1190,X1188,X1187,X1189] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK38(X1186,X1187,X1188,sK0)) | s('type.list.list'(sK0),X1189) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1190),s('type.list.list'(sK0),X1189))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1187) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1188))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1187),s('type.num.num',X1186)))) ) | ($spl168 | $spl538)),
  inference(superposition,[],[f3902,f9073])).
fof(f9073,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | $spl538),
  inference(cnf_transformation,[],[f9073_D])).
fof(f9073_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) <=> ~$spl538),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl538])])).
fof(f3902,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (s('type.list.list'(sK0),X21) != s('type.list.list'(sK0),sK38(X18,X19,X20,sK0)) | s('type.list.list'(sK0),X21) != s('type.list.list'(sK0),X22) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),X22))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X19) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18)))) ) | $spl168),
  inference(superposition,[],[f3653,f109])).
fof(f3653,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.list.list'(sK0),X1) != s('type.list.list'(sK0),X2) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),X2))) | s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),X1)) ) | $spl168),
  inference(superposition,[],[f3651,f113])).
fof(f3651,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),X2) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),X2)))) ) | $spl168),
  inference(trivial_inequality_removal,[],[f3647])).
fof(f3647,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),X2))) | s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),X2) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl168),
  inference(superposition,[],[f3463,f114])).
fof(f3463,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),X1))) | s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),X1)) ) | $spl168),
  inference(superposition,[],[f3461,f113])).
fof(f3461,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X1) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1)))) ) | $spl168),
  inference(trivial_inequality_removal,[],[f3459])).
fof(f3459,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X1) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1)))) ) | $spl168),
  inference(superposition,[],[f3448,f114])).
fof(f3448,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),X3))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X3)) ) | $spl168),
  inference(subsumption_resolution,[],[f3445,f114])).
fof(f3445,plain,(
  ( ! [X2,X3] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X3) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),X3)))))) ) | $spl168),
  inference(superposition,[],[f3384,f113])).
fof(f3384,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl168),
  inference(superposition,[],[f3382,f113])).
fof(f3382,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.NIL_0')))) ) | $spl168),
  inference(trivial_inequality_removal,[],[f3380])).
fof(f3380,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.NIL_0')))) ) | $spl168),
  inference(superposition,[],[f1851,f114])).
fof(f10347,plain,(
  ( ! [X1182,X1183,X1181] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK39(X1181,X1182,X1183,sK0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1183))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1182),s('type.num.num',X1181))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1181)) ) | $spl602),
  inference(cnf_transformation,[],[f10347_D])).
fof(f10347_D,plain,(
  ( ! [X1182,X1183,X1181] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK39(X1181,X1182,X1183,sK0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1183))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1182),s('type.num.num',X1181))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1181)) ) <=> ~$spl602),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl602])])).
fof(f10047,plain,(
  ( ! [X1182,X1184,X1183,X1181,X1185] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK39(X1181,X1182,X1183,sK0)) | s('type.list.list'(sK0),X1184) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1185),s('type.list.list'(sK0),X1184))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1181) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1183))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1182),s('type.num.num',X1181)))) ) | ($spl168 | $spl538)),
  inference(superposition,[],[f3901,f9073])).
fof(f3901,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (s('type.list.list'(sK0),X15) != s('type.list.list'(sK0),sK39(X12,X13,X14,sK0)) | s('type.list.list'(sK0),X15) != s('type.list.list'(sK0),X16) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),X16))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X12) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X14))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12)))) ) | $spl168),
  inference(superposition,[],[f3653,f110])).
fof(f561,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),X0)))))))))))))))))))))))))))))))) ) | $spl98),
  inference(cnf_transformation,[],[f561_D])).
fof(f561_D,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),X0)))))))))))))))))))))))))))))))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f10227,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X18) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X19)) ) | $spl598),
  inference(cnf_transformation,[],[f10227_D])).
fof(f10227_D,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X18) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X19)) ) <=> ~$spl598),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl598])])).
fof(f10226,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X19,X17,X7,X5,X3,X15,X13,X11,X9,X18,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X18) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X19) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X2) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),X2))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))))))) ) | ($spl2 | $spl538 | $spl562)),
  inference(forward_demodulation,[],[f10225,f9305])).
fof(f10225,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X19,X17,X7,X5,X3,X15,X13,X11,X9,X18,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X19) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X2) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),X2))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))) ) | ($spl2 | $spl538 | $spl562)),
  inference(forward_demodulation,[],[f9763,f9305])).
fof(f9763,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X19,X17,X7,X5,X3,X15,X13,X11,X9,X18,X16] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X2) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),X2))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))) ) | ($spl2 | $spl538)),
  inference(superposition,[],[f553,f9073])).
fof(f553,plain,(
  ( ! [X30,X28,X26,X24,X35,X33,X23,X21,X19,X17,X31,X29,X27,X25,X34,X32,X22,X20,X18,X16] : (s('type.list.list'(sK0),X16) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X34),s('type.list.list'(sK0),X35))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),X16))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X18)))))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X35))) | s('type.num.num',X17) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X34)))) ) | $spl2),
  inference(superposition,[],[f128,f112])).
fof(f9758,plain,(
  ( ! [X127,X125,X123,X121,X132,X130,X128,X118,X116,X114,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X116),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X117),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X118),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X119),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X120),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X121),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X122),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X123),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X124),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X125),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X126),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X127),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X128),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X129),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X130),s('type.list.list'(sK0),sK39('const.list.LENGTH_1'(s('type.list.list'(X114),X115)),X131,X132,sK0)))))))))))))))))))))))))))))))) | s('type.list.list'(X114),'const.list.NIL_0') != s('type.list.list'(X114),X115) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X131),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115)))))) ) | $spl596),
  inference(cnf_transformation,[],[f9758_D])).
fof(f9758_D,plain,(
  ( ! [X127,X125,X123,X121,X132,X130,X128,X118,X116,X114,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X116),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X117),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X118),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X119),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X120),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X121),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X122),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X123),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X124),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X125),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X126),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X127),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X128),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X129),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X130),s('type.list.list'(sK0),sK39('const.list.LENGTH_1'(s('type.list.list'(X114),X115)),X131,X132,sK0)))))))))))))))))))))))))))))))) | s('type.list.list'(X114),'const.list.NIL_0') != s('type.list.list'(X114),X115) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X131),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115)))))) ) <=> ~$spl596),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl596])])).
fof(f145,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | $spl15),
  inference(cnf_transformation,[],[f145_D])).
fof(f145_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f2583,plain,(
  ( ! [X127,X125,X123,X121,X132,X130,X128,X118,X116,X114,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X116),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X117),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X118),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X119),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X120),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X121),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X122),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X123),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X124),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X125),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X126),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X127),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X128),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X129),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X130),s('type.list.list'(sK0),sK39('const.list.LENGTH_1'(s('type.list.list'(X114),X115)),X131,X132,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X131),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))))) | s('type.list.list'(X114),'const.list.NIL_0') != s('type.list.list'(X114),X115)) ) | $spl2),
  inference(superposition,[],[f554,f114])).
fof(f554,plain,(
  ( ! [X39,X37,X47,X45,X43,X41,X52,X50,X48,X38,X36,X46,X44,X42,X40,X53,X51,X49] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',X36)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),sK39(X36,X37,X38,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X38))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X36)))) ) | $spl2),
  inference(superposition,[],[f128,f110])).
fof(f9757,plain,(
  ( ! [X255,X261,X257,X259,X263,X271,X265,X267,X269,X260,X262,X256,X258,X268,X270,X264,X266,X254] : (s('type.num.num',X270) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X271))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X255),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X256),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X257),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X258),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X259),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X260),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X261),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X262),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X263),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X264),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X265),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X266),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X267),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X268),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X269),s('type.list.list'(sK0),sK39('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X254)))))),X270,X271,sK0))))))))))))))))))))))))))))))))) ) | $spl594),
  inference(cnf_transformation,[],[f9757_D])).
fof(f9757_D,plain,(
  ( ! [X255,X261,X257,X259,X263,X271,X265,X267,X269,X260,X262,X256,X258,X268,X270,X264,X266,X254] : (s('type.num.num',X270) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X271))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X255),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X256),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X257),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X258),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X259),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X260),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X261),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X262),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X263),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X264),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X265),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X266),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X267),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X268),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X269),s('type.list.list'(sK0),sK39('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X254)))))),X270,X271,sK0))))))))))))))))))))))))))))))))) ) <=> ~$spl594),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl594])])).
fof(f9756,plain,(
  ( ! [X255,X261,X257,X259,X263,X271,X265,X267,X269,X260,X262,X256,X258,X268,X270,X264,X266,X254] : (s('type.num.num',X270) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X271))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X255),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X256),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X257),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X258),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X259),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X260),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X261),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X262),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X263),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X264),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X265),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X266),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X267),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X268),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X269),s('type.list.list'(sK0),sK39('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X254)))))),X270,X271,sK0))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f9755,f93])).
fof(f9755,plain,(
  ( ! [X255,X261,X257,X259,X263,X271,X265,X267,X269,X260,X262,X256,X258,X268,X270,X264,X266,X254] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X271))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X270),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X255),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X256),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X257),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X258),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X259),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X260),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X261),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X262),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X263),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X264),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X265),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X266),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X267),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X268),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X269),s('type.list.list'(sK0),sK39('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X254)))))),X270,X271,sK0))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2590,f119])).
fof(f119,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X29] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.numeral.numeral_distrib|split|10')).
fof(f2590,plain,(
  ( ! [X255,X261,X257,X259,X263,X269,X265,X267,X271,X260,X262,X256,X258,X268,X254,X264,X266,X270] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X255),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X256),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X257),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X258),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X259),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X260),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X261),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X262),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X263),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X264),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X265),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X266),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X267),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X268),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X269),s('type.list.list'(sK0),sK39('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X254)))))),X270,X271,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X271))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X270),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X254)))))))))) ) | $spl2),
  inference(superposition,[],[f554,f119])).
fof(f9754,plain,(
  ( ! [X280,X282,X288,X277,X279,X273,X275,X285,X287,X281,X283,X289,X276,X278,X272,X274,X284,X286] : (s('type.num.num',X288) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X289))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X273),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X274),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X275),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X276),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X277),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X278),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X279),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X280),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X281),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X282),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X283),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X284),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X285),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X286),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X287),s('type.list.list'(sK0),sK39('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272)))))),X288,X289,sK0))))))))))))))))))))))))))))))))) ) | $spl592),
  inference(cnf_transformation,[],[f9754_D])).
fof(f9754_D,plain,(
  ( ! [X280,X282,X288,X277,X279,X273,X275,X285,X287,X281,X283,X289,X276,X278,X272,X274,X284,X286] : (s('type.num.num',X288) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X289))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X273),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X274),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X275),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X276),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X277),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X278),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X279),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X280),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X281),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X282),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X283),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X284),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X285),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X286),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X287),s('type.list.list'(sK0),sK39('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272)))))),X288,X289,sK0))))))))))))))))))))))))))))))))) ) <=> ~$spl592),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl592])])).
fof(f9753,plain,(
  ( ! [X280,X282,X288,X277,X279,X273,X275,X285,X287,X281,X283,X289,X276,X278,X272,X274,X284,X286] : (s('type.num.num',X288) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X289))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X273),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X274),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X275),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X276),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X277),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X278),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X279),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X280),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X281),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X282),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X283),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X284),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X285),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X286),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X287),s('type.list.list'(sK0),sK39('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272)))))),X288,X289,sK0))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f9752,f93])).
fof(f9752,plain,(
  ( ! [X280,X282,X288,X277,X279,X273,X275,X285,X287,X281,X283,X289,X276,X278,X272,X274,X284,X286] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X289))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X288),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X273),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X274),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X275),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X276),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X277),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X278),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X279),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X280),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X281),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X282),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X283),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X284),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X285),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X286),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X287),s('type.list.list'(sK0),sK39('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272)))))),X288,X289,sK0))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2591,f121])).
fof(f2591,plain,(
  ( ! [X280,X282,X288,X277,X279,X273,X275,X285,X287,X281,X283,X289,X276,X278,X272,X274,X284,X286] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X273),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X274),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X275),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X276),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X277),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X278),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X279),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X280),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X281),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X282),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X283),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X284),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X285),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X286),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X287),s('type.list.list'(sK0),sK39('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272)))))),X288,X289,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X289))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X288),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272)))))))))) ) | $spl2),
  inference(superposition,[],[f554,f121])).
fof(f9751,plain,(
  ( ! [X127,X125,X123,X121,X132,X130,X128,X118,X116,X114,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X116),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X117),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X118),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X119),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X120),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X121),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X122),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X123),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X124),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X125),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X126),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X127),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X128),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X129),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X130),s('type.list.list'(sK0),sK38(X131,'const.list.LENGTH_1'(s('type.list.list'(X114),X115)),X132,sK0)))))))))))))))))))))))))))))))) | s('type.list.list'(X114),'const.list.NIL_0') != s('type.list.list'(X114),X115) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))),s('type.num.num',X131)))) ) | $spl590),
  inference(cnf_transformation,[],[f9751_D])).
fof(f9751_D,plain,(
  ( ! [X127,X125,X123,X121,X132,X130,X128,X118,X116,X114,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X116),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X117),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X118),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X119),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X120),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X121),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X122),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X123),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X124),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X125),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X126),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X127),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X128),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X129),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X130),s('type.list.list'(sK0),sK38(X131,'const.list.LENGTH_1'(s('type.list.list'(X114),X115)),X132,sK0)))))))))))))))))))))))))))))))) | s('type.list.list'(X114),'const.list.NIL_0') != s('type.list.list'(X114),X115) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))),s('type.num.num',X131)))) ) <=> ~$spl590),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl590])])).
fof(f2772,plain,(
  ( ! [X127,X125,X123,X121,X132,X130,X128,X118,X116,X114,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X116),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X117),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X118),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X119),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X120),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X121),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X122),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X123),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X124),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X125),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X126),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X127),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X128),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X129),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X130),s('type.list.list'(sK0),sK38(X131,'const.list.LENGTH_1'(s('type.list.list'(X114),X115)),X132,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))),s('type.num.num',X131))) | s('type.list.list'(X114),'const.list.NIL_0') != s('type.list.list'(X114),X115)) ) | $spl2),
  inference(superposition,[],[f555,f114])).
fof(f555,plain,(
  ( ! [X61,X59,X57,X70,X68,X66,X64,X54,X62,X60,X58,X56,X71,X69,X67,X65,X55,X63] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',X55)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),sK38(X54,X55,X56,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X56))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X55),s('type.num.num',X54)))) ) | $spl2),
  inference(superposition,[],[f128,f109])).
fof(f9750,plain,(
  ( ! [X255,X261,X257,X259,X263,X271,X265,X267,X269,X260,X262,X256,X258,X268,X270,X264,X266,X254] : (s('type.num.num',X270) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X271))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X255),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X256),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X257),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X258),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X259),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X260),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X261),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X262),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X263),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X264),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X265),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X266),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X267),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X268),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X269),s('type.list.list'(sK0),sK38(X270,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X254)))))),X271,sK0))))))))))))))))))))))))))))))))) ) | $spl588),
  inference(cnf_transformation,[],[f9750_D])).
fof(f9750_D,plain,(
  ( ! [X255,X261,X257,X259,X263,X271,X265,X267,X269,X260,X262,X256,X258,X268,X270,X264,X266,X254] : (s('type.num.num',X270) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X271))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X255),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X256),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X257),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X258),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X259),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X260),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X261),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X262),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X263),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X264),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X265),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X266),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X267),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X268),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X269),s('type.list.list'(sK0),sK38(X270,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X254)))))),X271,sK0))))))))))))))))))))))))))))))))) ) <=> ~$spl588),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl588])])).
fof(f9749,plain,(
  ( ! [X255,X261,X257,X259,X263,X271,X265,X267,X269,X260,X262,X256,X258,X268,X270,X264,X266,X254] : (s('type.num.num',X270) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X271))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X255),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X256),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X257),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X258),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X259),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X260),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X261),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X262),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X263),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X264),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X265),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X266),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X267),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X268),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X269),s('type.list.list'(sK0),sK38(X270,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X254)))))),X271,sK0))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f9748,f94])).
fof(f9748,plain,(
  ( ! [X255,X261,X257,X259,X263,X271,X265,X267,X269,X260,X262,X256,X258,X268,X270,X264,X266,X254] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X271))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X270))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X255),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X256),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X257),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X258),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X259),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X260),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X261),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X262),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X263),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X264),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X265),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X266),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X267),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X268),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X269),s('type.list.list'(sK0),sK38(X270,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X254)))))),X271,sK0))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2779,f119])).
fof(f2779,plain,(
  ( ! [X255,X261,X257,X259,X263,X269,X265,X267,X271,X260,X262,X256,X258,X268,X270,X264,X266,X254] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X255),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X256),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X257),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X258),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X259),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X260),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X261),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X262),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X263),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X264),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X265),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X266),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X267),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X268),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X269),s('type.list.list'(sK0),sK38(X270,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X254)))))),X271,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X271))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X254))))))),s('type.num.num',X270)))) ) | $spl2),
  inference(superposition,[],[f555,f119])).
fof(f9747,plain,(
  ( ! [X280,X282,X288,X277,X279,X273,X275,X285,X287,X281,X283,X289,X276,X278,X272,X274,X284,X286] : (s('type.num.num',X288) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X289))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X273),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X274),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X275),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X276),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X277),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X278),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X279),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X280),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X281),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X282),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X283),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X284),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X285),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X286),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X287),s('type.list.list'(sK0),sK38(X288,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272)))))),X289,sK0))))))))))))))))))))))))))))))))) ) | $spl586),
  inference(cnf_transformation,[],[f9747_D])).
fof(f9747_D,plain,(
  ( ! [X280,X282,X288,X277,X279,X273,X275,X285,X287,X281,X283,X289,X276,X278,X272,X274,X284,X286] : (s('type.num.num',X288) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X289))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X273),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X274),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X275),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X276),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X277),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X278),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X279),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X280),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X281),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X282),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X283),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X284),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X285),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X286),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X287),s('type.list.list'(sK0),sK38(X288,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272)))))),X289,sK0))))))))))))))))))))))))))))))))) ) <=> ~$spl586),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl586])])).
fof(f9746,plain,(
  ( ! [X280,X282,X288,X277,X279,X273,X275,X285,X287,X281,X283,X289,X276,X278,X272,X274,X284,X286] : (s('type.num.num',X288) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X289))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X273),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X274),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X275),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X276),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X277),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X278),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X279),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X280),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X281),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X282),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X283),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X284),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X285),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X286),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X287),s('type.list.list'(sK0),sK38(X288,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272)))))),X289,sK0))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f9745,f94])).
fof(f9745,plain,(
  ( ! [X280,X282,X288,X277,X279,X273,X275,X285,X287,X281,X283,X289,X276,X278,X272,X274,X284,X286] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X289))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X288))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X273),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X274),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X275),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X276),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X277),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X278),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X279),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X280),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X281),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X282),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X283),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X284),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X285),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X286),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X287),s('type.list.list'(sK0),sK38(X288,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272)))))),X289,sK0))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2780,f121])).
fof(f2780,plain,(
  ( ! [X280,X282,X288,X277,X279,X273,X275,X285,X287,X281,X283,X289,X276,X278,X272,X274,X284,X286] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X273),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X274),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X275),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X276),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X277),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X278),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X279),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X280),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X281),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X282),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X283),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X284),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X285),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X286),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X287),s('type.list.list'(sK0),sK38(X288,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272)))))),X289,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X289))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272))))))),s('type.num.num',X288)))) ) | $spl2),
  inference(superposition,[],[f555,f121])).
fof(f9744,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X16,X17,X0,sK0)),s('type.list.list'(sK0),sK39(X16,X17,X0,sK0)))))))))))))))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16)))) ) | $spl584),
  inference(cnf_transformation,[],[f9744_D])).
fof(f9744_D,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X16,X17,X0,sK0)),s('type.list.list'(sK0),sK39(X16,X17,X0,sK0)))))))))))))))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16)))) ) <=> ~$spl584),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl584])])).
fof(f3202,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X16,X17,X0,sK0)),s('type.list.list'(sK0),sK39(X16,X17,X0,sK0)))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl2),
  inference(superposition,[],[f550,f114])).
fof(f550,plain,(
  ( ! [X80,X70,X68,X66,X64,X78,X76,X74,X72,X81,X71,X69,X67,X65,X79,X77,X75,X73] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X66)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X72),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X73),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X74),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X75),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X76),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X77),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X78),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X79),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X80),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X81),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X64,X65,X66,sK0)),s('type.list.list'(sK0),sK39(X64,X65,X66,sK0)))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X66))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X65),s('type.num.num',X64)))) ) | $spl2),
  inference(superposition,[],[f128,f111])).
fof(f9743,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(X0,X16,sK0)),s('type.list.list'(sK0),sK19(X0,X16,sK0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl582),
  inference(cnf_transformation,[],[f9743_D])).
fof(f9743_D,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(X0,X16,sK0)),s('type.list.list'(sK0),sK19(X0,X16,sK0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) <=> ~$spl582),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl582])])).
fof(f4329,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(X0,X16,sK0)),s('type.list.list'(sK0),sK19(X0,X16,sK0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl2),
  inference(superposition,[],[f547,f114])).
fof(f547,plain,(
  ( ! [X30,X28,X26,X24,X23,X21,X19,X17,X31,X29,X27,X25,X32,X22,X20,X18,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X16)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(X16,X17,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21(X16,X17,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(X16,X17,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(X16,X17,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(X16,X17,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25(X16,X17,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(X16,X17,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(X16,X17,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(X16,X17,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(X16,X17,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30(X16,X17,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(X16,X17,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(X16,X17,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(X16,X17,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(X16,X17,sK0)),s('type.list.list'(sK0),sK19(X16,X17,sK0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X17))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X16))))))) ) | $spl2),
  inference(superposition,[],[f128,f96])).
fof(f9726,plain,(
  ( ! [X61,X59,X57,X66,X64,X54,X52,X62,X60,X58,X56,X67,X65,X55,X53,X63] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X67))),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),sK19('const.list.NIL_0',X67,sK0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ) | $spl570),
  inference(cnf_transformation,[],[f9726_D])).
fof(f9726_D,plain,(
  ( ! [X61,X59,X57,X66,X64,X54,X52,X62,X60,X58,X56,X67,X65,X55,X53,X63] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X67))),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),sK19('const.list.NIL_0',X67,sK0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ) <=> ~$spl570),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl570])])).
fof(f9742,plain,(
  ( ! [X30,X39,X37,X35,X33,X45,X43,X41,X31,X38,X36,X34,X32,X44,X42,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X45))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),sK19('const.list.NIL_0',X45,sK0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ) | ($spl2 | $spl562)),
  inference(forward_demodulation,[],[f9335,f9305])).
fof(f9335,plain,(
  ( ! [X30,X39,X37,X35,X33,X45,X43,X41,X31,X38,X36,X34,X32,X44,X42,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34('const.list.NIL_0',X45,sK0)),s('type.list.list'(sK0),sK19('const.list.NIL_0',X45,sK0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X45))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) | ($spl2 | $spl562)),
  inference(superposition,[],[f547,f9305])).
fof(f9729,plain,(
  ( ! [X61,X59,X57,X70,X68,X66,X64,X62,X60,X58,X56,X71,X69,X67,X65,X55,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X71),s('type.num.num',X70))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X70,X71,'const.list.NIL_0',sK0)),s('type.list.list'(sK0),sK39(X70,X71,'const.list.NIL_0',sK0))))))))))))))))))))))))))))))))))) ) | $spl572),
  inference(cnf_transformation,[],[f9729_D])).
fof(f9729_D,plain,(
  ( ! [X61,X59,X57,X70,X68,X66,X64,X62,X60,X58,X56,X71,X69,X67,X65,X55,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X71),s('type.num.num',X70))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X70,X71,'const.list.NIL_0',sK0)),s('type.list.list'(sK0),sK39(X70,X71,'const.list.NIL_0',sK0))))))))))))))))))))))))))))))))))) ) <=> ~$spl572),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl572])])).
fof(f9741,plain,(
  ( ! [X61,X59,X57,X47,X54,X52,X50,X48,X62,X60,X58,X56,X46,X55,X53,X51,X49] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X61))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X61,X62,'const.list.NIL_0',sK0)),s('type.list.list'(sK0),sK39(X61,X62,'const.list.NIL_0',sK0))))))))))))))))))))))))))))))))))) ) | ($spl2 | $spl562)),
  inference(forward_demodulation,[],[f9336,f9305])).
fof(f9336,plain,(
  ( ! [X61,X59,X57,X47,X54,X52,X50,X48,X62,X60,X58,X56,X46,X55,X53,X51,X49] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X61,X62,'const.list.NIL_0',sK0)),s('type.list.list'(sK0),sK39(X61,X62,'const.list.NIL_0',sK0)))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X61)))) ) | ($spl2 | $spl562)),
  inference(superposition,[],[f550,f9305])).
fof(f9740,plain,(
  ( ! [X420,X422,X416,X418,X428,X430,X424,X426,X432,X421,X423,X417,X419,X429,X431,X425,X427] : (s('type.num.num',X431) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X432))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X416),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X417),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X418),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X419),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X420),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X421),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X422),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X423),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X424),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X425),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X426),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X427),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X428),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X429),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X430),s('type.list.list'(sK0),sK39('const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X431,X432,sK0))))))))))))))))))))))))))))))))) ) | $spl580),
  inference(cnf_transformation,[],[f9740_D])).
fof(f9740_D,plain,(
  ( ! [X420,X422,X416,X418,X428,X430,X424,X426,X432,X421,X423,X417,X419,X429,X431,X425,X427] : (s('type.num.num',X431) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X432))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X416),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X417),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X418),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X419),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X420),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X421),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X422),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X423),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X424),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X425),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X426),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X427),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X428),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X429),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X430),s('type.list.list'(sK0),sK39('const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X431,X432,sK0))))))))))))))))))))))))))))))))) ) <=> ~$spl580),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl580])])).
fof(f9739,plain,(
  ( ! [X420,X422,X416,X418,X428,X430,X424,X426,X432,X421,X423,X417,X419,X429,X431,X425,X427] : (s('type.num.num',X431) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X432))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X416),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X417),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X418),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X419),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X420),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X421),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X422),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X423),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X424),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X425),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X426),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X427),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X428),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X429),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X430),s('type.list.list'(sK0),sK39('const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X431,X432,sK0))))))))))))))))))))))))))))))))) ) | ($spl2 | $spl562)),
  inference(forward_demodulation,[],[f9738,f93])).
fof(f9738,plain,(
  ( ! [X420,X422,X416,X418,X428,X430,X424,X426,X432,X421,X423,X417,X419,X429,X431,X425,X427] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X432))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X431),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X416),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X417),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X418),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X419),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X420),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X421),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X422),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X423),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X424),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X425),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X426),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X427),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X428),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X429),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X430),s('type.list.list'(sK0),sK39('const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X431,X432,sK0))))))))))))))))))))))))))))))))) ) | ($spl2 | $spl562)),
  inference(forward_demodulation,[],[f9445,f9305])).
fof(f9445,plain,(
  ( ! [X420,X422,X416,X418,X428,X430,X424,X426,X432,X421,X423,X417,X419,X429,X431,X425,X427] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X416),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X417),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X418),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X419),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X420),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X421),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X422),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X423),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X424),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X425),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X426),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X427),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X428),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X429),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X430),s('type.list.list'(sK0),sK39('const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X431,X432,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X432))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X431),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | ($spl2 | $spl562)),
  inference(superposition,[],[f554,f9305])).
fof(f9737,plain,(
  ( ! [X445,X447,X441,X443,X449,X436,X438,X434,X444,X446,X440,X442,X448,X437,X439,X433,X435] : (s('type.num.num',X448) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X449))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X433),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X434),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X435),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X436),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X437),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X438),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X439),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X440),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X441),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X442),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X443),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X444),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X445),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X446),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X447),s('type.list.list'(sK0),sK38(X448,'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X449,sK0))))))))))))))))))))))))))))))))) ) | $spl578),
  inference(cnf_transformation,[],[f9737_D])).
fof(f9737_D,plain,(
  ( ! [X445,X447,X441,X443,X449,X436,X438,X434,X444,X446,X440,X442,X448,X437,X439,X433,X435] : (s('type.num.num',X448) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X449))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X433),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X434),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X435),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X436),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X437),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X438),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X439),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X440),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X441),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X442),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X443),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X444),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X445),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X446),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X447),s('type.list.list'(sK0),sK38(X448,'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X449,sK0))))))))))))))))))))))))))))))))) ) <=> ~$spl578),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl578])])).
fof(f9736,plain,(
  ( ! [X445,X447,X441,X443,X449,X436,X438,X434,X444,X446,X440,X442,X448,X437,X439,X433,X435] : (s('type.num.num',X448) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X449))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X433),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X434),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X435),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X436),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X437),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X438),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X439),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X440),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X441),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X442),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X443),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X444),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X445),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X446),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X447),s('type.list.list'(sK0),sK38(X448,'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X449,sK0))))))))))))))))))))))))))))))))) ) | ($spl2 | $spl562)),
  inference(forward_demodulation,[],[f9735,f94])).
fof(f9735,plain,(
  ( ! [X445,X447,X441,X443,X449,X436,X438,X434,X444,X446,X440,X442,X448,X437,X439,X433,X435] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X449))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X448))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X433),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X434),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X435),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X436),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X437),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X438),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X439),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X440),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X441),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X442),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X443),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X444),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X445),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X446),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X447),s('type.list.list'(sK0),sK38(X448,'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X449,sK0))))))))))))))))))))))))))))))))) ) | ($spl2 | $spl562)),
  inference(forward_demodulation,[],[f9446,f9305])).
fof(f9446,plain,(
  ( ! [X445,X447,X441,X443,X449,X436,X438,X434,X444,X446,X440,X442,X448,X437,X439,X433,X435] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X433),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X434),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X435),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X436),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X437),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X438),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X439),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X440),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X441),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X442),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X443),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X444),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X445),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X446),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X447),s('type.list.list'(sK0),sK38(X448,'const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')),X449,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X449))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num',X448)))) ) | ($spl2 | $spl562)),
  inference(superposition,[],[f555,f9305])).
fof(f9734,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(X0,X16,sK0)),s('type.list.list'(sK0),sK19(X0,X16,sK0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl576),
  inference(cnf_transformation,[],[f9734_D])).
fof(f9734_D,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(X0,X16,sK0)),s('type.list.list'(sK0),sK19(X0,X16,sK0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) <=> ~$spl576),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl576])])).
fof(f9727,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(X0,X16,sK0)),s('type.list.list'(sK0),sK19(X0,X16,sK0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | ($spl2 | $spl562)),
  inference(forward_demodulation,[],[f4323,f9305])).
fof(f4323,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(X0,X16,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(X0,X16,sK0)),s('type.list.list'(sK0),sK19(X0,X16,sK0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl2),
  inference(superposition,[],[f547,f113])).
fof(f9733,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X16,X17,X0,sK0)),s('type.list.list'(sK0),sK39(X16,X17,X0,sK0)))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16)))) ) | $spl574),
  inference(cnf_transformation,[],[f9733_D])).
fof(f9733_D,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X16,X17,X0,sK0)),s('type.list.list'(sK0),sK39(X16,X17,X0,sK0)))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16)))) ) <=> ~$spl574),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl574])])).
fof(f9730,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X16,X17,X0,sK0)),s('type.list.list'(sK0),sK39(X16,X17,X0,sK0)))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | ($spl2 | $spl562)),
  inference(forward_demodulation,[],[f3196,f9305])).
fof(f3196,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X16,X17,X0,sK0)),s('type.list.list'(sK0),sK39(X16,X17,X0,sK0)))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl2),
  inference(superposition,[],[f550,f113])).
fof(f9732,plain,(
  $false | ($spl10 | $spl15 | $spl562)),
  inference(subsumption_resolution,[],[f9731,f145])).
fof(f9731,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | ($spl10 | $spl562)),
  inference(forward_demodulation,[],[f142,f9305])).
fof(f560,plain,(
  ( ! [X48] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) | $spl96),
  inference(cnf_transformation,[],[f560_D])).
fof(f560_D,plain,(
  ( ! [X48] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f9728,plain,(
  ( ! [X61,X59,X57,X70,X68,X66,X64,X54,X62,X60,X58,X56,X71,X69,X67,X65,X55,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X71),s('type.num.num',X70))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X54)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X70,X71,'const.list.NIL_0',sK0)),s('type.list.list'(sK0),sK39(X70,X71,'const.list.NIL_0',sK0)))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X54)))) ) | ($spl2 | $spl562)),
  inference(forward_demodulation,[],[f3199,f9305])).
fof(f3199,plain,(
  ( ! [X61,X59,X57,X70,X68,X66,X64,X54,X62,X60,X58,X56,X71,X69,X67,X65,X55,X63] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X54)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X70,X71,'const.list.NIL_0',sK0)),s('type.list.list'(sK0),sK39(X70,X71,'const.list.NIL_0',sK0)))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X71),s('type.num.num',X70))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X54)))) ) | $spl2),
  inference(superposition,[],[f550,f113])).
fof(f9725,plain,(
  ( ! [X61,X59,X57,X66,X64,X54,X52,X62,X60,X58,X56,X67,X65,X55,X53,X51,X63] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X67))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),sK19('const.list.NIL_0',X67,sK0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51)))) ) | ($spl2 | $spl562)),
  inference(forward_demodulation,[],[f4326,f9305])).
fof(f4326,plain,(
  ( ! [X61,X59,X57,X66,X64,X54,X52,X62,X60,X58,X56,X67,X65,X55,X53,X51,X63] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34('const.list.NIL_0',X67,sK0)),s('type.list.list'(sK0),sK19('const.list.NIL_0',X67,sK0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X67))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X51)))) ) | $spl2),
  inference(superposition,[],[f547,f113])).
fof(f9074,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | $spl539),
  inference(cnf_transformation,[],[f9074_D])).
fof(f9074_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) <=> ~$spl539),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl539])])).
fof(f9105,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl542),
  inference(duplicate_literal_removal,[],[f9098])).
fof(f9098,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl542),
  inference(superposition,[],[f9077,f113])).
fof(f9721,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl566),
  inference(cnf_transformation,[],[f9721_D])).
fof(f9721_D,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) <=> ~$spl566),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl566])])).
fof(f9724,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))))) | $spl569),
  inference(cnf_transformation,[],[f9724_D])).
fof(f9724_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))))) <=> ~$spl569),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl569])])).
fof(f9722,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl542),
  inference(subsumption_resolution,[],[f9108,f114])).
fof(f9108,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl542),
  inference(superposition,[],[f9107,f113])).
fof(f9107,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),X0))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl542),
  inference(subsumption_resolution,[],[f9104,f114])).
fof(f9104,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),X0)))))) ) | $spl542),
  inference(superposition,[],[f9077,f113])).
fof(f9128,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl542),
  inference(subsumption_resolution,[],[f9119,f114])).
fof(f9119,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl542),
  inference(superposition,[],[f9117,f113])).
fof(f9117,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),X0))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl542),
  inference(trivial_inequality_removal,[],[f9115])).
fof(f9115,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),X0)))) ) | $spl542),
  inference(superposition,[],[f9107,f114])).
fof(f3280,plain,(
  ( ! [X2,X19,X1,X18] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),X2))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2)))) ) | $spl282),
  inference(cnf_transformation,[],[f3280_D])).
fof(f3280_D,plain,(
  ( ! [X2,X19,X1,X18] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),X2))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2)))) ) <=> ~$spl282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl282])])).
fof(f8964,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X17)))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X18),s('type.list.list'(sK0),X19))) | s('type.num.num',X17) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X19))) | s('type.num.num',X16) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X18)))) ) | $spl11),
  inference(duplicate_literal_removal,[],[f8956])).
fof(f8956,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X17)))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X18),s('type.list.list'(sK0),X19))) | s('type.num.num',X17) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X19))) | s('type.num.num',X16) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X18))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X15)))) ) | $spl11),
  inference(superposition,[],[f575,f113])).
fof(f575,plain,(
  ( ! [X4,X2,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))) | s('type.list.list'(sK0),X1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X4),s('type.list.list'(sK0),X5))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X5))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4)))) ) | $spl11),
  inference(superposition,[],[f562,f112])).
fof(f562,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl11),
  inference(superposition,[],[f141,f113])).
fof(f8974,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X16),s('type.list.list'(sK0),X17))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X17))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X16))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X15)))) ) | $spl11),
  inference(trivial_inequality_removal,[],[f8970])).
fof(f8970,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s('type.list.list'(sK0),X15) != s('type.list.list'(sK0),X15) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X16),s('type.list.list'(sK0),X17))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X17))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X16))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X15)))) ) | $spl11),
  inference(superposition,[],[f8963,f113])).
fof(f8963,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X3),s('type.list.list'(sK0),X4))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))) | s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))))) ) | $spl11),
  inference(trivial_inequality_removal,[],[f8959])).
fof(f8959,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X3),s('type.list.list'(sK0),X4))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))) | s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl11),
  inference(superposition,[],[f575,f114])).
fof(f9714,plain,(
  $false | ($spl539 | $spl562)),
  inference(subsumption_resolution,[],[f9713,f121])).
fof(f9713,plain,(
  ( ! [X34] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))))))) ) | ($spl539 | $spl562)),
  inference(subsumption_resolution,[],[f9685,f93])).
fof(f9685,plain,(
  ( ! [X34] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))))))) ) | ($spl539 | $spl562)),
  inference(superposition,[],[f9650,f121])).
fof(f9650,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | ($spl539 | $spl562)),
  inference(equality_resolution,[],[f9544])).
fof(f9544,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | ($spl539 | $spl562)),
  inference(forward_demodulation,[],[f9330,f9305])).
fof(f9330,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num',X0) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | ($spl539 | $spl562)),
  inference(backward_demodulation,[],[f9305,f9273])).
fof(f9273,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | $spl539),
  inference(equality_resolution,[],[f9086])).
fof(f9086,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X2),s('type.list.list'(sK0),X3))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.num.num',X0) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2)))) ) | $spl539),
  inference(superposition,[],[f9081,f112])).
fof(f9081,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))))) | $spl539),
  inference(trivial_inequality_removal,[],[f9080])).
fof(f9080,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.NIL_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))))) | $spl539),
  inference(superposition,[],[f9074,f113])).
fof(f9712,plain,(
  $false | ($spl539 | $spl562)),
  inference(subsumption_resolution,[],[f9711,f119])).
fof(f9711,plain,(
  ( ! [X33] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))))))) ) | ($spl539 | $spl562)),
  inference(subsumption_resolution,[],[f9684,f93])).
fof(f9684,plain,(
  ( ! [X33] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))))))) ) | ($spl539 | $spl562)),
  inference(superposition,[],[f9650,f119])).
fof(f9707,plain,(
  $false | ($spl539 | $spl562)),
  inference(subsumption_resolution,[],[f9706,f9305])).
fof(f9706,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | ($spl539 | $spl562)),
  inference(subsumption_resolution,[],[f9680,f93])).
fof(f9680,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | ($spl539 | $spl562)),
  inference(superposition,[],[f9650,f9305])).
fof(f9698,plain,(
  $false | ($spl539 | $spl562)),
  inference(trivial_inequality_removal,[],[f9697])).
fof(f9697,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ($spl539 | $spl562)),
  inference(duplicate_literal_removal,[],[f9696])).
fof(f9696,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ($spl539 | $spl562)),
  inference(superposition,[],[f9650,f94])).
fof(f9624,plain,(
  ( ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))) ) | $spl564),
  inference(cnf_transformation,[],[f9624_D])).
fof(f9624_D,plain,(
  ( ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))) ) <=> ~$spl564),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl564])])).
fof(f9623,plain,(
  ( ! [X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | ($spl264 | $spl562)),
  inference(forward_demodulation,[],[f9621,f9305])).
fof(f9621,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl264),
  inference(trivial_inequality_removal,[],[f9617])).
fof(f9617,plain,(
  ( ! [X6,X7] : (s('type.list.list'(sK0),X6) != s('type.list.list'(sK0),X6) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl264),
  inference(superposition,[],[f3034,f113])).
fof(f9321,plain,(
  $false | $spl563),
  inference(trivial_inequality_removal,[],[f9320])).
fof(f9320,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.NIL_0') | $spl563),
  inference(superposition,[],[f9306,f114])).
fof(f9304,plain,(
  ( ! [X19,X20,X18] : (s('type.num.num',X20) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(X18),'const.list.NIL_0') != s('type.list.list'(X18),X19) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))),s('type.num.num',X20)))) ) | $spl560),
  inference(cnf_transformation,[],[f9304_D])).
fof(f9304_D,plain,(
  ( ! [X19,X20,X18] : (s('type.num.num',X20) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(X18),'const.list.NIL_0') != s('type.list.list'(X18),X19) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))),s('type.num.num',X20)))) ) <=> ~$spl560),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl560])])).
fof(f9306,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | $spl563),
  inference(cnf_transformation,[],[f9306_D])).
fof(f9306_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) <=> ~$spl563),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl563])])).
fof(f9282,plain,(
  ( ! [X19,X20,X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num',X20) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))),s('type.num.num',X20))) | s('type.list.list'(X18),'const.list.NIL_0') != s('type.list.list'(X18),X19)) ) | $spl539),
  inference(superposition,[],[f9273,f114])).
fof(f9198,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | $spl557),
  inference(cnf_transformation,[],[f9198_D])).
fof(f9198_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) <=> ~$spl557),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl557])])).
fof(f9199,plain,(
  ( ! [X103,X101,X102,X104] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X101),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X102),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X103),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X104),s('type.list.list'(sK0),sK2))))))))))))))) ) | $spl558),
  inference(cnf_transformation,[],[f9199_D])).
fof(f9199_D,plain,(
  ( ! [X103,X101,X102,X104] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X101),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X102),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X103),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X104),s('type.list.list'(sK0),sK2))))))))))))))) ) <=> ~$spl558),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl558])])).
fof(f9196,plain,(
  ( ! [X103,X101,X102,X104] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X101),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X102),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X103),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X104),s('type.list.list'(sK0),sK2)))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f9195,f125])).
fof(f9195,plain,(
  ( ! [X103,X101,X102,X104] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X101),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X102),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X103),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X104),s('type.list.list'(sK0),sK2)))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f9159,f90])).
fof(f9159,plain,(
  ( ! [X103,X101,X102,X104] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X101),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X102),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X103),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X104),s('type.list.list'(sK0),sK2))))))))))))))) ) | $spl4),
  inference(superposition,[],[f1468,f125])).
fof(f1468,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X0))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK2))))))))))))))) ) | $spl4),
  inference(equality_resolution,[],[f188])).
fof(f188,plain,(
  ( ! [X14,X19,X17,X15,X18,X16] : (s('type.list.list'(sK0),X14) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),sK2))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X19))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X14)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f9178,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | $spl549),
  inference(cnf_transformation,[],[f9178_D])).
fof(f9178_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) <=> ~$spl549),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl549])])).
fof(f9179,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2))))))))))))))) ) | $spl550),
  inference(cnf_transformation,[],[f9179_D])).
fof(f9179_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2))))))))))))))) ) <=> ~$spl550),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl550])])).
fof(f9191,plain,(
  ( ! [X83,X81,X84,X82] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X81),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X82),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X83),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X84),s('type.list.list'(sK0),sK2)))))))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f9190,f122])).
fof(f9190,plain,(
  ( ! [X83,X81,X84,X82] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X81),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X82),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X83),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X84),s('type.list.list'(sK0),sK2)))))))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f9189,f90])).
fof(f9189,plain,(
  ( ! [X83,X81,X84,X82] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X81),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X82),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X83),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X84),s('type.list.list'(sK0),sK2)))))))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f9188,f118])).
fof(f9188,plain,(
  ( ! [X80,X83,X81,X84,X82] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X81),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X82),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X83),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X84),s('type.list.list'(sK0),sK2))))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f9187,f107])).
fof(f9187,plain,(
  ( ! [X80,X83,X81,X84,X82] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X81),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X82),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X83),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X84),s('type.list.list'(sK0),sK2))))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f9155,f122])).
fof(f9155,plain,(
  ( ! [X80,X83,X81,X84,X82] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X81),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X82),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X83),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X84),s('type.list.list'(sK0),sK2))))))))))))))) ) | $spl4),
  inference(superposition,[],[f1468,f118])).
fof(f9182,plain,(
  ( ! [X39,X37,X41,X38,X36,X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),sK2)))))))))))))) | s('type.list.list'(X36),'const.list.NIL_0') != s('type.list.list'(X36),X37)) ) | $spl552),
  inference(cnf_transformation,[],[f9182_D])).
fof(f9182_D,plain,(
  ( ! [X39,X37,X41,X38,X36,X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),sK2)))))))))))))) | s('type.list.list'(X36),'const.list.NIL_0') != s('type.list.list'(X36),X37)) ) <=> ~$spl552),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl552])])).
fof(f9184,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | $spl555),
  inference(cnf_transformation,[],[f9184_D])).
fof(f9184_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) <=> ~$spl555),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl555])])).
fof(f9149,plain,(
  ( ! [X39,X37,X41,X38,X36,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),sK2)))))))))))))) | s('type.list.list'(X36),'const.list.NIL_0') != s('type.list.list'(X36),X37)) ) | $spl4),
  inference(superposition,[],[f1468,f114])).
fof(f9176,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2)))))))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f9175,f122])).
fof(f9175,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2)))))))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f9174,f90])).
fof(f9174,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2))))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f9143,f107])).
fof(f9143,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2))))))))))))))) ) | $spl4),
  inference(superposition,[],[f1468,f122])).
fof(f9172,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X17,X7,X5,X15,X13,X11,X9,X18,X16] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | $spl544),
  inference(cnf_transformation,[],[f9172_D])).
fof(f9172_D,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X17,X7,X5,X15,X13,X11,X9,X18,X16] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) <=> ~$spl544),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl544])])).
fof(f9173,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2))))))))))))))) ) | $spl546),
  inference(cnf_transformation,[],[f9173_D])).
fof(f9173_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2))))))))))))))) ) <=> ~$spl546),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl546])])).
fof(f9141,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X18,X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2)))))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | ($spl0 | $spl4)),
  inference(resolution,[],[f1468,f532])).
fof(f9076,plain,(
  ( ! [X14,X15,X13] : (s('type.num.num',X13) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X14))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X14))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X15)))))) | s('type.num.num',X15) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))) ) | $spl540),
  inference(cnf_transformation,[],[f9076_D])).
fof(f9076_D,plain,(
  ( ! [X14,X15,X13] : (s('type.num.num',X13) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X14))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X14))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X15)))))) | s('type.num.num',X15) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))) ) <=> ~$spl540),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl540])])).
fof(f9077,plain,(
  ( ! [X12] : (s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X12),s('type.list.list'(sK0),X12))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12)))) ) | $spl542),
  inference(cnf_transformation,[],[f9077_D])).
fof(f9077_D,plain,(
  ( ! [X12] : (s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X12),s('type.list.list'(sK0),X12))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12)))) ) <=> ~$spl542),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl542])])).
fof(f9067,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X12),s('type.list.list'(sK0),X12))) | s('type.num.num',X13) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X14))) | s('type.num.num',X15) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X15)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X14))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12)))) ) | $spl284),
  inference(superposition,[],[f4493,f113])).
fof(f4493,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),X1))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl284),
  inference(superposition,[],[f4490,f113])).
fof(f4490,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),X1))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))))) ) | $spl284),
  inference(trivial_inequality_removal,[],[f4488])).
fof(f4488,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),X1)))) ) | $spl284),
  inference(superposition,[],[f3284,f114])).
fof(f9072,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X3)))))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl536),
  inference(cnf_transformation,[],[f9072_D])).
fof(f9072_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X3)))))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) <=> ~$spl536),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl536])])).
fof(f9064,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X3)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl284),
  inference(superposition,[],[f4493,f113])).
fof(f8935,plain,(
  ( ! [X12,X11] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X11),s('type.list.list'(sK0),sK2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X11,'type.list.list'(sK0))))))))) ) | $spl532),
  inference(cnf_transformation,[],[f8935_D])).
fof(f8935_D,plain,(
  ( ! [X12,X11] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X11),s('type.list.list'(sK0),sK2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X11,'type.list.list'(sK0))))))))) ) <=> ~$spl532),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl532])])).
fof(f8936,plain,(
  ( ! [X14,X13] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2)))))) ) | $spl534),
  inference(cnf_transformation,[],[f8936_D])).
fof(f8936_D,plain,(
  ( ! [X14,X13] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2)))))) ) <=> ~$spl534),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl534])])).
fof(f8934,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2))))) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X11),s('type.list.list'(sK0),sK2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X11,'type.list.list'(sK0)))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f8930,f130])).
fof(f8930,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X11),s('type.list.list'(sK0),sK2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X11,'type.list.list'(sK0)))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f1103,f130])).
fof(f1103,plain,(
  ( ! [X24,X23,X21,X25,X22] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X22),s('type.list.list'(sK0),X21)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X25))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK37(X21,X22,'type.list.list'(sK0)))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X25),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | s('type.list.list'(sK0),X21) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),sK2)))))) ) | $spl4),
  inference(superposition,[],[f186,f103])).
fof(f103,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,sK37(X2,X1,X0)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | (s(X0,X2) = s(X0,sK37(X2,X1,X0)) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK37(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK37])],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2] : ((! [X3] : (s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f50])).
fof(f50,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6] : ! [X34,X36] : (? [X7] : (s(X6,X7) = s(X6,X36) & p(s(bool,happ(s(fun(X6,bool),X34),s(X6,X7))))) <=> p(s(bool,happ(s(fun(X6,bool),X34),s(X6,X36)))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.bool.UNWIND_THM2')).
fof(f186,plain,(
  ( ! [X6,X8,X7,X5] : (s('type.list.list'(sK0),X5) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X8))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X5)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f8545,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) | $spl530),
  inference(cnf_transformation,[],[f8545_D])).
fof(f8545_D,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) <=> ~$spl530),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl530])])).
fof(f8781,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))) ) | $spl234),
  inference(duplicate_literal_removal,[],[f8773])).
fof(f8773,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl234),
  inference(superposition,[],[f2511,f113])).
fof(f8543,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl242),
  inference(trivial_inequality_removal,[],[f8539])).
fof(f8539,plain,(
  ( ! [X6,X7] : (s('type.list.list'(sK0),X6) != s('type.list.list'(sK0),X6) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl242),
  inference(superposition,[],[f2516,f113])).
fof(f8508,plain,(
  ( ! [X11] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X11),s('type.list.list'(sK0),sK2))))) ) | $spl526),
  inference(cnf_transformation,[],[f8508_D])).
fof(f8508_D,plain,(
  ( ! [X11] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X11),s('type.list.list'(sK0),sK2))))) ) <=> ~$spl526),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl526])])).
fof(f8509,plain,(
  ( ! [X14,X12,X13] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))) | s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X13,X14,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK39(X13,X14,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),sK0)))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X12)) ) | $spl528),
  inference(cnf_transformation,[],[f8509_D])).
fof(f8509_D,plain,(
  ( ! [X14,X12,X13] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))) | s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X13,X14,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK39(X13,X14,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),sK0)))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X12)) ) <=> ~$spl528),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl528])])).
fof(f8507,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X11),s('type.list.list'(sK0),sK2)))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X12) | s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X13,X14,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK39(X13,X14,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),sK0))))) ) | ($spl4 | $spl102)),
  inference(forward_demodulation,[],[f8503,f130])).
fof(f8503,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X11),s('type.list.list'(sK0),sK2)))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X12) | s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X13,X14,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK39(X13,X14,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),sK0)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) ) | ($spl4 | $spl102)),
  inference(superposition,[],[f863,f130])).
fof(f863,plain,(
  ( ! [X14,X12,X15,X13,X16] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X15),s('type.list.list'(sK0),X14)))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X16) | s('type.list.list'(sK0),X16) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X12,X13,X14,sK0)),s('type.list.list'(sK0),sK39(X12,X13,X14,sK0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X14))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12)))) ) | $spl102),
  inference(superposition,[],[f791,f111])).
fof(f791,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X1),s('type.list.list'(sK0),X2)))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),X2)) ) | $spl102),
  inference(resolution,[],[f787,f102])).
fof(f102,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | s(X0,X2) != s(X0,X4)) )),
  inference(cnf_transformation,[],[f82])).
fof(f787,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X0),s('type.list.list'(sK0),X1)))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X1)) ) | $spl102),
  inference(resolution,[],[f785,f102])).
fof(f8097,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) | $spl524),
  inference(cnf_transformation,[],[f8097_D])).
fof(f8097_D,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) <=> ~$spl524),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl524])])).
fof(f8338,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))) ) | $spl224),
  inference(duplicate_literal_removal,[],[f8330])).
fof(f8330,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl224),
  inference(superposition,[],[f2062,f113])).
fof(f8095,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl232),
  inference(trivial_inequality_removal,[],[f8091])).
fof(f8091,plain,(
  ( ! [X6,X7] : (s('type.list.list'(sK0),X6) != s('type.list.list'(sK0),X6) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl232),
  inference(superposition,[],[f2067,f113])).
fof(f7972,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | $spl521),
  inference(cnf_transformation,[],[f7972_D])).
fof(f7972_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) <=> ~$spl521),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl521])])).
fof(f7973,plain,(
  ( ! [X87,X85,X86] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X85),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X86),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X87),s('type.list.list'(sK0),sK2))))))))))))) ) | $spl522),
  inference(cnf_transformation,[],[f7973_D])).
fof(f7973_D,plain,(
  ( ! [X87,X85,X86] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X85),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X86),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X87),s('type.list.list'(sK0),sK2))))))))))))) ) <=> ~$spl522),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl522])])).
fof(f7970,plain,(
  ( ! [X87,X85,X86] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X85),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X86),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X87),s('type.list.list'(sK0),sK2)))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f7969,f125])).
fof(f7969,plain,(
  ( ! [X87,X85,X86] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X85),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X86),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X87),s('type.list.list'(sK0),sK2)))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f7934,f90])).
fof(f7934,plain,(
  ( ! [X87,X85,X86] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X85),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X86),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X87),s('type.list.list'(sK0),sK2))))))))))))) ) | $spl4),
  inference(superposition,[],[f1275,f125])).
fof(f1275,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X0))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2))))))))))))) ) | $spl4),
  inference(equality_resolution,[],[f187])).
fof(f187,plain,(
  ( ! [X12,X10,X13,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),sK2))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f7952,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | $spl513),
  inference(cnf_transformation,[],[f7952_D])).
fof(f7952_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) <=> ~$spl513),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl513])])).
fof(f7953,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2))))))))))))) ) | $spl514),
  inference(cnf_transformation,[],[f7953_D])).
fof(f7953_D,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2))))))))))))) ) <=> ~$spl514),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl514])])).
fof(f7965,plain,(
  ( ! [X70,X71,X69] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),sK2)))))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f7964,f122])).
fof(f7964,plain,(
  ( ! [X70,X71,X69] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),sK2)))))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f7963,f90])).
fof(f7963,plain,(
  ( ! [X70,X71,X69] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),sK2)))))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f7962,f118])).
fof(f7962,plain,(
  ( ! [X70,X68,X71,X69] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),sK2))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f7961,f107])).
fof(f7961,plain,(
  ( ! [X70,X68,X71,X69] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),sK2))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f7930,f122])).
fof(f7930,plain,(
  ( ! [X70,X68,X71,X69] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),sK2))))))))))))) ) | $spl4),
  inference(superposition,[],[f1275,f118])).
fof(f7956,plain,(
  ( ! [X30,X33,X31,X34,X32] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),sK2)))))))))))) | s('type.list.list'(X30),'const.list.NIL_0') != s('type.list.list'(X30),X31)) ) | $spl516),
  inference(cnf_transformation,[],[f7956_D])).
fof(f7956_D,plain,(
  ( ! [X30,X33,X31,X34,X32] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),sK2)))))))))))) | s('type.list.list'(X30),'const.list.NIL_0') != s('type.list.list'(X30),X31)) ) <=> ~$spl516),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl516])])).
fof(f7958,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | $spl519),
  inference(cnf_transformation,[],[f7958_D])).
fof(f7958_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) <=> ~$spl519),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl519])])).
fof(f7924,plain,(
  ( ! [X30,X33,X31,X34,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),sK2)))))))))))) | s('type.list.list'(X30),'const.list.NIL_0') != s('type.list.list'(X30),X31)) ) | $spl4),
  inference(superposition,[],[f1275,f114])).
fof(f7950,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2)))))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f7949,f122])).
fof(f7949,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2)))))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f7948,f90])).
fof(f7948,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f7918,f107])).
fof(f7918,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2))))))))))))) ) | $spl4),
  inference(superposition,[],[f1275,f122])).
fof(f7946,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X17,X7,X5,X3,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | $spl508),
  inference(cnf_transformation,[],[f7946_D])).
fof(f7946_D,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X17,X7,X5,X3,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) <=> ~$spl508),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl508])])).
fof(f7947,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2))))))))))))) ) | $spl510),
  inference(cnf_transformation,[],[f7947_D])).
fof(f7947_D,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2))))))))))))) ) <=> ~$spl510),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl510])])).
fof(f7916,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2)))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | ($spl0 | $spl4)),
  inference(resolution,[],[f1275,f532])).
fof(f7769,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))))) | s('type.list.list'(X30),'const.list.NIL_0') != s('type.list.list'(X30),X31) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X33))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31)))))),X32,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X32),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))))))))) ) | $spl504),
  inference(cnf_transformation,[],[f7769_D])).
fof(f7769_D,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))))) | s('type.list.list'(X30),'const.list.NIL_0') != s('type.list.list'(X30),X31) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X33))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31)))))),X32,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X32),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))))))))) ) <=> ~$spl504),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl504])])).
fof(f7771,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))) | $spl507),
  inference(cnf_transformation,[],[f7771_D])).
fof(f7771_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl507),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl507])])).
fof(f7745,plain,(
  ( ! [X30,X33,X31,X34,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X32),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X33))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31)))))),X32,'type.num.num')))) | s('type.list.list'(X30),'const.list.NIL_0') != s('type.list.list'(X30),X31)) ) | $spl11),
  inference(superposition,[],[f1814,f114])).
fof(f1814,plain,(
  ( ! [X90,X88,X91,X89] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X88)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X88))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X91),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X88)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X89))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X90),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88)))),X91,'type.num.num'))))) ) | $spl11),
  inference(forward_demodulation,[],[f1813,f124])).
fof(f124,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X29] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.numeral.numeral_suc|split|1')).
fof(f1813,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X88))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X88)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X89))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X90),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88)))),X91,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X91),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88))))))))) ) | $spl11),
  inference(forward_demodulation,[],[f1778,f124])).
fof(f1778,plain,(
  ( ! [X90,X88,X91,X89] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X88)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X89))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X90),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88)))),X91,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X91),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88))))))))) ) | $spl11),
  inference(superposition,[],[f1759,f124])).
fof(f1759,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',sK37(X0,X1,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',X0))))) ) | $spl11),
  inference(duplicate_literal_removal,[],[f1758])).
fof(f1758,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',sK37(X0,X1,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',X0)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',X0))))) ) | $spl11),
  inference(superposition,[],[f609,f103])).
fof(f609,plain,(
  ( ! [X80,X83,X81,X82] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',sK37(X80,X81,'type.num.num')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',X80)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X82))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X83),s('type.num.num',sK37(X80,X81,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X81),s('type.num.num',X80))))) ) | $spl11),
  inference(superposition,[],[f586,f103])).
fof(f586,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) | $spl11),
  inference(duplicate_literal_removal,[],[f582])).
fof(f582,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) | $spl11),
  inference(superposition,[],[f576,f110])).
fof(f576,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK39(X6,X7,X8,sK0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))) ) | $spl11),
  inference(superposition,[],[f562,f110])).
fof(f7723,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X11),s('type.list.list'(sK0),sK2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X13))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X11,'type.list.list'(sK0))),s('type.list.list'(sK0),X13)))) ) | $spl500),
  inference(cnf_transformation,[],[f7723_D])).
fof(f7723_D,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X11),s('type.list.list'(sK0),sK2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X13))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X11,'type.list.list'(sK0))),s('type.list.list'(sK0),X13)))) ) <=> ~$spl500),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl500])])).
fof(f7725,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl503),
  inference(cnf_transformation,[],[f7725_D])).
fof(f7725_D,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl503),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl503])])).
fof(f7722,plain,(
  ( ! [X12,X13,X11] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X11),s('type.list.list'(sK0),sK2)))) | s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X11,'type.list.list'(sK0))),s('type.list.list'(sK0),X13))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X13))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f7718,f130])).
fof(f7718,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X11),s('type.list.list'(sK0),sK2)))) | s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X11,'type.list.list'(sK0))),s('type.list.list'(sK0),X13))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X13))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) ) | ($spl0 | $spl4)),
  inference(superposition,[],[f939,f130])).
fof(f939,plain,(
  ( ! [X24,X23,X21,X25,X22] : (~p(s(bool,happ(s(fun('type.list.list'(X21),bool),X23),s('type.list.list'(X21),X22)))) | s('type.list.list'(X21),X24) != s('type.list.list'(X21),'const.list.APPEND_2'(s('type.list.list'(X21),sK37(X22,X23,'type.list.list'(X21))),s('type.list.list'(X21),X25))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X25))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X24))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X22)))) ) | $spl0),
  inference(superposition,[],[f535,f103])).
fof(f535,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl0),
  inference(superposition,[],[f126,f112])).
fof(f7671,plain,(
  ( ! [X10,X9] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X9),s('type.list.list'(sK0),sK2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X9,'type.list.list'(sK0))))))))) ) | $spl496),
  inference(cnf_transformation,[],[f7671_D])).
fof(f7671_D,plain,(
  ( ! [X10,X9] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X9),s('type.list.list'(sK0),sK2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X9,'type.list.list'(sK0))))))))) ) <=> ~$spl496),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl496])])).
fof(f7672,plain,(
  ( ! [X11] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK2)))) ) | $spl498),
  inference(cnf_transformation,[],[f7672_D])).
fof(f7672_D,plain,(
  ( ! [X11] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK2)))) ) <=> ~$spl498),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl498])])).
fof(f7670,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK2))) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X9),s('type.list.list'(sK0),sK2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X9,'type.list.list'(sK0)))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f7666,f130])).
fof(f7666,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X9),s('type.list.list'(sK0),sK2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X9,'type.list.list'(sK0)))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f879,f130])).
fof(f879,plain,(
  ( ! [X19,X17,X18,X16] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X17),s('type.list.list'(sK0),X16)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X19))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK37(X16,X17,'type.list.list'(sK0)))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | s('type.list.list'(sK0),X16) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),sK2)))) ) | $spl4),
  inference(superposition,[],[f185,f103])).
fof(f185,plain,(
  ( ! [X4,X2,X3] : (s('type.list.list'(sK0),X2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f7537,plain,(
  ( ! [X53] : (~p(s(bool,happ(s(fun('type.num.num',bool),X53),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X53,'type.num.num')))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl492),
  inference(cnf_transformation,[],[f7537_D])).
fof(f7537_D,plain,(
  ( ! [X53] : (~p(s(bool,happ(s(fun('type.num.num',bool),X53),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X53,'type.num.num')))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) <=> ~$spl492),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl492])])).
fof(f7539,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl495),
  inference(cnf_transformation,[],[f7539_D])).
fof(f7539_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) <=> ~$spl495),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl495])])).
fof(f7536,plain,(
  ( ! [X53] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X53),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X53,'type.num.num')))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(forward_demodulation,[],[f7518,f107])).
fof(f7518,plain,(
  ( ! [X53] : (~p(s(bool,happ(s(fun('type.num.num',bool),X53),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X53,'type.num.num')))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) ) | $spl4),
  inference(superposition,[],[f495,f125])).
fof(f495,plain,(
  ( ! [X41,X40] : (~p(s(bool,happ(s(fun('type.num.num',bool),X41),s('type.num.num',X40)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',sK37(X40,X41,'type.num.num')))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X40),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) ) | $spl4),
  inference(superposition,[],[f470,f103])).
fof(f470,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X0))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(equality_resolution,[],[f184])).
fof(f184,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f7439,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK39(X3,X4,X5,X0)),s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.num.num',sK1) != s('type.num.num',X3)) ) | $spl488),
  inference(cnf_transformation,[],[f7439_D])).
fof(f7439_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK39(X3,X4,X5,X0)),s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.num.num',sK1) != s('type.num.num',X3)) ) <=> ~$spl488),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl488])])).
fof(f7441,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl491),
  inference(cnf_transformation,[],[f7441_D])).
fof(f7441_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl491),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl491])])).
fof(f7434,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK39(X3,X4,X5,X0)),s('type.list.list'(X0),X1))) | s('type.num.num',sK1) != s('type.num.num',X3) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) ) | $spl0),
  inference(superposition,[],[f942,f114])).
fof(f942,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK39(X13,X14,X15,X12)),s('type.list.list'(X12),X17))) | s('type.num.num',sK1) != s('type.num.num',X13) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) ) | $spl0),
  inference(superposition,[],[f535,f110])).
fof(f6998,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) | $spl486),
  inference(cnf_transformation,[],[f6998_D])).
fof(f6998_D,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) <=> ~$spl486),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl486])])).
fof(f7205,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) ) | $spl136),
  inference(duplicate_literal_removal,[],[f7197])).
fof(f7197,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl136),
  inference(superposition,[],[f1469,f113])).
fof(f6996,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl144),
  inference(trivial_inequality_removal,[],[f6992])).
fof(f6992,plain,(
  ( ! [X6,X7] : (s('type.list.list'(sK0),X6) != s('type.list.list'(sK0),X6) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl144),
  inference(superposition,[],[f1474,f113])).
fof(f6071,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | $spl462),
  inference(cnf_transformation,[],[f6071_D])).
fof(f6071_D,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) <=> ~$spl462),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl462])])).
fof(f5019,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | $spl440),
  inference(cnf_transformation,[],[f5019_D])).
fof(f5019_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) <=> ~$spl440),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl440])])).
fof(f6832,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | ($spl0 | $spl124)),
  inference(resolution,[],[f5509,f532])).
fof(f5509,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X0))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) | $spl124),
  inference(equality_resolution,[],[f1115])).
fof(f6390,plain,(
  ( ! [X17,X16] : (s('type.list.list'(sK0),X16) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),X16)))) ) | $spl480),
  inference(cnf_transformation,[],[f6390_D])).
fof(f6390_D,plain,(
  ( ! [X17,X16] : (s('type.list.list'(sK0),X16) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),X16)))) ) <=> ~$spl480),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl480])])).
fof(f6425,plain,(
  ( ! [X14,X15,X13] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),sK38(X13,X14,X15,sK0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X14)) ) | $spl484),
  inference(cnf_transformation,[],[f6425_D])).
fof(f6425_D,plain,(
  ( ! [X14,X15,X13] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),sK38(X13,X14,X15,sK0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X14)) ) <=> ~$spl484),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl484])])).
fof(f6420,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),sK38(X13,X14,X15,sK0)) | s('type.list.list'(sK0),X16) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),X16))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X14) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) ) | ($spl4 | $spl168)),
  inference(superposition,[],[f3902,f130])).
fof(f6391,plain,(
  ( ! [X14,X15,X13] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),sK39(X13,X14,X15,sK0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X13)) ) | $spl482),
  inference(cnf_transformation,[],[f6391_D])).
fof(f6391_D,plain,(
  ( ! [X14,X15,X13] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),sK39(X13,X14,X15,sK0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X13)) ) <=> ~$spl482),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl482])])).
fof(f6385,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),sK39(X13,X14,X15,sK0)) | s('type.list.list'(sK0),X16) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),X16))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X13) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) ) | ($spl4 | $spl168)),
  inference(superposition,[],[f3901,f130])).
fof(f6218,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) | $spl478),
  inference(cnf_transformation,[],[f6218_D])).
fof(f6218_D,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) <=> ~$spl478),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl478])])).
fof(f6360,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))) ) | $spl126),
  inference(duplicate_literal_removal,[],[f6352])).
fof(f6352,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl126),
  inference(superposition,[],[f1276,f113])).
fof(f6216,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl134),
  inference(trivial_inequality_removal,[],[f6212])).
fof(f6212,plain,(
  ( ! [X6,X7] : (s('type.list.list'(sK0),X6) != s('type.list.list'(sK0),X6) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl134),
  inference(superposition,[],[f1281,f113])).
fof(f6097,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | $spl475),
  inference(cnf_transformation,[],[f6097_D])).
fof(f6097_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) <=> ~$spl475),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl475])])).
fof(f6098,plain,(
  ( ! [X70,X69] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),sK2))))))))))) ) | $spl476),
  inference(cnf_transformation,[],[f6098_D])).
fof(f6098_D,plain,(
  ( ! [X70,X69] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),sK2))))))))))) ) <=> ~$spl476),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl476])])).
fof(f6095,plain,(
  ( ! [X70,X69] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),sK2)))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f6094,f125])).
fof(f6094,plain,(
  ( ! [X70,X69] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),sK2)))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f6060,f90])).
fof(f6060,plain,(
  ( ! [X70,X69] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),sK2))))))))))) ) | $spl4),
  inference(superposition,[],[f1109,f125])).
fof(f1109,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X0))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2))))))))))) ) | $spl4),
  inference(equality_resolution,[],[f186])).
fof(f6077,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | $spl467),
  inference(cnf_transformation,[],[f6077_D])).
fof(f6077_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) <=> ~$spl467),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl467])])).
fof(f6078,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2))))))))))) ) | $spl468),
  inference(cnf_transformation,[],[f6078_D])).
fof(f6078_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2))))))))))) ) <=> ~$spl468),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl468])])).
fof(f6090,plain,(
  ( ! [X57,X58] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),sK2)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f6089,f122])).
fof(f6089,plain,(
  ( ! [X57,X58] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),sK2)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f6088,f90])).
fof(f6088,plain,(
  ( ! [X57,X58] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),sK2)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f6087,f118])).
fof(f6087,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X56),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),sK2))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f6086,f107])).
fof(f6086,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X56),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),sK2))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f6056,f122])).
fof(f6056,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X56),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),sK2))))))))))) ) | $spl4),
  inference(superposition,[],[f1109,f118])).
fof(f6081,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),sK2)))))))))) | s('type.list.list'(X24),'const.list.NIL_0') != s('type.list.list'(X24),X25)) ) | $spl470),
  inference(cnf_transformation,[],[f6081_D])).
fof(f6081_D,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),sK2)))))))))) | s('type.list.list'(X24),'const.list.NIL_0') != s('type.list.list'(X24),X25)) ) <=> ~$spl470),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl470])])).
fof(f6083,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | $spl473),
  inference(cnf_transformation,[],[f6083_D])).
fof(f6083_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) <=> ~$spl473),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl473])])).
fof(f6050,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),sK2)))))))))) | s('type.list.list'(X24),'const.list.NIL_0') != s('type.list.list'(X24),X25)) ) | $spl4),
  inference(superposition,[],[f1109,f114])).
fof(f6075,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f6074,f122])).
fof(f6074,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f6073,f90])).
fof(f6073,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f6044,f107])).
fof(f6044,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2))))))))))) ) | $spl4),
  inference(superposition,[],[f1109,f122])).
fof(f6072,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2))))))))))) ) | $spl464),
  inference(cnf_transformation,[],[f6072_D])).
fof(f6072_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2))))))))))) ) <=> ~$spl464),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl464])])).
fof(f6042,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2)))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | ($spl0 | $spl4)),
  inference(resolution,[],[f1109,f532])).
fof(f3597,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X17,X29,X27,X25,X15,X22,X20,X18,X16] : (s('type.list.list'(sK0),sK3) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | $spl304),
  inference(cnf_transformation,[],[f3597_D])).
fof(f3597_D,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X17,X29,X27,X25,X15,X22,X20,X18,X16] : (s('type.list.list'(sK0),sK3) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) <=> ~$spl304),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl304])])).
fof(f3596,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl302),
  inference(cnf_transformation,[],[f3596_D])).
fof(f3596_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl302])])).
fof(f5852,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK3) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f5801,f90])).
fof(f5801,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK3) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | ($spl0 | $spl4)),
  inference(resolution,[],[f477,f532])).
fof(f477,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(superposition,[],[f470,f90])).
fof(f5512,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) | $spl454),
  inference(cnf_transformation,[],[f5512_D])).
fof(f5512_D,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) <=> ~$spl454),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl454])])).
fof(f5699,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) ) | $spl116),
  inference(duplicate_literal_removal,[],[f5691])).
fof(f5691,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl116),
  inference(superposition,[],[f1110,f113])).
fof(f5549,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))) | $spl457),
  inference(cnf_transformation,[],[f5549_D])).
fof(f5549_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))) <=> ~$spl457),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl457])])).
fof(f5550,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) ) | $spl458),
  inference(cnf_transformation,[],[f5550_D])).
fof(f5550_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) ) <=> ~$spl458),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl458])])).
fof(f5552,plain,(
  s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))) | $spl461),
  inference(cnf_transformation,[],[f5552_D])).
fof(f5552_D,plain,(
  s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))) <=> ~$spl461),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl461])])).
fof(f5542,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) ) | ($spl4 | $spl168)),
  inference(superposition,[],[f5534,f130])).
fof(f5534,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),X2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),X2))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X2)) ) | $spl168),
  inference(duplicate_literal_removal,[],[f5531])).
fof(f5531,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X2) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))) | s('type.list.list'(sK0),X2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),X2))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) | $spl168),
  inference(superposition,[],[f5527,f111])).
fof(f5527,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X0,X1,X2,sK0)),s('type.list.list'(sK0),sK39(X0,X1,X2,sK0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))) | s('type.list.list'(sK0),X2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),X2)))) ) | $spl168),
  inference(trivial_inequality_removal,[],[f5525])).
fof(f5525,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),X2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),X2))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X0,X1,X2,sK0)),s('type.list.list'(sK0),sK39(X0,X1,X2,sK0))))) ) | $spl168),
  inference(superposition,[],[f3441,f114])).
fof(f3441,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK38(X8,X9,X10,sK0)),s('type.list.list'(sK0),sK39(X8,X9,X10,sK0)))))) | s('type.list.list'(sK0),X10) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),X10))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8)))) ) | $spl168),
  inference(superposition,[],[f3384,f111])).
fof(f5510,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl124),
  inference(trivial_inequality_removal,[],[f5506])).
fof(f5506,plain,(
  ( ! [X6,X7] : (s('type.list.list'(sK0),X6) != s('type.list.list'(sK0),X6) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl124),
  inference(superposition,[],[f1115,f113])).
fof(f5392,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl450),
  inference(cnf_transformation,[],[f5392_D])).
fof(f5392_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) <=> ~$spl450),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl450])])).
fof(f5394,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) | $spl453),
  inference(cnf_transformation,[],[f5394_D])).
fof(f5394_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) <=> ~$spl453),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl453])])).
fof(f5387,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) ) | $spl23),
  inference(superposition,[],[f337,f114])).
fof(f337,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) ) | $spl23),
  inference(superposition,[],[f157,f112])).
fof(f5213,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl447),
  inference(cnf_transformation,[],[f5213_D])).
fof(f5213_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) <=> ~$spl447),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl447])])).
fof(f5215,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | $spl448),
  inference(cnf_transformation,[],[f5215_D])).
fof(f5215_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) <=> ~$spl448),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl448])])).
fof(f5211,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl110),
  inference(forward_demodulation,[],[f5210,f124])).
fof(f5210,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl110),
  inference(forward_demodulation,[],[f5209,f125])).
fof(f5209,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl110),
  inference(forward_demodulation,[],[f5183,f90])).
fof(f5183,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | $spl110),
  inference(superposition,[],[f5017,f125])).
fof(f5017,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) | $spl110),
  inference(superposition,[],[f4986,f107])).
fof(f4986,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X0))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) | $spl110),
  inference(equality_resolution,[],[f888])).
fof(f5196,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl443),
  inference(cnf_transformation,[],[f5196_D])).
fof(f5196_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) <=> ~$spl443),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl443])])).
fof(f5198,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | $spl444),
  inference(cnf_transformation,[],[f5198_D])).
fof(f5198_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) <=> ~$spl444),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl444])])).
fof(f5207,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl110),
  inference(forward_demodulation,[],[f5206,f124])).
fof(f5206,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl110),
  inference(forward_demodulation,[],[f5205,f120])).
fof(f120,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X29] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.numeral.numeral_distrib|split|14')).
fof(f5205,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl110),
  inference(forward_demodulation,[],[f5204,f90])).
fof(f5204,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl110),
  inference(forward_demodulation,[],[f5203,f118])).
fof(f5203,plain,(
  ( ! [X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) | $spl110),
  inference(forward_demodulation,[],[f5179,f122])).
fof(f5179,plain,(
  ( ! [X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) | $spl110),
  inference(superposition,[],[f5017,f118])).
fof(f5194,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl110),
  inference(forward_demodulation,[],[f5193,f124])).
fof(f5193,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl110),
  inference(forward_demodulation,[],[f5192,f120])).
fof(f5192,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl110),
  inference(forward_demodulation,[],[f5167,f90])).
fof(f5167,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | $spl110),
  inference(superposition,[],[f5017,f122])).
fof(f4855,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | $spl422),
  inference(cnf_transformation,[],[f4855_D])).
fof(f4855_D,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) <=> ~$spl422),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl422])])).
fof(f4990,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | ($spl0 | $spl110)),
  inference(resolution,[],[f4986,f532])).
fof(f4989,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) | $spl438),
  inference(cnf_transformation,[],[f4989_D])).
fof(f4989_D,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))))))) ) <=> ~$spl438),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl438])])).
fof(f4987,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl110),
  inference(trivial_inequality_removal,[],[f4983])).
fof(f4983,plain,(
  ( ! [X6,X7] : (s('type.list.list'(sK0),X6) != s('type.list.list'(sK0),X6) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))) ) | $spl110),
  inference(superposition,[],[f888,f113])).
fof(f4881,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl435),
  inference(cnf_transformation,[],[f4881_D])).
fof(f4881_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) <=> ~$spl435),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl435])])).
fof(f4882,plain,(
  ( ! [X53] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),sK2))))))))) ) | $spl436),
  inference(cnf_transformation,[],[f4882_D])).
fof(f4882_D,plain,(
  ( ! [X53] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),sK2))))))))) ) <=> ~$spl436),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl436])])).
fof(f4879,plain,(
  ( ! [X53] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),sK2)))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f4878,f125])).
fof(f4878,plain,(
  ( ! [X53] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),sK2)))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f4845,f90])).
fof(f4845,plain,(
  ( ! [X53] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),sK2))))))))) ) | $spl4),
  inference(superposition,[],[f883,f125])).
fof(f883,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X0))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2))))))))) ) | $spl4),
  inference(equality_resolution,[],[f185])).
fof(f4861,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl427),
  inference(cnf_transformation,[],[f4861_D])).
fof(f4861_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) <=> ~$spl427),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl427])])).
fof(f4862,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK2))))))))) ) | $spl428),
  inference(cnf_transformation,[],[f4862_D])).
fof(f4862_D,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK2))))))))) ) <=> ~$spl428),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl428])])).
fof(f4874,plain,(
  ( ! [X45] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),sK2)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f4873,f122])).
fof(f4873,plain,(
  ( ! [X45] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),sK2)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f4872,f90])).
fof(f4872,plain,(
  ( ! [X45] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),sK2)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f4871,f118])).
fof(f4871,plain,(
  ( ! [X45,X44] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X44),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),sK2))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f4870,f107])).
fof(f4870,plain,(
  ( ! [X45,X44] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X44),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),sK2))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f4841,f122])).
fof(f4841,plain,(
  ( ! [X45,X44] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X44),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),sK2))))))))) ) | $spl4),
  inference(superposition,[],[f883,f118])).
fof(f4865,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),sK2)))))))) | s('type.list.list'(X18),'const.list.NIL_0') != s('type.list.list'(X18),X19)) ) | $spl430),
  inference(cnf_transformation,[],[f4865_D])).
fof(f4865_D,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),sK2)))))))) | s('type.list.list'(X18),'const.list.NIL_0') != s('type.list.list'(X18),X19)) ) <=> ~$spl430),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl430])])).
fof(f4867,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | $spl433),
  inference(cnf_transformation,[],[f4867_D])).
fof(f4867_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) <=> ~$spl433),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl433])])).
fof(f4835,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),sK2)))))))) | s('type.list.list'(X18),'const.list.NIL_0') != s('type.list.list'(X18),X19)) ) | $spl4),
  inference(superposition,[],[f883,f114])).
fof(f4859,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK2)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f4858,f122])).
fof(f4858,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK2)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f4857,f90])).
fof(f4857,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK2))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f4829,f107])).
fof(f4829,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK2))))))))) ) | $spl4),
  inference(superposition,[],[f883,f122])).
fof(f4856,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK2))))))))) ) | $spl424),
  inference(cnf_transformation,[],[f4856_D])).
fof(f4856_D,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK2))))))))) ) <=> ~$spl424),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl424])])).
fof(f4827,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK2)))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | ($spl0 | $spl4)),
  inference(resolution,[],[f883,f532])).
fof(f3594,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | $spl300),
  inference(cnf_transformation,[],[f3594_D])).
fof(f3594_D,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f4406,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)))))))))))))))))))))))))))))))) | $spl420),
  inference(cnf_transformation,[],[f4406_D])).
fof(f4406_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)))))))))))))))))))))))))))))))) <=> ~$spl420),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl420])])).
fof(f4376,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)),s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)))))))))))))))))))))))))))))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | ($spl0 | $spl4)),
  inference(resolution,[],[f299,f532])).
fof(f299,plain,(
  ( ! [X136] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X136))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0))))))))))))))))))))))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f200,f130])).
fof(f200,plain,(
  ( ! [X136] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X136))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0)),s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X136,sK0))))))))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f96,f130])).
fof(f4263,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | $spl416),
  inference(cnf_transformation,[],[f4263_D])).
fof(f4263_D,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) <=> ~$spl416),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl416])])).
fof(f4264,plain,(
  ( ! [X14,X15] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X14) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X14))))))) ) | $spl418),
  inference(cnf_transformation,[],[f4264_D])).
fof(f4264_D,plain,(
  ( ! [X14,X15] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X14) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X14))))))) ) <=> ~$spl418),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl418])])).
fof(f4251,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X14) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X14)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f198,f113])).
fof(f198,plain,(
  ( ! [X127,X125,X123,X121,X134,X132,X130,X128,X126,X124,X122,X120,X133,X131,X129,X119] : (s('type.list.list'(sK0),X119) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X120),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X121),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X122),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X123),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X124),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X125),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X126),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X127),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X128),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X129),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X130),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X131),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X132),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X133),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X134))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X119)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X134),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f4039,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))) ) | $spl394),
  inference(cnf_transformation,[],[f4039_D])).
fof(f4039_D,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))) ) <=> ~$spl394),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl394])])).
fof(f4262,plain,(
  ( ! [X14,X15,X13] : (s('type.list.list'(sK0),X13) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X13))))))) ) | $spl414),
  inference(cnf_transformation,[],[f4262_D])).
fof(f4262_D,plain,(
  ( ! [X14,X15,X13] : (s('type.list.list'(sK0),X13) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X13))))))) ) <=> ~$spl414),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl414])])).
fof(f4250,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),X13) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X13)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f198,f113])).
fof(f3970,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))) ) | $spl374),
  inference(cnf_transformation,[],[f3970_D])).
fof(f3970_D,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))) ) <=> ~$spl374),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl374])])).
fof(f4261,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12))))))) ) | $spl412),
  inference(cnf_transformation,[],[f4261_D])).
fof(f4261_D,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12))))))) ) <=> ~$spl412),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl412])])).
fof(f4249,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f198,f113])).
fof(f3868,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))) ) | $spl356),
  inference(cnf_transformation,[],[f3868_D])).
fof(f3868_D,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))) ) <=> ~$spl356),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl356])])).
fof(f4260,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.list.list'(sK0),X11) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X11))))))) ) | $spl410),
  inference(cnf_transformation,[],[f4260_D])).
fof(f4260_D,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.list.list'(sK0),X11) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X11))))))) ) <=> ~$spl410),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl410])])).
fof(f4248,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),X11) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X11)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f198,f113])).
fof(f3788,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),sK2)))))))))))))))))))))))) ) | $spl340),
  inference(cnf_transformation,[],[f3788_D])).
fof(f3788_D,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),sK2)))))))))))))))))))))))) ) <=> ~$spl340),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl340])])).
fof(f4259,plain,(
  ( ! [X14,X12,X10,X15,X13,X11] : (s('type.list.list'(sK0),X10) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10))))))) ) | $spl408),
  inference(cnf_transformation,[],[f4259_D])).
fof(f4259_D,plain,(
  ( ! [X14,X12,X10,X15,X13,X11] : (s('type.list.list'(sK0),X10) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10))))))) ) <=> ~$spl408),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl408])])).
fof(f4247,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),X10) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),sK2)))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f198,f113])).
fof(f3694,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),sK2)))))))))))))))))))))) ) | $spl326),
  inference(cnf_transformation,[],[f3694_D])).
fof(f3694_D,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),sK2)))))))))))))))))))))) ) <=> ~$spl326),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl326])])).
fof(f4258,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9))))))) ) | $spl406),
  inference(cnf_transformation,[],[f4258_D])).
fof(f4258_D,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9))))))) ) <=> ~$spl406),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl406])])).
fof(f4246,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),sK2)))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f198,f113])).
fof(f3513,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK2)))))))))))))))))))) ) | $spl294),
  inference(cnf_transformation,[],[f3513_D])).
fof(f3513_D,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK2)))))))))))))))))))) ) <=> ~$spl294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl294])])).
fof(f4257,plain,(
  ( ! [X14,X12,X10,X8,X15,X13,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))))))) ) | $spl404),
  inference(cnf_transformation,[],[f4257_D])).
fof(f4257_D,plain,(
  ( ! [X14,X12,X10,X8,X15,X13,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))))))) ) <=> ~$spl404),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl404])])).
fof(f4245,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK2)))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f198,f113])).
fof(f3033,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK2)))))))))))))))))) ) | $spl262),
  inference(cnf_transformation,[],[f3033_D])).
fof(f3033_D,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK2)))))))))))))))))) ) <=> ~$spl262),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl262])])).
fof(f4256,plain,(
  ( ! [X14,X12,X10,X8,X7,X15,X13,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) | $spl402),
  inference(cnf_transformation,[],[f4256_D])).
fof(f4256_D,plain,(
  ( ! [X14,X12,X10,X8,X7,X15,X13,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) <=> ~$spl402),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl402])])).
fof(f4244,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK2)))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f198,f113])).
fof(f4253,plain,(
  ( ! [X0,X15] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))) ) | $spl398),
  inference(cnf_transformation,[],[f4253_D])).
fof(f4253_D,plain,(
  ( ! [X0,X15] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))) ) <=> ~$spl398),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl398])])).
fof(f4254,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))) ) | $spl400),
  inference(cnf_transformation,[],[f4254_D])).
fof(f4254_D,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))) ) <=> ~$spl400),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl400])])).
fof(f4218,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f198,f113])).
fof(f4040,plain,(
  ( ! [X14,X13] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X13) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X13))))))) ) | $spl396),
  inference(cnf_transformation,[],[f4040_D])).
fof(f4040_D,plain,(
  ( ! [X14,X13] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X13) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X13))))))) ) <=> ~$spl396),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl396])])).
fof(f4028,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X13) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X13)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f197,f113])).
fof(f197,plain,(
  ( ! [X111,X109,X107,X105,X118,X116,X114,X112,X110,X108,X106,X104,X117,X115,X113] : (s('type.list.list'(sK0),X104) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X105),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X106),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X107),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X108),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X109),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X110),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X111),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X112),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X113),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X114),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X115),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X116),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X117),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X118))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X104)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X118),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f4038,plain,(
  ( ! [X14,X12,X13] : (s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12))))))) ) | $spl392),
  inference(cnf_transformation,[],[f4038_D])).
fof(f4038_D,plain,(
  ( ! [X14,X12,X13] : (s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12))))))) ) <=> ~$spl392),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl392])])).
fof(f4027,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),X12) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f197,f113])).
fof(f4037,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(sK0),X11) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X11))))))) ) | $spl390),
  inference(cnf_transformation,[],[f4037_D])).
fof(f4037_D,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(sK0),X11) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X11))))))) ) <=> ~$spl390),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl390])])).
fof(f4026,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),X11) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X11)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f197,f113])).
fof(f4036,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s('type.list.list'(sK0),X10) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10))))))) ) | $spl388),
  inference(cnf_transformation,[],[f4036_D])).
fof(f4036_D,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s('type.list.list'(sK0),X10) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10))))))) ) <=> ~$spl388),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl388])])).
fof(f4025,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),X10) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),sK2)))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f197,f113])).
fof(f4035,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9))))))) ) | $spl386),
  inference(cnf_transformation,[],[f4035_D])).
fof(f4035_D,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9))))))) ) <=> ~$spl386),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl386])])).
fof(f4024,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),sK2)))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f197,f113])).
fof(f4034,plain,(
  ( ! [X14,X12,X10,X8,X13,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))))))) ) | $spl384),
  inference(cnf_transformation,[],[f4034_D])).
fof(f4034_D,plain,(
  ( ! [X14,X12,X10,X8,X13,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))))))) ) <=> ~$spl384),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl384])])).
fof(f4023,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK2)))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f197,f113])).
fof(f4033,plain,(
  ( ! [X14,X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) | $spl382),
  inference(cnf_transformation,[],[f4033_D])).
fof(f4033_D,plain,(
  ( ! [X14,X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) <=> ~$spl382),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl382])])).
fof(f4022,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK2)))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f197,f113])).
fof(f4030,plain,(
  ( ! [X0,X14] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))) ) | $spl378),
  inference(cnf_transformation,[],[f4030_D])).
fof(f4030_D,plain,(
  ( ! [X0,X14] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))) ) <=> ~$spl378),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl378])])).
fof(f4031,plain,(
  ( ! [X6,X4,X2,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))) ) | $spl380),
  inference(cnf_transformation,[],[f4031_D])).
fof(f4031_D,plain,(
  ( ! [X6,X4,X2,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))) ) <=> ~$spl380),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl380])])).
fof(f3997,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X14))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f197,f113])).
fof(f3971,plain,(
  ( ! [X12,X13] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X12) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12))))))) ) | $spl376),
  inference(cnf_transformation,[],[f3971_D])).
fof(f3971_D,plain,(
  ( ! [X12,X13] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X12) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12))))))) ) <=> ~$spl376),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl376])])).
fof(f3960,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X12) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X12)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f196,f113])).
fof(f196,plain,(
  ( ! [X94,X92,X90,X103,X101,X99,X97,X95,X93,X91,X102,X100,X98,X96] : (s('type.list.list'(sK0),X90) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X91),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X92),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X93),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X94),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X95),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X96),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X97),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X98),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X99),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X100),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X101),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X102),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X103))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X90)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X103),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f3969,plain,(
  ( ! [X12,X13,X11] : (s('type.list.list'(sK0),X11) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X11))))))) ) | $spl372),
  inference(cnf_transformation,[],[f3969_D])).
fof(f3969_D,plain,(
  ( ! [X12,X13,X11] : (s('type.list.list'(sK0),X11) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X11))))))) ) <=> ~$spl372),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl372])])).
fof(f3959,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),X11) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X11)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f196,f113])).
fof(f3968,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.list.list'(sK0),X10) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10))))))) ) | $spl370),
  inference(cnf_transformation,[],[f3968_D])).
fof(f3968_D,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.list.list'(sK0),X10) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10))))))) ) <=> ~$spl370),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl370])])).
fof(f3958,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),X10) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),sK2)))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f196,f113])).
fof(f3967,plain,(
  ( ! [X12,X10,X13,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9))))))) ) | $spl368),
  inference(cnf_transformation,[],[f3967_D])).
fof(f3967_D,plain,(
  ( ! [X12,X10,X13,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9))))))) ) <=> ~$spl368),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl368])])).
fof(f3957,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),sK2)))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f196,f113])).
fof(f3966,plain,(
  ( ! [X12,X10,X8,X13,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))))))) ) | $spl366),
  inference(cnf_transformation,[],[f3966_D])).
fof(f3966_D,plain,(
  ( ! [X12,X10,X8,X13,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))))))) ) <=> ~$spl366),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl366])])).
fof(f3956,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK2)))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f196,f113])).
fof(f3965,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) | $spl364),
  inference(cnf_transformation,[],[f3965_D])).
fof(f3965_D,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) <=> ~$spl364),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl364])])).
fof(f3955,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK2)))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f196,f113])).
fof(f3962,plain,(
  ( ! [X0,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) ) | $spl360),
  inference(cnf_transformation,[],[f3962_D])).
fof(f3962_D,plain,(
  ( ! [X0,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) ) <=> ~$spl360),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl360])])).
fof(f3963,plain,(
  ( ! [X6,X4,X2,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))) ) | $spl362),
  inference(cnf_transformation,[],[f3963_D])).
fof(f3963_D,plain,(
  ( ! [X6,X4,X2,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))) ) <=> ~$spl362),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl362])])).
fof(f3931,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f196,f113])).
fof(f3869,plain,(
  ( ! [X12,X11] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X11) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X11))))))) ) | $spl358),
  inference(cnf_transformation,[],[f3869_D])).
fof(f3869_D,plain,(
  ( ! [X12,X11] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X11) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X11))))))) ) <=> ~$spl358),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl358])])).
fof(f3859,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X11) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X11)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f195,f113])).
fof(f195,plain,(
  ( ! [X80,X88,X78,X87,X85,X83,X81,X89,X79,X77,X86,X84,X82] : (s('type.list.list'(sK0),X77) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X78),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X79),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X80),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X81),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X82),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X83),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X84),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X85),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X86),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X87),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X88),s('type.list.list'(sK0),sK2))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X89))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X77)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X89),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f3867,plain,(
  ( ! [X12,X10,X11] : (s('type.list.list'(sK0),X10) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10))))))) ) | $spl354),
  inference(cnf_transformation,[],[f3867_D])).
fof(f3867_D,plain,(
  ( ! [X12,X10,X11] : (s('type.list.list'(sK0),X10) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10))))))) ) <=> ~$spl354),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl354])])).
fof(f3858,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),X10) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),sK2)))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f195,f113])).
fof(f3866,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9))))))) ) | $spl352),
  inference(cnf_transformation,[],[f3866_D])).
fof(f3866_D,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9))))))) ) <=> ~$spl352),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl352])])).
fof(f3857,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),sK2)))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f195,f113])).
fof(f3865,plain,(
  ( ! [X12,X10,X8,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))))))) ) | $spl350),
  inference(cnf_transformation,[],[f3865_D])).
fof(f3865_D,plain,(
  ( ! [X12,X10,X8,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))))))) ) <=> ~$spl350),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl350])])).
fof(f3856,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK2)))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f195,f113])).
fof(f3864,plain,(
  ( ! [X12,X10,X8,X7,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) | $spl348),
  inference(cnf_transformation,[],[f3864_D])).
fof(f3864_D,plain,(
  ( ! [X12,X10,X8,X7,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) <=> ~$spl348),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl348])])).
fof(f3855,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK2)))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f195,f113])).
fof(f3861,plain,(
  ( ! [X0,X12] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))) ) | $spl344),
  inference(cnf_transformation,[],[f3861_D])).
fof(f3861_D,plain,(
  ( ! [X0,X12] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))) ) <=> ~$spl344),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl344])])).
fof(f3862,plain,(
  ( ! [X6,X4,X2,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK2)))))))))))))))))))))))) ) | $spl346),
  inference(cnf_transformation,[],[f3862_D])).
fof(f3862_D,plain,(
  ( ! [X6,X4,X2,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK2)))))))))))))))))))))))) ) <=> ~$spl346),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl346])])).
fof(f3832,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),sK2))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f195,f113])).
fof(f3789,plain,(
  ( ! [X10,X11] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X10) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10))))))) ) | $spl342),
  inference(cnf_transformation,[],[f3789_D])).
fof(f3789_D,plain,(
  ( ! [X10,X11] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X10) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10))))))) ) <=> ~$spl342),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl342])])).
fof(f3780,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X10) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),sK2)))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f194,f113])).
fof(f194,plain,(
  ( ! [X70,X68,X66,X76,X74,X72,X71,X69,X67,X65,X75,X73] : (s('type.list.list'(sK0),X65) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X72),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X73),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X74),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X75),s('type.list.list'(sK0),sK2))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X76))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X65)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X76),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f3787,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9))))))) ) | $spl338),
  inference(cnf_transformation,[],[f3787_D])).
fof(f3787_D,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9))))))) ) <=> ~$spl338),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl338])])).
fof(f3779,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),X9) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),sK2)))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f194,f113])).
fof(f3786,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))))))) ) | $spl336),
  inference(cnf_transformation,[],[f3786_D])).
fof(f3786_D,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))))))) ) <=> ~$spl336),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl336])])).
fof(f3778,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK2)))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f194,f113])).
fof(f3785,plain,(
  ( ! [X10,X8,X7,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) | $spl334),
  inference(cnf_transformation,[],[f3785_D])).
fof(f3785_D,plain,(
  ( ! [X10,X8,X7,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) <=> ~$spl334),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl334])])).
fof(f3777,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK2)))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f194,f113])).
fof(f3782,plain,(
  ( ! [X0,X11] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))) ) | $spl330),
  inference(cnf_transformation,[],[f3782_D])).
fof(f3782_D,plain,(
  ( ! [X0,X11] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))) ) <=> ~$spl330),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl330])])).
fof(f3783,plain,(
  ( ! [X6,X4,X2,X10,X8,X7,X5,X3,X1,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK2)))))))))))))))))))))) ) | $spl332),
  inference(cnf_transformation,[],[f3783_D])).
fof(f3783_D,plain,(
  ( ! [X6,X4,X2,X10,X8,X7,X5,X3,X1,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK2)))))))))))))))))))))) ) <=> ~$spl332),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl332])])).
fof(f3755,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK2))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f194,f113])).
fof(f3695,plain,(
  ( ! [X10,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X9) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9))))))) ) | $spl328),
  inference(cnf_transformation,[],[f3695_D])).
fof(f3695_D,plain,(
  ( ! [X10,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X9) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9))))))) ) <=> ~$spl328),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl328])])).
fof(f3687,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X9) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X9)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),sK2)))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f193,f113])).
fof(f193,plain,(
  ( ! [X61,X59,X57,X64,X54,X62,X60,X58,X56,X55,X63] : (s('type.list.list'(sK0),X54) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),sK2))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X64))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X54)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f3693,plain,(
  ( ! [X10,X8,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))))))) ) | $spl324),
  inference(cnf_transformation,[],[f3693_D])).
fof(f3693_D,plain,(
  ( ! [X10,X8,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))))))) ) <=> ~$spl324),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl324])])).
fof(f3686,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.list.list'(sK0),X8) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.NIL_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK2)))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f193,f113])).
fof(f3692,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) | $spl322),
  inference(cnf_transformation,[],[f3692_D])).
fof(f3692_D,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) <=> ~$spl322),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl322])])).
fof(f3685,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.NIL_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK2)))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f193,f113])).
fof(f3689,plain,(
  ( ! [X0,X10] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))) ) | $spl318),
  inference(cnf_transformation,[],[f3689_D])).
fof(f3689_D,plain,(
  ( ! [X0,X10] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))) ) <=> ~$spl318),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl318])])).
fof(f3690,plain,(
  ( ! [X6,X4,X2,X8,X7,X5,X3,X1,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),sK2)))))))))))))))))))) ) | $spl320),
  inference(cnf_transformation,[],[f3690_D])).
fof(f3690_D,plain,(
  ( ! [X6,X4,X2,X8,X7,X5,X3,X1,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),sK2)))))))))))))))))))) ) <=> ~$spl320),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl320])])).
fof(f3664,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),sK2))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X10))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f193,f113])).
fof(f3604,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl314),
  inference(cnf_transformation,[],[f3604_D])).
fof(f3604_D,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) <=> ~$spl314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl314])])).
fof(f3606,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.num.|48|_0')))) | $spl316),
  inference(cnf_transformation,[],[f3606_D])).
fof(f3606_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.num.|48|_0')))) <=> ~$spl316),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl316])])).
fof(f3588,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl0),
  inference(superposition,[],[f532,f114])).
fof(f3602,plain,(
  ( ! [X61,X59,X57,X54,X52,X50,X62,X60,X58,X56,X55,X53,X51,X49,X63] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) | $spl310),
  inference(cnf_transformation,[],[f3602_D])).
fof(f3602_D,plain,(
  ( ! [X61,X59,X57,X54,X52,X50,X62,X60,X58,X56,X55,X53,X51,X49,X63] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))))))) ) <=> ~$spl310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl310])])).
fof(f3603,plain,(
  ( ! [X48] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) | $spl312),
  inference(cnf_transformation,[],[f3603_D])).
fof(f3603_D,plain,(
  ( ! [X48] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f3585,plain,(
  ( ! [X61,X59,X57,X54,X52,X50,X48,X62,X60,X58,X56,X55,X53,X51,X49,X63] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) | $spl0),
  inference(superposition,[],[f532,f113])).
fof(f3598,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl306),
  inference(cnf_transformation,[],[f3598_D])).
fof(f3598_D,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f3600,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | $spl308),
  inference(cnf_transformation,[],[f3600_D])).
fof(f3600_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) <=> ~$spl308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl308])])).
fof(f3582,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.list.list'(sK0),X0) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl0),
  inference(superposition,[],[f532,f113])).
fof(f3560,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X17,X29,X27,X25,X15,X22,X20,X18,X16] : (s('type.list.list'(sK0),sK3) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | ($spl0 | $spl4)),
  inference(resolution,[],[f532,f470])).
fof(f3593,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0))))))) | $spl298),
  inference(cnf_transformation,[],[f3593_D])).
fof(f3593_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0))))))) <=> ~$spl298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl298])])).
fof(f3559,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),sK0)))))))) ) | ($spl0 | $spl4)),
  inference(resolution,[],[f532,f199])).
fof(f199,plain,(
  ( ! [X135] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X135))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X135),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X135,sK0)))))))) ) | $spl4),
  inference(superposition,[],[f95,f130])).
fof(f3514,plain,(
  ( ! [X8,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X8) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X9))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))))))) ) | $spl296),
  inference(cnf_transformation,[],[f3514_D])).
fof(f3514_D,plain,(
  ( ! [X8,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X8) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X9))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8))))))) ) <=> ~$spl296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl296])])).
fof(f3507,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X8) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X9))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X8)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK2)))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f192,f113])).
fof(f192,plain,(
  ( ! [X47,X45,X52,X50,X48,X46,X44,X53,X51,X49] : (s('type.list.list'(sK0),X44) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),sK2))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X53))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X44)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X53),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f3512,plain,(
  ( ! [X8,X7,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X9))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) | $spl292),
  inference(cnf_transformation,[],[f3512_D])).
fof(f3512_D,plain,(
  ( ! [X8,X7,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X9))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) <=> ~$spl292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl292])])).
fof(f3506,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.list.list'(sK0),X7) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.NIL_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X9))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK2)))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f192,f113])).
fof(f3509,plain,(
  ( ! [X0,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X9))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl288),
  inference(cnf_transformation,[],[f3509_D])).
fof(f3509_D,plain,(
  ( ! [X0,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X9))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) <=> ~$spl288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl288])])).
fof(f3510,plain,(
  ( ! [X6,X4,X2,X8,X7,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),sK2)))))))))))))))))) ) | $spl290),
  inference(cnf_transformation,[],[f3510_D])).
fof(f3510_D,plain,(
  ( ! [X6,X4,X2,X8,X7,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),sK2)))))))))))))))))) ) <=> ~$spl290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl290])])).
fof(f3486,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),sK2))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X9))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f192,f113])).
fof(f3427,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1875,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl216),
  inference(cnf_transformation,[],[f1875_D])).
fof(f1875_D,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f3426,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1873,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl212),
  inference(cnf_transformation,[],[f1873_D])).
fof(f1873_D,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f3425,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1871,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl208),
  inference(cnf_transformation,[],[f1871_D])).
fof(f1871_D,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))) ) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f3424,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1869,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))) ) | $spl204),
  inference(cnf_transformation,[],[f1869_D])).
fof(f1869_D,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))) ) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f3423,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1867,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl200),
  inference(cnf_transformation,[],[f1867_D])).
fof(f1867_D,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f3422,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1865,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl196),
  inference(cnf_transformation,[],[f1865_D])).
fof(f1865_D,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f3421,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1863,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl192),
  inference(cnf_transformation,[],[f1863_D])).
fof(f1863_D,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f3420,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f3419,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1859,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))) ) | $spl184),
  inference(cnf_transformation,[],[f1859_D])).
fof(f1859_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))) ) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f3418,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f3417,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f3416,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f3373,plain,(
  $false | $spl286),
  inference(equality_resolution,[],[f3363])).
fof(f3363,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl286),
  inference(trivial_inequality_removal,[],[f3359])).
fof(f3359,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl286),
  inference(superposition,[],[f3352,f114])).
fof(f3351,plain,(
  ( ! [X61,X59,X57,X54,X52,X50,X48,X62,X60,X58,X56,X55,X53,X51,X49,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl92),
  inference(duplicate_literal_removal,[],[f3343])).
fof(f3343,plain,(
  ( ! [X61,X59,X57,X54,X52,X50,X48,X62,X60,X58,X56,X55,X53,X51,X49,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) | $spl92),
  inference(superposition,[],[f557,f113])).
fof(f3284,plain,(
  ( ! [X39,X21,X40,X22] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X21),s('type.list.list'(sK0),X22))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40)))))) | s('type.num.num',X39) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X21))) | s('type.num.num',X40) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X22)))) ) | $spl284),
  inference(cnf_transformation,[],[f3284_D])).
fof(f3284_D,plain,(
  ( ! [X39,X21,X40,X22] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X21),s('type.list.list'(sK0),X22))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40)))))) | s('type.num.num',X39) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X21))) | s('type.num.num',X40) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X22)))) ) <=> ~$spl284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl284])])).
fof(f3278,plain,(
  ( ! [X30,X28,X26,X24,X37,X35,X33,X39,X23,X21,X31,X29,X27,X25,X38,X36,X34,X32,X40,X22] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X23) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),X23))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40)))))) | s('type.num.num',X40) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X22))) | s('type.num.num',X39) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X21))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X21),s('type.list.list'(sK0),X22)))))) ) | $spl2),
  inference(superposition,[],[f553,f113])).
fof(f557,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),X0)))))))))))))))))))))))))))))))) ) | $spl92),
  inference(cnf_transformation,[],[f557_D])).
fof(f557_D,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),X0)))))))))))))))))))))))))))))))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f3260,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X19,X17,X7,X5,X3,X1,X15,X13,X11,X9,X18,X16] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),X2))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),X0))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl2),
  inference(superposition,[],[f553,f113])).
fof(f3164,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.num.|48|_0',sK0))))))) | $spl280),
  inference(cnf_transformation,[],[f3164_D])).
fof(f3164_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.num.|48|_0',sK0))))))) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f3138,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl271),
  inference(cnf_transformation,[],[f3138_D])).
fof(f3138_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl271),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl271])])).
fof(f3124,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.num.|48|_0',sK0))))))) | $spl4),
  inference(superposition,[],[f199,f93])).
fof(f523,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl83),
  inference(cnf_transformation,[],[f523_D])).
fof(f523_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl83),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl83])])).
fof(f3159,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))) | $spl278),
  inference(cnf_transformation,[],[f3159_D])).
fof(f3159_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))) <=> ~$spl278),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl278])])).
fof(f3157,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl4),
  inference(forward_demodulation,[],[f3156,f107])).
fof(f3156,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))) | $spl4),
  inference(forward_demodulation,[],[f3116,f90])).
fof(f3116,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))) | $spl4),
  inference(superposition,[],[f199,f125])).
fof(f3154,plain,(
  ( ! [X34] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))))),sK0)))))))) ) | $spl276),
  inference(cnf_transformation,[],[f3154_D])).
fof(f3154_D,plain,(
  ( ! [X34] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))))),sK0)))))))) ) <=> ~$spl276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl276])])).
fof(f3153,plain,(
  ( ! [X34] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))))),sK0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(forward_demodulation,[],[f3152,f121])).
fof(f3152,plain,(
  ( ! [X34] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))))),sK0)))))))) ) | $spl4),
  inference(forward_demodulation,[],[f3151,f94])).
fof(f3151,plain,(
  ( ! [X34] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))))),sK0)))))))) ) | $spl4),
  inference(forward_demodulation,[],[f3114,f90])).
fof(f3114,plain,(
  ( ! [X34] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))))),sK0)))))))) ) | $spl4),
  inference(superposition,[],[f199,f121])).
fof(f3150,plain,(
  ( ! [X33] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))))),sK0)))))))) ) | $spl274),
  inference(cnf_transformation,[],[f3150_D])).
fof(f3150_D,plain,(
  ( ! [X33] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))))),sK0)))))))) ) <=> ~$spl274),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl274])])).
fof(f3149,plain,(
  ( ! [X33] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))))),sK0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(forward_demodulation,[],[f3148,f119])).
fof(f3148,plain,(
  ( ! [X33] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))))),sK0)))))))) ) | $spl4),
  inference(forward_demodulation,[],[f3147,f94])).
fof(f3147,plain,(
  ( ! [X33] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))))),sK0)))))))) ) | $spl4),
  inference(forward_demodulation,[],[f3113,f90])).
fof(f3113,plain,(
  ( ! [X33] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))))),sK0)))))))) ) | $spl4),
  inference(superposition,[],[f199,f119])).
fof(f527,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl87),
  inference(cnf_transformation,[],[f527_D])).
fof(f527_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl87),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl87])])).
fof(f3146,plain,(
  ( ! [X32] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0')),sK0)))))))) ) | $spl272),
  inference(cnf_transformation,[],[f3146_D])).
fof(f3146_D,plain,(
  ( ! [X32] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0')),sK0)))))))) ) <=> ~$spl272),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl272])])).
fof(f3145,plain,(
  ( ! [X32] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0')),sK0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(forward_demodulation,[],[f3144,f107])).
fof(f3144,plain,(
  ( ! [X32] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0')),sK0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(forward_demodulation,[],[f3143,f122])).
fof(f3143,plain,(
  ( ! [X32] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0')),sK0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(forward_demodulation,[],[f3142,f118])).
fof(f3142,plain,(
  ( ! [X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0')),sK0)))))))) ) | $spl4),
  inference(forward_demodulation,[],[f3141,f122])).
fof(f3141,plain,(
  ( ! [X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0')),sK0)))))))) ) | $spl4),
  inference(forward_demodulation,[],[f3112,f90])).
fof(f3112,plain,(
  ( ! [X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0')),sK0)))))))) ) | $spl4),
  inference(superposition,[],[f199,f118])).
fof(f3136,plain,(
  ( ! [X12,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.list.LENGTH_1'(s('type.list.list'(X12),X13)),sK0))))))) | s('type.list.list'(X12),'const.list.NIL_0') != s('type.list.list'(X12),X13)) ) | $spl268),
  inference(cnf_transformation,[],[f3136_D])).
fof(f3136_D,plain,(
  ( ! [X12,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.list.LENGTH_1'(s('type.list.list'(X12),X13)),sK0))))))) | s('type.list.list'(X12),'const.list.NIL_0') != s('type.list.list'(X12),X13)) ) <=> ~$spl268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl268])])).
fof(f3135,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.list.LENGTH_1'(s('type.list.list'(X12),X13)),sK0))))))) | s('type.list.list'(X12),'const.list.NIL_0') != s('type.list.list'(X12),X13)) ) | $spl4),
  inference(forward_demodulation,[],[f3134,f94])).
fof(f3134,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.list.LENGTH_1'(s('type.list.list'(X12),X13)),sK0))))))) | s('type.list.list'(X12),'const.list.NIL_0') != s('type.list.list'(X12),X13)) ) | $spl4),
  inference(forward_demodulation,[],[f3106,f90])).
fof(f3106,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.list.LENGTH_1'(s('type.list.list'(X12),X13)),sK0))))))) | s('type.list.list'(X12),'const.list.NIL_0') != s('type.list.list'(X12),X13)) ) | $spl4),
  inference(superposition,[],[f199,f114])).
fof(f3131,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),sK0))))))) | $spl266),
  inference(cnf_transformation,[],[f3131_D])).
fof(f3131_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),sK0))))))) <=> ~$spl266),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl266])])).
fof(f3129,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),sK0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl4),
  inference(forward_demodulation,[],[f3128,f107])).
fof(f3128,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),sK0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl4),
  inference(forward_demodulation,[],[f3127,f122])).
fof(f3127,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),sK0))))))) | $spl4),
  inference(forward_demodulation,[],[f3100,f90])).
fof(f3100,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),sK0))))))) | $spl4),
  inference(superposition,[],[f199,f122])).
fof(f3034,plain,(
  ( ! [X8,X7] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X7) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X8))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) | $spl264),
  inference(cnf_transformation,[],[f3034_D])).
fof(f3034_D,plain,(
  ( ! [X8,X7] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X7) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X8))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7))))))) ) <=> ~$spl264),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl264])])).
fof(f3027,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X7) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X8))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK2)))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f191,f113])).
fof(f191,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X42,X40] : (s('type.list.list'(sK0),X35) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),sK2))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X43))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X35)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X43),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f2515,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),sK2)))))))))))))))) ) | $spl240),
  inference(cnf_transformation,[],[f2515_D])).
fof(f2515_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),sK2)))))))))))))))) ) <=> ~$spl240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl240])])).
fof(f3032,plain,(
  ( ! [X6,X8,X7] : (s('type.list.list'(sK0),X6) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X8))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6))))))) ) | $spl260),
  inference(cnf_transformation,[],[f3032_D])).
fof(f3032_D,plain,(
  ( ! [X6,X8,X7] : (s('type.list.list'(sK0),X6) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X8))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6))))))) ) <=> ~$spl260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl260])])).
fof(f3026,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.list.list'(sK0),X6) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X8))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),sK2)))))))))))))))) ) | $spl4),
  inference(superposition,[],[f191,f113])).
fof(f3029,plain,(
  ( ! [X0,X8] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X8))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl256),
  inference(cnf_transformation,[],[f3029_D])).
fof(f3029_D,plain,(
  ( ! [X0,X8] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X8))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) <=> ~$spl256),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl256])])).
fof(f3030,plain,(
  ( ! [X6,X4,X2,X7,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK2)))))))))))))))) ) | $spl258),
  inference(cnf_transformation,[],[f3030_D])).
fof(f3030_D,plain,(
  ( ! [X6,X4,X2,X7,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK2)))))))))))))))) ) <=> ~$spl258),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl258])])).
fof(f3008,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),sK2))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X8))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f191,f113])).
fof(f2966,plain,(
  ( ! [X61,X59,X57,X54,X52,X50,X62,X60,X58,X56,X55,X53,X51,X49,X63] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),sK19('const.list.NIL_0',sK1,sK0))))))))))))))))))))))))))))))))) ) | $spl252),
  inference(cnf_transformation,[],[f2966_D])).
fof(f2966_D,plain,(
  ( ! [X61,X59,X57,X54,X52,X50,X62,X60,X58,X56,X55,X53,X51,X49,X63] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),sK19('const.list.NIL_0',sK1,sK0))))))))))))))))))))))))))))))))) ) <=> ~$spl252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl252])])).
fof(f2967,plain,(
  ( ! [X48] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))))))) ) | $spl254),
  inference(cnf_transformation,[],[f2967_D])).
fof(f2967_D,plain,(
  ( ! [X48] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))))))) ) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f2957,plain,(
  ( ! [X61,X59,X57,X54,X52,X50,X48,X62,X60,X58,X56,X55,X53,X51,X49,X63] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),sK19('const.list.NIL_0',sK1,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) | $spl2),
  inference(superposition,[],[f556,f113])).
fof(f2964,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK19(X0,sK1,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl250),
  inference(cnf_transformation,[],[f2964_D])).
fof(f2964_D,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK19(X0,sK1,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f153,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | $spl19),
  inference(cnf_transformation,[],[f153_D])).
fof(f153_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f2954,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),sK19(X0,sK1,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl2),
  inference(superposition,[],[f556,f113])).
fof(f2903,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl247),
  inference(cnf_transformation,[],[f2903_D])).
fof(f2903_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl247),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl247])])).
fof(f2904,plain,(
  ( ! [X39,X37,X35,X47,X45,X43,X41,X50,X48,X38,X36,X46,X44,X42,X40,X49] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X50),s('type.list.list'(sK0),sK2)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X50,'type.list.list'(sK0)))))))))))))))))))))))))))))))))) ) | $spl248),
  inference(cnf_transformation,[],[f2904_D])).
fof(f2904_D,plain,(
  ( ! [X39,X37,X35,X47,X45,X43,X41,X50,X48,X38,X36,X46,X44,X42,X40,X49] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X50),s('type.list.list'(sK0),sK2)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X50,'type.list.list'(sK0)))))))))))))))))))))))))))))))))) ) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f2901,plain,(
  ( ! [X39,X37,X35,X47,X45,X43,X41,X50,X48,X38,X36,X46,X44,X42,X40,X49] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X50),s('type.list.list'(sK0),sK2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X50,'type.list.list'(sK0)))))))))))))))))))))))))))))))))) ) | ($spl2 | $spl4)),
  inference(forward_demodulation,[],[f2892,f130])).
fof(f2892,plain,(
  ( ! [X39,X37,X35,X47,X45,X43,X41,X50,X48,X38,X36,X46,X44,X42,X40,X49] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))),X50,'type.list.list'(sK0))))))))))))))))))))))))))))))))) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))) ) | ($spl2 | $spl4)),
  inference(superposition,[],[f551,f130])).
fof(f551,plain,(
  ( ! [X94,X92,X90,X88,X97,X87,X85,X83,X95,X93,X91,X89,X98,X96,X86,X84,X82] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X82)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X84),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X85),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X86),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X87),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X88),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X89),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X90),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X91),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X92),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X93),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X94),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X95),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X96),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X97),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X98),s('type.list.list'(sK0),sK37(X82,X83,'type.list.list'(sK0))))))))))))))))))))))))))))))))) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X83),s('type.list.list'(sK0),X82))))) ) | $spl2),
  inference(superposition,[],[f128,f103])).
fof(f1809,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl163),
  inference(cnf_transformation,[],[f1809_D])).
fof(f1809_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl163),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl163])])).
fof(f2606,plain,(
  ( ! [X313,X315,X325,X321,X323,X310,X316,X318,X312,X314,X324,X320,X322,X309,X311,X317,X319] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X325))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X324),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X309),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X310),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X311),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X312),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X313),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X314),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X315),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X316),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X317),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X318),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X319),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X320),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X321),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X322),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X323),s('type.list.list'(sK0),sK39('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X324,X325,sK0))))))))))))))))))))))))))))))))) ) | $spl244),
  inference(cnf_transformation,[],[f2606_D])).
fof(f2606_D,plain,(
  ( ! [X313,X315,X325,X321,X323,X310,X316,X318,X312,X314,X324,X320,X322,X309,X311,X317,X319] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X325))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X324),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X309),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X310),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X311),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X312),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X313),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X314),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X315),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X316),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X317),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X318),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X319),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X320),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X321),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X322),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X323),s('type.list.list'(sK0),sK39('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X324,X325,sK0))))))))))))))))))))))))))))))))) ) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f2605,plain,(
  ( ! [X313,X315,X325,X321,X323,X310,X316,X318,X312,X314,X324,X320,X322,X309,X311,X317,X319] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X325))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X324),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X309),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X310),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X311),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X312),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X313),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X314),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X315),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X316),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X317),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X318),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X319),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X320),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X321),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X322),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X323),s('type.list.list'(sK0),sK39('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X324,X325,sK0))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2593,f125])).
fof(f2593,plain,(
  ( ! [X313,X315,X325,X321,X323,X310,X316,X318,X312,X314,X324,X320,X322,X309,X311,X317,X319] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X309),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X310),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X311),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X312),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X313),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X314),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X315),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X316),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X317),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X318),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X319),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X320),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X321),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X322),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X323),s('type.list.list'(sK0),sK39('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X324,X325,sK0)))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X325))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X324),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl2),
  inference(superposition,[],[f554,f125])).
fof(f2516,plain,(
  ( ! [X6,X7] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X6) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6))))))) ) | $spl242),
  inference(cnf_transformation,[],[f2516_D])).
fof(f2516_D,plain,(
  ( ! [X6,X7] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X6) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6))))))) ) <=> ~$spl242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl242])])).
fof(f2509,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X6) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X6)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),sK2)))))))))))))))) ) | $spl4),
  inference(superposition,[],[f190,f113])).
fof(f190,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X34,X32] : (s('type.list.list'(sK0),X27) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),sK2))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X34))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X27)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X34),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f2066,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK2)))))))))))))) ) | $spl230),
  inference(cnf_transformation,[],[f2066_D])).
fof(f2066_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK2)))))))))))))) ) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f2514,plain,(
  ( ! [X6,X7,X5] : (s('type.list.list'(sK0),X5) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X5))))))) ) | $spl238),
  inference(cnf_transformation,[],[f2514_D])).
fof(f2514_D,plain,(
  ( ! [X6,X7,X5] : (s('type.list.list'(sK0),X5) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X5))))))) ) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f2508,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.list.list'(sK0),X5) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X5)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK2)))))))))))))) ) | $spl4),
  inference(superposition,[],[f190,f113])).
fof(f2511,plain,(
  ( ! [X0,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))) ) | $spl234),
  inference(cnf_transformation,[],[f2511_D])).
fof(f2511_D,plain,(
  ( ! [X0,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))) ) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f2512,plain,(
  ( ! [X6,X4,X2,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK2)))))))))))))) ) | $spl236),
  inference(cnf_transformation,[],[f2512_D])).
fof(f2512_D,plain,(
  ( ! [X6,X4,X2,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK2)))))))))))))) ) <=> ~$spl236),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl236])])).
fof(f2492,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),sK2))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f190,f113])).
fof(f2067,plain,(
  ( ! [X6,X5] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X5) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X6))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X5))))))) ) | $spl232),
  inference(cnf_transformation,[],[f2067_D])).
fof(f2067_D,plain,(
  ( ! [X6,X5] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X5) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X6))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X5))))))) ) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f2060,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X5) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X6))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X5)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK2)))))))))))))) ) | $spl4),
  inference(superposition,[],[f189,f113])).
fof(f189,plain,(
  ( ! [X26,X24,X23,X21,X25,X22,X20] : (s('type.list.list'(sK0),X20) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),sK2))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X26))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X26),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f97,f130])).
fof(f1473,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2)))))))))))) ) | $spl142),
  inference(cnf_transformation,[],[f1473_D])).
fof(f1473_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2)))))))))))) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f2065,plain,(
  ( ! [X6,X4,X5] : (s('type.list.list'(sK0),X4) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X6))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))))))) ) | $spl228),
  inference(cnf_transformation,[],[f2065_D])).
fof(f2065_D,plain,(
  ( ! [X6,X4,X5] : (s('type.list.list'(sK0),X4) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X6))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))))))) ) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f2059,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),X4) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X6))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2)))))))))))) ) | $spl4),
  inference(superposition,[],[f189,f113])).
fof(f2062,plain,(
  ( ! [X6,X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X6))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))) ) | $spl224),
  inference(cnf_transformation,[],[f2062_D])).
fof(f2062_D,plain,(
  ( ! [X6,X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X6))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))) ) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f2063,plain,(
  ( ! [X4,X2,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),sK2)))))))))))) ) | $spl226),
  inference(cnf_transformation,[],[f2063_D])).
fof(f2063_D,plain,(
  ( ! [X4,X2,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),sK2)))))))))))) ) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f2045,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),sK2))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X6))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f189,f113])).
fof(f1849,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1848,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1847,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1846,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1845,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1844,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1843,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1842,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1841,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1840,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1839,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1838,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1837,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1836,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl94),
  inference(superposition,[],[f559,f113])).
fof(f1811,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl165),
  inference(cnf_transformation,[],[f1811_D])).
fof(f1811_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl165),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl165])])).
fof(f1812,plain,(
  ( ! [X87,X85,X86] : (~p(s(bool,happ(s(fun('type.num.num',bool),X87),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X85))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X87,'type.num.num'))))) ) | $spl166),
  inference(cnf_transformation,[],[f1812_D])).
fof(f1812_D,plain,(
  ( ! [X87,X85,X86] : (~p(s(bool,happ(s(fun('type.num.num',bool),X87),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X85))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X87,'type.num.num'))))) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f1807,plain,(
  ( ! [X87,X85,X86] : (~p(s(bool,happ(s(fun('type.num.num',bool),X87),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X85))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X87,'type.num.num'))))) ) | $spl11),
  inference(forward_demodulation,[],[f1806,f125])).
fof(f1806,plain,(
  ( ! [X87,X85,X86] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X85))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X87,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X87),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl11),
  inference(forward_demodulation,[],[f1777,f125])).
fof(f1777,plain,(
  ( ! [X87,X85,X86] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X85))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',sK37('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X87,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X87),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl11),
  inference(superposition,[],[f1759,f125])).
fof(f1786,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | $spl155),
  inference(cnf_transformation,[],[f1786_D])).
fof(f1786_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl155),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl155])])).
fof(f1803,plain,(
  ( ! [X70,X68,X71,X69] : (~p(s(bool,happ(s(fun('type.num.num',bool),X71),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',sK37('const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')),X71,'type.num.num'))))) ) | $spl160),
  inference(cnf_transformation,[],[f1803_D])).
fof(f1803_D,plain,(
  ( ! [X70,X68,X71,X69] : (~p(s(bool,happ(s(fun('type.num.num',bool),X71),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',sK37('const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')),X71,'type.num.num'))))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f1802,plain,(
  ( ! [X70,X68,X71,X69] : (~p(s(bool,happ(s(fun('type.num.num',bool),X71),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',sK37('const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')),X71,'type.num.num'))))) ) | $spl11),
  inference(forward_demodulation,[],[f1801,f122])).
fof(f1801,plain,(
  ( ! [X70,X68,X71,X69] : (~p(s(bool,happ(s(fun('type.num.num',bool),X71),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',sK37('const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')),X71,'type.num.num'))))) ) | $spl11),
  inference(forward_demodulation,[],[f1800,f118])).
fof(f1800,plain,(
  ( ! [X70,X68,X71,X69] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',sK37('const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')),X71,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X71),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0'))))))) ) | $spl11),
  inference(forward_demodulation,[],[f1799,f122])).
fof(f1799,plain,(
  ( ! [X70,X68,X71,X69] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',sK37('const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')),X71,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X71),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0'))))))) ) | $spl11),
  inference(forward_demodulation,[],[f1798,f118])).
fof(f1798,plain,(
  ( ! [X70,X68,X71,X69] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',sK37('const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')),X71,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X71),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0'))))))) ) | $spl11),
  inference(forward_demodulation,[],[f1773,f122])).
fof(f1773,plain,(
  ( ! [X70,X68,X71,X69] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',sK37('const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')),X71,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X71),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0'))))))) ) | $spl11),
  inference(superposition,[],[f1759,f118])).
fof(f1789,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',sK37('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X2,'type.num.num'))))) ) | $spl158),
  inference(cnf_transformation,[],[f1789_D])).
fof(f1789_D,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',sK37('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X2,'type.num.num'))))) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f1784,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',sK37('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X2,'type.num.num'))))) ) | $spl11),
  inference(forward_demodulation,[],[f1783,f122])).
fof(f1783,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',sK37('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X2,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl11),
  inference(forward_demodulation,[],[f1761,f122])).
fof(f1761,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',sK37('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X2,'type.num.num')))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl11),
  inference(superposition,[],[f1759,f122])).
fof(f1755,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(trivial_inequality_removal,[],[f1753])).
fof(f1753,plain,(
  s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),sK2) | ($spl2 | $spl4 | $spl6)),
  inference(superposition,[],[f544,f130])).
fof(f544,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))) ) | ($spl2 | $spl6)),
  inference(resolution,[],[f128,f132])).
fof(f1590,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl151),
  inference(cnf_transformation,[],[f1590_D])).
fof(f1590_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) <=> ~$spl151),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl151])])).
fof(f1592,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl152),
  inference(cnf_transformation,[],[f1592_D])).
fof(f1592_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f1588,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f1587,f124])).
fof(f1587,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f1586,f125])).
fof(f1586,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f1562,f90])).
fof(f1562,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl4),
  inference(superposition,[],[f498,f125])).
fof(f498,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(superposition,[],[f470,f107])).
fof(f1573,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl147),
  inference(cnf_transformation,[],[f1573_D])).
fof(f1573_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) <=> ~$spl147),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl147])])).
fof(f1575,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl148),
  inference(cnf_transformation,[],[f1575_D])).
fof(f1575_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f1584,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f1583,f124])).
fof(f1583,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f1582,f120])).
fof(f1582,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f1581,f90])).
fof(f1581,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f1580,f118])).
fof(f1580,plain,(
  ( ! [X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(forward_demodulation,[],[f1558,f122])).
fof(f1558,plain,(
  ( ! [X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(superposition,[],[f498,f118])).
fof(f1571,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f1570,f124])).
fof(f1570,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f1569,f120])).
fof(f1569,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f1546,f90])).
fof(f1546,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl4),
  inference(superposition,[],[f498,f122])).
fof(f1474,plain,(
  ( ! [X4,X5] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X4) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))))))) ) | $spl144),
  inference(cnf_transformation,[],[f1474_D])).
fof(f1474_D,plain,(
  ( ! [X4,X5] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X4) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4))))))) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f1467,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X4) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2)))))))))))) ) | $spl4),
  inference(superposition,[],[f188,f113])).
fof(f1280,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2)))))))))) ) | $spl132),
  inference(cnf_transformation,[],[f1280_D])).
fof(f1280_D,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2)))))))))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f1472,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'(sK0),X3) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))))))) ) | $spl140),
  inference(cnf_transformation,[],[f1472_D])).
fof(f1472_D,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'(sK0),X3) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))))))) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f1466,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),X3) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2)))))))))) ) | $spl4),
  inference(superposition,[],[f188,f113])).
fof(f1469,plain,(
  ( ! [X0,X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) ) | $spl136),
  inference(cnf_transformation,[],[f1469_D])).
fof(f1469_D,plain,(
  ( ! [X0,X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f1470,plain,(
  ( ! [X4,X2,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK2)))))))))) ) | $spl138),
  inference(cnf_transformation,[],[f1470_D])).
fof(f1470_D,plain,(
  ( ! [X4,X2,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK2)))))))))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f1454,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK2))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f188,f113])).
fof(f1281,plain,(
  ( ! [X4,X3] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X3) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))))))) ) | $spl134),
  inference(cnf_transformation,[],[f1281_D])).
fof(f1281_D,plain,(
  ( ! [X4,X3] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X3) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))))))) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f1274,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X3) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2)))))))))) ) | $spl4),
  inference(superposition,[],[f187,f113])).
fof(f1114,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2)))))))) ) | $spl122),
  inference(cnf_transformation,[],[f1114_D])).
fof(f1114_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2)))))))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f1279,plain,(
  ( ! [X4,X2,X3] : (s('type.list.list'(sK0),X2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))))))) ) | $spl130),
  inference(cnf_transformation,[],[f1279_D])).
fof(f1279_D,plain,(
  ( ! [X4,X2,X3] : (s('type.list.list'(sK0),X2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))))))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f1273,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(sK0),X2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.NIL_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2)))))))) ) | $spl4),
  inference(superposition,[],[f187,f113])).
fof(f1276,plain,(
  ( ! [X4,X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))) ) | $spl126),
  inference(cnf_transformation,[],[f1276_D])).
fof(f1276_D,plain,(
  ( ! [X4,X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f1277,plain,(
  ( ! [X2,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2)))))))) ) | $spl128),
  inference(cnf_transformation,[],[f1277_D])).
fof(f1277_D,plain,(
  ( ! [X2,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2)))))))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f1263,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK2))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f187,f113])).
fof(f1115,plain,(
  ( ! [X2,X3] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X2) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X3))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))))))) ) | $spl124),
  inference(cnf_transformation,[],[f1115_D])).
fof(f1115_D,plain,(
  ( ! [X2,X3] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X2) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X3))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))))))) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f1108,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X2) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X3))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2)))))))) ) | $spl4),
  inference(superposition,[],[f186,f113])).
fof(f887,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK2)))))) ) | $spl108),
  inference(cnf_transformation,[],[f887_D])).
fof(f887_D,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK2)))))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f1113,plain,(
  ( ! [X2,X3,X1] : (s('type.list.list'(sK0),X1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X3))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))) ) | $spl120),
  inference(cnf_transformation,[],[f1113_D])).
fof(f1113_D,plain,(
  ( ! [X2,X3,X1] : (s('type.list.list'(sK0),X1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X3))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f1107,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),X1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.NIL_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X3))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK2)))))) ) | $spl4),
  inference(superposition,[],[f186,f113])).
fof(f1110,plain,(
  ( ! [X0,X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X3))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) ) | $spl116),
  inference(cnf_transformation,[],[f1110_D])).
fof(f1110_D,plain,(
  ( ! [X0,X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X3))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) ) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f1111,plain,(
  ( ! [X2,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2)))))) ) | $spl118),
  inference(cnf_transformation,[],[f1111_D])).
fof(f1111_D,plain,(
  ( ! [X2,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2)))))) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f1099,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),sK2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X3))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f186,f113])).
fof(f945,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl112),
  inference(cnf_transformation,[],[f945_D])).
fof(f945_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f947,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK1) | $spl115),
  inference(cnf_transformation,[],[f947_D])).
fof(f947_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK1) <=> ~$spl115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl115])])).
fof(f940,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',sK1) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) ) | $spl0),
  inference(superposition,[],[f535,f114])).
fof(f888,plain,(
  ( ! [X2,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))) ) | $spl110),
  inference(cnf_transformation,[],[f888_D])).
fof(f888_D,plain,(
  ( ! [X2,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f882,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK2)))))) ) | $spl4),
  inference(superposition,[],[f185,f113])).
fof(f884,plain,(
  ( ! [X2,X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) ) | $spl104),
  inference(cnf_transformation,[],[f884_D])).
fof(f884_D,plain,(
  ( ! [X2,X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f885,plain,(
  ( ! [X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2)))) ) | $spl106),
  inference(cnf_transformation,[],[f885_D])).
fof(f885_D,plain,(
  ( ! [X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2)))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f875,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3)))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl4),
  inference(superposition,[],[f185,f113])).
fof(f784,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl100),
  inference(cnf_transformation,[],[f784_D])).
fof(f784_D,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f785,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X1),s('type.list.list'(sK0),'const.list.NIL_0'))))) ) | $spl102),
  inference(cnf_transformation,[],[f785_D])).
fof(f785_D,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X1),s('type.list.list'(sK0),'const.list.NIL_0'))))) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f783,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X1),s('type.list.list'(sK0),'const.list.NIL_0')))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl11),
  inference(subsumption_resolution,[],[f776,f114])).
fof(f776,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X1),s('type.list.list'(sK0),'const.list.NIL_0')))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl11),
  inference(superposition,[],[f770,f113])).
fof(f770,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X1),s('type.list.list'(sK0),X0)))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl11),
  inference(duplicate_literal_removal,[],[f767])).
fof(f767,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X1),s('type.list.list'(sK0),X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X1),s('type.list.list'(sK0),X0))))) ) | $spl11),
  inference(superposition,[],[f732,f103])).
fof(f732,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK37(X0,X1,'type.list.list'(sK0))) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X1),s('type.list.list'(sK0),X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0))))))) ) | $spl11),
  inference(trivial_inequality_removal,[],[f730])).
fof(f730,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))))) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X1),s('type.list.list'(sK0),X0)))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK37(X0,X1,'type.list.list'(sK0)))) ) | $spl11),
  inference(superposition,[],[f573,f114])).
fof(f573,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK37(X7,X8,'type.list.list'(sK0))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X7)))))) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X8),s('type.list.list'(sK0),X7))))) ) | $spl11),
  inference(superposition,[],[f562,f103])).
fof(f552,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),X0))))))))))))))))))))))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),X0)) ) | $spl2),
  inference(superposition,[],[f128,f114])).
fof(f549,plain,(
  ( ! [X61,X59,X57,X54,X52,X50,X48,X62,X60,X58,X56,X55,X53,X51,X49,X63] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48)))) ) | $spl2),
  inference(superposition,[],[f128,f113])).
fof(f141,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | $spl11),
  inference(cnf_transformation,[],[f141_D])).
fof(f141_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f546,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),X0))))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X0)))) ) | $spl2),
  inference(superposition,[],[f128,f113])).
fof(f526,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl85),
  inference(cnf_transformation,[],[f526_D])).
fof(f526_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) <=> ~$spl85),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl85])])).
fof(f528,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl86),
  inference(cnf_transformation,[],[f528_D])).
fof(f528_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f503,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f502,f122])).
fof(f502,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f501,f90])).
fof(f501,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl4),
  inference(forward_demodulation,[],[f475,f107])).
fof(f475,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl4),
  inference(superposition,[],[f470,f122])).
fof(f529,plain,(
  ( ! [X12,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(X12),'const.list.NIL_0') != s('type.list.list'(X12),X13)) ) | $spl88),
  inference(cnf_transformation,[],[f529_D])).
fof(f529_D,plain,(
  ( ! [X12,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(X12),'const.list.NIL_0') != s('type.list.list'(X12),X13)) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f531,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl91),
  inference(cnf_transformation,[],[f531_D])).
fof(f531_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) <=> ~$spl91),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl91])])).
fof(f481,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(X12),'const.list.NIL_0') != s('type.list.list'(X12),X13)) ) | $spl4),
  inference(superposition,[],[f470,f114])).
fof(f512,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f511,f122])).
fof(f511,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f510,f90])).
fof(f510,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f509,f118])).
fof(f509,plain,(
  ( ! [X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(forward_demodulation,[],[f508,f107])).
fof(f508,plain,(
  ( ! [X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(forward_demodulation,[],[f487,f122])).
fof(f487,plain,(
  ( ! [X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(superposition,[],[f470,f118])).
fof(f522,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl81),
  inference(cnf_transformation,[],[f522_D])).
fof(f522_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) <=> ~$spl81),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl81])])).
fof(f524,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl82),
  inference(cnf_transformation,[],[f524_D])).
fof(f524_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f517,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f516,f125])).
fof(f516,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl4),
  inference(forward_demodulation,[],[f491,f90])).
fof(f491,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl4),
  inference(superposition,[],[f470,f125])).
fof(f500,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f499,f127])).
fof(f499,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f473,f90])).
fof(f473,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',sK1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ($spl4 | $spl6)),
  inference(resolution,[],[f470,f132])).
fof(f294,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) | $spl77),
  inference(cnf_transformation,[],[f294_D])).
fof(f294_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) <=> ~$spl77),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl77])])).
fof(f296,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.NIL_0'))) | $spl78),
  inference(cnf_transformation,[],[f296_D])).
fof(f296_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.NIL_0'))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f182,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f130,f113])).
fof(f290,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))) | $spl73),
  inference(cnf_transformation,[],[f290_D])).
fof(f290_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))) <=> ~$spl73),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl73])])).
fof(f292,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.NIL_0'))))) | $spl74),
  inference(cnf_transformation,[],[f292_D])).
fof(f292_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.NIL_0'))))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f181,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f130,f113])).
fof(f286,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))) | $spl69),
  inference(cnf_transformation,[],[f286_D])).
fof(f286_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))) <=> ~$spl69),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl69])])).
fof(f288,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | $spl70),
  inference(cnf_transformation,[],[f288_D])).
fof(f288_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.NIL_0'))))))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f180,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f130,f113])).
fof(f282,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))) | $spl65),
  inference(cnf_transformation,[],[f282_D])).
fof(f282_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))) <=> ~$spl65),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl65])])).
fof(f284,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl66),
  inference(cnf_transformation,[],[f284_D])).
fof(f284_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f179,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f130,f113])).
fof(f278,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))) | $spl61),
  inference(cnf_transformation,[],[f278_D])).
fof(f278_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))) <=> ~$spl61),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl61])])).
fof(f280,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | $spl62),
  inference(cnf_transformation,[],[f280_D])).
fof(f280_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f178,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f130,f113])).
fof(f274,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))) | $spl57),
  inference(cnf_transformation,[],[f274_D])).
fof(f274_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))) <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f276,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | $spl58),
  inference(cnf_transformation,[],[f276_D])).
fof(f276_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f177,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f130,f113])).
fof(f270,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))) | $spl53),
  inference(cnf_transformation,[],[f270_D])).
fof(f270_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))) <=> ~$spl53),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl53])])).
fof(f272,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | $spl54),
  inference(cnf_transformation,[],[f272_D])).
fof(f272_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f176,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))) | $spl4),
  inference(superposition,[],[f130,f113])).
fof(f266,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))) | $spl49),
  inference(cnf_transformation,[],[f266_D])).
fof(f266_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))) <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f268,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | $spl50),
  inference(cnf_transformation,[],[f268_D])).
fof(f268_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f175,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))) | $spl4),
  inference(superposition,[],[f130,f113])).
fof(f262,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) | $spl45),
  inference(cnf_transformation,[],[f262_D])).
fof(f262_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f264,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | $spl46),
  inference(cnf_transformation,[],[f264_D])).
fof(f264_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f174,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))) | $spl4),
  inference(superposition,[],[f130,f113])).
fof(f258,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))) | $spl41),
  inference(cnf_transformation,[],[f258_D])).
fof(f258_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f260,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | $spl42),
  inference(cnf_transformation,[],[f260_D])).
fof(f260_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f173,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))) | $spl4),
  inference(superposition,[],[f130,f113])).
fof(f254,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) | $spl37),
  inference(cnf_transformation,[],[f254_D])).
fof(f254_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f256,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | $spl38),
  inference(cnf_transformation,[],[f256_D])).
fof(f256_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f172,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))) | $spl4),
  inference(superposition,[],[f130,f113])).
fof(f250,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) | $spl33),
  inference(cnf_transformation,[],[f250_D])).
fof(f250_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f252,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | $spl34),
  inference(cnf_transformation,[],[f252_D])).
fof(f252_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f171,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))) | $spl4),
  inference(superposition,[],[f130,f113])).
fof(f246,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))) | $spl29),
  inference(cnf_transformation,[],[f246_D])).
fof(f246_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f248,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))) | $spl30),
  inference(cnf_transformation,[],[f248_D])).
fof(f248_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f170,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))) | $spl4),
  inference(superposition,[],[f130,f113])).
fof(f242,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))) | $spl25),
  inference(cnf_transformation,[],[f242_D])).
fof(f242_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f244,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))) | $spl26),
  inference(cnf_transformation,[],[f244_D])).
fof(f244_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f169,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))) | $spl4),
  inference(superposition,[],[f130,f113])).
fof(f155,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK2) | $spl21),
  inference(cnf_transformation,[],[f155_D])).
fof(f155_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK2) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f157,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.num.|48|_0')))) | $spl23),
  inference(cnf_transformation,[],[f157_D])).
fof(f157_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.num.|48|_0')))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f149,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK2) | $spl1),
  inference(superposition,[],[f127,f114])).
fof(f151,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl17),
  inference(cnf_transformation,[],[f151_D])).
fof(f151_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f148,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl1),
  inference(superposition,[],[f127,f113])).
fof(f144,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK3) | $spl13),
  inference(cnf_transformation,[],[f144_D])).
fof(f144_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK3) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f146,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | $spl14),
  inference(cnf_transformation,[],[f146_D])).
fof(f146_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f137,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK3) | $spl6),
  inference(superposition,[],[f132,f114])).
fof(f140,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | $spl9),
  inference(cnf_transformation,[],[f140_D])).
fof(f140_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f142,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | $spl10),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f136,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | $spl6),
  inference(superposition,[],[f132,f113])).
fof(f126,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl0),
  inference(cnf_transformation,[],[f126_D])).
fof(f126_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f132,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl6),
  inference(cnf_transformation,[],[f132_D])).
fof(f132_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f87,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) & s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),X3)))))))))))))))))))))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16,sK17,sK18])],[f70])).
fof(f70,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31,X32,X33,X34] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X19)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X30),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X31),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X32),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X33),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X34),s('type.list.list'(X0),X19))))))))))))))))))))))))))))))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f69])).
fof(f69,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))),
  inference(nnf_transformation,[],[f68])).
fof(f68,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <~> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X22),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X24),s('type.list.list'(X6),X9)))))))))))))))))))))))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X22),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X24),s('type.list.list'(X6),X9)))))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|8','thm.quantHeuristics.LIST_LENGTH_|49|5|split|8')).
fof(f130,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) | $spl4),
  inference(cnf_transformation,[],[f130_D])).
fof(f130_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f88,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))),
  inference(cnf_transformation,[],[f71])).
fof(f127,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl1),
  inference(cnf_transformation,[],[f127_D])).
fof(f127_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f128,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X17,X7,X5,X3,X15,X13,X11,X9,X18,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),X3)))))))))))))))))))))))))))))))) ) | $spl2),
  inference(cnf_transformation,[],[f128_D])).
fof(f128_D,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X17,X7,X5,X3,X15,X13,X11,X9,X18,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),X3)))))))))))))))))))))))))))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f89,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X17,X7,X5,X3,X15,X13,X11,X9,X18,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),X3))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) )),
  inference(cnf_transformation,[],[f71])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 782
% Passive clauses: 6168
% Generated clauses: 34639
% Final active clauses: 577
% Final passive clauses: 4763
% Input formulas: 37
% Initial clauses: 39
% 
% Selected by SInE selection: 25
% SInE iterations: 1
% 
% Duplicate literals: 96
% Trivial inequalities: 1458
% Fw subsumption resolutions: 564
% Fw demodulations: 7332
% Bw demodulations: 37
% 
% Simple tautologies: 8
% Forward subsumptions: 18709
% 
% Binary resolution: 1208
% Forward superposition: 7479
% Backward superposition: 15938
% Self superposition: 5
% Equality resolution: 85
% 
% Split clauses: 318
% Split components: 640
% SAT solver clauses: 334
% SAT solver unit clauses: 2
% SAT solver binary clauses: 13
% 
% Sat splits: 318
% Sat splitting refutations: 10
% 
% Memory used [KB]: 62557
% Time elapsed: 1.890 s
% ------------------------------
% ------------------------------
% Success in time 13.63 s
