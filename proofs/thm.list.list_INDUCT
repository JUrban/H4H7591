Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f916,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f912,f442,f440,f410,f413,f426,f895,f897,f411])).
fof(f411,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),X0))))) ) | $spl4),
  inference(cnf_transformation,[],[f411_D])).
fof(f411_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),X0))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f897,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4(sK1,sK0)),s('type.list.list'(sK0),sK3(sK1,sK0))))))) | $spl25),
  inference(cnf_transformation,[],[f897_D])).
fof(f897_D,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4(sK1,sK0)),s('type.list.list'(sK0),sK3(sK1,sK0))))))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f895,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4(sK1,sK0)),s('type.list.list'(sK0),sK3(sK1,sK0))))))) | p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),X0))))) )),
  inference(subsumption_resolution,[],[f888,f47])).
fof(f47,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.list.list_INDUCT',aHL_TRUTH)).
fof(f888,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4(sK1,sK0)),s('type.list.list'(sK0),sK3(sK1,sK0))))))) | p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),X0))))) )),
  inference(superposition,[],[f60,f70])).
fof(f70,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),'const.list.NIL_0')))),
  inference(resolution,[],[f44,f52])).
fof(f52,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X8] : (s(bool,'T_0') = s(bool,X8) <=> p(s(bool,X8)))),
  file('thm.list.list_INDUCT','thm.bool.EQ_CLAUSES|split|0')).
fof(f44,plain,(
  p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),'const.list.NIL_0'))))),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),'const.list.NIL_0')))) & ! [X3] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),X3)))) | ! [X4] : p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),X3))))))) & ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f33])).
fof(f33,plain,(
  ? [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X3] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X3)))) | ! [X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3))))))) & ? [X2] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f29])).
fof(f29,plain,(
  ? [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X2] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) | ! [X3] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))))))) & ? [X4] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ? [X0,X1] : ((p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X2] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) | ! [X3] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))))) & ? [X4] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X4)))))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1] : ((p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X2] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) => ! [X3] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))))) => ! [X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f14])).
fof(f14,plain,(
  ~! [X0] : ! [X1] : ((p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X2] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) => ! [X3] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))))) => ! [X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X4)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),'const.list.NIL_0')))) & ! [X8] : (p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),X8)))) => ! [X9] : p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X8)))))))) => ! [X10] : p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),X10)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),'const.list.NIL_0')))) & ! [X8] : (p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),X8)))) => ! [X9] : p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X8)))))))) => ! [X10] : p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),X10)))))),
  file('thm.list.list_INDUCT','thm.list.list_INDUCT')).
fof(f60,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK4(X1,X0)),s('type.list.list'(X0),sK3(X1,X0))))))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2))))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),sK3(X1,X0))))) & ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK4(X1,X0)),s('type.list.list'(X0),sK3(X1,X0)))))))) | ! [X2] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4])],[f39])).
fof(f39,plain,(
  ! [X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X3] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X3)))) & ? [X4] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3))))))) | ! [X2] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X2] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) & ? [X3] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))))))) | ! [X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : ((~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X2] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) & ? [X3] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))))) | ! [X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X4)))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1] : ((p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X2] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) => ! [X3] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))))) => ! [X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ! [X0] : ! [X1] : ((p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X2] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) => ! [X3] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))))) => ! [X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X4)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X7] : ((p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),'const.list.NIL_0')))) & ! [X10] : (p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),X10)))) => ! [X12] : p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X10)))))))) => ! [X10] : p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),X10)))))),
  file('thm.list.list_INDUCT','thm.list.list_INDUCT|48|')).
fof(f426,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f420,f49])).
fof(f49,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.list.list_INDUCT',aHL_FALSITY)).
fof(f420,plain,(
  p(s(bool,'F_0')) | $spl4),
  inference(superposition,[],[f411,f71])).
fof(f71,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),sK2)))),
  inference(resolution,[],[f46,f56])).
fof(f56,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X8] : (s(bool,'F_0') = s(bool,X8) <=> ~p(s(bool,X8)))),
  file('thm.list.list_INDUCT','thm.bool.EQ_CLAUSES|split|2')).
fof(f46,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),sK2))))),
  inference(cnf_transformation,[],[f34])).
fof(f413,plain,(
  p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),sK3(sK1,sK0))))) | $spl6),
  inference(cnf_transformation,[],[f413_D])).
fof(f413_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),sK3(sK1,sK0))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f410,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),sK3(sK1,sK0))))) | p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),X0))))) )),
  inference(subsumption_resolution,[],[f404,f47])).
fof(f404,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),sK3(sK1,sK0))))) | p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),X0))))) )),
  inference(superposition,[],[f59,f70])).
fof(f59,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),sK3(X1,X0))))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2))))) )),
  inference(cnf_transformation,[],[f40])).
fof(f440,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),sK3(sK1,sK0)))) | $spl10),
  inference(cnf_transformation,[],[f440_D])).
fof(f440_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),sK3(sK1,sK0)))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f442,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),sK3(sK1,sK0)))) | $spl6),
  inference(subsumption_resolution,[],[f437,f49])).
fof(f437,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),sK3(sK1,sK0)))) | $spl6),
  inference(superposition,[],[f413,f50])).
fof(f50,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.list.list_INDUCT',aHL_BOOL_CASES)).
fof(f912,plain,(
  $false | ($spl10 | $spl25)),
  inference(subsumption_resolution,[],[f911,f47])).
fof(f911,plain,(
  ~p(s(bool,'T_0')) | ($spl10 | $spl25)),
  inference(forward_demodulation,[],[f901,f440])).
fof(f901,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),sK3(sK1,sK0))))) | $spl25),
  inference(resolution,[],[f897,f45])).
fof(f45,plain,(
  ( ! [X4,X3] : (p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),X3)))))) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),sK1),s('type.list.list'(sK0),X3))))) )),
  inference(cnf_transformation,[],[f34])).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 40
% Passive clauses: 119
% Generated clauses: 844
% Final active clauses: 28
% Final passive clauses: 46
% Input formulas: 12
% Initial clauses: 20
% 
% Duplicate literals: 87
% Trivial inequalities: 28
% Fw subsumption resolutions: 90
% Fw demodulations: 24
% Bw demodulations: 10
% 
% Simple tautologies: 60
% Equational tautologies: 17
% Forward subsumptions: 413
% 
% Binary resolution: 44
% Forward superposition: 270
% Backward superposition: 191
% Self superposition: 26
% Equality factoring: 28
% Equality resolution: 9
% 
% Split clauses: 15
% Split components: 30
% SAT solver clauses: 34
% SAT solver unit clauses: 9
% SAT solver binary clauses: 20
% SAT solver learnt clauses: 1
% 
% Sat splits: 15
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 33
% TWLsolver calls for satisfiability: 14
% 
% Memory used [KB]: 895
% Time elapsed: 0.027 s
% ------------------------------
% ------------------------------
% Success in time 0.028 s
