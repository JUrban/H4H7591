Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% (70460)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 136
% Passive clauses: 1762
% Generated clauses: 22964
% Final active clauses: 92
% Final passive clauses: 1454
% Input formulas: 17
% Initial clauses: 33
% 
% Duplicate literals: 1302
% Trivial inequalities: 311
% Fw subsumption resolutions: 3671
% Fw demodulations: 2784
% Bw demodulations: 42
% 
% Simple tautologies: 456
% Equational tautologies: 59
% Forward subsumptions: 10638
% 
% Binary resolution: 218
% Forward superposition: 7356
% Backward superposition: 6639
% Self superposition: 229
% Equality factoring: 169
% Equality resolution: 23
% 
% Split clauses: 1170
% Split components: 2450
% SAT solver clauses: 1938
% SAT solver unit clauses: 33
% SAT solver binary clauses: 186
% 
% Sat splits: 1170
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1938
% TWLsolver calls for satisfiability: 176
% 
% Memory used [KB]: 9594
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f283,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f282,f59,f97,f113,f117,f56,f95,f65,f102,f275,f276,f61,f99,f88,f111,f114,f119,f57,f93,f115,f120,f62,f100,f134,f139,f58,f91,f69,f104])).
fof(f104,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl18),
  inference(cnf_transformation,[],[f104_D])).
fof(f104_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f69,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.transc.DIVISION_GT','thm.bool.EQ_CLAUSES|split|3')).
fof(f91,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))))) | $spl1),
  inference(cnf_transformation,[],[f91_D])).
fof(f91_D,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f58,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))))))),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0)))) & (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f36])).
fof(f36,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) & ? [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0))))))))))),
  inference(ennf_transformation,[],[f19])).
fof(f19,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) => ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) => ! [X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X9))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) => ! [X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X9))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6))))))))))),
  file('thm.transc.DIVISION_GT','thm.transc.DIVISION_GT')).
fof(f139,plain,(
  s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))))) | $spl32),
  inference(cnf_transformation,[],[f139_D])).
fof(f139_D,plain,(
  s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f134,plain,(
  s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))))) | ($spl1 | $spl18)),
  inference(resolution,[],[f104,f91])).
fof(f100,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))) ) | $spl10),
  inference(cnf_transformation,[],[f100_D])).
fof(f100_D,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f62,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X10] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X10))))),
  file('thm.transc.DIVISION_GT','thm.arithmetic.LESS_EQ_REFL')).
fof(f120,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | $spl30),
  inference(cnf_transformation,[],[f120_D])).
fof(f120_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f115,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | ($spl10 | $spl14)),
  inference(resolution,[],[f102,f100])).
fof(f93,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) | $spl2),
  inference(cnf_transformation,[],[f93_D])).
fof(f93_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f57,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))))),
  inference(cnf_transformation,[],[f40])).
fof(f119,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))) | $spl28),
  inference(cnf_transformation,[],[f119_D])).
fof(f119_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f114,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))) | ($spl2 | $spl14)),
  inference(resolution,[],[f102,f93])).
fof(f111,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X4)))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) ) | $spl24),
  inference(cnf_transformation,[],[f111_D])).
fof(f111_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X4)))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f88,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X4)))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X4)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4)))))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X4)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0))))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4)))))))),
  inference(ennf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2,X3,X4] : ((p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X4)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0))))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4)))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6,X7,X8,X10,X9] : ((p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',X9)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6))))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X10))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X9)))))))),
  file('thm.transc.DIVISION_GT','thm.transc.DIVISION_LT_GEN')).
fof(f99,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f99_D])).
fof(f99_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f61,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.transc.DIVISION_GT',aHL_FALSITY)).
fof(f276,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK0))))) ) | $spl58),
  inference(cnf_transformation,[],[f276_D])).
fof(f276_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK0))))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f275,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK0))))) ) | ($spl6 | $spl9 | $spl24 | $spl28 | $spl30 | $spl32)),
  inference(subsumption_resolution,[],[f274,f97])).
fof(f274,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK0))))) ) | ($spl6 | $spl9 | $spl24 | $spl28 | $spl30 | $spl32)),
  inference(forward_demodulation,[],[f273,f119])).
fof(f273,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK0))))) ) | ($spl6 | $spl9 | $spl24 | $spl30 | $spl32)),
  inference(subsumption_resolution,[],[f272,f97])).
fof(f272,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK0))))) ) | ($spl9 | $spl24 | $spl30 | $spl32)),
  inference(forward_demodulation,[],[f271,f120])).
fof(f271,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK0))))) ) | ($spl9 | $spl24 | $spl32)),
  inference(subsumption_resolution,[],[f265,f99])).
fof(f265,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK0))))) ) | ($spl24 | $spl32)),
  inference(superposition,[],[f111,f139])).
fof(f102,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f102_D])).
fof(f102_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f65,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.transc.DIVISION_GT','thm.bool.EQ_CLAUSES|split|0')).
fof(f95,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0)))) | $spl4),
  inference(cnf_transformation,[],[f95_D])).
fof(f95_D,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f56,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0))))),
  inference(cnf_transformation,[],[f40])).
fof(f117,plain,(
  s(bool,'T_0') = s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0))) | $spl26),
  inference(cnf_transformation,[],[f117_D])).
fof(f117_D,plain,(
  s(bool,'T_0') = s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f113,plain,(
  s(bool,'T_0') = s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0))) | ($spl4 | $spl14)),
  inference(resolution,[],[f102,f95])).
fof(f97,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f97_D])).
fof(f97_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f59,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  p(s(bool,'T_0'))),
  file('thm.transc.DIVISION_GT','thm.bool.TRUTH')).
fof(f282,plain,(
  $false | ($spl6 | $spl26 | $spl58)),
  inference(subsumption_resolution,[],[f279,f97])).
fof(f279,plain,(
  ~p(s(bool,'T_0')) | ($spl26 | $spl58)),
  inference(superposition,[],[f276,f117])).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 25
% Passive clauses: 40
% Generated clauses: 233
% Final active clauses: 15
% Final passive clauses: 6
% Input formulas: 17
% Initial clauses: 33
% 
% Duplicate literals: 3
% Trivial inequalities: 9
% Fw subsumption resolutions: 14
% Fw demodulations: 11
% Bw demodulations: 13
% Condensations: 1
% Global subsumptions: 4
% 
% Simple tautologies: 17
% Equational tautologies: 4
% Forward subsumptions: 79
% 
% Binary resolution: 13
% Forward superposition: 44
% Backward superposition: 31
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 4
% 
% Split clauses: 4
% Split components: 8
% SAT solver clauses: 89
% SAT solver unit clauses: 41
% SAT solver binary clauses: 19
% SAT solver learnt clauses: 9
% 
% Sat splits: 4
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 72
% TWLsolver calls for satisfiability: 120
% 
% Memory used [KB]: 895
% Time elapsed: 0.007 s
% ------------------------------
% ------------------------------
% Success in time 0.621 s
