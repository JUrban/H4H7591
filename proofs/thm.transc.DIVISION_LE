Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% (115225)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 208
% Passive clauses: 1288
% Generated clauses: 26997
% Final active clauses: 185
% Final passive clauses: 879
% Input formulas: 25
% Initial clauses: 46
% 
% Duplicate literals: 1686
% Trivial inequalities: 173
% Fw subsumption resolutions: 3551
% Fw demodulations: 6124
% Bw demodulations: 18
% 
% Simple tautologies: 346
% Equational tautologies: 24
% Forward subsumptions: 12376
% 
% Binary resolution: 312
% Forward superposition: 9391
% Backward superposition: 5312
% Self superposition: 102
% Equality factoring: 42
% Equality resolution: 38
% 
% Split clauses: 696
% Split components: 1402
% SAT solver clauses: 1563
% SAT solver unit clauses: 23
% SAT solver binary clauses: 103
% 
% Sat splits: 696
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 1561
% TWLsolver calls for satisfiability: 215
% 
% Memory used [KB]: 12153
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f4841,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4836,f85,f138,f176,f180,f83,f136,f96,f149,f4666,f4668,f4031,f4121,f121,f160,f1608,f1610,f122,f167,f2893,f2897,f2895,f178,f182,f89,f143,f1746,f1760,f94,f148,f1686,f1687,f168,f171,f118,f157,f124,f165,f3923,f3925,f1761,f1763,f3988,f177,f181,f90,f144,f191,f196,f84,f134,f100,f151,f203,f207,f99,f152,f4694,f271,f279,f213,f217,f92,f146,f4743,f88,f142,f119,f158])).
fof(f158,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) ) | $spl32),
  inference(cnf_transformation,[],[f158_D])).
fof(f158_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f119,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X12,X13] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X12),s('type.realax.real',X13)))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X12),s('type.realax.real',X13)))))),
  file('thm.transc.DIVISION_LE','thm.real.REAL_LT_IMP_LE')).
fof(f142,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f88,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.transc.DIVISION_LE',aHL_FALSITY)).
fof(f4743,plain,(
  $false | ($spl9 | $spl32 | $spl64 | $spl578)),
  inference(subsumption_resolution,[],[f4742,f142])).
fof(f4742,plain,(
  p(s(bool,'F_0')) | ($spl32 | $spl64 | $spl578)),
  inference(forward_demodulation,[],[f4732,f196])).
fof(f4732,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',sK2)))) | ($spl32 | $spl578)),
  inference(resolution,[],[f4668,f158])).
fof(f146,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) ) | $spl16),
  inference(cnf_transformation,[],[f146_D])).
fof(f146_D,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f92,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X10] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))),
  file('thm.transc.DIVISION_LE','thm.prim_rec.LESS_SUC_REFL')).
fof(f217,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) ) | $spl70),
  inference(cnf_transformation,[],[f217_D])).
fof(f217_D,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f213,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) ) | ($spl16 | $spl22)),
  inference(resolution,[],[f146,f149])).
fof(f279,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3(X0)),s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl76),
  inference(cnf_transformation,[],[f279_D])).
fof(f279_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3(X0)),s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f271,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3(X0)),s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | ($spl20 | $spl70)),
  inference(superposition,[],[f217,f148])).
fof(f4694,plain,(
  $false | ($spl4 | $spl76 | $spl355 | $spl523)),
  inference(subsumption_resolution,[],[f4693,f2894])).
fof(f2894,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))) | $spl355),
  inference(cnf_transformation,[],[f2894_D])).
fof(f2894_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))) <=> ~$spl355),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl355])])).
fof(f4693,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))) | ($spl4 | $spl76 | $spl523)),
  inference(subsumption_resolution,[],[f4681,f138])).
fof(f4681,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))) | ($spl76 | $spl523)),
  inference(superposition,[],[f4031,f279])).
fof(f152,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) ) | $spl28),
  inference(cnf_transformation,[],[f152_D])).
fof(f152_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f99,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.transc.DIVISION_LE','thm.bool.EQ_CLAUSES|split|2')).
fof(f207,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl67),
  inference(cnf_transformation,[],[f207_D])).
fof(f207_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f203,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl4 | $spl28)),
  inference(resolution,[],[f152,f138])).
fof(f151,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl26),
  inference(cnf_transformation,[],[f151_D])).
fof(f151_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f100,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f66])).
fof(f134,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',sK2)))) | $spl1),
  inference(cnf_transformation,[],[f134_D])).
fof(f134_D,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',sK2)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f84,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))))),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0)))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f52])).
fof(f52,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2)))))),
  inference(ennf_transformation,[],[f27])).
fof(f27,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X8)))))),
  file('thm.transc.DIVISION_LE','thm.transc.DIVISION_LE')).
fof(f196,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))) | $spl64),
  inference(cnf_transformation,[],[f196_D])).
fof(f196_D,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f191,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))) | ($spl1 | $spl26)),
  inference(resolution,[],[f151,f134])).
fof(f144,plain,(
  ( ! [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0))))) ) | $spl12),
  inference(cnf_transformation,[],[f144_D])).
fof(f144_D,plain,(
  ( ! [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f90,plain,(
  ( ! [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X12] : p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X12),s('type.realax.real',X12))))),
  file('thm.transc.DIVISION_LE','thm.real.REAL_LE_REFL')).
fof(f181,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | $spl60),
  inference(cnf_transformation,[],[f181_D])).
fof(f181_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f177,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | ($spl12 | $spl22)),
  inference(resolution,[],[f149,f144])).
fof(f3988,plain,(
  $false | ($spl60 | $spl64 | $spl67 | $spl452)),
  inference(subsumption_resolution,[],[f3987,f207])).
fof(f3987,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl60 | $spl64 | $spl452)),
  inference(forward_demodulation,[],[f3955,f181])).
fof(f3955,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',sK1))) | ($spl64 | $spl452)),
  inference(backward_demodulation,[],[f3925,f196])).
fof(f1763,plain,(
  s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))) | $spl240),
  inference(cnf_transformation,[],[f1763_D])).
fof(f1763_D,plain,(
  s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))) <=> ~$spl240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl240])])).
fof(f1761,plain,(
  s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))) | ($spl4 | $spl62 | $spl218)),
  inference(subsumption_resolution,[],[f1747,f138])).
fof(f1747,plain,(
  ~p(s(bool,'T_0')) | s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))) | ($spl62 | $spl218)),
  inference(superposition,[],[f1687,f182])).
fof(f3925,plain,(
  s('type.realax.real',sK1) = s('type.realax.real',sK2) | $spl452),
  inference(cnf_transformation,[],[f3925_D])).
fof(f3925_D,plain,(
  s('type.realax.real',sK1) = s('type.realax.real',sK2) <=> ~$spl452),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl452])])).
fof(f3923,plain,(
  s('type.realax.real',sK1) = s('type.realax.real',sK2) | ($spl202 | $spl240 | $spl354)),
  inference(forward_demodulation,[],[f3886,f1610])).
fof(f3886,plain,(
  s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.|48|_0'))) | ($spl240 | $spl354)),
  inference(backward_demodulation,[],[f2895,f1763])).
fof(f165,plain,(
  ( ! [X2,X0,X5,X1] : (s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X5))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) ) | $spl46),
  inference(cnf_transformation,[],[f165_D])).
fof(f165_D,plain,(
  ( ! [X2,X0,X5,X1] : (s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X5))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f124,plain,(
  ( ! [X2,X0,X5,X1] : (s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X5))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X6] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X6))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))))))) & ! [X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X5)))))) & (s('type.realax.real',X1) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK5(X2,X1,X0)),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',sK5(X2,X1,X0)))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK5(X2,X1,X0)))))))))) | (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK6(X2,X1,X0)),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & s('type.realax.real',X2) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',sK6(X2,X1,X0))))) | p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5,sK6])],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X6] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X6))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))))))) & ! [X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X5)))))) & (s('type.realax.real',X1) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) | ? [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) | ? [X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & s('type.realax.real',X2) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))) | p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(rectify,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) & ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))))) & (s('type.realax.real',X1) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) | ? [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) | ? [X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & s('type.realax.real',X2) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))) | p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(flattening,[],[f79])).
fof(f79,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) & ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))))) & ((s('type.realax.real',X1) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) | ? [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) | ? [X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & s('type.realax.real',X2) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))))) | p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) <=> (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) & ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))))))),
  inference(ennf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) <=> (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) & ! [X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) => s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) <=> (s('type.realax.real',X7) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.num.|48|_0'))) & ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X10))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) & ! [X10] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X10),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6)))))) => s('type.realax.real',X8) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X10))))))),
  file('thm.transc.DIVISION_LE','thm.transc.DIVISION_THM')).
fof(f157,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | $spl30),
  inference(cnf_transformation,[],[f157_D])).
fof(f157_D,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f118,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X10,X9] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X10))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X10),s('type.num.num',X9)))),
  file('thm.transc.DIVISION_LE','thm.arithmetic.GREATER_EQ')).
fof(f171,plain,(
  ( ! [X2,X0,X5,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0))),s('type.num.num',X5)))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X5)))) ) | $spl52),
  inference(cnf_transformation,[],[f171_D])).
fof(f171_D,plain,(
  ( ! [X2,X0,X5,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0))),s('type.num.num',X5)))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X5)))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f168,plain,(
  ( ! [X2,X0,X5,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0))),s('type.num.num',X5)))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X5))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) ) | ($spl30 | $spl46)),
  inference(backward_demodulation,[],[f157,f165])).
fof(f1687,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num',X0)))) | s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',X0)))) ) | $spl218),
  inference(cnf_transformation,[],[f1687_D])).
fof(f1687_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num',X0)))) | s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',X0)))) ) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f1686,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num',X0)))) | s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',X0)))) ) | ($spl4 | $spl52 | $spl58)),
  inference(subsumption_resolution,[],[f1662,f138])).
fof(f1662,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num',X0)))) | s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',X0)))) ) | ($spl52 | $spl58)),
  inference(superposition,[],[f171,f180])).
fof(f148,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl20),
  inference(cnf_transformation,[],[f148_D])).
fof(f148_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f94,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3])],[f33])).
fof(f33,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X9] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X9) | ? [X10] : s('type.num.num',X9) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))),
  file('thm.transc.DIVISION_LE','thm.arithmetic.num_CASES')).
fof(f1760,plain,(
  ( ! [X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num',X2)))) | s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X2)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X2)) ) | $spl238),
  inference(cnf_transformation,[],[f1760_D])).
fof(f1760_D,plain,(
  ( ! [X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num',X2)))) | s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X2)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X2)) ) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f1746,plain,(
  ( ! [X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num',X2)))) | s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X2)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X2)) ) | ($spl20 | $spl218)),
  inference(superposition,[],[f1687,f148])).
fof(f143,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))) ) | $spl10),
  inference(cnf_transformation,[],[f143_D])).
fof(f143_D,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f89,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X9] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X9))))),
  file('thm.transc.DIVISION_LE','thm.arithmetic.LESS_EQ_REFL')).
fof(f182,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)))) ) | $spl62),
  inference(cnf_transformation,[],[f182_D])).
fof(f182_D,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f178,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)))) ) | ($spl10 | $spl22)),
  inference(resolution,[],[f149,f143])).
fof(f2895,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))) | $spl354),
  inference(cnf_transformation,[],[f2895_D])).
fof(f2895_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))) <=> ~$spl354),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl354])])).
fof(f2897,plain,(
  s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3('const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))))) | $spl356),
  inference(cnf_transformation,[],[f2897_D])).
fof(f2897_D,plain,(
  s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3('const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))))) <=> ~$spl356),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl356])])).
fof(f2893,plain,(
  s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3('const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))) | ($spl4 | $spl62 | $spl238)),
  inference(subsumption_resolution,[],[f2878,f138])).
fof(f2878,plain,(
  ~p(s(bool,'T_0')) | s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3('const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))) | ($spl62 | $spl238)),
  inference(superposition,[],[f1760,f182])).
fof(f167,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0')))) ) | $spl50),
  inference(cnf_transformation,[],[f167_D])).
fof(f167_D,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f122,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) )),
  inference(cnf_transformation,[],[f82])).
fof(f1610,plain,(
  s('type.realax.real',sK1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.|48|_0'))) | $spl202),
  inference(cnf_transformation,[],[f1610_D])).
fof(f1610_D,plain,(
  s('type.realax.real',sK1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.|48|_0'))) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f1608,plain,(
  s('type.realax.real',sK1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.|48|_0'))) | ($spl4 | $spl50 | $spl58)),
  inference(subsumption_resolution,[],[f1598,f138])).
fof(f1598,plain,(
  ~p(s(bool,'T_0')) | s('type.realax.real',sK1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.|48|_0'))) | ($spl50 | $spl58)),
  inference(superposition,[],[f167,f180])).
fof(f160,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) ) | $spl36),
  inference(cnf_transformation,[],[f160_D])).
fof(f160_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f121,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))))))))),
  inference(ennf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) => ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))))))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) => ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.num.|48|_0'))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))))),
  file('thm.transc.DIVISION_LE','thm.transc.DIVISION_LT')).
fof(f4121,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),sK0))))) ) | $spl532),
  inference(cnf_transformation,[],[f4121_D])).
fof(f4121_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),sK0))))) ) <=> ~$spl532),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl532])])).
fof(f4031,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3('const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) | $spl523),
  inference(cnf_transformation,[],[f4031_D])).
fof(f4031_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3('const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) <=> ~$spl523),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl523])])).
fof(f4668,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK2)))) | $spl578),
  inference(cnf_transformation,[],[f4668_D])).
fof(f4668_D,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK2)))) <=> ~$spl578),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl578])])).
fof(f4666,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3('const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK0))))) ) | ($spl36 | $spl202 | $spl356)),
  inference(forward_demodulation,[],[f4650,f1610])).
fof(f4650,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3('const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK0))))) ) | ($spl36 | $spl356)),
  inference(superposition,[],[f160,f2897])).
fof(f149,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl22),
  inference(cnf_transformation,[],[f149_D])).
fof(f149_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f96,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.transc.DIVISION_LE','thm.bool.EQ_CLAUSES|split|1')).
fof(f136,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0)))) | $spl2),
  inference(cnf_transformation,[],[f136_D])).
fof(f136_D,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f83,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0))))),
  inference(cnf_transformation,[],[f62])).
fof(f180,plain,(
  s(bool,'T_0') = s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0))) | $spl58),
  inference(cnf_transformation,[],[f180_D])).
fof(f180_D,plain,(
  s(bool,'T_0') = s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f176,plain,(
  s(bool,'T_0') = s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0))) | ($spl2 | $spl22)),
  inference(resolution,[],[f149,f136])).
fof(f138,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f138_D])).
fof(f138_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f85,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.transc.DIVISION_LE',aHL_TRUTH)).
fof(f4836,plain,(
  $false | ($spl4 | $spl58 | $spl532)),
  inference(subsumption_resolution,[],[f4825,f138])).
fof(f4825,plain,(
  ~p(s(bool,'T_0')) | ($spl58 | $spl532)),
  inference(superposition,[],[f4121,f180])).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 127
% Passive clauses: 436
% Generated clauses: 4919
% Final active clauses: 68
% Final passive clauses: 167
% Input formulas: 25
% Initial clauses: 46
% 
% Duplicate literals: 306
% Trivial inequalities: 43
% Fw subsumption resolutions: 293
% Fw demodulations: 324
% Bw demodulations: 162
% Condensations: 275
% Global subsumptions: 4
% 
% Simple tautologies: 75
% Equational tautologies: 25
% Forward subsumptions: 2526
% Bw demodulations to eq. taut.: 5
% 
% Binary resolution: 91
% Forward superposition: 1407
% Backward superposition: 1275
% Self superposition: 127
% Equality factoring: 48
% Equality resolution: 4
% 
% Split clauses: 93
% Split components: 189
% SAT solver clauses: 594
% SAT solver unit clauses: 68
% SAT solver binary clauses: 36
% SAT solver learnt clauses: 10
% SAT solver learnt literals: 1
% 
% Sat splits: 93
% Sat splitting refutations: 17
% 
% TWLsolver clauses: 576
% TWLsolver calls for satisfiability: 327
% 
% Memory used [KB]: 4861
% Time elapsed: 0.172 s
% ------------------------------
% ------------------------------
% Success in time 0.787 s
