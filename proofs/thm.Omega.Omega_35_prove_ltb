Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.Omega
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.Omega
% SZS output start Proof for thm.Omega
fof(f2840,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2815,f598,f596,f246,f49,f79,f48,f81,f75,f2646,f2643,f50,f77,f76])).
fof(f76,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) | $spl1),
  inference(cnf_transformation,[],[f76_D])).
fof(f76_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f77,plain,(
  ( ! [X2] : (s('type.integer.int',sK1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',X2))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))))) ) | $spl2),
  inference(cnf_transformation,[],[f77_D])).
fof(f77_D,plain,(
  ( ! [X2] : (s('type.integer.int',sK1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',X2))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f50,plain,(
  ( ! [X2] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | s('type.integer.int',sK1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',X2))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) | (s('type.integer.int',sK1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK2)))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) | ! [X2] : (s('type.integer.int',sK1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',X2))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f40])).
fof(f40,plain,(
  ? [X0,X1] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ? [X3] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X3))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ! [X2] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))))))),
  inference(rectify,[],[f39])).
fof(f39,plain,(
  ? [X0,X1] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ? [X2] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ! [X2] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))))))),
  inference(nnf_transformation,[],[f35])).
fof(f35,plain,(
  ? [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <~> ? [X2] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ~! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> ? [X2] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) <=> ? [X8] : (s('type.integer.int',X7) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X8))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) <=> ? [X8] : (s('type.integer.int',X7) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X8))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8))))))),
  file('thm.Omega.Omega_35_prove_ltb','thm.Omega.Omega_35_prove_ltb')).
fof(f2643,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | $spl62),
  inference(cnf_transformation,[],[f2643_D])).
fof(f2643_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f2646,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | ($spl0 | $spl2 | $spl12)),
  inference(subsumption_resolution,[],[f2645,f51])).
fof(f51,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.Omega.Omega_35_prove_ltb',aHL_TRUTH)).
fof(f2645,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | ($spl0 | $spl2 | $spl12)),
  inference(forward_demodulation,[],[f2637,f596])).
fof(f2637,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) | s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | ($spl0 | $spl2)),
  inference(superposition,[],[f2618,f585])).
fof(f585,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(resolution,[],[f75,f138])).
fof(f138,plain,(
  ( ! [X8,X7] : (~p(s(bool,X7)) | s(bool,X7) = s(bool,X8) | s(bool,'F_0') = s(bool,X8)) )),
  inference(resolution,[],[f71,f61])).
fof(f61,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X13] : (s(bool,'F_0') = s(bool,X13) <=> ~p(s(bool,X13)))),
  file('thm.Omega.Omega_35_prove_ltb','thm.bool.EQ_CLAUSES|split|3')).
fof(f71,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X9,X10] : ((p(s(bool,X9)) => p(s(bool,X10))) => ((p(s(bool,X10)) => p(s(bool,X9))) => s(bool,X9) = s(bool,X10)))),
  file('thm.Omega.Omega_35_prove_ltb','thm.bool.IMP_ANTISYM_AX')).
fof(f2618,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0)))))) | $spl2),
  inference(equality_resolution,[],[f577])).
fof(f577,plain,(
  ( ! [X0] : (s('type.integer.int',sK1) != s('type.integer.int',X0) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',sK0))))))) ) | $spl2),
  inference(superposition,[],[f77,f66])).
fof(f66,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X12,X14] : s('type.integer.int',X12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X12),s('type.integer.int',X14)))))),
  file('thm.Omega.Omega_35_prove_ltb','thm.integer.INT_SUB_ADD2')).
fof(f75,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) | $spl0),
  inference(cnf_transformation,[],[f75_D])).
fof(f75_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f81,plain,(
  s('type.integer.int',sK1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) | $spl6),
  inference(cnf_transformation,[],[f81_D])).
fof(f81_D,plain,(
  s('type.integer.int',sK1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f48,plain,(
  s('type.integer.int',sK1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),
  inference(cnf_transformation,[],[f41])).
fof(f79,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK2)))) | $spl4),
  inference(cnf_transformation,[],[f79_D])).
fof(f79_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK2)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f49,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK2)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),
  inference(cnf_transformation,[],[f41])).
fof(f246,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f233,f84])).
fof(f84,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(resolution,[],[f60,f51])).
fof(f60,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f44])).
fof(f233,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl1 | $spl4 | $spl6)),
  inference(backward_demodulation,[],[f223,f86])).
fof(f86,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl1),
  inference(resolution,[],[f61,f76])).
fof(f223,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f210,f90])).
fof(f90,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK2))) | $spl4),
  inference(resolution,[],[f79,f57])).
fof(f57,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X13] : (s(bool,'T_0') = s(bool,X13) <=> p(s(bool,X13)))),
  file('thm.Omega.Omega_35_prove_ltb','thm.bool.EQ_CLAUSES|split|1')).
fof(f210,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK2))) | $spl6),
  inference(superposition,[],[f67,f81])).
fof(f67,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X12,X14] : s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X12),s('type.integer.int',X14)))))),
  file('thm.Omega.Omega_35_prove_ltb','thm.integer.INT_LT_ADDR')).
fof(f596,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl12),
  inference(cnf_transformation,[],[f596_D])).
fof(f596_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f598,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl0),
  inference(subsumption_resolution,[],[f593,f53])).
fof(f53,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.Omega.Omega_35_prove_ltb',aHL_FALSITY)).
fof(f593,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl0),
  inference(superposition,[],[f75,f55])).
fof(f55,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.Omega.Omega_35_prove_ltb',aHL_BOOL_CASES)).
fof(f2815,plain,(
  $false | ($spl12 | $spl62)),
  inference(subsumption_resolution,[],[f2814,f84])).
fof(f2814,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl12 | $spl62)),
  inference(forward_demodulation,[],[f2766,f596])).
fof(f2766,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl62),
  inference(superposition,[],[f211,f2643])).
fof(f211,plain,(
  ( ! [X2,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X1)))))) )),
  inference(superposition,[],[f67,f66])).
% SZS output end Proof for thm.Omega
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 62
% Passive clauses: 489
% Generated clauses: 2706
% Final active clauses: 43
% Final passive clauses: 321
% Input formulas: 16
% Initial clauses: 26
% 
% Duplicate literals: 187
% Trivial inequalities: 66
% Fw subsumption resolutions: 327
% Fw demodulations: 212
% Bw demodulations: 12
% 
% Simple tautologies: 108
% Equational tautologies: 34
% Forward subsumptions: 1197
% 
% Binary resolution: 82
% Factoring: 1
% Forward superposition: 747
% Backward superposition: 876
% Self superposition: 68
% Equality factoring: 64
% Equality resolution: 10
% 
% Split clauses: 78
% Split components: 156
% SAT solver clauses: 150
% SAT solver unit clauses: 17
% SAT solver binary clauses: 50
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 78
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 145
% TWLsolver calls for satisfiability: 40
% 
% Memory used [KB]: 1535
% Time elapsed: 0.065 s
% ------------------------------
% ------------------------------
% Success in time 0.066 s
