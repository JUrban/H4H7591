Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.util_prob
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.util_prob
% SZS output start Proof for thm.util_prob
fof(f499,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f483,f30,f49,f492,f31,f51,f47,f469,f32,f52,f50,f48])).
fof(f48,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) | $spl1),
  inference(cnf_transformation,[],[f48_D])).
fof(f48_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f50,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl3),
  inference(cnf_transformation,[],[f50_D])).
fof(f50_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f52,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | $spl5),
  inference(cnf_transformation,[],[f52_D])).
fof(f52_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f32,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))))),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f22])).
fof(f22,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) | (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))))))),
  inference(nnf_transformation,[],[f19])).
fof(f19,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) <~> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X8)))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X8)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X8)))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X8)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X8))))))),
  file('thm.util_prob.MAX_LE_X','thm.util_prob.MAX_LE_X')).
fof(f469,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f468,f33])).
fof(f33,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f9])).
fof(f9,axiom,(
  p(s(bool,'T_0'))),
  file('thm.util_prob.MAX_LE_X','thm.bool.TRUTH')).
fof(f468,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f467,f61])).
fof(f61,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | $spl2),
  inference(subsumption_resolution,[],[f57,f35])).
fof(f35,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f12])).
fof(f12,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.util_prob.MAX_LE_X',aHL_FALSITY)).
fof(f57,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | $spl2),
  inference(superposition,[],[f49,f36])).
fof(f36,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.util_prob.MAX_LE_X',aHL_BOOL_CASES)).
fof(f467,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f466,f33])).
fof(f466,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f455,f62])).
fof(f62,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2))) | $spl4),
  inference(subsumption_resolution,[],[f58,f35])).
fof(f58,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2))) | $spl4),
  inference(superposition,[],[f51,f36])).
fof(f455,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl1),
  inference(resolution,[],[f42,f48])).
fof(f42,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2)))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))))))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2)))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))))))),
  inference(nnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2)))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7,X6,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X9)))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X9)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X9))))))),
  file('thm.util_prob.MAX_LE_X','thm.arithmetic.MAX_LE|split|1')).
fof(f47,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) | $spl0),
  inference(cnf_transformation,[],[f47_D])).
fof(f47_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f51,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | $spl4),
  inference(cnf_transformation,[],[f51_D])).
fof(f51_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f31,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))))),
  inference(cnf_transformation,[],[f23])).
fof(f492,plain,(
  $false | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f482,f52])).
fof(f482,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | $spl0),
  inference(resolution,[],[f47,f41])).
fof(f41,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f27])).
fof(f49,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl2),
  inference(cnf_transformation,[],[f49_D])).
fof(f49_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f30,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))))),
  inference(cnf_transformation,[],[f23])).
fof(f483,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl0),
  inference(resolution,[],[f47,f40])).
fof(f40,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f27])).
% SZS output end Proof for thm.util_prob
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 33
% Passive clauses: 113
% Generated clauses: 459
% Final active clauses: 18
% Final passive clauses: 47
% Input formulas: 9
% Initial clauses: 16
% 
% Duplicate literals: 61
% Trivial inequalities: 3
% Fw subsumption resolutions: 57
% Fw demodulations: 3
% Bw demodulations: 8
% 
% Simple tautologies: 18
% Equational tautologies: 15
% Forward subsumptions: 162
% 
% Binary resolution: 40
% Forward superposition: 126
% Backward superposition: 74
% Self superposition: 24
% Equality factoring: 26
% 
% Split clauses: 20
% Split components: 41
% SAT solver clauses: 41
% SAT solver unit clauses: 2
% SAT solver binary clauses: 22
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 3
% 
% Sat splits: 20
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 37
% TWLsolver calls for satisfiability: 15
% 
% Memory used [KB]: 895
% Time elapsed: 0.021 s
% ------------------------------
% ------------------------------
% Success in time 0.026 s
