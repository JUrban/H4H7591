Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.powser
% (52269)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 63
% Passive clauses: 2441
% Generated clauses: 12198
% Final active clauses: 61
% Final passive clauses: 2334
% Input formulas: 17
% Initial clauses: 19
% 
% Duplicate literals: 833
% Trivial inequalities: 130
% Fw subsumption resolutions: 1441
% Fw demodulations: 502
% 
% Simple tautologies: 215
% Equational tautologies: 101
% Forward subsumptions: 5007
% 
% Binary resolution: 34
% Forward superposition: 4853
% Backward superposition: 3615
% Self superposition: 396
% Equality factoring: 283
% Equality resolution: 13
% 
% Split clauses: 524
% Split components: 1056
% SAT solver clauses: 1563
% SAT solver unit clauses: 278
% SAT solver binary clauses: 489
% 
% Sat splits: 524
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1559
% TWLsolver calls for satisfiability: 47
% 
% Memory used [KB]: 8827
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.powser
% (52311)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 43
% Passive clauses: 329
% Generated clauses: 5210
% Final active clauses: 40
% Final passive clauses: 283
% Input formulas: 17
% Initial clauses: 19
% 
% Duplicate literals: 771
% Trivial inequalities: 52
% Fw subsumption resolutions: 137
% Fw demodulations: 93
% Bw demodulations: 2
% Condensations: 1292
% 
% Simple tautologies: 92
% Equational tautologies: 60
% Forward subsumptions: 1738
% 
% Binary resolution: 16
% Forward superposition: 1395
% Backward superposition: 942
% Self superposition: 260
% Equality factoring: 174
% Equality resolution: 9
% 
% Split clauses: 27
% Split components: 54
% SAT solver clauses: 729
% SAT solver unit clauses: 32
% SAT solver binary clauses: 79
% 
% Sat splits: 27
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 729
% TWLsolver calls for satisfiability: 68
% 
% Memory used [KB]: 7419
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.powser
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.powser
% SZS output start Proof for thm.powser
fof(f3925,plain,(
  $false),
  inference(subsumption_resolution,[],[f3924,f73])).
fof(f73,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),X1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),X1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',X2),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) )),
  inference(forward_demodulation,[],[f72,f48])).
fof(f48,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X12] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X12))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X12)))),
  file('thm.powser.DIFFS_LEMMA2','ARITY_0_1_const.real.real_of_num')).
fof(f72,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),X1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),X1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X0))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',X2),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) )),
  inference(forward_demodulation,[],[f71,f55])).
fof(f55,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X12,X13] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X12),s('type.num.num',X13))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',X12))),s('type.num.num',X13)))),
  file('thm.powser.DIFFS_LEMMA2','ARITY_0_2_const.arithmetic.-')).
fof(f71,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),X1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),X1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X0))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) )),
  inference(forward_demodulation,[],[f70,f52])).
fof(f52,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num',X1))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1] : s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num',X1))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X12,X13] : s('type.realax.real','const.real.pow_2'(s('type.realax.real',X12),s('type.num.num',X13))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X12))),s('type.num.num',X13)))),
  file('thm.powser.DIFFS_LEMMA2','ARITY_1_2_const.real.pow')).
fof(f70,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),X1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),X1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X0))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X0))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) )),
  inference(forward_demodulation,[],[f69,f54])).
fof(f54,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',X0))),s('type.realax.real',X1)))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1] : s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',X0))),s('type.realax.real',X1)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X12,X13] : s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X12),s('type.realax.real',X13))) = s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',X12))),s('type.realax.real',X13)))),
  file('thm.powser.DIFFS_LEMMA2','ARITY_0_2_const.realax.real_mul')).
fof(f69,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),X1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),X1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X0))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X0))))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) )),
  inference(forward_demodulation,[],[f57,f54])).
fof(f57,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),X1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),X1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X0))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X0))))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2] : s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),X1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),X1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X0))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X0))))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7,X8] : s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),X7))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X8))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X8))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X6))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X7),s('type.num.num',X6))))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X8))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  file('thm.powser.DIFFS_LEMMA2','thm.powser.DIFFS_LEMMA')).
fof(f3924,plain,(
  s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),sK1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),sK1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',sK0))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK2),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(unit_resulting_resolution,[],[f68,f59])).
fof(f59,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real',X1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1,X2] : ((s('type.realax.real',X0) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2))) | s('type.realax.real',X1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2)))) & (s('type.realax.real',X1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2)))))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1,X2] : (s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2))) <=> s('type.realax.real',X1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X8,X10,X11] : (s('type.realax.real',X8) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X10),s('type.realax.real',X11))) <=> s('type.realax.real',X10) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X8),s('type.realax.real',X11))))),
  file('thm.powser.DIFFS_LEMMA2','thm.real.REAL_EQ_SUB_LADD')).
fof(f68,plain,(
  s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),sK1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),sK1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',sK0))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK2),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(backward_demodulation,[],[f55,f67])).
fof(f67,plain,(
  s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),sK1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),sK1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',sK0))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(forward_demodulation,[],[f66,f54])).
fof(f66,plain,(
  s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),sK1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),sK1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',sK0))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK0))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(backward_demodulation,[],[f54,f65])).
fof(f65,plain,(
  s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),sK1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),sK1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',sK0))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK0))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(backward_demodulation,[],[f52,f64])).
fof(f64,plain,(
  s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),sK1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),sK1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',sK0))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK0))))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(backward_demodulation,[],[f48,f44])).
fof(f44,plain,(
  s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),sK1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),sK1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',sK0))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK0))))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),sK1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),sK1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',sK0))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK0))))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',sK2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f38])).
fof(f38,plain,(
  ? [X0,X1,X2] : s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),X1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),X1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X0))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X0))))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(ennf_transformation,[],[f19])).
fof(f19,plain,(
  ~! [X0,X1,X2] : s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),X1),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),X1))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X0))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X0))))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X8))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),X7))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X8))))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X6))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X7),s('type.num.num',X6))))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X8))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),X7),s(fun('type.num.num','type.realax.real'),'_dst_x0x1_2'(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X8))),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))),s(fun('type.num.num','type.realax.real'),'_dst_x0x1x1_3'(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s(fun('type.num.num','type.realax.real'),'const.powser.diffs_1'(s(fun('type.num.num','type.realax.real'),X7))),s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X8))))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.real_of_num_0'),s('type.num.num',X6))))),s('type.realax.real',happ(s(fun('type.realax.real','type.realax.real'),happ(s(fun('type.realax.real',fun('type.realax.real','type.realax.real')),'const.realax.real_mul_0'),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X7),s('type.num.num',X6))))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),'const.real.pow_1'(s('type.realax.real',X8))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  file('thm.powser.DIFFS_LEMMA2','thm.powser.DIFFS_LEMMA2')).
% SZS output end Proof for thm.powser
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 32
% Passive clauses: 370
% Generated clauses: 3902
% Final active clauses: 30
% Final passive clauses: 237
% Input formulas: 17
% Initial clauses: 19
% 
% Duplicate literals: 649
% Trivial inequalities: 28
% Fw subsumption resolutions: 85
% Fw demodulations: 77
% Bw demodulations: 93
% Condensations: 1062
% 
% Simple tautologies: 59
% Equational tautologies: 73
% Forward subsumptions: 1509
% Fw demodulations to eq. taut.: 28
% Bw demodulations to eq. taut.: 8
% 
% Unit resulting resolution: 75
% Forward superposition: 719
% Backward superposition: 705
% Self superposition: 192
% Equality factoring: 150
% Equality resolution: 6
% 
% Split clauses: 23
% Split components: 46
% SAT solver clauses: 419
% SAT solver unit clauses: 68
% SAT solver binary clauses: 95
% 
% Sat splits: 23
% Sat splitting refutations: 1
% 
% Memory used [KB]: 4861
% Time elapsed: 0.505 s
% ------------------------------
% ------------------------------
% Success in time 1.828 s
