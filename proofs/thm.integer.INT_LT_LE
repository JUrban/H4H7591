Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f1271,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1257,f1037,f210,f329,f211,f331,f327,f217,f337,f339,f221,f338,f212,f332,f330,f328,f1053])).
fof(f1053,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f1044,f327])).
fof(f1044,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) | $spl3),
  inference(resolution,[],[f330,f289])).
fof(f289,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f198])).
fof(f198,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & s('type.integer.int',X0) != s('type.integer.int',X1)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(flattening,[],[f197])).
fof(f197,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1))) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & s('type.integer.int',X0) != s('type.integer.int',X1)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) | s('type.integer.int',X6) = s('type.integer.int',X7)))),
  file('thm.integer.INT_LT_LE','thm.integer.INT_LE_LT')).
fof(f328,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) | $spl1),
  inference(cnf_transformation,[],[f328_D])).
fof(f328_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f330,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) | $spl3),
  inference(cnf_transformation,[],[f330_D])).
fof(f330_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f332,plain,(
  s('type.integer.int',sK1) = s('type.integer.int',sK2) | $spl4),
  inference(cnf_transformation,[],[f332_D])).
fof(f332_D,plain,(
  s('type.integer.int',sK1) = s('type.integer.int',sK2) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f212,plain,(
  s('type.integer.int',sK1) = s('type.integer.int',sK2) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) & s('type.integer.int',sK1) != s('type.integer.int',sK2))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) | s('type.integer.int',sK1) = s('type.integer.int',sK2))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2])],[f164])).
fof(f164,plain,(
  ? [X0,X1] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & s('type.integer.int',X0) != s('type.integer.int',X1))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)))),
  inference(flattening,[],[f163])).
fof(f163,plain,(
  ? [X0,X1] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & s('type.integer.int',X0) != s('type.integer.int',X1))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1))))),
  inference(nnf_transformation,[],[f139])).
fof(f139,plain,(
  ? [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <~> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & s('type.integer.int',X0) != s('type.integer.int',X1)))),
  inference(ennf_transformation,[],[f60])).
fof(f60,plain,(
  ~! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & s('type.integer.int',X0) != s('type.integer.int',X1)))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ~! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & ~s('type.integer.int',X0) = s('type.integer.int',X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) & ~s('type.integer.int',X6) = s('type.integer.int',X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) & ~s('type.integer.int',X6) = s('type.integer.int',X7)))),
  file('thm.integer.INT_LT_LE','thm.integer.INT_LT_LE')).
fof(f338,plain,(
  ~p(s(bool,'F_0')) | $spl11),
  inference(cnf_transformation,[],[f338_D])).
fof(f338_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f221,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.integer.INT_LT_LE',aHL_FALSITY)).
fof(f339,plain,(
  p(s(bool,'T_0')) | $spl12),
  inference(cnf_transformation,[],[f339_D])).
fof(f339_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f337,plain,(
  p(s(bool,'F_0')) | $spl10),
  inference(cnf_transformation,[],[f337_D])).
fof(f337_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f217,plain,(
  p(s(bool,'F_0')) | p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f63])).
fof(f63,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f21])).
fof(f21,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.integer.INT_LT_LE','thm.bool.NOT_CLAUSES|split|1')).
fof(f327,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) | $spl0),
  inference(cnf_transformation,[],[f327_D])).
fof(f327_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f331,plain,(
  s('type.integer.int',sK1) != s('type.integer.int',sK2) | $spl5),
  inference(cnf_transformation,[],[f331_D])).
fof(f331_D,plain,(
  s('type.integer.int',sK1) != s('type.integer.int',sK2) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f211,plain,(
  s('type.integer.int',sK1) != s('type.integer.int',sK2) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))),
  inference(cnf_transformation,[],[f165])).
fof(f329,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) | $spl2),
  inference(cnf_transformation,[],[f329_D])).
fof(f329_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f210,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))),
  inference(cnf_transformation,[],[f165])).
fof(f1037,plain,(
  $false | ($spl1 | $spl2 | $spl5 | $spl11 | $spl12)),
  inference(subsumption_resolution,[],[f1036,f338])).
fof(f1036,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl2 | $spl5 | $spl12)),
  inference(forward_demodulation,[],[f1035,f357])).
fof(f357,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))) | $spl1),
  inference(resolution,[],[f236,f328])).
fof(f236,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f75])).
fof(f75,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.integer.INT_LT_LE','thm.bool.EQ_CLAUSES|split|3')).
fof(f1035,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) | ($spl2 | $spl5 | $spl12)),
  inference(subsumption_resolution,[],[f1034,f331])).
fof(f1034,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) | s('type.integer.int',sK1) = s('type.integer.int',sK2) | ($spl2 | $spl12)),
  inference(subsumption_resolution,[],[f1020,f339])).
fof(f1020,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))) | s('type.integer.int',sK1) = s('type.integer.int',sK2) | $spl2),
  inference(superposition,[],[f288,f349])).
fof(f349,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))) | $spl2),
  inference(resolution,[],[f232,f329])).
fof(f232,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.integer.INT_LT_LE','thm.bool.EQ_CLAUSES|split|1')).
fof(f288,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f198])).
fof(f1257,plain,(
  $false | ($spl0 | $spl4 | $spl11)),
  inference(subsumption_resolution,[],[f1233,f344])).
fof(f344,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(resolution,[],[f231,f338])).
fof(f231,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f169])).
fof(f1233,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl4)),
  inference(superposition,[],[f1185,f1077])).
fof(f1077,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK1))) | ($spl0 | $spl4)),
  inference(resolution,[],[f1054,f232])).
fof(f1054,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK1),s('type.integer.int',sK1)))) | ($spl0 | $spl4)),
  inference(backward_demodulation,[],[f332,f327])).
fof(f1185,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X2)))) )),
  inference(superposition,[],[f281,f469])).
fof(f469,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.integer.tint_lt_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) )),
  inference(resolution,[],[f275,f236])).
fof(f275,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.tint_lt_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X0))))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0] : ~p(s(bool,'const.integer.tint_lt_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X0))))),
  inference(flattening,[],[f95])).
fof(f95,plain,(
  ! [X0] : ~p(s(bool,'const.integer.tint_lt_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X0))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6] : ~p(s(bool,'const.integer.tint_lt_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X6))))),
  file('thm.integer.INT_LT_LE','thm.integer.TINT_LT_REFL')).
fof(f281,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.tint_lt_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.tint_lt_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X19,X20] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X19),s('type.integer.int',X20))) = s(bool,'const.integer.tint_lt_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X19))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X20)))))),
  file('thm.integer.INT_LT_LE','thm.integer.int_lt')).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 61
% Passive clauses: 231
% Generated clauses: 1044
% Final active clauses: 45
% Final passive clauses: 116
% Input formulas: 57
% Initial clauses: 113
% 
% Duplicate literals: 7
% Trivial inequalities: 20
% Fw subsumption resolutions: 77
% Fw demodulations: 206
% Bw demodulations: 11
% 
% Simple tautologies: 55
% Equational tautologies: 5
% Forward subsumptions: 462
% 
% Binary resolution: 117
% Factoring: 1
% Forward superposition: 264
% Backward superposition: 204
% Self superposition: 6
% Equality factoring: 2
% Equality resolution: 4
% 
% Split clauses: 20
% Split components: 41
% SAT solver clauses: 29
% SAT solver unit clauses: 4
% SAT solver binary clauses: 19
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 20
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 26
% TWLsolver calls for satisfiability: 7
% 
% Memory used [KB]: 1151
% Time elapsed: 0.028 s
% ------------------------------
% ------------------------------
% Success in time 0.032 s
