Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.quotient_option
% (65129)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 177
% Passive clauses: 3928
% Generated clauses: 25945
% Final active clauses: 140
% Final passive clauses: 3489
% Input formulas: 14
% Initial clauses: 18
% 
% Duplicate literals: 1341
% Trivial inequalities: 326
% Fw subsumption resolutions: 2766
% Fw demodulations: 3923
% Bw demodulations: 31
% 
% Simple tautologies: 368
% Equational tautologies: 44
% Forward subsumptions: 11909
% Fw demodulations to eq. taut.: 3
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 24
% Forward superposition: 9142
% Backward superposition: 7989
% Self superposition: 253
% Equality factoring: 115
% Equality resolution: 33
% 
% Split clauses: 692
% Split components: 1399
% SAT solver clauses: 1544
% SAT solver unit clauses: 7
% SAT solver binary clauses: 78
% 
% Sat splits: 692
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1524
% TWLsolver calls for satisfiability: 143
% 
% Memory used [KB]: 16119
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quotient_option
% (65148)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 66
% Passive clauses: 888
% Generated clauses: 8267
% Final active clauses: 56
% Final passive clauses: 658
% Input formulas: 14
% Initial clauses: 18
% 
% Duplicate literals: 705
% Trivial inequalities: 133
% Fw subsumption resolutions: 841
% Fw demodulations: 96
% Bw demodulations: 171
% Condensations: 1130
% 
% Simple tautologies: 140
% Equational tautologies: 52
% Forward subsumptions: 2742
% Fw demodulations to eq. taut.: 14
% 
% Binary resolution: 46
% Forward superposition: 2112
% Backward superposition: 1731
% Self superposition: 161
% Equality factoring: 116
% Equality resolution: 21
% 
% Split clauses: 77
% Split components: 160
% SAT solver clauses: 1540
% SAT solver unit clauses: 28
% SAT solver binary clauses: 39
% 
% Sat splits: 77
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1540
% TWLsolver calls for satisfiability: 91
% 
% Memory used [KB]: 7675
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quotient_option
% (65163)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 494
% Passive clauses: 18149
% Generated clauses: 100729
% Final active clauses: 102
% Final passive clauses: 992
% Input formulas: 14
% Initial clauses: 18
% Discarded non-redundant clauses: 3066
% 
% Duplicate literals: 5126
% Trivial inequalities: 1257
% Fw subsumption resolutions: 5145
% Fw demodulations: 6946
% Bw demodulations: 13311
% Condensations: 7933
% Global subsumptions: 111
% 
% Simple tautologies: 1198
% Equational tautologies: 504
% Forward subsumptions: 53117
% Fw demodulations to eq. taut.: 293
% Bw demodulations to eq. taut.: 919
% 
% Unit resulting resolution: 2105
% Forward superposition: 23975
% Backward superposition: 16401
% Self superposition: 377
% Equality factoring: 186
% Equality resolution: 93
% 
% Split clauses: 406
% Split components: 830
% SAT solver clauses: 19216
% SAT solver unit clauses: 127
% SAT solver binary clauses: 967
% 
% Sat splits: 406
% Sat splitting refutations: 141
% 
% Memory used [KB]: 53986
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.quotient_option
% (65437)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 569
% Passive clauses: 23349
% Generated clauses: 134470
% Final active clauses: 166
% Final passive clauses: 14736
% Input formulas: 14
% Initial clauses: 17
% 
% Selected by SInE selection: 13
% SInE iterations: 1
% 
% Duplicate literals: 4596
% Trivial inequalities: 2170
% Fw subsumption resolutions: 18886
% Fw demodulations: 20569
% Bw demodulations: 247
% 
% Simple tautologies: 1845
% Equational tautologies: 166
% Forward subsumptions: 57910
% Fw demodulations to eq. taut.: 170
% Bw demodulations to eq. taut.: 5
% 
% Binary resolution: 755
% Forward superposition: 39722
% Backward superposition: 42097
% Self superposition: 725
% Equality factoring: 419
% Equality resolution: 114
% 
% Split clauses: 5202
% Split components: 10475
% SAT solver clauses: 5331
% SAT solver unit clauses: 13
% SAT solver binary clauses: 89
% 
% Sat splits: 5202
% Sat splitting refutations: 81
% 
% Memory used [KB]: 57184
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 142 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.quotient_option
% (65554)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 91
% Passive clauses: 2362
% Generated clauses: 9412
% Final active clauses: 61
% Final passive clauses: 1768
% Input formulas: 14
% Initial clauses: 18
% 
% Duplicate literals: 290
% Trivial inequalities: 331
% Fw subsumption resolutions: 769
% Fw demodulations: 296
% Bw demodulations: 244
% Global subsumptions: 13
% 
% Simple tautologies: 252
% Equational tautologies: 63
% Forward subsumptions: 5004
% Fw demodulations to eq. taut.: 10
% Bw demodulations to eq. taut.: 7
% 
% Unit resulting resolution: 187
% Forward superposition: 3430
% Backward superposition: 3130
% Self superposition: 167
% Equality factoring: 34
% Equality resolution: 27
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 2406
% SAT solver unit clauses: 30
% SAT solver binary clauses: 162
% 
% Sat splits: 7
% Sat splitting refutations: 22
% 
% Memory used [KB]: 10490
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 135 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.quotient_option
% (65585)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 348
% Passive clauses: 3652
% Generated clauses: 26066
% Final active clauses: 160
% Final passive clauses: 1269
% Input formulas: 14
% Initial clauses: 18
% 
% Duplicate literals: 753
% Trivial inequalities: 897
% Fw subsumption resolutions: 1676
% Bw subsumption resolutions: 220
% Fw demodulations: 2580
% Bw demodulations: 330
% Condensations: 970
% Global subsumptions: 20
% 
% Simple tautologies: 621
% Equational tautologies: 37
% Forward subsumptions: 14613
% Backward subsumptions: 442
% Fw demodulations to eq. taut.: 68
% Bw demodulations to eq. taut.: 14
% 
% Binary resolution: 104
% Forward superposition: 9543
% Backward superposition: 7382
% Self superposition: 132
% Equality factoring: 95
% Equality resolution: 99
% 
% Split clauses: 9
% Split components: 18
% SAT solver clauses: 3724
% SAT solver unit clauses: 28
% SAT solver binary clauses: 450
% 
% Sat splits: 9
% Sat splitting refutations: 41
% 
% Memory used [KB]: 19445
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 119 next slice time: 9
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.quotient_option
% (65641)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 92
% Passive clauses: 1682
% Generated clauses: 8535
% Final active clauses: 70
% Final passive clauses: 1211
% Input formulas: 14
% Initial clauses: 18
% 
% Duplicate literals: 8
% Trivial inequalities: 61
% Fw demodulations: 1896
% Bw demodulations: 170
% Global subsumptions: 27
% 
% Simple tautologies: 24
% Equational tautologies: 7
% Forward subsumptions: 4545
% Backward subsumptions: 31
% Fw demodulations to eq. taut.: 120
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 3
% Unit resulting resolution: 156
% Forward superposition: 2663
% Backward superposition: 3190
% Self superposition: 95
% Equality factoring: 2
% Equality resolution: 19
% 
% Split clauses: 13
% Split components: 26
% SAT solver clauses: 1916
% SAT solver unit clauses: 8
% SAT solver binary clauses: 254
% 
% Sat splits: 13
% Sat splitting refutations: 4
% 
% Memory used [KB]: 26993
% Time elapsed: 1.0000 s
% ------------------------------
% ------------------------------
% remaining time: 109 next slice time: 85
lrs+1_5:4_cond=on:fsr=off:fde=none:gs=on:gsem=on:lwlo=on:nm=64:nwc=1:stl=60:sos=all:spl=off_80 on thm.quotient_option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quotient_option
% SZS output start Proof for thm.quotient_option
fof(f12241,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f12228])).
fof(f12228,plain,(
  s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),sK10))) != s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),sK10)))),
  inference(superposition,[],[f12210,f298])).
fof(f298,plain,(
  s('type.option.option'(sK3),sK10) = s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,sK12(sK10,sK3))))),
  inference(trivial_inequality_removal,[],[f293])).
fof(f293,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.NONE_0') | s('type.option.option'(sK3),sK10) = s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,sK12(sK10,sK3))))),
  inference(superposition,[],[f136,f57])).
fof(f57,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0,X1] : ! [X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X8,X6] : ! [X17] : s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X8,X6),X17),s('type.option.option'(X8),'const.option.NONE_0')))),
  file('thm.quotient_option.OPTION_MAP_PRS','thm.option.OPTION_MAP_DEF|split|1')).
fof(f136,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK8),s('type.option.option'(sK0),'const.option.NONE_0'))) | s('type.option.option'(sK3),sK10) = s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,sK12(sK10,sK3))))),
  inference(forward_demodulation,[],[f135,f57])).
fof(f135,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK8),s('type.option.option'(sK0),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK3,sK1),sK11),s('type.option.option'(sK3),'const.option.NONE_0'))) | s('type.option.option'(sK3),sK10) = s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,sK12(sK10,sK3))))),
  inference(forward_demodulation,[],[f134,f57])).
fof(f134,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK3,sK1),sK11),s('type.option.option'(sK3),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK8),s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK2,sK0),'const.quotient.-->_3'(s(fun(sK2,sK3),sK5),s(fun(sK1,sK0),sK9),s(fun(sK3,sK1),sK11))),s('type.option.option'(sK2),'const.option.NONE_0'))))) | s('type.option.option'(sK3),sK10) = s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,sK12(sK10,sK3))))),
  inference(forward_demodulation,[],[f122,f57])).
fof(f122,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK3,sK1),sK11),s('type.option.option'(sK3),'const.option.NONE_0'))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK8),s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK2,sK0),'const.quotient.-->_3'(s(fun(sK2,sK3),sK5),s(fun(sK1,sK0),sK9),s(fun(sK3,sK1),sK11))),s('type.option.option'(sK2),'const.option.OPTION_MAP_2'(s(fun(sK3,sK2),sK6),s('type.option.option'(sK3),'const.option.NONE_0'))))))) | s('type.option.option'(sK3),sK10) = s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,sK12(sK10,sK3))))),
  inference(superposition,[],[f47,f52])).
fof(f52,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK12(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK12(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12])],[f20])).
fof(f20,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X8] : ! [X19] : (s('type.option.option'(X8),'const.option.NONE_0') = s('type.option.option'(X8),X19) | ? [X18] : s('type.option.option'(X8),X19) = s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X18))))),
  file('thm.quotient_option.OPTION_MAP_PRS','thm.option.option_nchotomy')).
fof(f47,plain,(
  s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK3,sK1),sK11),s('type.option.option'(sK3),sK10))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK8),s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK2,sK0),'const.quotient.-->_3'(s(fun(sK2,sK3),sK5),s(fun(sK1,sK0),sK9),s(fun(sK3,sK1),sK11))),s('type.option.option'(sK2),'const.option.OPTION_MAP_2'(s(fun(sK3,sK2),sK6),s('type.option.option'(sK3),sK10)))))))),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK2,fun(sK2,bool)),sK4),s(fun(sK2,sK3),sK5),s(fun(sK3,sK2),sK6)))) & (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK0,fun(sK0,bool)),sK7),s(fun(sK0,sK1),sK8),s(fun(sK1,sK0),sK9)))) & s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK3,sK1),sK11),s('type.option.option'(sK3),sK10))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK8),s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK2,sK0),'const.quotient.-->_3'(s(fun(sK2,sK3),sK5),s(fun(sK1,sK0),sK9),s(fun(sK3,sK1),sK11))),s('type.option.option'(sK2),'const.option.OPTION_MAP_2'(s(fun(sK3,sK2),sK6),s('type.option.option'(sK3),sK10))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11])],[f37])).
fof(f37,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X2,fun(X2,bool)),X4),s(fun(X2,X3),X5),s(fun(X3,X2),X6)))) & ? [X7,X8,X9] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X7),s(fun(X0,X1),X8),s(fun(X1,X0),X9)))) & ? [X10,X11] : s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X3,X1),X11),s('type.option.option'(X3),X10))) != s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X8),s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X2,X0),'const.quotient.-->_3'(s(fun(X2,X3),X5),s(fun(X1,X0),X9),s(fun(X3,X1),X11))),s('type.option.option'(X2),'const.option.OPTION_MAP_2'(s(fun(X3,X2),X6),s('type.option.option'(X3),X10)))))))))),
  inference(ennf_transformation,[],[f17])).
fof(f17,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X2,fun(X2,bool)),X4),s(fun(X2,X3),X5),s(fun(X3,X2),X6)))) => ! [X7,X8,X9] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X7),s(fun(X0,X1),X8),s(fun(X1,X0),X9)))) => ! [X10,X11] : s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X3,X1),X11),s('type.option.option'(X3),X10))) = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X8),s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X2,X0),'const.quotient.-->_3'(s(fun(X2,X3),X5),s(fun(X1,X0),X9),s(fun(X3,X1),X11))),s('type.option.option'(X2),'const.option.OPTION_MAP_2'(s(fun(X3,X2),X6),s('type.option.option'(X3),X10)))))))))),
  inference(flattening,[],[f16])).
fof(f16,plain,(
  ~! [X0,X1,X2,X3] : ! [X4,X5,X6] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X2,fun(X2,bool)),X4),s(fun(X2,X3),X5),s(fun(X3,X2),X6)))) => ! [X7,X8,X9] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X7),s(fun(X0,X1),X8),s(fun(X1,X0),X9)))) => ! [X10,X11] : s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X3,X1),X11),s('type.option.option'(X3),X10))) = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X8),s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X2,X0),'const.quotient.-->_3'(s(fun(X2,X3),X5),s(fun(X1,X0),X9),s(fun(X3,X1),X11))),s('type.option.option'(X2),'const.option.OPTION_MAP_2'(s(fun(X3,X2),X6),s('type.option.option'(X3),X10)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : ! [X10,X11,X12] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X8,fun(X8,bool)),X10),s(fun(X8,X9),X11),s(fun(X9,X8),X12)))) => ! [X13,X14,X15] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X6,fun(X6,bool)),X13),s(fun(X6,X7),X14),s(fun(X7,X6),X15)))) => ! [X16,X17] : s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X9,X7),X17),s('type.option.option'(X9),X16))) = s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X6,X7),X14),s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X8,X6),'const.quotient.-->_3'(s(fun(X8,X9),X11),s(fun(X7,X6),X15),s(fun(X9,X7),X17))),s('type.option.option'(X8),'const.option.OPTION_MAP_2'(s(fun(X9,X8),X12),s('type.option.option'(X9),X16)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : ! [X10,X11,X12] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X8,fun(X8,bool)),X10),s(fun(X8,X9),X11),s(fun(X9,X8),X12)))) => ! [X13,X14,X15] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X6,fun(X6,bool)),X13),s(fun(X6,X7),X14),s(fun(X7,X6),X15)))) => ! [X16,X17] : s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X9,X7),X17),s('type.option.option'(X9),X16))) = s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X6,X7),X14),s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X8,X6),'const.quotient.-->_3'(s(fun(X8,X9),X11),s(fun(X7,X6),X15),s(fun(X9,X7),X17))),s('type.option.option'(X8),'const.option.OPTION_MAP_2'(s(fun(X9,X8),X12),s('type.option.option'(X9),X16)))))))))),
  file('thm.quotient_option.OPTION_MAP_PRS','thm.quotient_option.OPTION_MAP_PRS')).
fof(f12210,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),sK10))) != s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,X0)))))) )),
  inference(trivial_inequality_removal,[],[f12209])).
fof(f12209,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(sK3,sK1),sK11),s(sK3,X0))))) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(sK3,sK1),sK11),s(sK3,X0))))) | s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),sK10))) != s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,X0)))))) )),
  inference(forward_demodulation,[],[f12208,f201])).
fof(f201,plain,(
  ( ! [X4,X2,X3] : (s(sK1,happ(s(fun(X2,sK1),X3),s(X2,X4))) = s(sK1,'const.quotient.-->_4'(s(fun(X2,sK1),X3),s(fun(sK0,sK1),sK8),s(fun(sK1,sK0),sK9),s(X2,X4)))) )),
  inference(superposition,[],[f81,f62])).
fof(f62,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X0,'const.quotient.-->_4'(s(fun(X3,X2),X4),s(fun(X1,X0),X5),s(fun(X2,X1),X6),s(X3,X7))) = s(X0,happ(s(fun(X1,X0),X5),s(X1,happ(s(fun(X2,X1),X6),s(X2,happ(s(fun(X3,X2),X4),s(X3,X7)))))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,'const.quotient.-->_4'(s(fun(X3,X2),X4),s(fun(X1,X0),X5),s(fun(X2,X1),X6),s(X3,X7))) = s(X0,happ(s(fun(X1,X0),X5),s(X1,happ(s(fun(X2,X1),X6),s(X2,happ(s(fun(X3,X2),X4),s(X3,X7)))))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6,X7] : s(X0,'const.quotient.-->_4'(s(fun(X3,X2),X4),s(fun(X1,X0),X5),s(fun(X2,X1),X6),s(X3,X7))) = s(X0,happ(s(fun(X1,X0),X5),s(X1,happ(s(fun(X2,X1),X6),s(X2,happ(s(fun(X3,X2),X4),s(X3,X7)))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7,X6,X9,X8] : ! [X17,X24,X25,X18] : s(X7,'const.quotient.-->_4'(s(fun(X8,X9),X17),s(fun(X6,X7),X24),s(fun(X9,X6),X25),s(X8,X18))) = s(X7,happ(s(fun(X6,X7),X24),s(X6,happ(s(fun(X9,X6),X25),s(X9,happ(s(fun(X8,X9),X17),s(X8,X18)))))))),
  file('thm.quotient_option.OPTION_MAP_PRS','thm.quotient.FUN_MAP_THM')).
fof(f81,plain,(
  ( ! [X0] : (s(sK1,X0) = s(sK1,happ(s(fun(sK0,sK1),sK8),s(sK0,happ(s(fun(sK1,sK0),sK9),s(sK1,X0)))))) )),
  inference(resolution,[],[f46,f60])).
fof(f60,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,X5) = s(X1,happ(s(fun(X0,X1),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))) | ~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | ! [X5] : s(X1,X5) = s(X1,happ(s(fun(X0,X1),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))))),
  inference(ennf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5] : s(X1,X5) = s(X1,happ(s(fun(X0,X1),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5] : s(X1,X5) = s(X1,happ(s(fun(X0,X1),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X8,X6] : ! [X21,X22,X23] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X8,fun(X8,bool)),X21),s(fun(X8,X6),X22),s(fun(X6,X8),X23)))) => ! [X16] : s(X6,X16) = s(X6,happ(s(fun(X8,X6),X22),s(X8,happ(s(fun(X6,X8),X23),s(X6,X16))))))),
  file('thm.quotient_option.OPTION_MAP_PRS','thm.quotient.QUOTIENT_ABS_REP')).
fof(f46,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK0,fun(sK0,bool)),sK7),s(fun(sK0,sK1),sK8),s(fun(sK1,sK0),sK9))))),
  inference(cnf_transformation,[],[f40])).
fof(f12208,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(sK3,sK1),sK11),s(sK3,X0))))) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,'const.quotient.-->_4'(s(fun(sK3,sK1),sK11),s(fun(sK0,sK1),sK8),s(fun(sK1,sK0),sK9),s(sK3,X0))))) | s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),sK10))) != s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,X0)))))) )),
  inference(forward_demodulation,[],[f12168,f62])).
fof(f12168,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(sK3,sK1),sK11),s(sK3,X0))))) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(sK0,sK1),sK8),s(sK0,happ(s(fun(sK1,sK0),sK9),s(sK1,happ(s(fun(sK3,sK1),sK11),s(sK3,X0))))))))) | s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),sK10))) != s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,X0)))))) )),
  inference(superposition,[],[f1059,f58])).
fof(f58,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X8] : ! [X17,X18] : s('type.option.option'(X6),'const.option.SOME_1'(s(X6,happ(s(fun(X8,X6),X17),s(X8,X18))))) = s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X8,X6),X17),s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X18)))))),
  file('thm.quotient_option.OPTION_MAP_PRS','thm.option.OPTION_MAP_DEF|split|0')).
fof(f1059,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(sK3,sK1),sK11),s(sK3,X0))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK8),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK1,sK0),sK9),s(sK1,happ(s(fun(sK3,sK1),sK11),s(sK3,X0))))))))) | s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),sK10))) != s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,X0)))))) )),
  inference(forward_demodulation,[],[f1058,f58])).
fof(f1058,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK3,sK1),sK11),s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,X0))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK8),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK1,sK0),sK9),s(sK1,happ(s(fun(sK3,sK1),sK11),s(sK3,X0))))))))) | s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),sK10))) != s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,X0)))))) )),
  inference(forward_demodulation,[],[f1057,f163])).
fof(f163,plain,(
  ( ! [X10,X8,X7,X11,X9] : (s(X8,happ(s(fun(X9,X8),X10),s(X9,happ(s(fun(sK3,X9),X11),s(sK3,X7))))) = s(X8,'const.quotient.-->_4'(s(fun(sK2,sK3),sK5),s(fun(X9,X8),X10),s(fun(sK3,X9),X11),s(sK2,happ(s(fun(sK3,sK2),sK6),s(sK3,X7)))))) )),
  inference(superposition,[],[f62,f64])).
fof(f64,plain,(
  ( ! [X0] : (s(sK3,X0) = s(sK3,happ(s(fun(sK2,sK3),sK5),s(sK2,happ(s(fun(sK3,sK2),sK6),s(sK3,X0)))))) )),
  inference(resolution,[],[f45,f60])).
fof(f45,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK2,fun(sK2,bool)),sK4),s(fun(sK2,sK3),sK5),s(fun(sK3,sK2),sK6))))),
  inference(cnf_transformation,[],[f40])).
fof(f1057,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK3,sK1),sK11),s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,X0))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK8),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,'const.quotient.-->_4'(s(fun(sK2,sK3),sK5),s(fun(sK1,sK0),sK9),s(fun(sK3,sK1),sK11),s(sK2,happ(s(fun(sK3,sK2),sK6),s(sK3,X0))))))))) | s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),sK10))) != s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,X0)))))) )),
  inference(forward_demodulation,[],[f1056,f61])).
fof(f61,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X0,'const.quotient.-->_4'(s(fun(X3,X1),X4),s(fun(X2,X0),X5),s(fun(X1,X2),X6),s(X3,X7))) = s(X0,happ(s(fun(X3,X0),'const.quotient.-->_3'(s(fun(X3,X1),X4),s(fun(X2,X0),X5),s(fun(X1,X2),X6))),s(X3,X7)))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,'const.quotient.-->_4'(s(fun(X3,X1),X4),s(fun(X2,X0),X5),s(fun(X1,X2),X6),s(X3,X7))) = s(X0,happ(s(fun(X3,X0),'const.quotient.-->_3'(s(fun(X3,X1),X4),s(fun(X2,X0),X5),s(fun(X1,X2),X6))),s(X3,X7)))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6,X7] : s(X0,'const.quotient.-->_4'(s(fun(X3,X1),X4),s(fun(X2,X0),X5),s(fun(X1,X2),X6),s(X3,X7))) = s(X0,happ(s(fun(X3,X0),'const.quotient.-->_3'(s(fun(X3,X1),X4),s(fun(X2,X0),X5),s(fun(X1,X2),X6))),s(X3,X7)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7,X9,X6,X8] : ! [X26,X27,X28,X29] : s(X7,'const.quotient.-->_4'(s(fun(X8,X9),X26),s(fun(X6,X7),X27),s(fun(X9,X6),X28),s(X8,X29))) = s(X7,happ(s(fun(X8,X7),'const.quotient.-->_3'(s(fun(X8,X9),X26),s(fun(X6,X7),X27),s(fun(X9,X6),X28))),s(X8,X29)))),
  file('thm.quotient_option.OPTION_MAP_PRS','ARITY_3_4_const.quotient.-->')).
fof(f1056,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK3,sK1),sK11),s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,X0))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK8),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK2,sK0),'const.quotient.-->_3'(s(fun(sK2,sK3),sK5),s(fun(sK1,sK0),sK9),s(fun(sK3,sK1),sK11))),s(sK2,happ(s(fun(sK3,sK2),sK6),s(sK3,X0))))))))) | s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),sK10))) != s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,X0)))))) )),
  inference(forward_demodulation,[],[f1018,f58])).
fof(f1018,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK3,sK1),sK11),s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,X0))))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK8),s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK2,sK0),'const.quotient.-->_3'(s(fun(sK2,sK3),sK5),s(fun(sK1,sK0),sK9),s(fun(sK3,sK1),sK11))),s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,happ(s(fun(sK3,sK2),sK6),s(sK3,X0))))))))) | s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),sK10))) != s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),'const.option.SOME_1'(s(sK3,X0)))))) )),
  inference(superposition,[],[f123,f58])).
fof(f123,plain,(
  ( ! [X0] : (s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK3,sK1),sK11),s('type.option.option'(sK3),X0))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK8),s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK2,sK0),'const.quotient.-->_3'(s(fun(sK2,sK3),sK5),s(fun(sK1,sK0),sK9),s(fun(sK3,sK1),sK11))),s('type.option.option'(sK2),'const.option.OPTION_MAP_2'(s(fun(sK3,sK2),sK6),s('type.option.option'(sK3),X0))))))) | s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),sK10))) != s('type.option.option'('type.option.option'(sK3)),'const.option.SOME_1'(s('type.option.option'(sK3),X0)))) )),
  inference(superposition,[],[f47,f55])).
fof(f55,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1,X2] : ((s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))))),
  inference(nnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ! [X0] : ! [X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X8] : ! [X18,X20] : (s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X18))) = s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X20))) <=> s(X8,X18) = s(X8,X20))),
  file('thm.quotient_option.OPTION_MAP_PRS','thm.option.SOME_|49||49|')).
% SZS output end Proof for thm.quotient_option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 295
% Passive clauses: 4247
% Generated clauses: 12084
% Final active clauses: 288
% Final passive clauses: 3934
% Input formulas: 14
% Initial clauses: 18
% 
% Duplicate literals: 178
% Trivial inequalities: 207
% Fw demodulations: 2042
% Bw demodulations: 31
% Condensations: 8
% Global subsumptions: 37
% 
% Simple tautologies: 121
% Equational tautologies: 3
% Forward subsumptions: 5227
% Fw demodulations to eq. taut.: 11
% Bw demodulations to eq. taut.: 8
% 
% Binary resolution: 27
% Forward superposition: 7635
% Backward superposition: 1772
% Self superposition: 28
% Equality resolution: 142
% 
% SAT solver clauses: 4414
% SAT solver unit clauses: 124
% SAT solver binary clauses: 866
% SAT solver learnt clauses: 74
% SAT solver learnt literals: 178
% 
% TWLsolver clauses: 4284
% TWLsolver calls for satisfiability: 69885
% 
% Memory used [KB]: 25969
% Time elapsed: 1.069 s
% ------------------------------
% ------------------------------
% Success in time 20.119 s
