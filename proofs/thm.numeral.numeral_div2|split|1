Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numeral
% (52333)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 682
% Passive clauses: 9795
% Generated clauses: 22626
% Final active clauses: 605
% Final passive clauses: 8560
% Input formulas: 65
% Initial clauses: 199
% 
% Duplicate literals: 274
% Trivial inequalities: 97
% Fw subsumption resolutions: 1623
% Fw demodulations: 992
% Bw demodulations: 75
% 
% Simple tautologies: 207
% Equational tautologies: 66
% Forward subsumptions: 9220
% Fw demodulations to eq. taut.: 18
% 
% Binary resolution: 10243
% Factoring: 1002
% Forward superposition: 3444
% Backward superposition: 4385
% Self superposition: 58
% Equality factoring: 26
% Equality resolution: 31
% 
% Split clauses: 402
% Split components: 805
% SAT solver clauses: 710
% SAT solver unit clauses: 10
% SAT solver binary clauses: 105
% 
% Sat splits: 402
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 708
% TWLsolver calls for satisfiability: 353
% 
% Memory used [KB]: 11385
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.numeral
% (52377)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 404
% Passive clauses: 2496
% Generated clauses: 12986
% Final active clauses: 403
% Final passive clauses: 2056
% Input formulas: 65
% Initial clauses: 199
% 
% Duplicate literals: 184
% Trivial inequalities: 11
% Fw subsumption resolutions: 864
% Fw demodulations: 577
% Bw demodulations: 35
% Condensations: 215
% Global subsumptions: 14
% 
% Simple tautologies: 217
% Equational tautologies: 24
% Forward subsumptions: 5579
% Fw demodulations to eq. taut.: 18
% 
% Binary resolution: 3492
% Factoring: 344
% Forward superposition: 2166
% Backward superposition: 2346
% Self superposition: 61
% Equality factoring: 26
% Equality resolution: 4
% 
% Split clauses: 92
% Split components: 184
% SAT solver clauses: 3015
% SAT solver unit clauses: 233
% SAT solver binary clauses: 72
% SAT solver learnt clauses: 28
% SAT solver learnt literals: 12
% 
% Sat splits: 92
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 2959
% TWLsolver calls for satisfiability: 1879
% 
% Memory used [KB]: 14072
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f135333,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f134689])).
fof(f134689,plain,(
  s('type.num.num',sK13) != s('type.num.num',sK13)),
  inference(superposition,[],[f495,f124737])).
fof(f124737,plain,(
  ( ! [X2] : (s('type.num.num',X2) = s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f124113,f8349])).
fof(f8349,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f2440,f1532])).
fof(f1532,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f499,f360])).
fof(f360,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X8,X6] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X6)))),
  file('thm.numeral.numeral_div2|split|1','thm.arithmetic.MULT_SYM')).
fof(f499,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f304,f295])).
fof(f295,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))),
  file('thm.numeral.numeral_div2|split|1','thm.arithmetic.NUMERAL_DEF')).
fof(f304,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6)))),
  file('thm.numeral.numeral_div2|split|1','thm.arithmetic.TIMES2')).
fof(f2440,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) )),
  inference(superposition,[],[f2366,f363])).
fof(f363,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6,X8] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))),
  file('thm.numeral.numeral_div2|split|1','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f2366,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f2365,f501])).
fof(f501,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f500,f289])).
fof(f289,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f42])).
fof(f42,axiom,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.numeral.numeral_div2|split|1','thm.numeral.numeral_suc|split|0')).
fof(f500,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f305,f288])).
fof(f288,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.numeral.numeral_div2|split|1','thm.arithmetic.ALT_ZERO')).
fof(f305,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.numeral.numeral_div2|split|1','thm.arithmetic.BIT|49|')).
fof(f2365,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f2298,f497])).
fof(f497,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f297,f288])).
fof(f297,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')))),
  file('thm.numeral.numeral_div2|split|1','thm.arithmetic.ADD_|48|')).
fof(f2298,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f363,f289])).
fof(f124113,plain,(
  ( ! [X2] : (s('type.num.num',X2) = s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f81230,f498])).
fof(f498,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f303,f295])).
fof(f303,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.numeral.numeral_div2|split|1','thm.arithmetic.DIV2_def')).
fof(f81230,plain,(
  ( ! [X6,X7] : (s('type.num.num',X6) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f81229,f497])).
fof(f81229,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f80637,f30041])).
fof(f30041,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))))) )),
  inference(subsumption_resolution,[],[f29981,f286])).
fof(f286,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.numeral.numeral_div2|split|1',aHL_TRUTH)).
fof(f29981,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f512,f29825])).
fof(f29825,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f29824,f1746])).
fof(f1746,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f1677,f498])).
fof(f1677,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f1676,f299])).
fof(f299,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))),
  file('thm.numeral.numeral_div2|split|1','thm.numeral.numeral_suc|split|1')).
fof(f1676,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) )),
  inference(subsumption_resolution,[],[f1675,f286])).
fof(f1675,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) )),
  inference(forward_demodulation,[],[f1657,f300])).
fof(f300,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X6] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))))),
  file('thm.numeral.numeral_div2|split|1','thm.numeral.numeral_lt|split|1')).
fof(f1657,plain,(
  ( ! [X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) )),
  inference(superposition,[],[f506,f299])).
fof(f506,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f505,f288])).
fof(f505,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f309,f288])).
fof(f309,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f155])).
fof(f155,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))))),
  file('thm.numeral.numeral_div2|split|1','thm.arithmetic.ZERO_DIV')).
fof(f29824,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(subsumption_resolution,[],[f29823,f493])).
fof(f493,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f291,f286])).
fof(f291,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f202])).
fof(f202,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f68])).
fof(f68,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f30])).
fof(f30,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.numeral.numeral_div2|split|1','thm.bool.NOT_CLAUSES|split|1')).
fof(f29823,plain,(
  ( ! [X2] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f29695,f298])).
fof(f298,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X6] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.numeral.numeral_div2|split|1','thm.numeral.numeral_lt|split|2')).
fof(f29695,plain,(
  ( ! [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f3121,f1746])).
fof(f3121,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(subsumption_resolution,[],[f3086,f493])).
fof(f3086,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f372,f307])).
fof(f307,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.numeral.numeral_div2|split|1',aHL_BOOL_CASES)).
fof(f372,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f233])).
fof(f233,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f132])).
fof(f132,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X6,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X6)))))),
  file('thm.numeral.numeral_div2|split|1','thm.numeral.numeral_lt|split|5')).
fof(f512,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(forward_demodulation,[],[f366,f288])).
fof(f366,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',X1))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f166])).
fof(f166,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',X1))))),
  inference(ennf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) => s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',X1))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X10,X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',X6)))) => s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X10),s('type.num.num',X6))))),
  file('thm.numeral.numeral_div2|split|1','thm.arithmetic.LESS_DIV_EQ_ZERO')).
fof(f80637,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f8017,f2365])).
fof(f8017,plain,(
  ( ! [X8,X7,X9] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))),s('type.num.num',X9))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f8016,f299])).
fof(f8016,plain,(
  ( ! [X8,X7,X9] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))))),s('type.num.num',X9))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))))) )),
  inference(subsumption_resolution,[],[f8015,f286])).
fof(f8015,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))))),s('type.num.num',X9))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))))) )),
  inference(forward_demodulation,[],[f7976,f300])).
fof(f7976,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))))),s('type.num.num',X9))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))))) )),
  inference(superposition,[],[f511,f299])).
fof(f511,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X2),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f312,f288])).
fof(f312,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X2),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))),s('type.num.num',X0))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ! [X1,X2] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X2),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => ! [X1,X2] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X2),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))),s('type.num.num',X0))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => ! [X7,X10] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X10),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X10))),s('type.num.num',X6))))),
  file('thm.numeral.numeral_div2|split|1','thm.arithmetic.ADD_DIV_ADD_DIV')).
fof(f495,plain,(
  s('type.num.num',sK13) != s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK13)))))),
  inference(forward_demodulation,[],[f494,f295])).
fof(f494,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))) != s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK13)))))),
  inference(backward_demodulation,[],[f295,f285])).
fof(f285,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))) != s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK13)))))))),
  inference(cnf_transformation,[],[f201])).
fof(f201,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))) != s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK13)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13])],[f152])).
fof(f152,plain,(
  ? [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(ennf_transformation,[],[f67])).
fof(f67,plain,(
  ~! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))))),
  file('thm.numeral.numeral_div2|split|1','thm.numeral.numeral_div2|split|1')).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 993
% Passive clauses: 4803
% Generated clauses: 135145
% Final active clauses: 877
% Final passive clauses: 3201
% Input formulas: 65
% Initial clauses: 199
% 
% Duplicate literals: 536
% Trivial inequalities: 32
% Fw subsumption resolutions: 2232
% Fw demodulations: 44725
% Bw demodulations: 594
% Condensations: 536
% Global subsumptions: 99
% 
% Simple tautologies: 63
% Equational tautologies: 181
% Forward subsumptions: 80478
% Fw demodulations to eq. taut.: 135
% Bw demodulations to eq. taut.: 27
% 
% Unit resulting resolution: 4122
% Forward superposition: 45086
% Backward superposition: 36292
% Self superposition: 182
% Equality factoring: 30
% Equality resolution: 3
% 
% Split clauses: 177
% Split components: 359
% SAT solver clauses: 5762
% SAT solver unit clauses: 1431
% SAT solver binary clauses: 1885
% 
% Sat splits: 177
% Sat splitting refutations: 504
% 
% Memory used [KB]: 80595
% Time elapsed: 3.709 s
% ------------------------------
% ------------------------------
% Success in time 5.031 s
