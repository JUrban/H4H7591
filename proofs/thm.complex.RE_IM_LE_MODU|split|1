Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.complex
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.complex
% SZS output start Proof for thm.complex
fof(f448,plain,(
  $false),
  inference(subsumption_resolution,[],[f442,f39])).
fof(f39,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.complex.RE_IM_LE_MODU|split|1',aHL_FALSITY)).
fof(f442,plain,(
  p(s(bool,'F_0'))),
  inference(superposition,[],[f435,f249])).
fof(f249,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.abs_1'(s('type.realax.real','const.complex.IM_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))))),s('type.realax.real','const.complex.modu_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0)))))),
  inference(resolution,[],[f36,f47])).
fof(f47,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7] : (s(bool,'F_0') = s(bool,X7) <=> ~p(s(bool,X7)))),
  file('thm.complex.RE_IM_LE_MODU|split|1','thm.bool.EQ_CLAUSES|split|2')).
fof(f36,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.abs_1'(s('type.realax.real','const.complex.IM_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))))),s('type.realax.real','const.complex.modu_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))))))),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.abs_1'(s('type.realax.real','const.complex.IM_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))))),s('type.realax.real','const.complex.modu_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f28])).
fof(f28,plain,(
  ? [X0] : ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.abs_1'(s('type.realax.real','const.complex.IM_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))))),s('type.realax.real','const.complex.modu_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))))))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0] : p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.abs_1'(s('type.realax.real','const.complex.IM_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))))),s('type.realax.real','const.complex.modu_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.abs_1'(s('type.realax.real','const.complex.IM_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6))))),s('type.realax.real','const.complex.modu_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.abs_1'(s('type.realax.real','const.complex.IM_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6))))),s('type.realax.real','const.complex.modu_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6))))))),
  file('thm.complex.RE_IM_LE_MODU|split|1','thm.complex.RE_IM_LE_MODU|split|1')).
fof(f435,plain,(
  ( ! [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.abs_1'(s('type.realax.real','const.complex.IM_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))))),s('type.realax.real','const.complex.modu_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))))))) )),
  inference(superposition,[],[f51,f434])).
fof(f434,plain,(
  ( ! [X0] : (s('type.realax.real','const.complex.modu_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.complex.IM_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.complex.RE_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) )),
  inference(forward_demodulation,[],[f40,f50])).
fof(f50,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X8,X9] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X8),s('type.realax.real',X9))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X9),s('type.realax.real',X8)))),
  file('thm.complex.RE_IM_LE_MODU|split|1','thm.realax.REAL_ADD_SYM')).
fof(f40,plain,(
  ( ! [X0] : (s('type.realax.real','const.complex.modu_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.complex.RE_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.complex.IM_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0] : s('type.realax.real','const.complex.modu_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.complex.RE_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.complex.IM_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : s('type.realax.real','const.complex.modu_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6))) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.complex.RE_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.complex.IM_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  file('thm.complex.RE_IM_LE_MODU|split|1','thm.complex.modu')).
fof(f51,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.abs_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1] : p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.abs_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X8,X9] : p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.abs_1'(s('type.realax.real',X8))),s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',X9),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  file('thm.complex.RE_IM_LE_MODU|split|1','thm.complex.COMPLEX_LEMMA2')).
% SZS output end Proof for thm.complex
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 23
% Passive clauses: 76
% Generated clauses: 391
% Final active clauses: 22
% Final passive clauses: 25
% Input formulas: 13
% Initial clauses: 17
% 
% Duplicate literals: 47
% Trivial inequalities: 14
% Fw subsumption resolutions: 37
% Fw demodulations: 2
% Bw demodulations: 1
% 
% Simple tautologies: 37
% Equational tautologies: 15
% Forward subsumptions: 169
% 
% Binary resolution: 18
% Forward superposition: 114
% Backward superposition: 81
% Self superposition: 26
% Equality factoring: 26
% Equality resolution: 5
% 
% Split clauses: 4
% Split components: 8
% SAT solver clauses: 16
% SAT solver unit clauses: 11
% SAT solver binary clauses: 5
% 
% Sat splits: 4
% 
% TWLsolver clauses: 16
% TWLsolver calls for satisfiability: 12
% 
% Memory used [KB]: 767
% Time elapsed: 0.019 s
% ------------------------------
% ------------------------------
% Success in time 0.021 s
