Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (108923)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 257
% Passive clauses: 2622
% Generated clauses: 26622
% Final active clauses: 245
% Final passive clauses: 2090
% Input formulas: 69
% Initial clauses: 130
% 
% Duplicate literals: 741
% Trivial inequalities: 463
% Fw subsumption resolutions: 3191
% Fw demodulations: 4136
% Bw demodulations: 12
% 
% Simple tautologies: 448
% Equational tautologies: 59
% Forward subsumptions: 14070
% Fw demodulations to eq. taut.: 85
% 
% Binary resolution: 403
% Factoring: 1
% Forward superposition: 9926
% Backward superposition: 7118
% Self superposition: 229
% Equality factoring: 120
% Equality resolution: 65
% 
% Split clauses: 303
% Split components: 607
% SAT solver clauses: 975
% SAT solver unit clauses: 39
% SAT solver binary clauses: 268
% 
% Sat splits: 303
% 
% TWLsolver clauses: 975
% TWLsolver calls for satisfiability: 194
% 
% Memory used [KB]: 15607
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (108955)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 289
% Passive clauses: 1148
% Generated clauses: 22128
% Final active clauses: 272
% Final passive clauses: 742
% Input formulas: 69
% Initial clauses: 130
% 
% Duplicate literals: 484
% Trivial inequalities: 215
% Fw subsumption resolutions: 2154
% Fw demodulations: 3669
% Bw demodulations: 133
% Condensations: 1338
% Global subsumptions: 5
% 
% Simple tautologies: 355
% Equational tautologies: 46
% Forward subsumptions: 11065
% Fw demodulations to eq. taut.: 35
% 
% Binary resolution: 790
% Factoring: 5
% Forward superposition: 5894
% Backward superposition: 5812
% Self superposition: 215
% Equality factoring: 100
% Equality resolution: 36
% 
% Split clauses: 56
% Split components: 113
% SAT solver clauses: 1714
% SAT solver unit clauses: 175
% SAT solver binary clauses: 56
% SAT solver learnt clauses: 10
% 
% Sat splits: 56
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1694
% TWLsolver calls for satisfiability: 957
% 
% Memory used [KB]: 18293
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f13742,plain,(
  $false),
  inference(subsumption_resolution,[],[f13696,f5138])).
fof(f5138,plain,(
  ( ! [X11] : (s('type.list.list'(sK4),'const.list.DROP_2'(s('type.num.num',sK6),s('type.list.list'(sK4),'const.list.APPEND_2'(s('type.list.list'(sK4),sK5),s('type.list.list'(sK4),X11))))) = s('type.list.list'(sK4),'const.list.APPEND_2'(s('type.list.list'(sK4),'const.list.NIL_0'),s('type.list.list'(sK4),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK4),sK5))))),s('type.list.list'(sK4),X11)))))) )),
  inference(superposition,[],[f321,f2493])).
fof(f2493,plain,(
  s('type.list.list'(sK4),'const.list.NIL_0') = s('type.list.list'(sK4),'const.list.DROP_2'(s('type.num.num',sK6),s('type.list.list'(sK4),sK5)))),
  inference(subsumption_resolution,[],[f2461,f248])).
fof(f248,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rich_list.DROP_APPEND2',aHL_TRUTH)).
fof(f2461,plain,(
  ~p(s(bool,'T_0')) | s('type.list.list'(sK4),'const.list.NIL_0') = s('type.list.list'(sK4),'const.list.DROP_2'(s('type.num.num',sK6),s('type.list.list'(sK4),sK5)))),
  inference(superposition,[],[f312,f408])).
fof(f408,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK4),sK5))),s('type.num.num',sK6)))),
  inference(unit_resulting_resolution,[],[f246,f267])).
fof(f267,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f201])).
fof(f201,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.rich_list.DROP_APPEND2','thm.bool.EQ_CLAUSES|split|0')).
fof(f246,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK4),sK5))),s('type.num.num',sK6))))),
  inference(cnf_transformation,[],[f198])).
fof(f198,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK4),sK5))),s('type.num.num',sK6)))) & s('type.list.list'(sK4),'const.list.DROP_2'(s('type.num.num',sK6),s('type.list.list'(sK4),'const.list.APPEND_2'(s('type.list.list'(sK4),sK5),s('type.list.list'(sK4),sK7))))) != s('type.list.list'(sK4),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK4),sK5))))),s('type.list.list'(sK4),sK7)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4,sK5,sK6,sK7])],[f172])).
fof(f172,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) & ? [X3] : s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))))) != s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),s('type.list.list'(X0),X3))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) => ! [X3] : s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) => ! [X3] : s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num',X8)))) => ! [X9] : s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X8),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))),s('type.list.list'(X6),X9))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num',X8)))) => ! [X9] : s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X8),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))),s('type.list.list'(X6),X9))))),
  file('thm.rich_list.DROP_APPEND2','thm.rich_list.DROP_APPEND2')).
fof(f312,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X2),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),
  inference(ennf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) => s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),
  inference(flattening,[],[f130])).
fof(f130,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) => s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X15,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X15))),s('type.num.num',X8)))) => s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X8),s('type.list.list'(X6),X15))))),
  file('thm.rich_list.DROP_APPEND2','thm.list.DROP_LENGTH_TOO_LONG')).
fof(f321,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.list.list'(X0),X3)))))) )),
  inference(cnf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f148])).
fof(f148,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X8,X7,X9] : s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X8),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X8),s('type.list.list'(X6),X7))),s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))),s('type.list.list'(X6),X9)))))),
  file('thm.rich_list.DROP_APPEND2','thm.rich_list.DROP_APPEND')).
fof(f13696,plain,(
  s('type.list.list'(sK4),'const.list.DROP_2'(s('type.num.num',sK6),s('type.list.list'(sK4),'const.list.APPEND_2'(s('type.list.list'(sK4),sK5),s('type.list.list'(sK4),sK7))))) != s('type.list.list'(sK4),'const.list.APPEND_2'(s('type.list.list'(sK4),'const.list.NIL_0'),s('type.list.list'(sK4),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK4),sK5))))),s('type.list.list'(sK4),sK7)))))),
  inference(unit_resulting_resolution,[],[f247,f3425])).
fof(f3425,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'(X3),X4) != s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),'const.list.NIL_0'),s('type.list.list'(X3),X5))) | s('type.list.list'(X3),X4) = s('type.list.list'(X3),X5)) )),
  inference(superposition,[],[f322,f299])).
fof(f299,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f113])).
fof(f113,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X13] : ! [X15] : s('type.list.list'(X13),X15) = s('type.list.list'(X13),'const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X15)))),
  file('thm.rich_list.DROP_APPEND2','thm.rich_list.APPEND_NIL|split|1')).
fof(f322,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3)) )),
  inference(cnf_transformation,[],[f225])).
fof(f225,plain,(
  ! [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3)) & (s('type.list.list'(X0),X2) != s('type.list.list'(X0),X3) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3)))))),
  inference(nnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0,X1,X2,X3] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) <=> s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3))),
  inference(flattening,[],[f150])).
fof(f150,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) <=> s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6] : ! [X7,X9,X19] : (s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X19))) <=> s('type.list.list'(X6),X9) = s('type.list.list'(X6),X19))),
  file('thm.rich_list.DROP_APPEND2','thm.list.APPEND_|49||49||split|0')).
fof(f247,plain,(
  s('type.list.list'(sK4),'const.list.DROP_2'(s('type.num.num',sK6),s('type.list.list'(sK4),'const.list.APPEND_2'(s('type.list.list'(sK4),sK5),s('type.list.list'(sK4),sK7))))) != s('type.list.list'(sK4),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK4),sK5))))),s('type.list.list'(sK4),sK7)))),
  inference(cnf_transformation,[],[f198])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 350
% Passive clauses: 1301
% Generated clauses: 13802
% Final active clauses: 316
% Final passive clauses: 530
% Input formulas: 69
% Initial clauses: 130
% 
% Duplicate literals: 73
% Trivial inequalities: 34
% Fw subsumption resolutions: 559
% Fw demodulations: 1906
% Bw demodulations: 417
% Condensations: 121
% Global subsumptions: 123
% 
% Simple tautologies: 46
% Equational tautologies: 49
% Forward subsumptions: 8798
% Fw demodulations to eq. taut.: 128
% Bw demodulations to eq. taut.: 4
% 
% Unit resulting resolution: 3480
% Factoring: 1
% Forward superposition: 4052
% Backward superposition: 2451
% Self superposition: 83
% Equality factoring: 26
% Equality resolution: 11
% 
% Split clauses: 14
% Split components: 34
% SAT solver clauses: 2074
% SAT solver unit clauses: 1420
% SAT solver binary clauses: 425
% 
% Sat splits: 14
% Sat splitting refutations: 620
% 
% Memory used [KB]: 11001
% Time elapsed: 0.422 s
% ------------------------------
% ------------------------------
% Success in time 1.75 s
