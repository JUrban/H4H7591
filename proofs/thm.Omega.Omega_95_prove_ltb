Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.Omega
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.Omega
% SZS output start Proof for thm.Omega
fof(f1967,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1966,f132,f229,f227,f1965])).
fof(f1965,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f229,f134])).
fof(f134,plain,(
  ( ! [X6,X4,X2,X7,X5,X3,X1] : (s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),sK6) != s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X1),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X3),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X4),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',X5),s('type.integer.int',X6))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X7)))))))))))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  (s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),sK6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',sK7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',sK8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK10),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) | s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),sK6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',sK11),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',sK12),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK14),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',sK15),s('type.integer.int',sK16))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK17)))))))))))) & ! [X8,X9,X10,X11] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),sK6) != s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X8),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X10),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X11),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) & ! [X1,X2,X3,X4,X5,X6,X7] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),sK6) != s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X1),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X3),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X4),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',X5),s('type.integer.int',X6))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X7)))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16,sK17])],[f89])).
fof(f89,plain,(
  ? [X0] : ((? [X19,X20,X21,X22] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X19),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X20),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X21),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X22),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) | ? [X12,X13,X14,X15,X16,X17,X18] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X12),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X14),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X15),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',X16),s('type.integer.int',X17))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X18)))))))))))) & ! [X8,X9,X10,X11] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) != s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X8),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X10),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X11),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) & ! [X1,X2,X3,X4,X5,X6,X7] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) != s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X1),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X3),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X4),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',X5),s('type.integer.int',X6))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X7))))))))))))),
  inference(rectify,[],[f64])).
fof(f64,plain,(
  ? [X0] : ((? [X8,X9,X10,X11] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X8),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X10),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X11),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) | ? [X1,X2,X3,X4,X5,X6,X7] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X1),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X3),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X4),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',X5),s('type.integer.int',X6))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X7)))))))))))) & ! [X19,X20,X21,X22] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) != s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X19),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X20),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X21),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X22),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) & ! [X12,X13,X14,X15,X16,X17,X18] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) != s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X12),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X14),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X15),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',X16),s('type.integer.int',X17))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X18))))))))))))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ? [X0] : ((? [X8,X9,X10,X11] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X8),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X10),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X11),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) | ? [X1,X2,X3,X4,X5,X6,X7] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X1),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X3),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X4),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',X5),s('type.integer.int',X6))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X7)))))))))))) & (! [X19,X20,X21,X22] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) != s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X19),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X20),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X21),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X22),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) & ! [X12,X13,X14,X15,X16,X17,X18] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) != s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X12),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X14),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X15),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',X16),s('type.integer.int',X17))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X18)))))))))))))),
  inference(ennf_transformation,[],[f28])).
fof(f28,plain,(
  ~! [X0] : ((? [X8,X9,X10,X11] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X8),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X10),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X11),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) | ? [X1,X2,X3,X4,X5,X6,X7] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X1),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X3),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X4),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',X5),s('type.integer.int',X6))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X7)))))))))))) => (? [X19,X20,X21,X22] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X19),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X20),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X21),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X22),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) | ? [X12,X13,X14,X15,X16,X17,X18] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X0) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X12),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X14),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X15),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',X16),s('type.integer.int',X17))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X18)))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7,X8,X9,X10] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X10),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) | ? [X7,X8,X9,X10,X11,X12,X13] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X10),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',X11),s('type.integer.int',X12))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X13)))))))))))) => (? [X7,X8,X9,X10] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X10),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) | ? [X7,X8,X9,X10,X11,X12,X13] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X10),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',X11),s('type.integer.int',X12))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X13)))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7,X8,X9,X10] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X10),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) | ? [X7,X8,X9,X10,X11,X12,X13] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X10),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',X11),s('type.integer.int',X12))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X13)))))))))))) => (? [X7,X8,X9,X10] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X10),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) | ? [X7,X8,X9,X10,X11,X12,X13] : s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),X6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X10),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',X11),s('type.integer.int',X12))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X13)))))))))))))),
  file('thm.Omega.Omega_95_prove_ltb','thm.Omega.Omega_95_prove_ltb')).
fof(f227,plain,(
  s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),sK6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',sK7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',sK8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK10),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) | $spl0),
  inference(cnf_transformation,[],[f227_D])).
fof(f227_D,plain,(
  s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),sK6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',sK7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',sK8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK10),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0'))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f229,plain,(
  s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),sK6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',sK11),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',sK12),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK14),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',sK15),s('type.integer.int',sK16))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK17))))))))))) | $spl2),
  inference(cnf_transformation,[],[f229_D])).
fof(f229_D,plain,(
  s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),sK6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',sK11),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',sK12),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK14),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',sK15),s('type.integer.int',sK16))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK17))))))))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f132,plain,(
  s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),sK6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',sK11),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',sK12),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK14),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.integer.int'),'const.pair.,_2'(s('type.num.num',sK15),s('type.integer.int',sK16))),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK17))))))))))) | s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),sK6) = s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',sK7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',sK8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),sK10),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0')))))))))),
  inference(cnf_transformation,[],[f90])).
fof(f1966,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f227,f133])).
fof(f133,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),sK6) != s('type.pair.prod'('type.integer.int','type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))))),'const.pair.,_2'(s('type.integer.int',X8),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))))),'const.pair.,_2'(s('type.num.num',X9),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X10),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'type.list.list'('type.pair.prod'('type.num.num','type.integer.int'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),X11),s('type.list.list'('type.pair.prod'('type.num.num','type.integer.int')),'const.list.NIL_0')))))))))) )),
  inference(cnf_transformation,[],[f90])).
% SZS output end Proof for thm.Omega
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 174
% Passive clauses: 688
% Generated clauses: 1828
% Final active clauses: 174
% Final passive clauses: 454
% Input formulas: 26
% Initial clauses: 93
% 
% Duplicate literals: 39
% Trivial inequalities: 13
% Fw subsumption resolutions: 134
% 
% Simple tautologies: 60
% Equational tautologies: 11
% Forward subsumptions: 864
% 
% Binary resolution: 1181
% Factoring: 200
% Forward superposition: 86
% Backward superposition: 51
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 43
% Split components: 87
% SAT solver clauses: 80
% SAT solver unit clauses: 8
% SAT solver binary clauses: 30
% SAT solver learnt clauses: 1
% 
% Sat splits: 43
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 79
% TWLsolver calls for satisfiability: 59
% 
% Memory used [KB]: 1407
% Time elapsed: 0.044 s
% ------------------------------
% ------------------------------
% Success in time 0.047 s
