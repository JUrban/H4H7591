Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f4208,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f4207])).
fof(f4207,plain,(
  s(sK0,'const.rich_list.ELL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK3))) != s(sK0,'const.rich_list.ELL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK3)))),
  inference(superposition,[],[f25,f1920])).
fof(f1920,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,'const.rich_list.ELL_2'(s('type.num.num',X0),s('type.list.list'(X1),X2))) = s(X1,'const.rich_list.ELL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.list.list'(X1),'const.list.SNOC_2'(s(X1,X3),s('type.list.list'(X1),X2)))))) )),
  inference(forward_demodulation,[],[f1919,f29])).
fof(f29,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10)))))),
  file('thm.rich_list.ELL_SUC_SNOC','thm.prim_rec.PRE|split|1')).
fof(f1919,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,'const.rich_list.ELL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))),s('type.list.list'(X1),X2))) = s(X1,'const.rich_list.ELL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.list.list'(X1),'const.list.SNOC_2'(s(X1,X3),s('type.list.list'(X1),X2)))))) )),
  inference(subsumption_resolution,[],[f1892,f26])).
fof(f26,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rich_list.ELL_SUC_SNOC',aHL_TRUTH)).
fof(f1892,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s(X1,'const.rich_list.ELL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))),s('type.list.list'(X1),X2))) = s(X1,'const.rich_list.ELL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.list.list'(X1),'const.list.SNOC_2'(s(X1,X3),s('type.list.list'(X1),X2)))))) )),
  inference(superposition,[],[f32,f45])).
fof(f45,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(subsumption_resolution,[],[f42,f28])).
fof(f28,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.rich_list.ELL_SUC_SNOC',aHL_FALSITY)).
fof(f42,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f30,f31])).
fof(f31,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.rich_list.ELL_SUC_SNOC',aHL_BOOL_CASES)).
fof(f30,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(cnf_transformation,[],[f15])).
fof(f15,plain,(
  ! [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X7] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))),
  file('thm.rich_list.ELL_SUC_SNOC','thm.prim_rec.LESS_|48|')).
fof(f32,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) | s(X0,'const.rich_list.ELL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X1))),s('type.list.list'(X0),X3))) = s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X2),s('type.list.list'(X0),X3)))))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) | ! [X2,X3] : s(X0,'const.rich_list.ELL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X1))),s('type.list.list'(X0),X3))) = s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X2),s('type.list.list'(X0),X3))))))),
  inference(ennf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) => ! [X2,X3] : s(X0,'const.rich_list.ELL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X1))),s('type.list.list'(X0),X3))) = s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X2),s('type.list.list'(X0),X3))))))),
  inference(flattening,[],[f16])).
fof(f16,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) => ! [X2,X3] : s(X0,'const.rich_list.ELL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X1))),s('type.list.list'(X0),X3))) = s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X2),s('type.list.list'(X0),X3))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) => ! [X8,X9] : s(X6,'const.rich_list.ELL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X7))),s('type.list.list'(X6),X9))) = s(X6,'const.rich_list.ELL_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X8),s('type.list.list'(X6),X9))))))),
  file('thm.rich_list.ELL_SUC_SNOC','thm.rich_list.ELL_SNOC')).
fof(f25,plain,(
  s(sK0,'const.rich_list.ELL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK3))) != s(sK0,'const.rich_list.ELL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK2),s('type.list.list'(sK0),sK3)))))),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  s(sK0,'const.rich_list.ELL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK3))) != s(sK0,'const.rich_list.ELL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.list.list'(sK0),'const.list.SNOC_2'(s(sK0,sK2),s('type.list.list'(sK0),sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f20])).
fof(f20,plain,(
  ? [X0,X1,X2,X3] : s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),X3))) != s(X0,'const.rich_list.ELL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X2),s('type.list.list'(X0),X3)))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0,X1,X2,X3] : s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),X3))) = s(X0,'const.rich_list.ELL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X2),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f11])).
fof(f11,plain,(
  ~! [X0] : ! [X1,X2,X3] : s(X0,'const.rich_list.ELL_2'(s('type.num.num',X1),s('type.list.list'(X0),X3))) = s(X0,'const.rich_list.ELL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X2),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : s(X6,'const.rich_list.ELL_2'(s('type.num.num',X7),s('type.list.list'(X6),X9))) = s(X6,'const.rich_list.ELL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X8),s('type.list.list'(X6),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : s(X6,'const.rich_list.ELL_2'(s('type.num.num',X7),s('type.list.list'(X6),X9))) = s(X6,'const.rich_list.ELL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X8),s('type.list.list'(X6),X9)))))),
  file('thm.rich_list.ELL_SUC_SNOC','thm.rich_list.ELL_SUC_SNOC')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 37
% Passive clauses: 738
% Generated clauses: 3865
% Final active clauses: 32
% Final passive clauses: 642
% Input formulas: 9
% Initial clauses: 9
% 
% Duplicate literals: 444
% Trivial inequalities: 50
% Fw subsumption resolutions: 249
% Fw demodulations: 19
% Bw demodulations: 2
% 
% Simple tautologies: 105
% Equational tautologies: 82
% Forward subsumptions: 1558
% 
% Binary resolution: 14
% Forward superposition: 1479
% Backward superposition: 1227
% Self superposition: 249
% Equality factoring: 212
% Equality resolution: 1
% 
% Split clauses: 252
% Split components: 506
% SAT solver clauses: 632
% SAT solver unit clauses: 65
% SAT solver binary clauses: 318
% 
% Sat splits: 252
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 632
% TWLsolver calls for satisfiability: 24
% 
% Memory used [KB]: 2302
% Time elapsed: 0.149 s
% ------------------------------
% ------------------------------
% Success in time 0.15 s
