Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.rich_list
% (68229)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 168
% Passive clauses: 3734
% Generated clauses: 23632
% Final active clauses: 138
% Final passive clauses: 3267
% Input formulas: 29
% Initial clauses: 60
% 
% Duplicate literals: 702
% Trivial inequalities: 384
% Fw subsumption resolutions: 2851
% Fw demodulations: 3913
% Bw demodulations: 26
% 
% Simple tautologies: 345
% Equational tautologies: 42
% Forward subsumptions: 10883
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 593
% Factoring: 4
% Forward superposition: 8184
% Backward superposition: 6519
% Self superposition: 156
% Equality factoring: 74
% Equality resolution: 47
% 
% Split clauses: 477
% Split components: 980
% SAT solver clauses: 986
% SAT solver unit clauses: 20
% SAT solver binary clauses: 145
% 
% Sat splits: 477
% 
% TWLsolver clauses: 973
% TWLsolver calls for satisfiability: 177
% 
% Memory used [KB]: 13048
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 294 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (68242)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 132
% Passive clauses: 904
% Generated clauses: 12590
% Final active clauses: 116
% Final passive clauses: 740
% Input formulas: 29
% Initial clauses: 60
% 
% Duplicate literals: 599
% Trivial inequalities: 173
% Fw subsumption resolutions: 702
% Fw demodulations: 921
% Bw demodulations: 36
% Condensations: 1010
% Global subsumptions: 5
% 
% Simple tautologies: 184
% Equational tautologies: 38
% Forward subsumptions: 6052
% 
% Binary resolution: 218
% Factoring: 1
% Forward superposition: 4443
% Backward superposition: 3209
% Self superposition: 117
% Equality factoring: 69
% Equality resolution: 38
% 
% Split clauses: 133
% Split components: 280
% SAT solver clauses: 1688
% SAT solver unit clauses: 65
% SAT solver binary clauses: 49
% SAT solver learnt clauses: 10
% 
% Sat splits: 133
% Sat splitting refutations: 12
% 
% TWLsolver clauses: 1668
% TWLsolver calls for satisfiability: 343
% 
% Memory used [KB]: 11769
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f16502,plain,(
  $false),
  inference(equality_resolution,[],[f15661])).
fof(f15661,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.TAKE_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK3))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.TAKE_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK3)))))))) )),
  inference(backward_demodulation,[],[f15660,f537])).
fof(f537,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.TAKE_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK3))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK3)))))))) )),
  inference(unit_resulting_resolution,[],[f105,f148])).
fof(f148,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))) & (s(X0,X1) != s(X0,X3) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f100])).
fof(f100,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))) & ((s(X0,X1) != s(X0,X3) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4)) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(nnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) <=> (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) <=> (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : ! [X20,X21,X22,X23] : (s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),X21))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X22),s('type.list.list'(X6),X23))) <=> (s(X6,X20) = s(X6,X22) & s('type.list.list'(X6),X21) = s('type.list.list'(X6),X23)))),
  file('thm.rich_list.TAKE|split|1','thm.list.list_|49||49|')).
fof(f105,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.TAKE_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK3))))) != s('type.list.list'(sK0),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK3)))))),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.TAKE_2'(s('type.num.num',sK1),s('type.list.list'(sK0),sK3))))) != s('type.list.list'(sK0),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f71])).
fof(f71,plain,(
  ? [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X3))))) != s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))),
  inference(ennf_transformation,[],[f32])).
fof(f32,plain,(
  ~! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ~! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X9)))))),
  file('thm.rich_list.TAKE|split|1','thm.rich_list.TAKE|split|1')).
fof(f15660,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X5),s('type.list.list'(X7),'const.list.TAKE_2'(s('type.num.num',X6),s('type.list.list'(X7),X4))))) = s('type.list.list'(X7),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X5),s('type.list.list'(X7),X4)))))) )),
  inference(forward_demodulation,[],[f15659,f140])).
fof(f140,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6] : ! [X11,X12] : s(X6,X12) = s(X6,'const.bool.COND_3'(s(bool,'F_0'),s(X6,X11),s(X6,X12)))),
  file('thm.rich_list.TAKE|split|1','thm.bool.COND_CLAUSES|split|1')).
fof(f15659,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(X7),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X5),s('type.list.list'(X7),X4))))) = s('type.list.list'(X7),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X7),'const.list.NIL_0'),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X5),s('type.list.list'(X7),'const.list.TAKE_2'(s('type.num.num',X6),s('type.list.list'(X7),X4)))))))) )),
  inference(forward_demodulation,[],[f14413,f109])).
fof(f109,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.rich_list.TAKE|split|1','thm.arithmetic.SUC_SUB|49|')).
fof(f14413,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(X7),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X5),s('type.list.list'(X7),X4))))) = s('type.list.list'(X7),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X7),'const.list.NIL_0'),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X5),s('type.list.list'(X7),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X7),X4)))))))) )),
  inference(superposition,[],[f146,f207])).
fof(f207,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,sK4(X0,X1,'const.num.SUC_1'(s('type.num.num',X2)),X3))) )),
  inference(unit_resulting_resolution,[],[f197,f117])).
fof(f117,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X13] : (s(bool,'F_0') = s(bool,X13) <=> ~p(s(bool,X13)))),
  file('thm.rich_list.TAKE|split|1','thm.bool.EQ_CLAUSES|split|3')).
fof(f197,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,sK4(X0,X1,'const.num.SUC_1'(s('type.num.num',X2)),X3)))) )),
  inference(unit_resulting_resolution,[],[f135,f144])).
fof(f144,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,sK4(X3,X2,X1,X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,sK4(X3,X2,X1,X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | p(s(bool,sK4(X3,X2,X1,X0)))) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,sK4(X3,X2,X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((~p(s(bool,X4)) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | p(s(bool,X4))) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : (((~p(s(bool,X4)) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | p(s(bool,X4)))) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(nnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ! [X0] : ! [X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : ! [X7,X8,X24] : ? [X25] : ((p(s(bool,X25)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X7)) & s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X24))))) = s('type.list.list'(X6),'const.bool.COND_3'(s(bool,X25),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X6),X24))))))))),
  file('thm.rich_list.TAKE|split|1','thm.list.TAKE_def|split|1')).
fof(f135,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X7] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),
  file('thm.rich_list.TAKE|split|1','thm.num.NOT_SUC')).
fof(f146,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,sK4(X3,X2,X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3)))))))) )),
  inference(cnf_transformation,[],[f99])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 80
% Passive clauses: 416
% Generated clauses: 16397
% Final active clauses: 55
% Final passive clauses: 217
% Input formulas: 29
% Initial clauses: 60
% 
% Duplicate literals: 241
% Trivial inequalities: 35
% Fw subsumption resolutions: 242
% Fw demodulations: 8545
% Bw demodulations: 110
% Condensations: 369
% Global subsumptions: 1
% 
% Simple tautologies: 92
% Equational tautologies: 74
% Forward subsumptions: 3677
% Fw demodulations to eq. taut.: 2652
% Bw demodulations to eq. taut.: 2
% 
% Unit resulting resolution: 4189
% Factoring: 1
% Forward superposition: 1264
% Backward superposition: 1097
% Self superposition: 74
% Equality factoring: 56
% Equality resolution: 16
% 
% Split clauses: 7
% Split components: 16
% SAT solver clauses: 478
% SAT solver unit clauses: 109
% SAT solver binary clauses: 137
% 
% Sat splits: 7
% Sat splitting refutations: 45
% 
% Memory used [KB]: 7291
% Time elapsed: 0.404 s
% ------------------------------
% ------------------------------
% Success in time 1.702 s
